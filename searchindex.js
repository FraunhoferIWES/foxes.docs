Search.setIndex({"titles": ["foxes.algorithms.Downwind", "foxes.algorithms.Downwind.__init__", "foxes.algorithms.Downwind.all_models", "foxes.algorithms.Downwind.calc_farm", "foxes.algorithms.Downwind.calc_points", "foxes.algorithms.Downwind.finalize", "foxes.algorithms.Downwind.get_model", "foxes.algorithms.Downwind.init_states", "foxes.algorithms.Downwind.initialize", "foxes.algorithms.Iterative", "foxes.algorithms.Iterative.__init__", "foxes.algorithms.Iterative.calc_farm", "foxes.algorithms.Iterative.get_model", "foxes.algorithms.Iterative.iterations", "foxes.algorithms.Iterative.set_urelax", "foxes.algorithms.Iterative.urelax", "foxes.algorithms.Sequential", "foxes.algorithms.Sequential.__init__", "foxes.algorithms.Sequential.__iter__", "foxes.algorithms.Sequential.__next__", "foxes.algorithms.Sequential.calc_farm", "foxes.algorithms.Sequential.calc_points", "foxes.algorithms.Sequential.counter", "foxes.algorithms.Sequential.cur_farm_results", "foxes.algorithms.Sequential.cur_point_results", "foxes.algorithms.Sequential.farm_results", "foxes.algorithms.Sequential.fdata", "foxes.algorithms.Sequential.get_model", "foxes.algorithms.Sequential.index", "foxes.algorithms.Sequential.iterating", "foxes.algorithms.Sequential.mdata", "foxes.algorithms.Sequential.pdata", "foxes.algorithms.Sequential.point_results", "foxes.algorithms.Sequential.size", "foxes.algorithms.Sequential.weight", "foxes.algorithms.downwind.models.CalcOrder", "foxes.algorithms.downwind.models.CalcOrder.calculate", "foxes.algorithms.downwind.models.CalcOrder.initialize", "foxes.algorithms.downwind.models.CalcOrder.output_farm_vars", "foxes.algorithms.downwind.models.CalcOrder.sub_models", "foxes.algorithms.downwind.models.FarmWakesCalculation", "foxes.algorithms.downwind.models.FarmWakesCalculation.__init__", "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate", "foxes.algorithms.downwind.models.FarmWakesCalculation.initialize", "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.downwind.models.FarmWakesCalculation.sub_models", "foxes.algorithms.downwind.models.PointWakesCalculation", "foxes.algorithms.downwind.models.PointWakesCalculation.__init__", "foxes.algorithms.downwind.models.PointWakesCalculation.calculate", "foxes.algorithms.downwind.models.PointWakesCalculation.contribute_to_wake_deltas", "foxes.algorithms.downwind.models.PointWakesCalculation.initialize", "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars", "foxes.algorithms.downwind.models.PointWakesCalculation.sub_models", "foxes.algorithms.downwind.models.SetAmbFarmResults", "foxes.algorithms.downwind.models.SetAmbFarmResults.__init__", "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate", "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbPointResults", "foxes.algorithms.downwind.models.SetAmbPointResults.__init__", "foxes.algorithms.downwind.models.SetAmbPointResults.calculate", "foxes.algorithms.downwind.models.SetAmbPointResults.initialize", "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars", "foxes.algorithms.iterative.ConvCrit", "foxes.algorithms.iterative.ConvCrit.__init__", "foxes.algorithms.iterative.ConvCrit.check_converged", "foxes.algorithms.iterative.ConvCrit.get_deltas", "foxes.algorithms.iterative.ConvCritList", "foxes.algorithms.iterative.ConvCritList.__init__", "foxes.algorithms.iterative.ConvCritList.add_crit", "foxes.algorithms.iterative.ConvCritList.check_converged", "foxes.algorithms.iterative.ConvCritList.get_deltas", "foxes.algorithms.iterative.ConvVarDelta", "foxes.algorithms.iterative.ConvVarDelta.__init__", "foxes.algorithms.iterative.ConvVarDelta.check_converged", "foxes.algorithms.iterative.ConvVarDelta.get_deltas", "foxes.algorithms.iterative.DefaultConv", "foxes.algorithms.iterative.DefaultConv.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation", "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate", "foxes.algorithms.iterative.models.FarmWakesCalculation.initialize", "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.iterative.models.FarmWakesCalculation.sub_models", "foxes.algorithms.iterative.models.URelax", "foxes.algorithms.iterative.models.URelax.__init__", "foxes.algorithms.iterative.models.URelax.calculate", "foxes.algorithms.iterative.models.URelax.output_farm_vars", "foxes.algorithms.sequential.SequentialPlugin", "foxes.algorithms.sequential.SequentialPlugin.__init__", "foxes.algorithms.sequential.SequentialPlugin.finalize", "foxes.algorithms.sequential.SequentialPlugin.initialize", "foxes.algorithms.sequential.SequentialPlugin.update", "foxes.algorithms.sequential.models.SeqState", "foxes.algorithms.sequential.models.SeqState.__init__", "foxes.algorithms.sequential.models.SeqState.calculate", "foxes.algorithms.sequential.models.SeqState.counter", "foxes.algorithms.sequential.models.SeqState.index", "foxes.algorithms.sequential.models.SeqState.initialize", "foxes.algorithms.sequential.models.SeqState.output_point_vars", "foxes.algorithms.sequential.models.SeqState.size", "foxes.algorithms.sequential.models.SeqState.sub_models", "foxes.algorithms.sequential.models.SeqState.weights", "foxes.constants.AMB_RPOINT_RESULTS", "foxes.constants.DTYPE", "foxes.constants.DTYPE.T", "foxes.constants.DTYPE.__abs__", "foxes.constants.DTYPE.__add__", "foxes.constants.DTYPE.__and__", "foxes.constants.DTYPE.__array__", "foxes.constants.DTYPE.__array_interface__", "foxes.constants.DTYPE.__array_priority__", "foxes.constants.DTYPE.__array_struct__", "foxes.constants.DTYPE.__array_wrap__", "foxes.constants.DTYPE.__bool__", "foxes.constants.DTYPE.__class_getitem__", "foxes.constants.DTYPE.__divmod__", "foxes.constants.DTYPE.__eq__", "foxes.constants.DTYPE.__float__", "foxes.constants.DTYPE.__floordiv__", "foxes.constants.DTYPE.__format__", "foxes.constants.DTYPE.__ge__", "foxes.constants.DTYPE.__getitem__", "foxes.constants.DTYPE.__gt__", "foxes.constants.DTYPE.__hash__", "foxes.constants.DTYPE.__int__", "foxes.constants.DTYPE.__invert__", "foxes.constants.DTYPE.__le__", "foxes.constants.DTYPE.__lshift__", "foxes.constants.DTYPE.__lt__", "foxes.constants.DTYPE.__mod__", "foxes.constants.DTYPE.__mul__", "foxes.constants.DTYPE.__ne__", "foxes.constants.DTYPE.__neg__", "foxes.constants.DTYPE.__new__", "foxes.constants.DTYPE.__or__", "foxes.constants.DTYPE.__pos__", "foxes.constants.DTYPE.__pow__", "foxes.constants.DTYPE.__radd__", "foxes.constants.DTYPE.__rand__", "foxes.constants.DTYPE.__rdivmod__", "foxes.constants.DTYPE.__reduce__", "foxes.constants.DTYPE.__repr__", "foxes.constants.DTYPE.__rfloordiv__", "foxes.constants.DTYPE.__rlshift__", "foxes.constants.DTYPE.__rmod__", "foxes.constants.DTYPE.__rmul__", "foxes.constants.DTYPE.__ror__", "foxes.constants.DTYPE.__rpow__", "foxes.constants.DTYPE.__rrshift__", "foxes.constants.DTYPE.__rshift__", "foxes.constants.DTYPE.__rsub__", "foxes.constants.DTYPE.__rtruediv__", "foxes.constants.DTYPE.__rxor__", "foxes.constants.DTYPE.__sizeof__", "foxes.constants.DTYPE.__str__", "foxes.constants.DTYPE.__sub__", "foxes.constants.DTYPE.__truediv__", "foxes.constants.DTYPE.__xor__", "foxes.constants.DTYPE.all", "foxes.constants.DTYPE.any", "foxes.constants.DTYPE.argmax", "foxes.constants.DTYPE.argmin", "foxes.constants.DTYPE.argsort", "foxes.constants.DTYPE.as_integer_ratio", "foxes.constants.DTYPE.astype", "foxes.constants.DTYPE.base", "foxes.constants.DTYPE.byteswap", "foxes.constants.DTYPE.choose", "foxes.constants.DTYPE.clip", "foxes.constants.DTYPE.compress", "foxes.constants.DTYPE.conj", "foxes.constants.DTYPE.conjugate", "foxes.constants.DTYPE.copy", "foxes.constants.DTYPE.cumprod", "foxes.constants.DTYPE.cumsum", "foxes.constants.DTYPE.data", "foxes.constants.DTYPE.diagonal", "foxes.constants.DTYPE.dtype", "foxes.constants.DTYPE.dump", "foxes.constants.DTYPE.dumps", "foxes.constants.DTYPE.fill", "foxes.constants.DTYPE.flags", "foxes.constants.DTYPE.flat", "foxes.constants.DTYPE.flatten", "foxes.constants.DTYPE.getfield", "foxes.constants.DTYPE.imag", "foxes.constants.DTYPE.is_integer", "foxes.constants.DTYPE.item", "foxes.constants.DTYPE.itemset", "foxes.constants.DTYPE.itemsize", "foxes.constants.DTYPE.max", "foxes.constants.DTYPE.mean", "foxes.constants.DTYPE.min", "foxes.constants.DTYPE.nbytes", "foxes.constants.DTYPE.ndim", "foxes.constants.DTYPE.newbyteorder", "foxes.constants.DTYPE.nonzero", "foxes.constants.DTYPE.prod", "foxes.constants.DTYPE.ptp", "foxes.constants.DTYPE.put", "foxes.constants.DTYPE.ravel", "foxes.constants.DTYPE.real", "foxes.constants.DTYPE.repeat", "foxes.constants.DTYPE.reshape", "foxes.constants.DTYPE.resize", "foxes.constants.DTYPE.round", "foxes.constants.DTYPE.searchsorted", "foxes.constants.DTYPE.setfield", "foxes.constants.DTYPE.setflags", "foxes.constants.DTYPE.shape", "foxes.constants.DTYPE.size", "foxes.constants.DTYPE.sort", "foxes.constants.DTYPE.squeeze", "foxes.constants.DTYPE.std", "foxes.constants.DTYPE.strides", "foxes.constants.DTYPE.sum", "foxes.constants.DTYPE.swapaxes", "foxes.constants.DTYPE.take", "foxes.constants.DTYPE.tobytes", "foxes.constants.DTYPE.tofile", "foxes.constants.DTYPE.tolist", "foxes.constants.DTYPE.tostring", "foxes.constants.DTYPE.trace", "foxes.constants.DTYPE.transpose", "foxes.constants.DTYPE.var", "foxes.constants.DTYPE.view", "foxes.constants.FARM", "foxes.constants.GW", "foxes.constants.ITYPE", "foxes.constants.ITYPE.__abs__", "foxes.constants.ITYPE.__add__", "foxes.constants.ITYPE.__and__", "foxes.constants.ITYPE.__bool__", "foxes.constants.ITYPE.__class_getitem__", "foxes.constants.ITYPE.__divmod__", "foxes.constants.ITYPE.__eq__", "foxes.constants.ITYPE.__float__", "foxes.constants.ITYPE.__floordiv__", "foxes.constants.ITYPE.__ge__", "foxes.constants.ITYPE.__gt__", "foxes.constants.ITYPE.__hash__", "foxes.constants.ITYPE.__index__", "foxes.constants.ITYPE.__int__", "foxes.constants.ITYPE.__invert__", "foxes.constants.ITYPE.__le__", "foxes.constants.ITYPE.__lshift__", "foxes.constants.ITYPE.__lt__", "foxes.constants.ITYPE.__mod__", "foxes.constants.ITYPE.__mul__", "foxes.constants.ITYPE.__ne__", "foxes.constants.ITYPE.__neg__", "foxes.constants.ITYPE.__new__", "foxes.constants.ITYPE.__or__", "foxes.constants.ITYPE.__pos__", "foxes.constants.ITYPE.__pow__", "foxes.constants.ITYPE.__radd__", "foxes.constants.ITYPE.__rand__", "foxes.constants.ITYPE.__rdivmod__", "foxes.constants.ITYPE.__repr__", "foxes.constants.ITYPE.__rfloordiv__", "foxes.constants.ITYPE.__rlshift__", "foxes.constants.ITYPE.__rmod__", "foxes.constants.ITYPE.__rmul__", "foxes.constants.ITYPE.__ror__", "foxes.constants.ITYPE.__rpow__", "foxes.constants.ITYPE.__rrshift__", "foxes.constants.ITYPE.__rshift__", "foxes.constants.ITYPE.__rsub__", "foxes.constants.ITYPE.__rtruediv__", "foxes.constants.ITYPE.__rxor__", "foxes.constants.ITYPE.__str__", "foxes.constants.ITYPE.__sub__", "foxes.constants.ITYPE.__truediv__", "foxes.constants.ITYPE.__xor__", "foxes.constants.ITYPE.bit_count", "foxes.constants.ITYPE.denominator", "foxes.constants.ITYPE.is_integer", "foxes.constants.ITYPE.numerator", "foxes.constants.KAPPA", "foxes.constants.MW", "foxes.constants.POINT", "foxes.constants.POINTS", "foxes.constants.POP", "foxes.constants.P_UNITS", "foxes.constants.RPOINT", "foxes.constants.RPOINTS", "foxes.constants.RWEIGHTS", "foxes.constants.STATE", "foxes.constants.STATES_SEL", "foxes.constants.STATE_POINT", "foxes.constants.STATE_SOURCE_TURBINE", "foxes.constants.STATE_TURBINE", "foxes.constants.TMODELS", "foxes.constants.TMODEL_SELS", "foxes.constants.TNAME", "foxes.constants.TURBINE", "foxes.constants.TW", "foxes.constants.VALID", "foxes.constants.VARS", "foxes.constants.W", "foxes.constants.XYH", "foxes.constants.kW", "foxes.core.Algorithm", "foxes.core.Algorithm.__init__", "foxes.core.Algorithm.chunked", "foxes.core.Algorithm.del_model_data", "foxes.core.Algorithm.finalize", "foxes.core.Algorithm.get_model_data", "foxes.core.Algorithm.get_models_data", "foxes.core.Algorithm.get_models_idata", "foxes.core.Algorithm.idata_mem", "foxes.core.Algorithm.initialize", "foxes.core.Algorithm.new", "foxes.core.Algorithm.new_point_data", "foxes.core.Algorithm.print", "foxes.core.Algorithm.store_model_data", "foxes.core.Algorithm.update_n_turbines", "foxes.core.AxialInductionModel", "foxes.core.AxialInductionModel.ct2a", "foxes.core.Data", "foxes.core.Data.__init__", "foxes.core.Data.add", "foxes.core.Data.from_points", "foxes.core.Data.n_points", "foxes.core.Data.n_states", "foxes.core.Data.n_turbines", "foxes.core.Data.states_i0", "foxes.core.DataCalcModel", "foxes.core.DataCalcModel.calculate", "foxes.core.DataCalcModel.run_calculation", "foxes.core.ExtendedStates", "foxes.core.ExtendedStates.__init__", "foxes.core.ExtendedStates.append", "foxes.core.ExtendedStates.calculate", "foxes.core.ExtendedStates.index", "foxes.core.ExtendedStates.output_point_vars", "foxes.core.ExtendedStates.size", "foxes.core.ExtendedStates.sub_models", "foxes.core.ExtendedStates.weights", "foxes.core.FarmController", "foxes.core.FarmController.__init__", "foxes.core.FarmController.calculate", "foxes.core.FarmController.collect_models", "foxes.core.FarmController.finalize", "foxes.core.FarmController.initialize", "foxes.core.FarmController.load_data", "foxes.core.FarmController.output_farm_vars", "foxes.core.FarmController.set_pars", "foxes.core.FarmController.sub_models", "foxes.core.FarmDataModel", "foxes.core.FarmDataModel.__init__", "foxes.core.FarmDataModel.calculate", "foxes.core.FarmDataModel.output_farm_vars", "foxes.core.FarmDataModel.run_calculation", "foxes.core.FarmDataModelList", "foxes.core.FarmDataModelList.__init__", "foxes.core.FarmDataModelList.append", "foxes.core.FarmDataModelList.calculate", "foxes.core.FarmDataModelList.insert", "foxes.core.FarmDataModelList.output_farm_vars", "foxes.core.FarmDataModelList.sub_models", "foxes.core.FarmModel", "foxes.core.Model", "foxes.core.Model.__init__", "foxes.core.Model.__repr__", "foxes.core.Model.data_to_store", "foxes.core.Model.finalize", "foxes.core.Model.from_data_or_store", "foxes.core.Model.get_data", "foxes.core.Model.initialize", "foxes.core.Model.initialized", "foxes.core.Model.load_data", "foxes.core.Model.model_id", "foxes.core.Model.sub_models", "foxes.core.Model.var", "foxes.core.PartialWakesModel", "foxes.core.PartialWakesModel.__init__", "foxes.core.PartialWakesModel.contribute_to_wake_deltas", "foxes.core.PartialWakesModel.evaluate_results", "foxes.core.PartialWakesModel.initialize", "foxes.core.PartialWakesModel.new", "foxes.core.PartialWakesModel.new_wake_deltas", "foxes.core.PartialWakesModel.sub_models", "foxes.core.PointDataModel", "foxes.core.PointDataModel.calculate", "foxes.core.PointDataModel.output_point_vars", "foxes.core.PointDataModel.run_calculation", "foxes.core.PointDataModelList", "foxes.core.PointDataModelList.__init__", "foxes.core.PointDataModelList.append", "foxes.core.PointDataModelList.calculate", "foxes.core.PointDataModelList.output_point_vars", "foxes.core.PointDataModelList.sub_models", "foxes.core.RotorModel", "foxes.core.RotorModel.__init__", "foxes.core.RotorModel.calculate", "foxes.core.RotorModel.design_points", "foxes.core.RotorModel.eval_rpoint_results", "foxes.core.RotorModel.get_rotor_points", "foxes.core.RotorModel.n_rotor_points", "foxes.core.RotorModel.new", "foxes.core.RotorModel.output_farm_vars", "foxes.core.RotorModel.rotor_point_weights", "foxes.core.States", "foxes.core.States.index", "foxes.core.States.load_data", "foxes.core.States.output_point_vars", "foxes.core.States.size", "foxes.core.States.weights", "foxes.core.Turbine", "foxes.core.Turbine.__init__", "foxes.core.Turbine.add_model", "foxes.core.Turbine.insert_model", "foxes.core.TurbineModel", "foxes.core.TurbineModel.calculate", "foxes.core.TurbineModel.new", "foxes.core.TurbineType", "foxes.core.TurbineType.__init__", "foxes.core.TurbineType.new", "foxes.core.VerticalProfile", "foxes.core.VerticalProfile.calculate", "foxes.core.VerticalProfile.input_vars", "foxes.core.VerticalProfile.new", "foxes.core.WakeFrame", "foxes.core.WakeFrame.calc_centreline_integral", "foxes.core.WakeFrame.calc_order", "foxes.core.WakeFrame.get_centreline_points", "foxes.core.WakeFrame.get_wake_coos", "foxes.core.WakeFrame.get_wake_modelling_data", "foxes.core.WakeFrame.new", "foxes.core.WakeModel", "foxes.core.WakeModel.contribute_to_wake_deltas", "foxes.core.WakeModel.finalize_wake_deltas", "foxes.core.WakeModel.init_wake_deltas", "foxes.core.WakeModel.new", "foxes.core.WakeSuperposition", "foxes.core.WakeSuperposition.calc_final_wake_delta", "foxes.core.WakeSuperposition.calc_wakes_plus_wake", "foxes.core.WindFarm", "foxes.core.WindFarm.__init__", "foxes.core.WindFarm.add_turbine", "foxes.core.WindFarm.n_turbines", "foxes.core.WindFarm.turbine_names", "foxes.data.StaticData", "foxes.data.StaticData.__init__", "foxes.data.parse_Pct_file_name", "foxes.data.parse_Pct_two_files", "foxes.input.farm_layout.add_from_csv", "foxes.input.farm_layout.add_from_df", "foxes.input.farm_layout.add_from_file", "foxes.input.farm_layout.add_from_json", "foxes.input.farm_layout.add_grid", "foxes.input.farm_layout.add_row", "foxes.input.states.FieldDataNC", "foxes.input.states.FieldDataNC.__init__", "foxes.input.states.FieldDataNC.calculate", "foxes.input.states.FieldDataNC.index", "foxes.input.states.FieldDataNC.load_data", "foxes.input.states.FieldDataNC.output_point_vars", "foxes.input.states.FieldDataNC.size", "foxes.input.states.FieldDataNC.weights", "foxes.input.states.MultiHeightStates", "foxes.input.states.MultiHeightStates.RDICT", "foxes.input.states.MultiHeightStates.__init__", "foxes.input.states.MultiHeightStates.calculate", "foxes.input.states.MultiHeightStates.finalize", "foxes.input.states.MultiHeightStates.index", "foxes.input.states.MultiHeightStates.load_data", "foxes.input.states.MultiHeightStates.output_point_vars", "foxes.input.states.MultiHeightStates.reset", "foxes.input.states.MultiHeightStates.size", "foxes.input.states.MultiHeightStates.weights", "foxes.input.states.MultiHeightTimeseries", "foxes.input.states.MultiHeightTimeseries.RDICT", "foxes.input.states.ScanWS", "foxes.input.states.ScanWS.__init__", "foxes.input.states.ScanWS.calculate", "foxes.input.states.ScanWS.load_data", "foxes.input.states.ScanWS.output_point_vars", "foxes.input.states.ScanWS.size", "foxes.input.states.ScanWS.weights", "foxes.input.states.SingleStateStates", "foxes.input.states.SingleStateStates.__init__", "foxes.input.states.SingleStateStates.calculate", "foxes.input.states.SingleStateStates.initialize", "foxes.input.states.SingleStateStates.output_point_vars", "foxes.input.states.SingleStateStates.size", "foxes.input.states.SingleStateStates.sub_models", "foxes.input.states.SingleStateStates.weights", "foxes.input.states.StatesTable", "foxes.input.states.StatesTable.RDICT", "foxes.input.states.StatesTable.__init__", "foxes.input.states.StatesTable.calculate", "foxes.input.states.StatesTable.finalize", "foxes.input.states.StatesTable.index", "foxes.input.states.StatesTable.initialize", "foxes.input.states.StatesTable.load_data", "foxes.input.states.StatesTable.output_point_vars", "foxes.input.states.StatesTable.reset", "foxes.input.states.StatesTable.size", "foxes.input.states.StatesTable.sub_models", "foxes.input.states.StatesTable.weights", "foxes.input.states.TabStates", "foxes.input.states.TabStates.__init__", "foxes.input.states.TabStates.load_data", "foxes.input.states.Timeseries", "foxes.input.states.Timeseries.RDICT", "foxes.input.states.create_random_abl_states", "foxes.input.windio.read_case", "foxes.models.farm_controllers.BasicFarmController", "foxes.models.farm_models.Turbine2FarmModel", "foxes.models.farm_models.Turbine2FarmModel.__init__", "foxes.models.farm_models.Turbine2FarmModel.__repr__", "foxes.models.farm_models.Turbine2FarmModel.calculate", "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars", "foxes.models.farm_models.Turbine2FarmModel.sub_models", "foxes.models.model_book.Dict", "foxes.models.model_book.Dict.__getitem__", "foxes.models.model_book.Dict.__init__", "foxes.models.model_book.ModelBook", "foxes.models.model_book.ModelBook.__getitem__", "foxes.models.model_book.ModelBook.__init__", "foxes.models.model_book.ModelBook.finalize", "foxes.models.model_book.ModelBook.get", "foxes.models.model_book.ModelBook.print_toc", "foxes.models.partial_wakes.Mapped", "foxes.models.partial_wakes.Mapped.__init__", "foxes.models.partial_wakes.Mapped.contribute_to_wake_deltas", "foxes.models.partial_wakes.Mapped.evaluate_results", "foxes.models.partial_wakes.Mapped.initialize", "foxes.models.partial_wakes.Mapped.new_wake_deltas", "foxes.models.partial_wakes.Mapped.sub_models", "foxes.models.partial_wakes.PartialAxiwake", "foxes.models.partial_wakes.PartialAxiwake.__init__", "foxes.models.partial_wakes.PartialAxiwake.__repr__", "foxes.models.partial_wakes.PartialAxiwake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.evaluate_results", "foxes.models.partial_wakes.PartialAxiwake.initialize", "foxes.models.partial_wakes.PartialAxiwake.new_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.sub_models", "foxes.models.partial_wakes.PartialDistSlicedWake", "foxes.models.partial_wakes.PartialDistSlicedWake.__init__", "foxes.models.partial_wakes.PartialDistSlicedWake.__repr__", "foxes.models.partial_wakes.PartialDistSlicedWake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.evaluate_results", "foxes.models.partial_wakes.PartialDistSlicedWake.initialize", "foxes.models.partial_wakes.PartialDistSlicedWake.new_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.sub_models", "foxes.models.partial_wakes.PartialGrid", "foxes.models.partial_wakes.PartialGrid.__init__", "foxes.models.partial_wakes.PartialGrid.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat", "foxes.models.partial_wakes.PartialTopHat.__init__", "foxes.models.partial_wakes.PartialTopHat.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.evaluate_results", "foxes.models.partial_wakes.PartialTopHat.initialize", "foxes.models.partial_wakes.PartialTopHat.new_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.sub_models", "foxes.models.partial_wakes.RotorPoints", "foxes.models.partial_wakes.RotorPoints.__init__", "foxes.models.partial_wakes.RotorPoints.contribute_to_wake_deltas", "foxes.models.partial_wakes.RotorPoints.evaluate_results", "foxes.models.partial_wakes.RotorPoints.get_wake_points", "foxes.models.partial_wakes.RotorPoints.new_wake_deltas", "foxes.models.point_models.SetUniformData", "foxes.models.point_models.SetUniformData.__init__", "foxes.models.point_models.SetUniformData.calculate", "foxes.models.point_models.SetUniformData.load_data", "foxes.models.point_models.SetUniformData.output_point_vars", "foxes.models.point_models.TKE2TI", "foxes.models.point_models.TKE2TI.calculate", "foxes.models.point_models.TKE2TI.output_point_vars", "foxes.models.point_models.WakeDeltas", "foxes.models.point_models.WakeDeltas.__init__", "foxes.models.point_models.WakeDeltas.calculate", "foxes.models.point_models.WakeDeltas.output_point_vars", "foxes.models.rotor_models.CentreRotor", "foxes.models.rotor_models.CentreRotor.design_points", "foxes.models.rotor_models.CentreRotor.eval_rpoint_results", "foxes.models.rotor_models.CentreRotor.get_rotor_points", "foxes.models.rotor_models.CentreRotor.n_rotor_points", "foxes.models.rotor_models.CentreRotor.rotor_point_weights", "foxes.models.rotor_models.GridRotor", "foxes.models.rotor_models.GridRotor.__init__", "foxes.models.rotor_models.GridRotor.__repr__", "foxes.models.rotor_models.GridRotor.design_points", "foxes.models.rotor_models.GridRotor.initialize", "foxes.models.rotor_models.GridRotor.n_rotor_points", "foxes.models.rotor_models.GridRotor.rotor_point_weights", "foxes.models.rotor_models.LevelRotor", "foxes.models.rotor_models.LevelRotor.__init__", "foxes.models.rotor_models.LevelRotor.__repr__", "foxes.models.rotor_models.LevelRotor.design_points", "foxes.models.rotor_models.LevelRotor.initialize", "foxes.models.rotor_models.LevelRotor.n_rotor_points", "foxes.models.rotor_models.LevelRotor.rotor_point_weights", "foxes.models.turbine_models.Calculator", "foxes.models.turbine_models.Calculator.__init__", "foxes.models.turbine_models.Calculator.calculate", "foxes.models.turbine_models.Calculator.output_farm_vars", "foxes.models.turbine_models.LookupTable", "foxes.models.turbine_models.LookupTable.__init__", "foxes.models.turbine_models.LookupTable.calculate", "foxes.models.turbine_models.LookupTable.load_data", "foxes.models.turbine_models.LookupTable.output_farm_vars", "foxes.models.turbine_models.PowerMask", "foxes.models.turbine_models.PowerMask.__init__", "foxes.models.turbine_models.PowerMask.calculate", "foxes.models.turbine_models.PowerMask.initialize", "foxes.models.turbine_models.PowerMask.output_farm_vars", "foxes.models.turbine_models.PowerMask.update_P_ct", "foxes.models.turbine_models.RotorCentreCalc", "foxes.models.turbine_models.RotorCentreCalc.__init__", "foxes.models.turbine_models.RotorCentreCalc.calculate", "foxes.models.turbine_models.RotorCentreCalc.initialize", "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars", "foxes.models.turbine_models.RotorCentreCalc.sub_models", "foxes.models.turbine_models.SectorManagement", "foxes.models.turbine_models.SectorManagement.__init__", "foxes.models.turbine_models.SectorManagement.calculate", "foxes.models.turbine_models.SectorManagement.initialize", "foxes.models.turbine_models.SectorManagement.output_farm_vars", "foxes.models.turbine_models.SetFarmVars", "foxes.models.turbine_models.SetFarmVars.__init__", "foxes.models.turbine_models.SetFarmVars.add_var", "foxes.models.turbine_models.SetFarmVars.calculate", "foxes.models.turbine_models.SetFarmVars.load_data", "foxes.models.turbine_models.SetFarmVars.output_farm_vars", "foxes.models.turbine_models.SetFarmVars.reset", "foxes.models.turbine_models.SetXYHD", "foxes.models.turbine_models.SetXYHD.__init__", "foxes.models.turbine_models.SetXYHD.calculate", "foxes.models.turbine_models.SetXYHD.output_farm_vars", "foxes.models.turbine_models.TableFactors", "foxes.models.turbine_models.TableFactors.__init__", "foxes.models.turbine_models.TableFactors.calculate", "foxes.models.turbine_models.TableFactors.initialize", "foxes.models.turbine_models.TableFactors.output_farm_vars", "foxes.models.turbine_models.Thrust2Ct", "foxes.models.turbine_models.Thrust2Ct.__init__", "foxes.models.turbine_models.Thrust2Ct.calculate", "foxes.models.turbine_models.Thrust2Ct.output_farm_vars", "foxes.models.turbine_models.YAW2YAWM", "foxes.models.turbine_models.YAW2YAWM.calculate", "foxes.models.turbine_models.YAW2YAWM.output_farm_vars", "foxes.models.turbine_models.YAWM2YAW", "foxes.models.turbine_models.YAWM2YAW.calculate", "foxes.models.turbine_models.YAWM2YAW.output_farm_vars", "foxes.models.turbine_models.kTI", "foxes.models.turbine_models.kTI.__init__", "foxes.models.turbine_models.kTI.__repr__", "foxes.models.turbine_models.kTI.calculate", "foxes.models.turbine_models.kTI.output_farm_vars", "foxes.models.turbine_types.CpCtFile", "foxes.models.turbine_types.CpCtFile.__init__", "foxes.models.turbine_types.CpCtFromTwo", "foxes.models.turbine_types.CpCtFromTwo.__init__", "foxes.models.turbine_types.NullType", "foxes.models.turbine_types.NullType.calculate", "foxes.models.turbine_types.NullType.output_farm_vars", "foxes.models.turbine_types.PCtFile", "foxes.models.turbine_types.PCtFile.__init__", "foxes.models.turbine_types.PCtFile.calculate", "foxes.models.turbine_types.PCtFile.finalize", "foxes.models.turbine_types.PCtFile.load_data", "foxes.models.turbine_types.PCtFile.output_farm_vars", "foxes.models.turbine_types.PCtFromTwo", "foxes.models.turbine_types.PCtFromTwo.__init__", "foxes.models.turbine_types.PCtFromTwo.calculate", "foxes.models.turbine_types.PCtFromTwo.finalize", "foxes.models.turbine_types.PCtFromTwo.load_data", "foxes.models.turbine_types.PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsRho2PCtFromTwo", "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate", "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize", "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data", "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsTI2PCtFromTwo", "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__", "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate", "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize", "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data", "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogStableWsProfile", "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogStableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogWsProfile", "foxes.models.vertical_profiles.ABLLogWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogWsProfile.input_vars", "foxes.models.vertical_profiles.DataProfile", "foxes.models.vertical_profiles.DataProfile.__init__", "foxes.models.vertical_profiles.DataProfile.calculate", "foxes.models.vertical_profiles.DataProfile.input_vars", "foxes.models.vertical_profiles.ShearedProfile", "foxes.models.vertical_profiles.ShearedProfile.calculate", "foxes.models.vertical_profiles.ShearedProfile.input_vars", "foxes.models.vertical_profiles.UniformProfile", "foxes.models.vertical_profiles.UniformProfile.__init__", "foxes.models.vertical_profiles.UniformProfile.calculate", "foxes.models.vertical_profiles.UniformProfile.input_vars", "foxes.models.wake_frames.FarmOrder", "foxes.models.wake_frames.FarmOrder.__init__", "foxes.models.wake_frames.FarmOrder.calc_order", "foxes.models.wake_frames.FarmOrder.get_centreline_points", "foxes.models.wake_frames.FarmOrder.get_wake_coos", "foxes.models.wake_frames.FarmOrder.sub_models", "foxes.models.wake_frames.RotorWD", "foxes.models.wake_frames.RotorWD.__init__", "foxes.models.wake_frames.RotorWD.calc_order", "foxes.models.wake_frames.RotorWD.get_centreline_points", "foxes.models.wake_frames.RotorWD.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes", "foxes.models.wake_frames.SeqDynamicWakes.__init__", "foxes.models.wake_frames.SeqDynamicWakes.calc_order", "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data", "foxes.models.wake_frames.SeqDynamicWakes.initialize", "foxes.models.wake_frames.Streamlines2D", "foxes.models.wake_frames.Streamlines2D.__init__", "foxes.models.wake_frames.Streamlines2D.__repr__", "foxes.models.wake_frames.Streamlines2D.calc_order", "foxes.models.wake_frames.Streamlines2D.get_centreline_points", "foxes.models.wake_frames.Streamlines2D.get_streamline_data", "foxes.models.wake_frames.Streamlines2D.get_wake_coos", "foxes.models.wake_frames.Timelines", "foxes.models.wake_frames.Timelines.__init__", "foxes.models.wake_frames.Timelines.calc_order", "foxes.models.wake_frames.Timelines.get_centreline_points", "foxes.models.wake_frames.Timelines.get_wake_coos", "foxes.models.wake_frames.Timelines.initialize", "foxes.models.wake_frames.YawedWakes", "foxes.models.wake_frames.YawedWakes.__init__", "foxes.models.wake_frames.YawedWakes.calc_order", "foxes.models.wake_frames.YawedWakes.get_centreline_points", "foxes.models.wake_frames.YawedWakes.get_wake_coos", "foxes.models.wake_frames.YawedWakes.initialize", "foxes.models.wake_frames.YawedWakes.sub_models", "foxes.models.wake_models.AxisymmetricWakeModel", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel", "foxes.models.wake_models.DistSlicedWakeModel.__init__", "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel.contribute_to_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.initialize", "foxes.models.wake_models.DistSlicedWakeModel.sub_models", "foxes.models.wake_models.GaussianWakeModel", "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma_spsel", "foxes.models.wake_models.GaussianWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.GroundMirror", "foxes.models.wake_models.GroundMirror.__init__", "foxes.models.wake_models.TopHatWakeModel", "foxes.models.wake_models.TopHatWakeModel.__init__", "foxes.models.wake_models.TopHatWakeModel.calc_centreline_wake_deltas", "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius", "foxes.models.wake_models.TopHatWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.TopHatWakeModel.initialize", "foxes.models.wake_models.TopHatWakeModel.sub_models", "foxes.models.wake_models.WakeMirror", "foxes.models.wake_models.WakeMirror.__init__", "foxes.models.wake_models.WakeMirror.contribute_to_wake_deltas", "foxes.models.wake_models.WakeMirror.finalize_wake_deltas", "foxes.models.wake_models.WakeMirror.init_wake_deltas", "foxes.models.wake_models.WakeMirror.sub_models", "foxes.models.wake_models.induction.RankineHalfBody", "foxes.models.wake_models.induction.RankineHalfBody.__init__", "foxes.models.wake_models.induction.RankineHalfBody.contribute_to_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.init_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.initialize", "foxes.models.wake_models.induction.RankineHalfBody.sub_models", "foxes.models.wake_models.induction.Rathmann", "foxes.models.wake_models.induction.Rathmann.__init__", "foxes.models.wake_models.induction.Rathmann.contribute_to_wake_deltas", "foxes.models.wake_models.induction.Rathmann.init_wake_deltas", "foxes.models.wake_models.induction.Rathmann.initialize", "foxes.models.wake_models.induction.Rathmann.sub_models", "foxes.models.wake_models.induction.SelfSimilar", "foxes.models.wake_models.induction.SelfSimilar.__init__", "foxes.models.wake_models.induction.SelfSimilar.contribute_to_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.init_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.initialize", "foxes.models.wake_models.induction.SelfSimilar.sub_models", "foxes.models.wake_models.induction.SelfSimilar2020", "foxes.models.wake_models.ti.CrespoHernandezTIWake", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__repr__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius", "foxes.models.wake_models.ti.CrespoHernandezTIWake.init_wake_deltas", "foxes.models.wake_models.ti.IECTIWake", "foxes.models.wake_models.ti.IECTIWake.__init__", "foxes.models.wake_models.ti.IECTIWake.__repr__", "foxes.models.wake_models.ti.IECTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius", "foxes.models.wake_models.ti.IECTIWake.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014", "foxes.models.wake_models.wind.Bastankhah2014.__init__", "foxes.models.wake_models.wind.Bastankhah2014.__repr__", "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.Bastankhah2014.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014.initialize", "foxes.models.wake_models.wind.Bastankhah2014.sub_models", "foxes.models.wake_models.wind.Bastankhah2016", "foxes.models.wake_models.wind.Bastankhah2016.__init__", "foxes.models.wake_models.wind.Bastankhah2016.__repr__", "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_spsel_x_yz", "foxes.models.wake_models.wind.Bastankhah2016.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2016.initialize", "foxes.models.wake_models.wind.Bastankhah2016.sub_models", "foxes.models.wake_models.wind.Bastankhah2016Model", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.CHECK", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.MDATA_KEY", "foxes.models.wake_models.wind.Bastankhah2016Model.NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.PARS", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC_S", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Y_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Z_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SP_SEL", "foxes.models.wake_models.wind.Bastankhah2016Model.X0", "foxes.models.wake_models.wind.Bastankhah2016Model.__init__", "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data", "foxes.models.wake_models.wind.Bastankhah2016Model.clean", "foxes.models.wake_models.wind.Bastankhah2016Model.get_data", "foxes.models.wake_models.wind.Bastankhah2016Model.has_data", "foxes.models.wake_models.wind.Bastankhah2016Model.initialize", "foxes.models.wake_models.wind.Bastankhah2016Model.pars", "foxes.models.wake_models.wind.Bastankhah2016Model.sub_models", "foxes.models.wake_models.wind.JensenWake", "foxes.models.wake_models.wind.JensenWake.__init__", "foxes.models.wake_models.wind.JensenWake.__repr__", "foxes.models.wake_models.wind.JensenWake.calc_centreline_wake_deltas", "foxes.models.wake_models.wind.JensenWake.calc_wake_radius", "foxes.models.wake_models.wind.JensenWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake", "foxes.models.wake_models.wind.TurbOParkWake.__init__", "foxes.models.wake_models.wind.TurbOParkWake.__repr__", "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake.initialize", "foxes.models.wake_models.wind.TurbOParkWake.sub_models", "foxes.models.wake_models.wind.TurbOParkWakeIX", "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__", "foxes.models.wake_models.wind.TurbOParkWakeIX.__repr__", "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize", "foxes.models.wake_models.wind.TurbOParkWakeIX.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize", "foxes.models.wake_models.wind.TurbOParkWakeIX.sub_models", "foxes.models.wake_superpositions.TILinear", "foxes.models.wake_superpositions.TILinear.__init__", "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta", "foxes.models.wake_superpositions.TILinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIMax", "foxes.models.wake_superpositions.TIMax.__init__", "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta", "foxes.models.wake_superpositions.TIMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIPow", "foxes.models.wake_superpositions.TIPow.__init__", "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta", "foxes.models.wake_superpositions.TIPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIQuadratic", "foxes.models.wake_superpositions.TIQuadratic.__init__", "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.TIQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear", "foxes.models.wake_superpositions.WSLinear.__init__", "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear.input_farm_vars", "foxes.models.wake_superpositions.WSMax", "foxes.models.wake_superpositions.WSMax.__init__", "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSMax.input_farm_vars", "foxes.models.wake_superpositions.WSPow", "foxes.models.wake_superpositions.WSPow.__init__", "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSPow.input_farm_vars", "foxes.models.wake_superpositions.WSProduct", "foxes.models.wake_superpositions.WSProduct.__init__", "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta", "foxes.models.wake_superpositions.WSProduct.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSProduct.input_farm_vars", "foxes.models.wake_superpositions.WSQuadratic", "foxes.models.wake_superpositions.WSQuadratic.__init__", "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars", "foxes.output.Animator", "foxes.output.Animator.__init__", "foxes.output.Animator.add_generator", "foxes.output.Animator.animate", "foxes.output.Animator.generators", "foxes.output.FarmLayoutOutput", "foxes.output.FarmLayoutOutput.__init__", "foxes.output.FarmLayoutOutput.get_figure", "foxes.output.FarmLayoutOutput.get_layout_data", "foxes.output.FarmLayoutOutput.get_layout_dict", "foxes.output.FarmLayoutOutput.write_csv", "foxes.output.FarmLayoutOutput.write_json", "foxes.output.FarmLayoutOutput.write_plot", "foxes.output.FarmLayoutOutput.write_xyh", "foxes.output.FarmResultsEval", "foxes.output.FarmResultsEval.__init__", "foxes.output.FarmResultsEval.add_capacity", "foxes.output.FarmResultsEval.add_efficiency", "foxes.output.FarmResultsEval.calc_farm_efficiency", "foxes.output.FarmResultsEval.calc_farm_mean", "foxes.output.FarmResultsEval.calc_farm_sum", "foxes.output.FarmResultsEval.calc_farm_yield", "foxes.output.FarmResultsEval.calc_mean_farm_power", "foxes.output.FarmResultsEval.calc_states_mean", "foxes.output.FarmResultsEval.calc_states_std", "foxes.output.FarmResultsEval.calc_states_sum", "foxes.output.FarmResultsEval.calc_turbine_mean", "foxes.output.FarmResultsEval.calc_turbine_sum", "foxes.output.FarmResultsEval.calc_turbine_yield", "foxes.output.FarmResultsEval.gen_stdata", "foxes.output.FarmResultsEval.reduce_all", "foxes.output.FarmResultsEval.reduce_states", "foxes.output.FarmResultsEval.reduce_turbines", "foxes.output.FarmResultsEval.weinsum", "foxes.output.FlowPlots2D", "foxes.output.FlowPlots2D.gen_states_fig_xy", "foxes.output.FlowPlots2D.gen_states_fig_xz", "foxes.output.FlowPlots2D.gen_states_fig_yz", "foxes.output.FlowPlots2D.get_mean_fig_xy", "foxes.output.FlowPlots2D.get_mean_fig_xz", "foxes.output.FlowPlots2D.get_mean_fig_yz", "foxes.output.Output", "foxes.output.Output.__init__", "foxes.output.Output.get_fpath", "foxes.output.Output.new", "foxes.output.Output.print_models", "foxes.output.Output.write", "foxes.output.PointCalculator", "foxes.output.PointCalculator.__init__", "foxes.output.PointCalculator.calculate", "foxes.output.ResultsWriter", "foxes.output.ResultsWriter.__init__", "foxes.output.ResultsWriter.write_csv", "foxes.output.ResultsWriter.write_nc", "foxes.output.RosePlotOutput", "foxes.output.RosePlotOutput.__init__", "foxes.output.RosePlotOutput.get_data", "foxes.output.RosePlotOutput.get_data_info", "foxes.output.RosePlotOutput.get_figure", "foxes.output.RosePlotOutput.write_figure", "foxes.output.SeqFlowAnimationPlugin", "foxes.output.SeqFlowAnimationPlugin.__init__", "foxes.output.SeqFlowAnimationPlugin.gen_images", "foxes.output.SeqFlowAnimationPlugin.initialize", "foxes.output.SeqFlowAnimationPlugin.update", "foxes.output.SliceData", "foxes.output.SliceData.__init__", "foxes.output.SliceData.get_mean_data_xy", "foxes.output.SliceData.get_mean_data_xz", "foxes.output.SliceData.get_mean_data_yz", "foxes.output.SliceData.get_states_data_xy", "foxes.output.SliceData.get_states_data_xz", "foxes.output.SliceData.get_states_data_yz", "foxes.output.StateTurbineMap", "foxes.output.StateTurbineMap.__init__", "foxes.output.StateTurbineMap.plot_map", "foxes.output.StatesRosePlotOutput", "foxes.output.StatesRosePlotOutput.__init__", "foxes.output.TurbineTypeCurves", "foxes.output.TurbineTypeCurves.__init__", "foxes.output.TurbineTypeCurves.plot_curves", "foxes.output.flow_plots_2d.get_fig", "foxes.utils.DataBook", "foxes.utils.DataBook.__init__", "foxes.utils.DataBook.add_data_package", "foxes.utils.DataBook.add_data_package_file", "foxes.utils.DataBook.add_file", "foxes.utils.DataBook.add_files", "foxes.utils.DataBook.get_file_path", "foxes.utils.DataBook.toc", "foxes.utils.PandasFileHelper", "foxes.utils.PandasFileHelper.DATA_FILE_FORMATS", "foxes.utils.PandasFileHelper.DEFAULT_FORMAT_DICT", "foxes.utils.PandasFileHelper.DEFAULT_READING_PARAMETERS", "foxes.utils.PandasFileHelper.DEFAULT_WRITING_PARAMETERS", "foxes.utils.PandasFileHelper.read_file", "foxes.utils.PandasFileHelper.write_file", "foxes.utils.TabWindroseAxes", "foxes.utils.TabWindroseAxes.ArtistList", "foxes.utils.TabWindroseAxes.ArtistList.__getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__init__", "foxes.utils.TabWindroseAxes.ArtistList.__repr__", "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__", "foxes.utils.TabWindroseAxes.ArtistList.count", "foxes.utils.TabWindroseAxes.ArtistList.index", "foxes.utils.TabWindroseAxes.InvertedPolarTransform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init_subclass__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__str__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.depth", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.frozen", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_matrix", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.input_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.invalidate", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.inverted", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_separable", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.output_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.pass_through", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point", "foxes.utils.TabWindroseAxes.PolarAffine", "foxes.utils.TabWindroseAxes.PolarAffine.__array__", "foxes.utils.TabWindroseAxes.PolarAffine.__eq__", "foxes.utils.TabWindroseAxes.PolarAffine.__init__", "foxes.utils.TabWindroseAxes.PolarAffine.__str__", "foxes.utils.TabWindroseAxes.PolarAffine.frozen", "foxes.utils.TabWindroseAxes.PolarAffine.get_affine", "foxes.utils.TabWindroseAxes.PolarAffine.get_matrix", "foxes.utils.TabWindroseAxes.PolarAffine.has_inverse", "foxes.utils.TabWindroseAxes.PolarAffine.input_dims", "foxes.utils.TabWindroseAxes.PolarAffine.inverted", "foxes.utils.TabWindroseAxes.PolarAffine.is_affine", "foxes.utils.TabWindroseAxes.PolarAffine.is_separable", "foxes.utils.TabWindroseAxes.PolarAffine.output_dims", "foxes.utils.TabWindroseAxes.PolarAffine.to_values", "foxes.utils.TabWindroseAxes.PolarAffine.transform", "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform", "foxes.utils.TabWindroseAxes.PolarTransform.__init__", "foxes.utils.TabWindroseAxes.PolarTransform.__str__", "foxes.utils.TabWindroseAxes.PolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.PolarTransform.input_dims", "foxes.utils.TabWindroseAxes.PolarTransform.inverted", "foxes.utils.TabWindroseAxes.PolarTransform.output_dims", "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.RadialLocator", "foxes.utils.TabWindroseAxes.RadialLocator.MAXTICKS", "foxes.utils.TabWindroseAxes.RadialLocator.__call__", "foxes.utils.TabWindroseAxes.RadialLocator.__init__", "foxes.utils.TabWindroseAxes.RadialLocator.axis", "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis", "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular", "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds", "foxes.utils.TabWindroseAxes.RadialLocator.set_axis", "foxes.utils.TabWindroseAxes.RadialLocator.set_params", "foxes.utils.TabWindroseAxes.RadialLocator.tick_values", "foxes.utils.TabWindroseAxes.RadialLocator.view_limits", "foxes.utils.TabWindroseAxes.ThetaFormatter", "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__", "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks", "foxes.utils.TabWindroseAxes.ThetaFormatter.get_offset", "foxes.utils.TabWindroseAxes.ThetaFormatter.locs", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs", "foxes.utils.TabWindroseAxes.ThetaLocator", "foxes.utils.TabWindroseAxes.ThetaLocator.__call__", "foxes.utils.TabWindroseAxes.ThetaLocator.__init__", "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular", "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis", "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits", "foxes.utils.TabWindroseAxes.__init__", "foxes.utils.TabWindroseAxes.__init_subclass__", "foxes.utils.TabWindroseAxes.__repr__", "foxes.utils.TabWindroseAxes.__str__", "foxes.utils.TabWindroseAxes.acorr", "foxes.utils.TabWindroseAxes.add_artist", "foxes.utils.TabWindroseAxes.add_callback", "foxes.utils.TabWindroseAxes.add_child_axes", "foxes.utils.TabWindroseAxes.add_collection", "foxes.utils.TabWindroseAxes.add_container", "foxes.utils.TabWindroseAxes.add_image", "foxes.utils.TabWindroseAxes.add_line", "foxes.utils.TabWindroseAxes.add_patch", "foxes.utils.TabWindroseAxes.add_table", "foxes.utils.TabWindroseAxes.angle_spectrum", "foxes.utils.TabWindroseAxes.annotate", "foxes.utils.TabWindroseAxes.apply_aspect", "foxes.utils.TabWindroseAxes.arrow", "foxes.utils.TabWindroseAxes.artists", "foxes.utils.TabWindroseAxes.autoscale", "foxes.utils.TabWindroseAxes.autoscale_view", "foxes.utils.TabWindroseAxes.axes", "foxes.utils.TabWindroseAxes.axhline", "foxes.utils.TabWindroseAxes.axhspan", "foxes.utils.TabWindroseAxes.axis", "foxes.utils.TabWindroseAxes.axline", "foxes.utils.TabWindroseAxes.axvline", "foxes.utils.TabWindroseAxes.axvspan", "foxes.utils.TabWindroseAxes.bar", "foxes.utils.TabWindroseAxes.bar_label", "foxes.utils.TabWindroseAxes.barbs", "foxes.utils.TabWindroseAxes.barh", "foxes.utils.TabWindroseAxes.box", "foxes.utils.TabWindroseAxes.boxplot", "foxes.utils.TabWindroseAxes.broken_barh", "foxes.utils.TabWindroseAxes.bxp", "foxes.utils.TabWindroseAxes.can_pan", "foxes.utils.TabWindroseAxes.can_zoom", "foxes.utils.TabWindroseAxes.cla", "foxes.utils.TabWindroseAxes.clabel", "foxes.utils.TabWindroseAxes.clear", "foxes.utils.TabWindroseAxes.cohere", "foxes.utils.TabWindroseAxes.collections", "foxes.utils.TabWindroseAxes.contains", "foxes.utils.TabWindroseAxes.contains_point", "foxes.utils.TabWindroseAxes.contour", "foxes.utils.TabWindroseAxes.contourf", "foxes.utils.TabWindroseAxes.convert_xunits", "foxes.utils.TabWindroseAxes.convert_yunits", "foxes.utils.TabWindroseAxes.csd", "foxes.utils.TabWindroseAxes.drag_pan", "foxes.utils.TabWindroseAxes.draw", "foxes.utils.TabWindroseAxes.draw_artist", "foxes.utils.TabWindroseAxes.end_pan", "foxes.utils.TabWindroseAxes.errorbar", "foxes.utils.TabWindroseAxes.eventplot", "foxes.utils.TabWindroseAxes.fill", "foxes.utils.TabWindroseAxes.fill_between", "foxes.utils.TabWindroseAxes.fill_betweenx", "foxes.utils.TabWindroseAxes.findobj", "foxes.utils.TabWindroseAxes.format_coord", "foxes.utils.TabWindroseAxes.format_cursor_data", "foxes.utils.TabWindroseAxes.format_xdata", "foxes.utils.TabWindroseAxes.format_ydata", "foxes.utils.TabWindroseAxes.from_ax", "foxes.utils.TabWindroseAxes.get_adjustable", "foxes.utils.TabWindroseAxes.get_agg_filter", "foxes.utils.TabWindroseAxes.get_alpha", "foxes.utils.TabWindroseAxes.get_anchor", "foxes.utils.TabWindroseAxes.get_animated", "foxes.utils.TabWindroseAxes.get_aspect", "foxes.utils.TabWindroseAxes.get_autoscale_on", "foxes.utils.TabWindroseAxes.get_autoscalex_on", "foxes.utils.TabWindroseAxes.get_autoscaley_on", "foxes.utils.TabWindroseAxes.get_axes_locator", "foxes.utils.TabWindroseAxes.get_axisbelow", "foxes.utils.TabWindroseAxes.get_box_aspect", "foxes.utils.TabWindroseAxes.get_children", "foxes.utils.TabWindroseAxes.get_clip_box", "foxes.utils.TabWindroseAxes.get_clip_on", "foxes.utils.TabWindroseAxes.get_clip_path", "foxes.utils.TabWindroseAxes.get_cursor_data", "foxes.utils.TabWindroseAxes.get_data_ratio", "foxes.utils.TabWindroseAxes.get_default_bbox_extra_artists", "foxes.utils.TabWindroseAxes.get_facecolor", "foxes.utils.TabWindroseAxes.get_fc", "foxes.utils.TabWindroseAxes.get_figure", "foxes.utils.TabWindroseAxes.get_frame_on", "foxes.utils.TabWindroseAxes.get_gid", "foxes.utils.TabWindroseAxes.get_gridspec", "foxes.utils.TabWindroseAxes.get_images", "foxes.utils.TabWindroseAxes.get_in_layout", "foxes.utils.TabWindroseAxes.get_label", "foxes.utils.TabWindroseAxes.get_legend", "foxes.utils.TabWindroseAxes.get_legend_handles_labels", "foxes.utils.TabWindroseAxes.get_lines", "foxes.utils.TabWindroseAxes.get_mouseover", "foxes.utils.TabWindroseAxes.get_navigate", "foxes.utils.TabWindroseAxes.get_navigate_mode", "foxes.utils.TabWindroseAxes.get_path_effects", "foxes.utils.TabWindroseAxes.get_picker", "foxes.utils.TabWindroseAxes.get_position", "foxes.utils.TabWindroseAxes.get_rasterization_zorder", "foxes.utils.TabWindroseAxes.get_rasterized", "foxes.utils.TabWindroseAxes.get_renderer_cache", "foxes.utils.TabWindroseAxes.get_rlabel_position", "foxes.utils.TabWindroseAxes.get_rmax", "foxes.utils.TabWindroseAxes.get_rmin", "foxes.utils.TabWindroseAxes.get_rorigin", "foxes.utils.TabWindroseAxes.get_rsign", "foxes.utils.TabWindroseAxes.get_shared_x_axes", "foxes.utils.TabWindroseAxes.get_shared_y_axes", "foxes.utils.TabWindroseAxes.get_sketch_params", "foxes.utils.TabWindroseAxes.get_snap", "foxes.utils.TabWindroseAxes.get_subplotspec", "foxes.utils.TabWindroseAxes.get_theta_direction", "foxes.utils.TabWindroseAxes.get_theta_offset", "foxes.utils.TabWindroseAxes.get_thetamax", "foxes.utils.TabWindroseAxes.get_thetamin", "foxes.utils.TabWindroseAxes.get_tightbbox", "foxes.utils.TabWindroseAxes.get_title", "foxes.utils.TabWindroseAxes.get_transform", "foxes.utils.TabWindroseAxes.get_transformed_clip_path_and_affine", "foxes.utils.TabWindroseAxes.get_url", "foxes.utils.TabWindroseAxes.get_visible", "foxes.utils.TabWindroseAxes.get_window_extent", "foxes.utils.TabWindroseAxes.get_xaxis", "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_xaxis_transform", "foxes.utils.TabWindroseAxes.get_xbound", "foxes.utils.TabWindroseAxes.get_xgridlines", "foxes.utils.TabWindroseAxes.get_xlabel", "foxes.utils.TabWindroseAxes.get_xlim", "foxes.utils.TabWindroseAxes.get_xmajorticklabels", "foxes.utils.TabWindroseAxes.get_xminorticklabels", "foxes.utils.TabWindroseAxes.get_xscale", "foxes.utils.TabWindroseAxes.get_xticklabels", "foxes.utils.TabWindroseAxes.get_xticklines", "foxes.utils.TabWindroseAxes.get_xticks", "foxes.utils.TabWindroseAxes.get_yaxis", "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_yaxis_transform", "foxes.utils.TabWindroseAxes.get_ybound", "foxes.utils.TabWindroseAxes.get_ygridlines", "foxes.utils.TabWindroseAxes.get_ylabel", "foxes.utils.TabWindroseAxes.get_ylim", "foxes.utils.TabWindroseAxes.get_ymajorticklabels", "foxes.utils.TabWindroseAxes.get_yminorticklabels", "foxes.utils.TabWindroseAxes.get_yscale", "foxes.utils.TabWindroseAxes.get_yticklabels", "foxes.utils.TabWindroseAxes.get_yticklines", "foxes.utils.TabWindroseAxes.get_yticks", "foxes.utils.TabWindroseAxes.get_zorder", "foxes.utils.TabWindroseAxes.grid", "foxes.utils.TabWindroseAxes.has_data", "foxes.utils.TabWindroseAxes.have_units", "foxes.utils.TabWindroseAxes.hexbin", "foxes.utils.TabWindroseAxes.hist", "foxes.utils.TabWindroseAxes.hist2d", "foxes.utils.TabWindroseAxes.hlines", "foxes.utils.TabWindroseAxes.images", "foxes.utils.TabWindroseAxes.imshow", "foxes.utils.TabWindroseAxes.in_axes", "foxes.utils.TabWindroseAxes.indicate_inset", "foxes.utils.TabWindroseAxes.indicate_inset_zoom", "foxes.utils.TabWindroseAxes.inset_axes", "foxes.utils.TabWindroseAxes.invert_xaxis", "foxes.utils.TabWindroseAxes.invert_yaxis", "foxes.utils.TabWindroseAxes.is_transform_set", "foxes.utils.TabWindroseAxes.label_outer", "foxes.utils.TabWindroseAxes.legend", "foxes.utils.TabWindroseAxes.lines", "foxes.utils.TabWindroseAxes.locator_params", "foxes.utils.TabWindroseAxes.loglog", "foxes.utils.TabWindroseAxes.magnitude_spectrum", "foxes.utils.TabWindroseAxes.margins", "foxes.utils.TabWindroseAxes.matshow", "foxes.utils.TabWindroseAxes.minorticks_off", "foxes.utils.TabWindroseAxes.minorticks_on", "foxes.utils.TabWindroseAxes.mouseover", "foxes.utils.TabWindroseAxes.name", "foxes.utils.TabWindroseAxes.patches", "foxes.utils.TabWindroseAxes.pchanged", "foxes.utils.TabWindroseAxes.pcolor", "foxes.utils.TabWindroseAxes.pcolorfast", "foxes.utils.TabWindroseAxes.pcolormesh", "foxes.utils.TabWindroseAxes.phase_spectrum", "foxes.utils.TabWindroseAxes.pick", "foxes.utils.TabWindroseAxes.pickable", "foxes.utils.TabWindroseAxes.pie", "foxes.utils.TabWindroseAxes.plot", "foxes.utils.TabWindroseAxes.plot_date", "foxes.utils.TabWindroseAxes.properties", "foxes.utils.TabWindroseAxes.psd", "foxes.utils.TabWindroseAxes.quiver", "foxes.utils.TabWindroseAxes.quiverkey", "foxes.utils.TabWindroseAxes.redraw_in_frame", "foxes.utils.TabWindroseAxes.relim", "foxes.utils.TabWindroseAxes.remove", "foxes.utils.TabWindroseAxes.remove_callback", "foxes.utils.TabWindroseAxes.reset_position", "foxes.utils.TabWindroseAxes.scatter", "foxes.utils.TabWindroseAxes.secondary_xaxis", "foxes.utils.TabWindroseAxes.secondary_yaxis", "foxes.utils.TabWindroseAxes.semilogx", "foxes.utils.TabWindroseAxes.semilogy", "foxes.utils.TabWindroseAxes.set", "foxes.utils.TabWindroseAxes.set_adjustable", "foxes.utils.TabWindroseAxes.set_agg_filter", "foxes.utils.TabWindroseAxes.set_alpha", "foxes.utils.TabWindroseAxes.set_anchor", "foxes.utils.TabWindroseAxes.set_animated", "foxes.utils.TabWindroseAxes.set_aspect", "foxes.utils.TabWindroseAxes.set_autoscale_on", "foxes.utils.TabWindroseAxes.set_autoscalex_on", "foxes.utils.TabWindroseAxes.set_autoscaley_on", "foxes.utils.TabWindroseAxes.set_axes_locator", "foxes.utils.TabWindroseAxes.set_axis_off", "foxes.utils.TabWindroseAxes.set_axis_on", "foxes.utils.TabWindroseAxes.set_axisbelow", "foxes.utils.TabWindroseAxes.set_box_aspect", "foxes.utils.TabWindroseAxes.set_clip_box", "foxes.utils.TabWindroseAxes.set_clip_on", "foxes.utils.TabWindroseAxes.set_clip_path", "foxes.utils.TabWindroseAxes.set_facecolor", "foxes.utils.TabWindroseAxes.set_fc", "foxes.utils.TabWindroseAxes.set_figure", "foxes.utils.TabWindroseAxes.set_frame_on", "foxes.utils.TabWindroseAxes.set_gid", "foxes.utils.TabWindroseAxes.set_in_layout", "foxes.utils.TabWindroseAxes.set_label", "foxes.utils.TabWindroseAxes.set_legend", "foxes.utils.TabWindroseAxes.set_mouseover", "foxes.utils.TabWindroseAxes.set_navigate", "foxes.utils.TabWindroseAxes.set_navigate_mode", "foxes.utils.TabWindroseAxes.set_path_effects", "foxes.utils.TabWindroseAxes.set_picker", "foxes.utils.TabWindroseAxes.set_position", "foxes.utils.TabWindroseAxes.set_prop_cycle", "foxes.utils.TabWindroseAxes.set_radii_angle", "foxes.utils.TabWindroseAxes.set_rasterization_zorder", "foxes.utils.TabWindroseAxes.set_rasterized", "foxes.utils.TabWindroseAxes.set_rgrids", "foxes.utils.TabWindroseAxes.set_rlabel_position", "foxes.utils.TabWindroseAxes.set_rlim", "foxes.utils.TabWindroseAxes.set_rmax", "foxes.utils.TabWindroseAxes.set_rmin", "foxes.utils.TabWindroseAxes.set_rorigin", "foxes.utils.TabWindroseAxes.set_rscale", "foxes.utils.TabWindroseAxes.set_rticks", "foxes.utils.TabWindroseAxes.set_sketch_params", "foxes.utils.TabWindroseAxes.set_snap", "foxes.utils.TabWindroseAxes.set_subplotspec", "foxes.utils.TabWindroseAxes.set_theta_direction", "foxes.utils.TabWindroseAxes.set_theta_offset", "foxes.utils.TabWindroseAxes.set_theta_zero_location", "foxes.utils.TabWindroseAxes.set_thetagrids", "foxes.utils.TabWindroseAxes.set_thetalim", "foxes.utils.TabWindroseAxes.set_thetamax", "foxes.utils.TabWindroseAxes.set_thetamin", "foxes.utils.TabWindroseAxes.set_title", "foxes.utils.TabWindroseAxes.set_transform", "foxes.utils.TabWindroseAxes.set_url", "foxes.utils.TabWindroseAxes.set_visible", "foxes.utils.TabWindroseAxes.set_xbound", "foxes.utils.TabWindroseAxes.set_xlabel", "foxes.utils.TabWindroseAxes.set_xlim", "foxes.utils.TabWindroseAxes.set_xmargin", "foxes.utils.TabWindroseAxes.set_xscale", "foxes.utils.TabWindroseAxes.set_xticklabels", "foxes.utils.TabWindroseAxes.set_xticks", "foxes.utils.TabWindroseAxes.set_ybound", "foxes.utils.TabWindroseAxes.set_ylabel", "foxes.utils.TabWindroseAxes.set_ylim", "foxes.utils.TabWindroseAxes.set_ymargin", "foxes.utils.TabWindroseAxes.set_yscale", "foxes.utils.TabWindroseAxes.set_yticklabels", "foxes.utils.TabWindroseAxes.set_yticks", "foxes.utils.TabWindroseAxes.set_zorder", "foxes.utils.TabWindroseAxes.sharex", "foxes.utils.TabWindroseAxes.sharey", "foxes.utils.TabWindroseAxes.specgram", "foxes.utils.TabWindroseAxes.spy", "foxes.utils.TabWindroseAxes.stackplot", "foxes.utils.TabWindroseAxes.stairs", "foxes.utils.TabWindroseAxes.stale", "foxes.utils.TabWindroseAxes.start_pan", "foxes.utils.TabWindroseAxes.stem", "foxes.utils.TabWindroseAxes.step", "foxes.utils.TabWindroseAxes.sticky_edges", "foxes.utils.TabWindroseAxes.streamplot", "foxes.utils.TabWindroseAxes.table", "foxes.utils.TabWindroseAxes.tables", "foxes.utils.TabWindroseAxes.text", "foxes.utils.TabWindroseAxes.texts", "foxes.utils.TabWindroseAxes.tick_params", "foxes.utils.TabWindroseAxes.ticklabel_format", "foxes.utils.TabWindroseAxes.tricontour", "foxes.utils.TabWindroseAxes.tricontourf", "foxes.utils.TabWindroseAxes.tripcolor", "foxes.utils.TabWindroseAxes.triplot", "foxes.utils.TabWindroseAxes.twinx", "foxes.utils.TabWindroseAxes.twiny", "foxes.utils.TabWindroseAxes.update", "foxes.utils.TabWindroseAxes.update_datalim", "foxes.utils.TabWindroseAxes.update_from", "foxes.utils.TabWindroseAxes.use_sticky_edges", "foxes.utils.TabWindroseAxes.viewLim", "foxes.utils.TabWindroseAxes.violin", "foxes.utils.TabWindroseAxes.violinplot", "foxes.utils.TabWindroseAxes.vlines", "foxes.utils.TabWindroseAxes.xaxis_date", "foxes.utils.TabWindroseAxes.xaxis_inverted", "foxes.utils.TabWindroseAxes.xcorr", "foxes.utils.TabWindroseAxes.yaxis_date", "foxes.utils.TabWindroseAxes.yaxis_inverted", "foxes.utils.TabWindroseAxes.zorder", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.lgz", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.logz", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.all_subclasses", "foxes.utils.cubic_roots", "foxes.utils.delta_wd", "foxes.utils.exec_python", "foxes.utils.geom2d.AreaGeometry", "foxes.utils.geom2d.AreaGeometry.add_to_figure", "foxes.utils.geom2d.AreaGeometry.inverse", "foxes.utils.geom2d.AreaGeometry.p_max", "foxes.utils.geom2d.AreaGeometry.p_min", "foxes.utils.geom2d.AreaGeometry.points_distance", "foxes.utils.geom2d.AreaGeometry.points_inside", "foxes.utils.geom2d.AreaIntersection", "foxes.utils.geom2d.AreaIntersection.__new__", "foxes.utils.geom2d.AreaUnion", "foxes.utils.geom2d.AreaUnion.__init__", "foxes.utils.geom2d.AreaUnion.add_to_figure", "foxes.utils.geom2d.AreaUnion.inverse", "foxes.utils.geom2d.AreaUnion.p_max", "foxes.utils.geom2d.AreaUnion.p_min", "foxes.utils.geom2d.AreaUnion.points_distance", "foxes.utils.geom2d.AreaUnion.points_inside", "foxes.utils.geom2d.Circle", "foxes.utils.geom2d.Circle.__init__", "foxes.utils.geom2d.Circle.add_to_figure", "foxes.utils.geom2d.Circle.p_max", "foxes.utils.geom2d.Circle.p_min", "foxes.utils.geom2d.Circle.points_distance", "foxes.utils.geom2d.Circle.points_inside", "foxes.utils.geom2d.ClosedPolygon", "foxes.utils.geom2d.ClosedPolygon.__init__", "foxes.utils.geom2d.ClosedPolygon.add_to_figure", "foxes.utils.geom2d.ClosedPolygon.p_max", "foxes.utils.geom2d.ClosedPolygon.p_min", "foxes.utils.geom2d.ClosedPolygon.points_distance", "foxes.utils.geom2d.ClosedPolygon.points_inside", "foxes.utils.geom2d.HalfPlane", "foxes.utils.geom2d.HalfPlane.__init__", "foxes.utils.geom2d.HalfPlane.add_to_figure", "foxes.utils.geom2d.HalfPlane.inverse", "foxes.utils.geom2d.HalfPlane.p_max", "foxes.utils.geom2d.HalfPlane.p_min", "foxes.utils.geom2d.HalfPlane.points_distance", "foxes.utils.geom2d.HalfPlane.points_inside", "foxes.utils.geom2d.InvertedAreaGeometry", "foxes.utils.geom2d.InvertedAreaGeometry.__init__", "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure", "foxes.utils.geom2d.InvertedAreaGeometry.inverse", "foxes.utils.geom2d.InvertedAreaGeometry.p_max", "foxes.utils.geom2d.InvertedAreaGeometry.p_min", "foxes.utils.geom2d.InvertedAreaGeometry.points_distance", "foxes.utils.geom2d.InvertedAreaGeometry.points_inside", "foxes.utils.import_module", "foxes.opt.constraints.AreaGeometryConstraint", "foxes.opt.constraints.AreaGeometryConstraint.__init__", "foxes.opt.constraints.AreaGeometryConstraint.__str__", "foxes.opt.constraints.AreaGeometryConstraint.ana_deriv", "foxes.opt.constraints.AreaGeometryConstraint.calc_individual", "foxes.opt.constraints.AreaGeometryConstraint.calc_population", "foxes.opt.constraints.AreaGeometryConstraint.component_names", "foxes.opt.constraints.AreaGeometryConstraint.finalize", "foxes.opt.constraints.AreaGeometryConstraint.finalize_individual", "foxes.opt.constraints.AreaGeometryConstraint.finalize_population", "foxes.opt.constraints.AreaGeometryConstraint.initialize", "foxes.opt.constraints.AreaGeometryConstraint.initialized", "foxes.opt.constraints.AreaGeometryConstraint.n_components", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.var_names_float", "foxes.opt.constraints.AreaGeometryConstraint.var_names_int", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_float", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_int", "foxes.opt.constraints.FarmBoundaryConstraint", "foxes.opt.constraints.FarmBoundaryConstraint.__init__", "foxes.opt.constraints.MinDistConstraint", "foxes.opt.constraints.MinDistConstraint.__init__", "foxes.opt.constraints.MinDistConstraint.calc_individual", "foxes.opt.constraints.MinDistConstraint.calc_population", "foxes.opt.constraints.MinDistConstraint.initialize", "foxes.opt.constraints.MinDistConstraint.n_components", "foxes.opt.constraints.MinDistConstraint.vardeps_float", "foxes.opt.core.FarmConstraint", "foxes.opt.core.FarmConstraint.__init__", "foxes.opt.core.FarmConstraint.add_to_layout_figure", "foxes.opt.core.FarmConstraint.calc_individual", "foxes.opt.core.FarmConstraint.calc_population", "foxes.opt.core.FarmConstraint.farm", "foxes.opt.core.FarmConstraint.n_components", "foxes.opt.core.FarmConstraint.n_sel_turbines", "foxes.opt.core.FarmConstraint.print_models", "foxes.opt.core.FarmConstraint.sel_turbines", "foxes.opt.core.FarmConstraint.vardeps_float", "foxes.opt.core.FarmObjective", "foxes.opt.core.FarmObjective.__init__", "foxes.opt.core.FarmObjective.add_to_layout_figure", "foxes.opt.core.FarmObjective.farm", "foxes.opt.core.FarmObjective.n_sel_turbines", "foxes.opt.core.FarmObjective.print_models", "foxes.opt.core.FarmObjective.sel_turbines", "foxes.opt.core.FarmOptProblem", "foxes.opt.core.FarmOptProblem.INT_INF", "foxes.opt.core.FarmOptProblem.__init__", "foxes.opt.core.FarmOptProblem.add_constraint", "foxes.opt.core.FarmOptProblem.add_objective", "foxes.opt.core.FarmOptProblem.add_to_layout_figure", "foxes.opt.core.FarmOptProblem.all_turbines", "foxes.opt.core.FarmOptProblem.apply_individual", "foxes.opt.core.FarmOptProblem.apply_population", "foxes.opt.core.FarmOptProblem.calc_gradients", "foxes.opt.core.FarmOptProblem.check_constraints_individual", "foxes.opt.core.FarmOptProblem.check_constraints_population", "foxes.opt.core.FarmOptProblem.constraints_tol", "foxes.opt.core.FarmOptProblem.counter", "foxes.opt.core.FarmOptProblem.evaluate_individual", "foxes.opt.core.FarmOptProblem.evaluate_population", "foxes.opt.core.FarmOptProblem.farm", "foxes.opt.core.FarmOptProblem.finalize_individual", "foxes.opt.core.FarmOptProblem.finalize_population", "foxes.opt.core.FarmOptProblem.get_gradients", "foxes.opt.core.FarmOptProblem.initial_values_float", "foxes.opt.core.FarmOptProblem.initial_values_int", "foxes.opt.core.FarmOptProblem.initialize", "foxes.opt.core.FarmOptProblem.max_values_constraints", "foxes.opt.core.FarmOptProblem.max_values_float", "foxes.opt.core.FarmOptProblem.max_values_int", "foxes.opt.core.FarmOptProblem.maximize_objs", "foxes.opt.core.FarmOptProblem.min_values_constraints", "foxes.opt.core.FarmOptProblem.min_values_float", "foxes.opt.core.FarmOptProblem.min_values_int", "foxes.opt.core.FarmOptProblem.n_constraints", "foxes.opt.core.FarmOptProblem.n_objectives", "foxes.opt.core.FarmOptProblem.n_sel_turbines", "foxes.opt.core.FarmOptProblem.n_vars_float", "foxes.opt.core.FarmOptProblem.n_vars_int", "foxes.opt.core.FarmOptProblem.parse_tvar", "foxes.opt.core.FarmOptProblem.prob_res_einsum_individual", "foxes.opt.core.FarmOptProblem.prob_res_einsum_population", "foxes.opt.core.FarmOptProblem.sel_turbines", "foxes.opt.core.FarmOptProblem.tvar", "foxes.opt.core.FarmOptProblem.update_problem_individual", "foxes.opt.core.FarmOptProblem.update_problem_population", "foxes.opt.core.FarmOptProblem.var_names_float", "foxes.opt.core.FarmOptProblem.var_names_int", "foxes.opt.core.FarmVarsProblem", "foxes.opt.core.FarmVarsProblem.initialize", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_individual", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_population", "foxes.opt.core.FarmVarsProblem.update_problem_individual", "foxes.opt.core.FarmVarsProblem.update_problem_population", "foxes.opt.core.PopStates", "foxes.opt.core.PopStates.__init__", "foxes.opt.core.PopStates.calculate", "foxes.opt.core.PopStates.initialize", "foxes.opt.core.PopStates.load_data", "foxes.opt.core.PopStates.output_point_vars", "foxes.opt.core.PopStates.size", "foxes.opt.core.PopStates.weights", "foxes.opt.objectives.FarmVarObjective", "foxes.opt.objectives.FarmVarObjective.__init__", "foxes.opt.objectives.FarmVarObjective.calc_individual", "foxes.opt.objectives.FarmVarObjective.calc_population", "foxes.opt.objectives.FarmVarObjective.finalize_individual", "foxes.opt.objectives.FarmVarObjective.initialize", "foxes.opt.objectives.FarmVarObjective.maximize", "foxes.opt.objectives.FarmVarObjective.n_components", "foxes.opt.objectives.FarmVarObjective.vardeps_float", "foxes.opt.objectives.MaxFarmPower", "foxes.opt.objectives.MaxFarmPower.__init__", "foxes.opt.objectives.MaxNTurbines", "foxes.opt.objectives.MaxNTurbines.__init__", "foxes.opt.objectives.MaxNTurbines.calc_individual", "foxes.opt.objectives.MaxNTurbines.calc_population", "foxes.opt.objectives.MaxNTurbines.maximize", "foxes.opt.objectives.MaxNTurbines.n_components", "foxes.opt.objectives.MinimalMaxTI", "foxes.opt.objectives.MinimalMaxTI.__init__", "foxes.opt.problems.OptFarmVars", "foxes.opt.problems.OptFarmVars.__init__", "foxes.opt.problems.OptFarmVars.add_var", "foxes.opt.problems.OptFarmVars.initial_values_float", "foxes.opt.problems.OptFarmVars.initial_values_int", "foxes.opt.problems.OptFarmVars.initialize", "foxes.opt.problems.OptFarmVars.max_values_float", "foxes.opt.problems.OptFarmVars.max_values_int", "foxes.opt.problems.OptFarmVars.min_values_float", "foxes.opt.problems.OptFarmVars.min_values_int", "foxes.opt.problems.OptFarmVars.opt2farm_vars_individual", "foxes.opt.problems.OptFarmVars.opt2farm_vars_population", "foxes.opt.problems.OptFarmVars.var_names_float", "foxes.opt.problems.OptFarmVars.var_names_int", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_population", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.get_bounds", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Valid", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.cdist", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.Objective", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.cdist", "foxes.opt.problems.layout.geom_layouts.GeomLayout", "foxes.opt.problems.layout.geom_layouts.GeomLayout.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayout.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayout.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.var_names_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_int", "foxes.opt.problems.layout.FarmLayoutOptProblem", "foxes.opt.problems.layout.FarmLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.initialize", "foxes.opt.problems.layout.FarmLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.FarmLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_int", "foxes.opt.problems.layout.RegularLayoutOptProblem", "foxes.opt.problems.layout.RegularLayoutOptProblem.ANGLE", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegularLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegularLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegularLayoutOptProblem.var_names_float", "foxes.utils.read_shp", "foxes.utils.read_shp_polygons", "foxes.utils.read_tab_file", "foxes.utils.runners.DaskRunner", "foxes.utils.runners.DaskRunner.__init__", "foxes.utils.runners.DaskRunner.finalize", "foxes.utils.runners.DaskRunner.initialize", "foxes.utils.runners.DaskRunner.is_distributed", "foxes.utils.runners.DaskRunner.print", "foxes.utils.runners.DaskRunner.run", "foxes.utils.runners.DefaultRunner", "foxes.utils.runners.DefaultRunner.run", "foxes.utils.runners.Runner", "foxes.utils.runners.Runner.__init__", "foxes.utils.runners.Runner.finalize", "foxes.utils.runners.Runner.initialize", "foxes.utils.runners.Runner.initialized", "foxes.utils.runners.Runner.run", "foxes.utils.shp2csv", "foxes.utils.shp2geom2d", "foxes.utils.sqrt_reg", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.uv2wd", "foxes.utils.wd2uv", "foxes.utils.wd2wdvec", "foxes.utils.wdvec2wd", "foxes.utils.write_nc", "foxes.variables.AMB_CAP", "foxes.variables.AMB_CT", "foxes.variables.AMB_P", "foxes.variables.AMB_REWS", "foxes.variables.AMB_REWS2", "foxes.variables.AMB_REWS3", "foxes.variables.AMB_RHO", "foxes.variables.AMB_T", "foxes.variables.AMB_TI", "foxes.variables.AMB_WD", "foxes.variables.AMB_WS", "foxes.variables.AMB_YAW", "foxes.variables.AMB_YAWM", "foxes.variables.AMB_YLD", "foxes.variables.CAP", "foxes.variables.CT", "foxes.variables.D", "foxes.variables.EFF", "foxes.variables.H", "foxes.variables.K", "foxes.variables.KB", "foxes.variables.KTI", "foxes.variables.MAX_P", "foxes.variables.MOL", "foxes.variables.ORDER", "foxes.variables.P", "foxes.variables.PA_ALPHA", "foxes.variables.PA_BETA", "foxes.variables.REWS", "foxes.variables.REWS2", "foxes.variables.REWS3", "foxes.variables.RHO", "foxes.variables.SHEAR", "foxes.variables.T", "foxes.variables.TI", "foxes.variables.TXYH", "foxes.variables.WD", "foxes.variables.WEIGHT", "foxes.variables.WS", "foxes.variables.X", "foxes.variables.Y", "foxes.variables.YAW", "foxes.variables.YAWM", "foxes.variables.YLD", "foxes.variables.Z0", "foxes.variables.amb2var", "foxes.variables.var2amb", "API", "foxes.algorithms", "Downwind algorithm", "Iterative algorithm", "Sequential algorithm", "foxes.constants", "foxes.core", "foxes.data", "foxes", "foxes.input", "foxes.models", "foxes.opt", "foxes.opt.problems", "foxes.opt.problems.layout.geom_layouts", "foxes.output", "foxes.utils", "foxes.utils.abl.neutral", "foxes.variables", "foxes.models.wake_models", "Citation", "Examples", "History", "Welcome to FOXES", "Installation", "Blockage modelling 2", "Blockage modelling 1", "Static data", "Heterogeneous flow", "Layout optimization", "The model book", "Multi-height wind data", "Overview - how to setup foxes", "Power mask", "Wind sector management", "Dynamic wakes 2", "Single row of turbines", "Dynamic wakes 1", "Timeseries data", "Wind rose data", "Yawed rotor wakes", "Testing"], "terms": {"class": [0, 9, 11, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 302, 312, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 380, 383, 387, 393, 400, 403, 409, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 516, 519, 523, 525, 526, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 654, 655, 656, 657, 660, 661, 666, 667, 672, 673, 678, 679, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 804, 809, 816, 823, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 913, 922, 942, 949, 952, 955, 956, 958, 959, 962, 968, 973, 974, 981, 984, 986, 990, 998, 1006, 1010, 1013, 1020, 1048, 1060, 1069, 1078, 1087, 1090, 1092, 1100, 1106, 1107, 1165, 1233, 1234, 1235, 1247, 1248, 1249, 1273, 1309, 1376, 1383, 1399, 1438, 1441, 1442, 1449, 1451, 1459, 1466, 1473, 1481, 1490, 1511, 1513, 1520, 1531, 1538, 1547, 1557, 1582, 1583, 1588, 1596, 1605, 1607, 1613, 1615, 1620, 1629, 1630, 1634, 1635, 1639, 1640, 1644, 1645, 1650, 1655, 1660, 1661, 1666, 1667, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1757, 1763, 1768, 1779, 1788, 1797, 1804, 1806, 1869, 1871, 1872, 1873, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1887, 1890, 1895, 1898, 1903, 1905, 1908], "fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1871, 1872, 1873, 1888, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 326, 328, 329, 333, 335, 338, 341, 342, 343, 344, 345, 346, 351, 352, 353, 357, 359, 365, 366, 367, 368, 369, 371, 376, 377, 378, 379, 381, 384, 386, 390, 391, 395, 397, 398, 401, 405, 406, 408, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 455, 457, 458, 460, 464, 465, 467, 468, 471, 476, 477, 478, 480, 483, 484, 485, 488, 492, 493, 495, 496, 497, 501, 504, 508, 513, 514, 522, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 566, 567, 568, 570, 571, 574, 575, 578, 579, 586, 593, 598, 599, 602, 603, 604, 607, 608, 609, 613, 614, 615, 619, 620, 621, 625, 626, 627, 631, 632, 635, 636, 637, 640, 641, 643, 644, 646, 647, 651, 652, 658, 659, 662, 663, 664, 665, 668, 669, 670, 671, 674, 675, 676, 677, 680, 681, 682, 683, 711, 713, 714, 715, 719, 720, 721, 722, 724, 725, 726, 727, 728, 732, 733, 734, 735, 738, 739, 740, 741, 744, 745, 746, 747, 750, 751, 754, 755, 756, 757, 760, 761, 766, 767, 768, 769, 773, 774, 775, 779, 780, 781, 782, 786, 787, 788, 792, 793, 794, 800, 801, 802, 806, 807, 808, 812, 813, 814, 819, 820, 821, 839, 843, 849, 850, 851, 855, 856, 857, 862, 863, 864, 865, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 887, 890, 891, 892, 895, 896, 897, 900, 901, 902, 905, 906, 907, 924, 936, 955, 956, 968, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 1010, 1292, 1302, 1538, 1540, 1590, 1591, 1592, 1593, 1595, 1764, 1785, 1869, 1875, 1879, 1883, 1890, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "downwind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 1870, 1872, 1873, 1890, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "core": [0, 1, 2, 4, 6, 12, 16, 17, 21, 26, 27, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 82, 83, 85, 86, 92, 93, 94, 97, 98, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 450, 451, 452, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 471, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 501, 504, 508, 509, 510, 511, 513, 514, 515, 519, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 582, 586, 589, 593, 596, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 611, 613, 614, 615, 616, 617, 619, 620, 621, 622, 625, 626, 627, 629, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 688, 692, 696, 700, 704, 707, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 754, 755, 756, 757, 758, 760, 761, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 800, 801, 802, 806, 807, 808, 809, 810, 812, 813, 814, 815, 819, 820, 821, 822, 823, 838, 839, 841, 842, 843, 845, 849, 850, 851, 852, 853, 855, 856, 857, 858, 859, 860, 862, 863, 864, 865, 866, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 924, 936, 984, 1490, 1513, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1607, 1615, 1655, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1764, 1779, 1785, 1869, 1871, 1872, 1873, 1878, 1879, 1881, 1882, 1887, 1890], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 290, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1003, 1004, 1005, 1170, 1218, 1269, 1278, 1358, 1425, 1426, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1494, 1495, 1502, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1528, 1531, 1532, 1533, 1536, 1538, 1540, 1543, 1545, 1546, 1560, 1573, 1577, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1871, 1872, 1873, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1908], "The": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 181, 185, 189, 193, 194, 195, 201, 210, 227, 228, 278, 279, 296, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 513, 514, 516, 518, 519, 522, 523, 526, 527, 528, 529, 530, 532, 533, 535, 536, 537, 538, 540, 541, 543, 544, 545, 546, 549, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 624, 625, 626, 627, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 757, 760, 761, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 819, 820, 821, 823, 838, 839, 841, 842, 843, 846, 847, 849, 850, 851, 852, 853, 855, 856, 857, 859, 860, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 908, 909, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1003, 1004, 1005, 1006, 1008, 1013, 1020, 1026, 1030, 1032, 1036, 1039, 1040, 1041, 1043, 1047, 1048, 1051, 1053, 1057, 1058, 1060, 1061, 1063, 1064, 1065, 1069, 1073, 1074, 1075, 1076, 1085, 1107, 1110, 1112, 1120, 1121, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1155, 1156, 1160, 1161, 1162, 1163, 1164, 1165, 1167, 1182, 1187, 1206, 1211, 1213, 1218, 1225, 1226, 1232, 1233, 1234, 1235, 1239, 1245, 1246, 1247, 1248, 1249, 1253, 1259, 1261, 1264, 1265, 1266, 1269, 1271, 1273, 1278, 1280, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1309, 1310, 1311, 1312, 1313, 1318, 1320, 1331, 1345, 1346, 1348, 1350, 1351, 1358, 1364, 1368, 1372, 1373, 1374, 1376, 1377, 1378, 1379, 1380, 1381, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1414, 1416, 1417, 1419, 1420, 1421, 1422, 1423, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1537, 1538, 1540, 1541, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1803, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1823, 1824, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1837, 1838, 1840, 1844, 1845, 1846, 1847, 1848, 1849, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1866, 1869, 1871, 1874, 1875, 1877, 1879, 1881, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909], "turbin": [0, 1, 3, 4, 9, 11, 16, 20, 21, 35, 46, 48, 49, 290, 291, 292, 293, 294, 295, 302, 316, 319, 325, 339, 340, 341, 342, 347, 361, 368, 375, 377, 378, 395, 397, 409, 410, 411, 412, 413, 414, 415, 416, 418, 423, 424, 425, 426, 427, 428, 431, 437, 438, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 509, 510, 511, 513, 519, 521, 525, 527, 528, 532, 535, 536, 540, 543, 544, 548, 550, 551, 553, 554, 558, 560, 561, 578, 596, 597, 598, 600, 602, 605, 607, 611, 613, 617, 618, 619, 622, 625, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 666, 668, 672, 674, 678, 680, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 732, 733, 735, 736, 738, 739, 740, 742, 744, 745, 746, 750, 751, 754, 755, 760, 761, 762, 766, 767, 768, 771, 773, 777, 779, 786, 790, 792, 796, 797, 800, 801, 806, 807, 809, 812, 816, 819, 823, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 915, 920, 922, 924, 927, 928, 929, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 957, 960, 961, 962, 964, 966, 975, 976, 977, 981, 984, 986, 988, 1490, 1491, 1511, 1513, 1514, 1520, 1521, 1527, 1529, 1531, 1532, 1535, 1537, 1538, 1540, 1544, 1570, 1573, 1576, 1577, 1582, 1596, 1597, 1605, 1606, 1607, 1613, 1614, 1615, 1617, 1630, 1634, 1635, 1639, 1640, 1644, 1645, 1650, 1661, 1672, 1691, 1692, 1697, 1703, 1710, 1711, 1720, 1721, 1730, 1731, 1754, 1763, 1779, 1785, 1833, 1834, 1846, 1857, 1863, 1864, 1870, 1871, 1872, 1874, 1875, 1876, 1878, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "ar": [0, 35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 87, 92, 98, 195, 302, 327, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 394, 396, 397, 401, 403, 406, 413, 416, 423, 431, 432, 433, 435, 447, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 505, 509, 510, 514, 525, 526, 532, 533, 540, 541, 549, 552, 559, 564, 568, 569, 571, 572, 575, 576, 577, 578, 582, 583, 585, 589, 590, 592, 596, 597, 599, 600, 604, 605, 609, 611, 612, 615, 617, 618, 621, 622, 627, 629, 632, 633, 634, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 665, 666, 671, 672, 677, 678, 683, 755, 756, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 802, 808, 813, 820, 851, 856, 864, 883, 887, 888, 892, 893, 897, 898, 902, 903, 907, 920, 938, 939, 940, 954, 960, 961, 1005, 1041, 1048, 1060, 1069, 1078, 1100, 1106, 1110, 1112, 1121, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1141, 1142, 1145, 1149, 1155, 1160, 1161, 1163, 1164, 1167, 1181, 1189, 1206, 1225, 1226, 1231, 1245, 1259, 1261, 1263, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1273, 1277, 1280, 1281, 1283, 1284, 1291, 1292, 1293, 1297, 1298, 1299, 1301, 1302, 1303, 1305, 1309, 1312, 1313, 1314, 1315, 1318, 1320, 1327, 1328, 1345, 1346, 1348, 1350, 1364, 1365, 1368, 1374, 1376, 1377, 1378, 1381, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1416, 1417, 1418, 1421, 1442, 1448, 1449, 1451, 1458, 1459, 1465, 1466, 1472, 1473, 1480, 1481, 1488, 1490, 1511, 1513, 1520, 1538, 1544, 1547, 1548, 1549, 1557, 1582, 1588, 1593, 1615, 1617, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1658, 1659, 1660, 1666, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1815, 1873, 1878, 1879, 1881, 1882, 1884, 1887, 1889, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907, 1908, 1909], "evalu": [0, 16, 35, 46, 47, 62, 65, 66, 70, 71, 74, 75, 368, 377, 378, 381, 393, 397, 420, 423, 425, 427, 428, 431, 432, 433, 436, 437, 527, 528, 530, 532, 533, 535, 536, 538, 540, 543, 544, 546, 550, 553, 554, 556, 560, 561, 563, 576, 578, 582, 589, 686, 690, 694, 698, 702, 705, 709, 711, 713, 715, 717, 719, 721, 722, 724, 726, 727, 729, 732, 735, 736, 738, 740, 742, 744, 746, 749, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 922, 984, 1416, 1417, 1425, 1426, 1428, 1429, 1430, 1431, 1434, 1435, 1441, 1538, 1552, 1553, 1582, 1615, 1710, 1711, 1720, 1730, 1740, 1754, 1763, 1779, 1814, 1871, 1872, 1873, 1879, 1881, 1882, 1883, 1888, 1890, 1891, 1900, 1902, 1903, 1904, 1905, 1906], "onc": [0, 532, 1005, 1090, 1095, 1314, 1892, 1896, 1897, 1903, 1904, 1905, 1908], "order": [0, 35, 103, 195, 228, 368, 423, 425, 509, 672, 678, 711, 713, 717, 719, 722, 724, 729, 732, 736, 738, 742, 744, 1005, 1134, 1138, 1151, 1152, 1236, 1250, 1265, 1271, 1272, 1372, 1374, 1377, 1379, 1381, 1384, 1404, 1405, 1406, 1547, 1557, 1846, 1870, 1871, 1879, 1886, 1890, 1894, 1897, 1901, 1902, 1903, 1904, 1905], "i": [0, 9, 16, 22, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 95, 103, 114, 163, 186, 195, 228, 233, 241, 276, 302, 317, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 368, 371, 375, 383, 384, 386, 387, 390, 393, 396, 397, 403, 405, 409, 413, 414, 416, 419, 423, 425, 428, 430, 435, 447, 449, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 504, 505, 507, 509, 510, 513, 525, 526, 532, 533, 540, 541, 548, 549, 551, 552, 558, 559, 564, 565, 566, 567, 569, 570, 572, 574, 576, 577, 578, 582, 583, 585, 589, 592, 596, 597, 598, 600, 602, 603, 605, 607, 611, 613, 617, 619, 622, 625, 626, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 661, 662, 664, 666, 667, 668, 670, 672, 674, 676, 678, 679, 680, 682, 684, 688, 692, 696, 700, 704, 707, 711, 713, 717, 719, 722, 724, 727, 729, 732, 736, 738, 742, 744, 749, 750, 751, 752, 754, 759, 760, 761, 762, 764, 766, 768, 771, 777, 784, 790, 796, 797, 800, 803, 804, 806, 809, 812, 816, 819, 823, 846, 849, 852, 855, 859, 862, 867, 871, 875, 879, 883, 888, 893, 898, 903, 929, 949, 959, 983, 988, 1005, 1006, 1008, 1010, 1012, 1013, 1017, 1019, 1020, 1022, 1023, 1024, 1025, 1035, 1037, 1040, 1041, 1043, 1045, 1046, 1047, 1048, 1051, 1060, 1064, 1065, 1067, 1068, 1069, 1070, 1076, 1077, 1078, 1084, 1085, 1090, 1092, 1099, 1100, 1103, 1107, 1110, 1111, 1112, 1113, 1120, 1121, 1122, 1123, 1125, 1126, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1147, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1159, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1175, 1176, 1177, 1178, 1179, 1182, 1187, 1193, 1197, 1199, 1200, 1202, 1209, 1218, 1225, 1232, 1233, 1234, 1235, 1246, 1247, 1248, 1249, 1261, 1264, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1276, 1278, 1280, 1281, 1282, 1283, 1284, 1286, 1287, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1309, 1310, 1311, 1312, 1313, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1328, 1329, 1331, 1335, 1337, 1340, 1342, 1344, 1345, 1346, 1348, 1349, 1350, 1358, 1359, 1363, 1364, 1365, 1368, 1372, 1373, 1374, 1375, 1377, 1378, 1379, 1380, 1381, 1382, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1414, 1416, 1417, 1418, 1420, 1421, 1423, 1441, 1447, 1448, 1457, 1458, 1464, 1465, 1471, 1472, 1479, 1480, 1487, 1488, 1538, 1557, 1568, 1569, 1578, 1579, 1582, 1586, 1587, 1588, 1590, 1592, 1596, 1615, 1671, 1707, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1775, 1776, 1779, 1797, 1802, 1873, 1879, 1880, 1886, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "calcul": [0, 3, 4, 9, 11, 16, 17, 19, 20, 21, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 83, 85, 86, 92, 94, 97, 98, 101, 302, 319, 320, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 357, 359, 361, 366, 369, 371, 377, 378, 379, 381, 383, 384, 386, 387, 390, 391, 393, 394, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 420, 421, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 471, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 488, 489, 492, 493, 495, 496, 497, 501, 502, 504, 505, 509, 510, 513, 514, 522, 527, 528, 529, 530, 532, 535, 536, 537, 538, 543, 544, 545, 546, 550, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 582, 583, 586, 589, 590, 593, 596, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 617, 619, 620, 621, 622, 625, 626, 627, 629, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 698, 699, 700, 702, 703, 704, 705, 706, 707, 709, 710, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 728, 729, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 771, 773, 774, 775, 777, 779, 780, 781, 782, 784, 785, 786, 787, 788, 790, 791, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 812, 813, 814, 816, 819, 820, 821, 823, 839, 843, 846, 849, 850, 851, 852, 855, 856, 857, 859, 862, 863, 864, 865, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 913, 914, 922, 924, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 941, 955, 956, 957, 962, 963, 973, 974, 985, 1005, 1120, 1123, 1139, 1147, 1155, 1163, 1164, 1189, 1197, 1266, 1282, 1294, 1301, 1337, 1389, 1391, 1404, 1405, 1406, 1407, 1408, 1417, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1439, 1440, 1442, 1447, 1449, 1451, 1457, 1459, 1464, 1466, 1471, 1473, 1479, 1481, 1487, 1490, 1493, 1494, 1495, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1547, 1557, 1574, 1575, 1578, 1579, 1582, 1586, 1587, 1588, 1590, 1591, 1592, 1593, 1595, 1596, 1598, 1599, 1605, 1607, 1609, 1610, 1613, 1615, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1775, 1776, 1779, 1815, 1816, 1817, 1818, 1819, 1820, 1826, 1827, 1851, 1852, 1869, 1870, 1871, 1872, 1873, 1875, 1879, 1880, 1883, 1884, 1885, 1886, 1887, 1890, 1891, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1904, 1905, 1906, 1907, 1908], "provid": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 949, 983, 988, 1121, 1137, 1139, 1162, 1187, 1265, 1267, 1269, 1283, 1292, 1297, 1298, 1331, 1344, 1358, 1378, 1385, 1391, 1395, 1396, 1407, 1418, 1588, 1592, 1877, 1879, 1890, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1906], "turbineord": 0, "object": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 153, 195, 228, 251, 302, 308, 309, 313, 317, 322, 327, 330, 339, 345, 349, 354, 361, 362, 365, 367, 368, 371, 372, 375, 377, 378, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 508, 509, 510, 519, 523, 525, 527, 528, 532, 535, 536, 540, 543, 544, 548, 550, 551, 553, 554, 558, 560, 561, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 909, 915, 937, 943, 944, 945, 946, 947, 948, 962, 966, 984, 989, 1005, 1023, 1110, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1165, 1170, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1281, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1312, 1313, 1314, 1338, 1346, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1405, 1406, 1407, 1408, 1417, 1418, 1421, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1490, 1497, 1500, 1511, 1513, 1520, 1531, 1532, 1538, 1541, 1542, 1547, 1552, 1553, 1555, 1556, 1557, 1560, 1564, 1569, 1574, 1575, 1582, 1583, 1588, 1592, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1620, 1629, 1634, 1639, 1644, 1648, 1650, 1655, 1660, 1666, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1716, 1720, 1726, 1730, 1736, 1740, 1747, 1754, 1755, 1757, 1763, 1765, 1768, 1779, 1786, 1788, 1813, 1875, 1877, 1879, 1881, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904, 1906, 1907, 1908], "state": [0, 1, 2, 3, 4, 7, 9, 11, 16, 17, 20, 21, 48, 49, 92, 93, 96, 99, 101, 287, 288, 289, 290, 291, 302, 303, 313, 319, 324, 326, 330, 331, 334, 336, 338, 341, 368, 377, 378, 393, 395, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 424, 426, 427, 428, 431, 437, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 564, 565, 576, 578, 596, 597, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 714, 715, 720, 721, 725, 726, 727, 733, 735, 736, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 913, 914, 915, 922, 927, 928, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 957, 960, 973, 975, 976, 977, 978, 979, 980, 981, 984, 985, 989, 1005, 1013, 1026, 1048, 1053, 1069, 1125, 1393, 1585, 1588, 1589, 1594, 1595, 1597, 1606, 1614, 1617, 1626, 1761, 1774, 1792, 1859, 1870, 1873, 1874, 1875, 1879, 1880, 1883, 1886, 1890, 1891, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "ambient": [0, 1, 3, 4, 16, 17, 20, 21, 53, 57, 102, 378, 393, 394, 395, 397, 403, 432, 436, 453, 528, 536, 544, 554, 561, 572, 573, 576, 578, 582, 583, 589, 590, 756, 774, 780, 797, 798, 867, 868, 869, 871, 872, 873, 875, 876, 877, 879, 880, 881, 883, 884, 885, 888, 889, 890, 893, 894, 895, 900, 903, 904, 905, 922, 924, 930, 936, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1867, 1868, 1871, 1874, 1878, 1879, 1886, 1890, 1891, 1893, 1894, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907], "wake_model": [0, 1, 46, 47, 375, 376, 424, 519, 525, 526, 532, 533, 540, 541, 548, 549, 551, 552, 558, 559, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "list": [0, 1, 2, 9, 16, 17, 35, 38, 39, 40, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 61, 66, 67, 71, 72, 77, 81, 82, 83, 86, 92, 96, 98, 100, 228, 241, 302, 317, 319, 320, 327, 329, 330, 331, 332, 334, 335, 337, 339, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 373, 375, 376, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 401, 403, 404, 406, 409, 410, 411, 412, 413, 416, 419, 421, 423, 424, 430, 435, 438, 440, 442, 443, 447, 451, 452, 453, 454, 456, 458, 461, 463, 466, 468, 469, 472, 474, 478, 481, 485, 487, 489, 491, 494, 497, 498, 500, 502, 505, 509, 510, 514, 515, 524, 525, 526, 531, 532, 533, 539, 540, 541, 547, 548, 549, 551, 552, 557, 558, 559, 564, 565, 568, 569, 571, 572, 573, 575, 576, 582, 583, 589, 590, 596, 597, 599, 600, 601, 604, 605, 609, 611, 615, 616, 617, 618, 621, 622, 627, 629, 632, 633, 634, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 665, 666, 671, 672, 677, 678, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 706, 707, 710, 711, 716, 717, 722, 729, 736, 742, 748, 749, 752, 758, 759, 762, 764, 770, 771, 772, 776, 777, 783, 784, 789, 790, 795, 796, 797, 803, 809, 815, 816, 822, 823, 845, 846, 852, 858, 859, 866, 867, 871, 875, 879, 883, 887, 888, 892, 893, 897, 898, 902, 903, 907, 908, 910, 912, 924, 927, 928, 931, 933, 934, 935, 937, 957, 960, 961, 964, 966, 967, 975, 976, 977, 978, 979, 980, 988, 990, 992, 995, 997, 998, 1005, 1006, 1008, 1047, 1120, 1128, 1131, 1132, 1135, 1136, 1137, 1139, 1140, 1141, 1145, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1165, 1183, 1189, 1196, 1201, 1225, 1237, 1240, 1241, 1243, 1244, 1251, 1254, 1255, 1257, 1258, 1261, 1264, 1265, 1266, 1267, 1269, 1281, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1312, 1313, 1346, 1350, 1364, 1368, 1377, 1378, 1384, 1385, 1390, 1391, 1395, 1396, 1397, 1399, 1405, 1406, 1412, 1416, 1417, 1418, 1438, 1441, 1450, 1451, 1452, 1490, 1491, 1493, 1494, 1495, 1496, 1507, 1508, 1511, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1524, 1529, 1531, 1532, 1537, 1540, 1547, 1557, 1574, 1575, 1576, 1580, 1581, 1583, 1588, 1593, 1596, 1597, 1598, 1599, 1605, 1606, 1607, 1609, 1610, 1613, 1614, 1617, 1627, 1628, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1662, 1663, 1668, 1669, 1671, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1707, 1709, 1719, 1729, 1739, 1752, 1753, 1762, 1777, 1778, 1793, 1795, 1869, 1872, 1873, 1875, 1877, 1878, 1883, 1890, 1893, 1894, 1895, 1898, 1901], "wakemodel": [0, 46, 47, 49, 375, 376, 424, 430, 431, 432, 433, 434, 519, 526, 533, 541, 549, 552, 559, 752, 771, 772, 777, 784, 790, 1875, 1887], "wake": [0, 1, 3, 4, 20, 21, 35, 40, 46, 47, 48, 49, 77, 368, 375, 376, 377, 378, 380, 381, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 519, 525, 526, 527, 528, 530, 532, 533, 535, 536, 538, 540, 541, 543, 544, 546, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 572, 648, 711, 712, 714, 715, 717, 720, 721, 722, 725, 726, 727, 729, 733, 735, 736, 737, 739, 740, 742, 743, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 764, 765, 766, 767, 768, 771, 772, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 798, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 812, 813, 816, 817, 819, 820, 823, 838, 839, 842, 846, 847, 849, 850, 851, 852, 853, 855, 856, 859, 860, 862, 864, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 888, 889, 890, 891, 893, 894, 895, 896, 898, 899, 900, 901, 903, 904, 905, 906, 1441, 1710, 1720, 1841, 1848, 1849, 1867, 1871, 1872, 1875, 1879, 1881, 1882, 1886, 1887, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1900, 1901, 1904, 1906, 1907], "model": [0, 1, 2, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 292, 293, 302, 303, 305, 307, 308, 309, 310, 315, 317, 319, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 447, 453, 455, 457, 458, 461, 464, 465, 467, 468, 472, 474, 476, 477, 478, 481, 483, 484, 485, 487, 489, 492, 493, 495, 496, 497, 500, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 913, 922, 942, 949, 952, 953, 955, 958, 962, 973, 981, 984, 986, 987, 988, 1490, 1511, 1513, 1520, 1528, 1531, 1536, 1582, 1583, 1588, 1590, 1591, 1592, 1593, 1596, 1605, 1607, 1613, 1617, 1848, 1849, 1869, 1874, 1875, 1880, 1884, 1886, 1889, 1890, 1891, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "appli": [0, 1, 49, 83, 431, 432, 433, 436, 437, 755, 756, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 802, 808, 813, 820, 851, 856, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 929, 1005, 1013, 1039, 1040, 1043, 1044, 1045, 1046, 1048, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1076, 1077, 1110, 1120, 1131, 1136, 1137, 1140, 1147, 1155, 1161, 1228, 1261, 1264, 1269, 1282, 1294, 1297, 1298, 1301, 1315, 1318, 1320, 1321, 1363, 1376, 1383, 1389, 1391, 1403, 1414, 1421, 1538, 1545, 1546, 1582, 1615, 1617, 1671, 1709, 1710, 1712, 1713, 1720, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1754, 1763, 1779, 1871, 1872, 1879, 1890, 1893, 1894, 1897, 1903, 1905, 1908], "all": [0, 1, 2, 3, 4, 9, 16, 20, 21, 35, 36, 39, 40, 42, 45, 46, 48, 52, 53, 55, 57, 59, 77, 79, 82, 83, 85, 92, 94, 100, 101, 103, 158, 195, 228, 302, 317, 327, 328, 330, 333, 337, 338, 339, 341, 345, 348, 349, 351, 354, 357, 360, 361, 362, 371, 373, 375, 376, 382, 383, 384, 387, 390, 392, 393, 397, 403, 405, 408, 413, 414, 416, 419, 423, 425, 430, 435, 436, 438, 442, 453, 454, 455, 457, 460, 461, 464, 467, 471, 472, 474, 476, 477, 480, 481, 483, 487, 488, 489, 492, 496, 500, 501, 502, 504, 505, 509, 510, 513, 515, 519, 525, 531, 532, 539, 540, 547, 548, 551, 557, 558, 562, 564, 566, 567, 569, 570, 572, 574, 576, 578, 582, 589, 596, 597, 598, 600, 602, 603, 605, 607, 611, 613, 616, 617, 619, 622, 625, 626, 628, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 688, 692, 696, 700, 704, 707, 711, 713, 716, 717, 719, 722, 724, 729, 732, 736, 738, 742, 744, 748, 749, 752, 758, 759, 762, 764, 770, 771, 776, 777, 783, 784, 789, 790, 795, 796, 797, 803, 809, 815, 816, 822, 823, 840, 845, 846, 852, 858, 859, 866, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 913, 915, 922, 941, 942, 949, 953, 955, 957, 958, 960, 961, 962, 964, 966, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 1005, 1013, 1037, 1048, 1069, 1078, 1090, 1095, 1099, 1110, 1121, 1125, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1151, 1152, 1160, 1161, 1163, 1164, 1165, 1173, 1225, 1264, 1265, 1266, 1267, 1269, 1280, 1281, 1283, 1290, 1291, 1292, 1293, 1297, 1298, 1300, 1302, 1309, 1312, 1313, 1315, 1317, 1318, 1320, 1327, 1348, 1349, 1378, 1385, 1391, 1392, 1395, 1398, 1399, 1403, 1404, 1405, 1406, 1407, 1408, 1414, 1418, 1421, 1438, 1441, 1490, 1493, 1494, 1495, 1509, 1510, 1511, 1513, 1515, 1516, 1519, 1520, 1523, 1524, 1528, 1530, 1531, 1536, 1538, 1540, 1544, 1547, 1553, 1557, 1568, 1569, 1582, 1588, 1590, 1592, 1595, 1596, 1597, 1598, 1599, 1604, 1605, 1606, 1607, 1609, 1610, 1613, 1614, 1615, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1659, 1660, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1795, 1816, 1869, 1875, 1877, 1878, 1879, 1884, 1888, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1905, 1907], "rotor_model": [0, 1, 519, 532, 533, 540, 541, 549, 551, 552, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "rotormodel": [0, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 519, 532, 533, 540, 541, 549, 551, 552, 576, 582, 589, 1875, 1879], "rotor": [0, 1, 102, 284, 285, 286, 339, 341, 349, 350, 375, 393, 395, 396, 397, 398, 399, 400, 402, 409, 410, 416, 417, 447, 519, 532, 533, 540, 541, 548, 549, 551, 552, 558, 562, 576, 577, 578, 579, 580, 581, 582, 585, 587, 588, 589, 590, 592, 594, 595, 611, 612, 623, 629, 630, 717, 784, 785, 790, 791, 898, 913, 914, 915, 943, 944, 945, 989, 1490, 1491, 1617, 1630, 1825, 1826, 1827, 1838, 1850, 1851, 1852, 1857, 1874, 1875, 1879, 1886, 1889, 1890, 1891, 1893, 1894, 1897, 1900, 1903, 1905, 1906], "wake_fram": [0, 1, 375, 376, 519, 526, 532, 533, 541, 548, 549, 551, 552, 558, 559, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "wakefram": [0, 375, 376, 423, 424, 425, 426, 427, 428, 429, 519, 526, 533, 541, 549, 552, 559, 711, 712, 717, 722, 729, 736, 742, 743, 1875, 1879], "frame": [0, 1, 35, 375, 376, 396, 423, 424, 426, 427, 429, 431, 461, 519, 526, 533, 541, 549, 552, 559, 564, 565, 577, 585, 592, 711, 712, 714, 715, 717, 720, 721, 722, 725, 726, 729, 733, 735, 736, 739, 740, 742, 743, 745, 746, 755, 773, 779, 786, 792, 823, 1271, 1297, 1794, 1871, 1875, 1879, 1887, 1890, 1894, 1896, 1900, 1903, 1905, 1908], "partial_wakes_model": [0, 1, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "partialwakesmodel": [0, 375, 376, 377, 378, 379, 380, 381, 382, 525, 532, 540, 551, 558, 1875, 1879], "partial": [0, 1, 375, 380, 519, 525, 526, 532, 540, 548, 551, 558, 749, 752, 1297, 1875, 1879, 1887, 1893, 1894, 1900, 1903, 1905], "farm_control": [0, 1, 509, 519, 1898], "farmcontrol": [0, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 509, 519, 1875, 1879], "farm": [0, 1, 3, 4, 9, 11, 16, 17, 20, 21, 23, 25, 26, 36, 40, 42, 48, 49, 53, 55, 59, 64, 69, 73, 77, 79, 85, 91, 94, 226, 302, 303, 316, 333, 339, 341, 342, 349, 351, 354, 357, 361, 368, 375, 377, 378, 381, 384, 390, 393, 395, 397, 398, 409, 410, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 438, 439, 441, 447, 448, 449, 450, 451, 452, 455, 464, 476, 483, 492, 508, 509, 510, 513, 519, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 562, 563, 566, 570, 574, 578, 579, 596, 597, 598, 602, 607, 613, 619, 622, 625, 629, 631, 635, 640, 643, 646, 649, 651, 658, 662, 668, 674, 680, 711, 713, 714, 715, 719, 720, 721, 724, 725, 726, 727, 732, 733, 734, 735, 738, 739, 740, 742, 743, 744, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 798, 800, 801, 802, 806, 807, 808, 809, 810, 812, 813, 816, 817, 819, 820, 839, 846, 847, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 913, 914, 915, 916, 917, 922, 923, 924, 925, 926, 929, 930, 942, 943, 944, 945, 946, 947, 948, 955, 956, 958, 959, 962, 963, 964, 966, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 1490, 1511, 1513, 1520, 1525, 1531, 1534, 1538, 1554, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1590, 1596, 1605, 1607, 1613, 1615, 1617, 1625, 1626, 1710, 1720, 1730, 1740, 1754, 1760, 1761, 1763, 1773, 1774, 1775, 1776, 1779, 1791, 1792, 1869, 1870, 1871, 1872, 1874, 1875, 1878, 1879, 1880, 1881, 1883, 1888, 1889, 1890, 1891, 1893, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "control": [0, 1, 509, 519, 1005, 1120, 1134, 1139, 1147, 1155, 1160, 1163, 1164, 1261, 1269, 1280, 1281, 1282, 1291, 1292, 1294, 1297, 1298, 1299, 1301, 1312, 1313, 1327, 1346, 1368, 1373, 1377, 1380, 1384, 1398, 1399, 1405, 1406, 1879, 1894, 1903, 1905], "n_state": [0, 4, 16, 17, 21, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 313, 319, 322, 324, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 397, 398, 408, 409, 410, 411, 412, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 507, 513, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 562, 566, 570, 574, 578, 579, 596, 597, 598, 602, 607, 613, 619, 624, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 713, 714, 715, 719, 720, 721, 724, 725, 726, 727, 732, 733, 734, 735, 738, 739, 740, 744, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 842, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 957, 989, 1538, 1540, 1582, 1584, 1585, 1588, 1590, 1595, 1615, 1625, 1626, 1754, 1760, 1761, 1763, 1773, 1774, 1779, 1791, 1792, 1878, 1880, 1894, 1903, 1904, 1905], "int": [0, 1, 9, 10, 13, 22, 28, 33, 37, 43, 50, 60, 64, 69, 73, 80, 95, 97, 99, 103, 124, 228, 242, 274, 302, 303, 314, 323, 324, 325, 326, 336, 343, 344, 345, 358, 366, 369, 371, 372, 377, 378, 379, 395, 397, 399, 405, 407, 409, 410, 412, 440, 441, 447, 449, 450, 451, 452, 454, 457, 459, 461, 463, 465, 467, 469, 470, 477, 479, 484, 486, 489, 491, 493, 495, 496, 498, 499, 504, 522, 527, 528, 529, 532, 533, 535, 536, 537, 541, 543, 544, 545, 549, 550, 553, 554, 555, 560, 561, 567, 578, 580, 582, 583, 586, 587, 589, 590, 593, 594, 603, 608, 614, 620, 626, 636, 663, 664, 669, 670, 675, 676, 681, 682, 701, 728, 741, 747, 757, 769, 782, 788, 794, 814, 821, 843, 857, 863, 865, 911, 913, 914, 915, 920, 924, 925, 936, 937, 943, 944, 945, 946, 947, 948, 957, 960, 961, 964, 966, 967, 975, 976, 977, 978, 979, 980, 989, 1060, 1110, 1112, 1120, 1128, 1131, 1132, 1139, 1147, 1155, 1160, 1167, 1261, 1264, 1265, 1266, 1269, 1278, 1282, 1292, 1293, 1294, 1298, 1299, 1301, 1389, 1390, 1404, 1405, 1406, 1417, 1421, 1441, 1490, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1510, 1511, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1523, 1524, 1526, 1527, 1529, 1531, 1532, 1535, 1537, 1538, 1540, 1541, 1542, 1547, 1548, 1549, 1551, 1555, 1556, 1557, 1559, 1560, 1563, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1576, 1577, 1582, 1583, 1585, 1588, 1589, 1591, 1592, 1594, 1596, 1598, 1599, 1600, 1601, 1603, 1605, 1607, 1609, 1610, 1612, 1613, 1615, 1617, 1619, 1620, 1622, 1624, 1626, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1646, 1647, 1648, 1649, 1650, 1652, 1653, 1654, 1655, 1657, 1658, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1668, 1669, 1670, 1672, 1674, 1675, 1676, 1678, 1679, 1681, 1682, 1684, 1685, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1699, 1700, 1702, 1703, 1706, 1707, 1710, 1711, 1716, 1720, 1721, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1736, 1740, 1741, 1746, 1747, 1749, 1751, 1753, 1754, 1755, 1757, 1761, 1763, 1764, 1765, 1767, 1768, 1770, 1772, 1774, 1778, 1779, 1786, 1788, 1792, 1795, 1797, 1798, 1812, 1817, 1818, 1819, 1820, 1821, 1874, 1895], "number": [0, 9, 10, 13, 16, 33, 92, 99, 103, 114, 163, 186, 194, 210, 228, 233, 274, 276, 302, 316, 319, 323, 324, 325, 330, 336, 393, 399, 403, 407, 438, 441, 452, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 505, 532, 533, 576, 580, 582, 583, 587, 589, 590, 594, 633, 817, 915, 920, 943, 944, 945, 946, 947, 948, 964, 966, 967, 989, 1006, 1011, 1013, 1025, 1030, 1036, 1048, 1057, 1061, 1069, 1073, 1075, 1085, 1110, 1120, 1134, 1136, 1138, 1139, 1147, 1151, 1152, 1155, 1264, 1265, 1266, 1269, 1273, 1280, 1281, 1282, 1284, 1291, 1293, 1294, 1301, 1302, 1309, 1312, 1313, 1314, 1344, 1351, 1374, 1377, 1384, 1389, 1391, 1398, 1399, 1404, 1405, 1406, 1407, 1417, 1421, 1490, 1502, 1503, 1504, 1511, 1513, 1518, 1520, 1526, 1531, 1538, 1568, 1569, 1571, 1572, 1582, 1585, 1588, 1594, 1596, 1603, 1605, 1607, 1612, 1613, 1615, 1626, 1629, 1630, 1633, 1634, 1635, 1638, 1639, 1640, 1643, 1644, 1649, 1650, 1654, 1655, 1660, 1661, 1665, 1666, 1670, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1692, 1696, 1697, 1702, 1703, 1706, 1707, 1709, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1754, 1761, 1763, 1764, 1774, 1779, 1792, 1798, 1880, 1882, 1888, 1897, 1898, 1900], "classmethod": [0, 6, 9, 12, 16, 27, 302, 312, 319, 322, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 525, 532, 540, 548, 551, 558, 576, 582, 589, 596, 600, 605, 610, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 913, 922, 942, 949, 952, 953, 955, 958, 962, 965, 973, 981, 984, 986, 998, 1003, 1004, 1005, 1006, 1010, 1013, 1020, 1048, 1069, 1107, 1441, 1490, 1511, 1513, 1520, 1528, 1531, 1536, 1538, 1573, 1577, 1582, 1596, 1605, 1607, 1613, 1615, 1754, 1763, 1779, 1797, 1801], "get_model": [0, 6, 9, 12, 16, 27], "name": [0, 1, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 35, 38, 39, 40, 44, 45, 46, 49, 51, 52, 53, 56, 57, 61, 62, 63, 66, 67, 71, 72, 77, 81, 83, 86, 92, 98, 100, 294, 302, 310, 312, 317, 319, 320, 321, 322, 327, 330, 335, 337, 339, 340, 346, 347, 348, 349, 352, 354, 359, 360, 361, 362, 365, 367, 374, 375, 380, 381, 382, 383, 385, 387, 391, 392, 393, 395, 400, 401, 403, 406, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 445, 446, 447, 450, 451, 452, 453, 454, 458, 461, 463, 468, 472, 474, 478, 481, 482, 485, 487, 489, 491, 497, 500, 502, 503, 505, 507, 509, 510, 514, 515, 516, 518, 519, 523, 524, 525, 526, 530, 531, 532, 538, 540, 546, 547, 548, 551, 556, 557, 558, 563, 564, 565, 568, 569, 571, 572, 575, 576, 582, 583, 589, 590, 596, 599, 600, 601, 604, 605, 609, 611, 612, 615, 616, 617, 618, 621, 622, 624, 627, 629, 632, 633, 637, 638, 639, 641, 642, 644, 645, 647, 648, 649, 652, 653, 654, 655, 656, 657, 659, 660, 661, 665, 666, 667, 671, 672, 673, 677, 678, 679, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 706, 707, 710, 711, 716, 717, 722, 729, 736, 742, 743, 748, 749, 750, 751, 752, 753, 754, 755, 756, 758, 759, 761, 762, 764, 765, 766, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 798, 800, 802, 803, 804, 806, 808, 809, 810, 813, 816, 817, 819, 820, 822, 823, 846, 847, 849, 851, 852, 853, 856, 859, 860, 864, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 913, 915, 922, 937, 938, 939, 940, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 958, 960, 961, 962, 964, 965, 966, 967, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 988, 989, 990, 993, 996, 1005, 1006, 1008, 1085, 1141, 1160, 1162, 1264, 1266, 1269, 1273, 1288, 1291, 1292, 1293, 1298, 1309, 1396, 1405, 1406, 1441, 1489, 1490, 1491, 1496, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1520, 1521, 1528, 1531, 1532, 1536, 1538, 1540, 1573, 1577, 1580, 1581, 1582, 1583, 1584, 1585, 1588, 1593, 1596, 1597, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1617, 1625, 1626, 1627, 1628, 1629, 1630, 1634, 1635, 1639, 1640, 1644, 1645, 1650, 1651, 1655, 1660, 1661, 1666, 1667, 1672, 1673, 1679, 1680, 1685, 1686, 1691, 1692, 1697, 1698, 1703, 1704, 1706, 1707, 1710, 1719, 1720, 1729, 1730, 1739, 1740, 1752, 1753, 1754, 1760, 1761, 1762, 1763, 1764, 1773, 1774, 1777, 1778, 1779, 1785, 1791, 1792, 1793, 1795, 1874, 1876, 1884, 1890, 1892, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1906], "get": [0, 6, 9, 12, 16, 26, 27, 30, 31, 35, 40, 46, 53, 57, 62, 65, 66, 70, 71, 74, 75, 77, 83, 92, 103, 177, 228, 302, 307, 317, 319, 326, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 426, 430, 435, 443, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 519, 523, 525, 532, 540, 548, 551, 558, 562, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 714, 717, 720, 722, 725, 729, 733, 734, 736, 739, 742, 745, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 913, 922, 942, 949, 951, 955, 958, 962, 964, 973, 981, 984, 986, 990, 996, 997, 1005, 1013, 1018, 1019, 1027, 1028, 1048, 1049, 1054, 1055, 1069, 1070, 1084, 1088, 1103, 1130, 1147, 1155, 1174, 1181, 1190, 1193, 1203, 1204, 1221, 1222, 1224, 1225, 1226, 1235, 1238, 1243, 1249, 1252, 1257, 1264, 1265, 1301, 1302, 1350, 1364, 1377, 1384, 1389, 1405, 1406, 1442, 1444, 1449, 1451, 1454, 1459, 1466, 1473, 1476, 1481, 1484, 1490, 1492, 1509, 1510, 1511, 1513, 1519, 1520, 1530, 1531, 1538, 1550, 1561, 1565, 1577, 1582, 1588, 1596, 1604, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1890, 1893, 1894, 1895], "specif": [0, 6, 9, 12, 16, 27, 35, 40, 46, 53, 57, 77, 83, 92, 195, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1006, 1013, 1041, 1048, 1069, 1149, 1266, 1283, 1315, 1398, 1588, 1871, 1872, 1873, 1884, 1891, 1906], "mbook": [0, 1, 16, 17, 302, 303, 508, 984, 985, 986, 987, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "constructor": [0, 1, 9, 10, 16, 17, 35, 40, 41, 46, 47, 53, 54, 57, 58, 62, 63, 66, 67, 71, 72, 75, 76, 77, 78, 83, 84, 87, 88, 92, 93, 302, 303, 312, 317, 319, 320, 327, 330, 331, 339, 340, 349, 350, 354, 355, 361, 362, 363, 375, 376, 383, 387, 388, 393, 394, 400, 403, 409, 410, 413, 415, 416, 417, 418, 419, 423, 429, 430, 434, 435, 438, 439, 443, 444, 453, 454, 461, 463, 472, 474, 475, 481, 482, 489, 491, 502, 503, 505, 509, 510, 511, 516, 518, 519, 521, 525, 526, 532, 533, 540, 541, 548, 549, 551, 552, 558, 559, 564, 565, 569, 572, 573, 576, 582, 583, 589, 590, 596, 597, 600, 601, 605, 606, 611, 612, 617, 618, 622, 623, 629, 630, 633, 634, 638, 639, 642, 645, 648, 649, 653, 654, 655, 656, 657, 660, 661, 666, 667, 672, 673, 678, 679, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 704, 707, 708, 711, 712, 717, 718, 722, 723, 729, 730, 736, 737, 742, 743, 749, 752, 753, 759, 762, 763, 764, 765, 771, 772, 777, 778, 784, 785, 790, 791, 796, 797, 798, 803, 804, 809, 810, 816, 817, 823, 838, 846, 847, 852, 853, 859, 860, 867, 868, 871, 872, 875, 876, 879, 880, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 908, 909, 913, 914, 922, 923, 942, 949, 950, 952, 955, 956, 958, 959, 962, 963, 968, 969, 973, 974, 981, 982, 984, 985, 986, 987, 990, 991, 1013, 1038, 1048, 1069, 1266, 1269, 1291, 1293, 1449, 1450, 1451, 1452, 1466, 1467, 1473, 1474, 1481, 1482, 1490, 1491, 1511, 1512, 1513, 1514, 1520, 1521, 1538, 1540, 1582, 1588, 1589, 1596, 1597, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1616, 1629, 1630, 1634, 1635, 1639, 1640, 1644, 1645, 1650, 1651, 1655, 1656, 1660, 1661, 1666, 1667, 1672, 1673, 1679, 1680, 1685, 1686, 1691, 1692, 1697, 1698, 1703, 1704, 1706, 1707, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1754, 1779, 1785, 1797, 1798, 1898, 1906], "init_st": [0, 7, 9, 16], "initi": [0, 7, 8, 9, 16, 18, 35, 37, 40, 43, 46, 50, 53, 57, 60, 77, 80, 83, 87, 90, 92, 97, 302, 311, 317, 320, 322, 327, 329, 330, 339, 344, 347, 349, 354, 361, 362, 369, 370, 375, 379, 381, 383, 387, 393, 403, 413, 416, 419, 423, 430, 433, 435, 453, 454, 461, 472, 474, 481, 484, 489, 495, 502, 505, 509, 510, 525, 529, 530, 532, 537, 538, 540, 545, 546, 548, 551, 555, 556, 558, 563, 564, 569, 572, 576, 582, 586, 589, 593, 596, 600, 605, 608, 611, 614, 617, 620, 622, 629, 633, 636, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 728, 729, 736, 741, 742, 747, 749, 752, 757, 759, 762, 764, 769, 771, 775, 777, 781, 782, 784, 787, 788, 790, 793, 794, 796, 797, 802, 803, 808, 809, 813, 814, 816, 820, 821, 823, 843, 846, 851, 852, 856, 857, 859, 864, 865, 867, 871, 875, 879, 883, 888, 893, 898, 903, 968, 971, 1078, 1081, 1100, 1102, 1126, 1130, 1303, 1441, 1490, 1500, 1501, 1511, 1513, 1517, 1520, 1531, 1538, 1558, 1559, 1560, 1582, 1583, 1588, 1591, 1596, 1601, 1605, 1607, 1613, 1615, 1617, 1618, 1619, 1620, 1629, 1634, 1639, 1644, 1648, 1650, 1655, 1660, 1664, 1666, 1672, 1676, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1715, 1716, 1720, 1725, 1726, 1730, 1735, 1736, 1740, 1745, 1746, 1747, 1754, 1756, 1757, 1763, 1766, 1767, 1768, 1779, 1787, 1788, 1797, 1800, 1804, 1806, 1807, 1809, 1810, 1890, 1894, 1897, 1899, 1903, 1905], "need": [0, 7, 9, 16, 368, 419, 421, 428, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 706, 707, 710, 727, 883, 887, 888, 892, 893, 897, 898, 902, 903, 907, 1005, 1078, 1084, 1099, 1100, 1103, 1122, 1135, 1136, 1141, 1233, 1234, 1235, 1247, 1248, 1249, 1262, 1291, 1292, 1293, 1299, 1378, 1385, 1391, 1393, 1396, 1397, 1404, 1405, 1406, 1890, 1894, 1897, 1899, 1901, 1902, 1907], "all_model": [0, 2, 9, 16], "with_stat": [0, 2, 9, 16], "true": [0, 2, 3, 4, 9, 11, 16, 29, 64, 69, 73, 103, 186, 228, 276, 368, 370, 397, 424, 443, 450, 454, 502, 503, 507, 578, 582, 583, 589, 590, 629, 630, 842, 860, 937, 943, 944, 945, 946, 947, 948, 990, 996, 1005, 1010, 1013, 1019, 1023, 1029, 1035, 1037, 1048, 1056, 1059, 1060, 1069, 1070, 1072, 1110, 1114, 1121, 1123, 1125, 1126, 1130, 1134, 1136, 1137, 1138, 1139, 1141, 1147, 1151, 1152, 1155, 1160, 1163, 1164, 1165, 1177, 1197, 1207, 1225, 1245, 1259, 1261, 1264, 1265, 1269, 1271, 1272, 1273, 1276, 1278, 1280, 1283, 1291, 1293, 1297, 1298, 1299, 1301, 1306, 1309, 1315, 1318, 1319, 1320, 1327, 1344, 1352, 1359, 1374, 1377, 1378, 1381, 1384, 1385, 1389, 1392, 1395, 1398, 1403, 1404, 1405, 1406, 1412, 1414, 1416, 1417, 1421, 1441, 1447, 1448, 1457, 1458, 1459, 1461, 1464, 1465, 1466, 1468, 1471, 1472, 1473, 1475, 1479, 1480, 1487, 1488, 1501, 1544, 1607, 1608, 1714, 1724, 1734, 1744, 1795, 1796, 1798, 1884, 1893, 1894, 1896, 1897, 1899, 1901, 1903, 1905, 1906, 1907], "return": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 106, 107, 108, 112, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 163, 186, 228, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 512, 525, 532, 534, 540, 542, 548, 551, 558, 564, 569, 572, 576, 582, 584, 589, 591, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 650, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 727, 729, 731, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 799, 803, 805, 809, 811, 816, 818, 823, 846, 848, 852, 854, 859, 861, 867, 871, 875, 879, 883, 888, 893, 898, 903, 913, 932, 937, 943, 944, 945, 962, 984, 989, 1006, 1008, 1009, 1010, 1011, 1012, 1013, 1017, 1021, 1022, 1023, 1024, 1025, 1026, 1032, 1044, 1045, 1046, 1047, 1048, 1050, 1052, 1053, 1058, 1060, 1062, 1066, 1067, 1068, 1069, 1071, 1074, 1077, 1078, 1080, 1084, 1085, 1088, 1090, 1091, 1093, 1094, 1095, 1100, 1101, 1103, 1108, 1109, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1142, 1143, 1150, 1153, 1154, 1157, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1175, 1176, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1206, 1208, 1209, 1216, 1217, 1219, 1220, 1223, 1227, 1228, 1229, 1230, 1231, 1232, 1236, 1237, 1240, 1241, 1242, 1244, 1246, 1250, 1251, 1254, 1255, 1256, 1258, 1260, 1261, 1262, 1263, 1270, 1276, 1287, 1296, 1300, 1303, 1314, 1316, 1344, 1420, 1423, 1442, 1449, 1451, 1459, 1466, 1473, 1481, 1490, 1511, 1513, 1520, 1531, 1588, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1884, 1890, 1904], "calc_farm": [0, 3, 9, 11, 16, 20, 1538, 1540, 1890, 1893, 1894, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "calc_paramet": [0, 3, 4, 20, 21], "persist": [0, 3, 20, 1350, 1364, 1377, 1384], "final": [0, 3, 4, 5, 9, 11, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 87, 89, 92, 302, 306, 317, 327, 330, 339, 343, 347, 349, 354, 361, 362, 366, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 432, 435, 436, 453, 461, 465, 472, 474, 481, 489, 493, 502, 505, 509, 510, 519, 522, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 663, 666, 669, 672, 675, 678, 681, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 756, 759, 762, 764, 771, 774, 777, 780, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 863, 867, 869, 871, 873, 875, 877, 879, 881, 883, 884, 885, 888, 889, 890, 893, 894, 895, 898, 899, 900, 903, 904, 905, 968, 1490, 1497, 1498, 1499, 1511, 1513, 1520, 1531, 1538, 1555, 1556, 1582, 1588, 1596, 1600, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786, 1797, 1799, 1804, 1806, 1808, 1890, 1893, 1897, 1902, 1905, 1907], "data": [0, 1, 3, 4, 9, 11, 16, 20, 21, 26, 30, 31, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 97, 103, 175, 177, 195, 228, 302, 303, 305, 307, 308, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 365, 367, 368, 369, 371, 375, 377, 378, 381, 383, 384, 386, 387, 390, 393, 395, 397, 398, 403, 405, 409, 413, 414, 416, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457, 461, 463, 464, 467, 472, 474, 476, 477, 481, 482, 483, 489, 491, 492, 496, 502, 503, 504, 505, 507, 509, 510, 513, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 574, 576, 578, 579, 582, 589, 596, 598, 600, 601, 602, 603, 605, 607, 610, 611, 613, 617, 618, 619, 622, 624, 625, 626, 629, 630, 631, 633, 634, 635, 638, 640, 642, 643, 645, 646, 648, 649, 651, 653, 654, 655, 656, 657, 658, 660, 661, 662, 664, 666, 667, 668, 670, 672, 673, 674, 676, 678, 679, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 701, 702, 704, 705, 707, 709, 711, 713, 714, 715, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 771, 773, 774, 775, 777, 779, 780, 781, 782, 784, 786, 787, 788, 790, 792, 793, 794, 796, 797, 798, 800, 801, 802, 803, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 819, 820, 821, 823, 839, 840, 841, 842, 843, 846, 847, 849, 850, 851, 852, 855, 856, 857, 859, 862, 864, 865, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 906, 913, 914, 922, 927, 928, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 942, 946, 947, 948, 949, 954, 955, 958, 959, 960, 961, 962, 964, 966, 967, 968, 971, 972, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 989, 990, 991, 997, 998, 1003, 1004, 1005, 1024, 1048, 1051, 1069, 1084, 1103, 1110, 1120, 1121, 1122, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1167, 1171, 1187, 1188, 1233, 1234, 1235, 1239, 1245, 1247, 1248, 1249, 1253, 1259, 1261, 1264, 1265, 1266, 1267, 1269, 1273, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1309, 1310, 1311, 1312, 1313, 1315, 1320, 1328, 1344, 1346, 1374, 1375, 1381, 1382, 1389, 1390, 1391, 1392, 1395, 1396, 1397, 1398, 1401, 1405, 1406, 1412, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1427, 1433, 1437, 1490, 1498, 1499, 1511, 1513, 1520, 1531, 1538, 1555, 1556, 1578, 1579, 1582, 1586, 1587, 1588, 1590, 1592, 1596, 1600, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1775, 1776, 1779, 1786, 1794, 1796, 1869, 1871, 1872, 1874, 1875, 1878, 1879, 1883, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1894, 1896, 1897, 1900, 1901, 1902, 1903, 1904, 1905, 1908], "calc_point": [0, 4, 9, 16, 21, 957, 975, 976, 977, 978, 979, 980, 1890, 1893, 1894, 1904], "farm_result": [0, 3, 4, 9, 11, 16, 20, 21, 25, 913, 914, 922, 923, 942, 955, 956, 958, 959, 973, 974, 981, 982, 1893, 1894, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "point": [0, 1, 4, 9, 14, 16, 17, 21, 24, 31, 32, 46, 48, 49, 57, 59, 91, 94, 102, 103, 163, 186, 280, 281, 284, 285, 286, 289, 302, 313, 319, 322, 323, 330, 331, 333, 368, 377, 378, 381, 383, 384, 387, 390, 393, 395, 396, 397, 398, 399, 402, 423, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 464, 476, 483, 492, 519, 527, 528, 530, 532, 533, 535, 536, 538, 543, 544, 546, 550, 553, 554, 556, 558, 560, 561, 562, 563, 566, 570, 572, 574, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 592, 594, 595, 711, 714, 715, 717, 720, 721, 722, 723, 725, 726, 727, 729, 730, 733, 735, 736, 737, 739, 740, 742, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 943, 944, 945, 946, 947, 948, 955, 956, 957, 962, 963, 964, 966, 972, 973, 974, 984, 985, 1005, 1013, 1022, 1041, 1047, 1048, 1064, 1065, 1069, 1084, 1103, 1110, 1120, 1121, 1128, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1147, 1149, 1150, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1233, 1234, 1247, 1248, 1261, 1264, 1265, 1269, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1344, 1368, 1373, 1380, 1389, 1390, 1398, 1403, 1405, 1406, 1407, 1408, 1412, 1417, 1421, 1442, 1445, 1446, 1447, 1448, 1449, 1451, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1481, 1485, 1486, 1487, 1488, 1538, 1540, 1590, 1671, 1709, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1764, 1795, 1815, 1816, 1870, 1871, 1874, 1875, 1879, 1882, 1883, 1884, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1903, 1904, 1905, 1906, 1907], "point_model": [0, 4, 9, 21, 330, 331, 519, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 1898], "none": [0, 1, 4, 9, 10, 16, 17, 35, 40, 46, 47, 48, 53, 57, 62, 63, 64, 66, 67, 69, 71, 72, 73, 77, 78, 83, 87, 91, 92, 96, 103, 136, 147, 228, 254, 264, 302, 303, 308, 313, 317, 319, 326, 327, 329, 330, 334, 339, 341, 349, 354, 361, 362, 367, 368, 375, 376, 378, 383, 387, 390, 393, 395, 397, 403, 404, 409, 410, 411, 412, 413, 416, 417, 419, 423, 424, 428, 430, 435, 438, 439, 447, 449, 451, 452, 453, 454, 456, 461, 463, 466, 469, 472, 474, 475, 481, 482, 489, 491, 494, 498, 502, 505, 509, 510, 516, 518, 519, 521, 523, 524, 525, 526, 528, 532, 533, 536, 540, 541, 544, 548, 549, 551, 552, 554, 558, 559, 561, 564, 569, 572, 576, 578, 582, 589, 596, 600, 605, 611, 617, 618, 622, 629, 633, 638, 642, 645, 648, 649, 653, 655, 657, 660, 661, 666, 667, 672, 673, 678, 679, 684, 688, 692, 696, 700, 701, 704, 707, 711, 717, 722, 723, 727, 729, 736, 737, 742, 743, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 809, 810, 816, 817, 846, 847, 852, 859, 867, 871, 875, 879, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 908, 909, 913, 914, 915, 918, 919, 920, 921, 922, 924, 929, 936, 937, 942, 943, 944, 945, 946, 947, 948, 949, 950, 957, 958, 959, 960, 961, 962, 964, 966, 968, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 988, 989, 990, 991, 996, 1005, 1006, 1008, 1013, 1019, 1069, 1070, 1078, 1081, 1082, 1090, 1091, 1100, 1110, 1111, 1120, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1151, 1152, 1155, 1156, 1160, 1161, 1162, 1163, 1164, 1165, 1168, 1169, 1170, 1182, 1187, 1195, 1199, 1200, 1204, 1218, 1220, 1225, 1231, 1243, 1257, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1278, 1280, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1312, 1313, 1314, 1317, 1320, 1328, 1331, 1344, 1346, 1348, 1350, 1352, 1358, 1359, 1364, 1368, 1372, 1373, 1374, 1377, 1378, 1379, 1380, 1381, 1384, 1385, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1404, 1405, 1406, 1407, 1416, 1417, 1418, 1419, 1421, 1422, 1439, 1441, 1459, 1461, 1466, 1468, 1473, 1475, 1489, 1490, 1491, 1493, 1494, 1495, 1511, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1524, 1531, 1532, 1538, 1540, 1541, 1542, 1547, 1557, 1582, 1588, 1596, 1597, 1598, 1599, 1605, 1606, 1607, 1609, 1610, 1613, 1614, 1615, 1617, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1661, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1709, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1754, 1763, 1764, 1779, 1795, 1797, 1798, 1884, 1893, 1894, 1896, 1898, 1899, 1903, 1904, 1905, 1908], "given": [0, 4, 9, 16, 21, 195, 409, 410, 423, 426, 474, 523, 596, 622, 649, 672, 678, 711, 714, 717, 720, 722, 725, 729, 733, 736, 739, 742, 743, 745, 797, 798, 809, 810, 816, 817, 846, 847, 922, 924, 929, 936, 941, 955, 990, 996, 1005, 1013, 1023, 1024, 1039, 1040, 1042, 1047, 1048, 1063, 1064, 1069, 1078, 1088, 1100, 1110, 1120, 1121, 1131, 1135, 1136, 1137, 1139, 1140, 1145, 1147, 1155, 1157, 1160, 1161, 1162, 1163, 1164, 1187, 1264, 1265, 1266, 1267, 1269, 1270, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1331, 1346, 1348, 1378, 1385, 1389, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1405, 1406, 1407, 1408, 1412, 1416, 1417, 1418, 1421, 1425, 1428, 1429, 1434, 1489, 1490, 1498, 1499, 1511, 1513, 1520, 1531, 1538, 1548, 1549, 1555, 1556, 1582, 1596, 1600, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1658, 1660, 1666, 1671, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1709, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786, 1797, 1803, 1804, 1805, 1806, 1811, 1878, 1879, 1880, 1883, 1884, 1885, 1890, 1902], "set": [0, 4, 9, 14, 16, 21, 92, 93, 327, 339, 347, 409, 410, 416, 507, 509, 564, 622, 629, 915, 1005, 1013, 1038, 1041, 1048, 1069, 1084, 1090, 1099, 1103, 1111, 1120, 1122, 1125, 1126, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1139, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1171, 1218, 1219, 1261, 1263, 1264, 1265, 1266, 1269, 1271, 1272, 1276, 1278, 1280, 1282, 1283, 1284, 1291, 1293, 1294, 1295, 1297, 1298, 1299, 1301, 1302, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1401, 1403, 1404, 1405, 1406, 1409, 1410, 1412, 1414, 1416, 1417, 1419, 1422, 1441, 1821, 1879, 1890, 1892, 1893, 1894, 1895, 1901, 1902, 1906, 1907, 1908], "clear_mem": [0, 5, 9, 16, 302, 306, 1905], "fals": [0, 3, 4, 5, 9, 16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 97, 103, 186, 302, 306, 315, 317, 319, 326, 327, 330, 339, 349, 350, 354, 361, 362, 367, 368, 369, 375, 383, 387, 393, 395, 397, 403, 413, 416, 419, 423, 430, 435, 447, 453, 454, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 573, 576, 578, 582, 589, 596, 600, 605, 611, 617, 622, 623, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 685, 688, 689, 692, 693, 696, 697, 700, 704, 707, 711, 717, 722, 729, 736, 742, 747, 749, 752, 757, 759, 762, 764, 769, 771, 777, 782, 784, 785, 788, 790, 791, 794, 796, 797, 798, 803, 809, 814, 816, 821, 823, 843, 846, 852, 857, 859, 865, 867, 871, 875, 879, 883, 884, 888, 889, 893, 894, 898, 903, 904, 913, 914, 915, 922, 924, 930, 936, 943, 944, 945, 946, 947, 948, 955, 957, 958, 960, 961, 962, 964, 966, 967, 975, 976, 977, 978, 979, 980, 984, 989, 1005, 1010, 1013, 1033, 1034, 1035, 1037, 1041, 1048, 1060, 1069, 1110, 1121, 1123, 1125, 1126, 1130, 1136, 1137, 1139, 1141, 1155, 1157, 1160, 1163, 1164, 1177, 1189, 1207, 1225, 1243, 1244, 1245, 1257, 1258, 1259, 1264, 1265, 1266, 1269, 1271, 1272, 1273, 1283, 1291, 1292, 1293, 1297, 1299, 1301, 1305, 1309, 1315, 1318, 1320, 1327, 1330, 1352, 1359, 1374, 1377, 1378, 1381, 1384, 1385, 1392, 1395, 1398, 1403, 1404, 1414, 1416, 1417, 1421, 1441, 1442, 1443, 1447, 1449, 1451, 1453, 1457, 1459, 1464, 1466, 1471, 1473, 1479, 1481, 1483, 1487, 1491, 1538, 1547, 1552, 1553, 1557, 1582, 1588, 1615, 1617, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1795, 1813, 1884, 1890, 1896], "print": [0, 9, 16, 302, 314, 519, 524, 913, 915, 922, 942, 949, 953, 955, 958, 962, 973, 981, 984, 986, 1088, 1284, 1441, 1490, 1511, 1513, 1520, 1528, 1531, 1536, 1596, 1605, 1607, 1613, 1797, 1802, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1903, 1904, 1905, 1906, 1907, 1908], "arg": [0, 9, 10, 16, 17, 20, 302, 312, 314, 393, 400, 413, 415, 416, 418, 423, 429, 430, 434, 448, 449, 502, 503, 516, 518, 519, 523, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 685, 688, 689, 692, 693, 696, 697, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 763, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 913, 922, 932, 942, 949, 952, 955, 957, 958, 962, 973, 981, 984, 986, 1005, 1013, 1018, 1048, 1049, 1069, 1106, 1130, 1134, 1136, 1138, 1151, 1152, 1162, 1170, 1231, 1278, 1281, 1291, 1292, 1293, 1298, 1302, 1312, 1313, 1346, 1356, 1357, 1365, 1383, 1391, 1395, 1396, 1405, 1406, 1407, 1408, 1615, 1616, 1655, 1656, 1797, 1802, 1803, 1804, 1805, 1806, 1811, 1813, 1878, 1884, 1894], "vlim": [0, 9, 16, 302, 314], "1": [0, 1, 9, 16, 83, 84, 103, 114, 163, 182, 186, 228, 233, 274, 275, 276, 283, 302, 314, 396, 397, 438, 440, 447, 449, 450, 451, 452, 454, 507, 577, 578, 585, 592, 653, 654, 656, 661, 667, 672, 673, 679, 790, 796, 797, 803, 852, 853, 908, 911, 913, 915, 922, 924, 925, 960, 961, 966, 988, 1005, 1013, 1016, 1022, 1048, 1069, 1088, 1110, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1139, 1141, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1188, 1221, 1264, 1265, 1266, 1269, 1273, 1278, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1302, 1303, 1309, 1310, 1311, 1317, 1318, 1320, 1327, 1329, 1346, 1361, 1368, 1375, 1382, 1389, 1390, 1392, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1405, 1406, 1407, 1416, 1417, 1421, 1439, 1441, 1498, 1499, 1538, 1555, 1560, 1582, 1583, 1597, 1600, 1615, 1620, 1644, 1645, 1671, 1672, 1673, 1685, 1686, 1709, 1710, 1716, 1720, 1726, 1730, 1736, 1740, 1747, 1754, 1755, 1757, 1763, 1764, 1765, 1768, 1779, 1786, 1788, 1798, 1812, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1874, 1884, 1887, 1889, 1891, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908], "kwarg": [0, 3, 4, 9, 10, 11, 16, 17, 20, 21, 103, 133, 228, 251, 302, 312, 314, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 448, 449, 502, 503, 516, 518, 519, 523, 525, 532, 540, 541, 548, 549, 551, 558, 576, 582, 589, 596, 597, 600, 601, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 685, 688, 689, 692, 693, 696, 697, 700, 704, 707, 711, 717, 722, 729, 736, 742, 743, 749, 752, 759, 762, 763, 764, 771, 777, 784, 790, 796, 797, 798, 803, 804, 809, 816, 817, 846, 847, 852, 859, 908, 911, 913, 915, 920, 922, 929, 942, 943, 944, 945, 946, 947, 948, 949, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 966, 967, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 988, 998, 1003, 1004, 1005, 1013, 1018, 1048, 1049, 1069, 1078, 1083, 1087, 1090, 1100, 1106, 1107, 1110, 1120, 1121, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1140, 1145, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1170, 1231, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1273, 1278, 1280, 1281, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1346, 1347, 1350, 1352, 1356, 1357, 1364, 1365, 1368, 1373, 1376, 1377, 1378, 1380, 1383, 1384, 1385, 1389, 1390, 1391, 1392, 1396, 1399, 1401, 1403, 1405, 1406, 1407, 1408, 1418, 1421, 1490, 1491, 1511, 1512, 1513, 1514, 1520, 1521, 1522, 1531, 1532, 1533, 1538, 1540, 1543, 1582, 1583, 1596, 1597, 1605, 1606, 1607, 1608, 1613, 1614, 1615, 1616, 1620, 1630, 1634, 1635, 1639, 1640, 1645, 1650, 1651, 1655, 1656, 1661, 1666, 1667, 1671, 1709, 1754, 1757, 1763, 1764, 1768, 1779, 1785, 1788, 1794, 1795, 1797, 1802, 1803, 1804, 1805, 1806, 1811, 1813, 1821, 1884], "function": [0, 9, 16, 36, 42, 48, 55, 59, 79, 85, 94, 302, 314, 327, 328, 329, 333, 341, 351, 353, 354, 357, 377, 378, 384, 386, 387, 390, 397, 414, 425, 455, 461, 463, 464, 469, 476, 483, 489, 491, 492, 498, 513, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 566, 570, 574, 578, 596, 597, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 648, 651, 658, 662, 668, 674, 680, 713, 719, 724, 732, 738, 744, 949, 950, 954, 966, 975, 976, 977, 978, 979, 980, 989, 1005, 1047, 1078, 1087, 1100, 1110, 1112, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1142, 1143, 1147, 1155, 1160, 1163, 1164, 1165, 1168, 1169, 1172, 1232, 1246, 1261, 1264, 1269, 1271, 1282, 1284, 1290, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1314, 1316, 1342, 1344, 1346, 1352, 1389, 1390, 1392, 1395, 1399, 1401, 1416, 1421, 1429, 1432, 1434, 1436, 1439, 1441, 1490, 1502, 1509, 1510, 1511, 1513, 1518, 1519, 1520, 1526, 1530, 1531, 1532, 1538, 1547, 1552, 1553, 1555, 1556, 1557, 1568, 1569, 1578, 1579, 1582, 1586, 1587, 1590, 1596, 1597, 1603, 1604, 1605, 1606, 1607, 1608, 1612, 1613, 1614, 1615, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1660, 1665, 1666, 1670, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1702, 1703, 1706, 1707, 1709, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1775, 1776, 1779, 1786, 1797, 1803, 1804, 1805, 1806, 1811, 1814, 1815, 1869, 1875, 1876, 1877, 1878, 1879, 1880, 1883, 1884, 1885, 1890, 1893, 1895, 1897, 1898, 1903, 1907], "base": [0, 9, 11, 16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 62, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 103, 165, 228, 302, 314, 317, 327, 328, 330, 331, 333, 339, 341, 342, 349, 351, 354, 357, 361, 362, 372, 375, 383, 384, 387, 390, 393, 403, 413, 414, 416, 419, 423, 425, 430, 435, 447, 451, 452, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 505, 509, 510, 513, 519, 525, 532, 540, 548, 551, 558, 564, 566, 569, 570, 572, 574, 576, 582, 589, 596, 598, 600, 602, 605, 607, 611, 613, 617, 619, 622, 625, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 666, 668, 672, 674, 678, 680, 684, 688, 692, 696, 700, 704, 707, 711, 713, 717, 719, 722, 724, 729, 732, 736, 738, 742, 744, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 804, 809, 816, 823, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 949, 956, 959, 968, 971, 972, 974, 990, 1005, 1006, 1069, 1078, 1081, 1100, 1102, 1106, 1121, 1123, 1136, 1137, 1139, 1264, 1265, 1272, 1281, 1284, 1302, 1305, 1307, 1312, 1313, 1348, 1349, 1405, 1406, 1427, 1433, 1437, 1438, 1442, 1481, 1520, 1531, 1538, 1547, 1582, 1588, 1590, 1596, 1630, 1635, 1640, 1645, 1655, 1661, 1667, 1706, 1806, 1869, 1872, 1873, 1875, 1879, 1880, 1883, 1884, 1885, 1887, 1890, 1892, 1893, 1899, 1900, 1902, 1903, 1905, 1906, 1907, 1908], "verbos": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 92, 97, 302, 303, 314, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 438, 440, 447, 449, 450, 451, 452, 453, 454, 457, 461, 465, 467, 469, 472, 474, 477, 481, 484, 489, 493, 495, 496, 498, 502, 504, 505, 509, 510, 519, 522, 525, 529, 532, 537, 540, 545, 548, 551, 555, 558, 564, 567, 569, 572, 576, 582, 586, 589, 593, 596, 600, 603, 605, 608, 611, 614, 617, 620, 622, 626, 629, 633, 636, 638, 642, 645, 648, 653, 655, 657, 660, 663, 664, 666, 669, 670, 672, 675, 676, 678, 681, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 728, 729, 736, 741, 742, 747, 749, 752, 757, 759, 762, 764, 769, 771, 777, 782, 784, 788, 790, 794, 796, 797, 803, 809, 814, 816, 821, 823, 843, 846, 852, 857, 859, 863, 865, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 911, 922, 924, 925, 960, 961, 975, 976, 977, 978, 979, 980, 1490, 1497, 1498, 1499, 1500, 1511, 1513, 1517, 1520, 1531, 1538, 1541, 1542, 1547, 1548, 1549, 1555, 1556, 1557, 1560, 1582, 1583, 1588, 1591, 1592, 1596, 1600, 1601, 1605, 1607, 1613, 1615, 1620, 1629, 1634, 1639, 1644, 1648, 1650, 1655, 1657, 1658, 1660, 1664, 1666, 1672, 1676, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1716, 1720, 1726, 1730, 1736, 1740, 1747, 1754, 1755, 1757, 1763, 1765, 1768, 1779, 1786, 1788, 1797, 1798, 1802, 1812, 1821, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "chunk": [0, 1, 3, 4, 9, 16, 17, 20, 21, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 303, 304, 317, 319, 326, 327, 328, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 371, 375, 383, 384, 387, 390, 393, 403, 405, 413, 414, 416, 419, 423, 425, 430, 435, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 504, 505, 509, 510, 513, 525, 532, 540, 548, 551, 558, 564, 566, 567, 569, 570, 572, 574, 576, 582, 589, 596, 598, 600, 602, 603, 605, 607, 611, 613, 617, 619, 622, 625, 626, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 688, 692, 696, 700, 704, 707, 711, 713, 717, 719, 722, 724, 729, 732, 736, 738, 742, 744, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588, 1590, 1592, 1870, 1873, 1890, 1893, 1894, 1896, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "d": [0, 9, 16, 26, 30, 31, 103, 182, 228, 302, 304, 409, 410, 416, 417, 445, 446, 657, 797, 798, 913, 914, 1048, 1062, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1309, 1389, 1390, 1441, 1490, 1491, 1513, 1514, 1629, 1630, 1671, 1709, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1815, 1816, 1821, 1838, 1884, 1886, 1893, 1894, 1897, 1903, 1905], "properti": [0, 9, 13, 15, 16, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 53, 57, 77, 83, 92, 95, 302, 310, 317, 319, 323, 324, 325, 327, 330, 339, 349, 354, 361, 362, 370, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 438, 441, 442, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 844, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 912, 1005, 1006, 1008, 1013, 1025, 1048, 1060, 1069, 1110, 1112, 1120, 1121, 1123, 1124, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1141, 1147, 1148, 1155, 1160, 1161, 1162, 1163, 1164, 1261, 1264, 1265, 1267, 1268, 1269, 1271, 1278, 1279, 1281, 1282, 1287, 1289, 1290, 1291, 1293, 1294, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1314, 1328, 1344, 1346, 1350, 1364, 1368, 1373, 1377, 1378, 1380, 1384, 1385, 1390, 1391, 1392, 1393, 1395, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1411, 1413, 1414, 1415, 1418, 1421, 1441, 1490, 1496, 1501, 1503, 1504, 1507, 1508, 1511, 1513, 1520, 1525, 1527, 1529, 1531, 1534, 1535, 1537, 1538, 1544, 1550, 1551, 1554, 1561, 1564, 1565, 1568, 1569, 1570, 1571, 1572, 1576, 1582, 1588, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1797, 1804, 1806, 1810], "idata_mem": [0, 9, 16, 302, 310], "current": [0, 9, 13, 16, 19, 22, 23, 24, 26, 28, 29, 30, 31, 34, 64, 69, 73, 87, 90, 91, 92, 95, 195, 302, 310, 968, 971, 972, 1005, 1146, 1160, 1187, 1239, 1245, 1253, 1259, 1266, 1283, 1291, 1293, 1297, 1305, 1309, 1315, 1346, 1350, 1359, 1364, 1377, 1384, 1396, 1399, 1403, 1404, 1412, 1538, 1551, 1582, 1615, 1754, 1763, 1779, 1879, 1900, 1902], "idata": [0, 5, 9, 16, 302, 306, 308, 309, 310, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592, 1890], "memori": [0, 3, 4, 5, 9, 16, 20, 21, 103, 153, 228, 302, 306, 307, 310, 345, 371, 405, 453, 454, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1085, 1592, 1671, 1709, 1890, 1906], "store_model_data": [0, 9, 16, 302, 315], "forc": [0, 3, 4, 9, 16, 20, 21, 53, 83, 92, 97, 195, 302, 315, 317, 327, 330, 349, 354, 361, 362, 369, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 510, 564, 569, 572, 576, 596, 600, 622, 629, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 729, 742, 747, 749, 752, 757, 759, 762, 764, 769, 771, 777, 782, 784, 788, 790, 794, 796, 797, 803, 809, 814, 816, 821, 823, 843, 846, 852, 857, 859, 865, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1005, 1120, 1130, 1139, 1147, 1155, 1282, 1283, 1294, 1301, 1349, 1389, 1398, 1407, 1414, 1879, 1892], "store": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 305, 315, 317, 320, 322, 327, 330, 339, 340, 345, 349, 354, 361, 362, 365, 367, 371, 375, 383, 387, 393, 395, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 839, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1013, 1026, 1048, 1053, 1069, 1297, 1395, 1588, 1592, 1671, 1709, 1893, 1894, 1898], "get_model_data": [0, 9, 16, 302, 307], "from": [0, 9, 16, 35, 40, 46, 47, 49, 53, 57, 77, 83, 92, 103, 108, 112, 114, 195, 228, 233, 302, 307, 308, 317, 318, 319, 322, 327, 330, 331, 339, 349, 354, 361, 362, 365, 367, 368, 375, 376, 377, 383, 387, 393, 395, 398, 403, 413, 416, 419, 423, 424, 428, 430, 435, 443, 444, 445, 446, 449, 450, 453, 454, 461, 463, 472, 474, 481, 489, 491, 502, 505, 507, 509, 510, 525, 526, 527, 532, 533, 535, 540, 541, 543, 548, 549, 550, 551, 552, 553, 558, 559, 560, 564, 565, 569, 572, 576, 579, 582, 589, 596, 600, 601, 605, 611, 617, 618, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 712, 717, 722, 723, 727, 729, 736, 737, 742, 743, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 809, 816, 823, 846, 852, 853, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 913, 914, 954, 957, 964, 966, 975, 976, 977, 978, 979, 980, 984, 988, 990, 991, 992, 993, 1005, 1006, 1008, 1013, 1019, 1038, 1048, 1051, 1069, 1078, 1085, 1089, 1100, 1105, 1110, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1265, 1267, 1269, 1271, 1272, 1282, 1285, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1309, 1311, 1314, 1316, 1319, 1329, 1363, 1368, 1373, 1374, 1380, 1381, 1389, 1390, 1391, 1395, 1396, 1399, 1401, 1405, 1406, 1407, 1409, 1410, 1411, 1413, 1418, 1421, 1438, 1441, 1489, 1538, 1541, 1542, 1573, 1582, 1588, 1615, 1671, 1709, 1754, 1763, 1779, 1795, 1817, 1818, 1819, 1820, 1826, 1827, 1851, 1852, 1867, 1868, 1876, 1878, 1879, 1883, 1884, 1886, 1887, 1890, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1908], "del_model_data": [0, 9, 16, 302, 305], "remov": [0, 9, 16, 302, 305, 622, 628, 1005, 1048, 1051, 1112, 1134, 1138, 1147, 1151, 1152, 1155, 1285, 1301, 1302, 1306, 1307, 1331, 1389, 1405, 1406, 1890, 1892, 1901], "update_n_turbin": [0, 9, 16, 302, 316], "reset": [0, 9, 16, 302, 316, 461, 469, 472, 489, 498, 502, 505, 622, 628, 1005, 1308, 1346, 1403, 1899, 1901, 1903], "accord": [0, 9, 16, 302, 316, 375, 378, 449, 525, 528, 532, 536, 540, 544, 548, 551, 554, 558, 561, 589, 590, 696, 998, 1003, 1004, 1139, 1141, 1269, 1898, 1902], "self": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 105, 106, 107, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 302, 316, 317, 327, 330, 339, 345, 349, 354, 361, 362, 364, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 512, 525, 532, 534, 540, 542, 548, 551, 558, 564, 567, 569, 572, 576, 582, 583, 584, 589, 591, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 650, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 731, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 799, 803, 805, 809, 811, 816, 818, 823, 846, 848, 852, 854, 859, 861, 867, 871, 875, 879, 883, 888, 893, 898, 903, 920, 1005, 1006, 1009, 1013, 1017, 1021, 1022, 1032, 1037, 1048, 1050, 1052, 1058, 1069, 1071, 1074, 1078, 1081, 1100, 1102, 1108, 1109, 1165, 1413, 1563, 1567, 1588, 1592, 1622, 1624, 1714, 1724, 1734, 1744, 1749, 1751, 1770, 1772, 1804, 1806, 1807, 1887], "get_models_idata": [0, 9, 16, 302, 309], "get_models_data": [0, 9, 16, 302, 308], "creat": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 228, 251, 302, 308, 313, 317, 319, 322, 327, 330, 339, 345, 349, 354, 361, 362, 371, 374, 375, 377, 378, 381, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 507, 509, 510, 523, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 563, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 911, 913, 915, 942, 962, 966, 968, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 989, 1005, 1111, 1120, 1123, 1139, 1140, 1141, 1147, 1155, 1163, 1164, 1265, 1269, 1273, 1282, 1291, 1292, 1293, 1294, 1299, 1301, 1329, 1346, 1350, 1364, 1377, 1384, 1389, 1395, 1399, 1401, 1405, 1406, 1407, 1408, 1409, 1410, 1416, 1417, 1419, 1422, 1588, 1592, 1617, 1878, 1883, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "xarrai": [0, 3, 4, 9, 11, 16, 17, 20, 21, 23, 24, 25, 32, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 91, 92, 302, 308, 313, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 454, 461, 472, 474, 481, 489, 502, 503, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 601, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 913, 914, 922, 923, 955, 956, 957, 959, 963, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 1441, 1588, 1796, 1821, 1875, 1890, 1894, 1897, 1903, 1904, 1905], "input": [0, 9, 16, 228, 274, 302, 308, 328, 329, 353, 386, 419, 420, 421, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 596, 597, 600, 601, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 709, 710, 887, 892, 897, 902, 907, 1013, 1030, 1039, 1040, 1043, 1048, 1057, 1063, 1064, 1065, 1069, 1073, 1076, 1110, 1120, 1139, 1265, 1266, 1269, 1282, 1283, 1292, 1294, 1309, 1310, 1311, 1318, 1417, 1421, 1441, 1671, 1709, 1812, 1869, 1879, 1886, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "new_point_data": [0, 9, 16, 302, 313], "states_indic": [0, 9, 16, 302, 313], "contain": [0, 9, 16, 302, 313, 319, 320, 322, 519, 990, 992, 993, 1005, 1024, 1084, 1103, 1115, 1120, 1121, 1135, 1137, 1141, 1149, 1153, 1154, 1155, 1160, 1163, 1164, 1165, 1196, 1201, 1245, 1259, 1264, 1265, 1282, 1294, 1301, 1359, 1389, 1395, 1398, 1416, 1417, 1557, 1795, 1875, 1878, 1879, 1880, 1884, 1896, 1897, 1898, 1900, 1901, 1904, 1906], "onli": [0, 9, 16, 114, 233, 302, 313, 424, 447, 532, 711, 759, 760, 764, 767, 784, 785, 790, 791, 797, 801, 803, 807, 809, 812, 846, 850, 852, 855, 859, 860, 862, 964, 966, 1005, 1013, 1040, 1043, 1047, 1048, 1051, 1060, 1064, 1065, 1069, 1076, 1110, 1111, 1126, 1131, 1136, 1139, 1155, 1160, 1161, 1163, 1164, 1165, 1187, 1225, 1264, 1265, 1269, 1277, 1283, 1292, 1293, 1297, 1298, 1301, 1302, 1309, 1331, 1350, 1359, 1364, 1377, 1378, 1384, 1385, 1389, 1390, 1396, 1398, 1404, 1405, 1406, 1407, 1409, 1410, 1417, 1421, 1439, 1547, 1671, 1709, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1904, 1905, 1906, 1908], "new": [0, 9, 16, 103, 114, 133, 186, 195, 228, 233, 251, 276, 302, 312, 375, 380, 381, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 437, 525, 530, 532, 538, 540, 546, 548, 551, 556, 558, 563, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 870, 874, 878, 882, 886, 891, 896, 901, 906, 913, 922, 942, 949, 952, 955, 958, 962, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 1013, 1044, 1045, 1046, 1048, 1066, 1067, 1068, 1069, 1077, 1135, 1156, 1159, 1160, 1233, 1234, 1235, 1247, 1248, 1249, 1297, 1310, 1311, 1345, 1374, 1381, 1394, 1409, 1410, 1441, 1505, 1506, 1538, 1545, 1546, 1582, 1615, 1710, 1712, 1713, 1720, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1754, 1763, 1779, 1890, 1892, 1897, 1898], "algo_typ": [0, 9, 16, 302, 312], "run": [0, 1, 9, 16, 19, 29, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 312, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 365, 375, 380, 383, 387, 393, 400, 403, 413, 415, 416, 418, 419, 420, 422, 423, 429, 430, 434, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 623, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 705, 707, 709, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 887, 888, 892, 893, 897, 898, 902, 903, 907, 913, 922, 942, 949, 952, 955, 958, 962, 973, 981, 984, 986, 1005, 1085, 1538, 1540, 1578, 1579, 1586, 1587, 1588, 1764, 1775, 1776, 1797, 1798, 1803, 1804, 1805, 1806, 1811, 1875, 1879, 1880, 1884, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1909], "time": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 454, 525, 532, 540, 548, 551, 558, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 913, 922, 936, 942, 949, 952, 955, 958, 962, 973, 981, 984, 986, 1005, 1013, 1031, 1048, 1069, 1120, 1139, 1147, 1155, 1161, 1162, 1269, 1282, 1283, 1294, 1298, 1299, 1301, 1302, 1320, 1375, 1382, 1389, 1588, 1671, 1709, 1880, 1884, 1890, 1892, 1895, 1896, 1899, 1900, 1901, 1903, 1905, 1906, 1907], "factori": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 525, 532, 540, 548, 551, 558, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 913, 922, 942, 949, 952, 955, 958, 962, 973, 981, 984, 986], "__repr__": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 512, 525, 532, 534, 540, 542, 548, 551, 558, 564, 569, 572, 576, 582, 584, 589, 591, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 650, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 731, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 799, 803, 805, 809, 811, 816, 818, 823, 846, 848, 852, 854, 859, 861, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1005, 1006, 1009, 1108, 1588], "repr": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 512, 525, 532, 534, 540, 542, 548, 551, 558, 564, 569, 572, 576, 582, 584, 589, 591, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 650, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 731, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 799, 803, 805, 809, 811, 816, 818, 823, 846, 848, 852, 854, 859, 861, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1005, 1006, 1009, 1108, 1441, 1588], "model_id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "uniqu": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 447, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1005, 1023, 1112, 1194, 1307, 1336, 1441, 1588, 1891], "type": [0, 9, 16, 35, 40, 46, 53, 57, 71, 72, 77, 83, 92, 103, 114, 133, 195, 228, 233, 251, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 409, 410, 413, 416, 418, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 519, 521, 523, 524, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 986, 988, 1005, 1006, 1008, 1078, 1081, 1088, 1100, 1102, 1121, 1135, 1153, 1154, 1156, 1159, 1161, 1265, 1273, 1280, 1292, 1376, 1383, 1390, 1394, 1441, 1588, 1617, 1671, 1709, 1804, 1806, 1807, 1874, 1875, 1879, 1883, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1908], "var": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 224, 228, 298, 302, 317, 327, 329, 330, 339, 349, 354, 361, 362, 374, 375, 378, 383, 387, 393, 403, 413, 416, 419, 421, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 528, 532, 536, 540, 544, 548, 551, 554, 558, 561, 564, 569, 572, 573, 576, 582, 589, 596, 600, 605, 611, 612, 617, 622, 624, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 706, 707, 710, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 922, 927, 928, 931, 932, 933, 934, 935, 941, 942, 943, 944, 945, 946, 947, 948, 962, 964, 966, 967, 984, 989, 1005, 1134, 1138, 1151, 1152, 1441, 1490, 1493, 1511, 1513, 1520, 1531, 1538, 1557, 1573, 1577, 1582, 1583, 1584, 1585, 1588, 1596, 1605, 1607, 1613, 1615, 1625, 1626, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1671, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1709, 1754, 1760, 1761, 1763, 1773, 1774, 1779, 1791, 1792, 1874, 1893, 1894, 1903], "v": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1005, 1136, 1298, 1299, 1302, 1309, 1398, 1588, 1671, 1709, 1817, 1818], "variabl": [0, 3, 4, 9, 11, 14, 16, 20, 21, 35, 36, 38, 40, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 71, 72, 77, 79, 81, 83, 84, 85, 86, 92, 94, 98, 298, 302, 317, 327, 328, 329, 330, 333, 335, 339, 341, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 368, 374, 375, 381, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 397, 401, 403, 406, 413, 414, 416, 419, 421, 423, 424, 428, 430, 431, 432, 433, 435, 436, 437, 453, 454, 455, 458, 461, 463, 464, 468, 472, 474, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 502, 505, 507, 509, 510, 513, 514, 525, 530, 532, 538, 540, 546, 548, 551, 556, 558, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 582, 583, 589, 590, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 611, 612, 613, 615, 617, 618, 619, 621, 622, 624, 625, 627, 628, 629, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 657, 658, 659, 660, 661, 662, 665, 666, 667, 668, 671, 672, 673, 674, 677, 678, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 701, 703, 704, 706, 707, 708, 710, 711, 717, 718, 722, 727, 729, 736, 742, 743, 749, 750, 751, 752, 753, 754, 755, 756, 759, 761, 762, 764, 765, 766, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 798, 800, 802, 803, 804, 806, 808, 809, 810, 813, 816, 817, 819, 820, 823, 846, 847, 849, 851, 852, 853, 856, 859, 860, 864, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 915, 922, 927, 928, 931, 933, 934, 935, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 954, 957, 958, 960, 961, 962, 964, 965, 966, 967, 973, 975, 976, 977, 978, 979, 980, 981, 983, 984, 986, 988, 989, 1134, 1138, 1151, 1152, 1345, 1490, 1493, 1494, 1495, 1498, 1499, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1513, 1515, 1516, 1519, 1520, 1523, 1524, 1530, 1531, 1538, 1541, 1542, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1562, 1563, 1566, 1567, 1571, 1572, 1573, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1590, 1593, 1596, 1597, 1598, 1599, 1600, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1709, 1710, 1712, 1713, 1715, 1717, 1718, 1719, 1720, 1722, 1723, 1725, 1727, 1728, 1729, 1730, 1732, 1733, 1735, 1737, 1738, 1739, 1740, 1742, 1743, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1872, 1874, 1878, 1879, 1880, 1881, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "flag": [0, 2, 3, 4, 9, 11, 16, 17, 20, 21, 29, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 92, 103, 181, 228, 302, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 370, 375, 383, 387, 393, 403, 413, 416, 419, 423, 424, 430, 435, 450, 453, 454, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 583, 589, 590, 596, 600, 605, 611, 617, 622, 623, 629, 630, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 685, 688, 689, 692, 693, 696, 697, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 809, 816, 823, 846, 852, 859, 860, 867, 871, 875, 879, 883, 884, 888, 889, 893, 894, 898, 903, 904, 913, 914, 915, 924, 930, 936, 937, 943, 944, 945, 946, 947, 948, 957, 960, 964, 966, 967, 975, 976, 977, 978, 979, 980, 989, 996, 1005, 1136, 1197, 1447, 1457, 1464, 1471, 1479, 1487, 1490, 1501, 1511, 1513, 1520, 1531, 1538, 1544, 1547, 1552, 1553, 1557, 1564, 1582, 1588, 1596, 1602, 1605, 1607, 1611, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1677, 1679, 1683, 1685, 1689, 1691, 1695, 1697, 1701, 1703, 1705, 1706, 1708, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1797, 1798, 1804, 1806, 1810, 1892, 1897], "sub_model": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 487, 489, 500, 502, 505, 509, 510, 515, 525, 531, 532, 539, 540, 547, 548, 551, 557, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 616, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 716, 717, 722, 729, 736, 742, 748, 749, 752, 758, 759, 762, 764, 770, 771, 776, 777, 783, 784, 789, 790, 795, 796, 797, 803, 809, 815, 816, 822, 823, 845, 846, 852, 858, 859, 866, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588, 1890], "sub": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 195, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 487, 489, 500, 502, 505, 509, 510, 515, 525, 531, 532, 539, 540, 547, 548, 551, 557, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 616, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 716, 717, 722, 729, 736, 742, 748, 749, 752, 758, 759, 762, 764, 770, 771, 776, 777, 783, 784, 789, 790, 795, 796, 797, 803, 809, 815, 816, 822, 823, 845, 846, 852, 858, 859, 866, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1013, 1023, 1024, 1048, 1069, 1281, 1312, 1313, 1583, 1588, 1617, 1880, 1890, 1897], "load_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588, 1592, 1890], "algo": [0, 9, 16, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 71, 73, 75, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 302, 317, 319, 326, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 365, 366, 367, 368, 369, 371, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 390, 391, 393, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 488, 489, 492, 493, 495, 496, 497, 498, 501, 502, 504, 505, 508, 509, 510, 513, 514, 519, 522, 525, 527, 528, 529, 530, 532, 535, 536, 537, 538, 540, 543, 544, 545, 546, 548, 550, 551, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 579, 582, 586, 589, 593, 596, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 611, 613, 614, 615, 617, 619, 620, 621, 622, 625, 626, 627, 629, 631, 632, 633, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 655, 657, 658, 659, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 688, 692, 696, 700, 704, 707, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 756, 757, 759, 760, 761, 762, 764, 766, 767, 768, 769, 771, 773, 774, 775, 777, 779, 780, 781, 782, 784, 786, 787, 788, 790, 792, 793, 794, 796, 797, 800, 801, 802, 803, 806, 807, 808, 809, 812, 813, 814, 816, 819, 820, 821, 823, 839, 843, 846, 849, 850, 851, 852, 855, 856, 857, 859, 862, 863, 864, 865, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 922, 924, 936, 942, 955, 956, 957, 968, 971, 972, 973, 974, 1538, 1540, 1578, 1579, 1582, 1586, 1587, 1588, 1590, 1591, 1592, 1593, 1595, 1615, 1754, 1763, 1764, 1775, 1776, 1779, 1785, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "0": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 84, 92, 97, 103, 108, 113, 163, 186, 228, 232, 278, 283, 302, 303, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 396, 403, 405, 413, 416, 419, 423, 430, 435, 440, 447, 449, 450, 451, 452, 453, 457, 461, 462, 465, 467, 469, 472, 473, 474, 477, 481, 484, 489, 490, 493, 495, 496, 498, 502, 504, 505, 506, 507, 509, 510, 519, 522, 525, 529, 532, 537, 540, 545, 548, 551, 555, 558, 564, 567, 569, 572, 576, 577, 582, 585, 586, 589, 592, 593, 596, 600, 603, 605, 606, 608, 611, 614, 617, 618, 620, 622, 626, 629, 633, 636, 638, 642, 645, 648, 653, 655, 657, 660, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 728, 729, 730, 736, 737, 741, 742, 747, 749, 752, 757, 759, 762, 764, 769, 771, 777, 782, 784, 788, 790, 794, 796, 797, 798, 803, 809, 810, 814, 816, 817, 821, 823, 838, 843, 846, 852, 853, 857, 859, 860, 863, 865, 867, 871, 875, 879, 883, 888, 893, 898, 903, 911, 915, 924, 925, 942, 944, 945, 947, 948, 955, 957, 960, 961, 966, 975, 976, 977, 978, 979, 980, 988, 1005, 1048, 1110, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1137, 1139, 1141, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1188, 1222, 1264, 1265, 1266, 1269, 1271, 1272, 1273, 1278, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1302, 1303, 1309, 1310, 1311, 1314, 1317, 1318, 1327, 1329, 1358, 1362, 1363, 1365, 1368, 1374, 1375, 1381, 1382, 1389, 1390, 1392, 1395, 1397, 1398, 1401, 1403, 1404, 1405, 1406, 1407, 1416, 1417, 1421, 1424, 1425, 1427, 1429, 1433, 1434, 1437, 1439, 1441, 1490, 1497, 1498, 1499, 1500, 1511, 1513, 1517, 1520, 1531, 1538, 1541, 1542, 1547, 1548, 1549, 1555, 1556, 1557, 1560, 1582, 1583, 1588, 1591, 1592, 1596, 1597, 1600, 1601, 1605, 1607, 1613, 1615, 1620, 1629, 1634, 1639, 1644, 1648, 1650, 1655, 1657, 1658, 1660, 1664, 1666, 1671, 1672, 1676, 1679, 1685, 1686, 1691, 1697, 1703, 1706, 1709, 1710, 1716, 1720, 1726, 1730, 1736, 1740, 1747, 1754, 1755, 1757, 1763, 1765, 1768, 1779, 1786, 1788, 1797, 1798, 1812, 1814, 1818, 1819, 1821, 1874, 1884, 1885, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "load": [0, 3, 4, 9, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 454, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588, 1592, 1890, 1891, 1896, 1897], "subject": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1544, 1588, 1592], "get_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 841, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 962, 964, 984, 1588], "target": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588, 1902], "lookup": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 601, 605, 606, 611, 617, 622, 629, 633, 638, 639, 642, 645, 648, 653, 655, 657, 660, 661, 666, 667, 672, 673, 678, 679, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 936, 1588, 1879, 1890], "smfp": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "mdata": [0, 9, 16, 30, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 317, 327, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 365, 367, 368, 371, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 405, 413, 414, 416, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 504, 505, 509, 510, 513, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 567, 569, 570, 572, 574, 576, 578, 579, 582, 589, 596, 598, 600, 602, 603, 605, 607, 611, 613, 617, 619, 622, 625, 626, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 688, 692, 696, 700, 704, 707, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 729, 732, 733, 734, 735, 736, 738, 739, 740, 742, 744, 745, 746, 749, 750, 751, 752, 754, 755, 756, 759, 760, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 800, 801, 802, 803, 806, 807, 808, 809, 812, 813, 816, 819, 820, 823, 839, 840, 841, 842, 846, 849, 850, 851, 852, 855, 856, 859, 862, 864, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 906, 1588, 1590, 1592], "getter": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "entri": [0, 9, 14, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 308, 309, 315, 317, 319, 321, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 409, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 567, 569, 572, 576, 582, 589, 596, 600, 603, 605, 611, 617, 622, 626, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 664, 666, 670, 672, 676, 678, 682, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 841, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 954, 1004, 1137, 1139, 1278, 1306, 1588, 1592, 1671, 1709, 1878, 1890, 1895, 1902], "data_to_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "add": [0, 9, 16, 35, 40, 46, 53, 57, 66, 68, 77, 83, 92, 302, 317, 319, 321, 327, 330, 332, 339, 349, 354, 356, 361, 362, 365, 375, 383, 387, 389, 393, 402, 403, 409, 411, 413, 416, 419, 423, 430, 433, 435, 437, 438, 440, 443, 447, 448, 449, 450, 451, 452, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 581, 582, 588, 589, 595, 596, 600, 605, 611, 617, 622, 624, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 775, 777, 781, 784, 787, 790, 793, 796, 797, 802, 803, 808, 809, 813, 816, 820, 823, 846, 851, 852, 856, 859, 864, 867, 870, 871, 874, 875, 878, 879, 882, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 908, 910, 915, 922, 924, 925, 943, 944, 945, 946, 947, 948, 966, 989, 990, 992, 993, 994, 995, 1005, 1013, 1019, 1090, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1137, 1145, 1160, 1233, 1234, 1247, 1248, 1271, 1272, 1273, 1302, 1303, 1310, 1311, 1399, 1401, 1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483, 1490, 1511, 1513, 1520, 1522, 1531, 1533, 1538, 1541, 1542, 1543, 1582, 1588, 1596, 1605, 1607, 1613, 1615, 1617, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1796, 1878, 1887, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906], "local": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 798, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1404, 1441, 1588, 1879, 1891, 1892, 1895, 1897, 1900, 1903, 1906], "intend": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 922, 937, 1005, 1085, 1156, 1159, 1167, 1187, 1319, 1394, 1588], "iter": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 33, 35, 40, 46, 53, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 727, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 968, 971, 972, 1298, 1346, 1405, 1441, 1588, 1870, 1873, 1883, 1890, 1893, 1894, 1903, 1905], "from_data_or_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "ret_dim": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "safe": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1588], "centr": [1, 396, 576, 577, 585, 592, 611, 722, 723, 729, 730, 736, 737, 764, 766, 797, 800, 803, 806, 846, 849, 1134, 1138, 1151, 1152, 1459, 1460, 1473, 1474, 1815, 1816, 1857, 1879, 1884, 1886, 1890, 1893, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "rotor_wd": [1, 1893, 1894, 1897, 1898, 1899, 1901, 1902, 1906, 1907], "auto": [1, 1005, 1110, 1130, 1176, 1265, 1269, 1291, 1293, 1298, 1302, 1314, 1320, 1352, 1359, 1374, 1381, 1390, 1421, 1821, 1893, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "basic_ctrl": [1, 1894, 1898, 1903, 1905], "10000": [1, 17, 729, 730, 1139, 1893, 1894], "1000": [1, 283, 302, 303, 605, 606, 936, 1078, 1079, 1100, 1139, 1264, 1265, 1401, 1796, 1874, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "wake_mirror": [1, 1894], "dbook": [1, 302, 303, 449, 1895], "modelbook": [1, 17, 302, 303, 508, 519, 520, 521, 522, 523, 524, 984, 986, 987, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "book": [1, 17, 302, 303, 409, 410, 444, 449, 508, 752, 753, 765, 798, 804, 810, 817, 847, 853, 860, 984, 986, 987, 988, 990, 991, 1401, 1889, 1890, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905, 1906, 1907], "windfarm": [1, 17, 302, 303, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 508, 913, 914, 1490, 1513, 1525, 1534, 1554, 1875, 1877, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "wind": [1, 17, 71, 72, 226, 294, 295, 302, 303, 339, 342, 403, 409, 410, 438, 439, 440, 441, 447, 448, 449, 450, 451, 452, 461, 474, 475, 481, 482, 508, 509, 605, 606, 638, 639, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 684, 688, 692, 696, 704, 711, 717, 718, 742, 777, 784, 790, 796, 797, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 913, 914, 916, 917, 930, 962, 964, 966, 967, 975, 976, 977, 978, 979, 980, 984, 988, 1005, 1134, 1136, 1138, 1151, 1152, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1440, 1490, 1511, 1513, 1520, 1525, 1531, 1534, 1538, 1554, 1582, 1596, 1605, 1607, 1613, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1817, 1818, 1819, 1820, 1825, 1826, 1827, 1831, 1832, 1850, 1851, 1852, 1858, 1860, 1869, 1874, 1875, 1878, 1879, 1880, 1881, 1884, 1885, 1886, 1889, 1890, 1891, 1893, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1908], "str": [1, 3, 4, 6, 12, 14, 16, 17, 20, 21, 27, 36, 38, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 62, 63, 67, 71, 72, 79, 81, 85, 86, 94, 98, 103, 154, 195, 228, 270, 283, 312, 319, 320, 321, 322, 328, 329, 333, 335, 339, 341, 346, 347, 351, 352, 353, 357, 359, 362, 365, 367, 368, 374, 378, 380, 381, 384, 385, 386, 390, 391, 393, 394, 395, 397, 400, 401, 406, 409, 410, 414, 415, 416, 417, 418, 421, 422, 424, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 461, 463, 464, 468, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 500, 503, 507, 508, 513, 514, 516, 518, 519, 521, 523, 524, 525, 526, 528, 530, 536, 538, 544, 546, 554, 556, 561, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 575, 578, 583, 590, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 609, 613, 615, 617, 618, 619, 621, 622, 624, 625, 627, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 646, 647, 648, 649, 651, 652, 654, 656, 658, 659, 660, 661, 662, 665, 666, 667, 668, 671, 672, 673, 674, 677, 678, 679, 680, 683, 687, 691, 695, 699, 701, 703, 706, 710, 717, 718, 727, 742, 743, 750, 751, 752, 753, 754, 755, 756, 761, 764, 765, 766, 768, 773, 774, 775, 777, 778, 779, 780, 781, 784, 785, 786, 787, 790, 791, 792, 793, 797, 798, 800, 802, 803, 804, 806, 808, 809, 810, 813, 816, 817, 819, 820, 823, 838, 841, 846, 847, 849, 851, 852, 853, 856, 859, 860, 864, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 885, 886, 887, 890, 891, 892, 895, 896, 897, 900, 901, 902, 905, 906, 907, 915, 918, 919, 920, 921, 927, 928, 931, 933, 934, 935, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 950, 951, 954, 957, 960, 961, 964, 965, 966, 967, 968, 969, 975, 976, 977, 978, 979, 980, 983, 988, 989, 990, 992, 993, 994, 995, 996, 997, 998, 1003, 1004, 1005, 1006, 1008, 1013, 1021, 1048, 1052, 1069, 1071, 1109, 1110, 1120, 1121, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1147, 1155, 1156, 1160, 1161, 1163, 1164, 1226, 1242, 1256, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1278, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1314, 1318, 1320, 1336, 1338, 1346, 1350, 1363, 1364, 1368, 1370, 1373, 1377, 1378, 1380, 1384, 1385, 1390, 1391, 1395, 1396, 1398, 1399, 1401, 1403, 1405, 1406, 1417, 1418, 1419, 1421, 1422, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1489, 1491, 1492, 1496, 1505, 1506, 1507, 1508, 1512, 1513, 1514, 1521, 1532, 1540, 1541, 1542, 1557, 1573, 1577, 1580, 1581, 1583, 1590, 1593, 1596, 1597, 1605, 1606, 1608, 1613, 1614, 1617, 1627, 1628, 1630, 1635, 1640, 1645, 1661, 1667, 1671, 1673, 1680, 1686, 1692, 1698, 1704, 1707, 1709, 1714, 1719, 1724, 1729, 1734, 1739, 1744, 1752, 1753, 1762, 1764, 1777, 1778, 1785, 1793, 1794, 1795, 1796, 1797, 1798, 1812, 1813, 1821, 1874, 1890, 1898], "Will": 1, "look": [1, 752, 753, 765, 798, 804, 810, 817, 847, 853, 860, 936, 1297, 1302, 1894, 1895, 1897, 1900, 1902, 1907], "up": [1, 752, 753, 765, 798, 804, 810, 817, 847, 853, 860, 936, 1005, 1084, 1103, 1141, 1159, 1163, 1164, 1269, 1293, 1319, 1377, 1384, 1419, 1422, 1890, 1893, 1894], "dict": [1, 3, 4, 10, 11, 14, 15, 16, 17, 20, 21, 36, 42, 46, 47, 48, 49, 55, 59, 65, 70, 71, 72, 74, 79, 83, 84, 85, 94, 302, 303, 308, 309, 310, 312, 314, 315, 319, 320, 322, 328, 329, 333, 339, 340, 341, 345, 347, 351, 353, 357, 371, 378, 381, 384, 386, 390, 395, 397, 400, 405, 414, 415, 418, 420, 424, 429, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 461, 463, 464, 467, 476, 477, 481, 482, 483, 489, 491, 492, 496, 503, 504, 507, 508, 513, 516, 517, 518, 519, 523, 525, 526, 528, 530, 536, 538, 541, 544, 546, 549, 554, 556, 561, 563, 564, 565, 566, 567, 570, 574, 578, 597, 598, 600, 601, 602, 603, 607, 611, 612, 613, 618, 619, 625, 626, 631, 634, 635, 640, 643, 646, 651, 654, 656, 658, 660, 661, 662, 664, 666, 667, 668, 670, 672, 673, 674, 676, 678, 679, 680, 682, 685, 686, 689, 690, 693, 694, 697, 698, 700, 701, 702, 705, 709, 722, 723, 729, 730, 736, 737, 742, 743, 750, 751, 752, 753, 754, 755, 756, 761, 763, 765, 766, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 798, 800, 802, 804, 806, 808, 810, 813, 816, 817, 819, 820, 844, 847, 849, 851, 853, 856, 859, 860, 864, 911, 915, 917, 927, 928, 929, 938, 939, 940, 943, 944, 945, 946, 947, 948, 952, 954, 956, 957, 959, 960, 961, 966, 967, 968, 969, 974, 975, 976, 977, 978, 979, 980, 983, 988, 989, 990, 998, 1003, 1004, 1005, 1120, 1121, 1123, 1128, 1131, 1132, 1136, 1137, 1139, 1141, 1147, 1149, 1155, 1160, 1261, 1282, 1294, 1297, 1298, 1299, 1301, 1303, 1368, 1377, 1384, 1390, 1401, 1411, 1416, 1417, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1491, 1505, 1506, 1512, 1514, 1521, 1532, 1538, 1540, 1541, 1542, 1583, 1584, 1585, 1590, 1592, 1596, 1597, 1605, 1606, 1608, 1613, 1614, 1616, 1620, 1625, 1626, 1630, 1635, 1640, 1645, 1661, 1667, 1671, 1709, 1714, 1724, 1734, 1744, 1757, 1760, 1761, 1764, 1768, 1773, 1774, 1785, 1788, 1791, 1792, 1794, 1795, 1797, 1798, 1803, 1805, 1811, 1812, 1813, 1821, 1875, 1884, 1896, 1897, 1902, 1903, 1905], "choic": [1, 302, 303, 409, 417, 915, 938, 939, 940, 1271, 1272, 1302, 1378, 1385, 1617, 1797, 1798, 1824, 1847, 1886, 1897, 1900, 1903, 1904, 1905, 1906, 1907, 1908], "parallel": [1, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 1005, 1161, 1588, 1671, 1709, 1798, 1890, 1891, 1897, 1900, 1906, 1907], "dask": [1, 3, 4, 20, 21, 302, 303, 327, 1797, 1798, 1884, 1890, 1891, 1894, 1905, 1906], "e": [1, 302, 303, 327, 368, 507, 564, 565, 605, 606, 642, 645, 771, 852, 954, 966, 1004, 1005, 1022, 1024, 1048, 1062, 1069, 1106, 1111, 1120, 1121, 1126, 1129, 1130, 1131, 1133, 1135, 1137, 1139, 1140, 1160, 1161, 1162, 1163, 1164, 1165, 1182, 1197, 1225, 1261, 1264, 1265, 1266, 1269, 1271, 1273, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1298, 1302, 1303, 1306, 1309, 1310, 1311, 1314, 1318, 1320, 1327, 1328, 1337, 1344, 1346, 1363, 1377, 1378, 1384, 1385, 1389, 1391, 1395, 1396, 1398, 1401, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1441, 1538, 1568, 1569, 1582, 1615, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1795, 1813, 1877, 1879, 1887, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1908, 1909], "g": [1, 302, 303, 368, 605, 606, 771, 777, 852, 954, 966, 1004, 1005, 1024, 1048, 1069, 1111, 1121, 1126, 1129, 1131, 1133, 1135, 1137, 1139, 1140, 1160, 1162, 1165, 1197, 1261, 1264, 1265, 1269, 1281, 1283, 1298, 1302, 1303, 1306, 1320, 1327, 1337, 1344, 1346, 1377, 1378, 1384, 1385, 1395, 1396, 1401, 1403, 1404, 1671, 1709, 1795, 1813, 1877, 1879, 1887, 1890, 1891, 1893, 1894, 1896, 1899, 1904, 1908], "switch": [1, 3, 4, 20, 21, 395, 943, 944, 945, 946, 947, 948, 989, 1596, 1597, 1606, 1614, 1890, 1894, 1897, 1902], "mirror": [1, 762, 771, 1887, 1890, 1893, 1894], "kei": [1, 3, 4, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 121, 228, 283, 310, 319, 320, 322, 328, 333, 341, 351, 357, 368, 378, 381, 384, 390, 395, 397, 414, 428, 431, 432, 433, 455, 464, 476, 481, 482, 483, 489, 491, 492, 507, 513, 516, 517, 519, 520, 525, 526, 528, 530, 536, 538, 544, 546, 554, 556, 561, 563, 566, 570, 574, 578, 598, 602, 607, 611, 612, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 727, 750, 751, 752, 753, 754, 755, 756, 761, 765, 766, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 798, 800, 802, 804, 806, 808, 810, 813, 817, 819, 820, 823, 841, 847, 849, 851, 853, 856, 860, 864, 938, 939, 940, 954, 960, 961, 990, 997, 998, 1002, 1005, 1006, 1007, 1121, 1139, 1141, 1156, 1302, 1303, 1346, 1416, 1417, 1505, 1506, 1541, 1542, 1583, 1584, 1585, 1590, 1596, 1617, 1625, 1626, 1760, 1761, 1773, 1774, 1791, 1792, 1795, 1874, 1898], "valu": [1, 3, 4, 14, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 106, 107, 115, 116, 118, 120, 122, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 181, 186, 195, 228, 230, 231, 234, 235, 237, 238, 239, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 283, 310, 318, 328, 329, 333, 341, 351, 357, 378, 381, 384, 390, 395, 397, 414, 423, 426, 431, 432, 433, 453, 454, 455, 461, 463, 464, 474, 475, 476, 481, 482, 483, 489, 491, 492, 507, 513, 519, 525, 526, 528, 530, 536, 538, 544, 546, 554, 556, 561, 563, 566, 570, 572, 573, 574, 578, 598, 601, 602, 605, 607, 611, 612, 613, 619, 625, 631, 635, 640, 643, 646, 649, 651, 658, 662, 668, 672, 674, 678, 680, 696, 700, 701, 707, 708, 711, 714, 717, 720, 722, 723, 725, 729, 733, 736, 737, 739, 742, 745, 749, 750, 751, 752, 753, 754, 755, 756, 760, 761, 765, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 798, 800, 801, 802, 804, 806, 807, 808, 810, 812, 813, 817, 819, 820, 839, 842, 847, 849, 850, 851, 853, 855, 856, 860, 862, 864, 924, 929, 936, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 960, 961, 964, 966, 967, 975, 976, 977, 978, 979, 980, 988, 989, 990, 1005, 1006, 1011, 1012, 1013, 1032, 1039, 1040, 1043, 1045, 1046, 1048, 1050, 1058, 1062, 1063, 1064, 1065, 1067, 1068, 1069, 1074, 1076, 1077, 1078, 1084, 1088, 1090, 1091, 1093, 1094, 1095, 1100, 1103, 1110, 1112, 1120, 1121, 1123, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1149, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1167, 1168, 1169, 1173, 1187, 1206, 1208, 1239, 1253, 1261, 1264, 1265, 1266, 1269, 1271, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1312, 1313, 1314, 1316, 1317, 1320, 1327, 1346, 1348, 1351, 1359, 1363, 1365, 1373, 1374, 1376, 1380, 1381, 1383, 1386, 1389, 1390, 1392, 1395, 1396, 1397, 1398, 1399, 1401, 1404, 1405, 1406, 1407, 1416, 1417, 1421, 1429, 1432, 1434, 1436, 1441, 1490, 1493, 1494, 1495, 1498, 1499, 1505, 1506, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1541, 1542, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1565, 1566, 1567, 1578, 1579, 1582, 1583, 1584, 1585, 1586, 1587, 1590, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1615, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1657, 1658, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1710, 1712, 1713, 1715, 1717, 1718, 1720, 1722, 1723, 1725, 1727, 1728, 1730, 1732, 1733, 1735, 1737, 1738, 1740, 1742, 1743, 1745, 1746, 1748, 1749, 1750, 1751, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1763, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1779, 1786, 1787, 1789, 1790, 1791, 1792, 1795, 1803, 1805, 1811, 1814, 1842, 1874, 1879, 1884, 1886, 1890, 1893, 1894, 1896, 1901, 1902, 1908], "height": [1, 300, 409, 410, 416, 417, 419, 420, 447, 453, 454, 461, 463, 472, 589, 590, 629, 630, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 705, 707, 709, 771, 772, 1005, 1136, 1137, 1161, 1182, 1271, 1273, 1302, 1314, 1320, 1328, 1345, 1392, 1399, 1405, 1406, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1840, 1857, 1878, 1879, 1885, 1886, 1889, 1890, 1891, 1894, 1895, 1896, 1900, 1903, 1904], "databook": [1, 302, 303, 443, 444, 449, 990, 991, 992, 993, 994, 995, 996, 997, 1876, 1884], "option": [1, 3, 4, 10, 11, 17, 20, 21, 47, 48, 62, 63, 67, 72, 78, 91, 195, 303, 308, 309, 312, 313, 314, 326, 328, 329, 331, 341, 353, 357, 367, 368, 375, 376, 378, 386, 390, 395, 397, 400, 409, 410, 411, 412, 415, 417, 418, 424, 428, 429, 434, 438, 444, 447, 448, 449, 450, 451, 452, 453, 454, 461, 463, 469, 472, 475, 482, 489, 491, 498, 502, 503, 505, 507, 513, 518, 521, 523, 524, 526, 528, 533, 536, 541, 544, 549, 552, 554, 559, 561, 578, 583, 590, 597, 601, 618, 634, 649, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 685, 689, 693, 697, 701, 722, 723, 727, 736, 737, 743, 763, 798, 804, 809, 810, 817, 846, 847, 860, 909, 911, 914, 915, 924, 929, 936, 937, 943, 944, 945, 946, 947, 948, 949, 950, 952, 956, 957, 959, 960, 961, 964, 966, 967, 969, 972, 973, 974, 975, 976, 977, 978, 979, 980, 983, 984, 986, 988, 989, 990, 991, 1003, 1004, 1005, 1006, 1008, 1012, 1013, 1019, 1069, 1070, 1110, 1120, 1121, 1130, 1131, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1280, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1312, 1313, 1320, 1331, 1350, 1358, 1364, 1374, 1377, 1378, 1381, 1384, 1385, 1389, 1391, 1392, 1395, 1396, 1398, 1399, 1405, 1406, 1407, 1408, 1416, 1417, 1418, 1421, 1443, 1447, 1453, 1457, 1461, 1464, 1468, 1471, 1475, 1479, 1483, 1487, 1489, 1491, 1494, 1495, 1512, 1514, 1515, 1516, 1521, 1523, 1524, 1532, 1540, 1541, 1542, 1547, 1552, 1553, 1557, 1583, 1597, 1598, 1599, 1605, 1606, 1608, 1609, 1610, 1613, 1614, 1616, 1617, 1620, 1630, 1631, 1632, 1635, 1636, 1637, 1640, 1641, 1642, 1645, 1646, 1647, 1652, 1653, 1661, 1662, 1663, 1667, 1668, 1669, 1671, 1673, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1707, 1709, 1711, 1714, 1721, 1724, 1731, 1734, 1741, 1744, 1757, 1764, 1768, 1785, 1788, 1794, 1795, 1797, 1798, 1813, 1821, 1883, 1890, 1892, 1897, 1899, 1900, 1902, 1906, 1907], "default": [1, 46, 47, 48, 75, 96, 103, 195, 228, 302, 303, 308, 309, 334, 404, 424, 449, 456, 461, 466, 489, 494, 521, 526, 532, 533, 540, 541, 549, 551, 552, 559, 601, 649, 743, 817, 918, 919, 920, 921, 924, 936, 962, 965, 984, 998, 1005, 1020, 1041, 1084, 1094, 1100, 1103, 1106, 1107, 1110, 1120, 1121, 1123, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1167, 1187, 1189, 1225, 1226, 1245, 1259, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1278, 1280, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1305, 1309, 1312, 1313, 1315, 1318, 1320, 1327, 1329, 1344, 1345, 1358, 1363, 1368, 1373, 1374, 1376, 1377, 1378, 1380, 1381, 1383, 1384, 1385, 1389, 1390, 1392, 1395, 1396, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1412, 1414, 1416, 1417, 1418, 1419, 1421, 1422, 1557, 1671, 1707, 1709, 1795, 1804, 1821, 1872, 1874, 1884, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1904, 1905, 1906, 1908], "level": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 361, 366, 369, 371, 379, 405, 447, 449, 450, 451, 452, 454, 457, 465, 467, 469, 477, 484, 493, 495, 496, 498, 504, 522, 529, 537, 545, 555, 567, 586, 589, 590, 593, 603, 608, 614, 620, 626, 636, 663, 664, 669, 670, 675, 676, 681, 682, 728, 741, 747, 757, 769, 782, 788, 794, 814, 821, 843, 857, 863, 865, 911, 922, 924, 925, 929, 943, 944, 945, 946, 947, 948, 960, 961, 975, 976, 977, 978, 979, 980, 989, 1005, 1078, 1085, 1100, 1134, 1138, 1145, 1151, 1152, 1271, 1373, 1380, 1386, 1396, 1405, 1406, 1497, 1498, 1499, 1500, 1517, 1541, 1542, 1547, 1548, 1549, 1555, 1556, 1557, 1560, 1583, 1591, 1592, 1600, 1601, 1615, 1617, 1620, 1648, 1657, 1658, 1664, 1676, 1716, 1726, 1736, 1747, 1755, 1757, 1765, 1768, 1786, 1788, 1797, 1798, 1812, 1821, 1869, 1875, 1877, 1879, 1890, 1894, 1903], "mean": [1, 103, 191, 228, 302, 303, 343, 435, 915, 922, 927, 930, 931, 934, 938, 939, 940, 942, 957, 964, 966, 973, 975, 976, 977, 1123, 1131, 1139, 1141, 1147, 1155, 1160, 1264, 1269, 1301, 1389, 1392, 1407, 1416, 1417, 1596, 1597, 1605, 1606, 1614, 1671, 1685, 1686, 1709, 1880, 1882, 1890, 1894, 1897, 1899, 1906, 1907], "silent": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 366, 369, 371, 379, 405, 440, 447, 449, 450, 451, 452, 457, 467, 469, 477, 484, 495, 496, 498, 504, 522, 529, 537, 545, 555, 567, 586, 593, 603, 608, 614, 620, 626, 636, 664, 670, 676, 682, 728, 741, 747, 757, 769, 782, 788, 794, 814, 821, 843, 857, 863, 865, 911, 924, 925, 960, 961, 975, 976, 977, 978, 979, 980, 1395, 1497, 1498, 1499, 1500, 1517, 1541, 1542, 1547, 1548, 1549, 1555, 1556, 1557, 1560, 1583, 1591, 1592, 1600, 1601, 1620, 1648, 1657, 1658, 1664, 1676, 1716, 1726, 1736, 1747, 1755, 1757, 1765, 1768, 1786, 1788, 1797, 1798, 1812, 1821], "bool": [2, 3, 4, 5, 11, 16, 17, 20, 21, 29, 64, 69, 73, 97, 103, 186, 228, 276, 306, 315, 326, 339, 341, 349, 350, 367, 368, 369, 370, 395, 397, 411, 412, 414, 424, 437, 447, 450, 453, 454, 503, 507, 572, 573, 578, 582, 583, 589, 590, 598, 602, 607, 613, 619, 623, 625, 629, 630, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 684, 685, 688, 689, 692, 693, 696, 697, 747, 750, 751, 754, 757, 760, 761, 766, 768, 769, 782, 784, 785, 788, 790, 791, 794, 797, 798, 800, 806, 812, 814, 819, 821, 842, 843, 849, 855, 857, 859, 860, 862, 865, 870, 874, 878, 882, 883, 884, 886, 888, 889, 891, 893, 894, 896, 901, 903, 904, 906, 913, 914, 915, 924, 930, 936, 937, 943, 944, 945, 946, 947, 948, 957, 960, 961, 964, 966, 967, 975, 976, 977, 978, 979, 980, 989, 996, 1013, 1019, 1041, 1048, 1060, 1069, 1070, 1110, 1120, 1121, 1123, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1149, 1151, 1152, 1155, 1160, 1163, 1164, 1165, 1181, 1207, 1225, 1243, 1245, 1257, 1259, 1261, 1264, 1265, 1266, 1269, 1271, 1273, 1280, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1305, 1309, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1327, 1330, 1335, 1337, 1340, 1341, 1344, 1349, 1359, 1371, 1374, 1377, 1378, 1381, 1384, 1385, 1389, 1390, 1392, 1395, 1399, 1401, 1403, 1404, 1405, 1406, 1412, 1416, 1417, 1421, 1441, 1443, 1447, 1453, 1457, 1461, 1464, 1468, 1471, 1475, 1479, 1483, 1487, 1490, 1491, 1501, 1509, 1510, 1519, 1530, 1544, 1547, 1552, 1553, 1557, 1596, 1597, 1602, 1604, 1606, 1607, 1608, 1611, 1614, 1617, 1677, 1683, 1689, 1695, 1701, 1705, 1708, 1710, 1711, 1714, 1724, 1734, 1744, 1795, 1796, 1797, 1798, 1810, 1813, 1894, 1903, 1905], "includ": [2, 48, 330, 986, 992, 1005, 1042, 1111, 1136, 1155, 1165, 1197, 1225, 1231, 1265, 1269, 1292, 1293, 1301, 1337, 1350, 1364, 1373, 1377, 1380, 1384, 1404, 1406, 1412, 1414, 1883, 1890, 1892, 1895, 1897, 1907, 1908], "mdl": [2, 1489], "chunked_result": [3, 4, 20, 21], "after": [3, 4, 11, 20, 21, 331, 397, 435, 436, 447, 578, 605, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 975, 976, 977, 978, 979, 980, 1013, 1019, 1048, 1069, 1126, 1136, 1269, 1276, 1280, 1283, 1299, 1378, 1385, 1405, 1406, 1897, 1901], "instead": [3, 4, 20, 21, 326, 367, 447, 453, 454, 461, 463, 489, 491, 797, 798, 883, 884, 888, 889, 893, 894, 903, 904, 960, 961, 964, 966, 1005, 1085, 1123, 1136, 1147, 1155, 1210, 1232, 1246, 1265, 1291, 1298, 1301, 1302, 1309, 1350, 1364, 1375, 1377, 1382, 1384, 1389, 1395, 1396, 1405, 1406, 1407, 1538, 1547, 1582, 1615, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1884, 1890, 1892, 1899, 1905, 1907, 1908], "result": [3, 4, 9, 11, 16, 20, 21, 23, 24, 25, 32, 36, 42, 48, 53, 55, 57, 59, 62, 64, 66, 69, 71, 73, 75, 79, 85, 91, 94, 102, 195, 328, 329, 333, 341, 351, 353, 357, 378, 384, 386, 390, 393, 395, 397, 414, 420, 424, 432, 435, 436, 455, 464, 476, 483, 492, 513, 528, 532, 536, 544, 554, 561, 566, 570, 572, 573, 574, 576, 578, 582, 589, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 686, 690, 694, 698, 702, 705, 709, 711, 756, 764, 766, 774, 780, 797, 800, 803, 806, 846, 849, 869, 873, 875, 876, 877, 881, 883, 885, 888, 890, 893, 894, 895, 898, 900, 903, 905, 913, 914, 915, 922, 923, 924, 925, 927, 928, 929, 931, 933, 934, 935, 936, 938, 939, 940, 941, 955, 956, 957, 958, 959, 962, 963, 964, 966, 972, 973, 974, 981, 982, 985, 1022, 1121, 1123, 1134, 1137, 1138, 1139, 1141, 1147, 1151, 1152, 1155, 1163, 1164, 1165, 1269, 1273, 1298, 1301, 1302, 1315, 1330, 1359, 1375, 1382, 1389, 1390, 1399, 1494, 1495, 1498, 1499, 1515, 1516, 1523, 1524, 1538, 1545, 1546, 1548, 1549, 1552, 1553, 1555, 1556, 1574, 1575, 1582, 1590, 1598, 1599, 1600, 1609, 1610, 1615, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1657, 1658, 1662, 1663, 1668, 1669, 1671, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1709, 1710, 1712, 1713, 1720, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1754, 1755, 1763, 1765, 1779, 1786, 1803, 1805, 1811, 1814, 1870, 1871, 1874, 1879, 1883, 1886, 1890, 1893, 1894, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908], "addit": [3, 4, 17, 20, 21, 312, 329, 353, 386, 400, 415, 418, 424, 429, 434, 447, 448, 453, 454, 481, 482, 503, 508, 541, 549, 597, 601, 654, 656, 661, 667, 673, 679, 685, 689, 693, 697, 700, 701, 743, 763, 798, 804, 817, 847, 859, 860, 943, 944, 945, 946, 947, 948, 952, 956, 957, 959, 960, 961, 966, 967, 968, 969, 974, 975, 976, 977, 978, 979, 980, 983, 988, 1110, 1121, 1187, 1266, 1269, 1281, 1283, 1292, 1298, 1303, 1312, 1313, 1344, 1389, 1390, 1396, 1421, 1491, 1512, 1514, 1521, 1532, 1538, 1540, 1583, 1597, 1605, 1606, 1608, 1613, 1614, 1620, 1757, 1764, 1768, 1785, 1788, 1794, 1795, 1812, 1821, 1890, 1894, 1902, 1906, 1907], "run_calcul": [3, 4, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 1588], "dataset": [3, 4, 9, 11, 17, 20, 21, 23, 24, 25, 32, 64, 69, 73, 91, 308, 313, 327, 329, 353, 386, 453, 454, 503, 913, 914, 922, 923, 955, 956, 957, 959, 963, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 985, 1005, 1137, 1139, 1141, 1265, 1298, 1416, 1417, 1796, 1821, 1875, 1884, 1890, 1894, 1897, 1903, 1904, 1905], "have": [3, 4, 11, 20, 21, 397, 578, 596, 597, 957, 1005, 1013, 1025, 1048, 1069, 1110, 1112, 1136, 1140, 1153, 1154, 1161, 1225, 1262, 1264, 1267, 1269, 1291, 1292, 1293, 1298, 1302, 1308, 1309, 1310, 1311, 1319, 1345, 1346, 1365, 1389, 1391, 1398, 1399, 1405, 1406, 1418, 1421, 1671, 1709, 1816, 1879, 1890, 1892, 1894, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1907], "dimens": [3, 4, 11, 20, 21, 103, 194, 209, 214, 228, 289, 291, 313, 319, 320, 321, 322, 329, 367, 368, 397, 578, 922, 938, 939, 940, 957, 1005, 1013, 1024, 1030, 1035, 1036, 1048, 1057, 1061, 1069, 1073, 1075, 1130, 1136, 1137, 1171, 1266, 1269, 1291, 1292, 1293, 1302, 1315, 1328, 1403, 1819, 1874, 1879, 1894, 1895, 1897, 1903, 1904, 1905, 1908], "persist_mdata": [4, 21], "persist_pdata": 4, "numpi": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 114, 119, 228, 233, 313, 318, 319, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 513, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 562, 566, 570, 574, 577, 578, 579, 581, 585, 588, 592, 595, 596, 597, 598, 602, 607, 613, 619, 624, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 686, 690, 694, 698, 700, 701, 702, 705, 709, 713, 714, 715, 719, 720, 721, 724, 725, 726, 727, 732, 733, 734, 735, 738, 739, 740, 744, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 841, 842, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 916, 946, 947, 948, 957, 975, 976, 977, 978, 979, 980, 984, 989, 1039, 1040, 1043, 1063, 1064, 1065, 1076, 1110, 1120, 1136, 1140, 1147, 1155, 1163, 1164, 1245, 1259, 1264, 1265, 1282, 1291, 1294, 1298, 1299, 1301, 1302, 1310, 1311, 1389, 1421, 1439, 1440, 1441, 1445, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1493, 1509, 1510, 1519, 1530, 1538, 1540, 1547, 1550, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1574, 1575, 1584, 1585, 1590, 1595, 1604, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1671, 1709, 1714, 1715, 1717, 1718, 1724, 1725, 1727, 1728, 1734, 1735, 1737, 1738, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1756, 1758, 1759, 1760, 1761, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1787, 1789, 1790, 1791, 1792, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1874, 1893, 1894, 1896, 1897, 1901, 1903, 1904, 1905, 1908], "ndarrai": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 313, 318, 321, 322, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 513, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 562, 566, 570, 574, 577, 578, 579, 581, 585, 588, 592, 595, 596, 597, 598, 602, 607, 613, 619, 624, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 686, 690, 694, 698, 700, 701, 702, 705, 709, 713, 714, 715, 719, 720, 721, 724, 725, 726, 727, 732, 733, 734, 735, 738, 739, 740, 744, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 841, 842, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 916, 941, 946, 947, 948, 957, 975, 976, 977, 978, 979, 980, 984, 989, 1110, 1120, 1136, 1140, 1147, 1155, 1163, 1164, 1264, 1265, 1282, 1291, 1294, 1301, 1302, 1389, 1421, 1439, 1440, 1445, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1466, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1493, 1509, 1510, 1519, 1530, 1538, 1540, 1547, 1550, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1574, 1575, 1584, 1585, 1590, 1595, 1604, 1617, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1671, 1709, 1714, 1715, 1717, 1718, 1724, 1725, 1727, 1728, 1734, 1735, 1737, 1738, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1756, 1758, 1759, 1760, 1761, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1787, 1789, 1790, 1791, 1792, 1795, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1893, 1894, 1905, 1908], "interest": [4, 16, 17, 21, 46, 988, 1225, 1871, 1879, 1893, 1900, 1904, 1905], "shape": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 209, 228, 313, 322, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 513, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 562, 566, 570, 574, 577, 578, 579, 581, 585, 588, 592, 595, 596, 597, 598, 602, 607, 613, 619, 624, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 686, 690, 694, 698, 700, 702, 705, 709, 713, 714, 715, 719, 720, 721, 724, 725, 726, 727, 732, 733, 734, 735, 738, 739, 740, 744, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 842, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 916, 946, 947, 948, 957, 984, 989, 1039, 1040, 1043, 1063, 1064, 1065, 1076, 1123, 1137, 1139, 1160, 1265, 1266, 1269, 1291, 1292, 1293, 1298, 1302, 1309, 1358, 1391, 1395, 1398, 1439, 1440, 1445, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1493, 1494, 1495, 1498, 1499, 1509, 1510, 1515, 1516, 1519, 1523, 1524, 1530, 1538, 1540, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1578, 1579, 1584, 1585, 1586, 1587, 1590, 1595, 1598, 1599, 1600, 1602, 1604, 1609, 1610, 1611, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1657, 1658, 1659, 1662, 1663, 1668, 1669, 1674, 1675, 1677, 1681, 1682, 1683, 1687, 1688, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1708, 1712, 1713, 1714, 1715, 1717, 1718, 1722, 1723, 1724, 1725, 1727, 1728, 1732, 1733, 1734, 1735, 1737, 1738, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1755, 1756, 1758, 1759, 1760, 1761, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1786, 1787, 1789, 1790, 1791, 1792, 1794, 1795, 1812, 1816, 1817, 1818, 1819, 1820, 1884, 1890, 1893, 1894, 1903, 1904, 1908], "n_point": [4, 16, 17, 21, 48, 49, 59, 94, 313, 319, 322, 323, 333, 378, 384, 390, 396, 424, 426, 427, 431, 432, 433, 436, 437, 455, 464, 476, 483, 492, 528, 536, 544, 554, 561, 562, 566, 570, 574, 577, 585, 592, 714, 715, 720, 721, 725, 726, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 756, 760, 761, 766, 767, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 801, 802, 806, 807, 808, 812, 813, 819, 820, 839, 842, 849, 850, 851, 855, 856, 862, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 957, 1447, 1448, 1457, 1458, 1464, 1465, 1467, 1471, 1472, 1479, 1480, 1487, 1488, 1538, 1540, 1590, 1714, 1724, 1734, 1744, 1795, 1894, 1904], "3": [4, 16, 17, 21, 114, 186, 233, 313, 322, 395, 396, 398, 426, 427, 431, 562, 569, 577, 579, 585, 592, 714, 715, 720, 721, 725, 726, 733, 735, 739, 740, 745, 746, 755, 773, 779, 786, 792, 916, 957, 984, 989, 1006, 1013, 1014, 1048, 1069, 1088, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1210, 1218, 1261, 1264, 1265, 1269, 1271, 1272, 1273, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1310, 1311, 1314, 1346, 1390, 1395, 1399, 1401, 1439, 1441, 1538, 1540, 1671, 1709, 1879, 1884, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "pointdatamodel": [4, 21, 46, 57, 331, 332, 383, 384, 385, 386, 387, 388, 389, 403, 519, 564, 569, 572, 1871, 1875, 1879], "execut": [4, 21, 36, 42, 48, 55, 59, 79, 85, 94, 328, 331, 333, 341, 351, 357, 384, 390, 414, 425, 455, 464, 476, 483, 492, 513, 566, 570, 574, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 713, 719, 724, 732, 738, 744, 1283, 1441, 1590, 1797, 1804, 1879, 1884, 1892], "persist_fdata": [4, 21], "point_result": [4, 16, 21, 32, 957, 1893, 1894, 1904], "clear": [5, 306, 1005, 1131, 1144, 1146, 1900], "max_it": [9, 10], "maxim": [9, 10, 582, 583, 605, 729, 730, 736, 737, 817, 943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 988, 989, 1416, 1417, 1442, 1445, 1449, 1451, 1455, 1459, 1462, 1466, 1469, 1473, 1477, 1481, 1485, 1531, 1538, 1561, 1562, 1563, 1564, 1582, 1596, 1597, 1602, 1605, 1606, 1607, 1611, 1613, 1614, 1615, 1621, 1622, 1639, 1640, 1672, 1677, 1679, 1683, 1685, 1689, 1691, 1695, 1697, 1701, 1703, 1705, 1706, 1708, 1710, 1717, 1720, 1727, 1730, 1731, 1737, 1740, 1741, 1748, 1749, 1754, 1758, 1763, 1764, 1769, 1770, 1779, 1789, 1844, 1879, 1880, 1882, 1886, 1890, 1897, 1901], "conv_crit": [9, 10, 1894], "convcrit": [9, 10, 62, 63, 64, 65, 66, 67, 68, 71, 1872], "converg": [9, 10, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 1870, 1872, 1890, 1894, 1905], "criteria": [9, 10, 62, 63, 64, 66, 67, 69, 71, 72, 73, 75, 1872, 1894], "prev_farm_result": 9, "previou": [9, 64, 69, 73, 368, 428, 435, 437, 727, 867, 870, 871, 874, 875, 878, 879, 882, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906, 1126, 1283, 1373, 1380, 1890, 1894, 1905], "set_urelax": [9, 14, 1894], "entry_point": [9, 14], "urel": [9, 14, 83, 84], "under": [9, 14, 15, 77, 78, 83, 84, 339, 340, 345, 354, 371, 387, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1265, 1302, 1392, 1405, 1406, 1592, 1872, 1887, 1890, 1891, 1894, 1895, 1896, 1898, 1901, 1908], "relax": [9, 14, 15, 77, 78, 83, 84, 1872, 1890, 1894], "paramet": [9, 15, 16, 46, 327, 339, 354, 387, 453, 461, 489, 507, 509, 510, 525, 648, 660, 666, 672, 678, 700, 722, 729, 736, 742, 797, 803, 809, 816, 823, 844, 846, 852, 859, 968, 998, 1005, 1218, 1538, 1763, 1779, 1841, 1848, 1849, 1879, 1881, 1886, 1890, 1894, 1897, 1900, 1904, 1906, 1907], "urelax": [9, 15, 77, 78, 83, 84, 85, 86, 1872], "tupl": [10, 17, 103, 209, 214, 228, 312, 314, 319, 320, 321, 322, 328, 329, 353, 367, 386, 400, 415, 418, 429, 434, 448, 449, 503, 507, 518, 523, 525, 526, 685, 689, 693, 697, 760, 763, 812, 855, 862, 915, 937, 941, 943, 944, 945, 946, 947, 948, 952, 957, 966, 975, 976, 977, 978, 979, 980, 983, 988, 989, 1006, 1008, 1048, 1062, 1120, 1121, 1128, 1131, 1132, 1134, 1136, 1138, 1140, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1218, 1261, 1264, 1265, 1271, 1272, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1310, 1311, 1314, 1331, 1350, 1364, 1374, 1381, 1390, 1395, 1398, 1412, 1441, 1616, 1803, 1805, 1811, 1813], "argument": [10, 11, 17, 314, 329, 353, 386, 508, 518, 523, 597, 685, 689, 693, 697, 911, 915, 922, 941, 957, 966, 983, 988, 1012, 1060, 1120, 1125, 1128, 1131, 1132, 1135, 1136, 1137, 1140, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1266, 1271, 1272, 1273, 1278, 1280, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1358, 1368, 1374, 1376, 1381, 1383, 1389, 1390, 1391, 1395, 1396, 1401, 1403, 1405, 1406, 1407, 1616, 1671, 1709, 1714, 1724, 1734, 1744, 1797, 1798, 1803, 1805, 1811, 1813, 1890, 1895, 1901, 1906, 1907], "keyword": [10, 314, 1120, 1128, 1131, 1132, 1135, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1266, 1271, 1272, 1273, 1280, 1282, 1283, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1368, 1374, 1376, 1381, 1383, 1389, 1390, 1391, 1395, 1396, 1401, 1403, 1405, 1406, 1407, 1616, 1803, 1805, 1811, 1813], "first": [14, 64, 69, 73, 319, 326, 330, 368, 446, 672, 678, 717, 964, 966, 1005, 1006, 1012, 1125, 1135, 1137, 1139, 1141, 1160, 1163, 1164, 1265, 1266, 1269, 1273, 1277, 1284, 1292, 1293, 1374, 1381, 1386, 1389, 1395, 1398, 1405, 1406, 1407, 1408, 1879, 1892, 1893, 1894, 1897, 1899, 1906, 1907, 1908], "pre_rotor": [14, 35, 339, 341, 349, 350, 361, 413, 509, 622, 623, 642, 645, 1583, 1617], "post_rotor": [14, 1583], "pre_wak": [14, 1894], "last": [14, 922, 941, 1022, 1141, 1161, 1265, 1277, 1291, 1293, 1389, 1439, 1892], "urlx": 15, "util": [15, 365, 367, 438, 443, 519, 968, 969, 973, 974, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1869, 1876, 1890, 1894, 1897, 1903, 1905, 1906, 1907], "sequenti": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 722, 968, 971, 972, 1315, 1870, 1883, 1889, 1890], "A": [16, 66, 92, 103, 114, 182, 228, 233, 313, 354, 357, 361, 387, 390, 443, 444, 474, 481, 516, 657, 700, 704, 707, 762, 771, 777, 790, 796, 797, 809, 852, 853, 859, 860, 910, 936, 990, 991, 1005, 1006, 1008, 1017, 1022, 1024, 1110, 1120, 1121, 1135, 1136, 1137, 1139, 1140, 1141, 1143, 1145, 1147, 1155, 1160, 1161, 1163, 1164, 1165, 1218, 1264, 1266, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1303, 1309, 1310, 1311, 1316, 1344, 1365, 1368, 1377, 1384, 1389, 1391, 1392, 1395, 1396, 1397, 1399, 1401, 1405, 1406, 1416, 1417, 1421, 1671, 1709, 1710, 1720, 1730, 1740, 1814, 1872, 1873, 1875, 1876, 1878, 1879, 1882, 1884, 1887, 1894, 1895, 1896, 1898], "without": [16, 339, 509, 777, 784, 790, 796, 941, 1084, 1103, 1160, 1162, 1298, 1299, 1389, 1873, 1879, 1890, 1894, 1897, 1901, 1903, 1904, 1905], "thi": [16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 85, 94, 114, 233, 328, 329, 333, 341, 349, 350, 351, 353, 357, 378, 384, 386, 390, 395, 397, 414, 425, 430, 431, 443, 455, 464, 476, 483, 492, 513, 525, 528, 536, 544, 554, 561, 566, 570, 572, 574, 578, 598, 602, 605, 607, 613, 619, 623, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 696, 711, 713, 719, 724, 732, 738, 744, 749, 752, 755, 759, 762, 764, 771, 773, 777, 779, 784, 786, 790, 792, 796, 797, 803, 809, 816, 817, 846, 852, 859, 898, 922, 949, 975, 976, 977, 978, 979, 980, 998, 1005, 1006, 1008, 1010, 1013, 1018, 1019, 1020, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1038, 1039, 1040, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1084, 1085, 1087, 1089, 1090, 1092, 1099, 1100, 1103, 1105, 1107, 1110, 1112, 1113, 1120, 1121, 1122, 1123, 1125, 1126, 1130, 1131, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1151, 1152, 1155, 1156, 1157, 1159, 1160, 1161, 1163, 1164, 1165, 1167, 1168, 1169, 1176, 1183, 1187, 1188, 1198, 1202, 1227, 1231, 1232, 1233, 1234, 1235, 1246, 1247, 1248, 1249, 1261, 1262, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1273, 1276, 1278, 1281, 1282, 1284, 1287, 1290, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1308, 1309, 1310, 1311, 1312, 1313, 1319, 1320, 1325, 1326, 1327, 1328, 1331, 1340, 1342, 1344, 1346, 1348, 1349, 1350, 1352, 1358, 1363, 1364, 1372, 1373, 1375, 1377, 1379, 1380, 1382, 1384, 1387, 1388, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1411, 1412, 1414, 1416, 1417, 1418, 1421, 1439, 1459, 1466, 1473, 1490, 1491, 1557, 1578, 1579, 1586, 1587, 1590, 1617, 1671, 1709, 1710, 1720, 1730, 1740, 1763, 1775, 1776, 1871, 1872, 1873, 1876, 1878, 1879, 1880, 1884, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "us": [16, 228, 241, 319, 329, 354, 387, 435, 447, 525, 540, 569, 605, 684, 685, 688, 689, 692, 693, 696, 697, 711, 749, 752, 797, 798, 817, 823, 838, 915, 922, 937, 960, 961, 1005, 1006, 1008, 1010, 1013, 1019, 1023, 1024, 1026, 1048, 1051, 1053, 1069, 1070, 1078, 1090, 1100, 1110, 1111, 1112, 1120, 1121, 1123, 1126, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1141, 1147, 1151, 1152, 1153, 1154, 1155, 1157, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1185, 1187, 1189, 1198, 1210, 1225, 1227, 1231, 1232, 1233, 1234, 1235, 1246, 1247, 1248, 1249, 1261, 1262, 1264, 1265, 1266, 1269, 1280, 1281, 1282, 1283, 1284, 1286, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1312, 1313, 1315, 1317, 1319, 1330, 1331, 1346, 1350, 1358, 1364, 1368, 1375, 1376, 1377, 1378, 1382, 1383, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1409, 1410, 1416, 1417, 1419, 1421, 1422, 1441, 1490, 1491, 1493, 1538, 1562, 1563, 1566, 1567, 1578, 1579, 1582, 1586, 1587, 1615, 1621, 1622, 1623, 1624, 1671, 1707, 1709, 1717, 1718, 1737, 1738, 1748, 1749, 1750, 1751, 1754, 1758, 1759, 1763, 1769, 1770, 1771, 1772, 1775, 1776, 1779, 1789, 1790, 1873, 1878, 1879, 1880, 1890, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1907, 1908], "simul": [16, 790, 796, 1873, 1890, 1891, 1895, 1900, 1903], "environ": [16, 1873, 1890], "do": [16, 368, 1078, 1087, 1099, 1100, 1187, 1269, 1292, 1293, 1302, 1359, 1365, 1389, 1405, 1406, 1671, 1709, 1873, 1879, 1890, 1897, 1899, 1903, 1905, 1906, 1907], "support": [16, 998, 1005, 1012, 1078, 1087, 1100, 1121, 1135, 1136, 1140, 1142, 1143, 1151, 1152, 1162, 1173, 1265, 1269, 1278, 1280, 1281, 1292, 1293, 1298, 1302, 1305, 1306, 1312, 1313, 1314, 1317, 1331, 1348, 1349, 1352, 1359, 1373, 1376, 1380, 1383, 1389, 1390, 1406, 1441, 1671, 1709, 1873, 1890, 1891, 1892, 1900], "multi": [16, 472, 752, 1873, 1878, 1889, 1890, 1891], "comput": [16, 36, 42, 48, 55, 59, 79, 85, 94, 228, 274, 317, 318, 328, 333, 341, 351, 357, 375, 384, 390, 414, 423, 425, 428, 435, 455, 464, 476, 483, 492, 513, 566, 570, 574, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 657, 658, 662, 668, 674, 680, 711, 713, 717, 719, 722, 724, 727, 729, 732, 736, 738, 742, 744, 816, 955, 984, 1005, 1022, 1041, 1099, 1120, 1134, 1138, 1139, 1151, 1152, 1155, 1265, 1282, 1294, 1301, 1389, 1397, 1412, 1590, 1671, 1709, 1870, 1873, 1879, 1883, 1890, 1900, 1905, 1908], "like": [16, 1005, 1041, 1110, 1121, 1126, 1129, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1145, 1151, 1152, 1160, 1161, 1162, 1163, 1164, 1167, 1187, 1264, 1265, 1266, 1267, 1269, 1284, 1291, 1292, 1293, 1297, 1298, 1299, 1302, 1309, 1312, 1313, 1344, 1352, 1374, 1381, 1390, 1391, 1392, 1395, 1396, 1405, 1406, 1407, 1412, 1416, 1417, 1418, 1421, 1873, 1895, 1900, 1902], "fmu": [16, 1873], "calc_par": [16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 329, 330, 339, 347, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 1588], "states0": [16, 428, 727], "origin": [16, 92, 93, 103, 163, 437, 771, 772, 870, 874, 878, 882, 886, 891, 896, 901, 906, 975, 976, 977, 978, 979, 980, 1005, 1048, 1139, 1161, 1207, 1269, 1284, 1308, 1318, 1345, 1346, 1355, 1389, 1390, 1405, 1406, 1409, 1410, 1441, 1482, 1585, 1588, 1589, 1626, 1671, 1709, 1761, 1774, 1792, 1891, 1905], "plugin": [16, 17, 87, 968, 1873, 1883, 1903], "sequentialiterplugin": [16, 17], "updat": [16, 17, 87, 91, 375, 378, 437, 525, 528, 532, 536, 540, 544, 548, 551, 554, 558, 561, 605, 870, 874, 878, 882, 886, 891, 896, 901, 906, 968, 972, 1005, 1013, 1022, 1026, 1032, 1048, 1053, 1058, 1069, 1074, 1111, 1122, 1126, 1262, 1306, 1351, 1355, 1403, 1411, 1412, 1538, 1578, 1579, 1582, 1586, 1587, 1615, 1754, 1763, 1775, 1776, 1779, 1873, 1890, 1897, 1903, 1908], "everi": [16, 17, 589, 590, 1100, 1163, 1164, 1264, 1278, 1298, 1396, 1892, 1903], "__iter__": [16, 18], "__next__": [16, 19], "step": [16, 19, 33, 103, 214, 228, 424, 451, 452, 582, 583, 589, 590, 729, 730, 859, 860, 936, 988, 1005, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1163, 1164, 1261, 1265, 1282, 1294, 1298, 1299, 1301, 1390, 1392, 1396, 1890, 1894, 1895, 1896, 1898, 1899, 1900, 1903, 1905, 1907], "next": [16, 19, 1005, 1136, 1309, 1321, 1441, 1893, 1894, 1897, 1899, 1901, 1903, 1904, 1906, 1907], "size": [16, 33, 92, 99, 103, 153, 210, 228, 319, 330, 336, 397, 403, 407, 424, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 505, 578, 729, 730, 859, 860, 915, 920, 988, 1005, 1121, 1136, 1137, 1140, 1160, 1163, 1164, 1225, 1264, 1269, 1278, 1291, 1292, 1297, 1298, 1302, 1303, 1309, 1320, 1391, 1398, 1401, 1403, 1588, 1589, 1594, 1896, 1897, 1906], "total": [16, 33, 92, 99, 330, 336, 403, 407, 435, 441, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 505, 913, 922, 930, 942, 949, 951, 955, 958, 962, 973, 981, 984, 986, 1121, 1123, 1161, 1265, 1538, 1568, 1569, 1582, 1588, 1594, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1890, 1897], "counter": [16, 22, 92, 95, 319, 326, 989, 1302, 1363, 1538, 1551, 1582, 1615, 1754, 1763, 1779], "index": [16, 22, 28, 48, 49, 92, 95, 96, 228, 241, 326, 329, 330, 334, 354, 358, 368, 377, 378, 403, 404, 409, 410, 412, 424, 426, 427, 428, 431, 437, 447, 453, 456, 461, 463, 466, 469, 472, 474, 481, 489, 491, 494, 498, 502, 505, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 618, 714, 715, 720, 721, 725, 726, 727, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 913, 914, 915, 943, 944, 945, 946, 947, 948, 957, 975, 976, 977, 989, 1006, 1012, 1110, 1120, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1273, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1417, 1418, 1421, 1493, 1538, 1573, 1577, 1582, 1588, 1615, 1754, 1763, 1779, 1815, 1890, 1895, 1901, 1902, 1903, 1906, 1908], "weight": [16, 34, 92, 101, 286, 330, 338, 393, 395, 397, 402, 403, 408, 453, 454, 460, 461, 471, 472, 474, 480, 481, 488, 489, 501, 502, 505, 507, 532, 551, 576, 578, 581, 582, 583, 588, 589, 590, 595, 922, 941, 957, 975, 976, 977, 1005, 1265, 1266, 1269, 1303, 1391, 1401, 1574, 1575, 1588, 1595, 1671, 1686, 1709, 1859, 1874, 1879, 1884, 1886, 1890, 1894, 1895, 1897, 1902, 1903, 1904, 1905, 1907], "arrai": [16, 34, 36, 42, 48, 55, 59, 79, 85, 94, 103, 104, 108, 109, 110, 111, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 328, 333, 341, 351, 357, 368, 384, 390, 409, 410, 414, 425, 455, 464, 476, 483, 492, 513, 566, 570, 574, 596, 597, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 713, 719, 724, 732, 738, 744, 941, 1005, 1013, 1018, 1039, 1040, 1041, 1043, 1048, 1049, 1063, 1064, 1065, 1069, 1076, 1110, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1167, 1245, 1259, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1282, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1405, 1406, 1407, 1412, 1416, 1417, 1418, 1421, 1439, 1440, 1493, 1494, 1495, 1498, 1499, 1515, 1516, 1523, 1524, 1545, 1546, 1547, 1548, 1549, 1552, 1553, 1555, 1556, 1557, 1578, 1579, 1586, 1587, 1590, 1598, 1599, 1600, 1602, 1609, 1610, 1611, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1657, 1658, 1659, 1662, 1663, 1668, 1669, 1671, 1674, 1675, 1677, 1681, 1682, 1683, 1687, 1688, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1708, 1709, 1712, 1713, 1714, 1722, 1723, 1724, 1732, 1733, 1734, 1742, 1743, 1744, 1755, 1765, 1775, 1776, 1786, 1795, 1817, 1818, 1819, 1820, 1890, 1894, 1896, 1897, 1903, 1905, 1908], "fdata": [16, 26, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 330, 333, 339, 341, 349, 351, 354, 357, 361, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 413, 414, 416, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 505, 509, 510, 513, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 562, 563, 564, 566, 569, 570, 572, 574, 576, 578, 579, 582, 589, 596, 598, 600, 602, 605, 607, 611, 613, 617, 619, 622, 625, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 666, 668, 672, 674, 678, 680, 711, 713, 714, 715, 717, 719, 720, 721, 722, 724, 725, 726, 727, 729, 732, 733, 734, 735, 736, 738, 739, 740, 742, 744, 745, 746, 749, 750, 751, 752, 754, 755, 756, 759, 760, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 800, 801, 802, 803, 806, 807, 808, 809, 812, 813, 816, 819, 820, 823, 839, 846, 849, 850, 851, 852, 855, 856, 859, 862, 864, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 906, 1588, 1590], "pdata": [16, 31, 46, 48, 49, 57, 59, 92, 94, 319, 322, 330, 333, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 403, 423, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 505, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 563, 564, 566, 569, 570, 572, 574, 711, 715, 717, 721, 722, 726, 727, 729, 735, 736, 740, 742, 746, 749, 750, 751, 752, 754, 755, 756, 759, 760, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 800, 801, 802, 803, 806, 807, 808, 809, 812, 813, 816, 819, 820, 823, 839, 846, 849, 850, 851, 852, 855, 856, 859, 862, 864, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 885, 886, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 906, 1588, 1590], "overal": [16, 25, 32, 1903], "cur_farm_result": [16, 23], "cur_point_result": [16, 24], "indx": 28, "itr": 29, "": [33, 35, 40, 46, 53, 57, 77, 83, 92, 103, 195, 228, 308, 309, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 368, 383, 386, 387, 393, 403, 413, 416, 453, 454, 461, 472, 474, 481, 489, 502, 505, 509, 510, 540, 541, 549, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 941, 975, 976, 977, 978, 979, 980, 989, 1005, 1013, 1018, 1048, 1049, 1069, 1090, 1092, 1106, 1110, 1112, 1120, 1121, 1136, 1137, 1139, 1140, 1141, 1147, 1155, 1160, 1161, 1163, 1164, 1167, 1183, 1196, 1237, 1244, 1251, 1258, 1260, 1264, 1265, 1266, 1267, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1309, 1314, 1318, 1320, 1329, 1331, 1338, 1346, 1363, 1371, 1377, 1384, 1389, 1391, 1392, 1395, 1398, 1401, 1407, 1411, 1416, 1417, 1418, 1421, 1439, 1441, 1540, 1547, 1557, 1588, 1764, 1785, 1825, 1826, 1827, 1832, 1850, 1851, 1852, 1860, 1884, 1886, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "w": [34, 283, 299, 368, 417, 461, 481, 482, 569, 653, 654, 656, 660, 661, 666, 667, 672, 678, 989, 998, 1000, 1002, 1106, 1139, 1298, 1303, 1318, 1363, 1425, 1428, 1429, 1434, 1671, 1709, 1818, 1819, 1860, 1867, 1868, 1874, 1879, 1884, 1886, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "n_turbin": [34, 36, 42, 55, 79, 85, 101, 319, 325, 338, 339, 341, 351, 357, 395, 397, 398, 408, 414, 425, 438, 441, 452, 460, 471, 480, 488, 501, 513, 578, 579, 596, 597, 598, 602, 607, 613, 619, 624, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 713, 719, 724, 732, 734, 738, 744, 916, 1595, 1629, 1630, 1660, 1661, 1710, 1711, 1720, 1721, 1730, 1731, 1893, 1894, 1897, 1899, 1901, 1902, 1903, 1904, 1905], "calcord": [35, 36, 37, 38, 39, 1871, 1894, 1903, 1905], "farmdatamodel": [35, 40, 53, 77, 83, 339, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 393, 413, 1871, 1872, 1875], "via": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 447, 448, 453, 454, 461, 463, 469, 472, 474, 481, 489, 491, 498, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 913, 922, 942, 949, 954, 955, 958, 962, 973, 981, 984, 986, 998, 1090, 1092, 1126, 1136, 1269, 1302, 1405, 1406, 1407, 1547, 1557, 1588, 1797, 1871, 1877, 1878, 1880, 1884, 1890, 1891, 1897, 1900, 1901, 1906, 1908], "output_farm_var": [35, 38, 40, 44, 53, 56, 77, 81, 83, 86, 339, 346, 349, 352, 354, 359, 361, 393, 401, 413, 416, 509, 510, 514, 576, 582, 589, 596, 599, 600, 604, 605, 609, 611, 615, 617, 621, 622, 627, 629, 632, 633, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 665, 666, 671, 672, 677, 678, 683], "which": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 302, 330, 335, 339, 346, 349, 352, 354, 359, 361, 378, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 423, 431, 432, 433, 436, 437, 453, 458, 461, 463, 468, 472, 474, 478, 481, 485, 489, 497, 502, 505, 509, 510, 514, 528, 536, 544, 554, 561, 564, 568, 569, 571, 572, 575, 576, 582, 589, 596, 599, 600, 604, 605, 609, 611, 615, 617, 618, 621, 622, 627, 629, 632, 633, 634, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 661, 665, 666, 667, 671, 672, 677, 678, 679, 683, 711, 712, 742, 743, 750, 751, 752, 754, 755, 756, 760, 761, 766, 768, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 800, 802, 806, 808, 812, 813, 819, 820, 849, 851, 855, 856, 862, 864, 869, 870, 873, 874, 875, 876, 877, 878, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 915, 918, 919, 920, 921, 937, 957, 966, 975, 976, 977, 984, 989, 1005, 1006, 1008, 1013, 1023, 1025, 1038, 1048, 1069, 1078, 1110, 1111, 1120, 1123, 1125, 1126, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1147, 1149, 1155, 1160, 1161, 1163, 1164, 1165, 1167, 1208, 1218, 1221, 1225, 1226, 1233, 1234, 1235, 1239, 1243, 1247, 1248, 1249, 1253, 1257, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1280, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1308, 1309, 1312, 1313, 1314, 1315, 1316, 1320, 1330, 1331, 1344, 1345, 1346, 1348, 1358, 1359, 1361, 1368, 1374, 1381, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1403, 1405, 1406, 1407, 1414, 1416, 1417, 1418, 1421, 1547, 1557, 1588, 1593, 1596, 1597, 1606, 1614, 1617, 1671, 1709, 1817, 1820, 1875, 1879, 1887, 1891, 1894, 1896, 1897, 1900, 1903, 1904, 1905, 1906, 1907, 1908], "being": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 431, 432, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 505, 509, 510, 514, 564, 568, 569, 571, 572, 575, 576, 582, 589, 596, 599, 600, 604, 605, 609, 611, 615, 617, 621, 622, 627, 629, 632, 633, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 665, 666, 671, 672, 677, 678, 683, 755, 756, 773, 774, 779, 780, 786, 792, 1121, 1123, 1128, 1132, 1163, 1164, 1189, 1310, 1311, 1387, 1388, 1557, 1588, 1593, 1671, 1709, 1890, 1893], "modifi": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 375, 377, 378, 383, 385, 387, 391, 393, 397, 401, 403, 406, 413, 416, 431, 432, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 505, 509, 510, 514, 525, 527, 528, 532, 535, 536, 540, 543, 544, 548, 550, 551, 553, 554, 558, 560, 561, 564, 568, 569, 571, 572, 575, 576, 578, 582, 589, 596, 599, 600, 604, 605, 609, 611, 615, 617, 621, 622, 627, 629, 632, 633, 637, 638, 641, 642, 644, 645, 647, 648, 652, 653, 655, 657, 659, 660, 665, 666, 671, 672, 677, 678, 683, 755, 756, 773, 774, 779, 780, 786, 792, 949, 950, 1122, 1283, 1346, 1350, 1359, 1364, 1372, 1377, 1379, 1384, 1397, 1405, 1406, 1588, 1593, 1875, 1894], "main": [35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 327, 328, 330, 333, 339, 341, 349, 351, 354, 357, 361, 383, 384, 387, 390, 403, 413, 414, 416, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 505, 509, 510, 513, 564, 566, 569, 570, 572, 574, 596, 598, 600, 602, 605, 607, 611, 613, 617, 619, 622, 625, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 666, 668, 672, 674, 678, 680, 1139, 1141, 1293, 1310, 1588, 1590, 1892, 1895], "out_var": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 597, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 1588], "start": [35, 40, 46, 53, 57, 77, 83, 92, 103, 175, 228, 327, 329, 330, 331, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 444, 447, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 711, 712, 742, 743, 964, 966, 990, 991, 1005, 1012, 1022, 1041, 1121, 1123, 1136, 1160, 1297, 1302, 1394, 1398, 1441, 1588, 1814, 1884, 1890, 1893, 1895, 1901, 1904, 1908], "apply_ufunc": [35, 40, 46, 53, 57, 77, 83, 92, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 1588], "singl": [36, 42, 48, 55, 59, 79, 85, 92, 94, 319, 328, 333, 341, 351, 357, 384, 390, 414, 425, 452, 455, 464, 476, 481, 483, 492, 502, 513, 566, 570, 574, 576, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 713, 719, 724, 732, 738, 744, 960, 964, 966, 1005, 1047, 1121, 1136, 1137, 1140, 1158, 1161, 1264, 1265, 1283, 1298, 1309, 1331, 1346, 1389, 1405, 1406, 1490, 1494, 1511, 1513, 1515, 1520, 1523, 1531, 1538, 1552, 1582, 1590, 1596, 1598, 1605, 1607, 1609, 1613, 1615, 1629, 1631, 1634, 1636, 1639, 1641, 1644, 1646, 1650, 1652, 1655, 1660, 1662, 1666, 1668, 1672, 1674, 1679, 1681, 1685, 1687, 1691, 1693, 1697, 1699, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1870, 1871, 1873, 1878, 1889, 1890, 1891, 1893, 1894, 1895, 1899, 1900, 1905], "should": [36, 42, 48, 55, 59, 79, 85, 94, 328, 333, 341, 345, 351, 357, 371, 384, 390, 405, 414, 425, 453, 454, 455, 457, 464, 467, 476, 477, 483, 492, 496, 504, 513, 525, 566, 567, 570, 574, 598, 602, 603, 607, 613, 619, 625, 626, 631, 635, 640, 643, 646, 651, 658, 662, 664, 668, 670, 674, 676, 680, 682, 713, 719, 724, 732, 738, 744, 898, 1005, 1010, 1013, 1031, 1032, 1038, 1048, 1058, 1069, 1074, 1089, 1105, 1128, 1131, 1132, 1135, 1136, 1145, 1147, 1155, 1161, 1163, 1164, 1188, 1232, 1246, 1262, 1291, 1293, 1299, 1301, 1309, 1377, 1378, 1384, 1385, 1389, 1392, 1395, 1396, 1398, 1417, 1590, 1592, 1671, 1709, 1816, 1821, 1892, 1894, 1896, 1897, 1901, 1902, 1906, 1907, 1908], "output": [36, 38, 42, 44, 48, 51, 55, 56, 57, 59, 61, 79, 81, 85, 86, 94, 98, 328, 329, 333, 335, 341, 346, 351, 352, 353, 357, 359, 368, 384, 385, 386, 390, 391, 401, 406, 414, 440, 453, 454, 455, 458, 461, 463, 464, 468, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 513, 514, 566, 568, 570, 571, 574, 575, 596, 597, 598, 599, 600, 601, 602, 604, 607, 609, 613, 615, 619, 621, 625, 627, 631, 632, 635, 637, 640, 641, 643, 644, 646, 647, 651, 652, 658, 659, 662, 665, 668, 671, 674, 677, 680, 683, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 1005, 1013, 1036, 1039, 1040, 1043, 1048, 1061, 1063, 1064, 1065, 1069, 1075, 1076, 1245, 1259, 1269, 1292, 1348, 1349, 1393, 1590, 1593, 1671, 1709, 1812, 1821, 1869, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "output_var": [38, 44, 51, 56, 61, 81, 86, 98, 335, 346, 352, 359, 385, 391, 401, 406, 453, 454, 458, 461, 463, 468, 472, 478, 485, 489, 491, 497, 505, 514, 564, 565, 568, 571, 575, 599, 600, 601, 604, 609, 615, 621, 627, 632, 633, 634, 637, 641, 644, 647, 652, 659, 665, 671, 677, 683, 1593, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "smdl": [39, 45, 52, 82, 100, 337, 348, 360, 373, 382, 392, 487, 500, 515, 531, 539, 547, 557, 616, 716, 748, 758, 770, 776, 783, 789, 795, 815, 822, 845, 858, 866], "farmwakescalcul": [40, 41, 42, 43, 44, 45, 77, 78, 79, 80, 81, 82, 1871, 1872, 1894, 1903, 1905], "effect": [40, 46, 77, 375, 393, 395, 551, 576, 582, 589, 777, 784, 790, 796, 1005, 1013, 1019, 1069, 1070, 1136, 1157, 1261, 1265, 1266, 1302, 1306, 1343, 1349, 1378, 1385, 1825, 1826, 1827, 1850, 1851, 1852, 1871, 1872, 1879, 1881, 1882, 1886, 1890, 1893, 1894, 1900, 1901, 1902, 1907, 1908], "pointwakescalcul": [46, 47, 48, 49, 50, 51, 52, 1871], "pvar": [46, 57], "emodel": [46, 47], "pointdatamodellist": [46, 47, 330, 387, 388, 389, 390, 391, 392, 1875], "extra": [46, 47, 975, 976, 977, 978, 979, 980, 1122, 1320, 1390, 1401, 1671, 1709], "emodels_cpar": [46, 47], "output_point_var": [46, 51, 57, 61, 92, 98, 330, 335, 383, 385, 387, 391, 403, 406, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 505, 564, 568, 569, 571, 572, 575, 1588, 1593], "contribute_to_wake_delta": [46, 49, 375, 377, 378, 430, 431, 525, 527, 528, 532, 535, 536, 540, 543, 544, 548, 550, 551, 553, 554, 558, 560, 561, 749, 752, 755, 759, 762, 764, 771, 773, 777, 779, 784, 786, 790, 792, 796, 797, 803, 809, 816, 846, 852, 859], "contribut": [46, 49, 375, 377, 430, 431, 435, 436, 525, 527, 532, 535, 540, 543, 548, 550, 551, 553, 558, 560, 749, 752, 755, 759, 762, 764, 771, 773, 777, 779, 784, 786, 790, 792, 796, 797, 803, 809, 816, 846, 852, 859, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 1265, 1894], "delta": [46, 49, 62, 65, 66, 70, 71, 74, 75, 375, 377, 378, 381, 430, 431, 432, 433, 435, 436, 437, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 563, 572, 573, 642, 645, 722, 723, 736, 737, 749, 750, 751, 752, 754, 755, 756, 759, 761, 762, 764, 766, 768, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 800, 802, 803, 806, 808, 809, 813, 816, 819, 820, 846, 849, 851, 852, 856, 859, 864, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 888, 890, 891, 893, 895, 896, 898, 900, 901, 903, 905, 906, 915, 936, 1440, 1645, 1673, 1879, 1890, 1894, 1900, 1903, 1905], "states_source_turbin": [46, 48, 49, 368, 377, 423, 424, 426, 427, 428, 431, 437, 527, 535, 543, 550, 553, 560, 711, 714, 715, 717, 720, 721, 722, 725, 726, 727, 729, 733, 735, 736, 739, 740, 742, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 823, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906], "For": [48, 49, 327, 368, 377, 378, 409, 410, 424, 426, 427, 428, 431, 437, 507, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 605, 714, 715, 720, 721, 725, 726, 727, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 797, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 988, 1005, 1023, 1025, 1041, 1042, 1078, 1121, 1122, 1125, 1134, 1138, 1139, 1140, 1142, 1151, 1152, 1155, 1160, 1161, 1162, 1171, 1188, 1207, 1231, 1264, 1265, 1266, 1269, 1280, 1291, 1292, 1293, 1297, 1299, 1301, 1302, 1309, 1310, 1311, 1315, 1327, 1329, 1331, 1344, 1346, 1350, 1359, 1364, 1374, 1375, 1377, 1381, 1382, 1384, 1390, 1395, 1396, 1397, 1398, 1399, 1401, 1403, 1405, 1406, 1407, 1409, 1410, 1671, 1709, 1892, 1894, 1895, 1897, 1899, 1900, 1901, 1903, 1904, 1905, 1906, 1908, 1909], "each": [48, 49, 87, 103, 214, 228, 327, 339, 357, 368, 377, 378, 390, 409, 410, 424, 426, 427, 428, 431, 437, 507, 527, 528, 535, 536, 543, 544, 550, 553, 554, 560, 561, 672, 678, 714, 715, 717, 720, 721, 725, 726, 727, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 924, 943, 946, 947, 948, 988, 1005, 1013, 1024, 1041, 1048, 1069, 1121, 1122, 1134, 1137, 1138, 1139, 1140, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1177, 1261, 1264, 1265, 1266, 1267, 1272, 1283, 1291, 1293, 1295, 1297, 1298, 1301, 1302, 1315, 1321, 1350, 1364, 1375, 1377, 1382, 1384, 1389, 1391, 1395, 1398, 1399, 1407, 1416, 1417, 1418, 1531, 1596, 1602, 1605, 1607, 1611, 1613, 1671, 1672, 1677, 1679, 1683, 1685, 1689, 1691, 1695, 1697, 1701, 1703, 1705, 1706, 1708, 1709, 1796, 1873, 1879, 1893, 1894, 1895, 1897, 1900, 1901, 1904, 1905, 1906, 1907, 1908], "one": [48, 49, 103, 189, 228, 354, 357, 368, 377, 378, 387, 390, 395, 397, 402, 424, 426, 427, 428, 431, 437, 525, 526, 527, 528, 532, 533, 535, 536, 540, 541, 543, 544, 548, 549, 550, 551, 552, 553, 554, 559, 560, 561, 578, 581, 582, 583, 588, 595, 714, 715, 720, 721, 725, 726, 727, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 981, 988, 1005, 1022, 1112, 1120, 1121, 1123, 1131, 1134, 1136, 1137, 1138, 1139, 1147, 1151, 1152, 1155, 1161, 1163, 1164, 1226, 1264, 1265, 1266, 1269, 1280, 1282, 1291, 1292, 1293, 1294, 1298, 1301, 1309, 1344, 1346, 1363, 1368, 1389, 1391, 1397, 1398, 1399, 1405, 1406, 1407, 1409, 1410, 1439, 1441, 1671, 1709, 1816, 1879, 1883, 1884, 1890, 1894, 1895, 1899, 1907, 1908], "caus": [48, 49, 368, 377, 424, 426, 427, 428, 431, 437, 527, 535, 543, 550, 553, 560, 714, 715, 720, 721, 725, 726, 727, 733, 735, 739, 740, 745, 746, 750, 751, 754, 755, 760, 761, 766, 767, 768, 773, 779, 786, 792, 800, 801, 806, 807, 812, 819, 839, 842, 849, 850, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 1032, 1058, 1074, 1085, 1137, 1291, 1890, 1894], "wmodel": [49, 771, 772], "wdelta": [49, 437, 750, 751, 754, 761, 768, 819, 870, 874, 878, 882, 886, 891, 896, 901, 906], "ob": [49, 431, 432, 755, 756, 773, 774, 779, 780, 786, 792], "fly": [49, 431, 432, 433, 729, 734, 755, 756, 773, 774, 775, 779, 780, 781, 786, 787, 792, 793, 802, 808, 813, 820, 851, 856, 864, 1405, 1406, 1407, 1408], "setambfarmresult": [53, 54, 55, 56, 1871, 1894, 1903, 1905], "copi": [53, 57, 103, 172, 228, 397, 578, 1005, 1013, 1026, 1032, 1048, 1053, 1058, 1069, 1074, 1413, 1871], "setambpointresult": [57, 58, 59, 60, 61, 1871], "treat": [57, 941, 1005, 1032, 1058, 1074, 1265, 1299, 1395, 1419, 1422, 1903], "abstract": [62, 64, 65, 302, 317, 318, 327, 328, 349, 351, 352, 361, 375, 377, 378, 381, 383, 384, 385, 393, 396, 399, 402, 403, 407, 408, 413, 414, 416, 419, 420, 421, 423, 425, 427, 430, 431, 433, 435, 436, 437, 749, 750, 752, 754, 759, 760, 764, 766, 767, 1006, 1010, 1442, 1445, 1446, 1447, 1448, 1449, 1520, 1526, 1531, 1538, 1582, 1584, 1585, 1655, 1706, 1708, 1806, 1811, 1869, 1872, 1875, 1880, 1884, 1887, 1890], "check_converg": [62, 64, 66, 69, 71, 73, 75], "prev_result": [62, 64, 66, 69, 71, 73, 75], "check": [62, 64, 66, 69, 71, 73, 75, 823, 826, 842, 996, 1165, 1292, 1396, 1490, 1511, 1513, 1520, 1538, 1548, 1549, 1582, 1607, 1608, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1658, 1660, 1666, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1815, 1890, 1894, 1897, 1905, 1906], "get_delta": [62, 65, 66, 70, 71, 74, 75], "most": [62, 65, 66, 70, 71, 74, 75, 1005, 1136, 1139, 1147, 1155, 1167, 1181, 1187, 1265, 1291, 1292, 1293, 1298, 1301, 1320, 1327, 1377, 1384, 1389, 1396, 1398, 1405, 1406, 1409, 1410, 1894, 1908], "recent": [62, 65, 66, 70, 71, 74, 75], "convcritlist": [66, 67, 68, 69, 70, 1872], "crit": [66, 67, 68], "add_crit": [66, 68], "criterion": [66, 68, 1165], "convvardelta": [71, 72, 73, 74, 75, 1872], "requir": [71, 302, 326, 329, 423, 428, 525, 711, 717, 722, 727, 729, 736, 742, 1005, 1042, 1122, 1141, 1171, 1265, 1269, 1315, 1318, 1320, 1416, 1872, 1890, 1891, 1895, 1896, 1897, 1898, 1900, 1903, 1906, 1908, 1909], "select": [71, 83, 288, 293, 312, 329, 339, 341, 375, 376, 380, 400, 409, 410, 411, 412, 413, 414, 415, 418, 422, 429, 434, 437, 454, 461, 463, 469, 472, 489, 491, 498, 502, 505, 510, 524, 596, 597, 598, 602, 607, 613, 619, 625, 631, 635, 640, 643, 646, 651, 658, 662, 668, 674, 680, 750, 751, 754, 760, 761, 766, 768, 800, 806, 812, 819, 849, 855, 862, 870, 874, 878, 882, 886, 891, 896, 901, 906, 952, 975, 976, 977, 978, 979, 980, 981, 983, 1078, 1089, 1100, 1105, 1243, 1257, 1490, 1491, 1493, 1494, 1495, 1511, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1524, 1527, 1529, 1531, 1532, 1535, 1537, 1538, 1540, 1547, 1557, 1570, 1576, 1582, 1596, 1598, 1599, 1605, 1607, 1609, 1610, 1613, 1615, 1617, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1662, 1663, 1668, 1669, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1754, 1763, 1779, 1869, 1872, 1874, 1875, 1877, 1879, 1881, 1890, 1893, 1896, 1897, 1898, 1899, 1900, 1904, 1906], "limit": [71, 72, 314, 817, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 1005, 1006, 1008, 1013, 1019, 1048, 1051, 1069, 1070, 1084, 1103, 1122, 1123, 1126, 1129, 1130, 1133, 1134, 1135, 1138, 1139, 1141, 1151, 1152, 1160, 1171, 1212, 1213, 1223, 1224, 1239, 1245, 1253, 1259, 1264, 1266, 1272, 1283, 1292, 1298, 1305, 1306, 1315, 1352, 1353, 1354, 1365, 1366, 1367, 1374, 1375, 1378, 1381, 1382, 1385, 1397, 1404, 1412, 1414, 1416, 1417, 1890], "float": [71, 72, 103, 117, 163, 186, 228, 236, 318, 409, 410, 416, 417, 424, 461, 463, 474, 475, 481, 482, 605, 606, 649, 654, 656, 660, 661, 666, 667, 673, 678, 679, 700, 701, 707, 708, 722, 723, 729, 730, 736, 737, 742, 743, 771, 772, 797, 798, 803, 804, 809, 810, 816, 817, 823, 838, 846, 847, 852, 853, 859, 860, 875, 876, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 913, 914, 915, 924, 926, 929, 930, 936, 943, 944, 945, 946, 947, 948, 964, 966, 967, 975, 976, 977, 978, 979, 980, 988, 989, 1005, 1022, 1041, 1084, 1103, 1120, 1121, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1151, 1152, 1155, 1156, 1160, 1161, 1163, 1164, 1167, 1176, 1211, 1212, 1213, 1214, 1239, 1253, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1278, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1314, 1316, 1318, 1320, 1328, 1344, 1348, 1350, 1353, 1354, 1355, 1358, 1363, 1364, 1368, 1372, 1373, 1374, 1375, 1378, 1379, 1380, 1381, 1382, 1385, 1386, 1389, 1390, 1392, 1394, 1395, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1417, 1418, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1441, 1459, 1460, 1490, 1491, 1493, 1494, 1495, 1498, 1499, 1503, 1505, 1507, 1509, 1511, 1513, 1514, 1515, 1516, 1519, 1520, 1523, 1524, 1530, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1562, 1566, 1571, 1578, 1579, 1580, 1582, 1584, 1585, 1586, 1587, 1596, 1597, 1598, 1599, 1600, 1604, 1605, 1606, 1607, 1609, 1610, 1613, 1614, 1615, 1617, 1618, 1621, 1623, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1645, 1646, 1647, 1650, 1651, 1652, 1653, 1655, 1656, 1660, 1661, 1662, 1663, 1666, 1668, 1669, 1671, 1672, 1673, 1674, 1675, 1679, 1681, 1682, 1685, 1686, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1709, 1710, 1711, 1712, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1730, 1731, 1732, 1733, 1735, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1745, 1748, 1750, 1752, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1769, 1771, 1773, 1774, 1775, 1776, 1777, 1779, 1785, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1814, 1815, 1818, 1819, 1874, 1895, 1897], "wd_var": [71, 72, 962, 964, 966, 984], "direct": [71, 72, 403, 474, 475, 481, 482, 582, 583, 589, 590, 717, 718, 944, 945, 947, 948, 964, 966, 967, 975, 976, 977, 978, 979, 980, 1005, 1123, 1126, 1134, 1136, 1138, 1151, 1152, 1155, 1161, 1221, 1233, 1234, 1235, 1245, 1247, 1248, 1249, 1259, 1264, 1265, 1269, 1297, 1302, 1318, 1320, 1361, 1363, 1374, 1381, 1392, 1396, 1398, 1403, 1420, 1423, 1440, 1473, 1474, 1817, 1818, 1819, 1820, 1831, 1858, 1870, 1871, 1877, 1879, 1884, 1886, 1890, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1904, 1906, 1907, 1908], "unit": [71, 72, 227, 279, 283, 296, 299, 301, 416, 417, 605, 606, 797, 798, 929, 936, 1005, 1090, 1110, 1120, 1129, 1133, 1147, 1153, 1154, 1155, 1261, 1263, 1269, 1271, 1273, 1278, 1282, 1294, 1301, 1302, 1303, 1320, 1328, 1389, 1399, 1405, 1406, 1421, 1513, 1514, 1671, 1709, 1824, 1847, 1874, 1886, 1895], "deg": [71, 72, 1895], "defaultconv": [75, 76, 1872, 1894, 1905], "dure": [83, 92, 319, 320, 329, 345, 371, 405, 453, 454, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 968, 1005, 1084, 1103, 1156, 1592, 1872, 1873, 1883, 1890, 1897, 1898, 1905, 1906], "factor": [83, 84, 283, 605, 606, 633, 634, 797, 798, 809, 810, 852, 853, 859, 860, 1218, 1269, 1310, 1311, 1358, 1398, 1417, 1426, 1430, 1431, 1435, 1596, 1597, 1606, 1614, 1645, 1673, 1843, 1874, 1879, 1885, 1886, 1890, 1908], "bewteen": [83, 84], "sequentialplugin": [87, 88, 89, 90, 91, 968, 1873, 1883], "sequeti": [87, 89, 90, 91, 971, 972], "intial": [87, 90, 968, 971], "fre": [87, 91, 913, 968, 972], "pre": [87, 91, 339, 341, 784, 785, 790, 791, 968, 972, 1005, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1163, 1164, 1261, 1265, 1282, 1294, 1298, 1299, 1301, 1390, 1396, 1892, 1901, 1905], "latest": [91, 972, 1538, 1578, 1579, 1582, 1586, 1587, 1615, 1754, 1763, 1775, 1776, 1779, 1892], "seqstat": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 1873, 1903], "just": [92, 1130, 1187, 1271, 1281, 1284, 1298, 1312, 1313, 1346, 1396, 1407, 1873, 1890, 1901], "serv": [92, 368, 428, 727, 1873, 1895], "structur": [92, 540, 672, 678, 1298, 1441, 1873, 1879, 1890, 1899, 1906], "placehold": [92, 1873], "statist": [92, 101, 330, 338, 403, 408, 453, 460, 461, 471, 472, 474, 480, 481, 488, 489, 501, 502, 505, 1137, 1139, 1160, 1588, 1595, 1859, 1886, 1895, 1907], "indic": [96, 313, 334, 395, 397, 404, 451, 452, 456, 466, 494, 578, 915, 943, 944, 945, 960, 961, 975, 976, 977, 978, 979, 980, 989, 1005, 1090, 1091, 1139, 1160, 1161, 1271, 1272, 1284, 1310, 1311, 1344, 1441, 1547, 1576, 1884, 1890], "array_lik": [96, 313, 319, 320, 329, 334, 404, 409, 410, 451, 456, 466, 475, 494, 507, 1671, 1709], "label": [96, 334, 404, 409, 410, 456, 466, 494, 943, 944, 945, 946, 947, 948, 988, 989, 1005, 1090, 1095, 1099, 1106, 1120, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1145, 1147, 1155, 1160, 1162, 1163, 1164, 1198, 1200, 1211, 1231, 1233, 1234, 1235, 1240, 1241, 1243, 1247, 1248, 1249, 1254, 1255, 1257, 1261, 1264, 1265, 1267, 1271, 1277, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1314, 1325, 1326, 1338, 1346, 1347, 1350, 1351, 1364, 1368, 1373, 1377, 1378, 1380, 1384, 1385, 1390, 1391, 1395, 1396, 1399, 1401, 1403, 1418, 1419, 1422, 1893, 1894, 1895, 1902, 1906], "integ": [96, 103, 163, 181, 228, 241, 334, 404, 456, 466, 494, 1006, 1011, 1012, 1013, 1030, 1036, 1048, 1057, 1061, 1069, 1073, 1075, 1134, 1136, 1138, 1151, 1152, 1264, 1265, 1269, 1284, 1302, 1359, 1490, 1493, 1494, 1495, 1498, 1499, 1506, 1508, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1559, 1563, 1567, 1578, 1579, 1581, 1582, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1615, 1622, 1624, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1710, 1712, 1713, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1749, 1751, 1754, 1755, 1760, 1761, 1763, 1765, 1770, 1772, 1773, 1774, 1775, 1776, 1779, 1786, 1791, 1792], "overwrit": [97, 315, 369, 409, 410, 747, 757, 769, 782, 788, 794, 814, 821, 843, 857, 865], "exist": [97, 315, 369, 618, 747, 757, 769, 782, 788, 794, 814, 821, 823, 842, 843, 857, 865, 996, 1005, 1112, 1273, 1293, 1299, 1346, 1405, 1406, 1659, 1900, 1904, 1908], "constant": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 1005, 1163, 1164, 1391, 1392, 1417, 1425, 1427, 1429, 1433, 1434, 1437, 1869, 1886, 1890, 1893, 1894, 1896, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "amb_rpoint_result": [102, 1874], "amb_rpoint_r": [102, 1874], "identifi": [102, 226, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 368, 1023, 1024, 1416, 1417, 1869, 1874, 1890, 1905], "dtype": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 1265, 1874, 1897], "__hash__": [103, 123, 228, 240], "hash": [103, 123, 228, 240, 1441], "__str__": [103, 154, 228, 270, 1005, 1013, 1021, 1048, 1052, 1069, 1071, 1109, 1490, 1492, 1511, 1513, 1520, 1531, 1538, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "__lt__": [103, 128, 228, 246], "__le__": [103, 126, 228, 244], "__eq__": [103, 116, 228, 235, 1048, 1050], "__ne__": [103, 131, 228, 249], "__gt__": [103, 122, 228, 239], "__ge__": [103, 120, 228, 238], "__add__": [103, 106, 228, 230, 1013, 1017, 1048, 1069], "__radd__": [103, 137, 228, 255], "__sub__": [103, 155, 228, 271, 1013, 1022, 1048, 1069], "__rsub__": [103, 150, 228, 267], "__mul__": [103, 130, 228, 248], "__rmul__": [103, 145, 228, 262], "__mod__": [103, 129, 228, 247], "__rmod__": [103, 144, 228, 261], "__divmod__": [103, 115, 228, 234], "divmod": [103, 115, 139, 228, 234, 257, 1441], "__rdivmod__": [103, 139, 228, 257], "__pow__": [103, 136, 228, 254], "mod": [103, 136, 147, 228, 254, 264], "pow": [103, 136, 147, 228, 254, 264, 875, 876, 893, 894, 1441], "__rpow__": [103, 147, 228, 264], "__neg__": [103, 132, 228, 250], "__pos__": [103, 135, 228, 253], "__abs__": [103, 105, 228, 229], "ab": [103, 105, 228, 229, 1441], "__bool__": [103, 113, 228, 232], "__int__": [103, 124, 228, 242], "__float__": [103, 117, 228, 236], "__floordiv__": [103, 118, 228, 237], "__rfloordiv__": [103, 142, 228, 259], "__truediv__": [103, 156, 228, 272], "__rtruediv__": [103, 151, 228, 268], "see": [103, 104, 133, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 251, 1005, 1022, 1042, 1078, 1081, 1100, 1102, 1106, 1113, 1125, 1126, 1136, 1141, 1147, 1149, 1160, 1161, 1162, 1207, 1219, 1273, 1278, 1280, 1281, 1292, 1297, 1306, 1310, 1311, 1312, 1313, 1319, 1348, 1349, 1368, 1376, 1383, 1390, 1396, 1398, 1399, 1403, 1405, 1406, 1407, 1408, 1409, 1410, 1441, 1671, 1709, 1804, 1806, 1807, 1890, 1892, 1894, 1897, 1899, 1900, 1907], "help": [103, 133, 228, 251, 998, 1078, 1081, 1100, 1102, 1441, 1804, 1806, 1807, 1884], "accur": [103, 133, 228, 251, 1078, 1081, 1100, 1102, 1804, 1806, 1807], "signatur": [103, 133, 228, 251, 1078, 1081, 1100, 1102, 1110, 1112, 1121, 1130, 1136, 1165, 1264, 1281, 1291, 1292, 1293, 1298, 1302, 1312, 1313, 1346, 1365, 1395, 1396, 1405, 1406, 1407, 1408, 1421, 1804, 1806, 1807], "as_integer_ratio": [103, 163], "pair": [103, 163, 1005, 1139, 1150, 1278, 1318, 1404, 1671, 1709], "whose": [103, 163, 1123, 1880, 1895], "ratio": [103, 163, 1005, 1122, 1123, 1136, 1171, 1176, 1182, 1188, 1269, 1297, 1315, 1320, 1328, 1390], "exactli": [103, 163, 308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1022, 1269, 1391, 1592], "equal": [103, 163, 1022, 1023, 1120, 1130, 1139, 1147, 1155, 1265, 1269, 1282, 1284, 1291, 1293, 1294, 1297, 1299, 1301, 1314, 1320, 1328, 1389, 1390, 1398, 1822, 1836, 1839, 1886], "posit": [103, 163, 409, 410, 412, 989, 1005, 1069, 1078, 1090, 1091, 1093, 1094, 1121, 1122, 1128, 1132, 1135, 1136, 1137, 1139, 1140, 1141, 1160, 1161, 1162, 1163, 1164, 1207, 1211, 1226, 1264, 1271, 1281, 1283, 1302, 1303, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1318, 1320, 1331, 1345, 1350, 1351, 1359, 1368, 1373, 1374, 1377, 1378, 1380, 1381, 1384, 1385, 1392, 1395, 1396, 1399, 1401, 1405, 1406, 1407, 1409, 1410, 1416, 1417, 1490, 1511, 1754, 1880, 1881, 1890, 1901], "denomin": [103, 163, 228, 275], "rais": [103, 163, 453, 996, 1006, 1012, 1078, 1085, 1087, 1100, 1110, 1120, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1299, 1301, 1302, 1309, 1346, 1365, 1389, 1391, 1392, 1395, 1398, 1417, 1418, 1421], "overflowerror": [103, 163, 1441], "infin": [103, 163], "valueerror": [103, 163, 1006, 1012, 1291, 1293, 1297, 1346, 1365, 1441, 1671, 1709], "nan": [103, 163, 368, 453, 454, 507, 941, 1266, 1309, 1405, 1406, 1439, 1493, 1890, 1901], "is_integ": [103, 186, 228, 276], "finit": [103, 186, 228, 276, 1346, 1405, 1406], "integr": [103, 186, 228, 276, 423, 424, 582, 583, 589, 590, 711, 717, 722, 729, 736, 742, 859, 860, 1147, 1155, 1264, 1265, 1301, 1389, 1398, 1887, 1890], "otherwis": [103, 186, 996, 1005, 1006, 1008, 1010, 1060, 1084, 1103, 1110, 1139, 1141, 1177, 1207, 1264, 1283, 1291, 1309, 1315, 1377, 1384, 1389, 1390, 1412, 1414, 1416, 1417, 1421, 1707, 1899], "item": [103, 114, 187, 228, 233, 1894], "parametr": [103, 114, 228, 233], "wrapper": [103, 114, 228, 233, 510, 762, 771, 1281, 1292, 1312, 1313, 1396, 1879, 1887, 1890], "around": [103, 114, 228, 233, 1084, 1103, 1139, 1281, 1312, 1313, 1365, 1391, 1396, 1401, 1890, 1893, 1894], "__invert__": [103, 125, 228, 243], "__lshift__": [103, 127, 228, 245], "__rlshift__": [103, 143, 228, 260], "__rshift__": [103, 149, 228, 266], "__rrshift__": [103, 148, 228, 265], "__and__": [103, 107, 228, 231], "__rand__": [103, 138, 228, 256], "__xor__": [103, 157, 228, 273], "__rxor__": [103, 152, 228, 269], "__or__": [103, 134, 228, 252], "__ror__": [103, 146, 228, 263], "__getitem__": [103, 121, 228, 319, 516, 517, 519, 520, 1006, 1007], "tolist": [103, 220, 228], "scalar": [103, 104, 108, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 368, 564, 565, 1120, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1141, 1147, 1155, 1160, 1163, 1164, 1167, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1314, 1317, 1390, 1399, 1401, 1405, 1406, 1416, 1417, 1418, 1671, 1709], "method": [103, 114, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 233, 449, 601, 867, 868, 871, 872, 875, 876, 879, 880, 1003, 1004, 1005, 1013, 1020, 1024, 1032, 1047, 1048, 1058, 1069, 1074, 1084, 1085, 1089, 1090, 1092, 1099, 1103, 1105, 1107, 1111, 1125, 1130, 1137, 1139, 1155, 1157, 1167, 1187, 1261, 1264, 1265, 1266, 1269, 1271, 1272, 1273, 1280, 1283, 1291, 1292, 1293, 1297, 1299, 1301, 1302, 1309, 1310, 1311, 1331, 1372, 1377, 1379, 1384, 1390, 1391, 1395, 1396, 1405, 1406, 1417], "ident": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1005, 1013, 1022, 1048, 1069, 1161, 1298, 1309, 1390, 1896, 1908], "correspond": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 326, 377, 527, 535, 543, 550, 553, 560, 605, 1013, 1029, 1032, 1048, 1056, 1058, 1069, 1072, 1074, 1120, 1139, 1147, 1155, 1160, 1161, 1264, 1282, 1291, 1293, 1294, 1297, 1299, 1301, 1331, 1389, 1397, 1404, 1416, 1417, 1817, 1820, 1867, 1868, 1886, 1892, 1894, 1897, 1898, 1899, 1902], "attribut": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1168, 1169, 1225, 1232, 1246, 1264, 1344, 1345, 1397, 1398, 1895], "itemset": [103, 188, 228], "tobyt": [103, 218, 228], "tofil": [103, 219, 228], "tostr": [103, 221, 228], "byteswap": [103, 166, 228], "astyp": [103, 164, 228], "getfield": [103, 184, 228], "setfield": [103, 207, 228], "resiz": [103, 204, 228, 1269], "__array__": [103, 108, 228, 1013, 1018, 1048, 1049, 1069], "sc": [103, 108, 112, 228], "dim": [103, 108, 228, 319, 320, 321, 322, 367, 368], "specifi": [103, 108, 228, 375, 377, 525, 527, 532, 535, 540, 543, 548, 550, 551, 553, 558, 560, 618, 1005, 1006, 1008, 1013, 1019, 1069, 1070, 1111, 1121, 1122, 1125, 1131, 1134, 1136, 1138, 1139, 1147, 1151, 1152, 1155, 1162, 1182, 1264, 1265, 1266, 1283, 1291, 1292, 1293, 1297, 1298, 1301, 1302, 1309, 1310, 1311, 1320, 1363, 1389, 1391, 1395, 1396, 1399, 1401, 1405, 1406, 1407, 1408, 1414, 1417, 1707, 1879, 1890, 1897, 1906], "__array_wrap__": [103, 112, 228], "obj": [103, 112, 228, 1298, 1552, 1553, 1555, 1556, 1755, 1765, 1786], "__sizeof__": [103, 153, 228], "byte": [103, 153, 189, 193, 195, 214, 228, 1441], "__reduce__": [103, 140, 228], "helper": [103, 140, 228, 949, 989, 998, 1003, 1004, 1090, 1092, 1299, 1588, 1869, 1880, 1884], "pickl": [103, 140, 228], "dump": [103, 178, 179, 228], "fill": [103, 180, 228, 375, 378, 381, 443, 453, 525, 528, 530, 532, 536, 538, 540, 544, 546, 548, 551, 554, 556, 558, 561, 563, 966, 1005, 1123, 1129, 1130, 1133, 1136, 1137, 1152, 1162, 1163, 1164, 1264, 1265, 1269, 1271, 1291, 1293, 1298, 1302, 1309, 1320, 1392, 1395, 1405, 1406, 1416, 1417, 1443, 1453, 1461, 1468, 1475, 1483, 1876], "transpos": [103, 223, 228, 1265], "take": [103, 217, 228, 308, 309, 376, 875, 876, 893, 894, 957, 975, 976, 977, 1013, 1019, 1069, 1070, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1265, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1314, 1316, 1365, 1378, 1385, 1389, 1390, 1392, 1399, 1401, 1405, 1407, 1417], "put": [103, 199, 228, 1136, 1310, 1311, 1401, 1403], "repeat": [103, 202, 228, 1137, 1391, 1405, 1406, 1617], "choos": [103, 167, 228, 1147, 1155, 1264, 1291, 1293, 1301, 1389, 1405, 1406, 1671, 1709, 1892, 1893, 1894, 1899, 1901, 1907], "sort": [103, 211, 228, 1389, 1441], "argsort": [103, 162, 228], "searchsort": [103, 206, 228], "argmax": [103, 160, 228], "argmin": [103, 161, 228], "reshap": [103, 203, 228], "squeez": [103, 212, 228], "view": [103, 182, 225, 228, 1005, 1048, 1051, 1084, 1100, 1103, 1122, 1125, 1126, 1216, 1217, 1239, 1253, 1298, 1352, 1374, 1378, 1381, 1385, 1397, 1414], "swapax": [103, 216, 228], "max": [103, 190, 228, 507, 618, 871, 888, 915, 938, 939, 940, 975, 976, 977, 978, 979, 980, 1048, 1134, 1138, 1151, 1152, 1265, 1405, 1406, 1416, 1441, 1596, 1597, 1606, 1614, 1615, 1617, 1659, 1685, 1686, 1879, 1882, 1890, 1902], "min": [103, 192, 228, 507, 618, 915, 938, 939, 940, 975, 976, 977, 978, 979, 980, 1048, 1134, 1138, 1151, 1152, 1265, 1405, 1406, 1416, 1441, 1596, 1597, 1606, 1614, 1615, 1617, 1659, 1685, 1686, 1882, 1890, 1902, 1903, 1905], "ptp": [103, 198, 228], "trace": [103, 222, 228, 1905], "diagon": [103, 176, 228], "clip": [103, 168, 228, 1005, 1121, 1141, 1163, 1164, 1185, 1186, 1228, 1245, 1259, 1269, 1281, 1312, 1313, 1329, 1330, 1331, 1375, 1382], "conj": [103, 170, 228], "conjug": [103, 171, 228, 1421], "nonzero": [103, 196, 228], "std": [103, 213, 228], "sum": [103, 215, 228, 915, 922, 928, 933, 935, 938, 939, 940, 941, 1264, 1265, 1269, 1297, 1391, 1441, 1538, 1568, 1569, 1574, 1575, 1582, 1596, 1597, 1606, 1614, 1615, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1890, 1906], "cumsum": [103, 174, 228], "prod": [103, 197, 228], "cumprod": [103, 173, 228], "ani": [103, 114, 159, 195, 228, 233, 377, 378, 381, 527, 528, 530, 535, 536, 538, 543, 544, 546, 550, 553, 554, 556, 560, 561, 563, 657, 911, 1005, 1006, 1008, 1013, 1022, 1031, 1038, 1048, 1051, 1069, 1078, 1084, 1087, 1100, 1103, 1112, 1121, 1126, 1135, 1136, 1149, 1151, 1152, 1156, 1160, 1161, 1261, 1262, 1263, 1266, 1269, 1283, 1298, 1302, 1303, 1309, 1390, 1401, 1403, 1440, 1441, 1494, 1495, 1498, 1499, 1515, 1516, 1523, 1524, 1545, 1546, 1555, 1556, 1598, 1599, 1600, 1609, 1610, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1662, 1663, 1668, 1669, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1712, 1713, 1722, 1723, 1732, 1733, 1742, 1743, 1755, 1765, 1786, 1803, 1805, 1811, 1817, 1818, 1819, 1820, 1879, 1892, 1896, 1900, 1903, 1905, 1906, 1908], "compress": [103, 169, 228, 1821], "flatten": [103, 183, 228, 1309], "ravel": [103, 200, 228, 1893, 1894], "round": [103, 205, 228, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1359, 1390, 1441, 1821], "__format__": [103, 119, 228], "formatt": [103, 119, 228, 1005, 1090, 1099, 1167, 1168, 1169, 1299, 1378, 1385, 1404], "setflag": [103, 208, 228], "newbyteord": [103, 195, 228], "new_ord": [103, 195, 228], "differ": [103, 195, 228, 525, 540, 548, 1022, 1078, 1121, 1134, 1136, 1137, 1138, 1147, 1151, 1152, 1155, 1161, 1233, 1234, 1235, 1247, 1248, 1249, 1265, 1269, 1281, 1291, 1292, 1293, 1298, 1301, 1365, 1376, 1383, 1389, 1398, 1879, 1887, 1890, 1893, 1895, 1896, 1902], "ndim": [103, 194, 228], "stride": [103, 214, 228], "pointer": [103, 175, 228], "items": [103, 189, 228], "length": [103, 189, 193, 228, 451, 507, 525, 526, 729, 730, 736, 737, 1005, 1039, 1040, 1041, 1043, 1047, 1063, 1064, 1065, 1076, 1110, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1218, 1261, 1264, 1265, 1267, 1271, 1278, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1309, 1314, 1346, 1358, 1389, 1390, 1391, 1398, 1399, 1401, 1403, 1407, 1418, 1421, 1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1588, 1845, 1866, 1880, 1886, 1890, 1895], "element": [103, 189, 210, 228, 582, 583, 589, 590, 1120, 1140, 1147, 1155, 1218, 1231, 1233, 1234, 1235, 1247, 1248, 1249, 1265, 1282, 1293, 1294, 1298, 1301, 1302, 1391, 1399, 1405, 1406, 1671, 1709], "gentyp": [103, 210, 228], "nbyte": [103, 193, 228], "descriptor": [103, 177, 228], "real": [103, 201, 228, 1120, 1147, 1155, 1282, 1294, 1301, 1389, 1439, 1884], "part": [103, 185, 201, 228, 345, 371, 405, 457, 467, 477, 496, 504, 524, 532, 567, 603, 626, 664, 670, 676, 682, 1005, 1013, 1027, 1028, 1040, 1043, 1045, 1046, 1048, 1051, 1054, 1055, 1064, 1065, 1067, 1068, 1069, 1076, 1077, 1136, 1228, 1298, 1302, 1592, 1895, 1897, 1899, 1900, 1902], "imag": [103, 185, 228, 915, 937, 943, 944, 945, 946, 947, 948, 989, 1005, 1116, 1120, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1266, 1268, 1269, 1271, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1314, 1316, 1359, 1389, 1390, 1399, 1401, 1405, 1406, 1414, 1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483, 1903], "imaginari": [103, 185, 228], "flat": [103, 182, 228, 1291, 1292, 1293, 1407], "t": [103, 104, 228, 447, 638, 639, 722, 723, 736, 737, 941, 998, 1000, 1005, 1022, 1137, 1269, 1309, 1369, 1389, 1407, 1671, 1709, 1855, 1867, 1868, 1886, 1903, 1905], "__array_interface__": [103, 109, 228], "protocol": [103, 109, 111, 228], "python": [103, 109, 114, 228, 233, 1441, 1671, 1709, 1884, 1890, 1891, 1900, 1903], "side": [103, 109, 228, 941, 1120, 1137, 1147, 1155, 1163, 1164, 1265, 1277, 1282, 1294, 1301, 1389, 1406, 1893, 1903], "__array_struct__": [103, 111, 228], "struct": [103, 111, 228], "__array_priority__": [103, 110, 228], "prioriti": [103, 110, 228], "pleas": [104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 1131, 1378, 1385, 1888, 1891, 1909], "version": [114, 186, 233, 276, 1090, 1094, 1113, 1120, 1135, 1147, 1155, 1160, 1210, 1282, 1292, 1294, 1297, 1301, 1389, 1671, 1709, 1890, 1891, 1892], "22": [114, 186, 233, 276, 1134, 1138, 1151, 1152, 1895, 1897, 1901, 1906], "alia": [114, 233, 1005, 1160, 1191, 1291, 1293, 1333], "genericalia": [114, 233], "import": [114, 233, 1022, 1489, 1671, 1709, 1884, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "np": [114, 163, 186, 233, 274, 276, 321, 322, 368, 936, 941, 1110, 1136, 1265, 1298, 1302, 1365, 1398, 1421, 1439, 1441, 1493, 1494, 1495, 1498, 1499, 1515, 1516, 1523, 1524, 1545, 1546, 1547, 1548, 1549, 1552, 1553, 1555, 1556, 1557, 1578, 1579, 1586, 1587, 1598, 1599, 1600, 1602, 1609, 1610, 1611, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1657, 1658, 1659, 1662, 1663, 1668, 1669, 1671, 1674, 1675, 1677, 1681, 1682, 1683, 1687, 1688, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1708, 1709, 1712, 1713, 1722, 1723, 1732, 1733, 1742, 1743, 1755, 1765, 1775, 1776, 1786, 1795, 1893, 1894, 1896, 1897, 1901, 1903, 1904, 1905, 1908], "signedinteg": [114, 228, 233, 1874], "avail": [114, 233, 1141, 1182, 1226, 1264, 1266, 1269, 1291, 1292, 1293, 1298, 1309, 1318, 1368, 1390, 1405, 1406, 1416, 1417, 1879, 1887, 1889, 1890, 1892, 1895, 1906], "9": [114, 233, 1160, 1298, 1671, 1709, 1890, 1892, 1894, 1895, 1897, 1898, 1901, 1902, 1903, 1904, 1905, 1906, 1908], "later": [114, 233, 1022, 1112, 1897, 1901, 1903, 1905, 1906], "pep": [114, 233], "585": [114, 233], "hint": [114, 233, 1489, 1884], "gener": [114, 233, 711, 729, 734, 859, 908, 910, 912, 922, 937, 942, 943, 944, 945, 946, 947, 948, 1006, 1008, 1022, 1040, 1043, 1047, 1064, 1065, 1076, 1136, 1264, 1265, 1266, 1269, 1284, 1291, 1292, 1293, 1297, 1302, 1309, 1344, 1378, 1385, 1389, 1390, 1398, 1405, 1406, 1499, 1556, 1881, 1883, 1887, 1890, 1893, 1894, 1895, 1897], "standard": [114, 233, 922, 932, 1005, 1136, 1151, 1152, 1162, 1265, 1291, 1293, 1396, 1671, 1709, 1890, 1904], "collect": [114, 233, 302, 937, 943, 944, 945, 946, 947, 948, 989, 1005, 1006, 1114, 1140, 1148, 1161, 1264, 1266, 1267, 1291, 1293, 1302, 1305, 1306, 1309, 1344, 1395, 1416, 1417, 1418, 1671, 1709, 1900, 1904], "doubl": [163, 186, 1890], "10": [163, 742, 790, 796, 797, 809, 816, 823, 852, 859, 1005, 1110, 1136, 1155, 1160, 1264, 1266, 1273, 1281, 1301, 1312, 1313, 1389, 1404, 1421, 1441, 1888, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "25": [163, 798, 852, 853, 859, 860, 1128, 1132, 1133, 1890, 1894, 1895, 1897, 1901, 1904, 1905], "4": [163, 734, 797, 1088, 1128, 1131, 1132, 1160, 1264, 1265, 1269, 1271, 1272, 1280, 1292, 1293, 1298, 1302, 1398, 1671, 1709, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "2": [186, 276, 409, 410, 451, 452, 507, 525, 526, 569, 750, 751, 754, 761, 767, 768, 790, 796, 801, 807, 809, 810, 819, 850, 852, 859, 915, 1005, 1013, 1015, 1030, 1036, 1041, 1048, 1057, 1061, 1069, 1073, 1075, 1088, 1110, 1120, 1121, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1261, 1264, 1265, 1266, 1273, 1281, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1320, 1327, 1346, 1365, 1375, 1382, 1389, 1390, 1397, 1403, 1416, 1417, 1421, 1439, 1441, 1445, 1446, 1447, 1448, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1469, 1470, 1471, 1472, 1473, 1474, 1477, 1478, 1479, 1480, 1485, 1486, 1487, 1488, 1671, 1709, 1714, 1724, 1734, 1744, 1795, 1815, 1816, 1879, 1889, 1891, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908], "chang": [195, 617, 618, 1005, 1013, 1026, 1031, 1048, 1053, 1069, 1089, 1105, 1112, 1126, 1130, 1160, 1261, 1271, 1272, 1273, 1280, 1281, 1283, 1290, 1298, 1302, 1308, 1309, 1310, 1311, 1312, 1313, 1315, 1328, 1345, 1372, 1374, 1379, 1381, 1396, 1398, 1401, 1403, 1405, 1406, 1414, 1879, 1890, 1891, 1892, 1895, 1899], "also": [195, 423, 915, 1013, 1019, 1069, 1070, 1110, 1125, 1136, 1140, 1141, 1147, 1160, 1161, 1280, 1292, 1297, 1310, 1311, 1319, 1331, 1348, 1349, 1368, 1376, 1377, 1383, 1384, 1390, 1391, 1392, 1398, 1399, 1403, 1405, 1417, 1421, 1814, 1884, 1890, 1891, 1894, 1895, 1897, 1900, 1901, 1902, 1906, 1908], "made": [195, 1006, 1269], "field": [195, 898, 922, 941, 975, 976, 977, 978, 979, 980, 1005, 1136, 1302, 1894, 1896, 1900, 1904, 1907, 1908], "code": [195, 302, 823, 1005, 1121, 1160, 1284, 1298, 1399, 1887, 1890, 1891, 1892], "can": [195, 416, 540, 564, 752, 823, 1005, 1006, 1010, 1013, 1022, 1038, 1048, 1069, 1112, 1120, 1121, 1123, 1125, 1129, 1130, 1131, 1133, 1135, 1136, 1137, 1140, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1165, 1187, 1225, 1264, 1265, 1266, 1269, 1271, 1272, 1280, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1309, 1310, 1311, 1312, 1313, 1315, 1330, 1344, 1350, 1364, 1365, 1376, 1377, 1378, 1383, 1384, 1385, 1389, 1390, 1391, 1396, 1397, 1398, 1399, 1401, 1405, 1406, 1407, 1408, 1412, 1417, 1547, 1617, 1671, 1709, 1877, 1878, 1879, 1880, 1887, 1888, 1890, 1892, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "follow": [195, 461, 729, 803, 1013, 1017, 1048, 1069, 1110, 1120, 1121, 1139, 1141, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1218, 1264, 1265, 1266, 1267, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1318, 1344, 1365, 1374, 1381, 1389, 1390, 1391, 1398, 1405, 1406, 1416, 1417, 1418, 1421, 1671, 1709, 1879, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1905, 1906, 1907, 1908], "swap": 195, "opposit": [195, 1136, 1409, 1410, 1893], "endian": 195, "littl": 195, "big": [195, 1160], "nativ": [195, 1005, 1090, 1121, 1269], "ignor": [195, 1112, 1264, 1265, 1266, 1269, 1291, 1292, 1293, 1297, 1309, 1348, 1349, 1395, 1396, 1405, 1406, 1412], "abov": [195, 976, 977, 979, 980, 1005, 1121, 1136, 1139, 1160, 1163, 1164, 1181, 1226, 1273, 1284, 1302, 1303, 1327, 1358, 1368, 1376, 1383, 1390, 1405, 1406, 1891, 1892, 1893, 1897, 1901, 1902, 1906, 1908], "new_dtyp": 195, "gw": [227, 283, 417, 1874, 1891], "giga": [227, 1874], "watt": [227, 279, 283, 296, 299, 301, 936, 1874], "ityp": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 1874], "__index__": [228, 241], "convert": [228, 241, 1005, 1090, 1153, 1154, 1167, 1187, 1299, 1311, 1331, 1338, 1398, 1671, 1709, 1795, 1904], "an": [228, 241, 368, 409, 582, 583, 684, 685, 688, 689, 692, 693, 696, 697, 711, 803, 908, 942, 943, 944, 945, 946, 947, 948, 966, 973, 976, 979, 989, 1005, 1006, 1008, 1013, 1024, 1031, 1032, 1048, 1058, 1062, 1069, 1074, 1084, 1085, 1090, 1091, 1103, 1110, 1111, 1113, 1116, 1120, 1121, 1123, 1126, 1128, 1131, 1132, 1135, 1136, 1137, 1139, 1140, 1147, 1149, 1153, 1154, 1155, 1160, 1161, 1162, 1163, 1164, 1167, 1168, 1187, 1207, 1216, 1217, 1226, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1276, 1278, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1318, 1319, 1329, 1344, 1349, 1350, 1358, 1363, 1364, 1365, 1374, 1377, 1378, 1381, 1384, 1385, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1405, 1406, 1407, 1408, 1409, 1410, 1414, 1417, 1418, 1421, 1439, 1538, 1542, 1582, 1615, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1870, 1875, 1878, 1883, 1890, 1894, 1896, 1902, 1903, 1906, 1908], "suitabl": [228, 241, 1131, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "bit_count": [228, 274], "bit": [228, 274, 1897], "absolut": [228, 274, 642, 645, 1365, 1833, 1863, 1879, 1886, 1890, 1908], "analog": [228, 274, 1136], "builtin": [228, 274, 1060, 1441], "popcount": [228, 274], "c": [228, 274, 1005, 1006, 1010, 1017, 1048, 1062, 1110, 1120, 1128, 1130, 1131, 1132, 1136, 1145, 1147, 1155, 1160, 1261, 1264, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1314, 1318, 1320, 1346, 1390, 1401, 1404, 1407, 1421, 1441, 1671, 1709, 1892, 1908], "numer": [228, 277, 700, 790, 796, 1005, 1136, 1137, 1297, 1299, 1302, 1309, 1372, 1379, 1401, 1404, 1405, 1406, 1490, 1511, 1513, 1520, 1527, 1531, 1535, 1538, 1570, 1582, 1596, 1605, 1607, 1613, 1615, 1754, 1763, 1779, 1879], "itself": [228, 277, 1005, 1153, 1154, 1155, 1188, 1301, 1303], "int64": [274, 276, 1894, 1897, 1903, 1904], "127": [274, 1906], "7": [274, 1006, 1135, 1136, 1160, 1273, 1297, 1671, 1709, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "uint32": 276, "5": [276, 797, 852, 853, 1005, 1048, 1121, 1123, 1128, 1129, 1132, 1133, 1134, 1136, 1138, 1139, 1141, 1151, 1152, 1269, 1271, 1273, 1298, 1302, 1314, 1318, 1327, 1375, 1382, 1401, 1403, 1405, 1406, 1416, 1417, 1671, 1709, 1821, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "kappa": [278, 1425, 1427, 1429, 1433, 1434, 1437, 1874, 1885], "41": [278, 1425, 1427, 1429, 1433, 1434, 1437, 1874, 1885, 1894, 1897], "van": [278, 1425, 1427, 1429, 1433, 1434, 1437, 1874], "karman": [278, 1425, 1427, 1429, 1433, 1434, 1437, 1874], "mw": [279, 283, 417, 445, 446, 1874, 1895, 1899, 1901, 1906, 1907], "mega": [279, 1874], "pop": [282, 1547, 1557, 1585, 1626, 1761, 1774, 1792, 1874], "popul": [282, 1490, 1495, 1499, 1511, 1513, 1516, 1520, 1524, 1531, 1538, 1546, 1547, 1549, 1553, 1556, 1557, 1582, 1588, 1589, 1596, 1599, 1605, 1607, 1610, 1613, 1615, 1629, 1632, 1634, 1637, 1639, 1642, 1644, 1647, 1650, 1653, 1655, 1658, 1660, 1663, 1666, 1669, 1672, 1675, 1679, 1682, 1685, 1688, 1691, 1694, 1697, 1700, 1703, 1706, 1710, 1713, 1720, 1723, 1730, 1733, 1740, 1743, 1754, 1763, 1779, 1874, 1880, 1895, 1897], "p_unit": [283, 416, 417, 657, 1874, 1890], "1000000000": [283, 1874], "1000000": [283, 1874], "tw": [283, 296, 1874], "1000000000000": [283, 1874], "kw": [283, 301, 416, 417, 605, 606, 657, 936, 1874], "power": [283, 416, 417, 521, 605, 606, 653, 655, 660, 661, 666, 667, 672, 673, 678, 679, 875, 876, 893, 894, 922, 924, 929, 930, 936, 986, 988, 1005, 1131, 1147, 1155, 1264, 1266, 1282, 1301, 1389, 1605, 1824, 1844, 1847, 1874, 1879, 1880, 1883, 1886, 1889, 1890, 1891, 1897, 1899, 1900, 1902, 1906, 1907, 1908], "rel": [283, 1041, 1121, 1137, 1225, 1265, 1271, 1273, 1297, 1302, 1310, 1311, 1318, 1834, 1864, 1874, 1886], "rpoint": [284, 285, 393, 395, 562, 576, 582, 589, 1874], "rotor_point": [284, 285, 1874, 1898], "rweight": [286, 1874], "rotor_weight": [286, 1874], "states_sel": [288, 409, 411, 412, 461, 463, 469, 472, 489, 491, 498, 502, 505, 975, 976, 977, 978, 979, 980, 1874, 1903], "state_point": [289, 368, 1874], "state_source_turbin": [290, 1874], "per": [290, 395, 397, 461, 578, 582, 583, 589, 590, 749, 922, 931, 933, 934, 935, 936, 939, 940, 1120, 1137, 1139, 1147, 1155, 1265, 1282, 1294, 1301, 1302, 1389, 1399, 1763, 1798, 1874, 1878, 1902], "state_turbin": [291, 368, 1874], "tmodel": [292, 1874, 1894, 1903, 1905], "tmodel_sel": [293, 1874, 1894, 1903, 1905], "tname": [294, 1874, 1894, 1897, 1902, 1903, 1904], "terra": [296, 1874], "valid": [297, 660, 661, 666, 667, 678, 679, 1006, 1008, 1121, 1128, 1131, 1132, 1160, 1161, 1261, 1297, 1298, 1346, 1368, 1403, 1607, 1608, 1666, 1667, 1668, 1669, 1670, 1710, 1711, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1874, 1882, 1891, 1906], "xyh": [300, 913, 919, 921, 1886, 1903], "vector": [300, 451, 452, 943, 944, 945, 946, 947, 948, 1005, 1110, 1120, 1136, 1139, 1141, 1147, 1155, 1282, 1291, 1293, 1294, 1301, 1302, 1303, 1348, 1349, 1389, 1398, 1416, 1417, 1421, 1473, 1474, 1547, 1557, 1588, 1671, 1709, 1817, 1818, 1819, 1820, 1857, 1880, 1884, 1886, 1891, 1897, 1905, 1906, 1907], "x": [300, 319, 396, 423, 424, 426, 447, 451, 453, 454, 516, 517, 532, 577, 582, 585, 592, 629, 630, 711, 714, 717, 720, 722, 725, 729, 733, 734, 736, 739, 742, 745, 749, 750, 751, 752, 754, 759, 760, 761, 764, 766, 767, 768, 797, 800, 801, 803, 806, 807, 809, 812, 819, 823, 839, 842, 846, 849, 850, 852, 855, 859, 862, 915, 916, 942, 943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 988, 989, 1005, 1013, 1017, 1032, 1035, 1039, 1040, 1043, 1048, 1058, 1060, 1063, 1064, 1065, 1069, 1074, 1076, 1090, 1091, 1110, 1120, 1121, 1123, 1125, 1126, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1147, 1153, 1155, 1156, 1160, 1162, 1163, 1164, 1166, 1168, 1176, 1216, 1225, 1233, 1234, 1235, 1236, 1239, 1247, 1248, 1249, 1261, 1264, 1265, 1266, 1269, 1271, 1274, 1277, 1280, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1315, 1318, 1320, 1325, 1326, 1346, 1372, 1373, 1374, 1375, 1377, 1384, 1387, 1389, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1418, 1420, 1421, 1423, 1439, 1442, 1443, 1445, 1446, 1449, 1451, 1453, 1455, 1456, 1459, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1473, 1475, 1477, 1478, 1481, 1483, 1485, 1486, 1671, 1709, 1814, 1819, 1820, 1857, 1861, 1879, 1884, 1886, 1887, 1891, 1893, 1894, 1895, 1896, 1897, 1899, 1903, 1904, 1905, 1906, 1907, 1908], "y": [300, 319, 396, 447, 451, 453, 454, 516, 517, 577, 585, 592, 629, 630, 734, 915, 916, 942, 943, 945, 946, 948, 975, 976, 977, 978, 979, 980, 988, 989, 1005, 1013, 1035, 1048, 1051, 1069, 1110, 1121, 1123, 1125, 1126, 1128, 1129, 1131, 1133, 1136, 1137, 1140, 1147, 1154, 1155, 1156, 1160, 1162, 1163, 1164, 1166, 1169, 1176, 1217, 1225, 1233, 1234, 1235, 1247, 1248, 1249, 1250, 1253, 1261, 1264, 1266, 1267, 1269, 1271, 1275, 1277, 1280, 1281, 1283, 1291, 1292, 1293, 1298, 1299, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1315, 1318, 1320, 1325, 1326, 1368, 1377, 1379, 1380, 1381, 1382, 1384, 1388, 1391, 1392, 1394, 1395, 1396, 1397, 1398, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1412, 1420, 1421, 1423, 1442, 1443, 1445, 1446, 1449, 1451, 1453, 1455, 1456, 1459, 1461, 1462, 1463, 1466, 1468, 1469, 1470, 1473, 1475, 1477, 1478, 1481, 1483, 1485, 1486, 1671, 1709, 1819, 1820, 1857, 1862, 1886, 1893, 1894, 1895, 1896, 1897, 1903, 1904, 1905, 1906], "kilo": [301, 1874], "meant": [302, 1233, 1234, 1235, 1247, 1248, 1249], "call": [302, 327, 329, 339, 353, 354, 386, 387, 605, 1005, 1013, 1020, 1031, 1038, 1048, 1069, 1078, 1084, 1085, 1087, 1088, 1099, 1100, 1103, 1107, 1112, 1120, 1122, 1126, 1130, 1135, 1136, 1147, 1155, 1156, 1159, 1160, 1161, 1167, 1187, 1225, 1261, 1264, 1266, 1269, 1276, 1280, 1281, 1282, 1283, 1290, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1309, 1312, 1313, 1319, 1321, 1338, 1346, 1363, 1389, 1390, 1391, 1394, 1395, 1396, 1405, 1406, 1407, 1408, 1409, 1410, 1414, 1538, 1547, 1578, 1579, 1582, 1586, 1587, 1615, 1671, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1775, 1776, 1779, 1875, 1879, 1890, 1892, 1894, 1900, 1901, 1904, 1905, 1908], "top": [302, 551, 764, 1005, 1120, 1121, 1128, 1131, 1132, 1136, 1137, 1147, 1155, 1160, 1233, 1234, 1247, 1248, 1253, 1261, 1265, 1269, 1277, 1282, 1284, 1294, 1298, 1299, 1301, 1310, 1311, 1314, 1318, 1352, 1368, 1380, 1381, 1390, 1401, 1403, 1406, 1409, 1410, 1416, 1417, 1420, 1423, 1869, 1877, 1879, 1887, 1894, 1908], "ha": [308, 309, 315, 345, 370, 371, 405, 457, 467, 477, 496, 504, 524, 567, 603, 626, 664, 670, 676, 682, 1005, 1013, 1029, 1048, 1056, 1069, 1072, 1111, 1126, 1131, 1135, 1136, 1139, 1141, 1157, 1163, 1164, 1167, 1264, 1265, 1266, 1269, 1271, 1276, 1283, 1291, 1292, 1293, 1295, 1302, 1310, 1311, 1349, 1391, 1394, 1396, 1401, 1416, 1417, 1501, 1592, 1763, 1818, 1819, 1870, 1872, 1890, 1891, 1893, 1896, 1899, 1901, 1902, 1903, 1905, 1906], "two": [308, 309, 315, 345, 371, 405, 451, 457, 467, 477, 496, 504, 567, 603, 626, 633, 655, 664, 670, 672, 676, 678, 682, 1005, 1013, 1017, 1022, 1025, 1048, 1060, 1069, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1162, 1163, 1164, 1261, 1264, 1266, 1269, 1271, 1272, 1273, 1282, 1283, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1314, 1316, 1345, 1359, 1389, 1390, 1399, 1401, 1439, 1592, 1671, 1709, 1815, 1816, 1879, 1883, 1884, 1890, 1896, 1897, 1900, 1901, 1902, 1903, 1906, 1908], "data_var": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "name_str": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "dim_tupl": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "data_ndarrai": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "coord": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1005, 1156, 1270, 1394, 1401, 1416, 1592, 1671, 1709], "dim_name_str": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "dim_arrai": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1592], "deriv": [312, 380, 400, 415, 418, 422, 429, 434, 790, 796, 952, 1005, 1438, 1490, 1493, 1511, 1513, 1520, 1531, 1547, 1557, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1884, 1890, 1893], "axialinductionmodel": [317, 318, 519, 764, 765, 777, 778, 784, 785, 790, 791, 809, 810, 823, 838, 852, 853, 859, 860, 1875, 1890], "axial": [317, 532, 1875, 1879, 1890, 1893], "induct": [317, 318, 519, 764, 765, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 809, 810, 823, 838, 852, 853, 859, 860, 1875, 1879, 1889, 1890, 1894], "ct2a": [317, 318, 1879], "ct": [317, 318, 521, 605, 638, 639, 653, 655, 656, 660, 661, 666, 667, 672, 673, 678, 679, 766, 767, 797, 798, 800, 801, 806, 807, 817, 849, 850, 986, 988, 998, 1000, 1837, 1867, 1868, 1879, 1883, 1886, 1890, 1894, 1895, 1901, 1903, 1904, 1905, 1908], "model_book": [319, 516, 517, 518, 519, 520, 521, 522, 523, 524, 1875, 1884], "meta": [319, 1875, 1894, 1905], "usual": [319, 1161, 1269, 1283, 1345, 1397, 1900], "same": [319, 320, 322, 420, 686, 690, 694, 698, 702, 705, 709, 929, 1048, 1100, 1121, 1130, 1136, 1137, 1140, 1142, 1160, 1161, 1264, 1265, 1267, 1269, 1273, 1291, 1292, 1293, 1298, 1302, 1309, 1320, 1345, 1346, 1358, 1391, 1396, 1398, 1399, 1405, 1406, 1407, 1418, 1440, 1441, 1617, 1671, 1709, 1816, 1890, 1893, 1906, 1908], "subset": [319, 320, 322, 329, 361, 454, 461, 463, 469, 489, 491, 498, 519, 524, 1145, 1160, 1875, 1879, 1890, 1898], "loop_dim": [319, 320, 327, 329], "loop": [319, 320, 329, 1439, 1890, 1893, 1903, 1905], "states_i0": [319, 326], "from_point": [319, 322], "datacalcmodel": [327, 328, 329, 349, 383, 1875, 1890], "thei": [327, 395, 409, 410, 423, 433, 775, 781, 787, 793, 802, 808, 813, 820, 851, 856, 864, 1110, 1126, 1136, 1139, 1155, 1160, 1163, 1164, 1187, 1281, 1283, 1291, 1293, 1298, 1302, 1309, 1312, 1313, 1348, 1374, 1381, 1398, 1405, 1406, 1421, 1796, 1879, 1887, 1890, 1895, 1896, 1897, 1898, 1900, 1906], "depend": [327, 397, 525, 532, 564, 565, 578, 589, 661, 667, 672, 673, 678, 679, 749, 752, 759, 760, 764, 767, 797, 801, 803, 807, 809, 812, 846, 850, 852, 855, 859, 862, 1013, 1038, 1039, 1040, 1043, 1048, 1063, 1064, 1065, 1069, 1076, 1078, 1121, 1122, 1182, 1269, 1280, 1281, 1292, 1299, 1302, 1303, 1312, 1313, 1376, 1377, 1383, 1384, 1390, 1395, 1396, 1490, 1509, 1510, 1511, 1513, 1519, 1520, 1530, 1531, 1596, 1597, 1604, 1605, 1606, 1607, 1613, 1614, 1617, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1707, 1824, 1847, 1879, 1886, 1887, 1890, 1892, 1896, 1899, 1900, 1906, 1908, 1909], "individu": [327, 409, 416, 672, 678, 777, 784, 790, 796, 1136, 1137, 1139, 1149, 1265, 1269, 1283, 1292, 1395, 1401, 1490, 1494, 1495, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1548, 1552, 1553, 1582, 1596, 1598, 1599, 1605, 1607, 1609, 1610, 1613, 1615, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1657, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1875, 1879, 1894, 1897, 1900, 1903], "out_core_var": 329, "initial_result": 329, "sel": [329, 454, 1615, 1617], "isel": [329, 454], "typic": [329, 353, 386, 403, 1134, 1138, 1151, 1152, 1269, 1302, 1329, 1390, 1397, 1557], "fc": [329, 368, 1005, 1120, 1123, 1129, 1133, 1136, 1137, 1140, 1147, 1155, 1163, 1164, 1264, 1271, 1282, 1291, 1293, 1294, 1301, 1302, 1314, 1389, 1607, 1608, 1893, 1894, 1896, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "extendedst": [330, 331, 332, 333, 334, 335, 336, 337, 338, 1875, 1890], "extend": [330, 1005, 1020, 1107, 1139, 1141, 1163, 1164, 1291, 1293, 1396, 1405, 1406, 1412, 1416, 1417, 1872, 1873, 1875, 1888, 1891], "pmodel": 330, "append": [330, 332, 354, 356, 387, 389, 1903], "analys": [339, 1875], "handl": [339, 1005, 1069, 1122, 1171, 1174, 1182, 1200, 1293, 1315, 1318, 1328, 1875, 1890], "turbine_typ": [339, 519, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 986, 988, 1893, 1894, 1895, 1898, 1902, 1904, 1906], "turbinetyp": [339, 416, 417, 418, 519, 657, 660, 661, 666, 667, 672, 673, 678, 679, 1875, 1879], "turbine_model_nam": 339, "found": [339, 367, 523, 743, 817, 996, 1292, 1391, 1878, 1880, 1888, 1898, 1904, 1906], "turbine_model_sel": 339, "n_model": 339, "pre_rotor_model": 339, "farmdatamodellist": [339, 354, 355, 356, 357, 358, 359, 360, 1875], "post_rotor_model": 339, "par": [339, 340, 509, 823, 831, 844, 968, 969, 989], "respecitv": 339, "set_par": [339, 347, 509], "model_nam": [339, 347, 509], "init_par": [339, 347, 509], "final_par": [339, 347, 509], "collect_model": [339, 342, 509], "analyz": [339, 342, 509, 1441], "gather": [339, 342, 509], "st_sel": [339, 341, 413, 414, 416, 509, 596, 597, 598, 600, 602, 605, 607, 611, 613, 617, 619, 622, 625, 629, 631, 633, 635, 638, 640, 642, 643, 645, 646, 648, 651, 653, 655, 657, 658, 660, 662, 666, 668, 672, 674, 678, 680], "respect": [340, 451, 589, 590, 1130, 1267, 1283, 1293, 1299, 1303, 1372, 1374, 1376, 1379, 1381, 1383, 1398, 1399, 1403, 1418, 1671, 1709, 1895, 1906, 1907, 1908], "post": [341, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1163, 1164, 1261, 1282, 1294, 1298, 1299, 1301, 1390, 1396, 1891, 1894, 1900, 1903, 1905], "Such": [345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1163, 1164, 1592, 1895], "reason": [345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 1022, 1121, 1281, 1293, 1299, 1302, 1312, 1313, 1331, 1592], "here": [345, 371, 405, 457, 467, 477, 496, 504, 567, 603, 626, 664, 670, 676, 682, 742, 743, 797, 798, 809, 810, 816, 817, 846, 847, 1137, 1281, 1283, 1298, 1302, 1312, 1313, 1376, 1383, 1396, 1592, 1877, 1878, 1880, 1890, 1891, 1893, 1894, 1895, 1897, 1899, 1901, 1902, 1904, 1906, 1907, 1908], "automat": [345, 371, 393, 394, 395, 405, 457, 467, 477, 496, 504, 567, 583, 590, 603, 626, 664, 670, 676, 682, 915, 936, 975, 976, 977, 978, 979, 980, 1069, 1088, 1122, 1126, 1130, 1135, 1139, 1141, 1265, 1271, 1272, 1280, 1281, 1312, 1313, 1368, 1405, 1406, 1407, 1416, 1417, 1592, 1671, 1709, 1890, 1906], "befor": [349, 350, 432, 447, 623, 756, 774, 780, 975, 976, 977, 978, 979, 980, 1069, 1070, 1085, 1099, 1122, 1147, 1155, 1160, 1264, 1266, 1269, 1282, 1283, 1291, 1292, 1293, 1299, 1301, 1309, 1374, 1375, 1377, 1382, 1384, 1389, 1403, 1405, 1406, 1578, 1579, 1586, 1587, 1607, 1608, 1617, 1775, 1776, 1893, 1894, 1897, 1903], "By": [354, 387, 1121, 1160, 1163, 1164, 1264, 1266, 1269, 1291, 1292, 1293, 1297, 1298, 1309, 1376, 1383, 1401, 1405, 1406, 1557, 1894, 1908], "togeth": [354, 387, 1013, 1017, 1025, 1048, 1069, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406, 1908], "common": [354, 387, 742, 816, 823, 839, 1024, 1042, 1269, 1320, 1396, 1671, 1709, 1887], "insert": [354, 358, 409, 412, 1044, 1066, 1818, 1819], "farmmodel": [361, 510, 519, 1875, 1879], "oper": [361, 436, 869, 873, 877, 881, 885, 890, 895, 900, 905, 922, 938, 939, 940, 1005, 1125, 1156, 1159, 1280, 1350, 1364, 1377, 1384, 1394, 1875, 1901], "contrast": [361, 1359, 1439, 1875], "turbinemodel": [361, 411, 412, 413, 414, 415, 416, 510, 511, 519, 596, 597, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 1875, 1879], "allow": [361, 507, 1120, 1121, 1147, 1155, 1282, 1291, 1293, 1294, 1301, 1346, 1389, 1398, 1875, 1890, 1897, 1905], "applic": [361, 1397, 1494, 1495, 1498, 1499, 1515, 1516, 1523, 1524, 1538, 1545, 1546, 1551, 1555, 1556, 1582, 1598, 1599, 1600, 1609, 1610, 1615, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1662, 1663, 1668, 1669, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1712, 1713, 1722, 1723, 1732, 1733, 1742, 1743, 1754, 1755, 1763, 1765, 1779, 1786, 1875, 1890, 1891, 1897, 1903], "abc": [362, 1005, 1006, 1010, 1875], "error": [367, 368, 443, 453, 803, 990, 996, 1137, 1160, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1374, 1381, 1405, 1406, 1906], "upcast": 368, "accept_non": 368, "accept_nan": 368, "combin": [368, 867, 868, 871, 872, 875, 876, 879, 880, 1298, 1309, 1890, 1893, 1894, 1903, 1908], "m": [368, 454, 461, 672, 678, 729, 730, 942, 943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1269, 1271, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1316, 1375, 1381, 1382, 1390, 1391, 1399, 1401, 1404, 1513, 1514, 1671, 1709, 1825, 1826, 1827, 1832, 1838, 1840, 1845, 1850, 1851, 1852, 1860, 1861, 1866, 1886, 1892, 1893, 1894, 1895, 1896, 1899, 1904, 1905, 1906, 1907], "f": [368, 596, 597, 949, 950, 1005, 1048, 1062, 1120, 1147, 1155, 1282, 1294, 1301, 1350, 1364, 1389, 1439, 1671, 1709, 1893, 1894, 1899, 1901, 1903, 1905, 1906, 1907, 1908], "p": [368, 605, 660, 661, 667, 673, 679, 954, 988, 998, 1000, 1005, 1118, 1269, 1292, 1298, 1441, 1671, 1709, 1836, 1839, 1847, 1867, 1868, 1886, 1890, 1891, 1894, 1895, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "data_prio": 368, "search": [368, 453, 454, 461, 463, 519, 524, 649, 742, 743, 797, 798, 809, 810, 816, 817, 846, 847, 1438, 1884, 1890, 1898, 1899, 1904, 1906], "throw": 368, "been": [370, 1005, 1013, 1025, 1048, 1069, 1111, 1126, 1136, 1262, 1265, 1269, 1276, 1302, 1308, 1501, 1870, 1872, 1890, 1891, 1903], "quantiti": [375, 393, 1136, 1302, 1900], "new_wake_delta": [375, 377, 378, 381, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 563], "zero": [375, 381, 525, 530, 532, 538, 540, 546, 548, 551, 556, 558, 563, 649, 750, 751, 754, 760, 761, 766, 768, 800, 806, 812, 819, 849, 855, 862, 964, 966, 1005, 1125, 1126, 1147, 1155, 1284, 1301, 1363, 1389, 1390, 1391, 1441, 1671, 1709, 1797, 1802, 1814, 1842, 1884, 1886, 1893, 1894, 1904], "evaluate_result": [375, 378, 525, 528, 532, 536, 540, 544, 548, 551, 554, 558, 561], "pwake_typ": [375, 380, 525, 532, 540, 548, 551, 558], "wake_delta": [377, 378, 381, 430, 431, 432, 433, 436, 437, 525, 527, 528, 530, 532, 535, 536, 538, 540, 543, 544, 546, 548, 550, 551, 553, 554, 556, 558, 560, 561, 563, 749, 752, 755, 756, 759, 762, 764, 771, 773, 774, 775, 777, 779, 780, 781, 784, 786, 787, 790, 792, 793, 796, 797, 802, 803, 808, 809, 813, 816, 820, 846, 851, 852, 856, 859, 864, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906], "states_turbin": [378, 395, 397, 528, 536, 544, 554, 561, 578], "amb_r": [378, 528, 536, 544, 554, 561], "place": [378, 528, 536, 544, 554, 561, 943, 944, 945, 946, 947, 948, 1121, 1135, 1163, 1164, 1233, 1234, 1235, 1247, 1248, 1249, 1269, 1278, 1283, 1284, 1297, 1390, 1395, 1396, 1397, 1399, 1401, 1405, 1406, 1617, 1763, 1779, 1881, 1896, 1897, 1901], "calc_var": [393, 394, 576, 582, 583, 589, 590, 611, 612], "Their": [393, 394, 583, 590, 1137, 1269], "ad": [393, 394, 433, 435, 436, 583, 590, 601, 775, 781, 787, 793, 802, 808, 813, 820, 851, 856, 864, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 922, 941, 1005, 1110, 1121, 1126, 1161, 1262, 1283, 1298, 1306, 1329, 1344, 1346, 1375, 1382, 1397, 1406, 1421, 1557, 1617, 1878, 1890, 1892, 1894, 1897, 1898, 1902, 1903, 1904, 1906, 1907, 1908], "n_rotor_point": [393, 399, 576, 580, 582, 587, 589, 594], "rotor_point_weight": [393, 402, 576, 581, 582, 588, 589, 595], "design_point": [393, 396, 576, 577, 582, 585, 589, 592], "design": [393, 396, 398, 576, 577, 579, 582, 585, 589, 592, 966, 1069, 1147, 1155, 1292, 1301, 1378, 1385, 1389], "get_rotor_point": [393, 398, 576, 579, 582, 589], "eval_rpoint_result": [393, 397, 576, 578, 582, 589], "rpoint_result": [393, 397, 576, 578, 582, 589], "rmodel_typ": [393, 400, 576, 582, 589], "store_rpoint": 395, "store_rweight": 395, "store_amb_r": 395, "n_rpoint": [395, 397, 398, 399, 402, 578, 579, 580, 581, 587, 588, 594, 595], "reult": 395, "come": [395, 1136, 1272, 1398, 1895, 1902, 1906], "formul": [396, 577, 585, 592, 1902], "plane": [396, 577, 585, 592, 771, 942, 943, 944, 945, 946, 947, 948, 973, 975, 976, 977, 978, 979, 980, 989, 1302, 1473, 1884, 1887, 1890, 1893, 1903], "z": [396, 577, 585, 592, 700, 701, 734, 944, 945, 947, 948, 975, 976, 977, 978, 979, 980, 1005, 1125, 1187, 1280, 1284, 1348, 1377, 1384, 1390, 1405, 1406, 1894], "coordin": [396, 423, 424, 426, 427, 431, 453, 454, 577, 585, 592, 711, 714, 715, 717, 720, 721, 722, 725, 726, 729, 733, 735, 736, 739, 740, 742, 745, 746, 755, 773, 779, 786, 792, 913, 914, 975, 976, 977, 978, 979, 980, 1005, 1013, 1019, 1069, 1070, 1106, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1150, 1156, 1160, 1163, 1164, 1166, 1225, 1233, 1234, 1235, 1239, 1245, 1247, 1248, 1249, 1253, 1259, 1264, 1269, 1271, 1273, 1291, 1292, 1293, 1297, 1298, 1299, 1302, 1303, 1318, 1320, 1345, 1374, 1381, 1394, 1398, 1401, 1416, 1596, 1671, 1709, 1714, 1724, 1734, 1744, 1795, 1857, 1861, 1862, 1886, 1894, 1895, 1896, 1897, 1900, 1903, 1904, 1905], "radiu": [396, 577, 585, 592, 764, 767, 797, 801, 803, 807, 846, 850, 1005, 1048, 1051, 1069, 1078, 1136, 1149, 1211, 1269, 1297, 1350, 1351, 1459, 1460, 1490, 1491, 1815, 1816], "n_rotor_axi": [396, 577, 585, 592], "n_rotor_sid": [396, 577, 585, 592], "n_rotor_up": [396, 577, 585, 592], "dpoint": [396, 577, 585, 592], "copy_to_ambi": [397, 578], "either": [397, 461, 463, 489, 491, 564, 565, 578, 633, 634, 968, 969, 989, 990, 1122, 1125, 1131, 1136, 1137, 1140, 1141, 1176, 1189, 1265, 1269, 1291, 1303, 1309, 1315, 1318, 1405, 1406, 1407, 1408, 1412, 1416, 1417, 1513, 1514, 1617, 1884, 1886, 1902, 1905], "In": [397, 578, 1006, 1022, 1040, 1043, 1044, 1064, 1065, 1066, 1076, 1100, 1121, 1122, 1126, 1136, 1139, 1160, 1264, 1265, 1266, 1269, 1284, 1291, 1292, 1293, 1298, 1302, 1309, 1359, 1377, 1378, 1384, 1385, 1390, 1405, 1406, 1407, 1439, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "latter": [397, 532, 578, 1293, 1795, 1890, 1897, 1901, 1902, 1906, 1908], "case": [397, 453, 508, 578, 936, 964, 966, 983, 988, 996, 1023, 1025, 1044, 1066, 1085, 1100, 1121, 1122, 1126, 1130, 1134, 1136, 1138, 1139, 1151, 1152, 1160, 1167, 1187, 1239, 1253, 1264, 1265, 1266, 1269, 1291, 1292, 1293, 1298, 1302, 1303, 1309, 1315, 1320, 1331, 1374, 1377, 1378, 1381, 1384, 1385, 1390, 1391, 1396, 1397, 1405, 1406, 1407, 1489, 1878, 1890, 1894, 1897, 1901, 1902, 1903, 1904, 1905, 1906, 1908], "expect": [397, 445, 446, 578, 618, 633, 1139, 1264, 1265, 1269, 1397, 1896, 1899], "els": [397, 578, 964, 966, 1168, 1169], "If": [397, 523, 578, 649, 742, 743, 797, 798, 809, 810, 816, 817, 846, 847, 960, 961, 964, 966, 1006, 1008, 1010, 1013, 1019, 1022, 1037, 1048, 1069, 1070, 1084, 1103, 1110, 1111, 1120, 1121, 1122, 1123, 1125, 1126, 1130, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1151, 1152, 1153, 1154, 1155, 1160, 1161, 1162, 1163, 1164, 1207, 1225, 1261, 1264, 1265, 1266, 1267, 1269, 1273, 1281, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1315, 1318, 1319, 1320, 1331, 1344, 1346, 1348, 1349, 1358, 1359, 1368, 1372, 1373, 1375, 1377, 1378, 1379, 1380, 1382, 1384, 1385, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1404, 1405, 1406, 1407, 1408, 1412, 1416, 1417, 1418, 1421, 1439, 1583, 1671, 1707, 1709, 1795, 1901, 1906], "describ": [403, 1121, 1139, 1163, 1164, 1206, 1283, 1298, 1358, 1878, 1892, 1895, 1896, 1904], "meteorolog": [403, 1900], "speed": [403, 461, 474, 475, 481, 482, 605, 606, 638, 639, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 684, 688, 692, 696, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 988, 1134, 1136, 1138, 1151, 1152, 1286, 1292, 1293, 1319, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1818, 1819, 1825, 1826, 1827, 1832, 1850, 1851, 1852, 1860, 1878, 1879, 1885, 1886, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1902, 1904, 1906, 1907, 1908], "turbul": [403, 678, 797, 852, 853, 1830, 1856, 1879, 1886, 1887, 1890, 1896, 1899, 1900, 1906, 1907, 1908], "intens": [403, 678, 1830, 1856, 1879, 1886, 1887, 1890, 1896, 1900, 1906, 1907, 1908], "air": [403, 474, 475, 481, 482, 654, 656, 660, 661, 666, 667, 672, 678, 679, 988, 1828, 1853, 1879, 1886, 1890, 1896, 1899], "densiti": [403, 474, 475, 481, 482, 654, 656, 672, 988, 1005, 1139, 1147, 1155, 1264, 1265, 1266, 1282, 1301, 1389, 1398, 1416, 1417, 1644, 1645, 1672, 1828, 1853, 1879, 1882, 1886, 1890, 1896, 1899], "mere": 409, "defin": [409, 711, 1005, 1088, 1121, 1122, 1131, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1162, 1163, 1164, 1199, 1261, 1264, 1265, 1266, 1269, 1291, 1292, 1293, 1298, 1301, 1302, 1308, 1309, 1318, 1320, 1328, 1344, 1346, 1359, 1389, 1395, 1396, 1399, 1405, 1406, 1407, 1408, 1417, 1421, 1671, 1709, 1710, 1720, 1879, 1882, 1886, 1893, 1897, 1900, 1901, 1902, 1905, 1908], "basic": [409, 445, 446, 509, 532, 629, 1298, 1876, 1879, 1897, 1899, 1903], "xy": [409, 410, 942, 943, 946, 973, 975, 978, 1005, 1013, 1043, 1121, 1123, 1129, 1133, 1137, 1147, 1155, 1271, 1298, 1302, 1412, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1890, 1894, 1896, 1903, 1908], "ground": [409, 410, 762, 771, 1840, 1886, 1887, 1890, 1894], "appear": [409, 410, 803, 1005, 1139, 1298, 1368, 1373, 1377, 1380, 1384, 1403, 1897, 1899, 1901, 1906, 1908], "mstates_sel": 409, "boolean": [409, 410, 596, 597, 1005, 1197, 1278, 1344, 1398, 1548, 1549, 1564, 1657, 1658, 1671, 1709, 1714, 1724, 1734, 1744], "diamet": [409, 410, 416, 417, 447, 589, 590, 629, 630, 797, 913, 914, 915, 1302, 1630, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1838, 1879, 1886, 1890, 1893, 1897, 1900], "h": [409, 410, 416, 417, 445, 446, 454, 657, 916, 1200, 1266, 1298, 1840, 1886, 1893, 1894, 1895, 1896, 1899, 1903, 1904, 1905], "hub": [409, 410, 416, 417, 447, 1879, 1890, 1899, 1900, 1903, 1904], "turbine_model": [409, 410, 447, 510, 511, 519, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "add_model": [409, 411], "insert_model": [409, 412], "models_state_sel": 410, "tmodel_typ": [413, 415, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648], "overwritten": 416, "p_nomin": [416, 417, 657, 936, 1822, 1836, 1886, 1890], "nomin": [416, 417, 924, 1136, 1901], "ttype_typ": [416, 418, 653, 655, 657, 660, 666, 672, 678], "verticalprofil": [419, 420, 421, 422, 481, 482, 489, 491, 684, 685, 688, 689, 692, 693, 696, 697, 700, 704, 707, 1875, 1879], "vertic": [419, 589, 590, 942, 944, 945, 973, 1005, 1110, 1129, 1131, 1132, 1133, 1137, 1139, 1140, 1141, 1160, 1161, 1164, 1233, 1234, 1247, 1248, 1264, 1265, 1267, 1269, 1278, 1291, 1298, 1359, 1368, 1392, 1395, 1399, 1401, 1416, 1417, 1418, 1421, 1875, 1879, 1883, 1890, 1899, 1908], "profil": [419, 420, 421, 422, 481, 482, 491, 684, 686, 687, 688, 690, 691, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 709, 710, 852, 1426, 1430, 1431, 1435, 1875, 1879, 1885, 1890, 1893, 1894, 1895, 1899], "input_var": [419, 421, 600, 601, 684, 687, 688, 691, 692, 695, 696, 699, 700, 703, 704, 706, 707, 710, 887, 892, 897, 902, 907], "profile_typ": [419, 422, 684, 688, 692, 696, 700, 704, 707], "translat": [423, 1582, 1584, 1585, 1615, 1625, 1626, 1754, 1760, 1761, 1763, 1773, 1774, 1779, 1791, 1792, 1900, 1908], "global": [423, 1441, 1895], "respons": [423, 1879, 1900, 1902], "calc_ord": [423, 425, 711, 713, 717, 719, 722, 724, 729, 732, 736, 738, 742, 744], "get_wake_coo": [423, 427, 711, 715, 717, 721, 722, 726, 729, 735, 736, 740, 742, 746], "get_wake_modelling_data": [423, 428, 711, 717, 722, 727, 729, 736, 742], "get_centreline_point": [423, 426, 711, 714, 717, 720, 722, 725, 729, 733, 736, 739, 742, 745], "along": [423, 424, 426, 582, 583, 589, 590, 711, 714, 717, 720, 722, 725, 729, 733, 736, 739, 742, 745, 1005, 1069, 1123, 1142, 1218, 1264, 1266, 1269, 1291, 1293, 1297, 1358, 1389, 1392, 1398, 1419, 1422, 1879, 1890, 1893, 1894, 1900, 1904, 1908], "centrelin": [423, 424, 426, 711, 714, 717, 720, 722, 725, 729, 733, 736, 739, 742, 745, 859, 860, 1890, 1893, 1900], "calc_centreline_integr": [423, 424, 711, 717, 722, 729, 736, 742], "wframe_typ": [423, 429, 711, 717, 722, 729, 736, 742], "dx": [424, 859, 860, 1005, 1123, 1898], "self_wak": [424, 859, 860], "ipar": [424, 463, 634, 859, 860], "upper": [424, 589, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 1005, 1121, 1129, 1133, 1137, 1139, 1141, 1160, 1236, 1250, 1265, 1269, 1272, 1278, 1284, 1303, 1372, 1379, 1390, 1397, 1401, 1405, 1406, 1659, 1879, 1905], "bound": [424, 453, 1005, 1013, 1042, 1048, 1051, 1069, 1121, 1137, 1189, 1225, 1231, 1236, 1250, 1264, 1269, 1271, 1273, 1280, 1372, 1373, 1379, 1380, 1392, 1399, 1412, 1490, 1511, 1513, 1520, 1629, 1634, 1639, 1644, 1650, 1655, 1659, 1660, 1666, 1890], "consid": [424, 859, 860, 1139, 1266, 1547, 1557, 1890, 1906], "interpol": [424, 453, 454, 463, 600, 601, 634, 653, 655, 660, 666, 672, 673, 678, 679, 700, 701, 722, 723, 729, 730, 736, 737, 1005, 1163, 1164, 1269, 1284, 1293, 1359, 1879, 1890], "n_var": [424, 1557], "wake_coo": [427, 431, 715, 721, 726, 735, 740, 746, 755, 773, 779, 786, 792], "creation": [428, 521, 727, 962, 984, 1869, 1883, 1903, 1907], "init_wake_delta": [430, 433, 749, 752, 759, 762, 764, 771, 775, 777, 781, 784, 787, 790, 793, 796, 797, 802, 803, 808, 809, 813, 816, 820, 846, 851, 852, 856, 859, 864], "storag": [430, 433, 749, 752, 759, 762, 764, 771, 775, 777, 781, 784, 787, 790, 793, 796, 797, 802, 803, 808, 809, 813, 816, 820, 846, 851, 852, 856, 859, 864, 1893], "finalize_wake_delta": [430, 432, 749, 752, 756, 759, 762, 764, 771, 774, 777, 780, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859], "amb_result": [430, 432, 436, 749, 752, 756, 759, 762, 764, 771, 774, 777, 780, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859, 869, 873, 877, 881, 885, 890, 895, 900, 905], "wmodel_typ": [430, 434, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 846, 852, 859], "afterward": [432, 756, 774, 780], "wakesuperposit": [435, 436, 437, 519, 752, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1875, 1879], "superposit": [435, 519, 749, 752, 753, 759, 764, 765, 777, 784, 790, 796, 797, 798, 803, 804, 809, 810, 816, 817, 846, 847, 852, 853, 859, 860, 867, 871, 875, 879, 1875, 1879, 1890, 1898, 1900, 1907], "note": [435, 954, 1022, 1121, 1160, 1163, 1164, 1292, 1306, 1363, 1364, 1399, 1763, 1879, 1892, 1895, 1896, 1897, 1899, 1902, 1904, 1907, 1908], "matter": [435, 1901], "other": [435, 474, 981, 1005, 1013, 1017, 1022, 1023, 1038, 1048, 1050, 1069, 1078, 1106, 1145, 1161, 1231, 1271, 1272, 1273, 1297, 1378, 1385, 1387, 1388, 1391, 1395, 1407, 1408, 1413, 1441, 1538, 1578, 1579, 1582, 1586, 1587, 1615, 1754, 1763, 1775, 1776, 1779, 1878, 1883, 1890, 1892, 1896, 1898, 1900, 1901, 1902, 1908], "calc_wakes_plus_wak": [435, 437, 867, 870, 871, 874, 875, 878, 879, 882, 883, 886, 888, 891, 893, 896, 898, 901, 903, 906], "calc_final_wake_delta": [435, 436, 867, 869, 871, 873, 875, 877, 879, 881, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905], "final_wake_delta": [436, 869, 873, 877, 881, 885, 890, 895, 900, 905], "simpl": [436, 790, 796, 869, 873, 877, 881, 885, 890, 895, 900, 905, 1121, 1125, 1302, 1391, 1397, 1890, 1896, 1901, 1904, 1908], "plu": [436, 869, 873, 877, 881, 885, 890, 895, 900, 905, 1265, 1298, 1346, 1795, 1813, 1903], "sel_sp": [437, 870, 874, 878, 882, 886, 891, 896, 901, 906], "wake_model_result": [437, 870, 874, 878, 882, 886, 891, 896, 901, 906], "n_sel_sp": [437, 870, 874, 878, 882, 886, 891, 896, 901, 906], "boundari": [438, 439, 915, 1291, 1292, 1293, 1309, 1399, 1405, 1406, 1442, 1443, 1447, 1449, 1451, 1453, 1457, 1459, 1461, 1464, 1466, 1468, 1471, 1473, 1475, 1479, 1481, 1483, 1487, 1490, 1491, 1511, 1512, 1629, 1630, 1631, 1632, 1633, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1880, 1882, 1894, 1895, 1897], "geom2d": [438, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1813, 1897], "areageometri": [438, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1459, 1466, 1473, 1481, 1482, 1490, 1491, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1813, 1884], "wind_farm": [438, 439], "add_turbin": [438, 440, 447, 1894, 1908], "turbine_nam": [438, 442, 958, 960, 961], "staticdata": [443, 444, 1876, 1895], "static": [443, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 990, 992, 993, 1005, 1090, 1092, 1170, 1449, 1450, 1869, 1876, 1884, 1890, 1891, 1894, 1896, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1907], "directori": [443, 949, 950, 1876], "add_data_packag": [443, 990, 992], "context": [443, 990, 992, 993, 994, 995, 996, 997, 1005, 1149, 1187, 1202, 1287, 1340, 1894, 1897, 1903, 1905], "packag": [443, 990, 992, 993, 1139, 1441, 1489, 1869, 1877, 1878, 1879, 1880, 1884, 1887, 1890, 1891, 1892, 1895, 1897, 1898, 1900, 1904, 1908], "file_sfx": [443, 990, 992], "file": [443, 445, 446, 447, 448, 449, 450, 453, 454, 461, 463, 489, 491, 502, 503, 508, 521, 564, 565, 601, 617, 618, 633, 634, 653, 654, 655, 656, 660, 661, 666, 667, 672, 673, 678, 679, 803, 913, 918, 919, 920, 921, 922, 942, 949, 950, 951, 954, 955, 957, 958, 960, 961, 962, 967, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 990, 992, 993, 994, 995, 996, 998, 1003, 1004, 1293, 1794, 1795, 1796, 1812, 1821, 1876, 1878, 1879, 1883, 1884, 1890, 1891, 1892, 1896, 1897, 1899, 1902, 1904, 1905, 1906, 1907], "locat": [443, 576, 937, 990, 992, 993, 1005, 1013, 1041, 1048, 1069, 1078, 1080, 1085, 1087, 1088, 1089, 1090, 1091, 1099, 1100, 1101, 1105, 1126, 1136, 1139, 1141, 1160, 1174, 1222, 1233, 1234, 1235, 1245, 1247, 1248, 1249, 1259, 1265, 1269, 1278, 1280, 1281, 1299, 1302, 1303, 1310, 1311, 1312, 1313, 1318, 1324, 1362, 1363, 1368, 1377, 1378, 1384, 1385, 1395, 1401, 1405, 1406, 1818, 1819, 1892, 1895, 1902, 1908], "add_data_package_fil": [443, 990, 993], "file_nam": [443, 445, 913, 922, 942, 949, 954, 955, 958, 962, 967, 973, 981, 984, 986, 990, 993, 996, 1876], "add_fil": [443, 990, 994, 995], "file_path": [443, 449, 450, 913, 918, 919, 920, 921, 958, 960, 961, 990, 994, 995, 998, 1003, 1004, 1878], "path": [443, 445, 446, 449, 450, 461, 463, 489, 491, 508, 521, 617, 618, 633, 634, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 913, 922, 942, 949, 951, 955, 957, 958, 960, 961, 962, 967, 973, 981, 984, 986, 990, 994, 995, 996, 1003, 1004, 1005, 1013, 1044, 1045, 1046, 1048, 1066, 1067, 1068, 1069, 1077, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1186, 1228, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1331, 1343, 1359, 1390, 1392, 1399, 1401, 1466, 1794, 1795, 1796, 1812, 1821, 1884, 1891, 1894, 1903, 1905, 1906], "get_file_path": [443, 990, 996, 1895], "check_raw": [443, 990, 996], "toc": [443, 990, 997, 1895], "content": [443, 519, 524, 990, 997, 1906], "data_book": [444, 990, 991], "parse_pct_file_nam": [445, 1876], "pars": [445, 446, 453, 454, 1298, 1538, 1573, 1582, 1615, 1754, 1763, 1779, 1876], "format": [445, 446, 453, 454, 461, 917, 954, 975, 976, 977, 978, 979, 980, 998, 1004, 1005, 1090, 1091, 1135, 1151, 1152, 1160, 1166, 1167, 1168, 1169, 1278, 1284, 1297, 1298, 1299, 1309, 1350, 1364, 1378, 1385, 1395, 1396, 1404, 1441, 1878, 1895, 1896], "csv": [445, 446, 447, 448, 461, 913, 918, 958, 960, 961, 998, 999, 1001, 1002, 1812, 1878, 1884, 1890, 1894, 1897, 1899, 1902, 1903, 1904, 1905, 1906, 1907], "pathlib": [445, 446, 949, 951, 990, 996, 1401, 1895], "parsed_data": [445, 446], "parse_pct_two_fil": [446, 1876], "file_name_a": [446, 1876], "file_name_b": [446, 1876], "second": [446, 1005, 1137, 1160, 1163, 1164, 1265, 1266, 1273, 1298, 1310, 1311, 1826, 1851, 1886], "farm_layout": [447, 448, 449, 450, 451, 452, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907], "add_from_csv": [447, 448, 1878], "data_sourc": [447, 448, 453, 454, 461, 463, 472, 489, 491, 502, 503, 505, 564, 565, 600, 601, 617, 618, 633, 634, 653, 654, 660, 661, 700, 701, 1878, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1905, 1906, 1907, 1908], "col_index": 447, "col_nam": 447, "col_x": 447, "col_i": 447, "col_h": 447, "col_d": 447, "col_id": 447, "cols_models_pr": 447, "cols_models_post": 447, "turbine_base_nam": 447, "turbine_id": 447, "turbine_base_name_count_shift": 447, "turbine_paramet": [447, 450, 451, 452], "panda": [447, 448, 461, 463, 469, 489, 491, 498, 507, 564, 565, 600, 601, 617, 618, 633, 634, 653, 654, 655, 656, 660, 661, 666, 667, 672, 673, 678, 679, 701, 913, 922, 929, 931, 933, 934, 935, 936, 939, 940, 942, 949, 954, 955, 958, 959, 962, 964, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 998, 1003, 1004, 1298, 1441, 1878, 1879, 1884, 1890, 1893, 1901, 1902, 1904, 1906, 1908], "datafram": [447, 448, 461, 463, 489, 491, 507, 564, 565, 600, 601, 617, 618, 633, 634, 653, 654, 655, 656, 660, 661, 666, 667, 672, 673, 678, 679, 701, 929, 931, 933, 934, 935, 936, 939, 940, 954, 958, 959, 962, 964, 966, 967, 975, 976, 977, 978, 979, 980, 984, 1003, 1004, 1298, 1878, 1879, 1890, 1901, 1902, 1904, 1906, 1908], "column": [447, 461, 463, 489, 491, 507, 564, 565, 600, 601, 618, 633, 634, 654, 656, 660, 661, 666, 667, 672, 678, 701, 954, 960, 961, 998, 1004, 1136, 1139, 1141, 1265, 1269, 1277, 1284, 1291, 1292, 1293, 1298, 1302, 1389, 1398, 1399, 1416, 1417, 1439, 1671, 1709, 1795, 1895, 1899, 1901, 1902, 1905, 1906], "enter": [447, 1264], "forward": [447, 449, 450, 451, 452, 513, 915, 920, 954, 975, 976, 977, 978, 979, 980, 1003, 1004, 1125, 1265, 1281, 1298, 1302, 1312, 1313, 1398, 1408], "add_from_df": [448, 1878, 1890], "add_from_fil": [449, 1878, 1895, 1906], "infer": [449, 450, 1407, 1904], "suffix": [449, 453, 454], "add_from_json": [450, 1878], "set_farm_nam": 450, "turbim": [450, 1878], "json": [450, 917, 1878], "add_grid": [451, 1878, 1894, 1896, 1903, 1905, 1907], "xy_bas": [451, 452, 1878, 1893, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1907], "step_vector": [451, 1878, 1894, 1896, 1903, 1905, 1907], "regular": [451, 453, 582, 589, 1005, 1264, 1269, 1284, 1291, 1292, 1293, 1319, 1401, 1730, 1740, 1763, 1779, 1814, 1878, 1879, 1881, 1882, 1884, 1890, 1894, 1903, 1905, 1907], "grid": [451, 453, 540, 548, 582, 975, 976, 977, 978, 979, 980, 989, 1005, 1131, 1136, 1235, 1237, 1249, 1251, 1261, 1291, 1292, 1293, 1302, 1325, 1326, 1359, 1398, 1405, 1406, 1407, 1408, 1645, 1673, 1679, 1720, 1721, 1730, 1740, 1741, 1763, 1764, 1779, 1878, 1879, 1881, 1882, 1890, 1894, 1896, 1907], "add_row": [452, 1878, 1893, 1897, 1899, 1901, 1902, 1904], "xy_step": [452, 1878, 1893, 1897, 1899, 1901, 1902, 1904], "row": [452, 633, 634, 960, 1136, 1137, 1160, 1161, 1269, 1277, 1284, 1291, 1292, 1293, 1302, 1309, 1389, 1398, 1399, 1671, 1709, 1740, 1741, 1763, 1764, 1878, 1889, 1891, 1893, 1894, 1899, 1901, 1905, 1906], "fielddatanc": [453, 454, 455, 456, 457, 458, 459, 460, 1878, 1890, 1896], "heterogen": [453, 1878, 1889, 1891, 1899], "horizont": [453, 771, 942, 943, 946, 947, 948, 973, 975, 978, 1005, 1041, 1110, 1128, 1129, 1131, 1133, 1137, 1139, 1140, 1141, 1160, 1161, 1163, 1233, 1234, 1247, 1248, 1264, 1265, 1267, 1269, 1298, 1302, 1392, 1395, 1399, 1401, 1416, 1417, 1418, 1421, 1878, 1883, 1887, 1890, 1895, 1896, 1899, 1903, 1904], "netcdf": [453, 957, 958, 961, 1878, 1896], "pattern": [453, 454, 1005, 1297, 1390, 1406, 1890, 1901], "end": [453, 454, 941, 992, 998, 1003, 1004, 1022, 1121, 1123, 1135, 1136, 1139, 1141, 1167, 1187, 1267, 1283, 1375, 1377, 1382, 1384, 1418], "nc": [453, 454, 998, 999, 1001, 1002, 1821, 1890, 1896], "One": [453, 454, 1121, 1374, 1381, 1896], "mani": [453, 454, 1023, 1136, 1137, 1890, 1891], "ovar": [453, 461, 489, 564, 633], "var2ncvar": [453, 454, 1896], "map": [453, 454, 461, 463, 489, 491, 507, 525, 526, 527, 528, 529, 530, 531, 564, 565, 600, 601, 618, 954, 975, 976, 977, 978, 979, 980, 981, 983, 1005, 1013, 1048, 1069, 1139, 1141, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406, 1416, 1417, 1441, 1505, 1506, 1541, 1542, 1707, 1867, 1868, 1879, 1883, 1886, 1890, 1894, 1898, 1899, 1902, 1903, 1905], "fixed_var": [453, 454, 461, 463, 489, 491, 505, 1895, 1896, 1897, 1899, 1901, 1902, 1905, 1906, 1907, 1908], "uniform": [453, 454, 461, 463, 481, 489, 491, 564, 565, 649, 707, 736, 1136, 1292, 1302, 1615, 1617, 1878, 1879, 1890, 1893, 1894, 1895, 1904, 1906, 1908], "read": [453, 454, 461, 463, 489, 491, 508, 565, 601, 618, 634, 654, 656, 660, 661, 666, 667, 672, 673, 678, 679, 998, 1003, 1794, 1795, 1796, 1812, 1813, 1869, 1876, 1878, 1884, 1890, 1894, 1896, 1903, 1905, 1906], "states_coord": [453, 454, 1896], "x_coord": [453, 454, 1896], "y_coord": [453, 454, 1896], "h_coord": [453, 454, 1896], "pre_load": [453, 454, 1896], "weight_ncvar": [453, 454], "bounds_error": [453, 1896], "exceed": [453, 507, 1399], "fill_valu": 453, "time_format": [453, 454, 1896], "datetim": [453, 454, 1299, 1419, 1422], "string": [453, 454, 524, 952, 966, 1005, 1090, 1093, 1094, 1110, 1120, 1121, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1166, 1167, 1187, 1226, 1238, 1252, 1261, 1264, 1265, 1266, 1267, 1269, 1278, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1338, 1350, 1364, 1377, 1384, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1403, 1405, 1406, 1417, 1418, 1421, 1441, 1490, 1492, 1511, 1513, 1520, 1531, 1538, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1671, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1884], "interp_nan": [453, 454], "linearli": [453, 454, 777, 784, 790, 796, 1398], "interpn_par": [453, 454], "scipi": [453, 454, 463, 634, 672, 673, 678, 679, 1120, 1147, 1155, 1282, 1294, 1301, 1389, 1390, 1671, 1709], "interpn": [453, 454, 634, 672, 673, 678, 679], "utmx": [454, 1896], "utmi": [454, 1896], "d_": 454, "xr": [454, 1441], "multiheightst": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 1878, 1890], "multipl": [461, 749, 1005, 1022, 1136, 1161, 1162, 1163, 1164, 1265, 1269, 1298, 1302, 1314, 1346, 1401, 1407, 1878, 1879, 1890, 1891, 1902], "taken": [461, 1264, 1291, 1303, 1405, 1406, 1904], "exampl": [461, 988, 1123, 1137, 1160, 1162, 1269, 1283, 1297, 1298, 1350, 1359, 1364, 1365, 1375, 1382, 1414, 1441, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "50": [461, 507, 1136, 1264, 1441, 1894, 1895, 1897, 1898, 1899, 1902, 1903, 1907], "60": [461, 1894, 1897, 1903], "100": [461, 610, 1005, 1139, 1264, 1417, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908], "var2col": [461, 463, 489, 491, 505, 507, 564, 565, 1895, 1897, 1899, 1902, 1903, 1905, 1906, 1907], "fix": [461, 463, 474, 489, 491, 1069, 1126, 1131, 1269, 1308, 1318, 1328, 1345, 1377, 1384, 1390, 1404, 1634, 1691, 1720, 1878, 1882, 1890, 1894], "pd_read_par": [461, 463, 491, 565, 701], "slice": [461, 463, 469, 489, 491, 498, 540, 942, 973, 975, 976, 977, 978, 979, 980, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1297, 1298, 1299, 1301, 1390, 1441, 1879, 1883, 1890, 1904], "rang": [461, 463, 469, 489, 491, 498, 617, 618, 1005, 1078, 1084, 1089, 1100, 1103, 1105, 1120, 1139, 1141, 1147, 1155, 1160, 1264, 1265, 1266, 1269, 1273, 1282, 1283, 1291, 1292, 1293, 1294, 1298, 1301, 1309, 1317, 1365, 1375, 1382, 1389, 1401, 1404, 1405, 1406, 1416, 1417, 1441, 1879, 1890, 1893, 1901, 1902, 1903, 1908], "states_loc": [461, 463, 469, 472, 489, 491, 498, 502, 505, 1899], "loc": [461, 463, 469, 489, 491, 498, 1005, 1078, 1085, 1088, 1090, 1097, 1099, 1100, 1226, 1278, 1363, 1368, 1373, 1377, 1380, 1384, 1395, 1399, 1901, 1902], "rdict": [461, 462, 472, 473, 489, 490, 502, 505, 506], "index_col": [461, 462, 472, 473, 489, 490, 502, 505, 506], "interp1d": 463, "multiheighttimeseri": [472, 473, 1878, 1890, 1895, 1899], "timeseri": [472, 505, 506, 722, 723, 736, 737, 936, 1878, 1879, 1889, 1890, 1891, 1899, 1903, 1905], "parse_d": [472, 473, 505, 506], "scanw": [474, 475, 476, 477, 478, 479, 480, 1878], "wd": [474, 475, 481, 482, 618, 717, 718, 734, 989, 998, 1000, 1817, 1818, 1819, 1820, 1858, 1867, 1868, 1884, 1886, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "ti": [474, 475, 481, 482, 569, 648, 649, 678, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 859, 860, 867, 871, 875, 879, 988, 998, 1000, 1613, 1842, 1843, 1856, 1867, 1868, 1879, 1880, 1886, 1890, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "rho": [474, 475, 481, 482, 653, 654, 656, 660, 661, 666, 667, 678, 679, 988, 998, 1000, 1853, 1867, 1868, 1886, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "ws_list": [474, 475], "singlestatest": [481, 482, 483, 484, 485, 486, 487, 488, 1878, 1890, 1893, 1894, 1904], "profdict": [481, 489], "profdata": [481, 482], "statest": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 1878, 1895, 1897, 1901, 1902, 1907, 1908], "readabl": [489, 1878, 1902, 1906], "rpar": [489, 660], "tabstat": [502, 503, 504, 1878, 1890], "tab": [502, 503, 1005, 1119, 1796, 1878, 1884, 1890, 1895], "normal": [502, 503, 507, 572, 573, 717, 915, 1010, 1013, 1026, 1048, 1053, 1069, 1136, 1139, 1140, 1147, 1163, 1164, 1264, 1265, 1266, 1269, 1291, 1292, 1293, 1297, 1302, 1303, 1309, 1398, 1401, 1405, 1406, 1420, 1423, 1671, 1709, 1796, 1879, 1884, 1895, 1901, 1907], "its": [503, 1005, 1013, 1026, 1031, 1032, 1048, 1051, 1053, 1058, 1069, 1074, 1123, 1125, 1139, 1157, 1162, 1165, 1171, 1228, 1264, 1265, 1266, 1269, 1271, 1273, 1291, 1292, 1293, 1307, 1309, 1310, 1311, 1320, 1344, 1398, 1405, 1406, 1412, 1414, 1417, 1671, 1709, 1779, 1881, 1891, 1900, 1904], "create_random_abl_st": [507, 1878], "cols_minmax": 507, "mol_abs_rang": 507, "5000": [507, 1374, 1381, 1897, 1901, 1903, 1905, 1906], "random": [507, 1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1218, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1358, 1390, 1399, 1401, 1878, 1895], "abl": [507, 684, 688, 692, 696, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1878, 1879, 1890], "mol": [507, 696, 1432, 1433, 1436, 1437, 1845, 1885, 1886, 1894, 1895], "neutral": [507, 684, 696, 1425, 1426, 1427, 1879, 1884], "stratif": 507, "windio": [508, 1890], "read_cas": [508, 1878], "case_yaml": [508, 1878], "site_par": [508, 1878], "farm_par": 508, "ana_par": 508, "yaml": [508, 1878, 1890], "read_sit": 508, "read_farm": 508, "read_analys": 508, "basicfarmcontrol": [509, 1879, 1894, 1898, 1903, 1905], "condit": [509, 617, 742, 816, 823, 1269, 1490, 1491, 1815, 1879, 1890, 1893, 1894, 1897, 1900, 1902, 1904, 1908], "farm_model": [510, 511, 512, 513, 514, 515, 519, 1898], "turbine2farmmodel": [510, 511, 512, 513, 514, 515, 1879, 1898], "promot": [510, 1879], "simpli": [510, 572, 1088, 1136, 1163, 1164, 1283, 1363, 1879, 1892, 1894, 1895, 1898, 1902, 1907], "init": [513, 992, 993, 1583, 1615, 1617, 1620, 1757, 1768, 1788], "slightli": [516, 1142, 1293, 1302, 1884, 1902], "enhanc": [516, 1884], "dictionari": [516, 518, 823, 844, 954, 1004, 1005, 1136, 1137, 1139, 1141, 1149, 1300, 1303, 1344, 1368, 1377, 1384, 1401, 1416, 1417, 1884], "pass": [518, 1110, 1120, 1121, 1130, 1131, 1135, 1136, 1137, 1147, 1155, 1160, 1161, 1163, 1164, 1264, 1265, 1266, 1269, 1271, 1272, 1273, 1280, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1302, 1346, 1373, 1374, 1378, 1380, 1381, 1385, 1387, 1388, 1389, 1390, 1391, 1392, 1405, 1406, 1407, 1408, 1421, 1671, 1709, 1907], "kind": [519, 1233, 1234, 1235, 1247, 1248, 1249, 1896, 1908], "partial_wak": [519, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 1898], "partialwakemodel": 519, "wake_superposit": [519, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 1898], "induction_model": [519, 1893], "base_class": 519, "pct_file": [519, 521], "print_toc": [519, 524, 1898], "model_typ": [519, 523, 913, 922, 942, 949, 952, 955, 958, 962, 973, 981, 984, 986], "class_nam": [519, 523], "curv": [521, 653, 654, 656, 660, 666, 667, 672, 673, 678, 679, 986, 988, 1005, 1044, 1066, 1162, 1163, 1164, 1392, 1879, 1883, 1890, 1891, 1894, 1901], "dynam": [523, 722, 736, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406, 1489, 1879, 1884, 1889, 1891], "optin": [523, 540, 1795], "mclass": 523, "more": [525, 1047, 1120, 1121, 1136, 1139, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1266, 1269, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1301, 1302, 1309, 1327, 1346, 1389, 1391, 1396, 1405, 1406, 1407, 1441, 1671, 1709, 1890, 1893, 1894, 1902, 1903, 1906], "than": [525, 898, 1022, 1078, 1085, 1100, 1123, 1139, 1161, 1239, 1253, 1264, 1265, 1266, 1269, 1291, 1293, 1302, 1314, 1318, 1365, 1374, 1375, 1381, 1382, 1389, 1405, 1406, 1893, 1903, 1906], "invok": [525, 605, 711, 777, 784, 790, 796, 1010, 1879, 1890, 1891, 1892, 1894, 1897, 1906, 1907, 1908], "wname2pwak": [525, 526], "wtype2pwak": [525, 526], "ones": [526, 533, 541, 549, 552, 559, 1302, 1439], "partialaxiwak": [532, 533, 534, 535, 536, 537, 538, 539, 749, 1879, 1894, 1898, 1903, 1905], "idea": [532, 898, 1890, 1901], "radial": [532, 533, 750, 761, 767, 768, 801, 807, 850, 1005, 1013, 1019, 1048, 1051, 1069, 1070, 1142, 1212, 1213, 1350, 1352, 1353, 1354, 1355, 1893], "n": [532, 533, 540, 541, 548, 549, 582, 583, 589, 590, 852, 943, 944, 945, 946, 947, 948, 989, 1039, 1040, 1041, 1043, 1063, 1064, 1065, 1076, 1106, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1265, 1266, 1269, 1271, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1309, 1314, 1316, 1318, 1363, 1389, 1390, 1391, 1399, 1401, 1404, 1405, 1406, 1416, 1417, 1421, 1441, 1473, 1474, 1503, 1504, 1571, 1572, 1634, 1635, 1639, 1640, 1650, 1651, 1671, 1691, 1692, 1709, 1879, 1890, 1892, 1894, 1895, 1898, 1903, 1904, 1905, 1906, 1908], "radii": [532, 766, 767, 800, 801, 806, 807, 849, 850, 1005, 1347, 1350, 1815, 1884], "cover": [532, 1139, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "disc": [532, 551, 1490, 1491, 1890, 1900], "overlap": [532, 551, 582, 583, 1147, 1155, 1160, 1271, 1272, 1301, 1389], "circl": [532, 551, 1048, 1100, 1130, 1134, 1136, 1138, 1151, 1152, 1298, 1346, 1365, 1395, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1710, 1711, 1714, 1720, 1721, 1724, 1730, 1731, 1734, 1740, 1741, 1744, 1815, 1816, 1884, 1897], "area": [532, 582, 583, 1005, 1121, 1163, 1164, 1265, 1293, 1297, 1302, 1318, 1391, 1392, 1406, 1416, 1417, 1443, 1449, 1451, 1453, 1459, 1461, 1468, 1475, 1483, 1490, 1491, 1795, 1815, 1816, 1880, 1884, 1890, 1893, 1897], "partialdistslicedwak": [540, 541, 542, 543, 544, 545, 546, 547, 548, 752, 1879, 1898], "distanc": [540, 797, 798, 1120, 1135, 1136, 1139, 1141, 1147, 1155, 1282, 1294, 1297, 1301, 1303, 1389, 1403, 1442, 1443, 1447, 1449, 1451, 1453, 1457, 1459, 1461, 1464, 1466, 1468, 1471, 1473, 1475, 1479, 1481, 1483, 1487, 1513, 1514, 1660, 1661, 1671, 1673, 1685, 1686, 1709, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1764, 1815, 1816, 1879, 1880, 1882, 1884, 1893, 1897, 1908], "make": [540, 1005, 1041, 1130, 1137, 1141, 1160, 1264, 1266, 1273, 1281, 1291, 1293, 1297, 1302, 1310, 1311, 1312, 1313, 1389, 1396, 1398, 1403, 1407, 1417, 1815, 1879, 1880, 1892, 1897, 1906], "done": [540, 1142, 1264, 1315, 1501, 1903, 1905], "grotor": 540, "gridrotor": [540, 541, 549, 582, 583, 584, 585, 586, 587, 588, 1879, 1894, 1898], "partialgrid": [548, 549, 550, 1879, 1898], "mai": [548, 605, 1006, 1020, 1022, 1044, 1066, 1078, 1090, 1092, 1107, 1112, 1122, 1123, 1130, 1135, 1136, 1139, 1160, 1161, 1163, 1164, 1233, 1234, 1235, 1239, 1245, 1247, 1248, 1249, 1253, 1259, 1262, 1265, 1269, 1271, 1272, 1273, 1286, 1291, 1292, 1293, 1298, 1299, 1302, 1308, 1309, 1310, 1311, 1315, 1318, 1344, 1363, 1374, 1376, 1377, 1381, 1383, 1384, 1395, 1398, 1405, 1406, 1879, 1896, 1903, 1908], "partialtophat": [551, 552, 553, 554, 555, 556, 557, 1879, 1898], "hat": [551, 764, 1879, 1887, 1908], "rotorpoint": [558, 559, 560, 561, 562, 563, 1879, 1893, 1894, 1898], "directli": [558, 984, 990, 1136, 1163, 1164, 1232, 1246, 1264, 1280, 1299, 1302, 1310, 1311, 1417, 1538, 1547, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1877, 1879, 1883, 1884, 1887, 1893, 1902], "get_wake_point": [558, 562], "setuniformdata": [564, 565, 566, 567, 568, 1879, 1890], "both": [564, 565, 759, 760, 809, 812, 852, 855, 859, 862, 1005, 1047, 1121, 1125, 1135, 1141, 1142, 1163, 1164, 1243, 1257, 1261, 1264, 1280, 1281, 1283, 1293, 1298, 1310, 1311, 1315, 1345, 1359, 1374, 1381, 1390, 1396, 1398, 1403, 1404, 1405, 1406, 1409, 1410, 1763, 1893, 1901, 1906, 1907], "assum": [564, 565, 1139, 1141, 1261, 1391, 1396, 1407, 1707, 1815, 1905], "Or": [564, 565], "independ": [564, 565, 1094, 1137, 1161, 1265, 1315, 1328, 1409, 1410, 1899], "written": [564, 565, 957, 960, 961, 1891], "tke2ti": [569, 570, 571, 1879, 1890, 1898], "tke": [569, 1879, 1890, 1895, 1899, 1900], "sqrt": [569, 1264, 1265, 1302, 1671, 1709, 1814, 1879, 1884, 1890], "wakedelta": [572, 573, 574, 575, 1879], "subtract": [572, 1069, 1070, 1879, 1897], "divid": [572, 573, 975, 976, 977, 978, 979, 980, 1155, 1264, 1265, 1301, 1398], "centrerotor": [576, 577, 578, 579, 580, 581, 1879, 1898, 1903, 1905], "compos": [582, 589, 1013, 1017, 1022, 1048, 1069, 1879], "possibli": [582, 1084, 1103, 1879], "kick": [582, 1879], "out": [582, 1022, 1085, 1269, 1293, 1302, 1403, 1405, 1406, 1441, 1671, 1709, 1796, 1814, 1879, 1894, 1902, 1903, 1905, 1908], "outsid": [582, 1121, 1266, 1297, 1330, 1403, 1404, 1405, 1406, 1879, 1896], "reduc": [582, 583, 589, 590, 922, 938, 939, 940, 975, 976, 977, 978, 979, 980, 1264, 1280, 1286, 1302, 1890], "reduct": [582, 583, 1893], "actual": [582, 583, 1120, 1147, 1155, 1163, 1164, 1262, 1269, 1282, 1294, 1301, 1318, 1345, 1389, 1397, 1538, 1547, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1890, 1892, 1899, 1901, 1904], "repres": [582, 583, 633, 672, 678, 916, 1023, 1134, 1138, 1139, 1141, 1151, 1152, 1161, 1269, 1281, 1298, 1299, 1302, 1312, 1313, 1368, 1374, 1381, 1396, 1398, 1416, 1417, 1441, 1459, 1466, 1473, 1879, 1884, 1895, 1907, 1908], "circ": [582, 583], "recalcul": [582, 583], "accordingli": [582, 583, 1264, 1302], "nint": [582, 583, 589, 590], "200": [582, 583, 589, 590, 1894, 1895, 1897, 1899, 1908], "levelrotor": [589, 590, 591, 592, 593, 594, 595, 1879, 1890, 1898], "between": [589, 1005, 1041, 1120, 1121, 1128, 1132, 1134, 1136, 1138, 1139, 1141, 1147, 1151, 1152, 1155, 1161, 1162, 1163, 1164, 1233, 1234, 1247, 1248, 1264, 1265, 1269, 1272, 1278, 1282, 1291, 1292, 1293, 1294, 1297, 1301, 1303, 1309, 1359, 1389, 1392, 1396, 1403, 1405, 1406, 1421, 1661, 1671, 1709, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1764, 1815, 1816, 1843, 1879, 1886, 1894, 1896, 1897, 1899, 1903], "lower": [589, 883, 884, 888, 889, 893, 894, 898, 899, 903, 904, 937, 1005, 1121, 1129, 1133, 1137, 1139, 1141, 1160, 1236, 1250, 1264, 1265, 1269, 1271, 1272, 1273, 1278, 1303, 1320, 1372, 1379, 1386, 1390, 1392, 1398, 1401, 1405, 1406, 1659, 1879, 1890, 1905], "blade": [589, 1879], "tip": [589, 1136, 1137, 1302, 1879], "rew": [589, 998, 1000, 1850, 1867, 1868, 1879, 1886, 1890, 1894, 1896, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "in_var": [596, 597], "vairabl": [596, 597], "func": [596, 597, 1005, 1112, 1310, 1311, 1538, 1547, 1557, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1797, 1803, 1804, 1805, 1806, 1811], "in0": [596, 597], "in1": [596, 597], "stsel": [596, 597], "out0": [596, 597], "ou1": [596, 597], "where": [596, 597, 916, 1005, 1013, 1023, 1026, 1041, 1048, 1053, 1069, 1112, 1121, 1134, 1136, 1138, 1139, 1147, 1151, 1152, 1155, 1160, 1161, 1163, 1164, 1265, 1267, 1298, 1301, 1309, 1318, 1320, 1365, 1389, 1391, 1396, 1397, 1404, 1418, 1421, 1671, 1709, 1814, 1818, 1819, 1897, 1899, 1900, 1902, 1908], "inx": [596, 597], "outi": [596, 597], "lookupt": [600, 601, 602, 603, 604, 1879, 1890], "tabl": [600, 601, 633, 1005, 1119, 1134, 1138, 1151, 1152, 1302, 1399, 1400, 1879, 1890, 1901, 1902], "varmap": [600, 601, 1490, 1505, 1506, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "pd_file_read_par": [601, 618, 634, 654, 661], "xr_interp_arg": 601, "powermask": [605, 606, 607, 608, 609, 610, 1879, 1890, 1898, 1901], "derat": [605, 986, 1844, 1883, 1886, 1890, 1901, 1902], "below": [605, 976, 977, 979, 980, 1005, 1022, 1121, 1134, 1136, 1138, 1139, 1151, 1152, 1160, 1181, 1208, 1271, 1273, 1283, 1291, 1293, 1298, 1302, 1303, 1327, 1348, 1401, 1405, 1406, 1890, 1892, 1893], "rate": [605, 1269], "higher": [605, 1273, 1890], "boost": [605, 986, 1844, 1883, 1886, 1890, 1901, 1902], "introduc": [605, 1887, 1890], "so": [605, 1013, 1017, 1048, 1069, 1099, 1121, 1136, 1137, 1160, 1161, 1187, 1261, 1265, 1269, 1271, 1272, 1297, 1302, 1310, 1311, 1328, 1359, 1365, 1374, 1378, 1381, 1385, 1390, 1405, 1406, 1439, 1890, 1900, 1901, 1903, 1904, 1905], "wise": [605, 633, 634, 1671, 1709, 1890, 1903], "var_ws_p": [605, 606, 661, 667, 673, 679], "factor_p": [605, 606, 610], "rews3": [605, 606, 610, 661, 667, 673, 679, 998, 1000, 1852, 1867, 1868, 1886, 1894, 1903, 1905], "update_p_ct": [605, 610], "max_p": [605, 610, 1844, 1886, 1901, 1902], "rated_p": [605, 610], "var_w": 610, "p_lim": 610, "rotorcentrecalc": [611, 612, 613, 614, 615, 616, 1879, 1890, 1898], "sectormanag": [617, 618, 619, 620, 621, 1879, 1890, 1902], "range_var": [617, 618, 1902], "target_var": [617, 618, 1902], "col_tind": 618, "col_tnam": [618, 1902], "colmap": [618, 1902], "var_period": 618, "amb_wd": [618, 962, 964, 966, 984, 998, 1000, 1831, 1867, 1868, 1886, 1894, 1903, 1904, 1905], "360": [618, 1134, 1138, 1151, 1152], "within": [618, 990, 1005, 1120, 1122, 1149, 1207, 1264, 1282, 1283, 1294, 1309, 1317, 1318, 1344, 1399, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1815, 1880, 1882, 1884, 1890, 1892, 1893, 1897, 1900, 1903], "period": [618, 1310], "setfarmvar": [622, 623, 624, 625, 626, 627, 628, 1879, 1890, 1901, 1908], "add_var": [622, 624, 1615, 1617, 1901, 1908], "setxyhd": [629, 630, 631, 632, 1879, 1894, 1903, 1905], "set_xi": [629, 630], "set_h": [629, 630], "set_d": [629, 630], "tablefactor": [633, 634, 635, 636, 637, 1879, 1890], "multipli": [633, 634, 797, 798, 809, 810, 852, 853, 859, 860, 1879, 1890], "dimension": [633, 1136, 1266, 1298, 1671, 1709, 1879, 1883, 1890], "col_var": [633, 634, 700, 701], "row_var": [633, 634], "onto": [633, 634], "thrust2ct": [638, 639, 640, 641, 1879, 1890, 1898], "thrust": [638, 639, 1823, 1837, 1879, 1886, 1890, 1891, 1894, 1900, 1901, 1908], "thrust_var": [638, 639], "wsct": [638, 660, 666, 672, 678], "var_ws_ct": [638, 639, 661, 667, 673, 679], "rews2": [638, 639, 661, 667, 673, 679, 998, 1000, 1851, 1867, 1868, 1886, 1894, 1903, 1905], "yaw2yawm": [642, 643, 644, 1879, 1890, 1898, 1908], "yaw": [642, 645, 661, 667, 673, 679, 742, 816, 823, 998, 1000, 1833, 1834, 1863, 1864, 1867, 1868, 1879, 1886, 1889, 1890, 1891, 1894, 1897, 1898, 1903, 1904, 1905], "yawm": [642, 645, 742, 816, 839, 1864, 1867, 1868, 1879, 1886, 1908], "yawm2yaw": [645, 646, 647, 1879, 1890, 1898, 1908], "kti": [648, 649, 650, 651, 652, 1842, 1843, 1879, 1886, 1890, 1898, 1906], "k": [648, 649, 742, 743, 797, 798, 803, 804, 809, 810, 816, 817, 839, 846, 847, 1134, 1138, 1151, 1152, 1160, 1298, 1421, 1841, 1842, 1843, 1879, 1886, 1890, 1894, 1898, 1903, 1905, 1906, 1907], "linear": [648, 867, 868, 871, 872, 875, 876, 879, 880, 883, 1005, 1131, 1147, 1151, 1155, 1264, 1266, 1269, 1280, 1282, 1291, 1292, 1293, 1301, 1309, 1376, 1383, 1389, 1404, 1405, 1406, 1879, 1907], "ti_var": [648, 649, 859, 860], "k_var": [648, 649, 742, 743, 797, 798, 803, 804, 809, 810, 816, 817, 846, 847], "kb": [648, 649, 1842, 1843, 1886, 1890], "ti_val": [648, 649], "cpctfile": [653, 654, 1879, 1890], "pctfile": [653, 654, 660, 661, 662, 663, 664, 665, 1879, 1894, 1895, 1898, 1902, 1903, 1904, 1905, 1906], "cp": [653, 654, 655, 656, 1879, 1890], "col_w": [653, 654, 660, 661, 666], "col_cp": [653, 654, 656], "225": [653, 654, 656, 672, 988, 1893, 1894, 1895, 1896, 1897, 1901, 1902, 1904, 1905, 1906, 1907, 1908], "paramer": 654, "cpctfromtwo": [655, 656, 1879, 1890], "pctfromtwo": [655, 656, 666, 667, 668, 669, 670, 671, 1879], "data_source_cp": [655, 656], "data_source_ct": [655, 656, 666, 667, 672, 673, 678, 679], "col_ws_cp_fil": 656, "pd_file_read_pars_cp": 656, "pd_file_read_pars_ct": [656, 667, 673, 679], "nulltyp": [657, 658, 659, 1879, 1890, 1898], "doe": [657, 1020, 1032, 1058, 1069, 1074, 1107, 1121, 1126, 1136, 1143, 1153, 1154, 1225, 1231, 1292, 1302, 1349, 1391, 1405, 1406, 1407, 1414, 1710, 1720, 1730, 1740, 1879, 1899, 1901, 1903, 1905], "col_p": [660, 661, 666, 667], "col_ct": [660, 661, 666, 667], "densitii": [660, 661, 666, 667, 678, 679], "correct": [660, 661, 666, 667, 678, 679, 711, 797, 798, 803, 898, 1090, 1092, 1155, 1225, 1266, 1269, 1271, 1272, 1301, 1363, 1879, 1890, 1900, 1901, 1904], "wsp": [660, 666, 672, 678], "p_ct": [661, 667, 672, 673, 679], "p_p": [661, 667, 673, 679, 1908], "88": [661, 667, 673, 679, 1895, 1897, 1906, 1908], "expon": [661, 667, 673, 679, 704, 1264, 1428, 1854, 1879, 1886, 1890, 1908], "source_p": [666, 672, 678], "source_ct": [666, 672, 678], "rpars_p": [666, 672, 678], "rpars_ct": [666, 672, 678], "data_source_p": [666, 667, 672, 673, 678, 679], "col_ws_p_fil": [666, 667], "col_ws_ct_fil": 667, "pd_file_read_pars_p": [667, 673, 679], "wsrho2pctfromtwo": [672, 673, 674, 675, 676, 677, 1879], "950": [672, 1897], "975": 672, "275": 672, "subsequ": [672, 678, 1894, 1900, 1903], "neccessarili": [672, 678, 1879, 1906], "ipars_p": [672, 678], "ipars_ct": [672, 678], "interpn_pars_p": [673, 679], "interpn_pars_ct": [673, 679], "wsti2pctfromtwo": [678, 679, 680, 681, 682, 683, 1879, 1890], "05": [678, 988, 1013, 1041, 1048, 1069, 1278, 1655, 1656, 1894, 1895, 1897, 1899, 1901, 1902, 1903, 1905, 1907, 1908], "06": [678, 1894, 1895, 1897, 1899, 1903, 1905, 1906], "07": [678, 823, 838, 1894, 1895, 1896, 1898, 1903, 1905], "vertical_profil": [684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710], "abllogneutralwsprofil": [684, 685, 686, 687, 1879], "log": [684, 688, 692, 696, 1005, 1048, 1069, 1078, 1085, 1100, 1137, 1264, 1265, 1266, 1269, 1281, 1291, 1292, 1293, 1309, 1312, 1313, 1376, 1378, 1383, 1385, 1405, 1406, 1426, 1430, 1431, 1435, 1879, 1885], "ustar_input": [684, 685, 688, 689, 692, 693, 696, 697], "ustar": [684, 685, 688, 689, 692, 693, 696, 697, 1425, 1427, 1429, 1433, 1434, 1437, 1885, 1890], "abllogstablewsprofil": [688, 689, 690, 691, 1879, 1894], "stabl": [688, 696, 1429, 1430, 1431, 1432, 1433, 1879, 1884, 1892, 1894], "abllogunstablewsprofil": [692, 693, 694, 695, 1879], "unstabl": [692, 696, 1434, 1435, 1436, 1437, 1879, 1884], "abllogwsprofil": [696, 697, 698, 699, 1879, 1895], "pick": [696, 1005, 1149, 1206, 1295, 1296, 1344, 1409, 1410, 1894], "dataprofil": [700, 701, 702, 703, 1879, 1890], "data_z": 700, "n_z": 700, "data_v": 700, "interp_par": [700, 701], "col_z": [700, 701], "read_csv": 701, "shearedprofil": [704, 705, 706, 1879, 1890], "shear": [704, 1428, 1854, 1879, 1884, 1886, 1890], "uniformprofil": [707, 708, 709, 710, 1879], "farmord": [711, 712, 713, 714, 715, 716, 1879, 1898], "warn": [711, 1006, 1008, 1078, 1085, 1087, 1100, 1291, 1293, 1298, 1302, 1349, 1441], "test": [711, 1005, 1149, 1344, 1442, 1448, 1449, 1451, 1458, 1459, 1465, 1466, 1472, 1473, 1480, 1481, 1488, 1890, 1895], "purpos": [711, 1293, 1895, 1897, 1904], "give": [711, 1120, 1136, 1139, 1147, 1155, 1160, 1176, 1265, 1282, 1294, 1298, 1301, 1302, 1303, 1389, 1405, 1406, 1890, 1893, 1906], "when": [711, 1005, 1013, 1020, 1022, 1026, 1048, 1053, 1060, 1069, 1085, 1090, 1092, 1107, 1111, 1120, 1121, 1122, 1126, 1135, 1136, 1137, 1139, 1147, 1155, 1156, 1159, 1160, 1187, 1202, 1264, 1265, 1266, 1269, 1280, 1282, 1283, 1287, 1290, 1291, 1292, 1293, 1294, 1297, 1298, 1301, 1309, 1318, 1322, 1323, 1330, 1340, 1387, 1388, 1389, 1392, 1394, 1397, 1398, 1405, 1406, 1414, 1890, 1894, 1895, 1896, 1897, 1901, 1903, 1906], "base_fram": [711, 712, 742, 743], "rotorwd1": [711, 712], "rotorwd": [711, 712, 717, 718, 719, 720, 721, 742, 743, 1879, 1894, 1898], "align": [717, 1005, 1134, 1135, 1137, 1138, 1151, 1152, 1233, 1234, 1247, 1248, 1264, 1265, 1359, 1399, 1409, 1410, 1879], "axi": [717, 915, 943, 944, 945, 946, 947, 948, 965, 966, 976, 977, 979, 980, 981, 983, 988, 989, 1005, 1013, 1019, 1041, 1069, 1070, 1078, 1082, 1086, 1088, 1090, 1098, 1100, 1104, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1135, 1137, 1160, 1177, 1181, 1225, 1231, 1233, 1234, 1235, 1236, 1239, 1245, 1247, 1248, 1249, 1250, 1253, 1259, 1261, 1263, 1264, 1265, 1266, 1269, 1272, 1274, 1275, 1280, 1281, 1283, 1297, 1299, 1302, 1303, 1304, 1310, 1311, 1312, 1313, 1321, 1325, 1326, 1327, 1350, 1352, 1364, 1365, 1372, 1373, 1374, 1376, 1378, 1379, 1380, 1381, 1383, 1385, 1387, 1388, 1389, 1392, 1401, 1403, 1404, 1405, 1406, 1409, 1410, 1419, 1420, 1422, 1423, 1443, 1453, 1461, 1468, 1475, 1483, 1522, 1533, 1543, 1671, 1709, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1817, 1818, 1819, 1820, 1879, 1883, 1884, 1904, 1908], "var_wd": [717, 718], "seqdynamicwak": [722, 723, 724, 725, 726, 727, 728, 1898, 1903], "cl_ipar": [722, 723, 729, 730, 736, 737], "line": [722, 723, 729, 730, 736, 737, 764, 766, 797, 800, 803, 806, 846, 849, 943, 944, 945, 989, 1005, 1044, 1066, 1110, 1117, 1120, 1128, 1130, 1131, 1132, 1136, 1137, 1139, 1141, 1145, 1151, 1152, 1155, 1160, 1161, 1181, 1201, 1218, 1237, 1244, 1251, 1258, 1261, 1265, 1267, 1271, 1272, 1278, 1279, 1282, 1291, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1314, 1325, 1326, 1327, 1344, 1350, 1358, 1359, 1364, 1389, 1392, 1395, 1396, 1398, 1399, 1403, 1405, 1406, 1408, 1416, 1417, 1418, 1421, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1890, 1892, 1893, 1894, 1904], "dt_min": [722, 723, 736, 737, 1905], "minut": [722, 723, 736, 737, 1895, 1899, 1905], "streamlines2d": [729, 730, 731, 732, 733, 734, 735, 1879, 1890, 1898], "streamlin": [729, 730, 734, 859, 1005, 1398, 1879, 1887, 1890, 1896, 1900], "max_length": [729, 730], "get_streamline_data": [729, 734], "n_step": 734, "timelin": [736, 737, 738, 739, 740, 741, 1879, 1890, 1898, 1905], "spatial": [736, 1513, 1671, 1709, 1879, 1880, 1889, 1890, 1895, 1903], "max_wake_length": [736, 737], "20000": [736, 737], "yawedwak": [742, 743, 744, 745, 746, 747, 748, 1879, 1890, 1898], "bend": [742, 1879, 1890, 1908], "bastankhah": [742, 809, 816, 823, 1879, 1887, 1890, 1908], "2016": [742, 816, 823, 1879, 1887, 1890], "refer": [742, 777, 784, 790, 796, 797, 803, 809, 816, 823, 852, 1125, 1129, 1133, 1139, 1160, 1280, 1396, 1427, 1428, 1433, 1437, 1671, 1709, 1885, 1890, 1893, 1895, 1908], "experiment": [742, 816, 823, 1271, 1272, 1273, 1292, 1310, 1311], "theoret": [742, 816, 823], "studi": [742, 816, 823, 1891], "majid": [742, 809, 816, 823], "fernando": [742, 809, 816, 823], "port\u00e9": [742, 809, 816, 823], "agel": [742, 809, 816, 823, 1908], "http": [742, 777, 784, 790, 796, 797, 803, 809, 816, 823, 852, 859, 898, 1136, 1139, 1391, 1439, 1815, 1888, 1890, 1891, 1892, 1906, 1909], "doi": [742, 790, 796, 797, 809, 816, 823, 1891], "org": [742, 797, 809, 816, 823, 852, 859, 898, 1136, 1139, 1441, 1888], "1017": [742, 816, 823], "jfm": [742, 816, 823], "595": [742, 816, 823], "bastankhah2016model": [742, 743, 816, 817, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 1887], "model_par": [742, 816], "growth": [742, 743, 797, 798, 803, 804, 809, 810, 816, 817, 846, 847, 852, 853, 859, 860, 1841, 1886, 1890, 1907], "misalign": [742, 816, 1908], "axisymmetricwakemodel": [749, 750, 751, 759, 764, 1887], "distslicedwakemodel": [749, 752, 753, 754, 755, 756, 757, 758, 816, 1887], "r": [749, 750, 759, 760, 761, 764, 767, 768, 784, 790, 796, 797, 801, 803, 807, 809, 812, 846, 850, 852, 855, 859, 862, 1005, 1013, 1069, 1078, 1121, 1128, 1131, 1132, 1139, 1162, 1166, 1261, 1269, 1298, 1403, 1887, 1893, 1903], "separ": [749, 752, 1013, 1024, 1035, 1048, 1069, 1121, 1137, 1160, 1167, 1298, 1404, 1887, 1890, 1900], "abil": [749, 752], "calc_wakes_spsel_x_r": [749, 750, 759, 761, 764, 768, 797, 803, 809, 846, 852, 859], "calc_wakes_spsel_x_yz": [749, 751, 752, 754, 759, 764, 797, 803, 809, 816, 819, 846, 852, 859], "n_r_per_x": [750, 761, 767, 768, 801, 807, 850], "n_sp_sel": [750, 751, 754, 760, 761, 766, 768, 800, 806, 812, 819, 849, 855, 862], "sp_sel": [750, 751, 754, 760, 761, 766, 768, 800, 806, 812, 819, 823, 836, 849, 855, 862], "non": [750, 751, 754, 760, 761, 766, 768, 800, 806, 812, 819, 849, 855, 862, 989, 1005, 1013, 1040, 1043, 1046, 1048, 1064, 1065, 1068, 1069, 1076, 1077, 1131, 1139, 1141, 1228, 1269, 1281, 1291, 1292, 1293, 1309, 1312, 1313, 1378, 1385, 1390, 1585, 1626, 1659, 1671, 1709, 1761, 1774, 1792, 1814, 1884, 1890, 1891, 1892], "yz": [751, 752, 754, 819, 942, 945, 948, 968, 969, 973, 977, 980, 1887, 1890], "n_yz_per_x": [751, 754, 819], "denpend": [752, 1887], "superp": 752, "gaussianwakemodel": [759, 760, 761, 809, 852, 859, 1887], "gaussian": [759, 852, 1139, 1269, 1417, 1887], "calc_amplitude_sigma_spsel": [759, 760, 809, 812, 852, 855, 859, 862], "amplitud": [759, 760, 809, 812, 852, 855, 859, 862, 1218, 1282, 1358, 1389], "sigma": [759, 760, 809, 812, 852, 855, 859, 862, 1890], "amsi": [760, 812, 855, 862], "groundmirror": [762, 763, 1887], "wakemirror": [762, 763, 771, 772, 773, 774, 775, 776, 1887, 1890], "reflect": [762, 771, 772, 1120, 1147, 1155, 1282, 1294, 1301, 1389, 1887, 1890, 1894, 1900, 1903, 1905, 1908], "tophatwakemodel": [764, 765, 766, 767, 768, 769, 770, 797, 803, 846, 1887], "betz": [764, 765, 1890, 1898], "calc_wake_radiu": [764, 767, 797, 801, 803, 807, 846, 850], "calc_centreline_wake_delta": [764, 766, 797, 800, 803, 806, 846, 849], "wake_r": [766, 767, 800, 801, 806, 807, 849, 850], "cl_del": [766, 800, 806, 849], "varlu": [766, 800, 806, 849], "rankinehalfbodi": [777, 778, 779, 780, 781, 782, 783, 1887, 1890, 1894, 1898], "rankin": [777, 1887, 1890, 1893, 1894], "half": [777, 964, 966, 1123, 1128, 1132, 1136, 1163, 1164, 1265, 1302, 1396, 1398, 1416, 1417, 1473, 1884, 1887, 1890, 1893, 1894], "bodi": [777, 1139, 1141, 1416, 1417, 1887, 1890, 1893, 1894], "superpos": [777, 784, 790, 796], "b": [777, 1005, 1017, 1022, 1048, 1062, 1110, 1139, 1162, 1269, 1298, 1319, 1321, 1322, 1323, 1327, 1330, 1335, 1341, 1342, 1371, 1421, 1671, 1709, 1891, 1893], "gribben": [777, 1893], "hawk": [777, 1893], "potenti": [777, 1265, 1893], "flow": [777, 942, 943, 944, 945, 946, 947, 948, 968, 973, 975, 976, 977, 978, 979, 980, 989, 1005, 1398, 1883, 1889, 1890, 1891, 1893, 1894, 1899, 1900, 1903, 1904, 1905], "blockag": [777, 784, 790, 796, 1887, 1889, 1890, 1891], "techinc": 777, "paper": [777, 1891], "frazer": 777, "nash": 777, "consult": 777, "2019": [777, 803, 804, 1893], "www": [777, 784, 790, 796, 1441], "fnc": 777, "co": [777, 1069, 1908], "uk": 777, "media": 777, "o5eosxa": 777, "pdf": [777, 803, 852, 859, 898, 1269, 1292, 1406], "madsen": [777, 778, 784, 785, 790, 791, 796, 810, 823, 838, 853, 860, 1890, 1894, 1898, 1903, 1905], "rathmann": [784, 785, 786, 787, 788, 789, 1887, 1890, 1893, 1898], "forst": [784, 790, 796, 1887, 1893], "alexand": [784, 790, 796, 1893], "meyer": [784, 790, 796, 1887, 1893], "et": [784, 790, 796, 1893], "al": [784, 790, 796, 1893], "On": [784, 790, 796, 1269, 1903], "accuraci": [784, 790, 796], "predict": [784, 790, 796], "renew": [784, 790, 796], "energi": [784, 790, 796, 1891, 1899, 1900], "2023": [784, 790, 796, 1888, 1895, 1905], "sciencedirect": [784, 790, 796], "com": [784, 790, 796, 1391, 1439, 1441, 1815, 1890, 1891, 1892, 1909], "scienc": [784, 790, 796], "articl": [784, 790, 796, 852, 859, 1888], "pii": [784, 790, 796], "s0960148123007620": [784, 790, 796], "pre_rotor_onli": [784, 785, 790, 791, 796], "region": [784, 785, 790, 791, 817, 823, 838, 1005, 1162, 1163, 1164, 1405, 1406, 1890, 1893, 1894], "selfsimilar": [790, 791, 792, 793, 794, 795, 796, 1887, 1890, 1893, 1898], "similar": [790, 796, 1130, 1163, 1164, 1266, 1291, 1292, 1293, 1299, 1389, 1887, 1893, 1896], "troldborg": [790, 796, 1887, 1893], "niel": [790, 796, 1893], "raul": [790, 796, 1893], "zone": [790, 796, 1299, 1795, 1813, 1894], "20": [790, 796, 1160, 1282, 1389, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1905, 1906, 1907], "12": [790, 796, 1160, 1298, 1401, 1894, 1895, 1897, 1901, 1902, 1903, 1904, 1905, 1907, 1908], "2017": [790, 796, 1893, 1895, 1906], "2011": [790, 796], "2020": [790, 796, 1887, 1893], "onlinelibrari": [790, 796], "wilei": [790, 796, 1147, 1155, 1301], "full": [790, 796, 1090, 1093, 1110, 1120, 1123, 1128, 1131, 1132, 1136, 1139, 1141, 1147, 1155, 1160, 1261, 1269, 1282, 1294, 1297, 1298, 1299, 1301, 1365, 1390, 1396, 1421, 1441, 1490, 1491, 1890, 1895, 1899], "1002": [790, 796], "we": [790, 796, 797, 1022, 1310, 1311, 1315, 1671, 1709, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "2137": [790, 796], "selfsimilar2020": [796, 1887, 1890, 1893, 1894, 1898], "crespohernandeztiwak": [797, 798, 799, 800, 801, 802, 1887, 1890, 1898], "crespo": [797, 1887], "hernandez": [797, 1887], "empir": [797, 1887], "correl": [797, 1005, 1110, 1421, 1671, 1709, 1887], "characterist": 797, "j": [797, 809, 852, 1139, 1291, 1293, 1671, 1709], "1016": [797, 809], "0167": 797, "6105": 797, "95": [797, 1139, 1895, 1897, 1905, 1907], "00033": 797, "eqn": 797, "17": [797, 1894, 1895, 1897, 1901, 1905, 1907], "15": [797, 1139, 1141, 1160, 1273, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1906, 1907], "1088": [797, 852, 859], "1742": [797, 852, 859], "6596": [797, 852, 859], "625": 797, "012039": 797, "a_near": [797, 798], "a_far": [797, 798], "e1": [797, 798], "e2": [797, 798], "e3": [797, 798], "use_ambti": [797, 798], "sbeta_factor": [797, 798, 809, 810, 852, 853, 859, 860, 1890, 1897], "sbeta": [797, 798, 809, 810, 852, 853, 859, 860, 1890], "near_wake_d": [797, 798], "362": 798, "73": [798, 1897], "83": [798, 1671, 1709, 1897, 1906], "0325": 798, "32": [798, 1897], "iectiwak": [803, 804, 805, 806, 807, 808, 1887, 1898], "iec": [803, 1887], "64100": [803, 1887], "2005": [803, 1887], "8": [803, 853, 898, 913, 915, 920, 966, 1005, 1137, 1273, 1298, 1375, 1382, 1441, 1887, 1888, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "orbit": 803, "dtu": [803, 1894, 1903, 1905], "dk": 803, "3750291": 803, "2009_31": 803, "v2": 803, "volluk": 803, "implement": [803, 1020, 1107, 1167, 1187, 1293, 1315, 1893, 1897, 1900], "document": [803, 1005, 1106, 1139, 1145, 1266, 1269, 1373, 1380, 1671, 1709, 1880, 1890], "frandsen": [803, 852, 853, 1890], "opening_angl": [803, 804], "open": [803, 804, 1134, 1265, 1399, 1441, 1888, 1890], "angl": [803, 804, 839, 1005, 1013, 1041, 1048, 1069, 1120, 1137, 1271, 1282, 1294, 1297, 1302, 1303, 1347, 1350, 1364, 1365, 1389, 1779, 1780, 1833, 1834, 1863, 1864, 1886, 1896, 1908], "21": [803, 804, 1895, 1897, 1901, 1906], "6": [803, 804, 1134, 1138, 1151, 1152, 1160, 1210, 1297, 1298, 1395, 1403, 1671, 1709, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "iec_typ": [803, 804], "bastankhah2014": [809, 810, 811, 812, 813, 814, 815, 1887, 1890, 1894, 1897, 1898, 1903, 1905], "2014": [809, 1887], "analyt": [809, 1490, 1493, 1511, 1513, 1520, 1531, 1547, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "renen": 809, "01": [809, 1814, 1884, 1894, 1895, 1897, 1898, 1899, 1903, 1905, 1906], "002": 809, "bastankhah2016": [816, 817, 818, 819, 820, 821, 822, 1887, 1890, 1894, 1898], "ct_max": 817, "beyond": [817, 1139, 1141], "9999": 817, "alpha": [817, 823, 838, 1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1173, 1261, 1264, 1266, 1269, 1271, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1314, 1317, 1390, 1398, 1399, 1401, 1405, 1406, 1407, 1848, 1886, 1894, 1897, 1903], "determin": [817, 823, 838, 936, 1006, 1008, 1110, 1121, 1139, 1163, 1164, 1261, 1262, 1264, 1269, 1298, 1302, 1309, 1344, 1345, 1368, 1390, 1401, 1405, 1406, 1421, 1890, 1900], "onset": [817, 823, 838], "far": [817, 823, 838, 1128, 1890], "beta": [817, 823, 838, 1849, 1886, 1890], "repetit": [823, 1887], "avoid": [823, 1022, 1078, 1084, 1100, 1103, 1160, 1315, 1368, 1671, 1709, 1887, 1894, 1908], "mdata_kei": [823, 829], "x0": [823, 837, 1265, 1271, 1273, 1405, 1406, 1814, 1884], "NEAR": [823, 830], "r_pc": [823, 832], "r_pc_": [823, 833], "ampl_near": [823, 825], "delta_near": [823, 828], "ampl_far": [823, 824], "sigma_y_far": [823, 834], "sigma_z_far": [823, 835], "delta_far": [823, 827], "58": [823, 838, 1895, 1897, 1901, 1905], "calc_data": [823, 839], "has_data": [823, 842, 1005, 1262], "clean": [823, 840], "gamma": [839, 1266, 1908], "radiant": [839, 1908], "jensenwak": [846, 847, 848, 849, 850, 851, 1887, 1898], "jensen": [846, 1671, 1709, 1887, 1898], "turboparkwak": [852, 853, 854, 855, 856, 857, 858, 1887, 1890, 1898], "turbopark": [852, 859, 1887, 1890], "optim": [852, 1491, 1498, 1512, 1514, 1520, 1521, 1532, 1538, 1540, 1544, 1555, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1597, 1600, 1605, 1606, 1608, 1613, 1614, 1615, 1625, 1626, 1630, 1635, 1640, 1645, 1655, 1661, 1667, 1671, 1673, 1680, 1686, 1692, 1698, 1704, 1707, 1709, 1710, 1720, 1730, 1740, 1754, 1755, 1760, 1761, 1763, 1765, 1773, 1774, 1775, 1776, 1779, 1786, 1791, 1792, 1869, 1875, 1880, 1881, 1882, 1888, 1889, 1890, 1891], "park": 852, "pedersen": 852, "svensson": 852, "l": [852, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1200, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "poulsen": 852, "nygaard": 852, "iopscienc": [852, 859], "iop": [852, 859], "2265": [852, 859], "022063": [852, 859], "c1": [852, 853, 1685, 1686], "c2": [852, 853, 1395, 1685, 1686], "turboparkwakeix": [859, 860, 861, 862, 863, 864, 865, 866, 1887, 1898], "over": [859, 922, 927, 928, 957, 964, 966, 1005, 1135, 1137, 1140, 1147, 1155, 1160, 1202, 1265, 1287, 1295, 1301, 1315, 1340, 1344, 1346, 1389, 1399, 1405, 1406, 1407, 1439, 1671, 1709, 1840, 1886, 1887, 1890, 1897, 1903, 1907], "own": [859, 860, 1266, 1904], "tilinear": [867, 868, 869, 870, 1879, 1898], "superp_to_amb": [867, 868, 871, 872, 875, 876, 879, 880], "quadrat": [867, 868, 871, 872, 875, 876, 879, 880, 903, 1879], "timax": [871, 872, 873, 874, 1879, 1898], "tipow": [875, 876, 877, 878, 1879, 1898], "tiquadrat": [879, 880, 881, 882, 1879, 1890, 1898], "wslinear": [883, 884, 885, 886, 887, 1879, 1890, 1898], "supersposit": [883, 888, 893, 898, 903, 1879], "deficit": [883, 884, 888, 889, 893, 894, 898, 903, 904, 1879, 1887, 1890, 1893, 1894, 1897, 1900, 1906, 1907, 1908], "scale_amb": [883, 884, 888, 889, 893, 894, 903, 904], "scale": [883, 884, 888, 889, 893, 894, 903, 904, 1005, 1048, 1051, 1069, 1078, 1089, 1100, 1105, 1120, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1176, 1218, 1242, 1256, 1261, 1264, 1265, 1266, 1269, 1271, 1281, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1312, 1313, 1314, 1320, 1358, 1376, 1383, 1389, 1390, 1398, 1399, 1401, 1405, 1406, 1596, 1597, 1606, 1614, 1685, 1686, 1893, 1894, 1896, 1903, 1905], "lim_low": [883, 884, 888, 889, 893, 894, 898, 899, 903, 904], "lim_high": [883, 884, 888, 889, 893, 894, 898, 899, 903, 904], "input_farm_var": [883, 887, 888, 892, 893, 897, 898, 902, 903, 907], "wsmax": [888, 889, 890, 891, 892, 1879, 1898], "wspow": [893, 894, 895, 896, 897, 1879, 1898], "wsproduct": [898, 899, 900, 901, 902, 1879, 1898], "product": [898, 1155, 1671, 1709, 1879], "dimensionless": 898, "rescal": 898, "rather": [898, 1022, 1161, 1265, 1302], "equival": [898, 1040, 1043, 1045, 1046, 1064, 1065, 1067, 1068, 1076, 1077, 1155, 1200, 1264, 1273, 1298, 1374, 1381, 1387, 1388, 1900, 1906, 1908], "arxiv": 898, "2010": 898, "03873": 898, "equat": [898, 1890], "wsquadrat": [903, 904, 905, 906, 907, 1879, 1898], "anim": [908, 909, 910, 911, 912, 922, 937, 943, 944, 945, 946, 947, 948, 968, 989, 1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1175, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1319, 1390, 1399, 1401, 1883, 1890, 1903, 1905], "yield": [908, 910, 912, 922, 929, 936, 1265, 1298, 1358, 1835, 1865, 1883, 1886, 1888, 1890, 1891, 1899, 1900, 1906, 1907], "artist": [908, 910, 912, 937, 1005, 1006, 1008, 1110, 1111, 1112, 1120, 1121, 1124, 1126, 1127, 1128, 1131, 1132, 1139, 1141, 1147, 1149, 1153, 1154, 1155, 1157, 1158, 1160, 1165, 1167, 1175, 1181, 1183, 1185, 1187, 1189, 1192, 1197, 1198, 1202, 1206, 1208, 1209, 1218, 1225, 1227, 1260, 1261, 1262, 1265, 1269, 1272, 1276, 1282, 1283, 1287, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1305, 1306, 1319, 1327, 1329, 1330, 1331, 1334, 1336, 1337, 1340, 1344, 1346, 1348, 1349, 1369, 1370, 1371, 1386, 1390, 1391, 1393, 1397, 1398, 1409, 1410, 1411, 1414, 1421, 1883, 1890], "fig": [908, 909, 910, 912, 915, 922, 937, 943, 944, 945, 946, 947, 948, 966, 989, 1005, 1170, 1197, 1225, 1273, 1334, 1337, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "pyplot": [908, 909, 911, 915, 966, 983, 988, 1151, 1152, 1269, 1278, 1292, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1522, 1533, 1543, 1714, 1724, 1734, 1744, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "figur": [908, 909, 913, 915, 937, 942, 943, 944, 945, 946, 947, 948, 962, 966, 984, 989, 1005, 1120, 1121, 1122, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1170, 1182, 1192, 1197, 1207, 1210, 1225, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1306, 1314, 1319, 1328, 1334, 1337, 1345, 1350, 1364, 1377, 1384, 1390, 1399, 1401, 1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483, 1490, 1511, 1513, 1520, 1522, 1531, 1533, 1538, 1543, 1582, 1596, 1605, 1607, 1613, 1615, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1754, 1763, 1779, 1890, 1893, 1894, 1897, 1899, 1904, 1906], "add_gener": [908, 910, 1903, 1905], "gen": [908, 910, 912], "verbostii": 911, "artistanim": 911, "farmlayoutoutput": [913, 914, 915, 916, 917, 918, 919, 920, 921, 1883, 1890, 1894, 1895, 1897, 1899, 1902, 1903, 1906, 1907], "plot": [913, 915, 918, 919, 920, 921, 942, 943, 944, 945, 946, 947, 948, 962, 966, 967, 968, 969, 981, 983, 984, 986, 988, 989, 1005, 1110, 1120, 1121, 1128, 1130, 1131, 1132, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1187, 1188, 1264, 1265, 1266, 1267, 1269, 1271, 1273, 1280, 1281, 1282, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1312, 1313, 1346, 1350, 1364, 1374, 1381, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1405, 1407, 1408, 1414, 1416, 1417, 1418, 1421, 1443, 1453, 1461, 1468, 1475, 1483, 1714, 1724, 1734, 1744, 1883, 1890, 1893, 1894, 1896, 1897, 1901, 1902, 1904, 1906, 1907, 1908], "layout": [913, 915, 916, 917, 918, 919, 920, 921, 1005, 1197, 1337, 1391, 1490, 1511, 1513, 1520, 1522, 1531, 1533, 1538, 1543, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1875, 1880, 1883, 1889, 1890, 1891, 1903, 1905, 1906], "from_r": [913, 914], "results_st": [913, 914], "from_result": [913, 914], "get_layout_data": [913, 916], "get_layout_dict": [913, 917], "get_figur": [913, 915, 920, 962, 966, 967, 984, 1005, 1192, 1894, 1895, 1897, 1899, 1902, 1903, 1906, 1907], "color_bi": [913, 915, 1899, 1906, 1907], "fontsiz": [913, 915, 920, 1368, 1377, 1384, 1399, 1401], "figsiz": [913, 915, 922, 937, 943, 944, 945, 946, 947, 948, 966, 981, 983, 988, 989, 1005, 1170, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1904, 1905, 1906, 1907], "annot": [913, 915, 1005, 1121, 1123, 1135, 1899, 1903, 1906, 1907], "write_plot": [913, 920], "write": [913, 918, 919, 920, 921, 922, 942, 949, 954, 955, 958, 960, 961, 962, 967, 973, 975, 976, 977, 978, 979, 980, 981, 984, 986, 998, 1004, 1812, 1821, 1883, 1884, 1890], "write_xyh": [913, 921], "write_csv": [913, 918, 958, 960], "write_json": [913, 919], "get_fpath": [913, 922, 942, 949, 951, 955, 958, 962, 973, 981, 984, 986], "fname": [913, 922, 942, 949, 950, 951, 955, 958, 962, 973, 981, 984, 986, 1005, 1197, 1337, 1794, 1795, 1796, 1884], "format_col2var": [913, 922, 942, 949, 954, 955, 958, 962, 973, 981, 984, 986], "format_dict": [913, 922, 942, 949, 954, 955, 958, 962, 973, 981, 984, 986, 998, 1004], "print_model": [913, 922, 942, 949, 953, 955, 958, 962, 973, 981, 984, 986, 1490, 1511, 1513, 1520, 1528, 1531, 1536, 1596, 1605, 1607, 1613], "titl": [915, 943, 944, 945, 946, 947, 948, 965, 966, 981, 983, 986, 988, 989, 1005, 1225, 1226, 1314, 1368, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1888, 1890, 1893, 1894, 1895, 1899, 1901, 1902, 1903, 1905, 1906, 1907], "ax": [915, 922, 937, 943, 944, 945, 946, 947, 948, 981, 983, 988, 989, 1005, 1006, 1008, 1024, 1048, 1069, 1078, 1081, 1084, 1090, 1092, 1103, 1106, 1110, 1111, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1121, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1143, 1144, 1146, 1150, 1151, 1152, 1153, 1154, 1160, 1162, 1170, 1171, 1174, 1176, 1182, 1190, 1193, 1196, 1200, 1201, 1203, 1207, 1210, 1216, 1217, 1225, 1226, 1231, 1232, 1239, 1246, 1253, 1262, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1278, 1280, 1281, 1283, 1284, 1285, 1286, 1291, 1292, 1293, 1297, 1298, 1299, 1302, 1303, 1304, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1328, 1329, 1330, 1332, 1335, 1341, 1345, 1346, 1352, 1368, 1373, 1377, 1378, 1380, 1384, 1385, 1387, 1388, 1389, 1390, 1391, 1396, 1398, 1399, 1401, 1403, 1404, 1407, 1408, 1409, 1410, 1412, 1418, 1421, 1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483, 1490, 1511, 1513, 1520, 1522, 1531, 1533, 1538, 1543, 1582, 1596, 1605, 1607, 1613, 1615, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1754, 1763, 1779, 1884, 1893, 1894, 1895, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907], "normalize_d": 915, "ret_im": [915, 937, 943, 944, 945, 946, 947, 948, 989, 1903, 1905], "barg": [915, 1714, 1724, 1734, 1744], "anno_delx": [915, 1903], "anno_d": [915, 1903], "scatter": [915, 937, 1005, 1298, 1309, 1890], "color": [915, 943, 944, 945, 946, 947, 948, 989, 1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1163, 1164, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1282, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1314, 1332, 1333, 1346, 1368, 1390, 1391, 1395, 1396, 1398, 1399, 1401, 1403, 1405, 1406, 1407, 1418, 1443, 1453, 1461, 1468, 1475, 1483, 1890, 1906], "mean_rew": [915, 1899, 1906, 1907], "etc": [915, 1005, 1120, 1131, 1134, 1138, 1147, 1151, 1152, 1155, 1225, 1264, 1266, 1269, 1282, 1291, 1292, 1293, 1294, 1301, 1302, 1304, 1309, 1318, 1320, 1389, 1398, 1405, 1406, 1890, 1897, 1899], "wrt": [915, 922, 931, 932, 933, 934, 935, 1442, 1447, 1449, 1451, 1457, 1459, 1464, 1466, 1471, 1473, 1479, 1481, 1487, 1547, 1557], "plt": [915, 937, 943, 944, 945, 946, 947, 948, 983, 988, 989, 1265, 1273, 1298, 1441, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "No": [915, 1137, 1160, 1264, 1291, 1293, 1309, 1894], "matplotlib": [915, 937, 943, 944, 945, 946, 947, 948, 966, 989, 1005, 1006, 1008, 1013, 1019, 1042, 1048, 1051, 1069, 1070, 1078, 1085, 1090, 1100, 1110, 1120, 1121, 1122, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1139, 1141, 1147, 1149, 1151, 1152, 1155, 1160, 1162, 1167, 1171, 1174, 1182, 1187, 1225, 1231, 1233, 1234, 1235, 1243, 1247, 1248, 1249, 1257, 1261, 1264, 1265, 1266, 1267, 1269, 1273, 1278, 1282, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1314, 1315, 1318, 1319, 1320, 1328, 1331, 1345, 1346, 1350, 1364, 1368, 1373, 1376, 1380, 1383, 1389, 1390, 1392, 1398, 1399, 1401, 1405, 1406, 1408, 1409, 1410, 1417, 1418, 1421, 1441, 1443, 1453, 1461, 1466, 1468, 1475, 1483, 1522, 1533, 1543, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "im": [915, 937, 943, 944, 945, 946, 947, 948, 989, 1389], "pathcollect": [915, 937, 1309], "farmresultsev": [922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 1883, 1890, 1899, 1901, 1905, 1906, 1907], "farm_calc": 922, "weinsum": [922, 941], "rh": [922, 941], "einstein": [922, 941, 1890], "reduce_st": [922, 939, 1906], "vars_op": [922, 939, 940], "some": [922, 938, 939, 940, 1005, 1022, 1044, 1066, 1084, 1090, 1092, 1099, 1103, 1130, 1163, 1164, 1269, 1292, 1302, 1344, 1378, 1385, 1396, 1438, 1671, 1709, 1884, 1894, 1897, 1900, 1901, 1903, 1908], "reduce_turbin": [922, 940], "reduce_al": [922, 938], "states_op": [922, 938], "turbines_op": [922, 938], "calc_states_mean": [922, 931], "calc_states_sum": [922, 933], "calc_states_std": [922, 932], "deviat": [922, 932, 1298], "calc_turbine_mean": [922, 934], "calc_turbine_sum": [922, 935], "calc_farm_mean": [922, 927], "calc_farm_sum": [922, 928], "calc_mean_farm_pow": [922, 930, 1899, 1901, 1906, 1907], "calc_turbine_yield": [922, 929, 936, 1906], "annual": [922, 936, 1899, 1906, 1907], "add_capac": [922, 924, 1906], "p_nom": [922, 924], "capac": [922, 924, 1822, 1836, 1886, 1890, 1906], "calc_farm_yield": [922, 929, 1899, 1907], "turbine_yield": [922, 929], "power_uncert": [922, 929], "p75": [922, 929, 1890], "p90": [922, 929, 1890], "add_effici": [922, 925, 1906, 1907], "effici": [922, 925, 926, 1005, 1147, 1155, 1158, 1301, 1304, 1331, 1389, 1671, 1709, 1839, 1886, 1890, 1899, 1901, 1906, 1907], "calc_farm_effici": [922, 926, 1899, 1906, 1907], "gen_stdata": [922, 937, 1905], "eff": [926, 998, 1000, 1839, 1886, 1906], "fulli": [927, 928, 938, 1069, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1891], "contract": [927, 928, 938, 1596, 1597, 1606, 1614], "uncertainti": 929, "trigger": [929, 1013, 1031, 1048, 1069, 1290, 1441], "farm_yield": 929, "_type_": 932, "_description_": 932, "hour": 936, "delta_t": 936, "p_unit_w": 936, "retur": 936, "durat": 936, "datetime64": [936, 1299, 1903, 1905], "seri": [936, 1005, 1160, 1391, 1884, 1890, 1900, 1903, 1906], "gwh": [936, 1835, 1865, 1886, 1899, 1906, 1907], "legloc": [937, 1905], "right": [937, 941, 1005, 1048, 1120, 1121, 1123, 1128, 1131, 1132, 1136, 1147, 1155, 1160, 1163, 1164, 1226, 1233, 1234, 1239, 1247, 1248, 1261, 1265, 1269, 1272, 1277, 1278, 1282, 1294, 1298, 1299, 1301, 1302, 1303, 1310, 1311, 1318, 1320, 1368, 1373, 1374, 1389, 1390, 1396, 1399, 1401, 1403, 1409, 1420, 1423, 1441, 1893], "legend": [937, 965, 966, 1005, 1198, 1199, 1200, 1265, 1273, 1278, 1297, 1298, 1306, 1314, 1338, 1395, 1893, 1894], "It": [941, 1010, 1020, 1022, 1032, 1058, 1074, 1107, 1110, 1112, 1120, 1121, 1125, 1131, 1147, 1155, 1264, 1266, 1269, 1282, 1291, 1292, 1293, 1294, 1298, 1301, 1309, 1372, 1379, 1389, 1391, 1396, 1405, 1406, 1407, 1421, 1891, 1892, 1896, 1899, 1901, 1902], "about": [941, 1136, 1141, 1302, 1309, 1416, 1417, 1441, 1897, 1901], "hand": [941, 1022, 1890], "einsum": [941, 1538, 1574, 1575, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "express": [941, 1659], "convent": [941, 1269, 1291, 1293, 1390, 1439, 1671, 1709], "mention": [941, 1376, 1383, 1895, 1899], "obligatori": 941, "flowplots2d": [942, 943, 944, 945, 946, 947, 948, 1883, 1890, 1893, 1894, 1896, 1897, 1899, 1904, 1905, 1907, 1908], "slicedata": [942, 943, 944, 945, 946, 947, 948, 973, 974, 975, 976, 977, 978, 979, 980, 1883, 1890], "2d": [942, 943, 944, 945, 946, 947, 948, 968, 973, 975, 976, 977, 978, 979, 980, 1005, 1136, 1139, 1161, 1264, 1265, 1266, 1269, 1284, 1291, 1292, 1293, 1298, 1302, 1309, 1389, 1390, 1398, 1399, 1412, 1442, 1466, 1473, 1883, 1884, 1890, 1893, 1907], "get_mean_fig_xi": [942, 946, 1897, 1907], "xlabel": [942, 943, 944, 946, 947, 989, 1005, 1225, 1238, 1298, 1314, 1373], "ylabel": [942, 943, 945, 946, 948, 989, 1005, 1225, 1252, 1298, 1314, 1380], "get_mean_fig_xz": [942, 947], "x_direct": [942, 944, 945, 947, 948, 976, 977, 979, 980, 1899], "270": [942, 944, 945, 947, 948, 976, 977, 979, 980, 1890, 1893, 1894, 1895, 1899, 1901, 1904, 1908], "xz": [942, 944, 947, 968, 969, 973, 976, 979, 1890], "get_mean_fig_yz": [942, 948], "gen_states_fig_xi": [942, 943, 1893, 1894, 1896, 1904, 1905, 1908], "gen_states_fig_xz": [942, 944, 1894, 1899], "gen_states_fig_yz": [942, 945, 1908], "runner": [942, 968, 969, 973, 974, 1538, 1540, 1582, 1754, 1764, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1890, 1894, 1897, 1903, 1905, 1906, 1907], "get_mean_data_xi": [942, 946, 973, 975], "resolut": [942, 973, 975, 976, 977, 978, 979, 980, 1120, 1147, 1155, 1282, 1294, 1301, 1389, 1893, 1894, 1896, 1897, 1899, 1903, 1904, 1905, 1907, 1908], "get_mean_data_xz": [942, 947, 973, 976], "get_mean_data_yz": [942, 948, 973, 977], "get_states_data_xi": [942, 943, 973, 978], "get_states_data_xz": [942, 944, 973, 979], "get_states_data_yz": [942, 945, 973, 980], "vlabel": [943, 944, 945, 946, 947, 948, 989], "add_bar": [943, 944, 945, 946, 947, 948, 989], "cmap": [943, 944, 945, 946, 947, 948, 989, 1005, 1134, 1136, 1138, 1140, 1151, 1152, 1163, 1164, 1264, 1266, 1269, 1291, 1292, 1293, 1302, 1309, 1389, 1390, 1398, 1405, 1406, 1407, 1901], "vmin": [943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 989, 1005, 1078, 1084, 1088, 1089, 1100, 1105, 1136, 1140, 1163, 1164, 1264, 1266, 1269, 1291, 1292, 1293, 1302, 1309, 1389, 1405, 1406, 1407, 1893, 1894, 1901, 1903, 1905], "vmax": [943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 989, 1078, 1084, 1088, 1089, 1100, 1105, 1136, 1140, 1163, 1164, 1264, 1266, 1269, 1291, 1292, 1293, 1302, 1309, 1389, 1405, 1406, 1407, 1893, 1894, 1901, 1903, 1905], "quiver_n": [943, 944, 945, 946, 947, 948, 1894, 1896, 1903, 1905], "quiver_par": [943, 944, 945, 946, 947, 948, 1894, 1896, 1903, 1905], "ret_stat": [943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 989], "rotor_color": [943, 944, 945], "contourf": [943, 944, 945, 946, 947, 948, 989, 1005, 1152], "pure": [943, 944, 945, 946, 947, 948, 1629, 1634, 1639, 1644, 1650, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1710, 1720, 1881, 1882, 1890], "bar": [943, 944, 945, 946, 947, 948, 966, 989, 1005, 1134, 1135, 1137, 1138, 1160, 1187, 1264, 1265, 1671, 1709, 1714, 1724, 1734, 1744, 1797, 1798, 1907], "colormap": [943, 944, 945, 946, 947, 948, 1120, 1134, 1136, 1138, 1140, 1151, 1152, 1163, 1164, 1264, 1266, 1269, 1282, 1291, 1292, 1293, 1294, 1301, 1302, 1309, 1389, 1398, 1405, 1406], "minim": [943, 944, 945, 946, 947, 948, 975, 976, 977, 978, 979, 980, 988, 989, 1391, 1442, 1446, 1449, 1451, 1456, 1459, 1463, 1466, 1470, 1473, 1478, 1481, 1486, 1513, 1514, 1538, 1565, 1566, 1567, 1582, 1596, 1597, 1606, 1613, 1614, 1615, 1623, 1624, 1644, 1645, 1650, 1660, 1661, 1673, 1703, 1710, 1711, 1718, 1720, 1721, 1728, 1730, 1731, 1738, 1740, 1741, 1750, 1751, 1754, 1759, 1763, 1764, 1771, 1772, 1779, 1785, 1790, 1880, 1882, 1897], "th": [943, 944, 945, 946, 947, 948, 1671, 1709, 1890], "quiver": [943, 944, 945, 946, 947, 948, 989, 1005, 1136, 1302, 1303], "usag": [943, 944, 945, 946, 947, 948, 989, 1137, 1160, 1890], "orient": [943, 944, 945, 968, 969, 1005, 1161, 1265, 1291, 1293, 1302, 1310, 1311, 1392, 1395, 1405, 1406, 1420, 1423, 1902, 1903], "si": [943, 944, 945, 946, 947, 948, 989, 1903, 1905], "quadmesh": [943, 944, 945, 946, 947, 948, 989, 1266, 1292, 1293], "quadcontourset": [943, 944, 945, 946, 947, 948, 989], "zlabel": [944, 945, 947, 948], "north": [944, 945, 947, 948, 976, 977, 979, 980, 1134, 1138, 1151, 1152, 1902], "ech": [944, 945], "ret_data": [946, 947, 948, 962, 966, 967, 984], "n_x": [946, 947, 948, 989, 1264], "n_y": [946, 947, 948, 989, 1264], "job": 949, "handi": 949, "out_dir": [949, 950], "out_fname_fun": [949, 950], "fpath": [951, 1821], "underli": [954, 1490, 1491, 1494, 1511, 1512, 1513, 1514, 1515, 1520, 1521, 1523, 1531, 1532, 1596, 1597, 1598, 1605, 1606, 1607, 1608, 1609, 1613, 1614, 1629, 1630, 1631, 1634, 1635, 1636, 1639, 1640, 1641, 1644, 1645, 1646, 1650, 1652, 1655, 1660, 1661, 1662, 1666, 1667, 1668, 1672, 1673, 1674, 1679, 1680, 1681, 1685, 1686, 1687, 1691, 1692, 1693, 1697, 1698, 1699, 1703, 1704, 1706, 1707], "fv": [954, 988, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "4f": [954, 998, 1000, 1004], "pointcalcul": [955, 956, 957, 1883, 1890], "states_mean": [955, 957], "weight_turbin": [955, 957, 975, 976, 977], "to_fil": [957, 975, 976, 977, 978, 979, 980], "write_var": 957, "write_par": [957, 975, 976, 977, 978, 979, 980], "write_nc": [957, 958, 961, 1821], "resultswrit": [958, 959, 960, 961, 1883, 1890], "state_turbine_t": 960, "roseplotoutput": [962, 963, 964, 965, 966, 967, 984, 1883, 1890, 1902], "rose": [962, 964, 966, 967, 984, 1005, 1134, 1138, 1151, 1152, 1883, 1884, 1889, 1890, 1891, 1895, 1897, 1902, 1906], "get_data_info": [962, 965, 984], "dname": [962, 965, 984], "descript": [962, 965, 984, 1121, 1122, 1125, 1130, 1171, 1174, 1182, 1265, 1269, 1291, 1292, 1293, 1298, 1315, 1318, 1320, 1328, 1396, 1398, 1869, 1870, 1878, 1879, 1880, 1887], "sector": [962, 964, 966, 967, 984, 1005, 1134, 1138, 1151, 1152, 1796, 1889, 1890, 1891, 1900, 1906], "var_bin": [962, 964, 966, 967, 984], "write_figur": [962, 967, 984], "start0": [964, 966], "bin": [964, 966, 967, 1005, 1134, 1138, 1151, 1152, 1264, 1265, 1266, 1389, 1441, 1884, 1890, 1892, 1895, 1906, 1907], "seper": [964, 966, 967], "relev": [964, 966, 1163, 1164, 1269, 1390, 1405, 1406, 1879, 1887, 1894], "degre": [964, 966, 1005, 1041, 1090, 1100, 1211, 1223, 1224, 1297, 1302, 1303, 1311, 1314, 1350, 1351, 1363, 1364, 1365, 1366, 1367, 1439, 1818, 1819, 1831, 1833, 1834, 1858, 1863, 1864, 1884, 1886, 1890, 1893, 1894, 1908], "minu": [964, 966, 1090, 1092], "width": [964, 966, 1005, 1121, 1123, 1136, 1137, 1139, 1141, 1151, 1152, 1161, 1182, 1265, 1271, 1273, 1297, 1302, 1314, 1320, 1328, 1345, 1359, 1389, 1398, 1399, 1403, 1405, 1416, 1417, 1890], "pd": [964, 966, 967, 1441, 1893, 1901, 1902, 1908], "long": [965, 1005, 1069, 1094, 1131, 1302, 1310, 1311, 1890], "text": [965, 1005, 1121, 1135, 1226, 1233, 1234, 1238, 1240, 1241, 1243, 1247, 1248, 1252, 1254, 1255, 1257, 1278, 1297, 1303, 1309, 1350, 1364, 1368, 1373, 1377, 1378, 1380, 1384, 1385, 1399, 1401, 1402, 1441], "rect": [966, 1005, 1170, 1271, 1273, 1902], "contour": [966, 989, 1005, 1145, 1151, 1405, 1406, 1890], "newli": [966, 1409, 1410], "rectangl": [966, 1005, 1128, 1129, 1132, 1133, 1137, 1140, 1193, 1264, 1271, 1272, 1320, 1327, 1331, 1335, 1401, 1896], "tabwindroseax": [966, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1884, 1890], "seqflowanimationplugin": [968, 969, 970, 971, 972, 1883, 1903], "yx": [968, 969], "gen_imag": [968, 970, 1903], "data_format": [975, 976, 977, 978, 979, 980], "xmin": [975, 976, 978, 979, 1005, 1128, 1129, 1130, 1133, 1140, 1264, 1266, 1267, 1292, 1374, 1389, 1397, 1399, 1894, 1896, 1897, 1899, 1903, 1908], "ymin": [975, 977, 978, 980, 1005, 1129, 1130, 1132, 1133, 1140, 1264, 1266, 1292, 1381, 1397, 1399, 1418, 1894, 1896, 1897, 1903, 1908], "xmax": [975, 976, 978, 979, 1005, 1128, 1129, 1130, 1133, 1264, 1266, 1267, 1292, 1374, 1389, 1397, 1894, 1896, 1897, 1899, 1903, 1905, 1908], "ymax": [975, 977, 978, 980, 1005, 1129, 1130, 1132, 1133, 1264, 1266, 1292, 1381, 1397, 1418, 1894, 1896, 1897, 1903, 1905, 1908], "xspace": [975, 976, 978, 979, 1894], "500": [975, 976, 977, 978, 979, 980, 1685, 1686, 1894, 1895, 1896, 1897, 1898, 1899, 1902, 1905, 1907], "yspace": [975, 977, 978, 980, 1894], "normalize_x": [975, 976, 977, 978, 979, 980], "normalize_i": [975, 976, 977, 978, 979, 980], "normalize_z": [975, 976, 977, 978, 979, 980], "normalize_v": [975, 976, 977, 978, 979, 980], "label_map": [975, 976, 977, 978, 979, 980], "states_isel": [975, 976, 977, 978, 979, 980], "ret_grid": [975, 976, 977, 978, 979, 980], "space": [975, 976, 977, 978, 979, 980, 1005, 1013, 1069, 1122, 1134, 1136, 1182, 1231, 1265, 1278, 1299, 1302, 1318, 1320, 1328, 1373, 1380, 1398, 1416, 1417, 1645, 1671, 1673, 1679, 1709, 1720, 1721, 1763, 1779, 1785, 1882, 1890], "grid_data": [975, 976, 977, 978, 979, 980], "x_po": [975, 976, 977, 978, 979, 980, 989], "y_po": [975, 976, 977, 978, 979, 980, 989], "z_po": [975, 976, 977, 978, 979, 980], "g_pt": [975, 976, 977, 978, 979, 980], "zmin": [976, 977, 979, 980, 1894, 1899, 1908], "zmax": [976, 977, 979, 980, 1894, 1899, 1908], "zspace": [976, 977, 979, 980], "stateturbinemap": [981, 982, 983, 1883, 1890, 1901], "heat": [981, 983, 1883, 1890], "plot_map": [981, 983, 1901], "subplot": [983, 988, 1005, 1195, 1220, 1273, 1277, 1280, 1360, 1893, 1894, 1895, 1897, 1901, 1903, 1904, 1905, 1906, 1907], "pcolormesh": [983, 1005, 1266, 1291, 1292, 1293], "statesroseplotoutput": [984, 985, 1883, 1890, 1895, 1897, 1899, 1902, 1906, 1907], "ws_var": [984, 985], "amb_rew": [984, 985, 998, 1000, 1825, 1867, 1868, 1886, 1894, 1896, 1897, 1901, 1903, 1904, 1905, 1906], "turbinetypecurv": [986, 987, 988, 1883, 1890, 1895, 1901], "plot_curv": [986, 988, 1895, 1901], "p_max": [986, 988, 1442, 1445, 1449, 1451, 1455, 1459, 1462, 1466, 1469, 1473, 1477, 1481, 1485, 1897, 1901], "x_label": 988, "y_label": 988, "ws_min": [988, 1902], "ws_max": [988, 1898, 1902], "30": [988, 1894, 1895, 1897, 1905, 1906, 1907, 1908], "ws_step": 988, "pmax_arg": 988, "mask": [988, 1136, 1265, 1281, 1291, 1293, 1302, 1309, 1312, 1313, 1405, 1406, 1407, 1408, 1889, 1890, 1891, 1902], "labl": 988, "flow_plots_2d": [989, 1890, 1893], "get_fig": [989, 1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744], "quiv": 989, "invert_axi": 989, "show_rotor_dict": 989, "x_y": 989, "invert": [989, 1005, 1013, 1022, 1032, 1048, 1058, 1069, 1074, 1160, 1239, 1253, 1274, 1275, 1302, 1442, 1444, 1449, 1451, 1454, 1459, 1466, 1473, 1476, 1481, 1484, 1884], "dbase": 990, "must": [992, 993, 1006, 1008, 1013, 1019, 1030, 1036, 1048, 1057, 1061, 1069, 1070, 1073, 1075, 1110, 1112, 1120, 1121, 1136, 1137, 1145, 1147, 1155, 1160, 1161, 1187, 1264, 1265, 1269, 1282, 1283, 1291, 1293, 1294, 1298, 1301, 1302, 1310, 1311, 1317, 1331, 1346, 1377, 1384, 1389, 1395, 1398, 1399, 1405, 1406, 1407, 1421, 1513, 1880, 1896], "py": [993, 1441], "file_man": 993, "keyerror": [996, 1441], "pandasfilehelp": [998, 999, 1000, 1001, 1002, 1003, 1004, 1884], "default_reading_paramet": [998, 1001], "default_writing_paramet": [998, 1002], "data_file_format": [998, 999], "export": 998, "default_format_dict": [998, 1000], "bz2": [998, 999, 1001, 1002], "gz": [998, 999, 1001, 1002, 1890, 1899, 1903, 1905, 1906, 1907], "zip": [998, 999, 1001, 1002, 1441], "h5": [998, 999, 1001, 1002], "mode": [998, 1002, 1005, 1110, 1134, 1138, 1151, 1152, 1389, 1395, 1421, 1903], "amb_cap": [998, 1000, 1822, 1867, 1868, 1886, 1906], "5f": [998, 1000], "amb_ct": [998, 1000, 1823, 1867, 1868, 1886, 1894, 1897, 1903, 1904, 1905], "6f": [998, 1000], "amb_p": [998, 1000, 1822, 1824, 1839, 1867, 1868, 1886, 1894, 1896, 1897, 1901, 1903, 1904, 1905, 1906], "3f": [998, 1000], "amb_rews2": [998, 1000, 1826, 1867, 1868, 1886, 1894, 1897, 1903, 1904, 1905], "amb_rews3": [998, 1000, 1827, 1867, 1868, 1886, 1894, 1897, 1903, 1904, 1905], "amb_rho": [998, 1000, 1828, 1867, 1868, 1886, 1894, 1897, 1903, 1904, 1905], "amb_t": [998, 1000, 1829, 1867, 1868, 1886], "amb_ti": [998, 1000, 1830, 1867, 1868, 1886, 1894, 1898, 1903, 1904, 1905], "amb_w": [998, 1000, 1832, 1867, 1868, 1886, 1895, 1897, 1899, 1902, 1904, 1906, 1907], "amb_yaw": [998, 1000, 1833, 1867, 1868, 1886, 1894, 1903, 1905], "amb_yld": [998, 1000, 1835, 1867, 1868, 1886, 1906], "cap": [998, 1000, 1137, 1139, 1141, 1160, 1401, 1836, 1867, 1868, 1886, 1906], "yld": [998, 1000, 1865, 1867, 1868, 1886, 1906], "read_fil": [998, 1003, 1794, 1812], "write_fil": [998, 1004], "windros": [1005, 1134, 1138, 1151, 1152, 1288, 1884, 1890], "windroseax": [1005, 1170, 1884, 1890], "stochast": [1005, 1884], "from_ax": [1005, 1170], "her": [1005, 1278], "adjust": [1005, 1078, 1084, 1100, 1103, 1122, 1130, 1135, 1139, 1141, 1171, 1269, 1273, 1314, 1315, 1320, 1328, 1390], "unset": [1005, 1314], "agg_filt": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1390, 1399, 1401], "set_radii_angl": [1005, 1347], "set_legend": [1005, 1339], "pyplot_argu": [1005, 1339], "draw": [1005, 1121, 1123, 1128, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1141, 1151, 1152, 1157, 1160, 1225, 1233, 1234, 1235, 1247, 1248, 1249, 1261, 1264, 1265, 1271, 1272, 1278, 1286, 1293, 1297, 1318, 1319, 1321, 1322, 1323, 1349, 1391, 1395, 1398, 1399, 1403, 1405, 1406, 1408, 1416, 1714, 1724, 1734, 1744], "segment": [1005, 1041, 1044, 1066, 1069, 1120, 1135, 1147, 1151, 1152, 1155, 1282, 1294, 1301, 1359, 1389], "center": [1005, 1120, 1121, 1134, 1135, 1136, 1137, 1138, 1147, 1151, 1152, 1155, 1161, 1226, 1233, 1234, 1247, 1248, 1264, 1265, 1269, 1282, 1291, 1293, 1294, 1297, 1301, 1318, 1320, 1359, 1368, 1373, 1380, 1389, 1399, 1401, 1405, 1406, 1416, 1417], "pylab": [1005, 1151, 1152], "command": [1005, 1151, 1152, 1203, 1341, 1346, 1349, 1441, 1443, 1453, 1461, 1468, 1475, 1483, 1884, 1892], "box": [1005, 1013, 1042, 1048, 1069, 1121, 1122, 1130, 1134, 1138, 1139, 1141, 1143, 1171, 1182, 1189, 1225, 1231, 1269, 1271, 1272, 1314, 1315, 1320, 1328, 1331, 1373, 1380, 1399, 1401, 1403], "proport": [1005, 1138, 1671, 1709], "get_xaxis_transform": [1005, 1235], "transform": [1005, 1013, 1017, 1018, 1019, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1051, 1053, 1054, 1055, 1056, 1057, 1058, 1061, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1111, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1227, 1228, 1233, 1234, 1235, 1247, 1248, 1249, 1261, 1264, 1271, 1273, 1276, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1310, 1311, 1314, 1331, 1345, 1369, 1390, 1398, 1399, 1401], "tick": [1005, 1078, 1080, 1085, 1088, 1090, 1091, 1094, 1095, 1099, 1100, 1101, 1137, 1139, 1141, 1181, 1231, 1235, 1240, 1241, 1243, 1244, 1245, 1249, 1254, 1255, 1257, 1258, 1259, 1277, 1280, 1281, 1283, 1284, 1285, 1286, 1299, 1304, 1325, 1326, 1327, 1350, 1364, 1373, 1377, 1378, 1380, 1384, 1385, 1403, 1404, 1409, 1410, 1416, 1417, 1419, 1422], "gridlin": [1005, 1181, 1235, 1249, 1327, 1350, 1364, 1403], "get_xaxis_text1_transform": [1005, 1233], "pad": [1005, 1120, 1135, 1147, 1155, 1233, 1234, 1247, 1248, 1282, 1283, 1294, 1301, 1368, 1375, 1382, 1389, 1403], "pad_point": [1005, 1233, 1234, 1247, 1248], "valign": [1005, 1233, 1234, 1247, 1248], "bottom": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1233, 1234, 1247, 1248, 1253, 1261, 1264, 1265, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1310, 1311, 1314, 1316, 1318, 1320, 1345, 1352, 1380, 1381, 1390, 1392, 1395, 1397, 1399, 1401, 1403, 1416, 1417, 1420, 1423], "baselin": [1005, 1137, 1233, 1234, 1247, 1248, 1368, 1377, 1384, 1391, 1392, 1395, 1401], "center_baselin": [1005, 1233, 1234, 1247, 1248, 1401], "halign": [1005, 1233, 1234, 1247, 1248], "left": [1005, 1048, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1226, 1233, 1234, 1239, 1247, 1248, 1261, 1264, 1265, 1269, 1271, 1272, 1273, 1278, 1282, 1284, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1310, 1311, 1314, 1316, 1318, 1320, 1345, 1368, 1373, 1374, 1380, 1381, 1389, 1390, 1396, 1399, 1401, 1403, 1404, 1405, 1406, 1420, 1423, 1905], "get_xaxis_text2_transform": [1005, 1234], "secondari": [1005, 1234, 1310, 1311], "get_yaxis_transform": [1005, 1249], "get_yaxis_text1_transform": [1005, 1247], "get_yaxis_text2_transform": [1005, 1248], "secondart": [1005, 1248], "render": [1005, 1121, 1139, 1141, 1157, 1225, 1231, 1266, 1269, 1292, 1293, 1314, 1320, 1324, 1404, 1416, 1417, 1897], "children": [1005, 1006, 1008, 1013, 1026, 1038, 1048, 1053, 1069, 1113, 1157, 1225], "set_thetamax": [1005, 1366], "thetamax": [1005, 1314, 1365, 1366], "maximum": [1005, 1025, 1048, 1139, 1223, 1280, 1365, 1366, 1398, 1405, 1406, 1416, 1417, 1671, 1709, 1890, 1893, 1907], "theta": [1005, 1013, 1069, 1090, 1100, 1106, 1121, 1166, 1211, 1221, 1223, 1224, 1351, 1361, 1363, 1364, 1365, 1366, 1367], "get_thetamax": [1005, 1223], "set_thetamin": [1005, 1367], "thetamin": [1005, 1314, 1365, 1367], "minimum": [1005, 1013, 1019, 1048, 1069, 1070, 1120, 1139, 1147, 1155, 1224, 1282, 1294, 1301, 1302, 1365, 1367, 1389, 1398, 1405, 1406, 1416, 1417, 1893], "get_thetamin": [1005, 1224], "set_thetalim": [1005, 1365], "set_theta_offset": [1005, 1362, 1363], "offset": [1005, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1222, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1314, 1316, 1362, 1363, 1368, 1389, 1390, 1399, 1401, 1404, 1890], "radian": [1005, 1013, 1041, 1048, 1069, 1090, 1120, 1222, 1294, 1311, 1362, 1363, 1364, 1365], "get_theta_offset": [1005, 1222], "set_theta_zero_loc": [1005, 1363], "set_theta_direct": [1005, 1361], "increas": [1005, 1120, 1147, 1155, 1221, 1236, 1250, 1282, 1294, 1301, 1302, 1361, 1389, 1395, 1396, 1398, 1405, 1406, 1420, 1423, 1887], "get_theta_direct": [1005, 1221], "set_rmax": [1005, 1353], "rmax": [1005, 1314, 1352, 1353], "outer": [1005, 1212, 1277, 1292, 1353, 1399, 1405, 1406, 1890, 1903], "get_rmax": [1005, 1212], "set_rmin": [1005, 1354], "rmin": [1005, 1314, 1352, 1354], "inner": [1005, 1213, 1354, 1399], "get_rmin": [1005, 1213], "set_rorigin": [1005, 1355], "rorigin": [1005, 1314, 1355], "get_rorigin": [1005, 1214], "get_rsign": [1005, 1215], "set_rlim": [1005, 1352], "emit": [1005, 1085, 1130, 1352, 1374, 1381], "get_rlabel_posit": [1005, 1211], "set_rlabel_posit": [1005, 1351], "set_yscal": [1005, 1281, 1313, 1383], "yaxi": [1005, 1154, 1169, 1179, 1246, 1251, 1254, 1255, 1256, 1257, 1258, 1259, 1299, 1311, 1323, 1380, 1383, 1384, 1385, 1410, 1422, 1423], "set_rscal": [1005, 1356], "set_rtick": [1005, 1357], "set_thetagrid": [1005, 1350, 1364], "fmt": [1005, 1135, 1160, 1281, 1297, 1298, 1299, 1312, 1313, 1350, 1364, 1396], "polar": [1005, 1013, 1048, 1069, 1121, 1142, 1143, 1160, 1188, 1273, 1350, 1364], "set_rgrid": [1005, 1350, 1364], "format_coord": [1005, 1166], "get_data_ratio": [1005, 1188], "aspect": [1005, 1122, 1123, 1171, 1174, 1176, 1182, 1188, 1269, 1284, 1297, 1308, 1314, 1315, 1318, 1320, 1328, 1345, 1390], "alwai": [1005, 1013, 1022, 1037, 1040, 1043, 1048, 1064, 1065, 1069, 1076, 1121, 1129, 1131, 1133, 1188, 1265, 1293, 1297, 1309, 1363, 1377, 1384, 1906], "can_zoom": [1005, 1143], "whether": [1005, 1013, 1023, 1024, 1041, 1048, 1069, 1121, 1126, 1130, 1136, 1139, 1141, 1142, 1143, 1147, 1149, 1150, 1155, 1171, 1175, 1178, 1179, 1181, 1185, 1193, 1202, 1203, 1209, 1243, 1257, 1261, 1262, 1263, 1269, 1270, 1273, 1276, 1278, 1287, 1291, 1292, 1293, 1296, 1301, 1305, 1309, 1319, 1321, 1322, 1323, 1327, 1330, 1335, 1340, 1341, 1344, 1374, 1381, 1389, 1390, 1392, 1393, 1403, 1404, 1412, 1414, 1420, 1423], "zoom": [1005, 1142, 1143, 1204, 1302, 1350, 1364, 1377, 1384], "button": [1005, 1142, 1143, 1156, 1159, 1204, 1342, 1394], "can_pan": [1005, 1142], "pan": [1005, 1142, 1156, 1159, 1204, 1350, 1364, 1377, 1384, 1394], "start_pan": [1005, 1394], "end_pan": [1005, 1159], "complet": [1005, 1159, 1264, 1266, 1269, 1291, 1292, 1293, 1302, 1309, 1405, 1406, 1890, 1894, 1895, 1898, 1899, 1902, 1905, 1906, 1907], "mous": [1005, 1149, 1156, 1159, 1187, 1202, 1287, 1340, 1344, 1394], "drag_pan": [1005, 1156], "move": [1005, 1156, 1187, 1202, 1287, 1340, 1359, 1377, 1384, 1890, 1897, 1903], "get_titl": [1005, 1226], "set_titl": [1005, 1368, 1893, 1894], "fontdict": [1005, 1368, 1373, 1377, 1380, 1384, 1401], "get_legend_handles_label": [1005, 1200], "legend_handler_map": [1005, 1200], "inset_ax": [1005, 1113, 1271, 1272, 1273], "zorder": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1147, 1155, 1160, 1163, 1164, 1208, 1260, 1261, 1264, 1271, 1273, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1327, 1348, 1386, 1390, 1398, 1399, 1401, 1403, 1424, 1897], "child": [1005, 1113, 1183, 1273, 1295], "inset": [1005, 1271, 1272, 1273], "indicate_inset": [1005, 1271, 1272], "connect": [1005, 1121, 1160, 1163, 1164, 1271, 1272, 1298, 1302], "indicate_inset_zoom": [1005, 1272], "connector": [1005, 1271, 1272], "secondary_xaxi": [1005, 1310], "secondary_yaxi": [1005, 1311], "xytext": [1005, 1121, 1123], "xycoord": [1005, 1121], "axhlin": [1005, 1110, 1128, 1131, 1267, 1421], "across": [1005, 1128, 1129, 1132, 1133, 1267, 1398, 1418], "axvlin": [1005, 1131, 1132, 1418], "axlin": [1005, 1128, 1131, 1132], "xy1": [1005, 1131], "xy2": [1005, 1131], "slope": [1005, 1128, 1131, 1132, 1391], "infinit": [1005, 1131, 1893], "straight": [1005, 1131, 1269, 1298, 1894], "axhspan": [1005, 1128, 1129, 1133], "span": [1005, 1100, 1128, 1129, 1132, 1133, 1139, 1141], "axvspan": [1005, 1129, 1132, 1133], "hline": [1005, 1128, 1267, 1298, 1418], "linestyl": [1005, 1110, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1267, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1346, 1390, 1395, 1396, 1405, 1418, 1421, 1893, 1894], "solid": [1005, 1161, 1267, 1291, 1293, 1298, 1395, 1405, 1418], "vline": [1005, 1110, 1132, 1267, 1298, 1418, 1421], "eventplot": [1005, 1161], "lineoffset": [1005, 1161], "scalex": [1005, 1126, 1298], "scalei": [1005, 1126, 1298], "versu": [1005, 1160, 1298], "marker": [1005, 1110, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1309, 1327, 1346, 1390, 1395, 1396, 1408, 1421], "plot_dat": [1005, 1299], "o": [1005, 1110, 1123, 1129, 1133, 1136, 1137, 1139, 1140, 1163, 1164, 1264, 1271, 1291, 1293, 1298, 1299, 1302, 1346, 1395, 1421, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1904, 1905, 1906, 1907, 1908], "tz": [1005, 1299, 1419, 1422], "xdate": [1005, 1299], "ydate": [1005, 1299], "discourag": [1005, 1346, 1405, 1406, 1407], "coerc": [1005, 1299], "date": [1005, 1085, 1161, 1299, 1419, 1422, 1895], "loglog": [1005, 1131, 1281], "semilogx": [1005, 1312], "semilogi": [1005, 1313], "acorr": [1005, 1110], "autocorrel": [1005, 1110], "xcorr": [1005, 1421], "norm": [1005, 1110, 1136, 1140, 1163, 1164, 1264, 1266, 1269, 1291, 1292, 1293, 1302, 1309, 1398, 1405, 1406, 1407, 1421, 1671, 1709], "detrend": [1005, 1110, 1147, 1155, 1301, 1389, 1421], "detrend_non": [1005, 1110, 1147, 1155, 1301, 1389, 1421], "cross": [1005, 1110, 1147, 1155, 1163, 1164, 1346, 1397, 1421, 1905, 1908], "barh": [1005, 1135, 1137, 1265], "bar_label": [1005, 1135], "broken_barh": [1005, 1140], "xrang": [1005, 1128, 1140], "yrang": [1005, 1132, 1133, 1140], "sequenc": [1005, 1006, 1047, 1120, 1128, 1131, 1132, 1134, 1136, 1137, 1138, 1139, 1140, 1141, 1147, 1151, 1152, 1155, 1160, 1161, 1162, 1261, 1264, 1265, 1281, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1377, 1384, 1389, 1390, 1391, 1396, 1405, 1406, 1417], "stem": [1005, 1123, 1395, 1900], "linefmt": [1005, 1395], "markerfmt": [1005, 1395], "basefmt": [1005, 1395], "pie": [1005, 1297], "explod": [1005, 1297], "autopct": [1005, 1297], "chart": [1005, 1265, 1297, 1298], "errorbar": [1005, 1135, 1137, 1160], "yerr": [1005, 1137, 1160], "xerr": [1005, 1137, 1160], "ecolor": [1005, 1137, 1160], "attach": [1005, 1121, 1137, 1160, 1264], "boxplot": [1005, 1139, 1141], "notch": [1005, 1139, 1141], "sym": [1005, 1139, 1391], "vert": [1005, 1136, 1139, 1140, 1141, 1163, 1164, 1264, 1291, 1302, 1416, 1417], "whi": [1005, 1139], "whisker": [1005, 1139, 1141], "bxp": [1005, 1141], "bxpstat": [1005, 1141], "vari": [1005, 1298, 1309, 1398, 1890, 1893, 1895, 1899], "hexbin": [1005, 1264, 1265, 1266], "gridsiz": [1005, 1264], "xscale": [1005, 1264, 1314], "hexagon": [1005, 1264, 1265, 1266, 1302], "arrow": [1005, 1121, 1123, 1136, 1160, 1302, 1303, 1398], "dy": [1005, 1123], "quiverkei": [1005, 1302, 1303], "q": [1005, 1303, 1671, 1709], "u": [1005, 1090, 1092, 1136, 1302, 1303, 1398, 1671, 1709, 1817, 1818, 1897], "barb": [1005, 1136], "polygon": [1005, 1129, 1133, 1136, 1162, 1163, 1164, 1265, 1293, 1302, 1466, 1467, 1795, 1884, 1897], "fill_between": [1005, 1162, 1163, 1164, 1391], "y1": [1005, 1163, 1298, 1391, 1405, 1406], "y2": [1005, 1162, 1163, 1281, 1298, 1312, 1313, 1391, 1396], "fill_betweenx": [1005, 1163, 1164], "x1": [1005, 1164, 1265, 1298, 1405, 1406], "x2": [1005, 1162, 1164, 1281, 1298, 1312, 1313, 1396], "imshow": [1005, 1266, 1269, 1284, 1291, 1293, 1389, 1390, 1398, 1405, 1406], "displai": [1005, 1121, 1135, 1156, 1187, 1231, 1264, 1265, 1266, 1269, 1270, 1284, 1286, 1320, 1338, 1350, 1364, 1377, 1384, 1394, 1906, 1907], "raster": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1208, 1209, 1261, 1264, 1269, 1271, 1282, 1284, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1348, 1349, 1390, 1399, 1401], "pcolor": [1005, 1283, 1291, 1292, 1293, 1407], "shade": [1005, 1291, 1292, 1293, 1407], "pseudocolor": [1005, 1269, 1291, 1292, 1293, 1407], "rectangular": [1005, 1139, 1264, 1265, 1291, 1292, 1293, 1401], "pcolorfast": [1005, 1292], "clabel": [1005, 1145], "hist": [1005, 1265, 1266], "histogram": [1005, 1264, 1265, 1266, 1397, 1890], "stair": [1005, 1265, 1392, 1396], "edg": [1005, 1048, 1121, 1134, 1135, 1137, 1138, 1139, 1160, 1163, 1164, 1226, 1264, 1265, 1266, 1278, 1291, 1292, 1293, 1302, 1303, 1309, 1320, 1368, 1392, 1396, 1397, 1399, 1405, 1406, 1408], "stepwis": [1005, 1392], "hist2d": [1005, 1264, 1265, 1266], "psd": [1005, 1155, 1282, 1301, 1389], "nfft": [1005, 1120, 1147, 1155, 1282, 1294, 1301, 1389], "window": [1005, 1120, 1147, 1155, 1187, 1282, 1294, 1301, 1389, 1890], "spectral": [1005, 1147, 1155, 1282, 1301, 1389], "csd": [1005, 1155, 1301], "magnitude_spectrum": [1005, 1120, 1282, 1294, 1301, 1389], "magnitud": [1005, 1120, 1136, 1282, 1294, 1301, 1389, 1404], "spectrum": [1005, 1120, 1147, 1155, 1282, 1294, 1301, 1389], "angle_spectrum": [1005, 1120, 1282, 1294, 1389], "pad_to": [1005, 1120, 1147, 1155, 1282, 1294, 1301, 1389], "phase_spectrum": [1005, 1120, 1282, 1294, 1389], "phase": [1005, 1120, 1282, 1294, 1389], "coher": [1005, 1147], "256": [1005, 1147, 1155, 1301, 1389, 1901], "specgram": [1005, 1120, 1282, 1294, 1301, 1389], "spectrogram": [1005, 1389], "spy": [1005, 1390], "precis": [1005, 1163, 1164, 1390, 1671, 1709], "markers": [1005, 1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1309, 1390], "sparsiti": [1005, 1390], "matshow": [1005, 1269, 1284], "matrix": [1005, 1013, 1018, 1028, 1048, 1049, 1055, 1062, 1069, 1269, 1284, 1291, 1293, 1671, 1709], "violinplot": [1005, 1139, 1416, 1417], "violin": [1005, 1416, 1417], "vpstat": [1005, 1416], "celltext": [1005, 1399], "cellcolour": [1005, 1399], "cellloc": [1005, 1399], "stackplot": [1005, 1391], "stack": [1005, 1135, 1137, 1265, 1391], "streamplot": [1005, 1398], "linewidth": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1346, 1390, 1398, 1405], "tricontour": [1005, 1405], "unstructur": [1005, 1405, 1406, 1407, 1408], "triangular": [1005, 1123, 1405, 1406, 1407, 1408], "tricontourf": [1005, 1406], "tripcolor": [1005, 1407], "triplot": [1005, 1408], "__init_subclass__": [1005, 1013, 1020, 1048, 1069, 1107], "subclass": [1005, 1013, 1020, 1030, 1036, 1048, 1057, 1060, 1061, 1069, 1073, 1075, 1089, 1105, 1107, 1121, 1149, 1157, 1165, 1167, 1187, 1225, 1264, 1266, 1269, 1273, 1291, 1292, 1293, 1309, 1310, 1311, 1405, 1406], "get_subplotspec": [1005, 1220], "subplotspec": [1005, 1220, 1314, 1360], "associ": [1005, 1013, 1019, 1069, 1070, 1088, 1112, 1136, 1167, 1195, 1220, 1265, 1269, 1360, 1896], "set_subplotspec": [1005, 1360], "get_gridspec": [1005, 1195], "gridspec": [1005, 1195], "get_window_ext": [1005, 1225, 1231], "empti": [1005, 1136, 1139, 1231, 1298], "set_figur": [1005, 1334], "instanc": [1005, 1006, 1008, 1013, 1025, 1048, 1060, 1069, 1088, 1126, 1127, 1134, 1135, 1138, 1139, 1141, 1145, 1151, 1152, 1160, 1165, 1192, 1199, 1227, 1232, 1246, 1264, 1266, 1269, 1273, 1291, 1292, 1293, 1297, 1299, 1305, 1309, 1329, 1334, 1350, 1364, 1368, 1377, 1384, 1390, 1391, 1401, 1405, 1406, 1409, 1410, 1416, 1417, 1896, 1905], "belong": [1005, 1192, 1334], "viewlim": [1005, 1415], "get_posit": [1005, 1122, 1207], "bbox": [1005, 1013, 1042, 1048, 1069, 1120, 1121, 1122, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1207, 1225, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1318, 1324, 1329, 1345, 1390, 1399, 1401, 1412], "set_posit": [1005, 1207, 1308, 1345], "po": [1005, 1090, 1091, 1345], "reset_posit": [1005, 1308], "activ": [1005, 1207, 1297, 1308, 1318, 1345, 1892], "set_axes_loc": [1005, 1324], "get_axes_loc": [1005, 1180], "axes_loc": [1005, 1180, 1314], "sharex": [1005, 1387, 1893, 1894], "share": [1005, 1160, 1216, 1217, 1315, 1318, 1320, 1387, 1388, 1409, 1410], "sharei": [1005, 1388, 1893, 1894], "cla": [1005, 1144], "patch": [1005, 1118, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1139, 1140, 1141, 1147, 1150, 1155, 1160, 1162, 1163, 1164, 1193, 1261, 1264, 1265, 1271, 1272, 1282, 1289, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1314, 1327, 1331, 1335, 1344, 1390, 1392, 1398, 1399, 1401], "get_facecolor": [1005, 1190, 1191], "facecolor": [1005, 1123, 1129, 1133, 1136, 1137, 1140, 1163, 1164, 1190, 1264, 1271, 1291, 1293, 1302, 1309, 1314, 1332, 1401, 1407], "set_facecolor": [1005, 1332, 1333], "set_prop_cycl": [1005, 1346], "cycl": [1005, 1120, 1140, 1147, 1155, 1162, 1282, 1294, 1297, 1298, 1301, 1309, 1346, 1389, 1391, 1395, 1405, 1406], "get_aspect": [1005, 1176], "set_aspect": [1005, 1122, 1130, 1171, 1174, 1182, 1269, 1297, 1315, 1318, 1320, 1328, 1345, 1390], "anchor": [1005, 1013, 1041, 1048, 1069, 1130, 1136, 1174, 1302, 1314, 1318, 1320, 1401], "get_adjust": [1005, 1122, 1171], "physic": [1005, 1171, 1315, 1328], "datalim": [1005, 1111, 1130, 1171, 1262, 1314, 1315, 1320, 1328, 1412], "achiev": [1005, 1122, 1130, 1137, 1171, 1292, 1315, 1320, 1903], "desir": [1005, 1171, 1283, 1306, 1906, 1908], "set_adjust": [1005, 1122, 1171, 1315, 1320, 1328], "how": [1005, 1122, 1136, 1139, 1171, 1302, 1315, 1320, 1889, 1890, 1891, 1894, 1901, 1906, 1907], "get_box_aspect": [1005, 1182], "set_box_aspect": [1005, 1182, 1328], "get_anchor": [1005, 1122, 1174], "set_anchor": [1005, 1122, 1174, 1318, 1320], "apply_aspect": [1005, 1122], "conveni": [1005, 1125, 1130, 1284, 1298, 1346, 1892, 1904], "get_legend": [1005, 1199], "get_imag": [1005, 1196], "axesimag": [1005, 1116, 1187, 1196, 1269, 1284, 1292, 1389, 1390], "get_lin": [1005, 1201], "get_xaxi": [1005, 1232], "xaxi": [1005, 1153, 1168, 1178, 1232, 1237, 1240, 1241, 1242, 1243, 1244, 1245, 1299, 1310, 1322, 1373, 1376, 1377, 1378, 1409, 1419, 1420], "get_yaxi": [1005, 1246], "get_xgridlin": [1005, 1237], "line2d": [1005, 1110, 1117, 1120, 1128, 1131, 1132, 1139, 1141, 1147, 1155, 1160, 1165, 1237, 1244, 1251, 1258, 1261, 1281, 1282, 1294, 1298, 1299, 1301, 1312, 1313, 1350, 1364, 1390, 1395, 1396, 1403, 1408, 1421], "get_xticklin": [1005, 1244], "minor": [1005, 1241, 1243, 1244, 1245, 1255, 1257, 1258, 1259, 1261, 1281, 1285, 1286, 1312, 1313, 1377, 1378, 1384, 1385, 1403], "get_ygridlin": [1005, 1251], "get_yticklin": [1005, 1258], "add_artist": [1005, 1111], "add_child_ax": [1005, 1113], "axesbas": [1005, 1113], "add_collect": [1005, 1114], "autolim": [1005, 1114, 1306], "add_imag": [1005, 1116], "add_lin": [1005, 1117], "add_patch": [1005, 1118], "add_tabl": [1005, 1119, 1399], "add_contain": [1005, 1115], "relim": [1005, 1126, 1305, 1306], "visible_onli": [1005, 1305], "recomput": [1005, 1305], "update_datalim": [1005, 1111, 1412], "updatex": [1005, 1412], "updatei": [1005, 1412], "in_ax": [1005, 1270], "mouseev": [1005, 1149, 1187, 1270, 1295, 1344], "event": [1005, 1120, 1128, 1131, 1132, 1147, 1149, 1155, 1160, 1161, 1187, 1261, 1270, 1282, 1294, 1295, 1298, 1299, 1301, 1344, 1390, 1409, 1410], "get_autoscalex_on": [1005, 1178, 1372], "autosc": [1005, 1084, 1103, 1111, 1125, 1126, 1130, 1177, 1178, 1179, 1265, 1280, 1283, 1302, 1321, 1322, 1323, 1372, 1374, 1375, 1379, 1381, 1382, 1397, 1414], "get_autoscaley_on": [1005, 1179, 1379], "set_autoscalex_on": [1005, 1322], "autoscale_view": [1005, 1125, 1126, 1280, 1283, 1298, 1321, 1322, 1323, 1414], "set_autoscaley_on": [1005, 1323], "get_autoscale_on": [1005, 1177], "set_autoscale_on": [1005, 1321], "use_sticky_edg": [1005, 1283, 1414], "obei": [1005, 1414], "sticky_edg": [1005, 1397, 1414], "set_xmargin": [1005, 1375], "prior": [1005, 1126, 1375, 1382], "set_ymargin": [1005, 1382], "margin": [1005, 1125, 1126, 1264, 1283, 1375, 1382, 1397, 1414], "tight": [1005, 1125, 1126, 1130, 1197, 1225, 1280, 1283, 1337], "retriev": [1005, 1283], "set_rasterization_zord": [1005, 1348], "threshold": [1005, 1348], "graphic": [1005, 1293, 1348, 1349], "get_rasterization_zord": [1005, 1208], "autoscal": [1005, 1125, 1126, 1409, 1410, 1414], "enabl": [1005, 1090, 1092, 1125, 1139, 1141, 1344, 1349, 1405, 1406, 1891], "toggl": [1005, 1125, 1261, 1416, 1417], "draw_artist": [1005, 1158, 1319], "redraw": [1005, 1158, 1304], "redraw_in_fram": [1005, 1304], "get_renderer_cach": [1005, 1210], "deprec": [1005, 1006, 1008, 1210, 1291, 1293, 1299, 1395], "get_frame_on": [1005, 1193], "drawn": [1005, 1121, 1122, 1123, 1136, 1139, 1140, 1160, 1193, 1261, 1264, 1265, 1271, 1272, 1293, 1297, 1298, 1302, 1309, 1315, 1320, 1335, 1345, 1386, 1392, 1393, 1398, 1399, 1405, 1406, 1408], "set_frame_on": [1005, 1335], "get_axisbelow": [1005, 1181, 1327], "set_axisbelow": [1005, 1181, 1261, 1327], "visibl": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1157, 1160, 1163, 1164, 1189, 1230, 1245, 1259, 1261, 1264, 1271, 1272, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1306, 1314, 1330, 1371, 1377, 1378, 1384, 1385, 1390, 1399, 1401, 1894], "major": [1005, 1126, 1168, 1169, 1240, 1243, 1245, 1254, 1257, 1259, 1261, 1280, 1377, 1378, 1384, 1385, 1403, 1404], "configur": [1005, 1261, 1399, 1404], "ticklabel_format": [1005, 1404], "style": [1005, 1110, 1120, 1121, 1126, 1128, 1131, 1132, 1135, 1137, 1139, 1147, 1155, 1160, 1161, 1261, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1309, 1346, 1390, 1395, 1396, 1398, 1401, 1403, 1404, 1421, 1890], "scilimit": [1005, 1404], "scalarformatt": [1005, 1350, 1404], "locator_param": [1005, 1280], "behavior": [1005, 1125, 1131, 1136, 1139, 1206, 1280, 1302, 1344, 1359, 1395], "tick_param": [1005, 1378, 1385, 1403], "set_axis_off": [1005, 1325], "turn": [1005, 1125, 1130, 1286, 1325, 1326, 1374, 1381], "off": [1005, 1120, 1123, 1125, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1147, 1155, 1160, 1161, 1261, 1271, 1282, 1286, 1294, 1298, 1299, 1301, 1325, 1344, 1374, 1381, 1390, 1894, 1897, 1902], "set_axis_on": [1005, 1326], "get_xlabel": [1005, 1238], "set_xlabel": [1005, 1373, 1893, 1894, 1904], "labelpad": [1005, 1373, 1380], "invert_xaxi": [1005, 1236, 1239, 1274, 1372, 1374], "xaxis_invert": [1005, 1236, 1239, 1274, 1372, 1374, 1420], "invers": [1005, 1013, 1022, 1029, 1032, 1048, 1056, 1058, 1069, 1072, 1074, 1302, 1310, 1311, 1372, 1379, 1420, 1423, 1442, 1444, 1449, 1451, 1454, 1459, 1466, 1473, 1476, 1481, 1484, 1671, 1709, 1908], "get_xbound": [1005, 1236, 1239, 1274, 1372, 1374], "set_xbound": [1005, 1236, 1239, 1274, 1372, 1374], "get_xlim": [1005, 1236, 1239, 1274, 1372, 1374], "set_xlim": [1005, 1126, 1129, 1130, 1160, 1236, 1239, 1274, 1372, 1374], "get_xscal": [1005, 1242], "set_xscal": [1005, 1281, 1312, 1376], "get_xtick": [1005, 1245], "set_xtick": [1005, 1377, 1378], "get_xmajorticklabel": [1005, 1240], "get_xminorticklabel": [1005, 1241], "get_xticklabel": [1005, 1243], "set_xticklabel": [1005, 1377], "get_ylabel": [1005, 1252], "set_ylabel": [1005, 1380, 1893, 1894, 1904], "invert_yaxi": [1005, 1250, 1253, 1275, 1379, 1381], "yaxis_invert": [1005, 1250, 1253, 1275, 1379, 1381, 1423], "get_ybound": [1005, 1250, 1253, 1275, 1379, 1381], "set_ybound": [1005, 1250, 1253, 1275, 1379, 1381], "get_ylim": [1005, 1250, 1253, 1275, 1379, 1381], "set_ylim": [1005, 1130, 1133, 1160, 1250, 1253, 1275, 1352, 1379, 1381], "get_yscal": [1005, 1256], "get_ytick": [1005, 1259], "set_ytick": [1005, 1384, 1385], "get_ymajorticklabel": [1005, 1254], "get_yminorticklabel": [1005, 1255], "get_yticklabel": [1005, 1257], "set_yticklabel": [1005, 1384], "xaxis_d": [1005, 1419], "yaxis_d": [1005, 1422], "format_xdata": [1005, 1168], "format_ydata": [1005, 1169], "minorticks_on": [1005, 1286], "minorticks_off": [1005, 1285, 1286], "get_navig": [1005, 1203], "respond": [1005, 1203, 1341], "navig": [1005, 1203, 1204, 1314, 1341, 1342], "set_navig": [1005, 1341], "toolbar": [1005, 1204, 1341, 1342], "get_navigate_mod": [1005, 1204], "statu": [1005, 1187, 1204, 1342, 1906], "set_navigate_mod": [1005, 1342], "get_children": [1005, 1183], "contains_point": [1005, 1150], "pixel": [1005, 1121, 1150, 1225, 1264, 1269, 1291, 1292, 1293, 1298, 1302, 1348, 1349, 1358, 1359, 1390, 1405, 1406], "insid": [1005, 1150, 1278, 1297, 1403, 1442, 1448, 1449, 1451, 1458, 1459, 1465, 1466, 1472, 1473, 1474, 1480, 1481, 1488, 1490, 1491, 1511, 1880, 1896], "get_default_bbox_extra_artist": [1005, 1189], "get_tightbbox": [1005, 1225, 1231], "call_axes_loc": [1005, 1225], "decor": [1005, 1225, 1368], "twinx": [1005, 1409], "twin": [1005, 1315, 1409, 1410], "twini": [1005, 1410], "get_shared_x_ax": [1005, 1216], "immut": [1005, 1006, 1216, 1217], "grouper": [1005, 1216, 1217], "get_shared_y_ax": [1005, 1217], "label_out": [1005, 1277], "show": [1005, 1110, 1130, 1134, 1136, 1138, 1139, 1141, 1151, 1152, 1161, 1261, 1277, 1284, 1310, 1421, 1797, 1798, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1906, 1907, 1908], "get_fc": [1005, 1191], "set_fc": [1005, 1333], "possibl": [1005, 1130, 1135, 1206, 1264, 1265, 1291, 1293, 1306, 1309, 1320, 1327, 1350, 1359, 1364, 1365, 1377, 1384, 1405, 1406, 1407, 1490, 1493, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1671, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1709, 1902], "have_unit": [1005, 1263], "convert_xunit": [1005, 1153], "convert_yunit": [1005, 1154], "resid": [1005, 1127], "stale": [1005, 1393], "re": [1005, 1393, 1901, 1905], "match": [1005, 1136, 1139, 1141, 1161, 1165, 1265, 1269, 1283, 1302, 1309, 1377, 1384, 1393, 1398, 1407, 1416, 1417, 1671, 1709], "intern": [1005, 1264, 1290, 1292, 1293, 1302, 1393, 1405, 1406, 1880, 1891], "add_callback": [1005, 1112, 1290, 1307], "callback": [1005, 1112, 1290, 1307], "whenev": [1005, 1112, 1892, 1903], "remove_callback": [1005, 1112, 1290, 1307], "oid": [1005, 1307], "observ": [1005, 1112, 1130, 1136, 1307, 1374, 1381, 1671, 1709, 1894], "pchang": [1005, 1290], "regist": [1005, 1264, 1266, 1269, 1290, 1291, 1292, 1293, 1309, 1376, 1383, 1405, 1406], "is_transform_set": [1005, 1276], "explicitli": [1005, 1182, 1266, 1269, 1276, 1302, 1319, 1346, 1377, 1378, 1384, 1385, 1390, 1403, 1405, 1406, 1890], "set_transform": [1005, 1276, 1369], "get_transform": [1005, 1111, 1227], "pickabl": [1005, 1206, 1295, 1296], "process": [1005, 1295, 1798, 1900], "set_pick": [1005, 1206, 1295, 1296, 1344], "picker": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1295, 1298, 1299, 1301, 1302, 1314, 1344, 1390, 1399, 1401], "get_pick": [1005, 1206, 1295, 1296], "get_url": [1005, 1229], "url": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1229, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1370, 1390, 1399, 1401, 1888], "set_url": [1005, 1269, 1370], "get_gid": [1005, 1194], "group": [1005, 1161, 1162, 1194, 1298, 1336, 1403, 1407], "set_gid": [1005, 1336], "gid": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1336, 1390, 1399, 1401], "get_snap": [1005, 1219], "snap": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1219, 1261, 1264, 1271, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1359, 1390, 1399, 1401], "set_snap": [1005, 1219, 1359], "get_sketch_param": [1005, 1218], "sketch": [1005, 1218, 1358], "set_sketch_param": [1005, 1358], "set_path_effect": [1005, 1343], "path_effect": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1343, 1390, 1399, 1401], "get_path_effect": [1005, 1205], "set_clip_box": [1005, 1329], "clipbox": [1005, 1184, 1329], "set_clip_path": [1005, 1331], "get_alpha": [1005, 1173], "blend": [1005, 1024, 1161, 1173, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1317, 1405, 1406], "backend": [1005, 1173, 1269, 1292, 1317, 1358, 1359, 1406], "get_vis": [1005, 1157, 1230], "get_anim": [1005, 1175], "get_in_layout": [1005, 1197], "get_clip_on": [1005, 1185], "get_clip_box": [1005, 1184], "get_clip_path": [1005, 1186], "get_transformed_clip_path_and_affin": [1005, 1228], "affin": [1005, 1013, 1018, 1027, 1028, 1040, 1043, 1045, 1046, 1048, 1049, 1054, 1055, 1064, 1065, 1067, 1068, 1069, 1076, 1077, 1228], "remain": [1005, 1135, 1163, 1164, 1228, 1265, 1280, 1283, 1390, 1403], "set_clip_on": [1005, 1330], "get_raster": [1005, 1209], "set_raster": [1005, 1349], "bitmap": [1005, 1349], "get_agg_filt": [1005, 1172], "filter": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1165, 1172, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1316, 1358, 1389, 1390, 1399, 1401, 1441], "agg": [1005, 1172, 1292, 1316, 1359, 1406], "set_agg_filt": [1005, 1316], "filter_func": [1005, 1316], "set_alpha": [1005, 1317], "set_vis": [1005, 1371], "set_anim": [1005, 1319], "set_in_layout": [1005, 1189, 1225, 1337], "in_layout": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1337, 1390, 1399, 1401], "tutori": [1005, 1197, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1319, 1337, 1405, 1406], "intermedi": [1005, 1197, 1269, 1292, 1337], "constrainedlayout_guid": [1005, 1197, 1337], "tight_layout": [1005, 1197, 1337, 1894], "savefig": [1005, 1197, 1337], "bbox_inch": [1005, 1197, 1337], "get_label": [1005, 1198], "set_label": [1005, 1338], "get_zord": [1005, 1260], "set_zord": [1005, 1261, 1386], "sticki": [1005, 1283, 1397], "update_from": [1005, 1413], "prop": [1005, 1278, 1344, 1411], "findobj": [1005, 1165], "include_self": [1005, 1165], "find": [1005, 1165, 1671, 1709, 1869, 1876, 1890], "get_cursor_data": [1005, 1167, 1187, 1340], "cursor": [1005, 1187, 1202, 1287, 1340], "format_cursor_data": [1005, 1167, 1187], "represent": [1005, 1090, 1093, 1167, 1187, 1269], "get_mouseov": [1005, 1202], "queri": [1005, 1202, 1287, 1340], "custom": [1005, 1006, 1010, 1136, 1147, 1155, 1202, 1273, 1287, 1299, 1301, 1340, 1376, 1383, 1389], "inform": [1005, 1085, 1136, 1187, 1202, 1287, 1309, 1327, 1340, 1441, 1900, 1904, 1906], "set_mouseov": [1005, 1340], "mouseov": [1005, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1287, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1340, 1390, 1399, 1401], "polartransform": [1005, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077], "polaraffin": [1005, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068], "affine2dbas": [1005, 1048], "project": [1005, 1048, 1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1156, 1159, 1160, 1163, 1164, 1233, 1234, 1235, 1247, 1248, 1249, 1261, 1264, 1271, 1273, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1364, 1390, 1394, 1891], "invertedpolartransform": [1005, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047], "cartesian": [1005, 1013, 1019, 1069, 1070], "back": [1005, 1013, 1085, 1123, 1168, 1169, 1302, 1405, 1896], "thetaformatt": [1005, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1364], "ticker": [1005, 1078, 1090, 1100, 1280, 1299, 1350, 1364, 1377, 1378, 1384, 1385, 1405, 1406, 1409, 1410], "symbol": [1005, 1090, 1092, 1139, 1160, 1302], "radialloc": [1005, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089], "thetaloc": [1005, 1100, 1101, 1102, 1103, 1104, 1105], "artistlist": [1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012], "sublist": [1005, 1006, 1008], "were": [1006, 1161, 1218, 1416, 1557, 1890, 1900, 1907, 1908], "futur": [1006, 1160, 1299, 1346, 1398], "replac": [1006, 1090, 1092, 1378, 1385, 1890, 1892], "alreadi": [1006, 1013, 1037, 1048, 1069, 1265, 1299, 1346, 1387, 1388, 1405, 1406, 1407, 1408, 1899, 1904], "prop_nam": [1006, 1008], "valid_typ": [1006, 1008], "invalid_typ": [1006, 1008], "pull": [1006, 1008, 1891], "access": [1006, 1008, 1232, 1246, 1298, 1877], "unspecifi": [1006, 1008, 1090, 1091, 1093, 1391], "unless": [1006, 1008, 1110, 1120, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1167, 1182, 1264, 1265, 1266, 1267, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1299, 1301, 1302, 1309, 1345, 1389, 1391, 1392, 1395, 1398, 1403, 1405, 1417, 1418, 1421], "never": [1006, 1008], "exclud": [1006, 1008, 1163, 1164, 1189, 1265, 1305, 1319, 1890], "present": [1006, 1012, 1136, 1305, 1374, 1390, 1901], "count": [1006, 1011, 1123, 1161, 1264, 1265, 1266, 1607, 1608, 1890], "occurr": [1006, 1011, 1134, 1138, 1151, 1152], "__subclasshook__": [1006, 1010], "overrid": [1006, 1010, 1089, 1105, 1136, 1187, 1243, 1257, 1303, 1399, 1401, 1405, 1406], "issubclass": [1006, 1010, 1441], "earli": 1010, "abcmeta": 1010, "__subclasscheck__": 1010, "notimpl": [1010, 1441], "outcom": 1010, "cach": [1010, 1042], "stop": 1012, "recommend": [1012, 1139, 1141, 1396, 1892, 1896], "input_dim": [1013, 1030, 1039, 1040, 1043, 1047, 1048, 1057, 1063, 1064, 1065, 1069, 1073, 1076], "overridden": [1013, 1020, 1030, 1036, 1048, 1057, 1061, 1069, 1073, 1075, 1107, 1139, 1156, 1157, 1159, 1167, 1187, 1233, 1234, 1235, 1247, 1248, 1249, 1394], "output_dim": [1013, 1036, 1039, 1040, 1043, 1047, 1048, 1061, 1063, 1064, 1065, 1069, 1075, 1076], "use_rmin": [1013, 1019, 1069, 1070], "transform_non_affin": [1013, 1040, 1043, 1048, 1064, 1065, 1069, 1076], "has_invers": [1013, 1029, 1048, 1056, 1069, 1072], "is_separ": [1013, 1035, 1048, 1060, 1069], "depth": [1013, 1025, 1048, 1069, 1316, 1381], "chain": [1013, 1025, 1048, 1069, 1264, 1891], "form": [1013, 1025, 1048, 1069, 1121, 1161, 1265, 1291, 1293, 1346, 1897, 1906], "contains_branch": [1013, 1023, 1048, 1069], "tree": [1013, 1023, 1024, 1048, 1069], "contains_branch_seper": [1013, 1024, 1048, 1069], "other_transform": [1013, 1024, 1048, 1069], "branch": [1013, 1024, 1048, 1069, 1891, 1892], "cancel": [1013, 1022, 1048, 1069], "term": [1013, 1022, 1048, 1069, 1890, 1893], "interfac": [1013, 1018, 1048, 1049, 1069, 1346, 1878, 1890, 1897], "transform_affin": [1013, 1040, 1043, 1048, 1064, 1065, 1069, 1076], "transform_bbox": [1013, 1042, 1048, 1069], "get_affin": [1013, 1027, 1048, 1054, 1069], "get_matrix": [1013, 1028, 1048, 1055, 1069], "transform_point": [1013, 1047, 1048, 1069], "transform_path": [1013, 1044, 1045, 1046, 1048, 1066, 1067, 1068, 1069, 1077], "transform_path_affin": [1013, 1045, 1046, 1048, 1067, 1068, 1069, 1077], "transform_path_non_affin": [1013, 1045, 1046, 1048, 1067, 1068, 1069, 1077], "transform_angl": [1013, 1041, 1048, 1069], "pt": [1013, 1041, 1048, 1069], "pushoff": [1013, 1041, 1048, 1069], "1e": [1013, 1041, 1048, 1069, 1655, 1656, 1894, 1897], "invalid_non_affin": [1013, 1016, 1048, 1069], "invalid_affin": [1013, 1015, 1048, 1069], "invalid": [1013, 1014, 1031, 1037, 1038, 1048, 1069, 1281, 1283, 1312, 1313, 1346], "is_affin": [1013, 1033, 1048, 1059, 1069], "is_bbox": [1013, 1034, 1048, 1069], "pass_through": [1013, 1037, 1048, 1069], "ancestor": [1013, 1031, 1037, 1048, 1069], "even": [1013, 1022, 1037, 1048, 1069, 1161, 1265, 1306, 1390, 1414, 1908], "transformnod": [1013, 1031, 1048, 1069], "set_children": [1013, 1038, 1048, 1069], "let": [1013, 1038, 1048, 1069, 1894, 1896, 1897, 1899, 1901, 1902, 1905, 1906, 1907, 1908], "system": [1013, 1038, 1048, 1069, 1121, 1303, 1401, 1890, 1892, 1895, 1900, 1904, 1906], "know": [1013, 1038, 1048, 1069, 1099, 1396, 1407], "frozen": [1013, 1022, 1026, 1048, 1053, 1069], "node": [1013, 1026, 1048, 1053, 1069, 1162, 1163, 1164, 1298, 1302, 1408], "previous": [1013, 1026, 1048, 1053, 1069, 1100, 1266, 1283, 1331, 1557, 1890], "known": [1013, 1026, 1048, 1053, 1069], "deepcopi": [1013, 1026, 1048, 1053, 1069], "might": [1013, 1026, 1048, 1053, 1069, 1280, 1374, 1381, 1900], "_apply_theta_transform": [1019, 1070], "noth": [1020, 1078, 1087, 1100, 1107, 1291], "regard": 1022, "likewis": [1022, 1266], "naiv": 1022, "inaccuraci": 1022, "guarante": [1022, 1350, 1364, 1377, 1384], "wherea": 1022, "small": [1022, 1136, 1280, 1281, 1302, 1312, 1313, 1401, 1890, 1894, 1895], "epsilon": [1022, 1344], "mutat": 1022, "won": 1022, "anymor": 1022, "routin": 1023, "therefor": [1023, 1261, 1405, 1406], "situat": [1023, 1161], "whole": [1023, 1129, 1133, 1137, 1139, 1538, 1546, 1582, 1615, 1710, 1713, 1720, 1723, 1730, 1733, 1740, 1743, 1754, 1763, 1779, 1890], "x_isdata": 1024, "y_isdata": 1024, "tran": 1024, "transdata": [1024, 1111, 1273], "special": [1025, 1293, 1315], "composit": 1025, "hold": [1032, 1058, 1074], "temporari": [1032, 1058, 1074], "op": [1040, 1043, 1064, 1065, 1076], "measur": [1041, 1147, 1155, 1301, 1302], "smarter": 1042, "transformedbbox": [1042, 1329], "began": [1044, 1066], "kept": [1047, 1269, 1277, 1390, 1890], "backcompat": 1047, "capabl": [1047, 1890, 1891], "rest": 1048, "compon": [1048, 1136, 1139, 1141, 1302, 1416, 1417, 1490, 1493, 1494, 1495, 1496, 1498, 1499, 1502, 1509, 1510, 1511, 1513, 1515, 1516, 1518, 1519, 1520, 1523, 1524, 1526, 1530, 1531, 1538, 1547, 1557, 1568, 1569, 1582, 1596, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1609, 1610, 1611, 1612, 1613, 1615, 1629, 1631, 1632, 1633, 1634, 1636, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1646, 1647, 1649, 1650, 1652, 1653, 1654, 1655, 1659, 1660, 1662, 1663, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1674, 1675, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1817, 1818, 1820, 1897], "x_": 1048, "frac": [1048, 1147, 1671, 1709], "r_": 1048, "scale_transform": [1048, 1051, 1070], "bboxbas": [1048, 1051, 1225], "to_valu": [1048, 1062], "cannot": [1060, 1163, 1164, 1283, 1298, 1387, 1388, 1397, 1493], "sin": 1069, "screen": [1069, 1121, 1131, 1302], "circular": [1069, 1130], "arc": 1069, "_interpolation_step": 1069, "tr": [1069, 1076], "ensur": [1078, 1187, 1269, 1390, 1409, 1410, 1414, 1490, 1491, 1893, 1894], "strictli": [1078, 1398], "task": [1078, 1897], "deleg": 1078, "set_axi": [1078, 1086, 1090, 1098, 1100, 1104], "__call__": [1078, 1080, 1085, 1090, 1091, 1100, 1101], "nonsingular": [1078, 1084, 1100, 1103], "singular": [1078, 1084, 1100, 1103, 1265, 1291, 1293], "view_limit": [1078, 1089, 1100, 1105], "maxtick": [1078, 1079, 1085, 1100], "tick_valu": [1078, 1088, 1100], "set_param": [1078, 1087, 1100, 1280], "raise_if_exce": [1078, 1085, 1100], "longer": [1078, 1085, 1100, 1160, 1302, 1890], "create_dummy_axi": [1078, 1083, 1090, 1100], "v0": [1084, 1100, 1103], "v1": [1084, 1100, 1103], "inf": [1084, 1103, 1309, 1405, 1406, 1562, 1566, 1621, 1623, 1659, 1717, 1718, 1737, 1738, 1748, 1750, 1758, 1759, 1769, 1771, 1789, 1790], "slop": [1084, 1103], "expand": [1084, 1103, 1126, 1136, 1218, 1291, 1293, 1302, 1358, 1375, 1378, 1382, 1385, 1401], "interv": [1084, 1103, 1139, 1141, 1163, 1164, 1283, 1375, 1382, 1396, 1406, 1417, 1903], "appropri": [1084, 1103, 1291, 1293], "modif": [1084, 1103], "immedi": 1085, "user": [1085, 1121, 1167, 1187, 1269, 1271, 1272, 1310, 1311, 1342, 1344, 1417, 1671, 1709, 1824, 1847, 1869, 1878, 1886, 1890, 1900], "huge": 1085, "strang": 1085, "would": [1085, 1121, 1136, 1140, 1162, 1284, 1310, 1311, 1329, 1359, 1414, 1671, 1709, 1894, 1903], "except": [1085, 1100, 1110, 1120, 1128, 1132, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1389, 1390, 1391, 1392, 1395, 1398, 1406, 1417, 1418, 1421, 1441, 1671, 1709], "To": [1088, 1120, 1123, 1137, 1147, 1155, 1160, 1264, 1281, 1282, 1283, 1292, 1294, 1297, 1301, 1302, 1309, 1389, 1409, 1410, 1671, 1709], "behaviour": [1089, 1105, 1905], "format_tick": [1090, 1095], "format_data": [1090, 1093], "format_data_short": [1090, 1094], "short": [1090, 1094, 1346, 1890, 1895], "get_offset": [1090, 1096, 1264], "set_loc": [1090, 1099], "fix_minu": [1090, 1092], "want": [1090, 1092, 1121, 1136, 1261, 1280, 1298, 1302, 1309, 1310, 1311, 1344, 1377, 1384, 1405, 1406, 1908], "hyphen": [1090, 1092], "proper": [1090, 1092, 1269], "unicod": [1090, 1092], "2212": [1090, 1092], "typograph": [1090, 1092, 1309], "perform": [1090, 1092, 1110, 1120, 1125, 1139, 1142, 1147, 1155, 1282, 1286, 1294, 1301, 1308, 1389, 1395, 1397, 1421, 1891], "rc": [1090, 1092, 1126, 1137, 1160, 1161, 1264, 1265, 1266, 1267, 1269, 1291, 1292, 1293, 1298, 1299, 1303, 1309, 1368, 1373, 1380, 1389, 1390, 1404, 1405, 1406, 1418, 1419, 1422], "unicode_minu": [1090, 1092], "becaus": [1099, 1135, 1269, 1280, 1309, 1377, 1384, 1405, 1406, 1407, 1893], "work": [1100, 1265, 1291, 1293, 1299, 1309, 1350, 1364, 1377, 1384, 1390, 1405, 1406, 1439, 1890, 1892, 1896, 1905, 1907], "entir": [1100, 1416, 1417], "45": [1100, 1302, 1894, 1897], "theta_label": 1106, "callabl": [1110, 1112, 1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1135, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1314, 1316, 1324, 1344, 1389, 1390, 1399, 1401, 1417, 1421, 1441, 1671, 1709], "mlab": [1110, 1147, 1155, 1301, 1389, 1417, 1421], "normalis": [1110, 1421], "usevlin": [1110, 1421], "addition": [1110, 1130, 1269, 1281, 1291, 1293, 1298, 1312, 1313, 1352, 1376, 1383, 1421, 1552, 1553], "maxlag": [1110, 1421], "lag": [1110, 1421], "len": [1110, 1136, 1139, 1155, 1297, 1298, 1301, 1302, 1392, 1395, 1421, 1441], "linecollect": [1110, 1160, 1161, 1267, 1395, 1398, 1416, 1417, 1418, 1421], "accept": [1110, 1120, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1282, 1291, 1292, 1293, 1294, 1297, 1299, 1301, 1302, 1303, 1309, 1310, 1311, 1331, 1376, 1383, 1389, 1391, 1392, 1395, 1396, 1398, 1405, 1406, 1417, 1418, 1421, 1890, 1893], "interpret": [1110, 1120, 1121, 1135, 1136, 1137, 1139, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1282, 1283, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1344, 1389, 1391, 1392, 1395, 1398, 1405, 1406, 1417, 1418, 1421], "dedic": [1111, 1405, 1406], "necessari": [1111, 1225, 1298, 1299, 1378, 1385, 1405, 1892, 1905], "manual": [1111, 1899], "def": [1112, 1121, 1165, 1264], "lowlevel": 1113, "wrap": [1120, 1284, 1294, 1365, 1401], "signal": [1120, 1147, 1155, 1162, 1282, 1294, 1301, 1389, 1890, 1905], "sampl": [1120, 1147, 1155, 1266, 1282, 1294, 1301, 1389, 1897], "frequenc": [1120, 1147, 1155, 1282, 1294, 1301, 1310, 1389, 1796], "fourier": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "freq": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "window_han": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "window_non": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "blackman": [1120, 1147, 1155, 1269, 1282, 1294, 1301, 1389], "ham": [1120, 1147, 1155, 1269, 1282, 1294, 1301, 1389, 1671, 1709], "bartlett": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "get_window": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "onesid": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "twosid": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "complex": [1120, 1147, 1155, 1282, 1292, 1294, 1301, 1389, 1421, 1441, 1891, 1906], "while": [1120, 1142, 1147, 1155, 1187, 1282, 1293, 1294, 1301, 1389, 1396, 1409, 1410, 1892, 1894], "fft": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "resolv": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "peak": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "detail": [1120, 1121, 1122, 1147, 1149, 1155, 1160, 1219, 1266, 1269, 1281, 1282, 1291, 1293, 1294, 1299, 1301, 1312, 1313, 1320, 1345, 1389, 1390, 1391, 1396, 1398, 1897, 1900, 1906], "extent": [1120, 1140, 1147, 1155, 1225, 1264, 1269, 1282, 1294, 1301, 1389, 1405, 1406], "acquir": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "downsampl": [1120, 1147, 1155, 1269, 1282, 1294, 1301, 1389], "baseband": [1120, 1147, 1155, 1282, 1294, 1301, 1389], "dpi": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1316, 1390, 1399, 1401], "corner": [1120, 1121, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1269, 1271, 1272, 1273, 1282, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1303, 1314, 1316, 1320, 1390, 1399, 1401, 1405, 1406, 1671, 1709, 1896], "antialias": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1269, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390, 1405, 1406], "aa": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "clip_box": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1390, 1399, 1401], "clip_on": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1314, 1390, 1399, 1401], "clip_path": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1390, 1399, 1401], "dash_capstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "capstyl": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "butt": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "dash_joinstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "joinstyl": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "miter": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "bevel": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "dash": [1120, 1128, 1131, 1132, 1136, 1140, 1147, 1155, 1160, 1161, 1163, 1164, 1261, 1264, 1267, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390, 1395, 1405, 1418], "ink": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1161, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "1d": [1120, 1128, 1131, 1132, 1134, 1136, 1138, 1139, 1147, 1151, 1152, 1155, 1160, 1161, 1261, 1266, 1282, 1292, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1390, 1396, 1398, 1893], "drawstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390, 1396], "mid": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1163, 1164, 1261, 1265, 1282, 1294, 1298, 1299, 1301, 1302, 1390, 1396], "fillstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "gapcolor": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "seq": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1137, 1147, 1155, 1160, 1261, 1271, 1282, 1294, 1298, 1299, 1301, 1390], "lw": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1346, 1390], "markerstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1309, 1390], "markeredgecolor": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "mec": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "markeredgewidth": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "mew": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "markerfacecolor": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "mfc": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "markerfacecoloralt": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "mfcalt": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "markeveri": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "abstractpatheffect": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1343, 1390, 1399, 1401], "pickradiu": [1120, 1128, 1131, 1132, 1136, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1390], "unknown": [1120, 1123, 1128, 1131, 1132, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1390, 1401], "sketch_param": [1120, 1123, 1128, 1129, 1131, 1132, 1133, 1136, 1137, 1140, 1147, 1155, 1160, 1163, 1164, 1261, 1264, 1271, 1282, 1291, 1293, 1294, 1298, 1299, 1301, 1302, 1314, 1390, 1399, 1401], "solid_capstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "solid_joinstyl": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "xdata": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "ydata": [1120, 1128, 1131, 1132, 1147, 1155, 1160, 1261, 1282, 1294, 1298, 1299, 1301, 1390], "unwrap": [1120, 1282, 1294, 1389], "textcoord": 1121, "arrowprop": [1121, 1123], "annotation_clip": 1121, "simplest": 1121, "anoth": [1121, 1293, 1387, 1388, 1398, 1816, 1903, 1907, 1908], "fraction": [1121, 1123, 1265, 1278, 1297], "subfigur": 1121, "parent": [1121, 1273, 1310, 1311, 1895], "who": [1121, 1409, 1410], "usabl": 1121, "rendererbas": [1121, 1157, 1225], "xcoord": 1121, "ycoord": 1121, "guid": [1121, 1273], "well": [1121, 1147, 1155, 1160, 1281, 1301, 1309, 1312, 1313, 1331, 1389, 1396, 1891, 1895, 1897, 1908], "fancyarrowpatch": [1121, 1398], "histor": [1121, 1299], "wai": [1121, 1136, 1163, 1164, 1284, 1292, 1298, 1320, 1396, 1398, 1405, 1406, 1896], "fanci": 1121, "arrowstyl": [1121, 1123, 1398], "headwidth": [1121, 1302], "head": [1121, 1123, 1302, 1303, 1395], "headlength": [1121, 1302], "shrink": 1121, "exact": [1121, 1405, 1406], "connectionstyl": 1121, "relpo": 1121, "patcha": 1121, "patchb": 1121, "shrinka": 1121, "shrinkb": 1121, "mutation_scal": 1121, "mutation_aspect": 1121, "pathpatch": 1121, "former": [1122, 1298], "affect": [1122, 1123, 1291, 1302, 1325, 1326, 1404, 1890, 1901], "further": [1122, 1126, 1130, 1136, 1269, 1292, 1320, 1350, 1364, 1377, 1384, 1390, 1906], "you": [1122, 1135, 1136, 1147, 1155, 1161, 1162, 1163, 1164, 1167, 1187, 1232, 1246, 1261, 1286, 1291, 1292, 1293, 1298, 1299, 1301, 1302, 1309, 1319, 1344, 1349, 1350, 1364, 1377, 1378, 1384, 1385, 1389, 1390, 1396, 1401, 1405, 1406, 1407, 1439, 1671, 1709, 1892, 1898, 1899, 1900, 1904, 1906, 1908], "yourself": [1122, 1167, 1187, 1378, 1385, 1439, 1895], "001": [1123, 1897], "tail": [1123, 1302, 1303], "length_includes_head": 1123, "head_width": 1123, "head_length": 1123, "overhang": 1123, "swept": [1123, 1302], "neg": [1123, 1137, 1375, 1382, 1405, 1814, 1884], "greater": [1123, 1139, 1239, 1253, 1291, 1293, 1314, 1374, 1375, 1381, 1382], "head_starts_at_zero": 1123, "edgecolor": [1123, 1129, 1133, 1134, 1136, 1137, 1138, 1140, 1163, 1164, 1264, 1271, 1291, 1293, 1302, 1309, 1901], "ec": [1123, 1129, 1133, 1136, 1137, 1140, 1163, 1164, 1264, 1271, 1291, 1293, 1302], "hatch": [1123, 1129, 1133, 1136, 1137, 1140, 1163, 1164, 1264, 1271, 1291, 1293, 1297, 1302, 1406], "fancyarrow": 1123, "produc": [1123, 1139, 1141, 1269, 1292, 1293, 1395, 1814, 1884, 1890, 1893, 1901, 1906], "squar": [1123, 1130, 1160, 1167, 1269, 1297, 1298, 1320, 1390, 1391, 1671, 1709], "leav": [1125, 1293, 1374, 1381, 1398, 1892], "unchang": [1125, 1374, 1381, 1403, 1404], "3d": [1125, 1280], "three": [1125, 1141, 1226, 1269, 1280, 1368, 1407, 1895, 1908], "Then": [1125, 1892], "regardless": [1125, 1129, 1131, 1133, 1291, 1363, 1372, 1379], "unlik": [1126, 1147, 1155, 1301, 1389], "autolimit_mod": 1126, "round_numb": 1126, "expans": [1126, 1378, 1385, 1397], "reus": 1126, "behav": [1126, 1352], "preserv": [1126, 1283], "preexist": 1126, "revers": [1126, 1265, 1374, 1381, 1441], "altern": [1126, 1264, 1265, 1291, 1293, 1298, 1373, 1380, 1401, 1407, 1892], "arbitrari": [1128, 1132, 1187, 1292, 1302, 1378, 1385, 1900], "thick": [1128, 1131, 1132, 1160], "red": [1128, 1131, 1132, 1134, 1138, 1151, 1152, 1160, 1162, 1298, 1346, 1401, 1403, 1405, 1406], "middl": [1128, 1129, 1132, 1133, 1136, 1302, 1303, 1320], "75": [1128, 1132, 1895, 1896, 1897, 1899, 1906], "close": [1129, 1133, 1163, 1164, 1392, 1398, 1399, 1406, 1442, 1466, 1884, 1893, 1896, 1903, 1905], "xlim": [1130, 1314, 1374], "ylim": [1130, 1314, 1381], "explicit": [1130, 1136, 1264, 1266, 1269, 1291, 1292, 1293, 1298, 1302, 1309, 1405, 1406, 1489, 1797, 1798, 1890, 1896], "disabl": [1130, 1328, 1344], "larg": [1130, 1265, 1291, 1293, 1401, 1403], "enough": 1130, "notifi": [1130, 1374, 1381, 1405, 1406], "thu": [1131, 1269, 1293], "exponenti": 1131, "decai": 1131, "semilog": 1131, "law": [1131, 1266], "howev": [1131, 1136, 1161, 1187, 1265, 1292, 1293, 1299, 1396, 1397, 1405, 1406, 1407, 1893, 1899, 1908], "undefin": 1131, "transax": [1131, 1271, 1273, 1329, 1401], "through": [1131, 1135, 1297, 1391, 1395, 1890, 1891], "green": [1133, 1160, 1298, 1346, 1396], "transluc": [1133, 1403], "55": [1133, 1895, 1897, 1906], "blow": [1134, 1138, 1151, 1152], "nsector": [1134, 1138, 1151, 1152], "16": [1134, 1138, 1151, 1152, 1358, 1894, 1895, 1897, 1899, 1901, 1902, 1905, 1906, 1907], "cardin": [1134, 1138, 1151, 1152, 1318, 1320], "blowto": [1134, 1138, 1151, 1152], "pi": [1134, 1138, 1151, 1152, 1365], "rotat": [1134, 1136, 1138, 1151, 1152, 1297, 1302, 1401, 1403, 1893, 1895], "pollut": [1134, 1138, 1151, 1152], "black": [1134, 1137, 1138, 1140, 1151, 1152, 1298, 1359, 1401, 1890], "rgb": [1134, 1138, 1151, 1152, 1269, 1292, 1293, 1309], "cm": [1134, 1138, 1151, 1152], "calm_limit": [1134, 1138, 1151, 1152], "calm": [1134, 1138, 1151, 1152], "label_typ": 1135, "barcontain": [1135, 1137, 1265], "fit": [1135, 1269, 1390], "unnam": 1135, "preced": [1135, 1137, 1297, 1298, 1309, 1407], "galleri": [1135, 1137, 1160, 1269, 1291, 1293, 1297, 1310, 1311, 1327, 1348, 1349], "lines_bars_and_mark": [1135, 1137], "bar_label_demo": 1135, "horizontalalign": [1135, 1368, 1373, 1377, 1380, 1384, 1401], "verticalalign": [1135, 1368, 1377, 1384, 1401], "va": [1135, 1401], "tradition": 1136, "meteorologi": 1136, "technic": [1136, 1298, 1331], "As": [1136, 1167, 1187, 1302, 1405, 1406, 1890, 1892, 1894, 1908], "oppos": 1136, "quantit": 1136, "slant": 1136, "triangl": [1136, 1302, 1405, 1406, 1407, 1408], "variou": [1136, 1298, 1350, 1364, 1377, 1384], "increment": 1136, "schemat": 1136, "largest": [1136, 1264], "those": [1136, 1139, 1141, 1291, 1293, 1298, 1309, 1389, 1396, 1409, 1410, 1671, 1709, 1900], "smallest": [1136, 1447, 1457, 1464, 1471, 1479, 1487], "There": [1136, 1269, 1292, 1293, 1298, 1350, 1364, 1377, 1384], "cours": 1136, "ever": 1136, "easili": [1136, 1904], "distinguish": 1136, "shown": [1136, 1139, 1141, 1284, 1302, 1318, 1890, 1893, 1895], "65": [1136, 1894, 1895, 1897, 1905, 1906], "en": [1136, 1139], "wikipedia": [1136, 1139], "wiki": [1136, 1139], "wind_barb": 1136, "pivot": [1136, 1302], "meshgrid": [1136, 1302, 1398], "shaft": [1136, 1302], "barbcolor": 1136, "against": [1136, 1397, 1818, 1819], "shift": [1136, 1265], "awai": 1136, "flagcolor": 1136, "coeffici": [1136, 1439, 1574, 1575, 1823, 1837, 1886, 1900, 1901], "featur": [1136, 1293, 1396, 1890, 1902], "wish": [1136, 1161, 1309, 1897, 1906, 1907, 1908], "These": [1136, 1160, 1269, 1283, 1292, 1298, 1315, 1345, 1346, 1376, 1378, 1383, 1385, 1399, 1815, 1879, 1896, 1897, 1899, 1905, 1908], "twice": [1136, 1320], "emptybarb": 1136, "low": 1136, "fill_empti": 1136, "transpar": [1136, 1161, 1264, 1269, 1271, 1291, 1292, 1293, 1309, 1403, 1405, 1406], "alloc": [1136, 1345], "nearest": [1136, 1269, 1284, 1291, 1293, 1359, 1447, 1457, 1464, 1471, 1479, 1487], "truncat": 1136, "lowest": [1136, 1139, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "barb_incr": 1136, "flip_barb": 1136, "toward": [1136, 1265], "pressur": 1136, "northern": 1136, "hemispher": 1136, "flip": [1136, 1139, 1374, 1381], "polycollect": [1136, 1140, 1163, 1164, 1264, 1291, 1293, 1302, 1391, 1416, 1417], "clim": [1136, 1140, 1163, 1164, 1264, 1291, 1293, 1302], "rgba": [1136, 1140, 1163, 1164, 1264, 1269, 1291, 1292, 1293, 1302, 1309], "face": [1136, 1137, 1140, 1163, 1164, 1264, 1291, 1293, 1298, 1302, 1303, 1309, 1407], "thereof": [1136, 1140, 1163, 1164, 1264, 1291, 1293, 1302], "offset_transform": [1136, 1140, 1163, 1164, 1264, 1291, 1293, 1302], "transoffset": [1136, 1140, 1163, 1164, 1264, 1291, 1293, 1302], "verts_and_cod": [1136, 1140, 1163, 1164, 1264, 1291, 1302], "ment": 1137, "don": [1137, 1309, 1407], "tick_label": 1137, "de": 1137, "duplic": 1137, "best": [1137, 1297, 1896, 1897, 1902], "symmetr": [1137, 1160, 1365, 1391], "errorbar_featur": [1137, 1160], "capsiz": [1137, 1160], "error_kw": 1137, "horizontal_barchart_distribut": 1137, "patch_artist": [1139, 1141], "bootstrap": 1139, "usermedian": 1139, "conf_interv": 1139, "meanlin": [1139, 1141], "showmean": [1139, 1141, 1416, 1417], "showcap": [1139, 1141], "showbox": [1139, 1141], "showflier": [1139, 1141], "boxprop": [1139, 1141], "flierprop": [1139, 1141], "medianprop": [1139, 1141], "meanprop": [1139, 1141], "capprop": [1139, 1141], "whiskerprop": [1139, 1141], "manage_tick": [1139, 1141], "autorang": 1139, "capwidth": [1139, 1141], "quartil": [1139, 1141], "q1": [1139, 1141], "third": [1139, 1141, 1298, 1827, 1852, 1886, 1890], "q3": [1139, 1141], "median": [1139, 1141, 1416, 1417], "5x": 1139, "inter": 1139, "iqr": 1139, "flier": [1139, 1141], "past": [1139, 1141], "box_plot": 1139, "5iqr": 1139, "confid": [1139, 1141], "ci": [1139, 1141], "less": [1139, 1265, 1266, 1302, 1890], "distinct": 1139, "consist": [1139, 1298, 1890, 1894, 1895, 1901, 1902, 1904, 1907], "visual": [1139, 1269, 1390, 1894, 1897, 1899, 1901, 1902, 1904, 1905, 1906], "hide": 1139, "datum": 1139, "highest": [1139, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "tukei": 1139, "definit": [1139, 1163, 1164, 1821], "percentil": 1139, "particular": [1139, 1284, 1302, 1309, 1315, 1891, 1906], "outlier": [1139, 1141, 1265, 1266], "asymptot": 1139, "approxim": [1139, 1264, 1890, 1899], "mcgill": 1139, "larsen": 1139, "1978": 1139, "kendal": 1139, "stuart": 1139, "1967": 1139, "extrem": [1139, 1141, 1906], "smaller": [1139, 1265, 1269, 1278, 1293, 1302, 1318, 1389], "distribut": [1139, 1265, 1416, 1417, 1890, 1895, 1897, 1906], "25th": 1139, "75th": 1139, "try": [1139, 1141, 1349], "Not": [1139, 1141], "shownotch": [1139, 1141], "That": [1139, 1141], "central": 1139, "arithmet": 1139, "estim": [1139, 1416, 1417], "probabl": [1139, 1265, 1297, 1398, 1671, 1709], "xwidth": 1140, "yheight": 1140, "blue": [1140, 1162, 1298, 1346], "interleav": 1140, "stat": [1141, 1416], "med": 1141, "whislo": 1141, "whishi": 1141, "cilo": 1141, "cihi": 1141, "mislead": 1142, "azimuth": 1142, "contourset": [1145, 1405, 1406], "contourlabel": 1145, "noverlap": [1147, 1155, 1301, 1389], "scale_by_freq": [1147, 1155, 1301, 1389], "c_": 1147, "p_": [1147, 1155, 1301, 1908], "xx": [1147, 1301, 1401], "yy": 1147, "block": [1147, 1155, 1301, 1389, 1671, 1709, 1897], "NOT": [1147, 1155, 1301, 1389], "incorrect": [1147, 1155, 1301, 1389], "ing": [1147, 1155, 1301, 1389], "trend": [1147, 1155, 1301, 1389], "matlab": [1147, 1155, 1301, 1389, 1395], "modul": [1147, 1155, 1301, 1389, 1439, 1441, 1489, 1884, 1890], "detrend_mean": [1147, 1155, 1301, 1389], "detrend_linear": [1147, 1155, 1301, 1389], "hz": [1147, 1155, 1301, 1389], "compat": [1147, 1155, 1160, 1301, 1346, 1389, 1398], "cxy": 1147, "bendat": [1147, 1155, 1301], "piersol": [1147, 1155, 1301], "analysi": [1147, 1155, 1301, 1891], "procedur": [1147, 1155, 1301], "john": [1147, 1155, 1301], "son": [1147, 1155, 1301], "1986": [1147, 1155, 1301], "backend_bas": [1149, 1187], "linspac": [1151, 1152, 1441, 1893, 1894, 1904], "return_lin": [1155, 1301], "welch": [1155, 1301], "averag": [1155, 1264, 1301, 1302, 1900], "periodogram": [1155, 1301, 1389], "loss": [1155, 1301], "due": [1155, 1163, 1164, 1291, 1293, 1301, 1320, 1879, 1890, 1894, 1902], "pxy": 1155, "log_": [1155, 1264, 1301], "decibel": [1155, 1301], "though": [1155, 1301, 1893, 1908], "mousebutton": [1156, 1394], "press": [1156, 1394], "elinewidth": 1160, "barsabov": 1160, "lolim": 1160, "uplim": 1160, "xlolim": 1160, "xuplim": 1160, "erroreveri": 1160, "capthick": 1160, "insensit": 1160, "sensibl": 1160, "backward": [1160, 1398, 1905], "ride": 1160, "releas": [1160, 1890, 1892], "caret": 1160, "lim": [1160, 1894, 1905], "tricki": 1160, "upward": [1160, 1269], "errorbarcontain": 1160, "plotlin": 1160, "caplin": 1160, "barlinecol": 1160, "rand": 1160, "alias": [1160, 1269, 1346, 1352], "linelength": 1161, "commonli": [1161, 1264, 1298], "neurosci": 1161, "neural": 1161, "spike": 1161, "dot": [1161, 1267, 1298, 1302, 1395, 1405, 1418, 1671, 1709], "discret": [1161, 1264], "arriv": 1161, "peopl": 1161, "busi": 1161, "dai": [1161, 1906], "month": [1161, 1899], "hurrican": 1161, "year": [1161, 1374, 1888], "centuri": 1161, "practic": 1161, "arrang": [1161, 1265, 1671, 1709], "orthogon": [1161, 1473], "stretch": [1161, 1269, 1401], "opaqu": [1161, 1264, 1269, 1291, 1292, 1293, 1309, 1403, 1405, 1406], "dashdot": [1161, 1267, 1405, 1418], "onoffseq": 1161, "eventcollect": 1161, "legal": [1162, 1391], "section": [1163, 1164, 1291, 1293, 1298, 1389, 1898, 1900, 1904, 1906, 1908], "impli": [1163, 1164, 1897], "isol": [1163, 1164], "unfil": [1163, 1164, 1265], "adjac": [1163, 1164, 1291, 1293, 1359], "semant": [1163, 1164, 1265], "often": [1163, 1164, 1895, 1900], "intersect": [1163, 1164, 1302, 1449, 1815, 1816, 1884], "occur": [1163, 1164, 1269, 1396], "continu": [1163, 1164, 1396, 1398, 1908], "constantli": [1163, 1164, 1396], "recurs": 1165, "isinst": [1165, 1441], "comma": 1167, "enclos": 1167, "bracket": [1167, 1890], "colorbar": [1167, 1405, 1406, 1890], "fmt_xdata": 1168, "fall": [1168, 1169, 1405, 1905], "fmt_ydata": 1169, "chosen": [1182, 1264, 1271, 1272, 1281, 1298, 1312, 1313, 1328, 1890], "explan": [1207, 1291, 1405, 1406, 1407], "sinc": [1210, 1269, 1390, 1395, 1890, 1901, 1905], "canva": [1210, 1225, 1269], "get_render": [1210, 1225], "wiggl": [1218, 1358, 1391], "perpendicular": [1218, 1358, 1395], "shrunken": [1218, 1358], "clockwis": [1221, 1297, 1302, 1303, 1361, 1363], "counterclockwis": [1221, 1297, 1361], "bbox_extra_artist": 1225, "for_layout_onli": 1225, "_axes_loc": 1225, "caller": 1225, "tightbbox": 1225, "compar": [1225, 1292, 1890, 1893, 1901, 1902], "spine": [1225, 1231], "flush": [1226, 1368], "ticklabel": [1231, 1243, 1257, 1325, 1326, 1377, 1384], "primarili": [1233, 1234, 1235, 1247, 1248, 1249], "tick1": [1235, 1249], "tick2": [1235, 1249], "henc": [1245, 1259, 1405, 1406, 1893, 1900, 1901, 1902, 1906], "suppli": [1261, 1264, 1266, 1269, 1291, 1292, 1293, 1309, 1310, 1311, 1344, 1405, 1406, 1671, 1709], "compris": 1261, "anyth": [1262, 1269, 1897], "yscale": [1264, 1314], "reduce_c_funct": 1264, "mincnt": 1264, "accumul": [1264, 1265], "nx": [1264, 1266], "ny": [1264, 1266], "zig": 1264, "zag": 1264, "illustr": 1264, "logarithm": [1264, 1266, 1281, 1312, 1313], "lognorm": [1264, 1266], "log10": [1264, 1282, 1389], "cell": [1264, 1292, 1398, 1399], "assign": [1264, 1298, 1391, 1397, 1405, 1406], "mx2": 1264, "get_arrai": 1264, "hbar": 1264, "vbar": 1264, "colormapnorm": [1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "symlog": [1264, 1266, 1269, 1291, 1292, 1293, 1309, 1376, 1383, 1405, 1406], "logit": [1264, 1266, 1269, 1291, 1292, 1293, 1309, 1376, 1383, 1405, 1406], "get_scale_nam": [1264, 1266, 1269, 1291, 1292, 1293, 1309, 1405, 1406], "instanti": [1264, 1266, 1269, 1273, 1291, 1292, 1293, 1309, 1405, 1406], "sometim": [1264, 1298, 1391], "lead": [1264, 1269, 1330], "unsightli": 1264, "unpaint": 1264, "outlin": [1264, 1292], "aggreg": 1264, "amax": 1264, "cumul": 1265, "histtyp": 1265, "rwidth": 1265, "n0": 1265, "n1": 1265, "patches0": 1265, "patches1": 1265, "unequ": [1265, 1890], "righthand": 1265, "word": [1265, 1269], "strategi": 1265, "histogram_bin_edg": 1265, "fd": 1265, "doan": 1265, "scott": [1265, 1417], "stone": 1265, "rice": 1265, "sturg": 1265, "raw": [1265, 1269], "diff": [1265, 1686], "datapoint": 1265, "amount": [1265, 1389], "barstack": 1265, "stepfil": 1265, "tradit": 1265, "lineplot": 1265, "nbin": [1265, 1280], "data1": 1265, "data2": 1265, "significantli": [1265, 1395], "acceler": 1265, "cmin": [1266, 1416, 1417], "cmax": [1266, 1416, 1417], "x_edg": 1266, "y_edg": 1266, "leftmost": 1266, "rightmost": 1266, "talli": 1266, "w_i": 1266, "weigh": 1266, "x_i": [1266, 1671, 1709], "y_i": 1266, "upon": 1266, "bi": 1266, "xedg": 1266, "yedg": 1266, "accomplish": 1266, "powernorm": 1266, "begin": [1267, 1391, 1418, 1897], "interpolation_stag": 1269, "filternorm": 1269, "filterrad": 1269, "resampl": 1269, "grayscal": 1269, "grai": 1269, "255": [1269, 1292, 1293], "artifact": [1269, 1291], "images_contours_and_field": [1269, 1291, 1293], "image_antialias": 1269, "pil": 1269, "particularli": [1269, 1390], "shortcut": [1269, 1298, 1346, 1390, 1405, 1406, 1869], "bilinear": 1269, "bicub": 1269, "spline16": 1269, "spline36": 1269, "han": 1269, "hermit": 1269, "kaiser": 1269, "quadric": 1269, "catrom": 1269, "bessel": 1269, "mitchel": 1269, "lanczo": 1269, "svg": [1269, 1292, 1406], "down": [1269, 1302, 1890, 1893, 1906], "upsampl": 1269, "viewer": 1269, "least": [1269, 1399, 1513, 1671, 1709, 1880], "act": [1269, 1302], "anti": [1269, 1303], "happen": 1269, "interpolation_method": 1269, "overview": [1269, 1889, 1890, 1891, 1904], "discuss": [1269, 1291, 1293], "antigrain": 1269, "carri": 1269, "matric": [1269, 1390], "downward": 1269, "imshow_ext": 1269, "numcol": 1269, "numrow": 1269, "doesn": 1269, "rule": [1269, 1596, 1597, 1606, 1614, 1890, 1902, 1908], "graph": 1269, "larger": [1269, 1291, 1293, 1302, 1365], "coincid": [1269, 1397, 1414], "channel": [1269, 1892], "unassoci": 1269, "disregard": 1269, "opac": 1269, "premultipli": 1269, "adopt": 1269, "99": [1271, 1894, 1895, 1897, 1902, 1906], "api": [1271, 1272, 1273, 1310, 1311, 1342, 1890, 1891, 1894, 1906], "y0": [1271, 1273, 1405, 1406], "mark": [1271, 1283, 1409, 1410, 1416, 1417, 1899], "rectangle_patch": [1271, 1272], "connector_lin": [1271, 1272], "connectionpatch": [1271, 1272], "four": [1271, 1272, 1671, 1709, 1890, 1893, 1896], "lower_left": 1271, "upper_left": 1271, "lower_right": 1271, "upper_right": 1271, "deem": [1271, 1272], "aitoff": 1273, "hammer": 1273, "lambert": 1273, "mollweid": 1273, "rectilinear": [1273, 1359], "axes_class": 1273, "incompat": 1273, "axisartist_us": 1273, "axin1": 1273, "axin2": 1273, "decimal_plac": 1278, "decim": [1278, 1404], "isax": 1278, "fontproperti": [1278, 1303, 1401], "font": [1278, 1401, 1403], "borderpad": 1278, "whitespac": 1278, "border": [1278, 1297, 1389], "shadow": [1278, 1297], "behind": [1278, 1893], "labelspac": 1278, "005": [1278, 1302], "handlelenght": 1278, "handletextsep": 1278, "02": [1278, 1894, 1895, 1897, 1898, 1903, 1905, 1906], "borderaxespad": 1278, "involv": [1280, 1710, 1720, 1730, 1740, 1890], "maxnloc": [1280, 1405, 1406], "fmt2": [1281, 1298, 1312, 1313, 1396], "thin": [1281, 1312, 1313, 1396], "concept": [1281, 1312, 1313, 1396, 1890, 1893, 1905], "nonposit": [1281, 1312, 1313], "decad": [1281, 1312, 1313, 1378, 1385], "veri": [1281, 1291, 1312, 1313, 1895, 1896, 1897, 1906], "db": [1282, 1389], "spec": [1282, 1298, 1389, 1403], "typeerror": [1283, 1441], "xmargin": [1283, 1314], "ymargin": [1283, 1314], "alter": 1283, "assumpt": [1283, 1899], "them": [1286, 1298, 1397, 1403, 1439, 1671, 1709, 1896, 1907], "problem": [1286, 1490, 1491, 1494, 1495, 1498, 1499, 1511, 1512, 1513, 1514, 1515, 1516, 1520, 1521, 1523, 1524, 1531, 1532, 1538, 1540, 1541, 1542, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1574, 1575, 1582, 1596, 1597, 1598, 1599, 1600, 1605, 1606, 1607, 1608, 1609, 1610, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1875, 1890, 1897, 1906], "quadrilater": [1291, 1292, 1293], "slow": [1291, 1890, 1893], "much": [1291, 1293, 1903], "faster": [1291, 1292, 1293, 1309, 1906], "quad": [1291, 1293], "drop": [1291, 1293, 1890], "halfwai": [1291, 1293], "pcolormesh_grid": [1291, 1293], "force_edgecolor": [1291, 1293], "mesh": [1291, 1292, 1293], "elimin": 1291, "artifici": [1291, 1588, 1880, 1903], "stroke": 1291, "prefer": [1291, 1293, 1309, 1892], "equidist": [1291, 1293], "surround": 1291, "nrow": [1291, 1293], "ncolumn": [1291, 1293], "fastest": 1292, "lack": 1292, "position": [1292, 1405, 1406, 1407], "monoton": 1292, "fast": [1292, 1439, 1891], "slowest": 1292, "compact": 1292, "pcolorimag": 1292, "gouraud": [1293, 1407], "smooth": [1293, 1814], "cari": 1293, "misc": [1293, 1327, 1348, 1349], "rasterization_demo": [1293, 1348, 1349], "li": 1293, "almost": 1293, "slight": [1293, 1298], "irrespect": [1293, 1890], "fire": [1295, 1344], "pctdistanc": 1297, "labeldist": 1297, "startangl": 1297, "counterclock": 1297, "wedgeprop": 1297, "textprop": 1297, "rotatelabel": 1297, "wedg": 1297, "shapes_and_collect": 1297, "hatch_style_refer": 1297, "pct": 1297, "still": [1297, 1327], "beneath": 1297, "conflict": [1297, 1298], "autotext": 1297, "notat": [1298, 1404], "bo": 1298, "ditto": 1298, "pluss": 1298, "mix": [1298, 1763, 1894], "go": 1298, "could": [1298, 1671, 1709, 1890, 1900, 1902, 1904, 1907], "col": 1298, "syntax": [1298, 1671, 1709], "prop_cycl": [1298, 1309, 1314], "ro": 1298, "abbrevi": [1298, 1320], "quickli": 1298, "ambigu": 1298, "issu": [1298, 1349, 1890, 1891], "suppress": 1298, "adapt": 1298, "bubbl": 1298, "charact": [1298, 1395], "triangle_down": 1298, "triangle_up": 1298, "triangle_left": 1298, "triangle_right": 1298, "tri_down": 1298, "tri_up": 1298, "tri_left": 1298, "tri_right": 1298, "octagon": 1298, "pentagon": 1298, "star": 1298, "hexagon1": 1298, "hexagon2": 1298, "diamond": [1298, 1302], "thin_diamond": 1298, "_": 1298, "letter": [1298, 1795, 1813], "cyan": 1298, "magenta": 1298, "yellow": 1298, "white": [1298, 1901], "cn": 1298, "hex": [1298, 1441], "008000": 1298, "plain": [1299, 1404], "timezon": [1299, 1419, 1422], "axis_d": 1299, "resort": 1299, "tzinfo": [1299, 1419, 1422], "date2num": 1299, "num": 1299, "num2dat": 1299, "drang": 1299, "autodateloc": 1299, "dateloc": 1299, "autodateformatt": 1299, "dateformatt": 1299, "mathrm": 1301, "pxx": 1301, "scale_unit": [1302, 1896], "headaxislength": 1302, "uv": [1302, 1817, 1818, 1884], "gradient": [1302, 1538, 1547, 1557, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "correspondingli": 1302, "synonym": [1302, 1671, 1709], "inch": [1302, 1303], "summar": [1302, 1890], "minshaft": 1302, "terribl": 1302, "minlength": [1302, 1398], "guidelin": 1302, "proportion": 1302, "headaxi": 1302, "protrud": 1302, "broken": 1302, "labelpo": 1303, "somewher": [1303, 1901], "labelsep": 1303, "labelcolor": [1303, 1403], "font_manag": [1303, 1401], "famili": [1303, 1401], "variant": [1303, 1401], "At": [1305, 1399, 1895], "invis": [1305, 1409, 1410], "until": [1306, 1398, 1414, 1870, 1872, 1890], "redrawn": 1306, "figurecanvasbas": 1306, "draw_idl": 1306, "wa": [1306, 1359, 1902, 1905], "undo": [1308, 1899], "satisfi": 1308, "constraint": [1308, 1320, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1531, 1532, 1538, 1541, 1547, 1548, 1549, 1550, 1552, 1553, 1555, 1556, 1557, 1561, 1565, 1568, 1582, 1615, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1673, 1680, 1686, 1692, 1698, 1704, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1764, 1765, 1779, 1786, 1875, 1881, 1897], "plotnonfinit": 1309, "72": [1309, 1894, 1895, 1896, 1897], "rcparam": [1309, 1368, 1377, 1384, 1401, 1903, 1905], "indistinguish": 1309, "shorthand": [1309, 1318], "nonfinit": 1309, "bad": 1309, "set_bad": 1309, "scatterplot": 1309, "unmask": 1309, "fundament": 1309, "lambda": [1310, 1311, 1671, 1709, 1903, 1905], "reciproc": [1310, 1311], "subplots_axes_and_figur": [1310, 1311], "secondary_axi": [1310, 1311], "convers": [1310, 1311], "_secondary_ax": [1310, 1311], "secondaryaxi": [1310, 1311], "miscellan": [1310, 1311, 1401], "xtick": [1312, 1314], "ytick": [1313, 1314], "autoscale_on": 1314, "autoscalex_on": 1314, "autoscaley_on": 1314, "axisbelow": 1314, "box_aspect": 1314, "frame_on": 1314, "radii_angl": 1314, "rasterization_zord": 1314, "rgrid": 1314, "rlabel_posit": 1314, "rlim": 1314, "rscale": 1314, "rtick": 1314, "theta_direct": 1314, "theta_offset": 1314, "theta_zero_loc": 1314, "thetagrid": 1314, "thetalim": 1314, "xbound": 1314, "xticklabel": 1314, "ybound": 1314, "yticklabel": 1314, "sw": [1314, 1318, 1320, 1363], "se": [1314, 1318, 1320, 1363], "ne": [1314, 1318, 1363], "navigate_mod": 1314, "impos": 1315, "restrict": 1315, "partli": 1315, "inclus": 1317, "southwest": 1318, "diagram": 1318, "nw": [1318, 1363], "approach": [1319, 1900], "blit": 1319, "advanc": 1319, "meet": 1320, "zorder_demo": 1327, "confus": 1328, "unexpect": [1330, 1377, 1384], "transformedpath": 1331, "toolcursorposit": 1340, "navigationtoolbar2": 1340, "toler": [1344, 1538, 1550, 1582, 1615, 1651, 1655, 1656, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "hit": [1344, 1905, 1908], "pickev": 1344, "from_bound": 1345, "from_ext": 1345, "cycler": 1346, "label2": [1346, 1377, 1384], "values2": 1346, "simultan": 1346, "Its": 1346, "favor": 1346, "rcsetup": 1346, "unvalid": 1346, "deactiv": [1348, 1892], "angular": [1350, 1351], "formatstrformatt": [1350, 1364], "delet": [1350, 1364, 1377, 1384], "immin": [1350, 1364, 1377, 1384], "risk": [1350, 1364, 1377, 1384], "lost": [1350, 1364, 1377, 1384], "set_tick_param": [1350, 1364, 1377, 1384], "polarax": [1350, 1364], "get_gridlin": [1350, 1364], "get_ticklabel": [1350, 1364], "128": [1358, 1389], "pgf": 1358, "rng": 1358, "seed": [1358, 1897], "clearer": 1359, "1px": 1359, "grei": 1359, "realli": [1359, 1906], "wide": 1359, "macosx": 1359, "vertex": 1359, "anticlockwis": 1361, "minval": 1365, "maxval": 1365, "titles": [1368, 1377, 1384], "fontweight": [1368, 1377, 1384, 1401], "titleweight": [1368, 1377, 1384], "titlecolor": 1368, "titleloc": 1368, "titlei": 1368, "titlepad": 1368, "honor": [1372, 1379], "labelloc": [1373, 1380], "high": [1373, 1380, 1902], "decreas": [1374, 1381], "right_lim": 1374, "suppos": [1374, 1381], "ago": 1374, "your": [1375, 1382, 1891, 1892, 1904], "scalebas": [1376, 1383], "linearscal": [1376, 1383], "logscal": [1376, 1383], "symmetricallogscal": [1376, 1383], "logitscal": [1376, 1383], "funcscal": [1376, 1383], "register_scal": [1376, 1383], "ll": [1377, 1384], "set_": [1377, 1384], "fixedloc": [1377, 1378, 1384, 1385], "free": [1377, 1384], "label1": [1377, 1384], "set_major_formatt": [1378, 1385], "mandatori": [1378, 1385], "intent": [1378, 1385], "prevent": [1378, 1385, 1890], "surpris": [1378, 1385], "top_lim": 1381, "ocean": 1381, "surfac": 1381, "construct": [1387, 1388, 1407, 1891], "xextent": 1389, "split": 1389, "what": 1389, "success": [1389, 1897], "midpoint": 1389, "spars": [1390, 1890], "spmatrix": 1390, "unstack": 1391, "y3": 1391, "y4": 1391, "weighted_wiggl": 1391, "themeriv": 1391, "account": [1391, 1399, 1894], "layer": [1391, 1894, 1895], "streamgraph": 1391, "leebyron": 1391, "val": [1392, 1416], "steppatch": 1392, "use_line_collect": 1395, "c0": 1395, "c3": [1395, 1685, 1686], "classic": [1395, 1890], "old": [1395, 1505, 1506], "stemcontain": 1395, "markerlin": 1395, "stemlin": 1395, "inspir": 1395, "uniformli": 1396, "rare": 1396, "stick": 1397, "moreov": 1397, "bump": 1397, "arrows": 1398, "start_point": 1398, "maxlength": 1398, "integration_direct": 1398, "broken_streamlin": 1398, "evenli": 1398, "x_1d": 1398, "y_1d": 1398, "veloc": [1398, 1425, 1427, 1429, 1433, 1434, 1437, 1885], "domain": [1398, 1896], "30x30": 1398, "travers": 1398, "density_x": 1398, "density_i": 1398, "With": [1398, 1903], "nx2": [1398, 1412], "termin": [1398, 1897], "too": 1398, "streamplotset": 1398, "patchcollect": 1398, "colwidth": 1399, "rowlabel": 1399, "rowcolour": 1399, "rowloc": 1399, "collabel": 1399, "colcolour": 1399, "colloc": 1399, "header": 1399, "finer": 1399, "grain": 1399, "break": 1399, "background": [1399, 1401, 1720, 1721, 1882, 1890, 1896, 1897, 1900], "ncol": 1399, "substr": 1399, "brtl": 1399, "visible_edg": 1399, "backgroundcolor": 1401, "fancybboxpatch": 1401, "fontfamili": 1401, "fontnam": 1401, "serif": 1401, "san": 1401, "cursiv": 1401, "fantasi": 1401, "monospac": 1401, "font_properti": 1401, "medium": 1401, "fontstretch": 1401, "ultra": 1401, "condens": 1401, "semi": [1401, 1893], "fontstyl": 1401, "ital": 1401, "obliqu": 1401, "fontvari": 1401, "ultralight": 1401, "light": 1401, "roman": 1401, "semibold": 1401, "demibold": 1401, "demi": 1401, "bold": 1401, "heavi": 1401, "linespac": 1401, "math_fontfamili": 1401, "multialign": 1401, "ma": 1401, "parse_math": 1401, "rotation_mod": 1401, "transform_rotates_text": 1401, "usetex": 1401, "get_tick_param": 1403, "inout": 1403, "labels": 1403, "labelbottom": 1403, "labeltop": 1403, "labelleft": 1403, "labelright": 1403, "labelrot": 1403, "grid_color": 1403, "grid_alpha": 1403, "grid_linewidth": 1403, "grid_linestyl": 1403, "useoffset": 1404, "uselocal": 1404, "usemathtext": 1404, "sci": 1404, "scientif": 1404, "english": 1404, "use_local": 1404, "mathtext": 1404, "use_mathtext": 1404, "attributeerror": [1404, 1441], "triangul": [1405, 1406, 1407, 1408], "neither": [1405, 1406, 1407, 1408, 1899, 1901], "clariti": [1405, 1406, 1407], "mutual": [1405, 1406, 1407, 1408], "exclus": [1405, 1406, 1407, 1408], "set_mask": [1405, 1406], "tri": [1405, 1406], "nice": [1405, 1406, 1897], "tricontourset": [1405, 1406], "ascend": [1405, 1406], "shorter": [1405, 1406], "set_und": [1405, 1406], "set_ov": [1405, 1406], "xunit": [1405, 1406], "yunit": [1405, 1406], "conversioninterfac": [1405, 1406], "monochrom": 1405, "negative_linestyl": 1405, "crosshatch": 1406, "postscript": 1406, "z1": 1406, "z2": 1406, "sens": 1407, "other_paramet": [1407, 1408], "inherit": [1409, 1410], "linearloc": [1409, 1410], "xydata": 1412, "union": [1412, 1451, 1884], "showextrema": [1416, 1417], "showmedian": [1416, 1417], "quantil": [1416, 1417], "kernel": [1416, 1417], "extrema": [1416, 1417], "cmean": [1416, 1417], "cbar": [1416, 1417], "cmedian": [1416, 1417], "cquantil": [1416, 1417], "bw_method": 1417, "stand": 1417, "bandwidth": 1417, "silverman": 1417, "kde": 1417, "gaussiankd": 1417, "sum_n": 1421, "cdot": [1421, 1671, 1709], "calc_w": [1425, 1428, 1429, 1434, 1885], "z0": [1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1866, 1885, 1886, 1894, 1895], "rough": [1425, 1426, 1427, 1429, 1430, 1431, 1433, 1434, 1435, 1437, 1866, 1886], "friction": [1425, 1427, 1429, 1433, 1434, 1437, 1885], "logz": [1426, 1431, 1435, 1885], "lz": [1426, 1430, 1431, 1435], "ws_ref": [1427, 1433, 1437, 1885], "h_ref": [1427, 1433, 1437, 1885], "height0": [1428, 1885], "ws0": [1428, 1885], "psi": [1429, 1432, 1434, 1436, 1885], "lgz": [1430, 1885], "monin": [1432, 1433, 1436, 1437, 1845, 1886, 1895], "obukhov": [1432, 1433, 1436, 1437, 1895], "all_subclass": [1438, 1884], "cl": [1438, 1449, 1450, 1884], "cubic_root": [1439, 1884, 1890], "a0": [1439, 1884], "a1": [1439, 1884], "a2": [1439, 1884], "a3": [1439, 1884], "root": [1439, 1884], "polynomi": [1439, 1884, 1890], "spare": 1439, "github": [1439, 1889, 1890, 1891, 1892, 1909], "opencv": 1439, "blob": 1439, "master": 1439, "calib3d": 1439, "src": 1439, "polynom_solv": 1439, "cpp": 1439, "n_a0": 1439, "delta_wd": [1440, 1884], "wd_a": [1440, 1884], "wd_b": [1440, 1884], "exec_python": [1441, 1884], "newlin": [1441, 1884], "__builtins__": 1441, "arithmeticerror": 1441, "assertionerror": 1441, "baseexcept": 1441, "blockingioerror": 1441, "brokenpipeerror": 1441, "buffererror": 1441, "byteswarn": 1441, "childprocesserror": 1441, "connectionabortederror": 1441, "connectionerror": 1441, "connectionrefusederror": 1441, "connectionreseterror": 1441, "deprecationwarn": 1441, "eoferror": 1441, "ellipsi": 1441, "environmenterror": 1441, "oserror": 1441, "fileexistserror": 1441, "filenotfounderror": 1441, "floatingpointerror": 1441, "futurewarn": 1441, "generatorexit": 1441, "ioerror": 1441, "importerror": 1441, "importwarn": 1441, "indentationerror": 1441, "indexerror": 1441, "interruptederror": 1441, "isadirectoryerror": 1441, "keyboardinterrupt": 1441, "lookuperror": 1441, "memoryerror": 1441, "modulenotfounderror": 1441, "nameerror": 1441, "notadirectoryerror": 1441, "notimplementederror": 1441, "pendingdeprecationwarn": 1441, "permissionerror": 1441, "processlookuperror": 1441, "recursionerror": 1441, "referenceerror": 1441, "resourcewarn": 1441, "runtimeerror": 1441, "runtimewarn": 1441, "stopasynciter": 1441, "stopiter": 1441, "syntaxerror": 1441, "syntaxwarn": 1441, "systemerror": 1441, "systemexit": 1441, "taberror": 1441, "timeouterror": 1441, "unboundlocalerror": 1441, "unicodedecodeerror": 1441, "unicodeencodeerror": 1441, "unicodeerror": 1441, "unicodetranslateerror": 1441, "unicodewarn": 1441, "userwarn": 1441, "zerodivisionerror": 1441, "__build_class__": 1441, "built": 1441, "__debug__": 1441, "__doc__": 1441, "nnoteworthi": 1441, "nil": 1441, "__import__": 1441, "__loader__": 1441, "_frozen_importlib": 1441, "builtinimport": 1441, "__name__": 1441, "__package__": 1441, "__pybind11_internals_v4_gcc_libstdcpp_cxxabi1014__": 1441, "capsul": 1441, "null": 1441, "__spec__": 1441, "modulespec": 1441, "loader": 1441, "ascii": 1441, "breakpoint": 1441, "bytearrai": 1441, "chr": 1441, "compil": 1441, "copyright": 1441, "2001": 1441, "2021": [1441, 1895], "softwar": [1441, 1888, 1891, 1895], "foundat": 1441, "reserv": 1441, "2000": [1441, 1894, 1897, 1902], "beopen": 1441, "1995": 1441, "corpor": 1441, "nation": 1441, "research": [1441, 1891], "1991": 1441, "sticht": 1441, "mathematisch": 1441, "centrum": 1441, "amsterdam": 1441, "credit": 1441, "thank": [1441, 1890], "cwi": 1441, "cnri": 1441, "zope": 1441, "cast": 1441, "thousand": 1441, "develop": [1441, 1891], "delattr": 1441, "dir": 1441, "enumer": [1441, 1893, 1894], "eval": 1441, "exec": 1441, "exit": 1441, "ctrl": 1441, "eof": 1441, "frozenset": 1441, "getattr": 1441, "hasattr": 1441, "interact": 1441, "licens": 1441, "memoryview": 1441, "oct": 1441, "ord": 1441, "quit": 1441, "setattr": 1441, "staticmethod": 1441, "super": [1441, 1583, 1620, 1757, 1768, 1788], "__cached__": 1441, "home": [1441, 1894, 1896, 1903, 1905], "jona": [1441, 1888, 1894, 1896, 1903, 1905], "git": [1441, 1891, 1892, 1894, 1896, 1903, 1905, 1909], "__pycache__": 1441, "cpython": 1441, "38": [1441, 1894, 1897, 1899, 1903, 1905, 1906], "pyc": 1441, "__file__": 1441, "_frozen_importlib_extern": 1441, "sourcefileload": 1441, "venv": [1441, 1892], "lib": 1441, "python3": [1441, 1892], "site": [1441, 1895, 1897], "__init__": 1441, "7000": [1441, 1902, 1903], "119": [1441, 1903], "namespac": 1441, "geometri": [1442, 1444, 1448, 1449, 1450, 1451, 1452, 1454, 1458, 1459, 1465, 1466, 1472, 1473, 1476, 1480, 1481, 1482, 1484, 1488, 1490, 1491, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1795, 1813, 1880, 1882, 1884, 1897], "p_min": [1442, 1445, 1446, 1449, 1451, 1455, 1456, 1459, 1462, 1463, 1466, 1469, 1470, 1473, 1477, 1478, 1481, 1485, 1486, 1897], "points_dist": [1442, 1447, 1449, 1451, 1457, 1459, 1464, 1466, 1471, 1473, 1479, 1481, 1487], "return_nearest": [1442, 1447, 1449, 1451, 1457, 1459, 1464, 1466, 1471, 1473, 1479, 1481, 1487], "points_insid": [1442, 1448, 1449, 1451, 1458, 1459, 1465, 1466, 1472, 1473, 1480, 1481, 1488], "add_to_figur": [1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483, 1897], "show_boundari": [1442, 1443, 1449, 1451, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1481, 1483], "fill_mod": [1443, 1453, 1459, 1461, 1466, 1468, 1473, 1475, 1483, 1897], "inside_slategrai": [1443, 1453, 1483], "pars_boundari": [1443, 1453, 1461, 1468, 1475, 1483], "pars_dist": [1443, 1453, 1461, 1468, 1475, 1483, 1897], "dist": [1443, 1447, 1453, 1457, 1461, 1464, 1468, 1471, 1475, 1479, 1483, 1487, 1514, 1671, 1709], "dist_insid": [1443, 1453, 1461, 1468, 1475, 1483, 1897], "dist_outsid": [1443, 1453, 1461, 1468, 1475, 1483, 1897], "inside_": [1443, 1453, 1461, 1468, 1475, 1483], "outside_": [1443, 1453, 1461, 1468, 1475, 1483], "invertedareageometri": [1444, 1454, 1476, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1884], "probe": [1447, 1448, 1457, 1458, 1464, 1465, 1471, 1472, 1479, 1480, 1487, 1488, 1538, 1540], "bundari": [1447, 1457, 1464, 1471, 1479, 1487], "p_nearest": [1447, 1457, 1464, 1471, 1479, 1487], "areaintersect": [1449, 1450, 1884], "areaunion": [1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1884], "cobnstructor": [1459, 1460], "closedpolygon": [1466, 1467, 1468, 1469, 1470, 1471, 1472, 1884, 1897], "poli": 1466, "halfplan": [1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1884], "import_modul": [1489, 1884], "deduc": 1489, "instal": [1489, 1890, 1891, 1909], "advic": 1489, "fail": [1489, 1894, 1905], "imnport": 1489, "opt": [1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1869, 1875, 1890, 1897], "areageometryconstraint": [1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1880], "farmconstraint": [1490, 1513, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1880], "constrain": [1490, 1511, 1880], "sel_turbin": [1490, 1491, 1511, 1513, 1514, 1520, 1521, 1529, 1531, 1532, 1537, 1538, 1540, 1576, 1582, 1596, 1605, 1607, 1613, 1615, 1754, 1763, 1779], "disc_insid": [1490, 1491], "n_compon": [1490, 1498, 1499, 1502, 1509, 1510, 1511, 1513, 1518, 1519, 1520, 1526, 1530, 1531, 1547, 1548, 1549, 1556, 1557, 1596, 1600, 1602, 1603, 1604, 1605, 1607, 1611, 1612, 1613, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1657, 1658, 1659, 1660, 1665, 1666, 1670, 1672, 1677, 1678, 1679, 1683, 1684, 1685, 1689, 1690, 1691, 1695, 1696, 1697, 1701, 1702, 1703, 1705, 1706, 1708], "vardeps_float": [1490, 1509, 1511, 1513, 1519, 1520, 1530, 1531, 1596, 1604, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "calc_individu": [1490, 1494, 1511, 1513, 1515, 1520, 1523, 1531, 1596, 1598, 1605, 1607, 1609, 1613, 1629, 1631, 1634, 1636, 1639, 1641, 1644, 1646, 1650, 1652, 1655, 1660, 1662, 1666, 1668, 1672, 1674, 1679, 1681, 1685, 1687, 1691, 1693, 1697, 1699, 1703, 1706], "vars_int": [1490, 1493, 1494, 1495, 1498, 1499, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1615, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1710, 1712, 1713, 1720, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1754, 1755, 1760, 1761, 1763, 1765, 1773, 1774, 1775, 1776, 1779, 1786, 1791, 1792], "vars_float": [1490, 1493, 1494, 1495, 1498, 1499, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1615, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1710, 1712, 1713, 1720, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1754, 1755, 1760, 1761, 1763, 1765, 1773, 1774, 1775, 1776, 1779, 1786, 1791, 1792], "problem_result": [1490, 1494, 1495, 1498, 1499, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1545, 1546, 1555, 1556, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1712, 1713, 1722, 1723, 1732, 1733, 1742, 1743, 1755, 1765, 1786, 1897], "calc_popul": [1490, 1495, 1511, 1513, 1516, 1520, 1524, 1531, 1596, 1599, 1605, 1607, 1610, 1613, 1629, 1632, 1634, 1637, 1639, 1642, 1644, 1647, 1650, 1653, 1655, 1660, 1663, 1666, 1669, 1672, 1675, 1679, 1682, 1685, 1688, 1691, 1694, 1697, 1700, 1703, 1706], "n_sel_turbin": [1490, 1511, 1513, 1520, 1527, 1531, 1535, 1538, 1570, 1582, 1584, 1585, 1596, 1605, 1607, 1613, 1615, 1625, 1626, 1754, 1760, 1761, 1763, 1773, 1774, 1779, 1791, 1792], "add_to_layout_figur": [1490, 1511, 1513, 1520, 1522, 1531, 1533, 1538, 1543, 1582, 1596, 1605, 1607, 1613, 1615, 1754, 1763, 1779], "get_bound": [1490, 1511, 1513, 1520, 1629, 1634, 1639, 1644, 1650, 1655, 1659, 1660, 1666], "check_individu": [1490, 1511, 1513, 1520, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1660, 1666], "constraint_valu": [1490, 1511, 1513, 1520, 1538, 1548, 1549, 1582, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1658, 1660, 1666, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "fullfil": [1490, 1511, 1513, 1520, 1538, 1548, 1549, 1582, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1657, 1658, 1660, 1666, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "check_popul": [1490, 1511, 1513, 1520, 1629, 1634, 1639, 1644, 1650, 1655, 1658, 1660, 1666], "component_nam": [1490, 1496, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "var_names_int": [1490, 1508, 1511, 1513, 1520, 1531, 1538, 1581, 1582, 1596, 1605, 1607, 1613, 1615, 1628, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1729, 1730, 1740, 1753, 1754, 1763, 1778, 1779], "n_vars_int": [1490, 1493, 1494, 1495, 1498, 1499, 1504, 1510, 1511, 1513, 1515, 1516, 1520, 1523, 1524, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1559, 1563, 1567, 1572, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1605, 1607, 1609, 1610, 1613, 1615, 1619, 1622, 1624, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1710, 1712, 1713, 1720, 1722, 1723, 1725, 1727, 1728, 1730, 1732, 1733, 1740, 1742, 1743, 1746, 1749, 1751, 1754, 1755, 1760, 1761, 1763, 1765, 1767, 1770, 1772, 1773, 1774, 1775, 1776, 1779, 1786, 1791, 1792, 1897], "var_names_float": [1490, 1507, 1511, 1513, 1520, 1531, 1538, 1580, 1582, 1596, 1605, 1607, 1613, 1615, 1627, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1719, 1720, 1730, 1739, 1740, 1752, 1754, 1762, 1763, 1777, 1779, 1793], "n_vars_float": [1490, 1493, 1494, 1495, 1498, 1499, 1503, 1509, 1511, 1513, 1515, 1516, 1519, 1520, 1523, 1524, 1530, 1531, 1538, 1545, 1546, 1547, 1552, 1553, 1555, 1556, 1557, 1558, 1562, 1566, 1571, 1578, 1579, 1582, 1584, 1585, 1586, 1587, 1596, 1598, 1599, 1600, 1604, 1605, 1607, 1609, 1610, 1613, 1615, 1618, 1621, 1623, 1625, 1626, 1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1655, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1706, 1707, 1710, 1712, 1713, 1715, 1717, 1718, 1720, 1722, 1723, 1730, 1732, 1733, 1735, 1737, 1738, 1740, 1742, 1743, 1745, 1748, 1750, 1754, 1755, 1756, 1758, 1759, 1760, 1761, 1763, 1765, 1766, 1769, 1771, 1773, 1774, 1775, 1776, 1779, 1786, 1787, 1789, 1790, 1791, 1792, 1897], "vardeps_int": [1490, 1510, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "rename_vars_int": [1490, 1506, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "renam": [1490, 1505, 1506, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1890], "rename_vars_float": [1490, 1505, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "finalize_individu": [1490, 1498, 1511, 1513, 1520, 1531, 1538, 1555, 1582, 1596, 1600, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786], "champion": [1490, 1498, 1511, 1513, 1520, 1531, 1538, 1555, 1582, 1596, 1600, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786], "finalize_popul": [1490, 1499, 1511, 1513, 1520, 1531, 1538, 1556, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "ana_deriv": [1490, 1493, 1511, 1513, 1520, 1531, 1596, 1605, 1607, 1613, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706], "info": [1490, 1492, 1511, 1513, 1520, 1531, 1538, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "finish": [1490, 1501, 1511, 1513, 1520, 1531, 1538, 1582, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1894, 1897], "farmoptproblem": [1491, 1512, 1514, 1521, 1532, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1597, 1605, 1606, 1608, 1613, 1614, 1630, 1635, 1640, 1645, 1661, 1667, 1673, 1680, 1686, 1692, 1698, 1704, 1880, 1890], "iwopi": [1491, 1514, 1521, 1532, 1538, 1540, 1541, 1542, 1547, 1557, 1655, 1706, 1707, 1710, 1720, 1730, 1740, 1875, 1880, 1882, 1891, 1897], "differenti": [1493, 1547, 1557], "n_sel_compon": [1493, 1494, 1495, 1515, 1516, 1523, 1524, 1598, 1599, 1609, 1610, 1631, 1632, 1636, 1637, 1641, 1642, 1646, 1647, 1652, 1653, 1662, 1663, 1668, 1669, 1674, 1675, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700], "n_pop": [1495, 1499, 1516, 1524, 1546, 1549, 1553, 1556, 1579, 1585, 1587, 1588, 1589, 1599, 1610, 1626, 1632, 1637, 1642, 1647, 1653, 1658, 1663, 1669, 1675, 1682, 1688, 1694, 1700, 1713, 1723, 1733, 1743, 1761, 1774, 1776, 1792, 1880], "dep": [1509, 1510, 1519, 1530, 1596, 1597, 1604, 1606, 1614], "farmboundaryconstraint": [1511, 1512, 1880, 1897], "mindistconstraint": [1513, 1514, 1515, 1516, 1517, 1518, 1519, 1880, 1897], "keep": [1513, 1880, 1892], "min_dist": [1513, 1514, 1660, 1661, 1672, 1673, 1710, 1711, 1720, 1721, 1730, 1731, 1740, 1741, 1763, 1764, 1897], "min_dist_unit": [1513, 1514, 1897], "constaint": [1513, 1517, 1660, 1664], "geom_layout": [1520, 1531, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1875, 1880], "farmobject": [1531, 1532, 1533, 1534, 1535, 1536, 1537, 1596, 1597, 1606, 1607, 1608, 1614, 1880], "calc_farm_arg": [1538, 1540], "all_turbin": [1538, 1544, 1582, 1615, 1754, 1763, 1779], "tvar": [1538, 1577, 1582, 1615, 1754, 1763, 1779], "turbine_i": [1538, 1573, 1577, 1582, 1615, 1754, 1763, 1779], "parse_tvar": [1538, 1573, 1582, 1615, 1754, 1763, 1779], "tvr": [1538, 1573, 1582, 1615, 1754, 1763, 1779], "update_problem_individu": [1538, 1578, 1582, 1586, 1615, 1754, 1763, 1775, 1779], "update_problem_popul": [1538, 1579, 1582, 1587, 1615, 1754, 1763, 1776, 1779], "apply_individu": [1538, 1545, 1582, 1615, 1710, 1712, 1720, 1722, 1730, 1732, 1740, 1742, 1754, 1763, 1779], "apply_popul": [1538, 1546, 1582, 1615, 1710, 1713, 1720, 1723, 1730, 1733, 1740, 1743, 1754, 1763, 1779], "int_inf": [1538, 1539, 1563, 1567, 1582, 1615, 1622, 1624, 1710, 1720, 1730, 1740, 1749, 1751, 1754, 1763, 1770, 1772, 1779], "999999": [1538, 1539, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "initial_values_int": [1538, 1559, 1582, 1615, 1619, 1710, 1720, 1725, 1730, 1740, 1746, 1754, 1763, 1767, 1779], "min_values_int": [1538, 1567, 1582, 1615, 1624, 1710, 1720, 1728, 1730, 1740, 1751, 1754, 1763, 1772, 1779], "max_values_int": [1538, 1563, 1582, 1615, 1622, 1710, 1720, 1727, 1730, 1740, 1749, 1754, 1763, 1770, 1779], "initial_values_float": [1538, 1558, 1582, 1615, 1618, 1710, 1715, 1720, 1730, 1735, 1740, 1745, 1754, 1756, 1763, 1766, 1779, 1787], "min_values_float": [1538, 1566, 1582, 1615, 1623, 1710, 1718, 1720, 1730, 1738, 1740, 1750, 1754, 1759, 1763, 1771, 1779, 1790], "max_values_float": [1538, 1562, 1582, 1615, 1621, 1710, 1717, 1720, 1730, 1737, 1740, 1748, 1754, 1758, 1763, 1769, 1779, 1789], "add_object": [1538, 1542, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1897], "varmap_int": [1538, 1541, 1542, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "varmap_float": [1538, 1541, 1542, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "add_constraint": [1538, 1541, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1897], "min_values_constraint": [1538, 1565, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "max_values_constraint": [1538, 1561, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "constraints_tol": [1538, 1550, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "n_object": [1538, 1552, 1553, 1555, 1564, 1569, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786, 1897], "n_constraint": [1538, 1550, 1552, 1553, 1555, 1556, 1561, 1565, 1568, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1755, 1763, 1765, 1779, 1786, 1897], "calc_gradi": [1538, 1547, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "ivar": [1538, 1547, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "get_gradi": [1538, 1547, 1557, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "obtain": [1538, 1557, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1895, 1899, 1907], "link": [1538, 1557, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1891, 1897, 1906], "maximize_obj": [1538, 1564, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "evaluate_individu": [1538, 1552, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "ret_prob_r": [1538, 1552, 1553, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "evaluate_popul": [1538, 1553, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "check_constraints_individu": [1538, 1548, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "check_constraints_popul": [1538, 1549, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "prob_res_einsum_individu": [1538, 1574, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "prob_res_list": [1538, 1574, 1575, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "coeff": [1538, 1574, 1575, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "prob_res_einsum_popul": [1538, 1575, 1582, 1615, 1710, 1720, 1730, 1740, 1754, 1763, 1779], "fvar": 1547, "vr": 1547, "overload": [1547, 1872, 1873, 1890], "optfunctionlist": [1547, 1557], "n_vr": 1547, "ctol": 1550, "con": [1552, 1553, 1555, 1556, 1755, 1765, 1786], "prob_r": [1552, 1553, 1574, 1575], "cf": [1557, 1902], "problemdefaultfunc": 1557, "cma": 1561, "unbound": [1562, 1563, 1566, 1567, 1621, 1622, 1623, 1624, 1717, 1718, 1737, 1738, 1748, 1749, 1750, 1751, 1758, 1759, 1769, 1770, 1771, 1772, 1789, 1790], "cmi": 1565, "n_con": 1568, "n_obj": 1569, "farmvarsproblem": [1582, 1583, 1584, 1585, 1586, 1587, 1615, 1616, 1754, 1763, 1764, 1779, 1785, 1880, 1881, 1890], "pre_rotor_var": [1582, 1583], "post_rotor_var": [1582, 1583], "opt2farm_vars_individu": [1582, 1584, 1615, 1625, 1754, 1760, 1763, 1773, 1779, 1791], "opt2farm_vars_popul": [1582, 1585, 1615, 1626, 1754, 1761, 1763, 1774, 1779, 1792], "farm_var": [1584, 1585, 1625, 1626, 1760, 1761, 1773, 1774, 1791, 1792], "popstat": [1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1880], "farmvarobject": [1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1613, 1880], "contract_st": [1596, 1597, 1606, 1614], "contract_turbin": [1597, 1606, 1614], "maxfarmpow": [1605, 1606, 1880, 1897], "maximize_pow": [1605, 1606, 1897], "maxnturbin": [1607, 1608, 1609, 1610, 1611, 1612, 1880], "turrbin": [1607, 1880], "check_valid": [1607, 1608], "max_n_turbin": [1607, 1608], "minimalmaxti": [1613, 1614, 1880], "minimize_ti": [1613, 1614], "optfarmvar": [1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1881], "typ": [1615, 1617], "model_kei": 1617, "geometr": [1629, 1630, 1634, 1635, 1639, 1640, 1644, 1645, 1650, 1660, 1661, 1666, 1667, 1672, 1673, 1679, 1680, 1685, 1686, 1691, 1692, 1697, 1698, 1703, 1704, 1710, 1720, 1881, 1882, 1890], "cmpnt": [1629, 1631, 1632, 1634, 1636, 1637, 1639, 1641, 1642, 1644, 1646, 1647, 1650, 1652, 1653, 1660, 1662, 1663, 1666, 1668, 1669, 1672, 1674, 1675, 1679, 1681, 1682, 1685, 1687, 1688, 1691, 1693, 1694, 1697, 1699, 1700, 1703], "additio": [1630, 1635, 1640, 1645, 1661, 1667], "cfixn": [1634, 1635, 1636, 1637, 1638, 1882], "cmaxn": [1639, 1640, 1641, 1642, 1643, 1882], "cmindens": [1644, 1645, 1646, 1647, 1648, 1649, 1882], "min_valu": [1644, 1645], "dfactor": [1644, 1645, 1672, 1673], "min_dens": [1644, 1645], "cminn": [1650, 1651, 1652, 1653, 1654, 1882], "tol": [1651, 1655, 1656], "violat": [1651, 1655, 1656], "optfunct": [1655, 1706, 1875], "mindist": [1660, 1661, 1662, 1663, 1664, 1665, 1882], "cdist": [1671, 1709], "xa": [1671, 1709], "xb": [1671, 1709], "metric": [1671, 1709], "euclidean": [1671, 1709], "m_a": [1671, 1709], "m_b": [1671, 1709], "braycurti": [1671, 1709], "canberra": [1671, 1709], "chebyshev": [1671, 1709], "cityblock": [1671, 1709], "cosin": [1671, 1709], "dice": [1671, 1709], "jaccard": [1671, 1709], "jensenshannon": [1671, 1709], "kulczynski1": [1671, 1709], "mahalanobi": [1671, 1709], "minkowski": [1671, 1709], "rogerstanimoto": [1671, 1709], "russellrao": [1671, 1709], "seuclidean": [1671, 1709], "sokalmichen": [1671, 1709], "sokalsneath": [1671, 1709], "sqeuclidean": [1671, 1709], "yule": [1671, 1709], "unweight": [1671, 1709], "varianc": [1671, 1709], "vstack": [1671, 1709], "ddof": [1671, 1709], "vi": [1671, 1709], "covari": [1671, 1709], "inv": [1671, 1709], "cov": [1671, 1709], "ij": [1671, 1709], "thrown": [1671, 1709], "_p": [1671, 1709], "quasi": [1671, 1709], "citi": [1671, 1709], "manhattan": [1671, 1709], "u_i": [1671, 1709], "v_i": [1671, 1709], "_2": [1671, 1709], "disagre": [1671, 1709], "save": [1671, 1709, 1906], "shannon": [1671, 1709], "pointwis": [1671, 1709], "kullback": [1671, 1709], "leibler": [1671, 1709], "diverg": [1671, 1709], "max_i": [1671, 1709], "sum_i": [1671, 1709], "brai": [1671, 1709], "curti": [1671, 1709], "kulczynski": [1671, 1709], "roger": [1671, 1709], "tanimoto": [1671, 1709], "russel": [1671, 1709], "rao": [1671, 1709], "sokal": [1671, 1709], "michen": [1671, 1709], "sneath": [1671, 1709], "ariti": [1671, 1709], "dm": [1671, 1709], "librari": [1671, 1709, 1897, 1904], "ineffici": [1671, 1709], "35": [1671, 1709, 1894, 1895, 1897, 1902, 1905], "0456": [1671, 1709], "85": [1671, 1709, 1894, 1897], "2672": [1671, 1709, 1906], "1174": [1671, 1709], "89": [1671, 1709, 1894, 1897], "9711": [1671, 1709], "9728": [1671, 1709], "9422": [1671, 1709], "36": [1671, 1709, 1894, 1895, 1897], "1667": [1671, 1709], "86": [1671, 1709, 1888, 1897, 1899, 1905], "7833": [1671, 1709], "7044": [1671, 1709], "6172": [1671, 1709], "8856": [1671, 1709], "0893": [1671, 1709], "3561": [1671, 1709], "8477": [1671, 1709], "cube": [1671, 1709], "maxdens": [1672, 1673, 1674, 1675, 1676, 1677, 1678, 1882], "max_dens": [1672, 1673], "maxgridspac": [1679, 1680, 1681, 1682, 1683, 1684, 1882], "max_dxdi": [1679, 1680], "memimadist": [1685, 1686, 1687, 1688, 1689, 1690, 1882], "mimamean": [1685, 1686], "ofixn": [1691, 1692, 1693, 1694, 1695, 1696, 1882], "omaxn": [1697, 1698, 1699, 1700, 1701, 1702, 1703, 1882], "maxn": [1697, 1698], "ominn": [1703, 1704, 1705, 1882], "vnames_int": 1707, "vnames_float": 1707, "cname": 1707, "geomlayout": [1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1882, 1890], "calc_valid": [1710, 1711], "plotli": [1710, 1714, 1720, 1724, 1730, 1734, 1740, 1744, 1890], "true_circl": [1714, 1724, 1734, 1744], "ndarari": [1714, 1724, 1734, 1744], "geomlayoutgrid": [1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1882, 1890], "grid_spac": [1720, 1721], "geomreggrid": [1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1882, 1890], "max_dist": [1730, 1731, 1740, 1741, 1764], "n_grid": [1740, 1741, 1763, 1764], "n_max": [1740, 1741], "n_row_max": [1740, 1741, 1764], "farmlayoutoptproblem": [1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1881, 1897], "reggridslayoutoptproblem": [1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1881], "sever": [1763, 1881, 1890], "min_spac": [1763, 1779, 1785], "max_n_row": 1763, "regularlayoutoptproblem": [1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1881, 1890], "spacing_x": [1779, 1783], "spacing_i": [1779, 1784], "offset_x": [1779, 1781], "offset_i": [1779, 1782], "read_shp": [1794, 1795, 1884, 1890], "shp": [1794, 1795, 1812, 1884], "geopanda": [1794, 1795, 1812], "geodatafram": 1794, "wsg84": 1794, "read_shp_polygon": [1795, 1813, 1884, 1890], "name_col": 1795, "geom_col": 1795, "to_utm": 1795, "ret_utm_zon": [1795, 1813, 1884], "extract": 1795, "utm": [1795, 1813], "32u": [1795, 1813], "point_dict_exterior": 1795, "point_dict_interior": 1795, "utm_zone_str": [1795, 1813], "utem": [1795, 1813], "read_tab_fil": [1796, 1884], "daskrunn": [1797, 1798, 1799, 1800, 1801, 1802, 1803, 1884, 1890, 1894, 1896, 1897, 1903, 1905, 1906, 1907], "schedul": [1797, 1798, 1890, 1897, 1906], "progress_bar": [1797, 1798, 1890], "progress": [1797, 1798, 1906, 1907], "cluster_arg": [1797, 1798], "cluster": [1797, 1798, 1890, 1891, 1897, 1906, 1907], "setup": [1797, 1798, 1889, 1890, 1891, 1893, 1894, 1897, 1899, 1901, 1902, 1904, 1907, 1908], "client_arg": [1797, 1798], "client": [1797, 1798], "n_worker": [1797, 1798], "is_distribut": [1797, 1801], "threads_per_work": 1798, "worker": [1798, 1906], "thread": [1798, 1906], "defaultrunn": [1804, 1805, 1884, 1890], "shp2csv": [1812, 1884, 1890], "ifil": [1812, 1884], "ofil": [1812, 1884], "in_kwarg": [1812, 1884], "out_kwarg": [1812, 1884], "inam": 1812, "onam": 1812, "to_csv": 1812, "shp2geom2d": [1813, 1884], "shapefil": [1813, 1884], "geom": 1813, "tool": [1813, 1903, 1906], "sqrt_reg": [1814, 1884], "smallish": [1814, 1884], "two_circl": [1815, 1816], "r1": [1815, 1816, 1884], "r2": [1815, 1816, 1884], "sure": [1815, 1892, 1897, 1906], "diego": 1815, "assencio": 1815, "8d6ca3d82151bad815f78addf9b5c1c6": 1815, "calc_area": [1816, 1884], "broadcast": [1816, 1818, 1819], "uv2wd": [1817, 1884], "wd2uv": [1818, 1884], "wd2wdvec": [1819, 1884], "wdvec": [1819, 1820, 1884], "wdvec2wd": [1820, 1884], "complevel": 1821, "netcfd": [1821, 1896], "to_netcdf": 1821, "moment": [1826, 1827, 1851, 1852, 1886], "kg": [1828, 1853, 1886], "m3": [1828, 1853, 1886], "temperatur": [1829, 1855, 1886], "kelvin": [1829, 1855, 1886], "amb_yawm": [1834, 1867, 1868, 1886], "maxp": [1844, 1886, 1901, 1902], "ubukhof": [1845, 1886], "pa_alpha": [1848, 1886], "porteagel": [1848, 1849, 1886, 1890], "pa_beta": [1849, 1886], "txyh": [1857, 1886, 1903], "amb2var": [1867, 1886], "var2amb": [1868, 1886], "concret": [1869, 1879, 1887], "manag": [1870, 1889, 1890, 1891, 1900], "sweep": [1870, 1871], "reach": [1870, 1872, 1877, 1890, 1894, 1905], "uns": 1870, "atmospher": [1878, 1879, 1891, 1895], "propag": [1879, 1889, 1890, 1900], "ie": 1879, "machin": 1879, "net": 1879, "extern": 1880, "classif": 1887, "cite": 1888, "joss": 1888, "bibtex": 1888, "schmidt2023": 1888, "author": [1888, 1895], "schmidt": 1888, "luka": 1888, "vollmer": 1888, "martin": 1888, "d\u00f6renk\u00e4mper": 1888, "bernhard": 1888, "stoevesandt": 1888, "21105": 1888, "05464": 1888, "publish": [1888, 1890], "volum": 1888, "page": 1888, "5464": 1888, "zenodo": 1888, "jupyt": 1889, "notebook": [1889, 1890, 1900], "folder": [1889, 1890], "repositori": [1889, 1891, 1909], "homogen": [1889, 1903], "comparison": [1889, 1891, 1894], "readi": [1890, 1898, 1904, 1905, 1908], "transfer": [1890, 1908], "fraunhof": [1890, 1891, 1897], "iw": [1890, 1891, 1895, 1897], "hous": 1890, "predecessor": [1890, 1891], "flappi": [1890, 1891], "yet": 1890, "enjoi": 1890, "await": 1890, "comment": 1890, "changelog": 1890, "fraunhoferiw": [1890, 1891, 1892, 1909], "commit": [1890, 1891], "discov": 1890, "flake8": 1890, "now": [1890, 1894, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904, 1905, 1907, 1908], "pytest": [1890, 1909], "unittest": 1890, "workflow": 1890, "docu": 1890, "io": 1890, "doc": [1890, 1906], "html": [1890, 1903, 1905], "miss": 1890, "wind_rot": [1890, 1896], "manifest": 1890, "orst": 1890, "pctsinglefil": 1890, "iecti2019": 1890, "iecti2005": 1890, "pip": [1890, 1891, 1909], "pcttwofil": 1890, "windroseoutput": 1890, "ambientwindroseoutput": 1890, "improv": 1890, "show_plotly_fig": 1890, "browser": 1890, "wind_ros": 1890, "layout_single_st": 1890, "layout_wind_ros": 1890, "layout_opt": [1890, 1897], "ipynb": 1890, "demonstr": [1890, 1893, 1895, 1897, 1901, 1904, 1907, 1908], "wrf": [1890, 1899, 1900], "ambientroseplotoutput": 1890, "multi_height": 1890, "bug": 1890, "veer": 1890, "power_mask": 1890, "solv": [1890, 1897], "cubic": 1890, "forgotten": 1890, "hotfix": 1890, "wsrho2pcttwofil": 1890, "sector_manag": 1890, "sector_man": 1890, "col_model": 1890, "linearsuperposit": 1890, "compare_wak": 1890, "yawed_wak": 1890, "simplifi": 1890, "intuit": 1890, "turboparkix": 1890, "eq": 1890, "wrong": 1890, "layout_regular_grid": 1890, "geom_reggrid": 1890, "geopandas_help": 1890, "interior": 1890, "11": [1890, 1892, 1894, 1895, 1897, 1901, 1905, 1906, 1908], "cleaner": 1890, "treatment": 1890, "slimmer": 1890, "productsuperposit": 1890, "restart": 1890, "incomplet": 1890, "slurm": 1890, "queue": 1890, "timeseries_slurm": 1890, "hpc": 1890, "apigen": 1890, "timeseries_100": [1890, 1905], "timestep": 1890, "consider": 1890, "autom": 1890, "pypi": 1890, "netcdf4": 1890, "keep_model": 1890, "mostli": 1890, "address": [1890, 1906], "rhb": [1890, 1893, 1894, 1898], "induction_rhb": 1890, "conda": [1890, 1891], "forg": [1890, 1892], "refactor": 1890, "bastankhahwak": 1890, "porteagelwak": 1890, "jump": 1890, "bastankhah025": [1890, 1897], "restructur": 1890, "simpler": 1890, "ws_linear": [1890, 1898, 1905], "ti_quadrat": [1890, 1898], "mess": 1890, "lighter": 1890, "reformul": 1890, "crespohernandez": [1890, 1908], "virtual": 1890, "betzaxialinduct": [1890, 1898], "relat": [1890, 1907], "madsenaxialinduct": [1890, 1898], "disk": 1890, "blockage_comparison": 1890, "fresh": 1890, "winds100": [1890, 1895], "tab_fil": 1890, "modular": 1891, "steer": 1891, "ow": 1891, "remot": 1891, "tracker": 1891, "report": 1891, "mit": 1891, "citat": 1891, "journal": 1891, "histori": 1891, "fork": [1891, 1892], "checkout": 1891, "new_branch": 1891, "am": [1891, 1905], "awesom": 1891, "messag": 1891, "push": 1891, "request": 1891, "flapfoam": 1891, "public": [1891, 1908], "publicli": 1891, "fund": 1891, "feder": 1891, "ministri": 1891, "econom": 1891, "affair": 1891, "climat": 1891, "action": [1891, 1900], "bmwk": 1891, "roject": 1891, "smart": 1891, "grant": 1891, "0325851b": 1891, "0325397b": 1891, "03ee3008a": 1891, "educ": 1891, "bmbf": 1891, "framework": 1891, "h2digit": 1891, "03sf0635": 1891, "furthermor": [1891, 1901], "horizon": 1891, "europ": 1891, "101084205": 1891, "decid": 1892, "dev": 1892, "egg": 1892, "clone": [1892, 1909], "cd": [1892, 1909], "concern": 1892, "strongli": 1892, "libmamba": 1892, "solver": [1892, 1897], "config": 1892, "again": [1892, 1897, 1901], "build": 1892, "windspe": [1893, 1894], "front": [1893, 1894], "comparis": 1893, "upstream": [1893, 1894], "inlin": [1893, 1894, 1896, 1897, 1899, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908], "flow_plot": 1893, "fp": 1893, "dtu10mw": [1893, 1894, 1895, 1898, 1903, 1905], "ttype": [1893, 1902], "8m": 1893, "04": [1893, 1894, 1895, 1897, 1898, 1903, 1905], "colour": 1893, "clearli": [1893, 1894, 1908], "npoint": [1893, 1894, 1904], "centreline_pt": 1893, "profile_pt": [1893, 1894], "4000": [1893, 1894, 1896, 1897, 1902, 1907], "df": [1893, 1894], "finalis": 1893, "subplots_adjust": 1893, "39": [1893, 1894, 1895, 1896, 1897, 1903, 1904, 1905, 1906], "solut": 1893, "vortex": 1893, "cylind": 1893, "realist": [1893, 1894, 1903], "sign": 1893, "And": 1893, "weakest": 1893, "strongest": 1893, "800": [1894, 1897, 1903, 1904, 1905], "400": [1894, 1897], "fact": [1894, 1908], "influenc": [1894, 1901], "downstream": [1894, 1908], "notic": [1894, 1897, 1901, 1902, 1903, 1905, 1906, 1908], "aglo": 1894, "freshli": [1894, 1898], "repeatedli": 1894, "vicin": 1894, "cut": 1894, "grid36": [1894, 1898], "bastankhah025_linear_lim_k004": [1894, 1898, 1903], "among": 1894, "basic_ctrl_pr": [1894, 1903, 1905], "power_ct_curv": [1894, 1903, 1905], "10mw": [1894, 1903, 1905], "d178d3": [1894, 1903, 1905], "h119": [1894, 1903, 1905], "basic_ctrl_postr": [1894, 1903, 1905], "rotorpoints1": 1894, "partialaxiwake10": [1894, 1903, 1905], "48": [1894, 1897], "partialwk": [1894, 1903, 1905], "sp": [1894, 1898, 1903, 1905], "ws_linear_lim": [1894, 1898, 1903], "setxyhd_t2f": [1894, 1903, 1905], "calc_yaw_centrerotor1": [1894, 1903, 1905], "urelax_ct": [1894, 1905], "iterative_calc": [1894, 1905], "oder": [1894, 1903, 1905], "00": [1894, 1895, 1897, 1899, 1903, 1905, 1906], "03": [1894, 1895, 1897, 1903, 1904, 1905, 1906], "102": [1894, 1905, 1906], "29": [1894, 1895, 1897, 1905, 1906], "lt": [1894, 1895, 1897, 1903, 1904, 1905], "gt": [1894, 1895, 1897, 1903, 1904, 1905], "u7": [1894, 1905], "float64": [1894, 1897, 1903, 1904, 1905], "chunksiz": [1894, 1905], "101": [1894, 1905, 1907], "69": [1894, 1897, 1905], "67": [1894, 1895, 1897, 1905, 1906], "103": [1894, 1905], "90": [1894, 1895, 1897, 1899], "414e": 1894, "000e": [1894, 1905], "ok": [1894, 1905], "024e": 1894, "27": [1894, 1895, 1897, 1903, 1905, 1906], "799e": 1894, "190e": 1894, "47": [1894, 1896, 1897], "019e": 1894, "659e": 1894, "40": [1894, 1897], "140": 1894, "23": [1894, 1895, 1897, 1899, 1903, 1905, 1906], "254e": 1894, "777e": 1894, "42": [1894, 1895, 1897, 1905, 1906], "09": [1894, 1895, 1906], "966e": [1894, 1905], "488e": 1894, "49": [1894, 1895, 1896, 1897], "876e": 1894, "125e": 1894, "51": [1894, 1895, 1897, 1903, 1905], "906e": 1894, "697e": 1894, "448e": 1894, "103e": 1894, "18": [1894, 1895, 1897, 1901], "105": 1894, "622e": 1894, "790e": 1894, "19": [1894, 1895, 1897, 1901, 1906], "922e": 1894, "086e": 1894, "87": [1894, 1897, 1901], "008e": 1894, "324e": 1894, "288e": 1894, "059e": 1894, "13": [1894, 1895, 1897, 1899, 1901, 1905], "141e": 1894, "067e": 1894, "14": [1894, 1895, 1897, 1901, 1905, 1906], "33": [1894, 1895, 1897, 1906], "541e": 1894, "226e": 1894, "814": [1894, 1903], "731e": 1894, "4e": [1894, 1904], "65e": 1894, "05e": 1894, "46": [1894, 1895, 1897, 1905], "43": [1894, 1897], "44": [1894, 1896, 1897, 1905], "u3": 1894, "t0": [1894, 1895, 1897, 1901, 1902, 1903, 1904, 1906, 1908], "t1": [1894, 1895, 1897, 1901, 1902, 1903, 1904, 1906, 1908], "t2": [1894, 1895, 1897, 1901, 1903, 1904, 1906], "t3": [1894, 1895, 1897, 1901, 1903, 1904, 1906], "t44": 1894, "t45": 1894, "t46": 1894, "t47": 1894, "south": [1894, 1902], "westerli": [1894, 1902], "300": [1894, 1895, 1897, 1901, 1908], "merg": 1894, "xlist": 1894, "investig": 1894, "constrict": 1894, "scenario": 1894, "500m": 1894, "bmodel": 1894, "mirror_combo": 1894, "81": [1894, 1897, 1903, 1907], "wakemirror_rhb": 1894, "64": [1894, 1895, 1897, 1905, 1906], "57": [1894, 1895, 1897, 1906], "52": [1894, 1895, 1897, 1905], "68": [1894, 1895, 1897], "wakemirror1_rhb": 1894, "104": [1894, 1905], "seem": 1894, "imagin": 1894, "120": [1894, 1895, 1903], "bname": 1894, "wakes0": 1894, "iecti2019_quart": [1894, 1898], "bastankhah2016_linear_lim_k004": [1894, 1898], "3000": [1894, 1895, 1897, 1901, 1908], "91": [1894, 1897, 1899, 1905], "56": [1894, 1897], "terminologi": [1895, 1900, 1904], "randomli": 1895, "101872": [1895, 1906], "70": [1895, 1896, 1897, 1902, 1906, 1907], "1004753": [1895, 1906], "103659": [1895, 1906], "97": [1895, 1897, 1899, 1906], "1002993": [1895, 1906], "100780": [1895, 1906], "1000779": [1895, 1906], "100290": [1895, 1906], "1004330": [1895, 1906], "t4": [1895, 1897, 1901, 1903, 1904], "103005": 1895, "1003540": 1895, "t5": [1895, 1897, 1903], "100102": 1895, "92": [1895, 1897, 1905], "1004849": 1895, "t6": [1895, 1897, 1903], "104162": 1895, "1001061": 1895, "mesoscal": 1895, "2009": [1895, 1899], "37214": [1895, 1899], "42685": [1895, 1899], "28838": [1895, 1899], "31": [1895, 1896, 1897, 1899, 1905, 1906], "27767": [1895, 1899], "36368": [1895, 1899], "30095": [1895, 1899], "150": [1895, 1897, 1899, 1905, 1906, 1907], "250": [1895, 1897, 1899, 1902, 1908], "binnd": 1895, "253": 1895, "032": 1895, "542331196166035e": 1895, "207": 1895, "145": 1895, "0001230528308906": 1895, "116": 1895, "0001563449299843": 1895, "314": 1895, "048": 1895, "618827331554488e": 1895, "302": 1895, "027": 1895, "694": 1895, "98695302482496e": 1895, "2018": [1895, 1903], "24": [1895, 1897, 1901, 1906], "172": 1895, "184": 1895, "198": [1895, 1901], "34": [1895, 1897], "209": [1895, 1897], "93": [1895, 1897, 1905], "78": [1895, 1897, 1907], "217": 1895, "223": 1895, "26": [1895, 1896, 1897, 1903, 1906], "227": 1895, "8000": [1895, 1904, 1906], "62": [1895, 1897, 1906], "244": [1895, 1906], "0504": [1895, 1906], "243": [1895, 1906], "0514": [1895, 1906], "0522": [1895, 1906], "241": [1895, 1906], "0523": [1895, 1906], "0518": 1895, "242": 1895, "0513": 1895, "269": 1895, "836": 1895, "344": 1895, "268": 1895, "532": 1895, "267": 1895, "406": 1895, "265": 1895, "981": 1895, "coars": [1895, 1897, 1907], "216": [1895, 1897, 1907], "bremen": [1895, 1897, 1902], "germani": [1895, 1897], "00158": [1895, 1897, 1907], "00244": [1895, 1897, 1907], "00319": [1895, 1897, 1907], "00367": 1895, "00042": [1895, 1897, 1907], "inhomogen": 1895, "long_nam": 1895, "subtitl": 1895, "2500": [1895, 1896, 1897], "180": 1895, "220": 1895, "dtu10": 1895, "iea15": 1895, "iea15mw": [1895, 1898], "iwt7": [1895, 1898], "nrel5": [1895, 1901, 1904, 1906], "nrel5mw": [1895, 1896, 1897, 1898, 1899, 1901, 1904, 1906, 1907, 1908], "nstate": 1895, "ncurv": 1895, "pctcurv": 1895, "categori": 1895, "relative_to": 1895, "posixpath": 1895, "printout": [1895, 1904], "feel": 1895, "invit": 1895, "claim": 1896, "our": [1896, 1897, 1898, 1899, 1901, 1902, 1903, 1907, 1908], "realiz": [1896, 1908], "streamlines_100": [1896, 1898], "grid16": [1896, 1898], "jensen_linear_k007": [1896, 1898, 1904], "implicit": [1896, 1897, 1906, 1908], "fr": [1896, 1899, 1901, 1904, 1906], "to_datafram": [1896, 1899, 1901, 1904, 1905, 1906, 1908], "201": 1896, "158092": 1896, "491089": 1896, "1474": 1896, "211367": 1896, "208": [1896, 1897], "044994": 1896, "673386": 1896, "1580": 1896, "523022": 1896, "214": [1896, 1897], "523994": 1896, "960601": 1896, "1748": 1896, "171047": 1896, "218": 1896, "242345": 1896, "867297": 1896, "1127": 1896, "597810": 1896, "222": 1896, "297880": 1896, "283373": 1896, "1352": 1896, "715530": 1896, "899315": 1896, "731909": 1896, "808657": 1896, "1614": 1896, "607085": 1896, "1101": 1896, "211997": 1896, "236": 1896, "751304": 1896, "932726": 1896, "1156": 1896, "958672": 1896, "237": 1896, "139685": 1896, "375640": 1896, "142662": 1896, "1406": 1896, "547918": 1896, "801": 1896, "751505": 1896, "484049": 1896, "818854": 1896, "381124": 1896, "1665": 1896, "347000": 1896, "908": 1896, "970303": 1896, "311353": 1896, "703701": 1896, "149847": 1896, "1054": 1896, "871543": 1896, "454": 1896, "760942": 1896, "259090": 1896, "995899": 1896, "857833": 1896, "1185": 1896, "898485": 1896, "690": 1896, "639688": 1896, "676969": 1896, "357075": 1896, "1396": 1896, "122949": 1896, "537113": 1896, "352448": 1896, "263710": 1896, "521": 1896, "748653": 1896, "492": 1896, "140844": 1896, "447853": 1896, "960030": 1896, "917024": 1896, "724": 1896, "421405": 1896, "710": 1896, "071241": 1896, "815208": 1896, "580130": 1896, "998": 1896, "581195": 1896, "462887": 1896, "352662": 1896, "621921": 1896, "552147": 1896, "960214": 1896, "363478": 1896, "184792": 1896, "580285": 1896, "552663": 1896, "pymoo": 1897, "genet": 1897, "optimizer_pymoo": 1897, "gm": 1897, "tackl": 1897, "wind_rose_bremen": [1897, 1902, 1907], "0036700002": [1897, 1907], "1200": 1897, "900": [1897, 1905, 1907], "1500": 1897, "700": 1897, "question": 1897, "t7": [1897, 1903], "t8": [1897, 1903], "t9": 1897, "shortli": 1897, "bastankhah025_linear_k002": [1897, 1898], "n_obj_cmptn": 1897, "n_con_cmptn": 1897, "smoother": 1897, "ga": 1897, "n_max_gen": 1897, "pop_siz": 1897, "problem_par": 1897, "algo_par": 1897, "setup_par": 1897, "term_par": 1897, "ftol": 1897, "xtol": 1897, "print_info": 1897, "successfulli": 1897, "float_random": 1897, "floatrandomsampl": 1897, "defaultsingleobjectivetermin": 1897, "n_gen": 1897, "n_eval": 1897, "cv_min": 1897, "cv_avg": 1897, "f_avg": 1897, "f_min": 1897, "257950e": 1897, "094916e": 1897, "589298e": 1897, "141458e": 1897, "108843e": 1897, "097684e": 1897, "011586e": 1897, "869307e": 1897, "250281e": 1897, "238949e": 1897, "668302e": 1897, "350": 1897, "500554e": 1897, "011095e": 1897, "198486e": 1897, "450": 1897, "571793e": 1897, "998508e": 1897, "775495e": 1897, "550": 1897, "695093e": 1897, "482376e": 1897, "600": [1897, 1899, 1901, 1902, 1903], "369663e": 1897, "650": 1897, "255097e": 1897, "461710e": 1897, "135664e": 1897, "750": [1897, 1908], "098324e": 1897, "266611e": 1897, "850": 1897, "446678e": 1897, "484456e": 1897, "440080e": 1897, "151751e": 1897, "917821e": 1897, "998273e": 1897, "871628e": 1897, "1050": 1897, "019366e": 1897, "071983e": 1897, "1100": 1897, "4405916400": 1897, "193676e": 1897, "1150": 1897, "9794099827": 1897, "349004e": 1897, "000000e": 1897, "738912e": 1897, "632250e": 1897, "1250": 1897, "137290e": 1897, "629958e": 1897, "633040e": 1897, "1300": 1897, "1859595870": 1897, "623456e": 1897, "1350": 1897, "6172307553": 1897, "623231e": 1897, "635398e": 1897, "28": 1897, "1400": 1897, "0289892170": 1897, "623859e": 1897, "637392e": 1897, "1450": 1897, "630865e": 1897, "639713e": 1897, "636295e": 1897, "648299e": 1897, "1550": 1897, "639242e": 1897, "1600": 1897, "642970e": 1897, "659120e": 1897, "1650": 1897, "647586e": 1897, "1700": 1897, "651638e": 1897, "664510e": 1897, "1750": 1897, "656008e": 1897, "667086e": 1897, "1800": 1897, "660144e": 1897, "672340e": 1897, "37": [1897, 1905], "1850": 1897, "664176e": 1897, "679336e": 1897, "1900": 1897, "668654e": 1897, "683192e": 1897, "1950": 1897, "672131e": 1897, "675730e": 1897, "684436e": 1897, "2050": 1897, "679345e": 1897, "685910e": 1897, "2100": 1897, "682198e": 1897, "687477e": 1897, "2150": 1897, "684352e": 1897, "690953e": 1897, "2200": 1897, "686737e": 1897, "692379e": 1897, "2250": 1897, "688213e": 1897, "693244e": 1897, "2300": 1897, "690648e": 1897, "698961e": 1897, "2350": 1897, "693554e": 1897, "701783e": 1897, "2400": 1897, "696589e": 1897, "703675e": 1897, "2450": 1897, "699951e": 1897, "705554e": 1897, "702238e": 1897, "705714e": 1897, "2550": 1897, "704255e": 1897, "710990e": 1897, "2600": 1897, "706153e": 1897, "713617e": 1897, "53": [1897, 1905], "2650": 1897, "708070e": 1897, "713903e": 1897, "54": 1897, "2700": 1897, "709566e": 1897, "2750": 1897, "711365e": 1897, "714727e": 1897, "2800": 1897, "712767e": 1897, "715763e": 1897, "2850": 1897, "713924e": 1897, "717583e": 1897, "2900": 1897, "715063e": 1897, "718967e": 1897, "59": [1897, 1903], "2950": 1897, "716309e": 1897, "720381e": 1897, "717715e": 1897, "721396e": 1897, "61": 1897, "3050": 1897, "718699e": 1897, "722662e": 1897, "3100": 1897, "719379e": 1897, "723719e": 1897, "63": [1897, 1905, 1906], "3150": 1897, "720750e": 1897, "728523e": 1897, "3200": 1897, "721825e": 1897, "3250": 1897, "723489e": 1897, "730297e": 1897, "66": [1897, 1905, 1906], "3300": 1897, "724960e": 1897, "3350": 1897, "726414e": 1897, "3400": 1897, "728228e": 1897, "736205e": 1897, "3450": 1897, "729573e": 1897, "3500": 1897, "730764e": 1897, "71": 1897, "3550": 1897, "732604e": 1897, "740851e": 1897, "3600": 1897, "734725e": 1897, "3650": 1897, "736656e": 1897, "74": [1897, 1905], "3700": 1897, "738042e": 1897, "742883e": 1897, "3750": 1897, "739408e": 1897, "76": 1897, "3800": 1897, "740628e": 1897, "745662e": 1897, "77": [1897, 1905, 1907], "3850": 1897, "742020e": 1897, "747658e": 1897, "3900": 1897, "743480e": 1897, "748826e": 1897, "79": [1897, 1904, 1905], "3950": 1897, "745263e": 1897, "750244e": 1897, "80": [1897, 1905, 1907], "746462e": 1897, "4050": 1897, "747639e": 1897, "750263e": 1897, "82": 1897, "4100": 1897, "748825e": 1897, "750442e": 1897, "4150": 1897, "749469e": 1897, "750688e": 1897, "84": [1897, 1906], "4200": 1897, "750088e": 1897, "751212e": 1897, "4250": 1897, "750365e": 1897, "4300": 1897, "750600e": 1897, "751361e": 1897, "4350": 1897, "750885e": 1897, "752174e": 1897, "4400": 1897, "751208e": 1897, "752654e": 1897, "4450": 1897, "751561e": 1897, "752717e": 1897, "4500": 1897, "751994e": 1897, "752956e": 1897, "4550": 1897, "752418e": 1897, "753591e": 1897, "4600": 1897, "755239e": 1897, "4650": 1897, "753058e": 1897, "755383e": 1897, "94": 1897, "4700": 1897, "753560e": 1897, "755434e": 1897, "4750": 1897, "754149e": 1897, "96": 1897, "4800": 1897, "754853e": 1897, "756107e": 1897, "4850": 1897, "755318e": 1897, "756331e": 1897, "98": 1897, "4900": 1897, "755540e": 1897, "756656e": 1897, "4950": 1897, "755761e": 1897, "756008e": 1897, "28783": 1897, "277672267686": 1897, "x_0000": 1897, "114235e": 1897, "y_0000": 1897, "311872e": 1897, "x_0001": 1897, "197274e": 1897, "y_0001": 1897, "544626e": 1897, "x_0002": 1897, "998818e": 1897, "y_0002": 1897, "087410e": 1897, "x_0003": 1897, "932613e": 1897, "y_0003": 1897, "498619e": 1897, "x_0004": 1897, "951248e": 1897, "y_0004": 1897, "494226e": 1897, "x_0005": 1897, "365731e": 1897, "y_0005": 1897, "180728e": 1897, "x_0006": 1897, "168690e": 1897, "y_0006": 1897, "726276e": 1897, "x_0007": 1897, "468598e": 1897, "y_0007": 1897, "232537e": 1897, "x_0008": 1897, "999757e": 1897, "y_0008": 1897, "507834e": 1897, "x_0009": 1897, "017820e": 1897, "y_0009": 1897, "495002e": 1897, "878328e": 1897, "boundary_0000": 1897, "573154e": 1897, "boundary_0001": 1897, "boundary_0002": 1897, "182467e": 1897, "boundary_0003": 1897, "381264e": 1897, "boundary_0004": 1897, "875224e": 1897, "boundary_0005": 1897, "boundary_0006": 1897, "787956e": 1897, "boundary_0007": 1897, "385391e": 1897, "boundary_0008": 1897, "426929e": 1897, "boundary_0009": 1897, "781952e": 1897, "dist_0_1": 1897, "434586e": 1897, "dist_0_2": 1897, "027015e": 1897, "dist_0_3": 1897, "421938e": 1897, "dist_0_4": 1897, "439414e": 1897, "dist_0_5": 1897, "194822e": 1897, "dist_0_6": 1897, "880748e": 1897, "dist_0_7": 1897, "044156e": 1897, "dist_0_8": 1897, "585859e": 1897, "dist_0_9": 1897, "377881e": 1897, "dist_1_2": 1897, "374803e": 1897, "dist_1_3": 1897, "051430e": 1897, "dist_1_4": 1897, "639116e": 1897, "dist_1_5": 1897, "742672e": 1897, "dist_1_6": 1897, "511013e": 1897, "dist_1_7": 1897, "572399e": 1897, "dist_1_8": 1897, "421784e": 1897, "dist_1_9": 1897, "268625e": 1897, "dist_2_3": 1897, "592622e": 1897, "dist_2_4": 1897, "860049e": 1897, "dist_2_5": 1897, "508672e": 1897, "dist_2_6": 1897, "703977e": 1897, "dist_2_7": 1897, "298466e": 1897, "dist_2_8": 1897, "339020e": 1897, "dist_2_9": 1897, "916108e": 1897, "dist_3_4": 1897, "971977e": 1897, "dist_3_5": 1897, "895907e": 1897, "dist_3_6": 1897, "012944e": 1897, "dist_3_7": 1897, "762303e": 1897, "dist_3_8": 1897, "245126e": 1897, "dist_3_9": 1897, "394927e": 1897, "dist_4_5": 1897, "818416e": 1897, "dist_4_6": 1897, "313328e": 1897, "dist_4_7": 1897, "002709e": 1897, "dist_4_8": 1897, "959411e": 1897, "dist_4_9": 1897, "041244e": 1897, "dist_5_6": 1897, "566637e": 1897, "dist_5_7": 1897, "512055e": 1897, "dist_5_8": 1897, "293245e": 1897, "dist_5_9": 1897, "389183e": 1897, "dist_6_7": 1897, "137620e": 1897, "dist_6_8": 1897, "391898e": 1897, "dist_6_9": 1897, "735820e": 1897, "dist_7_8": 1897, "750976e": 1897, "dist_7_9": 1897, "215227e": 1897, "dist_8_9": 1897, "322396e": 1897, "210": 1897, "211": 1897, "212": 1897, "213": 1897, "215": 1897, "995": 1897, "081": 1897, "109": 1897, "5e": 1897, "611": 1897, "1197": 1897, "999": 1897, "546": 1897, "501": 1897, "131": [1897, 1899], "654": 1897, "508": 1897, "495e": 1897, "00013": 1897, "u2": [1897, 1903, 1904, 1905], "dpar": 1897, "outside_whit": 1897, "organ": 1898, "axial_induct": 1898, "farm_pmask": 1898, "pmask": [1898, 1901, 1902], "farm_hubh_data": 1898, "hubh_data": 1898, "farm_kti": 1898, "farm_kti_02": 1898, "kti_02": [1898, 1906], "farm_kti_04": 1898, "kti_04": 1898, "farm_kti_05": 1898, "kti_05": [1898, 1907, 1908], "farm_kti_amb": 1898, "kti_amb": 1898, "farm_kti_amb_02": 1898, "kti_amb_02": 1898, "farm_kti_amb_04": 1898, "kti_amb_04": 1898, "farm_kti_amb_05": 1898, "kti_amb_05": 1898, "farm_thrust2ct": 1898, "farm_yaw2yawm": 1898, "farm_yawm2yaw": 1898, "axiwake10": 1898, "axiwake2": 1898, "axiwake20": 1898, "axiwake3": 1898, "axiwake4": 1898, "axiwake5": 1898, "axiwake6": 1898, "axiwake7": 1898, "axiwake8": 1898, "axiwake9": 1898, "distslic": 1898, "distsliced100": 1898, "distsliced16": 1898, "distsliced25": 1898, "distsliced36": 1898, "distsliced4": 1898, "distsliced400": 1898, "distsliced49": 1898, "distsliced64": 1898, "distsliced81": 1898, "distsliced9": 1898, "grid100": 1898, "grid25": 1898, "grid4": 1898, "grid400": 1898, "grid49": 1898, "grid64": 1898, "grid81": 1898, "grid9": [1898, 1899], "top_hat": 1898, "level10": 1898, "level2": 1898, "level20": 1898, "level3": 1898, "level4": 1898, "level5": 1898, "level6": 1898, "level7": 1898, "level8": 1898, "level9": 1898, "5mw": [1898, 1902, 1904, 1906], "null_typ": 1898, "rotor_wd_farmo": 1898, "seq_dyn_wak": [1898, 1903], "seq_dyn_wakes_10min": 1898, "seq_dyn_wakes_10": 1898, "seq_dyn_wakes_1min": [1898, 1903], "seq_dyn_wakes_1": 1898, "seq_dyn_wakes_30min": 1898, "seq_dyn_wakes_30": 1898, "streamlines_1": 1898, "streamlines_10": 1898, "streamlines_100_farmo": 1898, "streamlines_100_yaw": 1898, "streamlines_10_farmo": 1898, "streamlines_10_yaw": 1898, "streamlines_1_farmo": 1898, "streamlines_1_yaw": 1898, "streamlines_5": 1898, "streamlines_50": 1898, "streamlines_500": 1898, "streamlines_500_farmo": 1898, "streamlines_500_yaw": 1898, "streamlines_50_farmo": 1898, "streamlines_50_yaw": 1898, "streamlines_5_farmo": 1898, "streamlines_5_yaw": 1898, "timelines_10min": 1898, "timelines_10": [1898, 1905], "timelines_1km": 1898, "timelines_1min": 1898, "timelines_1": 1898, "timelines_30min": 1898, "timelines_30": 1898, "bastankhah025b_cub": 1898, "ws_cubic": 1898, "bastankhah025b_cubic_amb": 1898, "ws_cubic_amb": 1898, "bastankhah025b_cubic_amb_k002": 1898, "bastankhah025b_cubic_amb_k004": 1898, "bastankhah025b_cubic_k002": 1898, "bastankhah025b_cubic_k004": 1898, "bastankhah025b_linear": 1898, "bastankhah025b_linear_amb": 1898, "ws_linear_amb": 1898, "bastankhah025b_linear_amb_k002": 1898, "bastankhah025b_linear_amb_k004": 1898, "bastankhah025b_linear_amb_lim": 1898, "ws_linear_amb_lim": 1898, "bastankhah025b_linear_amb_lim_k002": 1898, "bastankhah025b_linear_amb_lim_k004": 1898, "bastankhah025b_linear_k002": 1898, "bastankhah025b_linear_k004": 1898, "bastankhah025b_linear_lim": 1898, "bastankhah025b_linear_lim_k002": 1898, "bastankhah025b_linear_lim_k004": 1898, "bastankhah025b_max_amb": 1898, "ws_max_amb": 1898, "bastankhah025b_max_amb_k002": 1898, "bastankhah025b_max_amb_k004": 1898, "bastankhah025b_product": 1898, "ws_product": 1898, "bastankhah025b_product_k002": 1898, "bastankhah025b_product_k004": 1898, "bastankhah025b_product_lim": 1898, "ws_product_lim": 1898, "bastankhah025b_product_lim_k002": 1898, "bastankhah025b_product_lim_k004": 1898, "bastankhah025b_quadrat": 1898, "ws_quadrat": 1898, "bastankhah025b_quadratic_amb": 1898, "ws_quadratic_amb": 1898, "bastankhah025b_quadratic_amb_k002": 1898, "bastankhah025b_quadratic_amb_k004": 1898, "bastankhah025b_quadratic_amb_lim": 1898, "ws_quadratic_amb_lim": 1898, "bastankhah025b_quadratic_amb_lim_k002": 1898, "bastankhah025b_quadratic_amb_lim_k004": 1898, "bastankhah025b_quadratic_k002": 1898, "bastankhah025b_quadratic_k004": 1898, "bastankhah025b_quart": 1898, "ws_quartic": 1898, "bastankhah025b_quartic_amb": 1898, "ws_quartic_amb": 1898, "bastankhah025b_quartic_amb_k002": 1898, "bastankhah025b_quartic_amb_k004": 1898, "bastankhah025b_quartic_k002": 1898, "bastankhah025b_quartic_k004": 1898, "bastankhah025b_wmax": 1898, "ws_wmax": 1898, "bastankhah025b_wmax_k002": 1898, "bastankhah025b_wmax_k004": 1898, "bastankhah025b_wquadratic_lim": 1898, "ws_wquadratic_lim": 1898, "bastankhah025b_wquadratic_lim_k002": 1898, "bastankhah025b_wquadratic_lim_k004": 1898, "bastankhah025_cub": 1898, "bastankhah025_cubic_amb": 1898, "bastankhah025_cubic_amb_k002": 1898, "bastankhah025_cubic_amb_k004": 1898, "bastankhah025_cubic_k002": 1898, "bastankhah025_cubic_k004": 1898, "bastankhah025_linear": 1898, "bastankhah025_linear_amb": 1898, "bastankhah025_linear_amb_k002": 1898, "bastankhah025_linear_amb_k004": 1898, "bastankhah025_linear_amb_lim": 1898, "bastankhah025_linear_amb_lim_k002": 1898, "bastankhah025_linear_amb_lim_k004": 1898, "bastankhah025_linear_k004": 1898, "bastankhah025_linear_lim": 1898, "bastankhah025_linear_lim_k002": 1898, "bastankhah025_max_amb": 1898, "bastankhah025_max_amb_k002": 1898, "bastankhah025_max_amb_k004": 1898, "bastankhah025_product": 1898, "bastankhah025_product_k002": 1898, "bastankhah025_product_k004": 1898, "bastankhah025_product_lim": 1898, "bastankhah025_product_lim_k002": 1898, "bastankhah025_product_lim_k004": 1898, "bastankhah025_quadrat": 1898, "bastankhah025_quadratic_amb": 1898, "bastankhah025_quadratic_amb_k002": 1898, "bastankhah025_quadratic_amb_k004": 1898, "bastankhah025_quadratic_amb_lim": 1898, "bastankhah025_quadratic_amb_lim_k002": 1898, "bastankhah025_quadratic_amb_lim_k004": 1898, "bastankhah025_quadratic_k002": 1898, "bastankhah025_quadratic_k004": 1898, "bastankhah025_quart": 1898, "bastankhah025_quartic_amb": 1898, "bastankhah025_quartic_amb_k002": 1898, "bastankhah025_quartic_amb_k004": 1898, "bastankhah025_quartic_k002": 1898, "bastankhah025_quartic_k004": 1898, "bastankhah025_wmax": 1898, "bastankhah025_wmax_k002": 1898, "bastankhah025_wmax_k004": 1898, "bastankhah025_wquadratic_lim": 1898, "bastankhah025_wquadratic_lim_k002": 1898, "bastankhah025_wquadratic_lim_k004": 1898, "bastankhah2014b_cub": 1898, "bastankhah2014b_cubic_amb": 1898, "bastankhah2014b_cubic_amb_k002": 1898, "bastankhah2014b_cubic_amb_k004": 1898, "bastankhah2014b_cubic_k002": 1898, "bastankhah2014b_cubic_k004": 1898, "bastankhah2014b_linear": 1898, "bastankhah2014b_linear_amb": 1898, "bastankhah2014b_linear_amb_k002": 1898, "bastankhah2014b_linear_amb_k004": 1898, "bastankhah2014b_linear_amb_lim": 1898, "bastankhah2014b_linear_amb_lim_k002": 1898, "bastankhah2014b_linear_amb_lim_k004": 1898, "bastankhah2014b_linear_k002": 1898, "bastankhah2014b_linear_k004": 1898, "bastankhah2014b_linear_lim": 1898, "bastankhah2014b_linear_lim_k002": 1898, "bastankhah2014b_linear_lim_k004": 1898, "bastankhah2014b_max_amb": 1898, "bastankhah2014b_max_amb_k002": 1898, "bastankhah2014b_max_amb_k004": 1898, "bastankhah2014b_product": 1898, "bastankhah2014b_product_k002": 1898, "bastankhah2014b_product_k004": 1898, "bastankhah2014b_product_lim": 1898, "bastankhah2014b_product_lim_k002": 1898, "bastankhah2014b_product_lim_k004": 1898, "bastankhah2014b_quadrat": 1898, "bastankhah2014b_quadratic_amb": 1898, "bastankhah2014b_quadratic_amb_k002": 1898, "bastankhah2014b_quadratic_amb_k004": 1898, "bastankhah2014b_quadratic_amb_lim": 1898, "bastankhah2014b_quadratic_amb_lim_k002": 1898, "bastankhah2014b_quadratic_amb_lim_k004": 1898, "bastankhah2014b_quadratic_k002": 1898, "bastankhah2014b_quadratic_k004": 1898, "bastankhah2014b_quart": 1898, "bastankhah2014b_quartic_amb": 1898, "bastankhah2014b_quartic_amb_k002": 1898, "bastankhah2014b_quartic_amb_k004": 1898, "bastankhah2014b_quartic_k002": 1898, "bastankhah2014b_quartic_k004": 1898, "bastankhah2014b_wmax": 1898, "bastankhah2014b_wmax_k002": 1898, "bastankhah2014b_wmax_k004": 1898, "bastankhah2014b_wquadratic_lim": 1898, "bastankhah2014b_wquadratic_lim_k002": 1898, "bastankhah2014b_wquadratic_lim_k004": 1898, "bastankhah2014_cub": 1898, "bastankhah2014_cubic_amb": 1898, "bastankhah2014_cubic_amb_k002": 1898, "bastankhah2014_cubic_amb_k004": 1898, "bastankhah2014_cubic_k002": 1898, "bastankhah2014_cubic_k004": 1898, "bastankhah2014_linear": [1898, 1907], "bastankhah2014_linear_amb": 1898, "bastankhah2014_linear_amb_k002": 1898, "bastankhah2014_linear_amb_k004": 1898, "bastankhah2014_linear_amb_lim": 1898, "bastankhah2014_linear_amb_lim_k002": 1898, "bastankhah2014_linear_amb_lim_k004": 1898, "bastankhah2014_linear_k002": [1898, 1899, 1901, 1902], "bastankhah2014_linear_k004": [1898, 1905], "bastankhah2014_linear_lim": 1898, "bastankhah2014_linear_lim_k002": 1898, "bastankhah2014_linear_lim_k004": 1898, "bastankhah2014_max_amb": 1898, "bastankhah2014_max_amb_k002": 1898, "bastankhah2014_max_amb_k004": 1898, "bastankhah2014_product": 1898, "bastankhah2014_product_k002": 1898, "bastankhah2014_product_k004": 1898, "bastankhah2014_product_lim": 1898, "bastankhah2014_product_lim_k002": 1898, "bastankhah2014_product_lim_k004": 1898, "bastankhah2014_quadrat": [1898, 1906], "bastankhah2014_quadratic_amb": 1898, "bastankhah2014_quadratic_amb_k002": 1898, "bastankhah2014_quadratic_amb_k004": 1898, "bastankhah2014_quadratic_amb_lim": 1898, "bastankhah2014_quadratic_amb_lim_k002": 1898, "bastankhah2014_quadratic_amb_lim_k004": 1898, "bastankhah2014_quadratic_k002": 1898, "bastankhah2014_quadratic_k004": 1898, "bastankhah2014_quart": 1898, "bastankhah2014_quartic_amb": 1898, "bastankhah2014_quartic_amb_k002": 1898, "bastankhah2014_quartic_amb_k004": 1898, "bastankhah2014_quartic_k002": 1898, "bastankhah2014_quartic_k004": 1898, "bastankhah2014_wmax": 1898, "bastankhah2014_wmax_k002": 1898, "bastankhah2014_wmax_k004": 1898, "bastankhah2014_wquadratic_lim": 1898, "bastankhah2014_wquadratic_lim_k002": 1898, "bastankhah2014_wquadratic_lim_k004": 1898, "bastankhah2016b_cub": 1898, "bastankhah2016b_cubic_amb": 1898, "bastankhah2016b_cubic_amb_k002": 1898, "bastankhah2016b_cubic_amb_k004": 1898, "bastankhah2016b_cubic_k002": 1898, "bastankhah2016b_cubic_k004": 1898, "bastankhah2016b_linear": 1898, "bastankhah2016b_linear_amb": 1898, "bastankhah2016b_linear_amb_k002": 1898, "bastankhah2016b_linear_amb_k004": 1898, "bastankhah2016b_linear_amb_lim": 1898, "bastankhah2016b_linear_amb_lim_k002": 1898, "bastankhah2016b_linear_amb_lim_k004": 1898, "bastankhah2016b_linear_k002": 1898, "bastankhah2016b_linear_k004": 1898, "bastankhah2016b_linear_lim": 1898, "bastankhah2016b_linear_lim_k002": 1898, "bastankhah2016b_linear_lim_k004": 1898, "bastankhah2016b_max_amb": 1898, "bastankhah2016b_max_amb_k002": 1898, "bastankhah2016b_max_amb_k004": 1898, "bastankhah2016b_product": 1898, "bastankhah2016b_product_k002": 1898, "bastankhah2016b_product_k004": 1898, "bastankhah2016b_product_lim": 1898, "bastankhah2016b_product_lim_k002": 1898, "bastankhah2016b_product_lim_k004": 1898, "bastankhah2016b_quadrat": 1898, "bastankhah2016b_quadratic_amb": 1898, "bastankhah2016b_quadratic_amb_k002": 1898, "bastankhah2016b_quadratic_amb_k004": 1898, "bastankhah2016b_quadratic_amb_lim": 1898, "bastankhah2016b_quadratic_amb_lim_k002": 1898, "bastankhah2016b_quadratic_amb_lim_k004": 1898, "bastankhah2016b_quadratic_k002": 1898, "bastankhah2016b_quadratic_k004": 1898, "bastankhah2016b_quart": 1898, "bastankhah2016b_quartic_amb": 1898, "bastankhah2016b_quartic_amb_k002": 1898, "bastankhah2016b_quartic_amb_k004": 1898, "bastankhah2016b_quartic_k002": 1898, "bastankhah2016b_quartic_k004": 1898, "bastankhah2016b_wmax": 1898, "bastankhah2016b_wmax_k002": 1898, "bastankhah2016b_wmax_k004": 1898, "bastankhah2016b_wquadratic_lim": 1898, "bastankhah2016b_wquadratic_lim_k002": 1898, "bastankhah2016b_wquadratic_lim_k004": 1898, "bastankhah2016_cub": 1898, "bastankhah2016_cubic_amb": 1898, "bastankhah2016_cubic_amb_k002": 1898, "bastankhah2016_cubic_amb_k004": 1898, "bastankhah2016_cubic_k002": 1898, "bastankhah2016_cubic_k004": 1898, "bastankhah2016_linear": [1898, 1908], "bastankhah2016_linear_amb": 1898, "bastankhah2016_linear_amb_k002": 1898, "bastankhah2016_linear_amb_k004": 1898, "bastankhah2016_linear_amb_lim": 1898, "bastankhah2016_linear_amb_lim_k002": 1898, "bastankhah2016_linear_amb_lim_k004": 1898, "bastankhah2016_linear_k002": 1898, "bastankhah2016_linear_k004": 1898, "bastankhah2016_linear_lim": 1898, "bastankhah2016_linear_lim_k002": 1898, "bastankhah2016_max_amb": 1898, "bastankhah2016_max_amb_k002": 1898, "bastankhah2016_max_amb_k004": 1898, "bastankhah2016_product": 1898, "bastankhah2016_product_k002": 1898, "bastankhah2016_product_k004": 1898, "bastankhah2016_product_lim": 1898, "bastankhah2016_product_lim_k002": 1898, "bastankhah2016_product_lim_k004": 1898, "bastankhah2016_quadrat": 1898, "bastankhah2016_quadratic_amb": 1898, "bastankhah2016_quadratic_amb_k002": 1898, "bastankhah2016_quadratic_amb_k004": 1898, "bastankhah2016_quadratic_amb_lim": 1898, "bastankhah2016_quadratic_amb_lim_k002": 1898, "bastankhah2016_quadratic_amb_lim_k004": 1898, "bastankhah2016_quadratic_k002": 1898, "bastankhah2016_quadratic_k004": 1898, "bastankhah2016_quart": 1898, "bastankhah2016_quartic_amb": 1898, "bastankhah2016_quartic_amb_k002": 1898, "bastankhah2016_quartic_amb_k004": 1898, "bastankhah2016_quartic_k002": 1898, "bastankhah2016_quartic_k004": 1898, "bastankhah2016_wmax": 1898, "bastankhah2016_wmax_k002": 1898, "bastankhah2016_wmax_k004": 1898, "bastankhah2016_wquadratic_lim": 1898, "bastankhah2016_wquadratic_lim_k002": 1898, "bastankhah2016_wquadratic_lim_k004": 1898, "crespohernandez_ambti_cub": 1898, "ti_cub": 1898, "crespohernandez_ambti_linear": 1898, "ti_linear": 1898, "crespohernandez_ambti_max": 1898, "ti_max": 1898, "crespohernandez_ambti_quadrat": 1898, "crespohernandez_ambti_quart": 1898, "ti_quart": 1898, "crespohernandez_cub": 1898, "crespohernandez_cubic_k002": 1898, "crespohernandez_linear": 1898, "crespohernandez_linear_k002": 1898, "crespohernandez_max": [1898, 1906, 1907], "crespohernandez_max_k002": 1898, "crespohernandez_quadrat": 1898, "crespohernandez_quadratic_k002": 1898, "crespohernandez_quart": 1898, "crespohernandez_quartic_k002": 1898, "iecti2005_cub": 1898, "19076020221856677": 1898, "iecti2005_linear": 1898, "iecti2005_max": 1898, "iecti2005_quadrat": 1898, "iecti2005_quart": 1898, "iecti2019_cub": 1898, "iecti2019_linear": 1898, "iecti2019_max": [1898, 1908], "iecti2019_quadrat": 1898, "jensen_cub": 1898, "jensen_cubic_amb": 1898, "jensen_cubic_amb_k002": 1898, "jensen_cubic_amb_k004": 1898, "jensen_cubic_amb_k007": 1898, "jensen_cubic_amb_k0075": 1898, "075": 1898, "jensen_cubic_k002": 1898, "jensen_cubic_k004": 1898, "jensen_cubic_k007": 1898, "jensen_cubic_k0075": 1898, "jensen_linear": 1898, "jensen_linear_amb": 1898, "jensen_linear_amb_k002": 1898, "jensen_linear_amb_k004": 1898, "jensen_linear_amb_k007": 1898, "jensen_linear_amb_k0075": 1898, "jensen_linear_amb_lim": 1898, "jensen_linear_amb_lim_k002": 1898, "jensen_linear_amb_lim_k004": 1898, "jensen_linear_amb_lim_k007": 1898, "jensen_linear_amb_lim_k0075": 1898, "jensen_linear_k002": 1898, "jensen_linear_k004": 1898, "jensen_linear_k0075": 1898, "jensen_linear_lim": 1898, "jensen_linear_lim_k002": 1898, "jensen_linear_lim_k004": 1898, "jensen_linear_lim_k007": 1898, "jensen_linear_lim_k0075": 1898, "jensen_max_amb": 1898, "jensen_max_amb_k002": 1898, "jensen_max_amb_k004": 1898, "jensen_max_amb_k007": 1898, "jensen_max_amb_k0075": 1898, "jensen_product": 1898, "jensen_product_k002": 1898, "jensen_product_k004": 1898, "jensen_product_k007": 1898, "jensen_product_k0075": 1898, "jensen_product_lim": 1898, "jensen_product_lim_k002": 1898, "jensen_product_lim_k004": 1898, "jensen_product_lim_k007": 1898, "jensen_product_lim_k0075": 1898, "jensen_quadrat": 1898, "jensen_quadratic_amb": 1898, "jensen_quadratic_amb_k002": 1898, "jensen_quadratic_amb_k004": 1898, "jensen_quadratic_amb_k007": 1898, "jensen_quadratic_amb_k0075": 1898, "jensen_quadratic_amb_lim": 1898, "jensen_quadratic_amb_lim_k002": 1898, "jensen_quadratic_amb_lim_k004": 1898, "jensen_quadratic_amb_lim_k007": 1898, "jensen_quadratic_amb_lim_k0075": 1898, "jensen_quadratic_k002": 1898, "jensen_quadratic_k004": 1898, "jensen_quadratic_k007": 1898, "jensen_quadratic_k0075": 1898, "jensen_quart": 1898, "jensen_quartic_amb": 1898, "jensen_quartic_amb_k002": 1898, "jensen_quartic_amb_k004": 1898, "jensen_quartic_amb_k007": 1898, "jensen_quartic_amb_k0075": 1898, "jensen_quartic_k002": 1898, "jensen_quartic_k004": 1898, "jensen_quartic_k007": 1898, "jensen_quartic_k0075": 1898, "jensen_wmax": 1898, "jensen_wmax_k002": 1898, "jensen_wmax_k004": 1898, "jensen_wmax_k007": 1898, "jensen_wmax_k0075": 1898, "jensen_wquadratic_lim": 1898, "jensen_wquadratic_lim_k002": 1898, "jensen_wquadratic_lim_k004": 1898, "jensen_wquadratic_lim_k007": 1898, "jensen_wquadratic_lim_k0075": 1898, "turboparkb_cubic_a002": 1898, "turboparkb_cubic_a004": 1898, "turboparkb_cubic_amb_a002": 1898, "turboparkb_cubic_amb_a004": 1898, "turboparkb_linear_a002": 1898, "turboparkb_linear_a004": 1898, "turboparkb_linear_amb_a002": 1898, "turboparkb_linear_amb_a004": 1898, "turboparkb_linear_amb_lim_a002": 1898, "turboparkb_linear_amb_lim_a004": 1898, "turboparkb_linear_lim_a002": 1898, "turboparkb_linear_lim_a004": 1898, "turboparkb_max_amb_a002": 1898, "turboparkb_max_amb_a004": 1898, "turboparkb_product_a002": 1898, "turboparkb_product_a004": 1898, "turboparkb_product_lim_a002": 1898, "turboparkb_product_lim_a004": 1898, "turboparkb_quadratic_a002": 1898, "turboparkb_quadratic_a004": 1898, "turboparkb_quadratic_amb_a002": 1898, "turboparkb_quadratic_amb_a004": 1898, "turboparkb_quadratic_amb_lim_a002": 1898, "turboparkb_quadratic_amb_lim_a004": 1898, "turboparkb_quartic_a002": 1898, "turboparkb_quartic_a004": 1898, "turboparkb_quartic_amb_a002": 1898, "turboparkb_quartic_amb_a004": 1898, "turboparkb_wmax_a002": 1898, "turboparkb_wmax_a004": 1898, "turboparkb_wquadratic_lim_a002": 1898, "turboparkb_wquadratic_lim_a004": 1898, "turboparkix_cubic_a002_dx001": 1898, "turboparkix_cubic_a002_dx1": 1898, "turboparkix_cubic_a002_dx10": 1898, "turboparkix_cubic_a002_dx100": 1898, "turboparkix_cubic_a002_dx5": 1898, "turboparkix_cubic_a002_dx50": 1898, "turboparkix_cubic_a004_dx001": 1898, "turboparkix_cubic_a004_dx1": 1898, "turboparkix_cubic_a004_dx10": 1898, "turboparkix_cubic_a004_dx100": 1898, "turboparkix_cubic_a004_dx5": 1898, "turboparkix_cubic_a004_dx50": 1898, "turboparkix_cubic_amb_a002_dx001": 1898, "turboparkix_cubic_amb_a002_dx1": 1898, "turboparkix_cubic_amb_a002_dx10": 1898, "turboparkix_cubic_amb_a002_dx100": 1898, "turboparkix_cubic_amb_a002_dx5": 1898, "turboparkix_cubic_amb_a002_dx50": 1898, "turboparkix_cubic_amb_a004_dx001": 1898, "turboparkix_cubic_amb_a004_dx1": 1898, "turboparkix_cubic_amb_a004_dx10": 1898, "turboparkix_cubic_amb_a004_dx100": 1898, "turboparkix_cubic_amb_a004_dx5": 1898, "turboparkix_cubic_amb_a004_dx50": 1898, "turboparkix_linear_a002_dx001": 1898, "turboparkix_linear_a002_dx1": 1898, "turboparkix_linear_a002_dx10": 1898, "turboparkix_linear_a002_dx100": 1898, "turboparkix_linear_a002_dx5": 1898, "turboparkix_linear_a002_dx50": 1898, "turboparkix_linear_a004_dx001": 1898, "turboparkix_linear_a004_dx1": 1898, "turboparkix_linear_a004_dx10": 1898, "turboparkix_linear_a004_dx100": 1898, "turboparkix_linear_a004_dx5": 1898, "turboparkix_linear_a004_dx50": 1898, "turboparkix_linear_amb_a002_dx001": 1898, "turboparkix_linear_amb_a002_dx1": 1898, "turboparkix_linear_amb_a002_dx10": 1898, "turboparkix_linear_amb_a002_dx100": 1898, "turboparkix_linear_amb_a002_dx5": 1898, "turboparkix_linear_amb_a002_dx50": 1898, "turboparkix_linear_amb_a004_dx001": 1898, "turboparkix_linear_amb_a004_dx1": 1898, "turboparkix_linear_amb_a004_dx10": 1898, "turboparkix_linear_amb_a004_dx100": 1898, "turboparkix_linear_amb_a004_dx5": 1898, "turboparkix_linear_amb_a004_dx50": 1898, "turboparkix_linear_amb_lim_a002_dx001": 1898, "turboparkix_linear_amb_lim_a002_dx1": 1898, "turboparkix_linear_amb_lim_a002_dx10": 1898, "turboparkix_linear_amb_lim_a002_dx100": 1898, "turboparkix_linear_amb_lim_a002_dx5": 1898, "turboparkix_linear_amb_lim_a002_dx50": 1898, "turboparkix_linear_amb_lim_a004_dx001": 1898, "turboparkix_linear_amb_lim_a004_dx1": 1898, "turboparkix_linear_amb_lim_a004_dx10": 1898, "turboparkix_linear_amb_lim_a004_dx100": 1898, "turboparkix_linear_amb_lim_a004_dx5": 1898, "turboparkix_linear_amb_lim_a004_dx50": 1898, "turboparkix_linear_lim_a002_dx001": 1898, "turboparkix_linear_lim_a002_dx1": 1898, "turboparkix_linear_lim_a002_dx10": 1898, "turboparkix_linear_lim_a002_dx100": 1898, "turboparkix_linear_lim_a002_dx5": 1898, "turboparkix_linear_lim_a002_dx50": 1898, "turboparkix_linear_lim_a004_dx001": 1898, "turboparkix_linear_lim_a004_dx1": 1898, "turboparkix_linear_lim_a004_dx10": 1898, "turboparkix_linear_lim_a004_dx100": 1898, "turboparkix_linear_lim_a004_dx5": 1898, "turboparkix_linear_lim_a004_dx50": 1898, "turboparkix_max_amb_a002_dx001": 1898, "turboparkix_max_amb_a002_dx1": 1898, "turboparkix_max_amb_a002_dx10": 1898, "turboparkix_max_amb_a002_dx100": 1898, "turboparkix_max_amb_a002_dx5": 1898, "turboparkix_max_amb_a002_dx50": 1898, "turboparkix_max_amb_a004_dx001": 1898, "turboparkix_max_amb_a004_dx1": 1898, "turboparkix_max_amb_a004_dx10": 1898, "turboparkix_max_amb_a004_dx100": 1898, "turboparkix_max_amb_a004_dx5": 1898, "turboparkix_max_amb_a004_dx50": 1898, "turboparkix_product_a002_dx001": 1898, "turboparkix_product_a002_dx1": 1898, "turboparkix_product_a002_dx10": 1898, "turboparkix_product_a002_dx100": 1898, "turboparkix_product_a002_dx5": 1898, "turboparkix_product_a002_dx50": 1898, "turboparkix_product_a004_dx001": 1898, "turboparkix_product_a004_dx1": 1898, "turboparkix_product_a004_dx10": 1898, "turboparkix_product_a004_dx100": 1898, "turboparkix_product_a004_dx5": 1898, "turboparkix_product_a004_dx50": 1898, "turboparkix_product_lim_a002_dx001": 1898, "turboparkix_product_lim_a002_dx1": 1898, "turboparkix_product_lim_a002_dx10": 1898, "turboparkix_product_lim_a002_dx100": 1898, "turboparkix_product_lim_a002_dx5": 1898, "turboparkix_product_lim_a002_dx50": 1898, "turboparkix_product_lim_a004_dx001": 1898, "turboparkix_product_lim_a004_dx1": 1898, "turboparkix_product_lim_a004_dx10": 1898, "turboparkix_product_lim_a004_dx100": 1898, "turboparkix_product_lim_a004_dx5": 1898, "turboparkix_product_lim_a004_dx50": 1898, "turboparkix_quadratic_a002_dx001": 1898, "turboparkix_quadratic_a002_dx1": 1898, "turboparkix_quadratic_a002_dx10": 1898, "turboparkix_quadratic_a002_dx100": 1898, "turboparkix_quadratic_a002_dx5": 1898, "turboparkix_quadratic_a002_dx50": 1898, "turboparkix_quadratic_a004_dx001": 1898, "turboparkix_quadratic_a004_dx1": 1898, "turboparkix_quadratic_a004_dx10": 1898, "turboparkix_quadratic_a004_dx100": 1898, "turboparkix_quadratic_a004_dx5": 1898, "turboparkix_quadratic_a004_dx50": 1898, "turboparkix_quadratic_amb_a002_dx001": 1898, "turboparkix_quadratic_amb_a002_dx1": 1898, "turboparkix_quadratic_amb_a002_dx10": 1898, "turboparkix_quadratic_amb_a002_dx100": 1898, "turboparkix_quadratic_amb_a002_dx5": 1898, "turboparkix_quadratic_amb_a002_dx50": 1898, "turboparkix_quadratic_amb_a004_dx001": 1898, "turboparkix_quadratic_amb_a004_dx1": 1898, "turboparkix_quadratic_amb_a004_dx10": 1898, "turboparkix_quadratic_amb_a004_dx100": 1898, "turboparkix_quadratic_amb_a004_dx5": 1898, "turboparkix_quadratic_amb_a004_dx50": 1898, "turboparkix_quadratic_amb_lim_a002_dx001": 1898, "turboparkix_quadratic_amb_lim_a002_dx1": 1898, "turboparkix_quadratic_amb_lim_a002_dx10": 1898, "turboparkix_quadratic_amb_lim_a002_dx100": 1898, "turboparkix_quadratic_amb_lim_a002_dx5": 1898, "turboparkix_quadratic_amb_lim_a002_dx50": 1898, "turboparkix_quadratic_amb_lim_a004_dx001": 1898, "turboparkix_quadratic_amb_lim_a004_dx1": 1898, "turboparkix_quadratic_amb_lim_a004_dx10": 1898, "turboparkix_quadratic_amb_lim_a004_dx100": 1898, "turboparkix_quadratic_amb_lim_a004_dx5": 1898, "turboparkix_quadratic_amb_lim_a004_dx50": 1898, "turboparkix_quartic_a002_dx001": 1898, "turboparkix_quartic_a002_dx1": 1898, "turboparkix_quartic_a002_dx10": 1898, "turboparkix_quartic_a002_dx100": 1898, "turboparkix_quartic_a002_dx5": 1898, "turboparkix_quartic_a002_dx50": 1898, "turboparkix_quartic_a004_dx001": 1898, "turboparkix_quartic_a004_dx1": 1898, "turboparkix_quartic_a004_dx10": 1898, "turboparkix_quartic_a004_dx100": 1898, "turboparkix_quartic_a004_dx5": 1898, "turboparkix_quartic_a004_dx50": 1898, "turboparkix_quartic_amb_a002_dx001": 1898, "turboparkix_quartic_amb_a002_dx1": 1898, "turboparkix_quartic_amb_a002_dx10": 1898, "turboparkix_quartic_amb_a002_dx100": 1898, "turboparkix_quartic_amb_a002_dx5": 1898, "turboparkix_quartic_amb_a002_dx50": 1898, "turboparkix_quartic_amb_a004_dx001": 1898, "turboparkix_quartic_amb_a004_dx1": 1898, "turboparkix_quartic_amb_a004_dx10": 1898, "turboparkix_quartic_amb_a004_dx100": 1898, "turboparkix_quartic_amb_a004_dx5": 1898, "turboparkix_quartic_amb_a004_dx50": 1898, "turboparkix_wmax_a002_dx001": 1898, "turboparkix_wmax_a002_dx1": 1898, "turboparkix_wmax_a002_dx10": 1898, "turboparkix_wmax_a002_dx100": 1898, "turboparkix_wmax_a002_dx5": 1898, "turboparkix_wmax_a002_dx50": 1898, "turboparkix_wmax_a004_dx001": 1898, "turboparkix_wmax_a004_dx1": 1898, "turboparkix_wmax_a004_dx10": 1898, "turboparkix_wmax_a004_dx100": 1898, "turboparkix_wmax_a004_dx5": 1898, "turboparkix_wmax_a004_dx50": 1898, "turboparkix_wquadratic_lim_a002_dx001": 1898, "turboparkix_wquadratic_lim_a002_dx1": 1898, "turboparkix_wquadratic_lim_a002_dx10": 1898, "turboparkix_wquadratic_lim_a002_dx100": 1898, "turboparkix_wquadratic_lim_a002_dx5": 1898, "turboparkix_wquadratic_lim_a002_dx50": 1898, "turboparkix_wquadratic_lim_a004_dx001": 1898, "turboparkix_wquadratic_lim_a004_dx1": 1898, "turboparkix_wquadratic_lim_a004_dx10": 1898, "turboparkix_wquadratic_lim_a004_dx100": 1898, "turboparkix_wquadratic_lim_a004_dx5": 1898, "turboparkix_wquadratic_lim_a004_dx50": 1898, "turbopark_cubic_a002": 1898, "turbopark_cubic_a004": 1898, "turbopark_cubic_amb_a002": 1898, "turbopark_cubic_amb_a004": 1898, "turbopark_linear_a002": 1898, "turbopark_linear_a004": 1898, "turbopark_linear_amb_a002": 1898, "turbopark_linear_amb_a004": 1898, "turbopark_linear_amb_lim_a002": 1898, "turbopark_linear_amb_lim_a004": 1898, "turbopark_linear_lim_a002": 1898, "turbopark_linear_lim_a004": 1898, "turbopark_max_amb_a002": 1898, "turbopark_max_amb_a004": 1898, "turbopark_product_a002": 1898, "turbopark_product_a004": 1898, "turbopark_product_lim_a002": 1898, "turbopark_product_lim_a004": 1898, "turbopark_quadratic_a002": 1898, "turbopark_quadratic_a004": 1898, "turbopark_quadratic_amb_a002": 1898, "turbopark_quadratic_amb_a004": 1898, "turbopark_quadratic_amb_lim_a002": 1898, "turbopark_quadratic_amb_lim_a004": 1898, "turbopark_quartic_a002": 1898, "turbopark_quartic_a004": 1898, "turbopark_quartic_amb_a002": 1898, "turbopark_quartic_amb_a004": 1898, "turbopark_wmax_a002": 1898, "turbopark_wmax_a004": 1898, "turbopark_wquadratic_lim_a002": 1898, "turbopark_wquadratic_lim_a004": 1898, "ws_quadratic_lim": 1898, "my_jensen": 1898, "042": 1898, "jensenwake80": 1898, "similarli": [1898, 1901, 1908], "explor": 1899, "download": 1899, "newa": 1899, "websit": 1899, "4464": 1899, "stamp": [1899, 1903], "kinet": [1899, 1900], "variat": 1899, "neglect": 1899, "inflow": [1899, 1906], "goal": [1899, 1903], "certain": 1899, "west": [1899, 1902, 1908], "earlier": 1899, "p0": [1899, 1901, 1906, 1907], "nfarm": [1899, 1901, 1903, 1904, 1905, 1906, 1907, 1908], "1f": [1899, 1901, 1906, 1907], "2f": [1899, 1901, 1905, 1906, 1907], "340": [1899, 1902], "14377": 1899, "593022": 1899, "1533": 1899, "584614": 1899, "83636": 1899, "660154": 1899, "1034": 1899, "432767": 1899, "738764": 1899, "1069": 1899, "775436": 1899, "880119": 1899, "1133": 1899, "327951": 1899, "344888": 1899, "1388": 1899, "612517": 1899, "532676": 1899, "4041": 1899, "896723": 1899, "22320": 1899, "script": 1900, "becom": 1900, "reli": 1900, "sdata": [1901, 1908], "exce": 1901, "nor": 1901, "pmax_": 1901, "s_": 1901, "pmax_4": 1901, "6000": [1901, 1902], "pmax_2": 1901, "pmax_0": 1901, "pmax_1": 1901, "pmax_3": 1901, "set_pmax": 1901, "thought": 1901, "od": 1901, "o1": 1901, "000000": [1901, 1904, 1905, 1906, 1908], "806173": 1901, "403": 1901, "151": 1901, "106903": 1901, "997697": 1901, "651819": 1901, "129": 1901, "929624": 1901, "840554": 1901, "1771": 1901, "100000": 1901, "110762": 1901, "440": 1901, "861136": 1901, "348633": 1901, "560767": 1901, "093786": 1901, "914426": 1901, "946766": 1901, "170": [1901, 1902], "396261": 1901, "4562": 1901, "500000": 1901, "053010": 1901, "1218": 1901, "152294": 1901, "001880": 1901, "738": 1901, "445084": 1901, "522878": 1901, "578": 1901, "384285": 1901, "262615": 1901, "491": 1901, "534548": 1901, "697787": 1901, "823401": 1901, "900005": 1901, "4451": 1901, "096026": 1901, "932216": 1901, "181480": 1901, "452153": 1901, "249557": 1901, "563693": 1901, "372918": 1901, "852422": 1901, "732653": 1901, "314050": 1901, "475399": 1901, "063345": 1901, "977087": 1901, "663709": 1901, "714437": 1901, "476878": 1901, "416355": 1901, "225378": 1901, "o0": 1901, "ylorrd": 1901, "nanmax": 1901, "ylgn": 1901, "persu": 1902, "east": 1902, "wd_min": 1902, "wd_max": 1902, "191": 1902, "290": 1902, "110": 1902, "correspons": 1902, "fulfil": 1902, "nrel": [1902, 1904, 1906], "d126": [1902, 1904, 1906], "h90": [1902, 1904, 1906], "sector_rul": 1902, "rews_min": 1902, "rews_max": 1902, "5001": 1902, "benefit": 1903, "coupl": 1903, "obvious": 1903, "slower": 1903, "advantag": 1903, "parcel": 1903, "jshtml": [1903, 1905], "timeseries_3000": 1903, "230": 1903, "280": 1903, "sake": 1903, "drama": 1903, "1min": 1903, "anigen": 1903, "008": 1903, "111": 1903, "02d": 1903, "lo": 1903, "sequential_calc": 1903, "timeseries_data": [1903, 1905], "timeseries_var": [1903, 1905], "10t05": 1903, "000000000": 1903, "10t06": 1903, "10t07": 1903, "10t08": 1903, "10t09": 1903, "10t10": 1903, "10t11": 1903, "10t12": 1903, "10t13": 1903, "10t14": 1903, "10t15": 1903, "10t16": 1903, "10t17": 1903, "10t18": 1903, "10t19": 1903, "10t20": 1903, "10t21": 1903, "10t22": 1903, "10t23": 1903, "11t00": 1903, "11t01": 1903, "11t02": 1903, "11t03": 1903, "11t04": 1903, "11t05": 1903, "11t06": 1903, "11t07": 1903, "11t08": 1903, "11t09": 1903, "11t10": 1903, "11t11": 1903, "11t12": 1903, "11t13": 1903, "11t14": 1903, "11t15": 1903, "11t16": 1903, "11t17": 1903, "11t18": 1903, "11t19": 1903, "11t20": 1903, "11t21": 1903, "11t22": 1903, "11t23": 1903, "12t00": 1903, "12t01": 1903, "12t02": 1903, "12t03": 1903, "12t04": 1903, "12t05": 1903, "12t06": 1903, "477e": 1903, "6e": [1903, 1904], "summari": 1904, "skip": 1904, "ask": 1904, "519e": 1904, "2e": 1904, "2518": 1904, "600000": 1904, "790000": 1904, "633459": 1904, "1557": 1904, "076947": 1904, "803665": 1904, "176627": 1904, "1290": 1904, "332498": 1904, "808234": 1904, "955794": 1904, "1167": 1904, "325199": 1904, "812210": 1904, "821354": 1904, "1106": 1904, "880886": 1904, "818932": 1904, "15000": 1904, "916": 1904, "principl": 1905, "trajectori": 1905, "commun": 1905, "inlcud": 1905, "07t12": 1905, "446e": 1905, "631e": 1905, "157e": 1905, "078e": 1905, "039e": 1905, "020e": 1905, "098e": 1905, "549e": 1905, "275e": 1905, "373e": 1905, "186e": 1905, "593e": 1905, "farm_df": [1905, 1908], "1532": 1905, "700000": [1905, 1906], "796724": 1905, "693": 1905, "620333": 1905, "449712": 1905, "513": 1905, "555734": 1905, "gridspec_kw": 1905, "height_ratio": 1905, "anom": 1905, "panel": 1905, "013": 1905, "fun": [1905, 1906], "partialaxiwake12": 1905, "setxyhd1": 1905, "setxyhd1_t2f": 1905, "calc_yaw_centrerotor2": 1905, "calcorder1": 1905, "setambfarmresults1": 1905, "urelax13_ct": 1905, "farmwakescalculation13": 1905, "204": 1905, "timeseries_8000": 1906, "test_farm_67": 1906, "bastankhah_quadrat": 1906, "610500": 1906, "019526": 1906, "021033": 1906, "560020": 1906, "581863": 1906, "299": 1906, "145984": 1906, "4868": 1906, "1880": 1906, "222715": 1906, "490711": 1906, "4777": 1906, "186188": 1906, "750000": 1906, "642754": 1906, "4843": 1906, "705093": 1906, "486464": 1906, "2970": 1906, "914286": 1906, "536000": 1906, "turbine_result": 1906, "nresult": 1906, "3067": 1906, "723397": 1906, "2726": 1906, "544336": 1906, "613545": 1906, "545309": 1906, "808815": 1906, "873257": 1906, "2410": 1906, "957101": 1906, "482191": 1906, "675162": 1906, "2612": 1906, "853288": 1906, "522571": 1906, "750459": 1906, "590086": 1906, "534518": 1906, "783296": 1906, "2491": 1906, "421004": 1906, "498284": 1906, "705578": 1906, "2521": 1906, "999187": 1906, "504400": 1906, "714070": 1906, "2474": 1906, "595255": 1906, "494919": 1906, "690213": 1906, "2817": 1906, "661662": 1906, "563532": 1906, "847528": 1906, "2449": 1906, "294531": 1906, "489859": 1906, "687873": 1906, "2546": 1906, "109423": 1906, "509222": 1906, "728496": 1906, "884528": 1906, "119984": 1906, "888595": 1906, "411889": 1906, "824848": 1906, "092713": 1906, "677454": 1906, "682716": 1906, "455820": 1906, "303919": 1906, "171": 1906, "205": 1906, "1504": 1906, "seen": 1906, "mean_eff": [1906, 1907], "overhead": 1906, "But": 1906, "nmean": 1906, "launch": 1906, "localclust": 1906, "cc16b33c": 1906, "tcp": 1906, "38039": 1906, "gib": 1906, "dashboard": 1906, "8787": 1906, "shut": 1906, "runtim": 1906, "localhost": 1906, "plenti": 1906, "bastankhah_linear": 1907, "203": 1907, "683": 1907, "perfectli": 1907, "fine": 1907, "port": 1908, "aim": 1908, "set_yawm": 1908, "sensit": 1908, "porteagel_linear": 1908, "frontal": 1908, "205676": 1908, "665355": 1908, "240": 1908, "corect": 1908}, "objects": {"foxes.algorithms": [[0, 0, 1, "", "Downwind", "The downwind algorithm."], [9, 0, 1, "", "Iterative", "Iterative calculation of farm data."], [16, 0, 1, "", "Sequential", "A sequential calculation of states without chunking."]], "foxes.algorithms.Downwind": [[1, 1, 1, "", "__init__", "Constructor."], [2, 1, 1, "", "all_models", "Return all models"], [3, 1, 1, "", "calc_farm", "Calculate farm data."], [4, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [5, 1, 1, "", "finalize", "Finalizes the algorithm."], [6, 1, 1, "", "get_model", "Get the algorithm specific model"], [7, 1, 1, "", "init_states", "Initialize states, if needed."], [8, 1, 1, "", "initialize", "Initializes the algorithm."]], "foxes.algorithms.Iterative": [[10, 1, 1, "", "__init__", "Constructor."], [11, 1, 1, "", "calc_farm", "Calculate farm data."], [12, 1, 1, "", "get_model", "Get the algorithm specific model"], [13, 2, 1, "", "iterations", "The current iteration number"], [14, 1, 1, "", "set_urelax", "Sets under-relaxation parameters."], [15, 2, 1, "", "urelax", "Returns the under-relaxation parameters"]], "foxes.algorithms.Sequential": [[17, 1, 1, "", "__init__", "Constructor."], [18, 1, 1, "", "__iter__", "Initialize the iterator"], [19, 1, 1, "", "__next__", "Run calculation for current step, then iterate to next"], [20, 1, 1, "", "calc_farm", "Calculate farm data."], [21, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [22, 2, 1, "", "counter", "The current index counter"], [23, 2, 1, "", "cur_farm_results", "The current farm results"], [24, 2, 1, "", "cur_point_results", "The current point results"], [25, 2, 1, "", "farm_results", "The overall farm results"], [26, 2, 1, "", "fdata", "Get the current farm data"], [27, 1, 1, "", "get_model", "Get the algorithm specific model"], [28, 2, 1, "", "index", "The current index"], [29, 2, 1, "", "iterating", "Flag for running iteration"], [30, 2, 1, "", "mdata", "Get the current model data"], [31, 2, 1, "", "pdata", "Get the current point data"], [32, 2, 1, "", "point_results", "The overall point results"], [33, 2, 1, "", "size", "The total number of iteration steps"], [34, 2, 1, "", "weight", "The current weight array"]], "foxes.algorithms.downwind.models": [[35, 0, 1, "", "CalcOrder", "This model calculates the turbine evaluation order, via wake frames."], [40, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [46, 0, 1, "", "PointWakesCalculation", "This model calculates wake effects at points of interest."], [53, 0, 1, "", "SetAmbFarmResults", "This model copies farm data results to ambient results."], [57, 0, 1, "", "SetAmbPointResults", "This model copies point results to ambient results."]], "foxes.algorithms.downwind.models.CalcOrder": [[36, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [37, 1, 1, "", "initialize", "Initializes the model."], [38, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [39, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.FarmWakesCalculation": [[41, 1, 1, "", "__init__", "Constructor."], [42, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [43, 1, 1, "", "initialize", "Initializes the model."], [44, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [45, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.PointWakesCalculation": [[47, 1, 1, "", "__init__", "Constructor."], [48, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [49, 1, 1, "", "contribute_to_wake_deltas", "Contribute to wake deltas from source turbines"], [50, 1, 1, "", "initialize", "Initializes the model."], [51, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [52, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.SetAmbFarmResults": [[54, 1, 1, "", "__init__", "Constructor."], [55, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [56, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults": [[58, 1, 1, "", "__init__", "Constructor."], [59, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [60, 1, 1, "", "initialize", "Initializes the model."], [61, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.algorithms.iterative": [[62, 0, 1, "", "ConvCrit", "Abstract base class for convergence criteria"], [66, 0, 1, "", "ConvCritList", "A list of convergence criteria"], [71, 0, 1, "", "ConvVarDelta", "Requires convergence of a selection of variables."], [75, 0, 1, "", "DefaultConv", "Default convergence criteria."]], "foxes.algorithms.iterative.ConvCrit": [[63, 1, 1, "", "__init__", "Constructor."], [64, 1, 1, "", "check_converged", "Check convergence criteria."], [65, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCritList": [[67, 1, 1, "", "__init__", "Constructor."], [68, 1, 1, "", "add_crit", "Add a convergence criterion"], [69, 1, 1, "", "check_converged", "Check convergence criteria."], [70, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvVarDelta": [[72, 1, 1, "", "__init__", "Constructor."], [73, 1, 1, "", "check_converged", "Check convergence criteria."], [74, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.DefaultConv": [[76, 1, 1, "", "__init__", "Constructor."]], "foxes.algorithms.iterative.models": [[77, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [83, 0, 1, "", "URelax", "Apply under-relaxation to selected variables during iterations."]], "foxes.algorithms.iterative.models.FarmWakesCalculation": [[78, 1, 1, "", "__init__", "Constructor."], [79, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [80, 1, 1, "", "initialize", "Initializes the model."], [81, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [82, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.iterative.models.URelax": [[84, 1, 1, "", "__init__", "Constructor."], [85, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [86, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.sequential": [[87, 0, 1, "", "SequentialPlugin", "Base class for plugins that are updated with each sequential iteration"]], "foxes.algorithms.sequential.SequentialPlugin": [[88, 1, 1, "", "__init__", "Constructor."], [89, 1, 1, "", "finalize", "Finalize data based on the final iterator"], [90, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [91, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.algorithms.sequential.models": [[92, 0, 1, "", "SeqState", "A single state during sequential iteration, just serving as a structural placeholder"]], "foxes.algorithms.sequential.models.SeqState": [[93, 1, 1, "", "__init__", "Constructor."], [94, 1, 1, "", "calculate", "The main model calculation."], [95, 2, 1, "", "counter", "The current index counter"], [96, 1, 1, "", "index", "The index list"], [97, 1, 1, "", "initialize", "Initializes the model."], [98, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [99, 1, 1, "", "size", "The total number of states."], [100, 1, 1, "", "sub_models", "List of all sub-models"], [101, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.constants": [[102, 3, 1, "", "AMB_RPOINT_RESULTS", "Identified for ambient rotor point results"], [103, 4, 1, "", "DTYPE", "Default data type for floats"], [226, 3, 1, "", "FARM", "Wind farm identifier"], [227, 3, 1, "", "GW", "The unit giga watt"], [228, 4, 1, "", "ITYPE", "Default data type for int"], [278, 3, 1, "", "KAPPA", "The Van-Karman constant"], [279, 3, 1, "", "MW", "The unit mega watt"], [280, 3, 1, "", "POINT", "Point identifier"], [281, 3, 1, "", "POINTS", "Points identifier"], [282, 3, 1, "", "POP", "Population identifier"], [283, 3, 1, "", "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [284, 3, 1, "", "RPOINT", "Rotor point identifier"], [285, 3, 1, "", "RPOINTS", "Rotor points identifier"], [286, 3, 1, "", "RWEIGHTS", "Rotor point weights identifier"], [287, 3, 1, "", "STATE", "States identifier"], [288, 3, 1, "", "STATES_SEL", "Identifier for states selection"], [289, 3, 1, "", "STATE_POINT", "Identifier for state-point dimensions"], [290, 3, 1, "", "STATE_SOURCE_TURBINE", "Identifier for the source turbines per state"], [291, 3, 1, "", "STATE_TURBINE", "Identifier for state-turbine dimensions"], [292, 3, 1, "", "TMODELS", "Turbine models identifier"], [293, 3, 1, "", "TMODEL_SELS", "Selected turbine models identifier"], [294, 3, 1, "", "TNAME", "Wind turbine name identifier"], [295, 3, 1, "", "TURBINE", "Wind turbine identifier"], [296, 3, 1, "", "TW", "The unit terra watt"], [297, 3, 1, "", "VALID", "Validity identifier"], [298, 3, 1, "", "VARS", "Variables identifier"], [299, 3, 1, "", "W", "The unit watt"], [300, 3, 1, "", "XYH", "The vector (x, y, height)"], [301, 3, 1, "", "kW", "The unit kilo watt"]], "foxes.constants.DTYPE": [[104, 4, 1, "", "T", "Scalar attribute identical to the corresponding array attribute."], [105, 1, 1, "", "__abs__", "abs(self)"], [106, 1, 1, "", "__add__", "Return self+value."], [107, 1, 1, "", "__and__", "Return self&value."], [108, 1, 1, "", "__array__", "sc.__array__(dtype) return 0-dim array from scalar with specified dtype"], [109, 4, 1, "", "__array_interface__", "Array protocol: Python side"], [110, 4, 1, "", "__array_priority__", "Array priority."], [111, 4, 1, "", "__array_struct__", "Array protocol: struct"], [112, 1, 1, "", "__array_wrap__", "sc.__array_wrap__(obj) return scalar from array"], [113, 1, 1, "", "__bool__", "self != 0"], [114, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [115, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [116, 1, 1, "", "__eq__", "Return self==value."], [117, 1, 1, "", "__float__", "float(self)"], [118, 1, 1, "", "__floordiv__", "Return self//value."], [119, 1, 1, "", "__format__", "NumPy array scalar formatter"], [120, 1, 1, "", "__ge__", "Return self>=value."], [121, 1, 1, "", "__getitem__", "Return self[key]."], [122, 1, 1, "", "__gt__", "Return self>value."], [123, 1, 1, "", "__hash__", "Return hash(self)."], [124, 1, 1, "", "__int__", "int(self)"], [125, 1, 1, "", "__invert__", "~self"], [126, 1, 1, "", "__le__", "Return self<=value."], [127, 1, 1, "", "__lshift__", "Return self<<value."], [128, 1, 1, "", "__lt__", "Return self<value."], [129, 1, 1, "", "__mod__", "Return self%value."], [130, 1, 1, "", "__mul__", "Return self*value."], [131, 1, 1, "", "__ne__", "Return self!=value."], [132, 1, 1, "", "__neg__", "-self"], [133, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [134, 1, 1, "", "__or__", "Return self|value."], [135, 1, 1, "", "__pos__", "+self"], [136, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [137, 1, 1, "", "__radd__", "Return value+self."], [138, 1, 1, "", "__rand__", "Return value&self."], [139, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [140, 1, 1, "", "__reduce__", "Helper for pickle."], [141, 1, 1, "", "__repr__", "Return repr(self)."], [142, 1, 1, "", "__rfloordiv__", "Return value//self."], [143, 1, 1, "", "__rlshift__", "Return value<<self."], [144, 1, 1, "", "__rmod__", "Return value%self."], [145, 1, 1, "", "__rmul__", "Return value*self."], [146, 1, 1, "", "__ror__", "Return value|self."], [147, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [148, 1, 1, "", "__rrshift__", "Return value>>self."], [149, 1, 1, "", "__rshift__", "Return self>>value."], [150, 1, 1, "", "__rsub__", "Return value-self."], [151, 1, 1, "", "__rtruediv__", "Return value/self."], [152, 1, 1, "", "__rxor__", "Return value^self."], [153, 1, 1, "", "__sizeof__", "Size of object in memory, in bytes."], [154, 1, 1, "", "__str__", "Return str(self)."], [155, 1, 1, "", "__sub__", "Return self-value."], [156, 1, 1, "", "__truediv__", "Return self/value."], [157, 1, 1, "", "__xor__", "Return self^value."], [158, 1, 1, "", "all", "Scalar method identical to the corresponding array attribute."], [159, 1, 1, "", "any", "Scalar method identical to the corresponding array attribute."], [160, 1, 1, "", "argmax", "Scalar method identical to the corresponding array attribute."], [161, 1, 1, "", "argmin", "Scalar method identical to the corresponding array attribute."], [162, 1, 1, "", "argsort", "Scalar method identical to the corresponding array attribute."], [163, 1, 1, "", "as_integer_ratio", "Return a pair of integers, whose ratio is exactly equal to the original floating point number, and with a positive denominator. Raise OverflowError on infinities and a ValueError on NaNs."], [164, 1, 1, "", "astype", "Scalar method identical to the corresponding array attribute."], [165, 4, 1, "", "base", "Scalar attribute identical to the corresponding array attribute."], [166, 1, 1, "", "byteswap", "Scalar method identical to the corresponding array attribute."], [167, 1, 1, "", "choose", "Scalar method identical to the corresponding array attribute."], [168, 1, 1, "", "clip", "Scalar method identical to the corresponding array attribute."], [169, 1, 1, "", "compress", "Scalar method identical to the corresponding array attribute."], [170, 1, 1, "", "conj", ""], [171, 1, 1, "", "conjugate", "Scalar method identical to the corresponding array attribute."], [172, 1, 1, "", "copy", "Scalar method identical to the corresponding array attribute."], [173, 1, 1, "", "cumprod", "Scalar method identical to the corresponding array attribute."], [174, 1, 1, "", "cumsum", "Scalar method identical to the corresponding array attribute."], [175, 4, 1, "", "data", "Pointer to start of data."], [176, 1, 1, "", "diagonal", "Scalar method identical to the corresponding array attribute."], [177, 4, 1, "", "dtype", "Get array data-descriptor."], [178, 1, 1, "", "dump", "Scalar method identical to the corresponding array attribute."], [179, 1, 1, "", "dumps", "Scalar method identical to the corresponding array attribute."], [180, 1, 1, "", "fill", "Scalar method identical to the corresponding array attribute."], [181, 4, 1, "", "flags", "The integer value of flags."], [182, 4, 1, "", "flat", "A 1-D view of the scalar."], [183, 1, 1, "", "flatten", "Scalar method identical to the corresponding array attribute."], [184, 1, 1, "", "getfield", "Scalar method identical to the corresponding array attribute."], [185, 4, 1, "", "imag", "The imaginary part of the scalar."], [186, 1, 1, "", "is_integer", "Return True if the floating point number is finite with integral value, and False otherwise."], [187, 1, 1, "", "item", "Scalar method identical to the corresponding array attribute."], [188, 1, 1, "", "itemset", "Scalar method identical to the corresponding array attribute."], [189, 4, 1, "", "itemsize", "The length of one element in bytes."], [190, 1, 1, "", "max", "Scalar method identical to the corresponding array attribute."], [191, 1, 1, "", "mean", "Scalar method identical to the corresponding array attribute."], [192, 1, 1, "", "min", "Scalar method identical to the corresponding array attribute."], [193, 4, 1, "", "nbytes", "The length of the scalar in bytes."], [194, 4, 1, "", "ndim", "The number of array dimensions."], [195, 1, 1, "", "newbyteorder", "Return a new dtype with a different byte order."], [196, 1, 1, "", "nonzero", "Scalar method identical to the corresponding array attribute."], [197, 1, 1, "", "prod", "Scalar method identical to the corresponding array attribute."], [198, 1, 1, "", "ptp", "Scalar method identical to the corresponding array attribute."], [199, 1, 1, "", "put", "Scalar method identical to the corresponding array attribute."], [200, 1, 1, "", "ravel", "Scalar method identical to the corresponding array attribute."], [201, 4, 1, "", "real", "The real part of the scalar."], [202, 1, 1, "", "repeat", "Scalar method identical to the corresponding array attribute."], [203, 1, 1, "", "reshape", "Scalar method identical to the corresponding array attribute."], [204, 1, 1, "", "resize", "Scalar method identical to the corresponding array attribute."], [205, 1, 1, "", "round", "Scalar method identical to the corresponding array attribute."], [206, 1, 1, "", "searchsorted", "Scalar method identical to the corresponding array attribute."], [207, 1, 1, "", "setfield", "Scalar method identical to the corresponding array attribute."], [208, 1, 1, "", "setflags", "Scalar method identical to the corresponding array attribute."], [209, 4, 1, "", "shape", "Tuple of array dimensions."], [210, 4, 1, "", "size", "The number of elements in the gentype."], [211, 1, 1, "", "sort", "Scalar method identical to the corresponding array attribute."], [212, 1, 1, "", "squeeze", "Scalar method identical to the corresponding array attribute."], [213, 1, 1, "", "std", "Scalar method identical to the corresponding array attribute."], [214, 4, 1, "", "strides", "Tuple of bytes steps in each dimension."], [215, 1, 1, "", "sum", "Scalar method identical to the corresponding array attribute."], [216, 1, 1, "", "swapaxes", "Scalar method identical to the corresponding array attribute."], [217, 1, 1, "", "take", "Scalar method identical to the corresponding array attribute."], [218, 1, 1, "", "tobytes", ""], [219, 1, 1, "", "tofile", "Scalar method identical to the corresponding array attribute."], [220, 1, 1, "", "tolist", "Scalar method identical to the corresponding array attribute."], [221, 1, 1, "", "tostring", "Scalar method identical to the corresponding array attribute."], [222, 1, 1, "", "trace", "Scalar method identical to the corresponding array attribute."], [223, 1, 1, "", "transpose", "Scalar method identical to the corresponding array attribute."], [224, 1, 1, "", "var", "Scalar method identical to the corresponding array attribute."], [225, 1, 1, "", "view", "Scalar method identical to the corresponding array attribute."]], "foxes.constants.ITYPE": [[229, 1, 1, "", "__abs__", "abs(self)"], [230, 1, 1, "", "__add__", "Return self+value."], [231, 1, 1, "", "__and__", "Return self&value."], [232, 1, 1, "", "__bool__", "self != 0"], [233, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [234, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [235, 1, 1, "", "__eq__", "Return self==value."], [236, 1, 1, "", "__float__", "float(self)"], [237, 1, 1, "", "__floordiv__", "Return self//value."], [238, 1, 1, "", "__ge__", "Return self>=value."], [239, 1, 1, "", "__gt__", "Return self>value."], [240, 1, 1, "", "__hash__", "Return hash(self)."], [241, 1, 1, "", "__index__", "Return self converted to an integer, if self is suitable for use as an index into a list."], [242, 1, 1, "", "__int__", "int(self)"], [243, 1, 1, "", "__invert__", "~self"], [244, 1, 1, "", "__le__", "Return self<=value."], [245, 1, 1, "", "__lshift__", "Return self<<value."], [246, 1, 1, "", "__lt__", "Return self<value."], [247, 1, 1, "", "__mod__", "Return self%value."], [248, 1, 1, "", "__mul__", "Return self*value."], [249, 1, 1, "", "__ne__", "Return self!=value."], [250, 1, 1, "", "__neg__", "-self"], [251, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [252, 1, 1, "", "__or__", "Return self|value."], [253, 1, 1, "", "__pos__", "+self"], [254, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [255, 1, 1, "", "__radd__", "Return value+self."], [256, 1, 1, "", "__rand__", "Return value&self."], [257, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [258, 1, 1, "", "__repr__", "Return repr(self)."], [259, 1, 1, "", "__rfloordiv__", "Return value//self."], [260, 1, 1, "", "__rlshift__", "Return value<<self."], [261, 1, 1, "", "__rmod__", "Return value%self."], [262, 1, 1, "", "__rmul__", "Return value*self."], [263, 1, 1, "", "__ror__", "Return value|self."], [264, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [265, 1, 1, "", "__rrshift__", "Return value>>self."], [266, 1, 1, "", "__rshift__", "Return self>>value."], [267, 1, 1, "", "__rsub__", "Return value-self."], [268, 1, 1, "", "__rtruediv__", "Return value/self."], [269, 1, 1, "", "__rxor__", "Return value^self."], [270, 1, 1, "", "__str__", "Return str(self)."], [271, 1, 1, "", "__sub__", "Return self-value."], [272, 1, 1, "", "__truediv__", "Return self/value."], [273, 1, 1, "", "__xor__", "Return self^value."], [274, 1, 1, "", "bit_count", "Computes the number of 1-bits in the absolute value of the input. Analogous to the builtin int.bit_count or popcount in C++."], [275, 4, 1, "", "denominator", "denominator of value (1)"], [276, 1, 1, "", "is_integer", "Return True if the number is finite with integral value."], [277, 4, 1, "", "numerator", "numerator of value (the value itself)"]], "foxes.core": [[302, 0, 1, "", "Algorithm", "Abstract base class for algorithms."], [317, 0, 1, "", "AxialInductionModel", "Abstract base class for axial induction models"], [319, 0, 1, "", "Data", "Container for data and meta data."], [327, 0, 1, "", "DataCalcModel", "Abstract base class for models with that run calculation on xarray Dataset data."], [330, 0, 1, "", "ExtendedStates", "States extended by point data models."], [339, 0, 1, "", "FarmController", "Analyses selected turbine models and handles their call."], [349, 0, 1, "", "FarmDataModel", "Abstract base class for models that modify farm data."], [354, 0, 1, "", "FarmDataModelList", "A list of farm data models."], [361, 0, 1, "", "FarmModel", "A FarmDataModel that operates on the farm level (in contrast to a TurbineModel, which allows application to a subset of turbines)."], [362, 0, 1, "", "Model", "Base class for all models."], [375, 0, 1, "", "PartialWakesModel", "Abstract base class for partial wakes models."], [383, 0, 1, "", "PointDataModel", "Abstract base class for models that modify point based data."], [387, 0, 1, "", "PointDataModelList", "A list of point data models."], [393, 0, 1, "", "RotorModel", "Abstract base class of rotor models."], [403, 0, 1, "", "States", "Abstract base class for states."], [409, 0, 1, "", "Turbine", "An individual wind turbine."], [413, 0, 1, "", "TurbineModel", "Abstract base class for turbine models."], [416, 0, 1, "", "TurbineType", "Abstract base class for turbine type models."], [419, 0, 1, "", "VerticalProfile", "Abstract base class for vertical profiles."], [423, 0, 1, "", "WakeFrame", "Abstract base class for wake frames."], [430, 0, 1, "", "WakeModel", "Abstract base class for wake models."], [435, 0, 1, "", "WakeSuperposition", "Abstract base class for wake superposition models."], [438, 0, 1, "", "WindFarm", "The wind farm."]], "foxes.core.Algorithm": [[303, 1, 1, "", "__init__", "Constructor."], [304, 1, 1, "", "chunked", ""], [305, 1, 1, "", "del_model_data", "Remove stored model data"], [306, 1, 1, "", "finalize", "Finalizes the algorithm."], [307, 1, 1, "", "get_model_data", "Gets model data from memory"], [308, 1, 1, "", "get_models_data", "Creates xarray from model input data."], [309, 1, 1, "", "get_models_idata", "Returns idata object of models"], [310, 2, 1, "", "idata_mem", "The current idata memory"], [311, 1, 1, "", "initialize", "Initializes the algorithm."], [312, 1, 1, "", "new", "Run-time algorithm factory."], [313, 1, 1, "", "new_point_data", "Creates a point data xarray object, containing only points."], [314, 1, 1, "", "print", "Print function, based on verbosity."], [315, 1, 1, "", "store_model_data", "Store model data"], [316, 1, 1, "", "update_n_turbines", "Reset the number of turbines, according to self.farm"]], "foxes.core.AxialInductionModel": [[318, 1, 1, "", "ct2a", "Computes induction from ct"]], "foxes.core.Data": [[320, 1, 1, "", "__init__", "Constructor."], [321, 1, 1, "", "add", "Add data entry"], [322, 1, 1, "", "from_points", "Create from points"], [323, 2, 1, "", "n_points", "The number of points"], [324, 2, 1, "", "n_states", "The number of states"], [325, 2, 1, "", "n_turbines", "The number of turbines"], [326, 1, 1, "", "states_i0", "Get the state counter for first state in chunk"]], "foxes.core.DataCalcModel": [[328, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [329, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.ExtendedStates": [[331, 1, 1, "", "__init__", "Constructor."], [332, 1, 1, "", "append", "Add a model to the list"], [333, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [334, 1, 1, "", "index", "The index list"], [335, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [336, 1, 1, "", "size", "The total number of states."], [337, 1, 1, "", "sub_models", "List of all sub-models"], [338, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.FarmController": [[340, 1, 1, "", "__init__", "Constructor."], [341, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [342, 1, 1, "", "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [343, 1, 1, "", "finalize", "Finalizes the model."], [344, 1, 1, "", "initialize", "Initializes the model."], [345, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [346, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [347, 1, 1, "", "set_pars", "Set parameters for a turbine model"], [348, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmDataModel": [[350, 1, 1, "", "__init__", "Constructor."], [351, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [352, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [353, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModelList": [[355, 1, 1, "", "__init__", "Constructor."], [356, 1, 1, "", "append", "Add a model to the list"], [357, 1, 1, "", "calculate", "The main model calculation."], [358, 1, 1, "", "insert", "Insert a model into the list"], [359, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [360, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.Model": [[363, 1, 1, "", "__init__", "Constructor."], [364, 1, 1, "", "__repr__", "Return repr(self)."], [365, 1, 1, "", "data_to_store", "Adds data from mdata to the local store, intended for iterative runs."], [366, 1, 1, "", "finalize", "Finalizes the model."], [367, 1, 1, "", "from_data_or_store", "Get data from mdata or local store"], [368, 1, 1, "", "get_data", "Getter for a data entry in the model object or provided data sources"], [369, 1, 1, "", "initialize", "Initializes the model."], [370, 2, 1, "", "initialized", "Initialization flag."], [371, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [372, 2, 1, "", "model_id", "Unique id based on the model type."], [373, 1, 1, "", "sub_models", "List of all sub-models"], [374, 1, 1, "", "var", "Creates a model specific variable name."]], "foxes.core.PartialWakesModel": [[376, 1, 1, "", "__init__", "Constructor."], [377, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [378, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [379, 1, 1, "", "initialize", "Initializes the model."], [380, 1, 1, "", "new", "Run-time partial wakes factory."], [381, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [382, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.PointDataModel": [[384, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [385, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [386, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModelList": [[388, 1, 1, "", "__init__", "Constructor."], [389, 1, 1, "", "append", "Add a model to the list"], [390, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [391, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [392, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.RotorModel": [[394, 1, 1, "", "__init__", "Constructor."], [395, 1, 1, "", "calculate", "Calculate ambient rotor effective results."], [396, 1, 1, "", "design_points", "The rotor model design points."], [397, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [398, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [399, 1, 1, "", "n_rotor_points", "The number of rotor points"], [400, 1, 1, "", "new", "Run-time rotor model factory."], [401, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [402, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.core.States": [[404, 1, 1, "", "index", "The index list"], [405, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [406, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [407, 1, 1, "", "size", "The total number of states."], [408, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.Turbine": [[410, 1, 1, "", "__init__", "Constructor."], [411, 1, 1, "", "add_model", "Add a turbine model to the list."], [412, 1, 1, "", "insert_model", "Insert a turbine model into the list of models."]], "foxes.core.TurbineModel": [[414, 1, 1, "", "calculate", "The main model calculation."], [415, 1, 1, "", "new", "Run-time turbine model factory."]], "foxes.core.TurbineType": [[417, 1, 1, "", "__init__", "Constructor."], [418, 1, 1, "", "new", "Run-time turbine type factory."]], "foxes.core.VerticalProfile": [[420, 1, 1, "", "calculate", "Run the profile calculation."], [421, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."], [422, 1, 1, "", "new", "Run-time profile factory."]], "foxes.core.WakeFrame": [[424, 1, 1, "", "calc_centreline_integral", "Integrates variables along the centreline."], [425, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [426, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [427, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [428, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [429, 1, 1, "", "new", "Run-time wake frame factory."]], "foxes.core.WakeModel": [[431, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [432, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [433, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [434, 1, 1, "", "new", "Run-time wake model factory."]], "foxes.core.WakeSuperposition": [[436, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [437, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.core.WindFarm": [[439, 1, 1, "", "__init__", "Constructor."], [440, 1, 1, "", "add_turbine", "Add a wind turbine to the list."], [441, 2, 1, "", "n_turbines", "The number of turbines in the wind farm"], [442, 2, 1, "", "turbine_names", "The list of names of all turbines"]], "foxes.data": [[443, 0, 1, "", "StaticData", "A DataBook filled with static data from this directory."], [445, 5, 1, "", "parse_Pct_file_name", "Parse basic turbine data from file name"], [446, 5, 1, "", "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.StaticData": [[444, 1, 1, "", "__init__", "Constructor."]], "foxes.input.farm_layout": [[447, 5, 1, "", "add_from_csv", "Add turbines to wind farm via csv input file."], [448, 5, 1, "", "add_from_df", "Add turbines to wind farm via pandas DataFrame."], [449, 5, 1, "", "add_from_file", "Add turbines from file."], [450, 5, 1, "", "add_from_json", "Add turbimes from a json file."], [451, 5, 1, "", "add_grid", "Add a regular grid of turbines."], [452, 5, 1, "", "add_row", "Add a single row of turbines."]], "foxes.input.states": [[453, 0, 1, "", "FieldDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format."], [461, 0, 1, "", "MultiHeightStates", "States with multiple heights data per entry."], [472, 0, 1, "", "MultiHeightTimeseries", "Multi-height timeseries states data."], [474, 0, 1, "", "ScanWS", "A given list of wind speeds, all other variables are fixed."], [481, 0, 1, "", "SingleStateStates", "A single uniform state."], [489, 0, 1, "", "StatesTable", "States from a pandas.DataFrame or a pandas readable file."], [502, 0, 1, "", "TabStates", "States created from a single tab file"], [505, 0, 1, "", "Timeseries", "Timeseries states data."], [507, 5, 1, "", "create_random_abl_states", "Create random abl states."]], "foxes.input.states.FieldDataNC": [[454, 1, 1, "", "__init__", "Constructor."], [455, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [456, 1, 1, "", "index", "The index list"], [457, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [458, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [459, 1, 1, "", "size", "The total number of states."], [460, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightStates": [[462, 4, 1, "", "RDICT", ""], [463, 1, 1, "", "__init__", "Constructor."], [464, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [465, 1, 1, "", "finalize", "Finalizes the model."], [466, 1, 1, "", "index", "The index list"], [467, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [468, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [469, 1, 1, "", "reset", "Reset the states, optionally select states"], [470, 1, 1, "", "size", "The total number of states."], [471, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightTimeseries": [[473, 4, 1, "", "RDICT", ""]], "foxes.input.states.ScanWS": [[475, 1, 1, "", "__init__", "Constructor."], [476, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [477, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [478, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [479, 1, 1, "", "size", "The total number of states."], [480, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates": [[482, 1, 1, "", "__init__", "Constructor."], [483, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [484, 1, 1, "", "initialize", "Initializes the model."], [485, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [486, 1, 1, "", "size", "The total number of states."], [487, 1, 1, "", "sub_models", "List of all sub-models"], [488, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.StatesTable": [[490, 4, 1, "", "RDICT", ""], [491, 1, 1, "", "__init__", "Constructor."], [492, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [493, 1, 1, "", "finalize", "Finalizes the model."], [494, 1, 1, "", "index", "The index list"], [495, 1, 1, "", "initialize", "Initializes the model."], [496, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [497, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [498, 1, 1, "", "reset", "Reset the states, optionally select states"], [499, 1, 1, "", "size", "The total number of states."], [500, 1, 1, "", "sub_models", "List of all sub-models"], [501, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.TabStates": [[503, 1, 1, "", "__init__", "Constructor."], [504, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.Timeseries": [[506, 4, 1, "", "RDICT", ""]], "foxes.input.windio": [[508, 5, 1, "", "read_case", "Reads a WindIO case"]], "foxes.models.farm_controllers": [[509, 0, 1, "", "BasicFarmController", "The basic farm controller, running all turbine models in their order, without conditions."]], "foxes.models.farm_models": [[510, 0, 1, "", "Turbine2FarmModel", "Wrapper that promotes turbine models into farm models, simply by selecting all turbines."]], "foxes.models.farm_models.Turbine2FarmModel": [[511, 1, 1, "", "__init__", "Constructor."], [512, 1, 1, "", "__repr__", "Return repr(self)."], [513, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [514, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [515, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.model_book": [[516, 0, 1, "", "Dict", "A slightly enhanced dictionary."], [519, 0, 1, "", "ModelBook", "Container for all kinds of models."]], "foxes.models.model_book.Dict": [[517, 1, 1, "", "__getitem__", "x.__getitem__(y) <==> x[y]"], [518, 1, 1, "", "__init__", "Constructor."]], "foxes.models.model_book.ModelBook": [[520, 1, 1, "", "__getitem__", ""], [521, 1, 1, "", "__init__", "Constructor."], [522, 1, 1, "", "finalize", "Finalizes the model."], [523, 1, 1, "", "get", "Gets a model object."], [524, 1, 1, "", "print_toc", "Print the contents."]], "foxes.models.partial_wakes": [[525, 0, 1, "", "Mapped", "Partial wake models depending on the wake model (type)."], [532, 0, 1, "", "PartialAxiwake", "Partial wake calculation for axial wake models."], [540, 0, 1, "", "PartialDistSlicedWake", "Partial wakes for distance sliced wake models, making use of their structure."], [548, 0, 1, "", "PartialGrid", "Partial wakes on a grid rotor that may differ from the one in the algorithm."], [551, 0, 1, "", "PartialTopHat", "Partial wakes for top-hat models."], [558, 0, 1, "", "RotorPoints", "Partial wakes calculation directly by the rotor model."]], "foxes.models.partial_wakes.Mapped": [[526, 1, 1, "", "__init__", "Constructor."], [527, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [528, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [529, 1, 1, "", "initialize", "Initializes the model."], [530, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [531, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialAxiwake": [[533, 1, 1, "", "__init__", "Constructor."], [534, 1, 1, "", "__repr__", "Return repr(self)."], [535, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [536, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [537, 1, 1, "", "initialize", "Initializes the model."], [538, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [539, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialDistSlicedWake": [[541, 1, 1, "", "__init__", "Constructor."], [542, 1, 1, "", "__repr__", "Return repr(self)."], [543, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [544, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [545, 1, 1, "", "initialize", "Initializes the model."], [546, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [547, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialGrid": [[549, 1, 1, "", "__init__", "Constructor."], [550, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialTopHat": [[552, 1, 1, "", "__init__", "Constructor."], [553, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [554, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [555, 1, 1, "", "initialize", "Initializes the model."], [556, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [557, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.RotorPoints": [[559, 1, 1, "", "__init__", "Constructor."], [560, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [561, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [562, 1, 1, "", "get_wake_points", "Get the wake calculation points."], [563, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."]], "foxes.models.point_models": [[564, 0, 1, "", "SetUniformData", "Set uniform data (can be state dependent)"], [569, 0, 1, "", "TKE2TI", "Calculates TI from TKE, using TI = sqrt( 3/2 * TKE) / WS"], [572, 0, 1, "", "WakeDeltas", "This point model simply subtracts ambient results from waked results."]], "foxes.models.point_models.SetUniformData": [[565, 1, 1, "", "__init__", "Constructor."], [566, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [567, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [568, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI": [[570, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [571, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas": [[573, 1, 1, "", "__init__", "Constructor."], [574, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [575, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.rotor_models": [[576, 0, 1, "", "CentreRotor", "The centre rotor model."], [582, 0, 1, "", "GridRotor", "The weighted regular grid rotor model, composed maximally of n x n points, possibly kicking out the outside points."], [589, 0, 1, "", "LevelRotor", "The weighted regular rotor level model, composed of of n points between lower and upper blade tip. Calculates a height-dependent REWS"]], "foxes.models.rotor_models.CentreRotor": [[577, 1, 1, "", "design_points", "The rotor model design points."], [578, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [579, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [580, 1, 1, "", "n_rotor_points", "The number of rotor points"], [581, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.GridRotor": [[583, 1, 1, "", "__init__", "Constructor."], [584, 1, 1, "", "__repr__", "Return repr(self)."], [585, 1, 1, "", "design_points", "The rotor model design points."], [586, 1, 1, "", "initialize", "Initializes the model."], [587, 1, 1, "", "n_rotor_points", "The number of rotor points"], [588, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.LevelRotor": [[590, 1, 1, "", "__init__", "Constructor."], [591, 1, 1, "", "__repr__", "Return repr(self)."], [592, 1, 1, "", "design_points", "The rotor model design points."], [593, 1, 1, "", "initialize", "Initializes the model."], [594, 1, 1, "", "n_rotor_points", "The number of rotor points"], [595, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.turbine_models": [[596, 0, 1, "", "Calculator", "Calculates variables based on given functions."], [600, 0, 1, "", "LookupTable", "Calculates the data by interpolation of lookup-table data"], [605, 0, 1, "", "PowerMask", "Invokes a maximal power value."], [611, 0, 1, "", "RotorCentreCalc", "Calculates data at the rotor centre"], [617, 0, 1, "", "SectorManagement", "Changes variables based on variable range conditions."], [622, 0, 1, "", "SetFarmVars", "Set farm data variables to given data."], [629, 0, 1, "", "SetXYHD", "Sets basic turbine data, from turbine object to farm data."], [633, 0, 1, "", "TableFactors", "Multiplies variables by factors from a two dimensional table."], [638, 0, 1, "", "Thrust2Ct", "Calculates ct from thrust force data."], [642, 0, 1, "", "YAW2YAWM", "Calculates delta yaw (i.e. YAWM) from absolute yaw (i.e. YAW)"], [645, 0, 1, "", "YAWM2YAW", "Calculates absolute yaw (i.e. YAWM) from delta yaw (i.e. YAWM)"], [648, 0, 1, "", "kTI", "Calculates the wake model parameter k as a linear function of TI."]], "foxes.models.turbine_models.Calculator": [[597, 1, 1, "", "__init__", "Constructor."], [598, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [599, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable": [[601, 1, 1, "", "__init__", "Constructor."], [602, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [603, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [604, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.PowerMask": [[606, 1, 1, "", "__init__", "Constructor."], [607, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [608, 1, 1, "", "initialize", "Initializes the model."], [609, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [610, 1, 1, "", "update_P_ct", ""]], "foxes.models.turbine_models.RotorCentreCalc": [[612, 1, 1, "", "__init__", "Constructor."], [613, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [614, 1, 1, "", "initialize", "Initializes the model."], [615, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [616, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.SectorManagement": [[618, 1, 1, "", "__init__", "Constructor."], [619, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [620, 1, 1, "", "initialize", "Initializes the model."], [621, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars": [[623, 1, 1, "", "__init__", "Constructor."], [624, 1, 1, "", "add_var", "Add data for a variable."], [625, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [626, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [627, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [628, 1, 1, "", "reset", "Remove all variables."]], "foxes.models.turbine_models.SetXYHD": [[630, 1, 1, "", "__init__", "Constructor."], [631, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [632, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.TableFactors": [[634, 1, 1, "", "__init__", "Constructor."], [635, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [636, 1, 1, "", "initialize", "Initializes the model."], [637, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct": [[639, 1, 1, "", "__init__", "Constructor."], [640, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [641, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM": [[643, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [644, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW": [[646, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [647, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI": [[649, 1, 1, "", "__init__", "Constructor."], [650, 1, 1, "", "__repr__", "Return repr(self)."], [651, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [652, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types": [[653, 0, 1, "", "CpCtFile", "Calculate power and ct by interpolating from cp-ct-curve data file (or pandas DataFrame)."], [655, 0, 1, "", "CpCtFromTwo", "Calculate power and ct by interpolating cp and ct from two files (or two pandas DataFrames)."], [657, 0, 1, "", "NullType", "A turbine type that does not compute any data."], [660, 0, 1, "", "PCtFile", "Calculate power and ct by interpolating from power-ct-curve data file (or pandas DataFrame)."], [666, 0, 1, "", "PCtFromTwo", "Calculate power and ct by interpolating from power curve and ct curve data files."], [672, 0, 1, "", "WsRho2PCtFromTwo", "Calculate air density dependent power and ct values, as given by two individual files."], [678, 0, 1, "", "WsTI2PCtFromTwo", "Calculate turbulent intensity dependent power and ct values, as given by two individual files."]], "foxes.models.turbine_types.CpCtFile": [[654, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo": [[656, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.NullType": [[658, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [659, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile": [[661, 1, 1, "", "__init__", "Constructor."], [662, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [663, 1, 1, "", "finalize", "Finalizes the model."], [664, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [665, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo": [[667, 1, 1, "", "__init__", "Constructor."], [668, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [669, 1, 1, "", "finalize", "Finalizes the model."], [670, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [671, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo": [[673, 1, 1, "", "__init__", "Constructor."], [674, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [675, 1, 1, "", "finalize", "Finalizes the model."], [676, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [677, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo": [[679, 1, 1, "", "__init__", "Constructor."], [680, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [681, 1, 1, "", "finalize", "Finalizes the model."], [682, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [683, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.vertical_profiles": [[684, 0, 1, "", "ABLLogNeutralWsProfile", "The neutral ABL wind speed log profile."], [688, 0, 1, "", "ABLLogStableWsProfile", "The stable ABL wind speed log profile."], [692, 0, 1, "", "ABLLogUnstableWsProfile", "The unstable ABL wind speed log profile."], [696, 0, 1, "", "ABLLogWsProfile", "The neutral/stable/unstable ABL wind speed log profile."], [700, 0, 1, "", "DataProfile", "A profile based on numerical data."], [704, 0, 1, "", "ShearedProfile", "A wind shear profile, based on a shear exponent."], [707, 0, 1, "", "UniformProfile", "A profile with uniform values."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile": [[685, 1, 1, "", "__init__", "Constructor."], [686, 1, 1, "", "calculate", "Run the profile calculation."], [687, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile": [[689, 1, 1, "", "__init__", "Constructor."], [690, 1, 1, "", "calculate", "Run the profile calculation."], [691, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile": [[693, 1, 1, "", "__init__", "Constructor."], [694, 1, 1, "", "calculate", "Run the profile calculation."], [695, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile": [[697, 1, 1, "", "__init__", "Constructor."], [698, 1, 1, "", "calculate", "Run the profile calculation."], [699, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.DataProfile": [[701, 1, 1, "", "__init__", "Constructor"], [702, 1, 1, "", "calculate", "Run the profile calculation."], [703, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile": [[705, 1, 1, "", "calculate", "Run the profile calculation."], [706, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile": [[708, 1, 1, "", "__init__", "Constructor"], [709, 1, 1, "", "calculate", "Run the profile calculation."], [710, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.wake_frames": [[711, 0, 1, "", "FarmOrder", "Invokes turbine ordering as defined by the wind farm."], [717, 0, 1, "", "RotorWD", "Align the first axis for each rotor with the local normalized wind direction."], [722, 0, 1, "", "SeqDynamicWakes", "Dynamic wakes for the sequential algorithm."], [729, 0, 1, "", "Streamlines2D", "Streamline following wakes"], [736, 0, 1, "", "Timelines", "Dynamic wakes for spatially uniform timeseries states."], [742, 0, 1, "", "YawedWakes", "Bend the wakes for yawed turbines, based on the Bastankhah 2016 wake model"]], "foxes.models.wake_frames.FarmOrder": [[712, 1, 1, "", "__init__", "Constructor."], [713, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [714, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [715, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [716, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.RotorWD": [[718, 1, 1, "", "__init__", "Constructor."], [719, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [720, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [721, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.SeqDynamicWakes": [[723, 1, 1, "", "__init__", "Constructor."], [724, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [725, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [726, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [727, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [728, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.Streamlines2D": [[730, 1, 1, "", "__init__", "Constructor."], [731, 1, 1, "", "__repr__", "Return repr(self)."], [732, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [733, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [734, 1, 1, "", "get_streamline_data", "Gets streamline data, generating it on the fly"], [735, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.Timelines": [[737, 1, 1, "", "__init__", "Constructor."], [738, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [739, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [740, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [741, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.YawedWakes": [[743, 1, 1, "", "__init__", "Constructor."], [744, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [745, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [746, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [747, 1, 1, "", "initialize", "Initializes the model."], [748, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models": [[749, 0, 1, "", "AxisymmetricWakeModel", "Abstract base class for wake models that depend on (x, r) separately."], [752, 0, 1, "", "DistSlicedWakeModel", "Abstract base class for wake models for which the x-denpendency can be separated from the yz-dependency."], [759, 0, 1, "", "GaussianWakeModel", "Abstract base class for Gaussian wake models."], [762, 0, 1, "", "GroundMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from the ground"], [764, 0, 1, "", "TopHatWakeModel", "Abstract base class for top-hat wake models."], [771, 0, 1, "", "WakeMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from a horizontal plane, e.g. the ground"]], "foxes.models.wake_models.AxisymmetricWakeModel": [[750, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [751, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel": [[753, 1, 1, "", "__init__", "Constructor."], [754, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [755, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [756, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [757, 1, 1, "", "initialize", "Initializes the model."], [758, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.GaussianWakeModel": [[760, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [761, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."]], "foxes.models.wake_models.GroundMirror": [[763, 1, 1, "", "__init__", "Constructor."]], "foxes.models.wake_models.TopHatWakeModel": [[765, 1, 1, "", "__init__", "Constructor."], [766, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [767, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [768, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [769, 1, 1, "", "initialize", "Initializes the model."], [770, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.WakeMirror": [[772, 1, 1, "", "__init__", "Constructor."], [773, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [774, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [775, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [776, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction": [[777, 0, 1, "", "RankineHalfBody", "The Rankine half body induction wake model"], [784, 0, 1, "", "Rathmann", "The Rathmann induction wake model"], [790, 0, 1, "", "SelfSimilar", "The self-similar induction wake model from Troldborg and Meyer Forsting"], [796, 0, 1, "", "SelfSimilar2020", "The self-similar 2020 induction wake model from Troldborg and Meyer Forsting"]], "foxes.models.wake_models.induction.RankineHalfBody": [[778, 1, 1, "", "__init__", "Constructor."], [779, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [780, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [781, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [782, 1, 1, "", "initialize", "Initializes the model."], [783, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.Rathmann": [[785, 1, 1, "", "__init__", "Constructor."], [786, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [787, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [788, 1, 1, "", "initialize", "Initializes the model."], [789, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.SelfSimilar": [[791, 1, 1, "", "__init__", "Constructor."], [792, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [793, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [794, 1, 1, "", "initialize", "Initializes the model."], [795, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti": [[797, 0, 1, "", "CrespoHernandezTIWake", "The Crespo and Hernandez TI empirical correlation"], [803, 0, 1, "", "IECTIWake", "The TI wake model from IEC-64100-1-2005-8 (2005):"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake": [[798, 1, 1, "", "__init__", "Constructor."], [799, 1, 1, "", "__repr__", "Return repr(self)."], [800, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [801, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [802, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.ti.IECTIWake": [[804, 1, 1, "", "__init__", "Constructor."], [805, 1, 1, "", "__repr__", "Return repr(self)."], [806, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [807, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [808, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind": [[809, 0, 1, "", "Bastankhah2014", "The Bastankhah 2014 wake model"], [816, 0, 1, "", "Bastankhah2016", "The Bastankhah 2016 wake model"], [823, 0, 1, "", "Bastankhah2016Model", "Common calculations for the wake model and the wake frame, such that code repetitions can be avoided."], [846, 0, 1, "", "JensenWake", "The Jensen wake model."], [852, 0, 1, "", "TurbOParkWake", "The TurbOPark wake model"], [859, 0, 1, "", "TurbOParkWakeIX", "The generalized TurbOPark wake model, integrating TI over the streamline."]], "foxes.models.wake_models.wind.Bastankhah2014": [[810, 1, 1, "", "__init__", "Constructor."], [811, 1, 1, "", "__repr__", "Return repr(self)."], [812, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [813, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [814, 1, 1, "", "initialize", "Initializes the model."], [815, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016": [[817, 1, 1, "", "__init__", "Constructor."], [818, 1, 1, "", "__repr__", "Return repr(self)."], [819, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [820, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [821, 1, 1, "", "initialize", "Initializes the model."], [822, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016Model": [[824, 4, 1, "", "AMPL_FAR", ""], [825, 4, 1, "", "AMPL_NEAR", ""], [826, 4, 1, "", "CHECK", ""], [827, 4, 1, "", "DELTA_FAR", ""], [828, 4, 1, "", "DELTA_NEAR", ""], [829, 4, 1, "", "MDATA_KEY", ""], [830, 4, 1, "", "NEAR", ""], [831, 4, 1, "", "PARS", ""], [832, 4, 1, "", "R_PC", ""], [833, 4, 1, "", "R_PC_S", ""], [834, 4, 1, "", "SIGMA_Y_FAR", ""], [835, 4, 1, "", "SIGMA_Z_FAR", ""], [836, 4, 1, "", "SP_SEL", ""], [837, 4, 1, "", "X0", ""], [838, 1, 1, "", "__init__", "Constructor."], [839, 1, 1, "", "calc_data", "Calculate common model data, store it in mdata."], [840, 1, 1, "", "clean", "Clean all data"], [841, 1, 1, "", "get_data", "Return data entry"], [842, 1, 1, "", "has_data", "Check if data exists"], [843, 1, 1, "", "initialize", "Initializes the model."], [844, 2, 1, "", "pars", "Dictionary of the model parameters"], [845, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.JensenWake": [[847, 1, 1, "", "__init__", "Constructor."], [848, 1, 1, "", "__repr__", "Return repr(self)."], [849, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [850, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [851, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind.TurbOParkWake": [[853, 1, 1, "", "__init__", "Constructor."], [854, 1, 1, "", "__repr__", "Return repr(self)."], [855, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [856, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [857, 1, 1, "", "initialize", "Initializes the model."], [858, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWakeIX": [[860, 1, 1, "", "__init__", "Constructor."], [861, 1, 1, "", "__repr__", "Return repr(self)."], [862, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [863, 1, 1, "", "finalize", "Finalizes the model."], [864, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [865, 1, 1, "", "initialize", "Initializes the model."], [866, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_superpositions": [[867, 0, 1, "", "TILinear", "Linear wake superposition for TI."], [871, 0, 1, "", "TIMax", "Max wake superposition for TI."], [875, 0, 1, "", "TIPow", "Power wake superposition for TI."], [879, 0, 1, "", "TIQuadratic", "Quadratic wake superposition for TI."], [883, 0, 1, "", "WSLinear", "Linear supersposition of wind deficit results"], [888, 0, 1, "", "WSMax", "Max supersposition of wind deficit results"], [893, 0, 1, "", "WSPow", "Power supersposition of wind deficit results"], [898, 0, 1, "", "WSProduct", "Product supersposition of wind deficit results"], [903, 0, 1, "", "WSQuadratic", "Quadratic supersposition of wind deficit results"]], "foxes.models.wake_superpositions.TILinear": [[868, 1, 1, "", "__init__", "Constructor."], [869, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [870, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIMax": [[872, 1, 1, "", "__init__", "Constructor."], [873, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [874, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIPow": [[876, 1, 1, "", "__init__", "Constructor."], [877, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [878, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIQuadratic": [[880, 1, 1, "", "__init__", "Constructor."], [881, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [882, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.WSLinear": [[884, 1, 1, "", "__init__", "Constructor."], [885, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [886, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [887, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax": [[889, 1, 1, "", "__init__", "Constructor."], [890, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [891, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [892, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow": [[894, 1, 1, "", "__init__", "Constructor."], [895, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [896, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [897, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct": [[899, 1, 1, "", "__init__", "Constructor."], [900, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [901, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [902, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic": [[904, 1, 1, "", "__init__", "Constructor."], [905, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [906, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [907, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.opt.constraints": [[1490, 0, 1, "", "AreaGeometryConstraint", "Constrains turbine positions to the inside of a given area geometry."], [1511, 0, 1, "", "FarmBoundaryConstraint", "Constrains turbine positions to the inside of the wind farm boundary"], [1513, 0, 1, "", "MinDistConstraint", "Turbines must keep at least a minimal spatial distance."]], "foxes.opt.constraints.AreaGeometryConstraint": [[1491, 1, 1, "", "__init__", "Constructor."], [1492, 1, 1, "", "__str__", "Get info string"], [1493, 1, 1, "", "ana_deriv", "Calculates the analytic derivative, if possible."], [1494, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1495, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1496, 2, 1, "", "component_names", "The names of the components"], [1497, 1, 1, "", "finalize", "Finalize the object."], [1498, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1499, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1500, 1, 1, "", "initialize", "Initialize the object."], [1501, 2, 1, "", "initialized", "Flag for finished initialization"], [1502, 1, 1, "", "n_components", "Returns the number of components of the function."], [1503, 2, 1, "", "n_vars_float", "The number of float variables"], [1504, 2, 1, "", "n_vars_int", "The number of int variables"], [1505, 1, 1, "", "rename_vars_float", "Rename float variables."], [1506, 1, 1, "", "rename_vars_int", "Rename integer variables."], [1507, 2, 1, "", "var_names_float", "The names of the float variables"], [1508, 2, 1, "", "var_names_int", "The names of the integer variables"], [1509, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"], [1510, 1, 1, "", "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.FarmBoundaryConstraint": [[1512, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.constraints.MinDistConstraint": [[1514, 1, 1, "", "__init__", "Constructor."], [1515, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1516, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1517, 1, 1, "", "initialize", "Initialize the constaint."], [1518, 1, 1, "", "n_components", "Returns the number of components of the function."], [1519, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core": [[1520, 0, 1, "", "FarmConstraint", "Abstract base class for foxes wind farm optimization constraints."], [1531, 0, 1, "", "FarmObjective", "Abstract base class for foxes wind farm objective functions."], [1538, 0, 1, "", "FarmOptProblem", "Abstract base class of wind farm optimization problems."], [1582, 0, 1, "", "FarmVarsProblem", "Abstract base class for models that optimize farm variables."], [1588, 0, 1, "", "PopStates", "Helper class for vectorized opt population calculation, via artificial states of length n_pop times n_states."]], "foxes.opt.core.FarmConstraint": [[1521, 1, 1, "", "__init__", "Constructor."], [1522, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1523, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1524, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1525, 2, 1, "", "farm", "The wind farm"], [1526, 1, 1, "", "n_components", "Returns the number of components of the function."], [1527, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1528, 1, 1, "", "print_models", "Prints all model names."], [1529, 2, 1, "", "sel_turbines", "The list of selected turbines"], [1530, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core.FarmObjective": [[1532, 1, 1, "", "__init__", "Constraints."], [1533, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1534, 2, 1, "", "farm", "The wind farm"], [1535, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1536, 1, 1, "", "print_models", "Prints all model names."], [1537, 2, 1, "", "sel_turbines", "The list of selected turbines"]], "foxes.opt.core.FarmOptProblem": [[1539, 4, 1, "", "INT_INF", ""], [1540, 1, 1, "", "__init__", "Constructor."], [1541, 1, 1, "", "add_constraint", "Add a constraint to the problem."], [1542, 1, 1, "", "add_objective", "Add an objective to the problem."], [1543, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1544, 2, 1, "", "all_turbines", "Flag for all turbines optimization"], [1545, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1546, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1547, 1, 1, "", "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [1548, 1, 1, "", "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [1549, 1, 1, "", "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [1550, 2, 1, "", "constraints_tol", "Gets the tolerance values of constraints"], [1551, 2, 1, "", "counter", "The current value of the application counter"], [1552, 1, 1, "", "evaluate_individual", "Evaluate a single individual of the problem."], [1553, 1, 1, "", "evaluate_population", "Evaluate all individuals of a population."], [1554, 2, 1, "", "farm", "The wind farm"], [1555, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1556, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1557, 1, 1, "", "get_gradients", "Obtain gradients of a function that is linked to the problem."], [1558, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1559, 1, 1, "", "initial_values_int", "The initial values of the integer variables."], [1560, 1, 1, "", "initialize", "Initialize the object."], [1561, 2, 1, "", "max_values_constraints", "Gets the maximal values of constraints"], [1562, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1563, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1564, 2, 1, "", "maximize_objs", "Flags for objective maximization"], [1565, 2, 1, "", "min_values_constraints", "Gets the minimal values of constraints"], [1566, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1567, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1568, 2, 1, "", "n_constraints", "The total number of constraints, i.e., the sum of all components"], [1569, 2, 1, "", "n_objectives", "The total number of objectives, i.e., the sum of all components"], [1570, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1571, 2, 1, "", "n_vars_float", "The number of float variables"], [1572, 2, 1, "", "n_vars_int", "The number of int variables"], [1573, 1, 1, "", "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [1574, 1, 1, "", "prob_res_einsum_individual", "Calculate the einsum of problem results"], [1575, 1, 1, "", "prob_res_einsum_population", "Calculate the einsum of problem results"], [1576, 2, 1, "", "sel_turbines", "The selected turbines"], [1577, 1, 1, "", "tvar", "Gets turbine variable name"], [1578, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1579, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1580, 1, 1, "", "var_names_float", "The names of float variables."], [1581, 1, 1, "", "var_names_int", "The names of integer variables."]], "foxes.opt.core.FarmVarsProblem": [[1583, 1, 1, "", "initialize", "Initialize the object."], [1584, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1585, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1586, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1587, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."]], "foxes.opt.core.PopStates": [[1589, 1, 1, "", "__init__", "Constructor."], [1590, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [1591, 1, 1, "", "initialize", "Initializes the model."], [1592, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [1593, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [1594, 1, 1, "", "size", "The total number of states."], [1595, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.opt.objectives": [[1596, 0, 1, "", "FarmVarObjective", "Objectives based on farm variables."], [1605, 0, 1, "", "MaxFarmPower", "Maximize the mean wind farm power"], [1607, 0, 1, "", "MaxNTurbines", "Maximizes the number of turrbines."], [1613, 0, 1, "", "MinimalMaxTI", "Minimize the maximal turbine TI"]], "foxes.opt.objectives.FarmVarObjective": [[1597, 1, 1, "", "__init__", "Constructor."], [1598, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1599, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1600, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1601, 1, 1, "", "initialize", "Initialize the object."], [1602, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1603, 1, 1, "", "n_components", "Returns the number of components of the function."], [1604, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.objectives.MaxFarmPower": [[1606, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.objectives.MaxNTurbines": [[1608, 1, 1, "", "__init__", "Constructor."], [1609, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1610, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1611, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1612, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.objectives.MinimalMaxTI": [[1614, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.problems": [[1615, 0, 1, "", "OptFarmVars", "Optimize a selection of farm variables."]], "foxes.opt.problems.OptFarmVars": [[1616, 1, 1, "", "__init__", "Constructor."], [1617, 1, 1, "", "add_var", "Add a variable."], [1618, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1619, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1620, 1, 1, "", "initialize", "Initialize the object."], [1621, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1622, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1623, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1624, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1625, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1626, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1627, 1, 1, "", "var_names_float", "The names of float variables."], [1628, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout": [[1754, 0, 1, "", "FarmLayoutOptProblem", "The turbine positioning optimization problem"], [1763, 0, 1, "", "RegGridsLayoutOptProblem", "Places turbines on several regular grids and optimizes their parameters."], [1779, 0, 1, "", "RegularLayoutOptProblem", "Places turbines on a regular grid and optimizes its parameters."]], "foxes.opt.problems.layout.FarmLayoutOptProblem": [[1755, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1756, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1757, 1, 1, "", "initialize", "Initialize the object."], [1758, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1759, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1760, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1761, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1762, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.RegGridsLayoutOptProblem": [[1764, 1, 1, "", "__init__", "Constraints."], [1765, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1766, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1767, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1768, 1, 1, "", "initialize", "Initialize the object."], [1769, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1770, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1771, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1772, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1773, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1774, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1775, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1776, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1777, 1, 1, "", "var_names_float", "The names of float variables."], [1778, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.RegularLayoutOptProblem": [[1780, 4, 1, "", "ANGLE", ""], [1781, 4, 1, "", "OFFSET_X", ""], [1782, 4, 1, "", "OFFSET_Y", ""], [1783, 4, 1, "", "SPACING_X", ""], [1784, 4, 1, "", "SPACING_Y", ""], [1785, 1, 1, "", "__init__", "Constructor."], [1786, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1787, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1788, 1, 1, "", "initialize", "Initialize the object."], [1789, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1790, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1791, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1792, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1793, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts": [[1710, 0, 1, "", "GeomLayout", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes)."], [1720, 0, 1, "", "GeomLayoutGridded", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes), on a fixes background point grid."], [1730, 0, 1, "", "GeomRegGrid", "A regular grid within a boundary geometry."], [1740, 0, 1, "", "GeomRegGrids", "A regular grid within a boundary geometry."]], "foxes.opt.problems.layout.geom_layouts.GeomLayout": [[1711, 1, 1, "", "__init__", "Constructor."], [1712, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1713, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1714, 1, 1, "", "get_fig", "Return plotly figure axis."], [1715, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1716, 1, 1, "", "initialize", "Initialize the object."], [1717, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1718, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1719, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded": [[1721, 1, 1, "", "__init__", "Constructor."], [1722, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1723, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1724, 1, 1, "", "get_fig", "Return plotly figure axis."], [1725, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1726, 1, 1, "", "initialize", "Initialize the object."], [1727, 1, 1, "", "max_values_int", "The maximal values of the int variables."], [1728, 1, 1, "", "min_values_int", "The minimal values of the int variables."], [1729, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrid": [[1731, 1, 1, "", "__init__", "Constructor."], [1732, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1733, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1734, 1, 1, "", "get_fig", "Return plotly figure axis."], [1735, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1736, 1, 1, "", "initialize", "Initialize the object."], [1737, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1738, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1739, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrids": [[1741, 1, 1, "", "__init__", "Constructor."], [1742, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1743, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1744, 1, 1, "", "get_fig", "Return plotly figure axis."], [1745, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1746, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1747, 1, 1, "", "initialize", "Initialize the object."], [1748, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1749, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1750, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1751, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1752, 1, 1, "", "var_names_float", "The names of float variables."], [1753, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1629, 0, 1, "", "Boundary", "Boundary constraint for purely geometrical layouts problems."], [1634, 0, 1, "", "CFixN", "Fixed number of turbines constraint for purely geometrical layouts problems."], [1639, 0, 1, "", "CMaxN", "Maximal number of turbines constraint for purely geometrical layouts problems."], [1644, 0, 1, "", "CMinDensity", "Minimal turbine density constraint for purely geometrical layouts problems."], [1650, 0, 1, "", "CMinN", "Minimal number of turbines constraint for purely geometrical layouts problems."], [1655, 0, 1, "", "Constraint", "Abstract base class for optimization constraints."], [1660, 0, 1, "", "MinDist", "Minimal distance constraint for purely geometrical layouts problems."], [1666, 0, 1, "", "Valid", "Validity constraint for purely geometrical layouts problems."], [1671, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary": [[1630, 1, 1, "", "__init__", "Constructor."], [1631, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1632, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1633, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN": [[1635, 1, 1, "", "__init__", "Constructor."], [1636, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1637, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1638, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN": [[1640, 1, 1, "", "__init__", "Constructor."], [1641, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1642, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1643, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity": [[1645, 1, 1, "", "__init__", "Constructor."], [1646, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1647, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1648, 1, 1, "", "initialize", "Initialize the object."], [1649, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN": [[1651, 1, 1, "", "__init__", "Constructor"], [1652, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1653, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1654, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Constraint": [[1656, 1, 1, "", "__init__", "Constructor"], [1657, 1, 1, "", "check_individual", "Check if the constraints are fullfilled for the given individual."], [1658, 1, 1, "", "check_population", "Check if the constraints are fullfilled for the given population."], [1659, 1, 1, "", "get_bounds", "Returns the bounds for all components."]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist": [[1661, 1, 1, "", "__init__", "Constructor."], [1662, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1663, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1664, 1, 1, "", "initialize", "Initialize the constaint."], [1665, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid": [[1667, 1, 1, "", "__init__", "Constructor."], [1668, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1669, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1670, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1672, 0, 1, "", "MaxDensity", "Maximal turbine density objective for purely geometrical layouts problems."], [1679, 0, 1, "", "MaxGridSpacing", "Maximal grid spacing objective for purely geometrical layouts problems."], [1685, 0, 1, "", "MeMiMaDist", "Mean-min-max distance objective for purely geometrical layouts problems."], [1691, 0, 1, "", "OFixN", "Fixed number of turbines objective for purely geometrical layouts problems."], [1697, 0, 1, "", "OMaxN", "Maximal number of turbines objective for purely geometrical layouts problems."], [1703, 0, 1, "", "OMinN", "Minimal number of turbines objective for purely geometrical layouts problems."], [1706, 0, 1, "", "Objective", "Abstract base class for objective functions."], [1709, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity": [[1673, 1, 1, "", "__init__", "Constructor."], [1674, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1675, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1676, 1, 1, "", "initialize", "Initialize the object."], [1677, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1678, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing": [[1680, 1, 1, "", "__init__", "Constructor."], [1681, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1682, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1683, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1684, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist": [[1686, 1, 1, "", "__init__", "Constructor."], [1687, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1688, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1689, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1690, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN": [[1692, 1, 1, "", "__init__", "Constructor."], [1693, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1694, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1695, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1696, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN": [[1698, 1, 1, "", "__init__", "Constructor."], [1699, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1700, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1701, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1702, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN": [[1704, 1, 1, "", "__init__", "Constructor."], [1705, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.opt.problems.layout.geom_layouts.objectives.Objective": [[1707, 1, 1, "", "__init__", "Constructor"], [1708, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.output": [[908, 0, 1, "", "Animator", "Creates an animation from generators that yield lists of artists."], [913, 0, 1, "", "FarmLayoutOutput", "Plot the farm layout"], [922, 0, 1, "", "FarmResultsEval", "Evaluates farm results data."], [942, 0, 1, "", "FlowPlots2D", "Class for horizontal or vertical 2D flow plots"], [949, 0, 1, "", "Output", "Base class for foxes output."], [955, 0, 1, "", "PointCalculator", "Computes results at given points"], [958, 0, 1, "", "ResultsWriter", "Writes results farm data to file."], [962, 0, 1, "", "RosePlotOutput", "Class for rose plot creation"], [968, 0, 1, "", "SeqFlowAnimationPlugin", "Plugin for creating data for a 2D flow animation during sequential iterations"], [973, 0, 1, "", "SliceData", "Create data for horizontal or vertical 2D slices"], [981, 0, 1, "", "StateTurbineMap", "Creates heat maps with turbines on the one and states on the other axis."], [984, 0, 1, "", "StatesRosePlotOutput", "Class for rose plot creation directly from states"], [986, 0, 1, "", "TurbineTypeCurves", "Creates power and ct curves for turbine types, optionally including derating/boost."]], "foxes.output.Animator": [[909, 1, 1, "", "__init__", "Constructor."], [910, 1, 1, "", "add_generator", "Add a generator."], [911, 1, 1, "", "animate", "Create the animation"], [912, 2, 1, "", "generators", "The artist generators"]], "foxes.output.FarmLayoutOutput": [[914, 1, 1, "", "__init__", "Constructor."], [915, 1, 1, "", "get_figure", "Creates farm layout figure."], [916, 1, 1, "", "get_layout_data", "Returns wind farm layout."], [917, 1, 1, "", "get_layout_dict", "Returns wind farm layout."], [918, 1, 1, "", "write_csv", "Writes csv layout file."], [919, 1, 1, "", "write_json", "Writes xyh layout file."], [920, 1, 1, "", "write_plot", "Writes the layout plot to file."], [921, 1, 1, "", "write_xyh", "Writes xyh layout file."]], "foxes.output.FarmResultsEval": [[923, 1, 1, "", "__init__", "Constructor."], [924, 1, 1, "", "add_capacity", "Adds capacity to the farm results"], [925, 1, 1, "", "add_efficiency", "Adds efficiency to the farm results"], [926, 1, 1, "", "calc_farm_efficiency", "Calculates farm efficiency"], [927, 1, 1, "", "calc_farm_mean", "Calculates the mean over states and turbines."], [928, 1, 1, "", "calc_farm_sum", "Calculates the sum over states and turbines."], [929, 1, 1, "", "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [930, 1, 1, "", "calc_mean_farm_power", "Calculates the mean total farm power."], [931, 1, 1, "", "calc_states_mean", "Calculates the mean wrt states."], [932, 1, 1, "", "calc_states_std", "Calculates the standard deviation wrt states."], [933, 1, 1, "", "calc_states_sum", "Calculates the sum wrt states."], [934, 1, 1, "", "calc_turbine_mean", "Calculates the mean wrt turbines."], [935, 1, 1, "", "calc_turbine_sum", "Calculates the sum wrt turbines."], [936, 1, 1, "", "calc_turbine_yield", "Calculates the yield per turbine"], [937, 1, 1, "", "gen_stdata", "Generates state-turbine data, intended to be used in animations"], [938, 1, 1, "", "reduce_all", "Reduces states and turbine dimension by some operation"], [939, 1, 1, "", "reduce_states", "Reduces the states dimension by some operation"], [940, 1, 1, "", "reduce_turbines", "Reduces the turbine dimension by some operation"], [941, 1, 1, "", "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FlowPlots2D": [[943, 1, 1, "", "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [944, 1, 1, "", "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [945, 1, 1, "", "gen_states_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [946, 1, 1, "", "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [947, 1, 1, "", "get_mean_fig_xz", "Generates 2D farm flow figure in a horizontal xz-plane."], [948, 1, 1, "", "get_mean_fig_yz", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.Output": [[950, 1, 1, "", "__init__", "Constructor."], [951, 1, 1, "", "get_fpath", "Gets the total file path"], [952, 1, 1, "", "new", "Run-time output model factory."], [953, 1, 1, "", "print_models", "Prints all model names."], [954, 1, 1, "", "write", "Writes data to file via pandas."]], "foxes.output.PointCalculator": [[956, 1, 1, "", "__init__", "Constructor."], [957, 1, 1, "", "calculate", "Calculate point results"]], "foxes.output.ResultsWriter": [[959, 1, 1, "", "__init__", "Constructor."], [960, 1, 1, "", "write_csv", "Writes a csv file"], [961, 1, 1, "", "write_nc", "Writes a netCDF file"]], "foxes.output.RosePlotOutput": [[963, 1, 1, "", "__init__", "Constructor."], [964, 1, 1, "", "get_data", "Get pandas DataFrame with wind rose data."], [965, 1, 1, "", "get_data_info", "Returns default description for a variable."], [966, 1, 1, "", "get_figure", "Creates figure object"], [967, 1, 1, "", "write_figure", "Write rose plot to file"]], "foxes.output.SeqFlowAnimationPlugin": [[969, 1, 1, "", "__init__", "Constructor."], [970, 1, 1, "", "gen_images", ""], [971, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [972, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SliceData": [[974, 1, 1, "", "__init__", "Constructor."], [975, 1, 1, "", "get_mean_data_xy", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [976, 1, 1, "", "get_mean_data_xz", "Creates mean data of 2D farm flow slices in an xz-plane."], [977, 1, 1, "", "get_mean_data_yz", "Creates mean data of 2D farm flow slices in a yz-plane."], [978, 1, 1, "", "get_states_data_xy", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [979, 1, 1, "", "get_states_data_xz", "Creates states data of 2D farm flow slices in an xz-plane."], [980, 1, 1, "", "get_states_data_yz", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.StateTurbineMap": [[982, 1, 1, "", "__init__", "Constructor."], [983, 1, 1, "", "plot_map", "Plot the heat map for the selected variable."]], "foxes.output.StatesRosePlotOutput": [[985, 1, 1, "", "__init__", "Constructor."]], "foxes.output.TurbineTypeCurves": [[987, 1, 1, "", "__init__", "Constructor."], [988, 1, 1, "", "plot_curves", "Plot the power or ct curve."]], "foxes.output.flow_plots_2d": [[989, 5, 1, "", "get_fig", "Helper function that creates the flow image plot."]], "foxes.utils": [[990, 0, 1, "", "DataBook", "Container class for file paths, either directly given or as static data within a package."], [998, 0, 1, "", "PandasFileHelper", "This class helps reading and writing data to files via pandas."], [1005, 0, 1, "", "TabWindroseAxes", "A derivate of the wind rose axes that runs on stochastic data (bins with weights) instead of time series data"], [1438, 5, 1, "", "all_subclasses", "Searches all classes derived from some base class."], [1439, 5, 1, "", "cubic_roots", "Calculate real roots of polynomials of degree 3."], [1440, 5, 1, "", "delta_wd", "Calculates wd_b - wd_a."], [1441, 5, 1, "", "exec_python", "Executes strings that start with the indicator as python commands, returns one value"], [1489, 5, 1, "", "import_module", "Imports a module dynamically."], [1794, 5, 1, "", "read_shp", "Read a shape file"], [1795, 5, 1, "", "read_shp_polygons", "Reads the polygon points from a shp file."], [1796, 5, 1, "", "read_tab_file", "Reads a tab file into a Dataset"], [1812, 5, 1, "", "shp2csv", "Read shape file, write csv file"], [1813, 5, 1, "", "shp2geom2d", "Read shapefile into geom2d geometry"], [1814, 5, 1, "", "sqrt_reg", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1817, 5, 1, "", "uv2wd", "Calculate wind direction from wind vectors."], [1818, 5, 1, "", "wd2uv", "Calculate wind vectors from wind directions in degrees."], [1819, 5, 1, "", "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [1820, 5, 1, "", "wdvec2wd", "Calculate wind direction from wind direction vectors."], [1821, 5, 1, "", "write_nc", "Writes a dataset to netCFD file"]], "foxes.utils.DataBook": [[991, 1, 1, "", "__init__", "Constructor."], [992, 1, 1, "", "add_data_package", "Add static files from a package location."], [993, 1, 1, "", "add_data_package_file", "Add a static file from a package location."], [994, 1, 1, "", "add_file", "Add a file path"], [995, 1, 1, "", "add_files", "Add file paths"], [996, 1, 1, "", "get_file_path", "Get path of a file"], [997, 1, 1, "", "toc", "Get list of contents"]], "foxes.utils.PandasFileHelper": [[999, 4, 1, "", "DATA_FILE_FORMATS", ""], [1000, 4, 1, "", "DEFAULT_FORMAT_DICT", ""], [1001, 4, 1, "", "DEFAULT_READING_PARAMETERS", ""], [1002, 4, 1, "", "DEFAULT_WRITING_PARAMETERS", ""], [1003, 1, 1, "", "read_file", "Helper for reading data according to file ending."], [1004, 1, 1, "", "write_file", "Helper for writing data according to file ending."]], "foxes.utils.TabWindroseAxes": [[1006, 0, 1, "", "ArtistList", "A sublist of Axes children based on their type."], [1013, 0, 1, "", "InvertedPolarTransform", "The inverse of the polar transform, mapping Cartesian coordinate space x and y back to theta and r."], [1048, 0, 1, "", "PolarAffine", "The affine part of the polar projection."], [1069, 0, 1, "", "PolarTransform", "The base polar transform."], [1078, 0, 1, "", "RadialLocator", "Used to locate radius ticks."], [1090, 0, 1, "", "ThetaFormatter", "Used to format the theta tick labels.  Converts the native unit of radians into degrees and adds a degree symbol."], [1100, 0, 1, "", "ThetaLocator", "Used to locate theta ticks."], [1106, 1, 1, "", "__init__", "See Axes base class for args and kwargs documentation"], [1107, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1108, 1, 1, "", "__repr__", "Return repr(self)."], [1109, 1, 1, "", "__str__", "Return str(self)."], [1110, 1, 1, "", "acorr", "Plot the autocorrelation of x."], [1111, 1, 1, "", "add_artist", "Add an .Artist to the Axes; return the artist."], [1112, 1, 1, "", "add_callback", "Add a callback function that will be called whenever one of the .Artist's properties changes."], [1113, 1, 1, "", "add_child_axes", "Add an .AxesBase to the Axes' children; return the child Axes."], [1114, 1, 1, "", "add_collection", "Add a .Collection to the Axes; return the collection."], [1115, 1, 1, "", "add_container", "Add a .Container to the Axes' containers; return the container."], [1116, 1, 1, "", "add_image", "Add an .AxesImage to the Axes; return the image."], [1117, 1, 1, "", "add_line", "Add a .Line2D to the Axes; return the line."], [1118, 1, 1, "", "add_patch", "Add a .Patch to the Axes; return the patch."], [1119, 1, 1, "", "add_table", "Add a .Table to the Axes; return the table."], [1120, 1, 1, "", "angle_spectrum", "Plot the angle spectrum."], [1121, 1, 1, "", "annotate", "Annotate the point xy with text text."], [1122, 1, 1, "", "apply_aspect", "Adjust the Axes for a specified data aspect ratio."], [1123, 1, 1, "", "arrow", "Add an arrow to the Axes."], [1124, 2, 1, "", "artists", ""], [1125, 1, 1, "", "autoscale", "Autoscale the axis view to the data (toggle)."], [1126, 1, 1, "", "autoscale_view", "Autoscale the view limits using the data limits."], [1127, 2, 1, "", "axes", "The ~.axes.Axes instance the artist resides in, or None."], [1128, 1, 1, "", "axhline", "Add a horizontal line across the Axes."], [1129, 1, 1, "", "axhspan", "Add a horizontal span (rectangle) across the Axes."], [1130, 1, 1, "", "axis", "Convenience method to get or set some axis properties."], [1131, 1, 1, "", "axline", "Add an infinitely long straight line."], [1132, 1, 1, "", "axvline", "Add a vertical line across the Axes."], [1133, 1, 1, "", "axvspan", "Add a vertical span (rectangle) across the Axes."], [1134, 1, 1, "", "bar", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1135, 1, 1, "", "bar_label", "Label a bar plot."], [1136, 1, 1, "", "barbs", "Plot a 2D field of barbs."], [1137, 1, 1, "", "barh", "Make a horizontal bar plot."], [1138, 1, 1, "", "box", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1139, 1, 1, "", "boxplot", "Draw a box and whisker plot."], [1140, 1, 1, "", "broken_barh", "Plot a horizontal sequence of rectangles."], [1141, 1, 1, "", "bxp", "Drawing function for box and whisker plots."], [1142, 1, 1, "", "can_pan", "Return whether this Axes supports the pan/zoom button functionality."], [1143, 1, 1, "", "can_zoom", "Return whether this Axes supports the zoom box button functionality."], [1144, 1, 1, "", "cla", "Clear the Axes."], [1145, 1, 1, "", "clabel", "Label a contour plot."], [1146, 1, 1, "", "clear", "Clear the current axes"], [1147, 1, 1, "", "cohere", "Plot the coherence between x and y."], [1148, 2, 1, "", "collections", ""], [1149, 1, 1, "", "contains", "Test whether the artist contains the mouse event."], [1150, 1, 1, "", "contains_point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."], [1151, 1, 1, "", "contour", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1152, 1, 1, "", "contourf", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1153, 1, 1, "", "convert_xunits", "Convert x using the unit type of the xaxis."], [1154, 1, 1, "", "convert_yunits", "Convert y using the unit type of the yaxis."], [1155, 1, 1, "", "csd", "Plot the cross-spectral density."], [1156, 1, 1, "", "drag_pan", "Called when the mouse moves during a pan operation."], [1157, 1, 1, "", "draw", "Draw the Artist (and its children) using the given renderer."], [1158, 1, 1, "", "draw_artist", "Efficiently redraw a single artist."], [1159, 1, 1, "", "end_pan", "Called when a pan operation completes (when the mouse button is up.)"], [1160, 1, 1, "", "errorbar", "Plot y versus x as lines and/or markers with attached errorbars."], [1161, 1, 1, "", "eventplot", "Plot identical parallel lines at the given positions."], [1162, 1, 1, "", "fill", "Plot filled polygons."], [1163, 1, 1, "", "fill_between", "Fill the area between two horizontal curves."], [1164, 1, 1, "", "fill_betweenx", "Fill the area between two vertical curves."], [1165, 1, 1, "", "findobj", "Find artist objects."], [1166, 1, 1, "", "format_coord", "Return a format string formatting the x, y coordinates."], [1167, 1, 1, "", "format_cursor_data", "Return a string representation of data."], [1168, 1, 1, "", "format_xdata", "Return x formatted as an x-value."], [1169, 1, 1, "", "format_ydata", "Return y formatted as a y-value."], [1170, 1, 1, "", "from_ax", "Return a WindroseAxes object for the figure fig."], [1171, 1, 1, "", "get_adjustable", "Return whether the Axes will adjust its physical dimension ('box') or its data limits ('datalim') to achieve the desired aspect ratio."], [1172, 1, 1, "", "get_agg_filter", "Return filter function to be used for agg filter."], [1173, 1, 1, "", "get_alpha", "Return the alpha value used for blending - not supported on all backends."], [1174, 1, 1, "", "get_anchor", "Get the anchor location."], [1175, 1, 1, "", "get_animated", "Return whether the artist is animated."], [1176, 1, 1, "", "get_aspect", "Return the aspect ratio of the axes scaling."], [1177, 1, 1, "", "get_autoscale_on", "Return True if each axis is autoscaled, False otherwise."], [1178, 1, 1, "", "get_autoscalex_on", "Return whether the xaxis is autoscaled."], [1179, 1, 1, "", "get_autoscaley_on", "Return whether the yaxis is autoscaled."], [1180, 1, 1, "", "get_axes_locator", "Return the axes_locator."], [1181, 1, 1, "", "get_axisbelow", "Get whether axis ticks and gridlines are above or below most artists."], [1182, 1, 1, "", "get_box_aspect", "Return the Axes box aspect, i.e. the ratio of height to width."], [1183, 1, 1, "", "get_children", "Return a list of the child .Artists of this .Artist."], [1184, 1, 1, "", "get_clip_box", "Return the clipbox."], [1185, 1, 1, "", "get_clip_on", "Return whether the artist uses clipping."], [1186, 1, 1, "", "get_clip_path", "Return the clip path."], [1187, 1, 1, "", "get_cursor_data", "Return the cursor data for a given event."], [1188, 1, 1, "", "get_data_ratio", "Return the aspect ratio of the data itself.  For a polar plot, this should always be 1.0"], [1189, 1, 1, "", "get_default_bbox_extra_artists", "Return a default list of artists that are used for the bounding box calculation."], [1190, 1, 1, "", "get_facecolor", "Get the facecolor of the Axes."], [1191, 1, 1, "", "get_fc", "Alias for get_facecolor."], [1192, 1, 1, "", "get_figure", "Return the .Figure instance the artist belongs to."], [1193, 1, 1, "", "get_frame_on", "Get whether the Axes rectangle patch is drawn."], [1194, 1, 1, "", "get_gid", "Return the group id."], [1195, 1, 1, "", "get_gridspec", "Return the .GridSpec associated with the subplot, or None."], [1196, 1, 1, "", "get_images", "Return a list of .AxesImages contained by the Axes."], [1197, 1, 1, "", "get_in_layout", "Return boolean flag, True if artist is included in layout calculations."], [1198, 1, 1, "", "get_label", "Return the label used for this artist in the legend."], [1199, 1, 1, "", "get_legend", "Return the .Legend instance, or None if no legend is defined."], [1200, 1, 1, "", "get_legend_handles_labels", "Return handles and labels for legend"], [1201, 1, 1, "", "get_lines", "Return a list of lines contained by the Axes."], [1202, 1, 1, "", "get_mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1203, 1, 1, "", "get_navigate", "Get whether the Axes responds to navigation commands."], [1204, 1, 1, "", "get_navigate_mode", "Get the navigation toolbar button status: 'PAN', 'ZOOM', or None."], [1205, 1, 1, "", "get_path_effects", ""], [1206, 1, 1, "", "get_picker", "Return the picking behavior of the artist."], [1207, 1, 1, "", "get_position", "Return the position of the Axes within the figure as a .Bbox."], [1208, 1, 1, "", "get_rasterization_zorder", "Return the zorder value below which artists will be rasterized."], [1209, 1, 1, "", "get_rasterized", "Return whether the artist is to be rasterized."], [1210, 1, 1, "", "get_renderer_cache", "[Deprecated]"], [1211, 1, 1, "", "get_rlabel_position", "The theta position of the radius labels in degrees."], [1212, 1, 1, "", "get_rmax", "Outer radial limit."], [1213, 1, 1, "", "get_rmin", "The inner radial limit."], [1214, 1, 1, "", "get_rorigin", "float"], [1215, 1, 1, "", "get_rsign", ""], [1216, 1, 1, "", "get_shared_x_axes", "Return an immutable view on the shared x-axes Grouper."], [1217, 1, 1, "", "get_shared_y_axes", "Return an immutable view on the shared y-axes Grouper."], [1218, 1, 1, "", "get_sketch_params", "Return the sketch parameters for the artist."], [1219, 1, 1, "", "get_snap", "Return the snap setting."], [1220, 1, 1, "", "get_subplotspec", "Return the .SubplotSpec associated with the subplot, or None."], [1221, 1, 1, "", "get_theta_direction", "Get the direction in which theta increases."], [1222, 1, 1, "", "get_theta_offset", "Get the offset for the location of 0 in radians."], [1223, 1, 1, "", "get_thetamax", "Return the maximum theta limit in degrees."], [1224, 1, 1, "", "get_thetamin", "Get the minimum theta limit in degrees."], [1225, 1, 1, "", "get_tightbbox", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1226, 1, 1, "", "get_title", "Get an Axes title."], [1227, 1, 1, "", "get_transform", "Return the .Transform instance used by this artist."], [1228, 1, 1, "", "get_transformed_clip_path_and_affine", "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."], [1229, 1, 1, "", "get_url", "Return the url."], [1230, 1, 1, "", "get_visible", "Return the visibility."], [1231, 1, 1, "", "get_window_extent", "Return the Axes bounding box in display space; args and kwargs are empty."], [1232, 1, 1, "", "get_xaxis", "[Discouraged] Return the XAxis instance."], [1233, 1, 1, "", "get_xaxis_text1_transform", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1234, 1, 1, "", "get_xaxis_text2_transform", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1235, 1, 1, "", "get_xaxis_transform", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."], [1236, 1, 1, "", "get_xbound", "Return the lower and upper x-axis bounds, in increasing order."], [1237, 1, 1, "", "get_xgridlines", "Return the xaxis' grid lines as a list of .Line2Ds."], [1238, 1, 1, "", "get_xlabel", "Get the xlabel text string."], [1239, 1, 1, "", "get_xlim", "Return the x-axis view limits."], [1240, 1, 1, "", "get_xmajorticklabels", "Return the xaxis' major tick labels, as a list of ~.text.Text."], [1241, 1, 1, "", "get_xminorticklabels", "Return the xaxis' minor tick labels, as a list of ~.text.Text."], [1242, 1, 1, "", "get_xscale", "Return the xaxis' scale (as a str)."], [1243, 1, 1, "", "get_xticklabels", "Get the xaxis' tick labels."], [1244, 1, 1, "", "get_xticklines", "Return the xaxis' tick lines as a list of .Line2Ds."], [1245, 1, 1, "", "get_xticks", "Return the xaxis' tick locations in data coordinates."], [1246, 1, 1, "", "get_yaxis", "[Discouraged] Return the YAxis instance."], [1247, 1, 1, "", "get_yaxis_text1_transform", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1248, 1, 1, "", "get_yaxis_text2_transform", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1249, 1, 1, "", "get_yaxis_transform", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."], [1250, 1, 1, "", "get_ybound", "Return the lower and upper y-axis bounds, in increasing order."], [1251, 1, 1, "", "get_ygridlines", "Return the yaxis' grid lines as a list of .Line2Ds."], [1252, 1, 1, "", "get_ylabel", "Get the ylabel text string."], [1253, 1, 1, "", "get_ylim", "Return the y-axis view limits."], [1254, 1, 1, "", "get_ymajorticklabels", "Return the yaxis' major tick labels, as a list of ~.text.Text."], [1255, 1, 1, "", "get_yminorticklabels", "Return the yaxis' minor tick labels, as a list of ~.text.Text."], [1256, 1, 1, "", "get_yscale", "Return the yaxis' scale (as a str)."], [1257, 1, 1, "", "get_yticklabels", "Get the yaxis' tick labels."], [1258, 1, 1, "", "get_yticklines", "Return the yaxis' tick lines as a list of .Line2Ds."], [1259, 1, 1, "", "get_yticks", "Return the yaxis' tick locations in data coordinates."], [1260, 1, 1, "", "get_zorder", "Return the artist's zorder."], [1261, 1, 1, "", "grid", "Configure the grid lines."], [1262, 1, 1, "", "has_data", "Return whether any artists have been added to the Axes."], [1263, 1, 1, "", "have_units", "Return whether units are set on any axis."], [1264, 1, 1, "", "hexbin", "Make a 2D hexagonal binning plot of points x, y."], [1265, 1, 1, "", "hist", "Compute and plot a histogram."], [1266, 1, 1, "", "hist2d", "Make a 2D histogram plot."], [1267, 1, 1, "", "hlines", "Plot horizontal lines at each y from xmin to xmax."], [1268, 2, 1, "", "images", ""], [1269, 1, 1, "", "imshow", "Display data as an image, i.e., on a 2D regular raster."], [1270, 1, 1, "", "in_axes", "Return whether the given event (in display coords) is in the Axes."], [1271, 1, 1, "", "indicate_inset", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1272, 1, 1, "", "indicate_inset_zoom", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1273, 1, 1, "", "inset_axes", "Add a child inset Axes to this existing Axes."], [1274, 1, 1, "", "invert_xaxis", "Invert the x-axis."], [1275, 1, 1, "", "invert_yaxis", "Invert the y-axis."], [1276, 1, 1, "", "is_transform_set", "Return whether the Artist has an explicitly set transform."], [1277, 1, 1, "", "label_outer", "Only show \"outer\" labels and tick labels."], [1278, 1, 1, "", "legend", "Sets the legend location and her properties."], [1279, 2, 1, "", "lines", ""], [1280, 1, 1, "", "locator_params", "Control behavior of major tick locators."], [1281, 1, 1, "", "loglog", "Make a plot with log scaling on both the x- and y-axis."], [1282, 1, 1, "", "magnitude_spectrum", "Plot the magnitude spectrum."], [1283, 1, 1, "", "margins", "Set or retrieve autoscaling margins."], [1284, 1, 1, "", "matshow", "Plot the values of a 2D matrix or array as color-coded image."], [1285, 1, 1, "", "minorticks_off", "Remove minor ticks from the Axes."], [1286, 1, 1, "", "minorticks_on", "Display minor ticks on the Axes."], [1287, 2, 1, "", "mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1288, 4, 1, "", "name", ""], [1289, 2, 1, "", "patches", ""], [1290, 1, 1, "", "pchanged", "Call all of the registered callbacks."], [1291, 1, 1, "", "pcolor", "Create a pseudocolor plot with a non-regular rectangular grid."], [1292, 1, 1, "", "pcolorfast", "Create a pseudocolor plot with a non-regular rectangular grid."], [1293, 1, 1, "", "pcolormesh", "Create a pseudocolor plot with a non-regular rectangular grid."], [1294, 1, 1, "", "phase_spectrum", "Plot the phase spectrum."], [1295, 1, 1, "", "pick", "Process a pick event."], [1296, 1, 1, "", "pickable", "Return whether the artist is pickable."], [1297, 1, 1, "", "pie", "Plot a pie chart."], [1298, 1, 1, "", "plot", "Plot y versus x as lines and/or markers."], [1299, 1, 1, "", "plot_date", "[Discouraged] Plot coercing the axis to treat floats as dates."], [1300, 1, 1, "", "properties", "Return a dictionary of all the properties of the artist."], [1301, 1, 1, "", "psd", "Plot the power spectral density."], [1302, 1, 1, "", "quiver", "Plot a 2D field of arrows."], [1303, 1, 1, "", "quiverkey", "Add a key to a quiver plot."], [1304, 1, 1, "", "redraw_in_frame", "Efficiently redraw Axes data, but not axis ticks, labels, etc."], [1305, 1, 1, "", "relim", "Recompute the data limits based on current artists."], [1306, 1, 1, "", "remove", "Remove the artist from the figure if possible."], [1307, 1, 1, "", "remove_callback", "Remove a callback based on its observer id."], [1308, 1, 1, "", "reset_position", "Reset the active position to the original position."], [1309, 1, 1, "", "scatter", "A scatter plot of y vs. x with varying marker size and/or color."], [1310, 1, 1, "", "secondary_xaxis", "Add a second x-axis to this ~.axes.Axes."], [1311, 1, 1, "", "secondary_yaxis", "Add a second y-axis to this ~.axes.Axes."], [1312, 1, 1, "", "semilogx", "Make a plot with log scaling on the x-axis."], [1313, 1, 1, "", "semilogy", "Make a plot with log scaling on the y-axis."], [1314, 1, 1, "", "set", "Set multiple properties at once."], [1315, 1, 1, "", "set_adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1316, 1, 1, "", "set_agg_filter", "Set the agg filter."], [1317, 1, 1, "", "set_alpha", "Set the alpha value used for blending - not supported on all backends."], [1318, 1, 1, "", "set_anchor", "Define the anchor location."], [1319, 1, 1, "", "set_animated", "Set whether the artist is intended to be used in an animation."], [1320, 1, 1, "", "set_aspect", "Set the aspect ratio of the axes scaling, i.e. y/x-scale."], [1321, 1, 1, "", "set_autoscale_on", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."], [1322, 1, 1, "", "set_autoscalex_on", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1323, 1, 1, "", "set_autoscaley_on", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1324, 1, 1, "", "set_axes_locator", "Set the Axes locator."], [1325, 1, 1, "", "set_axis_off", "Turn the x- and y-axis off."], [1326, 1, 1, "", "set_axis_on", "Turn the x- and y-axis on."], [1327, 1, 1, "", "set_axisbelow", "Set whether axis ticks and gridlines are above or below most artists."], [1328, 1, 1, "", "set_box_aspect", "Set the Axes box aspect, i.e. the ratio of height to width."], [1329, 1, 1, "", "set_clip_box", "Set the artist's clip .Bbox."], [1330, 1, 1, "", "set_clip_on", "Set whether the artist uses clipping."], [1331, 1, 1, "", "set_clip_path", "Set the artist's clip path."], [1332, 1, 1, "", "set_facecolor", "Set the facecolor of the Axes."], [1333, 1, 1, "", "set_fc", "Alias for set_facecolor."], [1334, 1, 1, "", "set_figure", "Set the .Figure instance the artist belongs to."], [1335, 1, 1, "", "set_frame_on", "Set whether the Axes rectangle patch is drawn."], [1336, 1, 1, "", "set_gid", "Set the (group) id for the artist."], [1337, 1, 1, "", "set_in_layout", "Set if artist is to be included in layout calculations, E.g. /tutorials/intermediate/constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."], [1338, 1, 1, "", "set_label", "Set a label that will be displayed in the legend."], [1339, 1, 1, "", "set_legend", ""], [1340, 1, 1, "", "set_mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."], [1341, 1, 1, "", "set_navigate", "Set whether the Axes responds to navigation toolbar commands."], [1342, 1, 1, "", "set_navigate_mode", "Set the navigation toolbar button status."], [1343, 1, 1, "", "set_path_effects", "Set the path effects."], [1344, 1, 1, "", "set_picker", "Define the picking behavior of the artist."], [1345, 1, 1, "", "set_position", "Set the Axes position."], [1346, 1, 1, "", "set_prop_cycle", "Set the property cycle of the Axes."], [1347, 1, 1, "", "set_radii_angle", "Set the radii labels angle"], [1348, 1, 1, "", "set_rasterization_zorder", "Set the zorder threshold for rasterization for vector graphics output."], [1349, 1, 1, "", "set_rasterized", "Force rasterized (bitmap) drawing for vector graphics output."], [1350, 1, 1, "", "set_rgrids", "Set the radial gridlines on a polar plot."], [1351, 1, 1, "", "set_rlabel_position", "Update the theta position of the radius labels."], [1352, 1, 1, "", "set_rlim", "Set the radial axis view limits."], [1353, 1, 1, "", "set_rmax", "Set the outer radial limit."], [1354, 1, 1, "", "set_rmin", "Set the inner radial limit."], [1355, 1, 1, "", "set_rorigin", "Update the radial origin."], [1356, 1, 1, "", "set_rscale", ""], [1357, 1, 1, "", "set_rticks", ""], [1358, 1, 1, "", "set_sketch_params", "Set the sketch parameters."], [1359, 1, 1, "", "set_snap", "Set the snapping behavior."], [1360, 1, 1, "", "set_subplotspec", "Set the .SubplotSpec. associated with the subplot."], [1361, 1, 1, "", "set_theta_direction", "Set the direction in which theta increases."], [1362, 1, 1, "", "set_theta_offset", "Set the offset for the location of 0 in radians."], [1363, 1, 1, "", "set_theta_zero_location", "Set the location of theta's zero."], [1364, 1, 1, "", "set_thetagrids", "Set the theta gridlines in a polar plot."], [1365, 1, 1, "", "set_thetalim", "Set the minimum and maximum theta values."], [1366, 1, 1, "", "set_thetamax", "Set the maximum theta limit in degrees."], [1367, 1, 1, "", "set_thetamin", "Set the minimum theta limit in degrees."], [1368, 1, 1, "", "set_title", "Set a title for the Axes."], [1369, 1, 1, "", "set_transform", "Set the artist transform."], [1370, 1, 1, "", "set_url", "Set the url for the artist."], [1371, 1, 1, "", "set_visible", "Set the artist's visibility."], [1372, 1, 1, "", "set_xbound", "Set the lower and upper numerical bounds of the x-axis."], [1373, 1, 1, "", "set_xlabel", "Set the label for the x-axis."], [1374, 1, 1, "", "set_xlim", "Set the x-axis view limits."], [1375, 1, 1, "", "set_xmargin", "Set padding of X data limits prior to autoscaling."], [1376, 1, 1, "", "set_xscale", "Set the xaxis' scale."], [1377, 1, 1, "", "set_xticklabels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1378, 1, 1, "", "set_xticks", "Set the xaxis' tick locations and optionally labels."], [1379, 1, 1, "", "set_ybound", "Set the lower and upper numerical bounds of the y-axis."], [1380, 1, 1, "", "set_ylabel", "Set the label for the y-axis."], [1381, 1, 1, "", "set_ylim", "Set the y-axis view limits."], [1382, 1, 1, "", "set_ymargin", "Set padding of Y data limits prior to autoscaling."], [1383, 1, 1, "", "set_yscale", "Set the yaxis' scale."], [1384, 1, 1, "", "set_yticklabels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1385, 1, 1, "", "set_yticks", "Set the yaxis' tick locations and optionally labels."], [1386, 1, 1, "", "set_zorder", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."], [1387, 1, 1, "", "sharex", "Share the x-axis with other."], [1388, 1, 1, "", "sharey", "Share the y-axis with other."], [1389, 1, 1, "", "specgram", "Plot a spectrogram."], [1390, 1, 1, "", "spy", "Plot the sparsity pattern of a 2D array."], [1391, 1, 1, "", "stackplot", "Draw a stacked area plot."], [1392, 1, 1, "", "stairs", "A stepwise constant function as a line with bounding edges or a filled plot."], [1393, 2, 1, "", "stale", "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."], [1394, 1, 1, "", "start_pan", "Called when a pan operation has started."], [1395, 1, 1, "", "stem", "Create a stem plot."], [1396, 1, 1, "", "step", "Make a step plot."], [1397, 2, 1, "", "sticky_edges", "x and y sticky edge lists for autoscaling."], [1398, 1, 1, "", "streamplot", "Draw streamlines of a vector flow."], [1399, 1, 1, "", "table", "Add a table to an ~.axes.Axes."], [1400, 2, 1, "", "tables", ""], [1401, 1, 1, "", "text", "Add text to the Axes."], [1402, 2, 1, "", "texts", ""], [1403, 1, 1, "", "tick_params", "Change the appearance of ticks, tick labels, and gridlines."], [1404, 1, 1, "", "ticklabel_format", "Configure the .ScalarFormatter used by default for linear Axes."], [1405, 1, 1, "", "tricontour", "Draw contour lines on an unstructured triangular grid."], [1406, 1, 1, "", "tricontourf", "Draw contour regions on an unstructured triangular grid."], [1407, 1, 1, "", "tripcolor", "Create a pseudocolor plot of an unstructured triangular grid."], [1408, 1, 1, "", "triplot", "Draw an unstructured triangular grid as lines and/or markers."], [1409, 1, 1, "", "twinx", "Create a twin Axes sharing the xaxis."], [1410, 1, 1, "", "twiny", "Create a twin Axes sharing the yaxis."], [1411, 1, 1, "", "update", "Update this artist's properties from the dict props."], [1412, 1, 1, "", "update_datalim", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1413, 1, 1, "", "update_from", "Copy properties from other to self."], [1414, 2, 1, "", "use_sticky_edges", "When autoscaling, whether to obey all Artist.sticky_edges."], [1415, 2, 1, "", "viewLim", ""], [1416, 1, 1, "", "violin", "Drawing function for violin plots."], [1417, 1, 1, "", "violinplot", "Make a violin plot."], [1418, 1, 1, "", "vlines", "Plot vertical lines at each x from ymin to ymax."], [1419, 1, 1, "", "xaxis_date", "Set up axis ticks and labels to treat data along the xaxis as dates."], [1420, 1, 1, "", "xaxis_inverted", "Return whether the xaxis is oriented in the \"inverse\" direction."], [1421, 1, 1, "", "xcorr", "Plot the cross correlation between x and y."], [1422, 1, 1, "", "yaxis_date", "Set up axis ticks and labels to treat data along the yaxis as dates."], [1423, 1, 1, "", "yaxis_inverted", "Return whether the yaxis is oriented in the \"inverse\" direction."], [1424, 4, 1, "", "zorder", ""]], "foxes.utils.TabWindroseAxes.ArtistList": [[1007, 1, 1, "", "__getitem__", ""], [1008, 1, 1, "", "__init__", "The Axes from which this sublist will pull the children Artists."], [1009, 1, 1, "", "__repr__", "Return repr(self)."], [1010, 1, 1, "", "__subclasshook__", "Abstract classes can override this to customize issubclass()."], [1011, 1, 1, "", "count", ""], [1012, 1, 1, "", "index", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform": [[1014, 4, 1, "", "INVALID", ""], [1015, 4, 1, "", "INVALID_AFFINE", ""], [1016, 4, 1, "", "INVALID_NON_AFFINE", ""], [1017, 1, 1, "", "__add__", "Compose two transforms together so that self is followed by other."], [1018, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1019, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1020, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1021, 1, 1, "", "__str__", "Return str(self)."], [1022, 1, 1, "", "__sub__", "Compose self with the inverse of other, cancelling identical terms if any:"], [1023, 1, 1, "", "contains_branch", "Return whether the given transform is a sub-tree of this transform."], [1024, 1, 1, "", "contains_branch_seperately", "Return whether the given branch is a sub-tree of this transform on each separate dimension."], [1025, 2, 1, "", "depth", "Return the number of transforms which have been chained together to form this Transform instance."], [1026, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1027, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1028, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1029, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1030, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1031, 1, 1, "", "invalidate", "Invalidate this TransformNode and triggers an invalidation of its ancestors.  Should be called any time the transform changes."], [1032, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1033, 4, 1, "", "is_affine", ""], [1034, 4, 1, "", "is_bbox", ""], [1035, 4, 1, "", "is_separable", "True if this transform is separable in the x- and y- dimensions."], [1036, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1037, 4, 1, "", "pass_through", "If pass_through is True, all ancestors will always be invalidated, even if 'self' is already invalid."], [1038, 1, 1, "", "set_children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."], [1039, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1040, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1041, 1, 1, "", "transform_angles", "Transform a set of angles anchored at specific locations."], [1042, 1, 1, "", "transform_bbox", "Transform the given bounding box."], [1043, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1044, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1045, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1046, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."], [1047, 1, 1, "", "transform_point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.PolarAffine": [[1049, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1050, 1, 1, "", "__eq__", "Return self==value."], [1051, 1, 1, "", "__init__", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1052, 1, 1, "", "__str__", "Return str(self)."], [1053, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1054, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1055, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1056, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1057, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1058, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1059, 4, 1, "", "is_affine", ""], [1060, 2, 1, "", "is_separable", "bool(x) -> bool"], [1061, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1062, 1, 1, "", "to_values", "Return the values of the matrix as an (a, b, c, d, e, f) tuple."], [1063, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1064, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1065, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1066, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1067, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1068, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform": [[1070, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1071, 1, 1, "", "__str__", "Return str(self)."], [1072, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1073, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1074, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1075, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1076, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1077, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.RadialLocator": [[1079, 4, 1, "", "MAXTICKS", ""], [1080, 1, 1, "", "__call__", "Return the locations of the ticks."], [1081, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1082, 4, 1, "", "axis", ""], [1083, 1, 1, "", "create_dummy_axis", ""], [1084, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1085, 1, 1, "", "raise_if_exceeds", "Log at WARNING level if locs is longer than Locator.MAXTICKS."], [1086, 1, 1, "", "set_axis", ""], [1087, 1, 1, "", "set_params", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."], [1088, 1, 1, "", "tick_values", "Return the values of the located ticks given vmin and vmax."], [1089, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaFormatter": [[1091, 1, 1, "", "__call__", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1092, 1, 1, "", "fix_minus", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."], [1093, 1, 1, "", "format_data", "Return the full string representation of the value with the position unspecified."], [1094, 1, 1, "", "format_data_short", "Return a short string version of the tick value."], [1095, 1, 1, "", "format_ticks", "Return the tick labels for all the ticks at once."], [1096, 1, 1, "", "get_offset", ""], [1097, 4, 1, "", "locs", ""], [1098, 1, 1, "", "set_axis", ""], [1099, 1, 1, "", "set_locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaLocator": [[1101, 1, 1, "", "__call__", "Return the locations of the ticks."], [1102, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1103, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1104, 1, 1, "", "set_axis", ""], [1105, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.abl.neutral": [[1425, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1426, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1427, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.sheared": [[1428, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable": [[1429, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1430, 5, 1, "", "lgz", "Calculates the log factor for wind speed profiles."], [1431, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1432, 5, 1, "", "psi", "The Psi function"], [1433, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable": [[1434, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1435, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1436, 5, 1, "", "psi", "The Psi function"], [1437, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.geom2d": [[1442, 0, 1, "", "AreaGeometry", "Abstract base class for closed 2D geometries."], [1449, 0, 1, "", "AreaIntersection", "The intersection of area geometries."], [1451, 0, 1, "", "AreaUnion", "The union of area geometries."], [1459, 0, 1, "", "Circle", "This class represents the area of a circle."], [1466, 0, 1, "", "ClosedPolygon", "This class represents a closed 2D polygon."], [1473, 0, 1, "", "HalfPlane", "This class represents a half plane in 2d."], [1481, 0, 1, "", "InvertedAreaGeometry", "Base class for inverted geometries."]], "foxes.utils.geom2d.AreaGeometry": [[1443, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1444, 1, 1, "", "inverse", "Get the inverted geometry"], [1445, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1446, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1447, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1448, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaIntersection": [[1450, 1, 1, "", "__new__", "Constructor."]], "foxes.utils.geom2d.AreaUnion": [[1452, 1, 1, "", "__init__", "Constructor."], [1453, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1454, 1, 1, "", "inverse", "Get the inverted geometry"], [1455, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1456, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1457, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1458, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle": [[1460, 1, 1, "", "__init__", "Cobnstructor."], [1461, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1462, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1463, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1464, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1465, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon": [[1467, 1, 1, "", "__init__", "Constructor."], [1468, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1469, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1470, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1471, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1472, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane": [[1474, 1, 1, "", "__init__", "Constructor."], [1475, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1476, 1, 1, "", "inverse", "Get the inverted geometry"], [1477, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1478, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1479, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1480, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry": [[1482, 1, 1, "", "__init__", "Constructor."], [1483, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1484, 1, 1, "", "inverse", "Get the inverted geometry"], [1485, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1486, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1487, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1488, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.runners": [[1797, 0, 1, "", "DaskRunner", "Class for function execution via dask"], [1804, 0, 1, "", "DefaultRunner", "Class for default function execution."], [1806, 0, 1, "", "Runner", "Abstract base class for runners."]], "foxes.utils.runners.DaskRunner": [[1798, 1, 1, "", "__init__", "Constructor."], [1799, 1, 1, "", "finalize", "Finallize the runner"], [1800, 1, 1, "", "initialize", "Initialize the runner"], [1801, 1, 1, "", "is_distributed", ""], [1802, 1, 1, "", "print", "Prints if verbosity is not zero"], [1803, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.DefaultRunner": [[1805, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.Runner": [[1807, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1808, 1, 1, "", "finalize", "Finalize the runner"], [1809, 1, 1, "", "initialize", "Initialize the runner"], [1810, 2, 1, "", "initialized", "Initialization flag"], [1811, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.two_circles": [[1815, 5, 1, "", "area", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1816, 5, 1, "", "calc_area", "Calculates the intersection of two circles."]], "foxes.variables": [[1822, 3, 1, "", "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [1823, 3, 1, "", "AMB_CT", "The ambient thrust coefficient"], [1824, 3, 1, "", "AMB_P", "The ambient power, unit depends on user choice"], [1825, 3, 1, "", "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [1826, 3, 1, "", "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [1827, 3, 1, "", "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [1828, 3, 1, "", "AMB_RHO", "The ambient air density in kg/m3"], [1829, 3, 1, "", "AMB_T", "The ambient temperature in Kelvin"], [1830, 3, 1, "", "AMB_TI", "The ambient turbulence intensity"], [1831, 3, 1, "", "AMB_WD", "The ambient wind direction in degrees"], [1832, 3, 1, "", "AMB_WS", "The ambient wind speed in m/s"], [1833, 3, 1, "", "AMB_YAW", "The ambient absolute yaw angle of  a turbine in degrees"], [1834, 3, 1, "", "AMB_YAWM", "The ambient relative yaw angle of  a turbine in degrees"], [1835, 3, 1, "", "AMB_YLD", "Ambient yield in GWh/a"], [1836, 3, 1, "", "CAP", "Capacity, equals P/P_nominal"], [1837, 3, 1, "", "CT", "The thrust coefficient"], [1838, 3, 1, "", "D", "The rotor diameter in m"], [1839, 3, 1, "", "EFF", "Efficiency, equals P/AMB_P"], [1840, 3, 1, "", "H", "The height over ground in m"], [1841, 3, 1, "", "K", "Wake growth parameter"], [1842, 3, 1, "", "KB", "KTI value for zero TI, K = KB + KTI*TI"], [1843, 3, 1, "", "KTI", "Factor between K and TI, K = KB + KTI*TI"], [1844, 3, 1, "", "MAX_P", "The maximal power, for derating/boost"], [1845, 3, 1, "", "MOL", "The Monin-Ubukhof length in m"], [1846, 3, 1, "", "ORDER", "The turbine order"], [1847, 3, 1, "", "P", "The power, unit depends on user choice"], [1848, 3, 1, "", "PA_ALPHA", "The alpha parameter of the PorteAgel wake model"], [1849, 3, 1, "", "PA_BETA", "The beta parameter of the PorteAgel wake model"], [1850, 3, 1, "", "REWS", "Rotor effective wind speed in m/s"], [1851, 3, 1, "", "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [1852, 3, 1, "", "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [1853, 3, 1, "", "RHO", "The air density in kg/m3"], [1854, 3, 1, "", "SHEAR", "The shear exponent"], [1855, 3, 1, "", "T", "The temperature in Kelvin"], [1856, 3, 1, "", "TI", "The turbulence intensity"], [1857, 3, 1, "", "TXYH", "The turbine rotor centre coordinate  vector (x, y, height)"], [1858, 3, 1, "", "WD", "The wind direction in degrees"], [1859, 3, 1, "", "WEIGHT", "The statistical weight of a state"], [1860, 3, 1, "", "WS", "The wind speed in m/s"], [1861, 3, 1, "", "X", "The x coordinate in m"], [1862, 3, 1, "", "Y", "The y coordinate in"], [1863, 3, 1, "", "YAW", "The absolute yaw angle of a turbine in degrees"], [1864, 3, 1, "", "YAWM", "The relative yaw angle of a turbine in degrees"], [1865, 3, 1, "", "YLD", "Yield in GWh/a"], [1866, 3, 1, "", "Z0", "The roughness length in m"], [1867, 3, 1, "", "amb2var", "Mapping from ambient variable to the corresponding waked variable"], [1868, 3, 1, "", "var2amb", "Mapping from variable to the corresponding ambient variable"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:data", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"attribut": [0, 9, 16, 46, 53, 57, 62, 66, 71, 77, 83, 93, 302, 319, 330, 339, 349, 354, 362, 375, 387, 393, 409, 416, 438, 453, 461, 481, 489, 510, 516, 519, 525, 532, 540, 551, 564, 572, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 648, 660, 666, 672, 678, 684, 688, 692, 696, 700, 707, 711, 717, 722, 729, 736, 742, 752, 771, 777, 784, 790, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 913, 922, 949, 955, 958, 968, 973, 981, 986, 990, 998, 1451, 1459, 1466, 1473, 1490, 1513, 1538, 1588, 1596, 1607, 1655, 1710, 1720, 1730, 1740, 1763, 1779, 1797], "public": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 516, 519, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 913, 922, 942, 949, 955, 958, 962, 968, 973, 981, 984, 986, 990, 998, 1005, 1006, 1013, 1048, 1069, 1078, 1090, 1100, 1442, 1449, 1451, 1459, 1466, 1473, 1481, 1490, 1511, 1513, 1520, 1531, 1538, 1582, 1588, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1797, 1804, 1806], "member": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 505, 509, 510, 516, 519, 525, 532, 540, 548, 551, 558, 564, 569, 572, 576, 582, 589, 596, 600, 605, 611, 617, 622, 629, 633, 638, 642, 645, 648, 653, 655, 657, 660, 666, 672, 678, 684, 688, 692, 696, 700, 704, 707, 711, 717, 722, 729, 736, 742, 749, 752, 759, 762, 764, 771, 777, 784, 790, 796, 797, 803, 809, 816, 823, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 908, 913, 922, 942, 949, 955, 958, 962, 968, 973, 981, 984, 986, 990, 998, 1005, 1006, 1013, 1048, 1069, 1078, 1090, 1100, 1442, 1449, 1451, 1459, 1466, 1473, 1481, 1490, 1511, 1513, 1520, 1531, 1538, 1582, 1588, 1596, 1605, 1607, 1613, 1615, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1703, 1706, 1710, 1720, 1730, 1740, 1754, 1763, 1779, 1797, 1804, 1806], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 14, 17, 20, 21, 27, 36, 37, 38, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 59, 60, 61, 63, 64, 67, 68, 69, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 195, 303, 305, 306, 307, 308, 312, 313, 314, 315, 318, 320, 321, 322, 326, 328, 329, 331, 332, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 371, 374, 376, 377, 378, 379, 380, 381, 384, 386, 388, 389, 390, 391, 394, 395, 397, 398, 400, 401, 405, 406, 408, 410, 411, 412, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 460, 463, 464, 465, 467, 468, 469, 471, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 488, 491, 492, 493, 495, 496, 497, 498, 501, 503, 504, 508, 511, 513, 514, 518, 521, 522, 523, 524, 526, 527, 528, 529, 530, 533, 535, 536, 537, 538, 541, 543, 544, 545, 546, 549, 550, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 565, 566, 567, 568, 570, 571, 573, 574, 575, 578, 579, 583, 586, 590, 593, 597, 598, 599, 601, 602, 603, 604, 606, 607, 608, 609, 612, 613, 614, 615, 618, 619, 620, 621, 623, 624, 625, 626, 627, 630, 631, 632, 634, 635, 636, 637, 639, 640, 641, 643, 644, 646, 647, 649, 651, 652, 654, 656, 658, 659, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 689, 690, 693, 694, 697, 698, 701, 702, 705, 708, 709, 712, 713, 714, 715, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 737, 738, 739, 740, 741, 743, 744, 745, 746, 747, 750, 751, 753, 754, 755, 756, 757, 760, 761, 763, 764, 765, 766, 767, 768, 769, 772, 773, 774, 775, 778, 779, 780, 781, 782, 785, 786, 787, 788, 791, 792, 793, 794, 798, 800, 801, 802, 804, 806, 807, 808, 810, 812, 813, 814, 817, 819, 820, 821, 838, 839, 841, 842, 843, 847, 849, 850, 851, 853, 855, 856, 857, 860, 862, 863, 864, 865, 868, 869, 870, 872, 873, 874, 876, 877, 878, 880, 881, 882, 884, 885, 886, 887, 889, 890, 891, 892, 894, 895, 896, 897, 899, 900, 901, 902, 904, 905, 906, 907, 909, 910, 911, 914, 915, 918, 919, 920, 921, 923, 924, 925, 927, 928, 929, 930, 931, 933, 934, 935, 936, 937, 938, 939, 940, 941, 943, 944, 945, 946, 947, 948, 950, 951, 952, 954, 956, 957, 959, 960, 961, 963, 964, 965, 966, 967, 969, 971, 972, 974, 975, 976, 977, 978, 979, 980, 982, 983, 985, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 1003, 1004, 1006, 1008, 1013, 1019, 1039, 1040, 1041, 1043, 1048, 1051, 1063, 1064, 1065, 1069, 1070, 1076, 1110, 1112, 1120, 1121, 1122, 1123, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1145, 1147, 1149, 1151, 1152, 1155, 1156, 1157, 1160, 1161, 1162, 1163, 1164, 1165, 1187, 1207, 1225, 1226, 1235, 1243, 1245, 1249, 1257, 1259, 1261, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1273, 1278, 1280, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1303, 1305, 1309, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1327, 1328, 1329, 1330, 1331, 1332, 1334, 1335, 1336, 1337, 1338, 1340, 1341, 1343, 1344, 1345, 1346, 1348, 1349, 1350, 1351, 1353, 1354, 1355, 1358, 1359, 1363, 1364, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1394, 1395, 1396, 1398, 1399, 1401, 1403, 1404, 1405, 1406, 1407, 1408, 1411, 1412, 1416, 1417, 1418, 1419, 1421, 1422, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1443, 1447, 1448, 1450, 1452, 1453, 1457, 1458, 1460, 1461, 1464, 1465, 1467, 1468, 1471, 1472, 1474, 1475, 1479, 1480, 1482, 1483, 1487, 1488, 1489, 1491, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1505, 1506, 1512, 1514, 1515, 1516, 1517, 1521, 1522, 1523, 1524, 1532, 1533, 1540, 1541, 1542, 1543, 1545, 1546, 1547, 1548, 1549, 1552, 1553, 1555, 1556, 1557, 1560, 1573, 1574, 1575, 1577, 1578, 1579, 1583, 1584, 1585, 1586, 1587, 1589, 1590, 1591, 1592, 1593, 1595, 1597, 1598, 1599, 1600, 1601, 1605, 1606, 1608, 1609, 1610, 1613, 1614, 1616, 1617, 1620, 1625, 1626, 1630, 1631, 1632, 1635, 1636, 1637, 1640, 1641, 1642, 1645, 1646, 1647, 1648, 1651, 1652, 1653, 1656, 1657, 1658, 1661, 1662, 1663, 1664, 1667, 1668, 1669, 1671, 1673, 1674, 1675, 1676, 1680, 1681, 1682, 1686, 1687, 1688, 1692, 1693, 1694, 1698, 1699, 1700, 1704, 1707, 1709, 1711, 1712, 1713, 1714, 1716, 1721, 1722, 1723, 1724, 1726, 1731, 1732, 1733, 1734, 1736, 1741, 1742, 1743, 1744, 1747, 1755, 1757, 1760, 1761, 1764, 1765, 1768, 1773, 1774, 1775, 1776, 1785, 1786, 1788, 1791, 1792, 1794, 1795, 1796, 1798, 1803, 1805, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821], "return": [2, 3, 4, 6, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 42, 44, 45, 48, 51, 52, 55, 56, 59, 61, 64, 65, 69, 70, 73, 74, 79, 81, 82, 85, 86, 94, 95, 96, 98, 99, 100, 101, 114, 195, 233, 308, 309, 310, 313, 318, 322, 323, 324, 325, 326, 328, 329, 333, 334, 335, 336, 337, 338, 341, 345, 346, 348, 351, 352, 353, 357, 359, 360, 367, 370, 371, 372, 373, 374, 381, 382, 384, 385, 386, 390, 391, 392, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 408, 414, 420, 421, 424, 425, 426, 427, 436, 437, 441, 442, 445, 446, 455, 456, 457, 458, 459, 460, 464, 466, 467, 468, 470, 471, 476, 477, 478, 479, 480, 483, 485, 486, 487, 488, 492, 494, 496, 497, 499, 500, 501, 504, 507, 508, 513, 514, 515, 523, 530, 531, 538, 539, 546, 547, 556, 557, 562, 563, 566, 567, 568, 570, 571, 574, 575, 577, 579, 580, 581, 585, 587, 588, 592, 594, 595, 598, 599, 602, 603, 604, 607, 609, 613, 615, 616, 619, 621, 625, 626, 627, 631, 632, 635, 637, 640, 641, 643, 644, 646, 647, 651, 652, 658, 659, 662, 664, 665, 668, 670, 671, 674, 676, 677, 680, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 703, 705, 706, 709, 710, 713, 714, 715, 716, 719, 720, 721, 724, 725, 726, 732, 733, 734, 735, 738, 739, 740, 744, 745, 746, 748, 750, 751, 754, 758, 760, 761, 766, 767, 768, 770, 776, 783, 789, 795, 800, 801, 806, 807, 812, 815, 819, 822, 841, 842, 844, 845, 849, 850, 855, 858, 862, 866, 869, 870, 873, 874, 877, 878, 881, 882, 885, 886, 887, 890, 891, 892, 895, 896, 897, 900, 901, 902, 905, 906, 907, 911, 912, 915, 916, 917, 926, 927, 928, 929, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 946, 947, 948, 951, 957, 964, 965, 966, 967, 975, 976, 977, 978, 979, 980, 983, 988, 996, 997, 1003, 1005, 1039, 1040, 1041, 1043, 1063, 1064, 1065, 1076, 1110, 1112, 1120, 1121, 1123, 1128, 1129, 1130, 1131, 1132, 1133, 1135, 1136, 1137, 1139, 1140, 1141, 1147, 1149, 1155, 1160, 1161, 1162, 1163, 1164, 1165, 1181, 1207, 1211, 1212, 1213, 1214, 1218, 1225, 1226, 1233, 1234, 1239, 1243, 1245, 1247, 1248, 1253, 1257, 1259, 1264, 1265, 1266, 1267, 1269, 1271, 1272, 1273, 1281, 1282, 1283, 1284, 1291, 1292, 1293, 1294, 1297, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1312, 1313, 1350, 1364, 1368, 1374, 1377, 1381, 1384, 1389, 1390, 1391, 1392, 1395, 1396, 1398, 1399, 1401, 1405, 1406, 1408, 1409, 1410, 1416, 1417, 1418, 1421, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1444, 1445, 1446, 1447, 1448, 1454, 1455, 1456, 1457, 1458, 1462, 1463, 1464, 1465, 1469, 1470, 1471, 1472, 1476, 1477, 1478, 1479, 1480, 1484, 1485, 1486, 1487, 1488, 1489, 1492, 1493, 1494, 1495, 1496, 1498, 1499, 1501, 1502, 1503, 1504, 1507, 1508, 1509, 1510, 1515, 1516, 1518, 1519, 1523, 1524, 1525, 1526, 1527, 1529, 1530, 1534, 1535, 1537, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1580, 1581, 1584, 1585, 1590, 1592, 1593, 1594, 1595, 1598, 1599, 1600, 1602, 1603, 1604, 1609, 1610, 1611, 1612, 1618, 1619, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1631, 1632, 1633, 1636, 1637, 1638, 1641, 1642, 1643, 1646, 1647, 1649, 1652, 1653, 1654, 1658, 1659, 1662, 1663, 1665, 1668, 1669, 1670, 1671, 1674, 1675, 1677, 1678, 1681, 1682, 1683, 1684, 1687, 1688, 1689, 1690, 1693, 1694, 1695, 1696, 1699, 1700, 1701, 1702, 1705, 1708, 1709, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1732, 1733, 1734, 1735, 1737, 1738, 1739, 1742, 1743, 1744, 1745, 1746, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1758, 1759, 1760, 1761, 1762, 1765, 1766, 1767, 1769, 1770, 1771, 1772, 1773, 1774, 1777, 1778, 1786, 1787, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1803, 1805, 1810, 1811, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820], "exampl": [114, 186, 233, 274, 276, 1128, 1131, 1132, 1133, 1141, 1161, 1273, 1280, 1310, 1311, 1346, 1374, 1381, 1397, 1401, 1403, 1671, 1709, 1889], "note": [114, 233, 742, 777, 784, 790, 796, 797, 803, 809, 816, 823, 852, 1025, 1088, 1110, 1122, 1123, 1126, 1137, 1139, 1155, 1156, 1157, 1159, 1161, 1162, 1167, 1187, 1210, 1233, 1234, 1235, 1239, 1247, 1248, 1249, 1253, 1261, 1265, 1266, 1269, 1283, 1284, 1291, 1293, 1297, 1298, 1299, 1301, 1302, 1309, 1315, 1331, 1374, 1376, 1378, 1381, 1383, 1385, 1389, 1394, 1395, 1396, 1405, 1406, 1409, 1410, 1421, 1671, 1709], "see": [114, 233, 1112, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1139, 1155, 1163, 1164, 1167, 1171, 1174, 1181, 1182, 1187, 1206, 1225, 1231, 1236, 1239, 1250, 1253, 1264, 1265, 1266, 1267, 1269, 1274, 1275, 1282, 1284, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1301, 1302, 1307, 1309, 1315, 1318, 1320, 1327, 1328, 1340, 1345, 1346, 1350, 1352, 1364, 1372, 1373, 1374, 1379, 1380, 1381, 1389, 1395, 1418], "also": [114, 233, 1112, 1120, 1121, 1122, 1128, 1129, 1130, 1131, 1132, 1133, 1137, 1139, 1155, 1163, 1164, 1167, 1171, 1174, 1181, 1182, 1187, 1206, 1225, 1231, 1236, 1239, 1250, 1253, 1264, 1265, 1266, 1267, 1269, 1274, 1275, 1282, 1284, 1290, 1291, 1293, 1294, 1295, 1296, 1298, 1299, 1301, 1302, 1307, 1309, 1315, 1318, 1320, 1327, 1328, 1340, 1345, 1346, 1350, 1352, 1364, 1372, 1373, 1374, 1379, 1380, 1381, 1389, 1395, 1418], "yield": [937, 943, 944, 945, 989], "class": 1005, "other": [1110, 1120, 1128, 1129, 1131, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1147, 1151, 1152, 1155, 1160, 1162, 1163, 1164, 1264, 1265, 1266, 1267, 1269, 1278, 1280, 1282, 1284, 1291, 1292, 1293, 1294, 1298, 1299, 1301, 1302, 1309, 1310, 1311, 1350, 1364, 1368, 1373, 1380, 1390, 1392, 1399, 1401, 1403, 1405, 1406, 1418, 1421], "refer": [1147, 1155, 1301], "discourag": [1232, 1246, 1299, 1377, 1384], "warn": [1271, 1272, 1273, 1292, 1310, 1311, 1342, 1350, 1364, 1377, 1384], "hint": [1291, 1293], "rais": [1404, 1671, 1709], "api": 1869, "fox": [1870, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1891, 1900], "algorithm": [1870, 1871, 1872, 1873], "downwind": 1871, "model": [1871, 1872, 1873, 1879, 1887, 1893, 1894, 1898], "iter": 1872, "sequenti": [1873, 1903], "constant": 1874, "core": [1875, 1880], "data": [1876, 1895, 1899, 1906, 1907], "input": 1878, "farm_layout": 1878, "state": [1878, 1895], "windio": 1878, "farm_control": 1879, "farm_model": 1879, "partial_wak": 1879, "point_model": 1879, "rotor_model": 1879, "turbine_model": 1879, "turbine_typ": 1879, "vertical_profil": 1879, "axial_induct": 1879, "wake_fram": 1879, "wake_model": [1879, 1887], "wake_superposit": 1879, "opt": [1880, 1881, 1882], "problem": [1880, 1881, 1882], "object": [1880, 1882], "constraint": [1880, 1882], "layout": [1881, 1882, 1895, 1897], "geom_layout": [1881, 1882], "output": 1883, "flow_plots_2d": 1883, "util": [1884, 1885], "abl": [1884, 1885], "geom2d": 1884, "runner": 1884, "two_circl": 1884, "neutral": 1885, "stabl": 1885, "unstabl": 1885, "shear": 1885, "variabl": 1886, "wind": [1887, 1894, 1895, 1899, 1902, 1907], "ti": 1887, "induct": [1887, 1893], "citat": 1888, "journal": 1888, "paper": 1888, "version": 1888, "specif": 1888, "doi": 1888, "histori": 1890, "v0": 1890, "1": [1890, 1894, 1905], "0": 1890, "alpha": 1890, "2": [1890, 1893, 1903], "3": 1890, "4": 1890, "5": 1890, "6": 1890, "welcom": 1891, "licens": 1891, "content": 1891, "contribut": 1891, "acknowledg": 1891, "instal": 1892, "requir": 1892, "via": 1892, "pip": 1892, "virtual": 1892, "python": 1892, "environ": 1892, "standard": 1892, "user": 1892, "develop": 1892, "conda": 1892, "prepar": 1892, "blockag": [1893, 1894], "comparison": 1893, "farm": [1894, 1895], "static": 1895, "test_farm_67": 1895, "csv": 1895, "ambient": 1895, "wrf": 1895, "timeseri": [1895, 1906], "4464": 1895, "gz": 1895, "abl_states_6000": 1895, "timeseries_3000": 1895, "timeseries_8000": 1895, "timeseries_100": 1895, "wind_rose_bremen": 1895, "wind_rot": 1895, "nc": 1895, "power": [1895, 1901], "thrust": 1895, "curv": 1895, "dtu": 1895, "10mw": 1895, "d178d3": 1895, "h119": 1895, "iea": 1895, "15mw": 1895, "d240": 1895, "h150": 1895, "iwt": 1895, "7d5mw": 1895, "d164": 1895, "h100": 1895, "nrel": 1895, "5mw": 1895, "d126": 1895, "h90": 1895, "file": 1895, "path": 1895, "heterogen": 1896, "flow": 1896, "optim": 1897, "The": 1898, "book": 1898, "multi": 1899, "height": 1899, "overview": 1900, "how": 1900, "setup": 1900, "mask": 1901, "sector": 1902, "manag": 1902, "dynam": [1903, 1905], "wake": [1903, 1905, 1908], "propag": [1903, 1905], "singl": 1904, "row": 1904, "turbin": 1904, "spatial": 1905, "homogen": 1905, "rose": 1907, "yaw": 1908, "rotor": 1908, "test": 1909}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Attributes": [[0, "attributes"], [9, "attributes"], [16, "attributes"], [46, "attributes"], [53, "attributes"], [57, "attributes"], [62, "attributes"], [66, "attributes"], [71, "attributes"], [77, "attributes"], [83, "attributes"], [93, "attributes"], [302, "attributes"], [319, "attributes"], [330, "attributes"], [339, "attributes"], [349, "attributes"], [354, "attributes"], [362, "attributes"], [375, "attributes"], [387, "attributes"], [393, "attributes"], [409, "attributes"], [416, "attributes"], [438, "attributes"], [453, "attributes"], [461, "attributes"], [481, "attributes"], [489, "attributes"], [510, "attributes"], [516, "attributes"], [519, "attributes"], [525, "attributes"], [532, "attributes"], [540, "attributes"], [551, "attributes"], [564, "attributes"], [572, "attributes"], [582, "attributes"], [589, "attributes"], [596, "attributes"], [600, "attributes"], [605, "attributes"], [611, "attributes"], [617, "attributes"], [622, "attributes"], [629, "attributes"], [633, "attributes"], [638, "attributes"], [648, "attributes"], [660, "attributes"], [666, "attributes"], [672, "attributes"], [678, "attributes"], [684, "attributes"], [688, "attributes"], [692, "attributes"], [696, "attributes"], [700, "attributes"], [707, "attributes"], [711, "attributes"], [717, "attributes"], [722, "attributes"], [729, "attributes"], [736, "attributes"], [742, "attributes"], [752, "attributes"], [771, "attributes"], [777, "attributes"], [784, "attributes"], [790, "attributes"], [797, "attributes"], [803, "attributes"], [809, "attributes"], [816, "attributes"], [823, "attributes"], [846, "attributes"], [852, "attributes"], [859, "attributes"], [867, "attributes"], [871, "attributes"], [875, "attributes"], [879, "attributes"], [883, "attributes"], [888, "attributes"], [893, "attributes"], [898, "attributes"], [903, "attributes"], [908, "attributes"], [913, "attributes"], [922, "attributes"], [949, "attributes"], [955, "attributes"], [958, "attributes"], [968, "attributes"], [973, "attributes"], [981, "attributes"], [986, "attributes"], [990, "attributes"], [998, "attributes"], [1451, "attributes"], [1459, "attributes"], [1466, "attributes"], [1473, "attributes"], [1490, "attributes"], [1513, "attributes"], [1538, "attributes"], [1588, "attributes"], [1596, "attributes"], [1607, "attributes"], [1655, "attributes"], [1710, "attributes"], [1720, "attributes"], [1730, "attributes"], [1740, "attributes"], [1763, "attributes"], [1779, "attributes"], [1797, "attributes"]], "Public members": [[0, "public-members"], [9, "public-members"], [16, "public-members"], [35, "public-members"], [40, "public-members"], [46, "public-members"], [53, "public-members"], [57, "public-members"], [62, "public-members"], [66, "public-members"], [71, "public-members"], [75, "public-members"], [77, "public-members"], [83, "public-members"], [87, "public-members"], [92, "public-members"], [103, "public-members"], [228, "public-members"], [302, "public-members"], [317, "public-members"], [319, "public-members"], [327, "public-members"], [330, "public-members"], [339, "public-members"], [349, "public-members"], [354, "public-members"], [361, "public-members"], [362, "public-members"], [375, "public-members"], [383, "public-members"], [387, "public-members"], [393, "public-members"], [403, "public-members"], [409, "public-members"], [413, "public-members"], [416, "public-members"], [419, "public-members"], [423, "public-members"], [430, "public-members"], [435, "public-members"], [438, "public-members"], [443, "public-members"], [453, "public-members"], [461, "public-members"], [472, "public-members"], [474, "public-members"], [481, "public-members"], [489, "public-members"], [502, "public-members"], [505, "public-members"], [509, "public-members"], [510, "public-members"], [516, "public-members"], [519, "public-members"], [525, "public-members"], [532, "public-members"], [540, "public-members"], [548, "public-members"], [551, "public-members"], [558, "public-members"], [564, "public-members"], [569, "public-members"], [572, "public-members"], [576, "public-members"], [582, "public-members"], [589, "public-members"], [596, "public-members"], [600, "public-members"], [605, "public-members"], [611, "public-members"], [617, "public-members"], [622, "public-members"], [629, "public-members"], [633, "public-members"], [638, "public-members"], [642, "public-members"], [645, "public-members"], [648, "public-members"], [653, "public-members"], [655, "public-members"], [657, "public-members"], [660, "public-members"], [666, "public-members"], [672, "public-members"], [678, "public-members"], [684, "public-members"], [688, "public-members"], [692, "public-members"], [696, "public-members"], [700, "public-members"], [704, "public-members"], [707, "public-members"], [711, "public-members"], [717, "public-members"], [722, "public-members"], [729, "public-members"], [736, "public-members"], [742, "public-members"], [749, "public-members"], [752, "public-members"], [759, "public-members"], [762, "public-members"], [764, "public-members"], [771, "public-members"], [777, "public-members"], [784, "public-members"], [790, "public-members"], [796, "public-members"], [797, "public-members"], [803, "public-members"], [809, "public-members"], [816, "public-members"], [823, "public-members"], [846, "public-members"], [852, "public-members"], [859, "public-members"], [867, "public-members"], [871, "public-members"], [875, "public-members"], [879, "public-members"], [883, "public-members"], [888, "public-members"], [893, "public-members"], [898, "public-members"], [903, "public-members"], [908, "public-members"], [913, "public-members"], [922, "public-members"], [942, "public-members"], [949, "public-members"], [955, "public-members"], [958, "public-members"], [962, "public-members"], [968, "public-members"], [973, "public-members"], [981, "public-members"], [984, "public-members"], [986, "public-members"], [990, "public-members"], [998, "public-members"], [1005, "public-members"], [1006, "public-members"], [1013, "public-members"], [1048, "public-members"], [1069, "public-members"], [1078, "public-members"], [1090, "public-members"], [1100, "public-members"], [1442, "public-members"], [1449, "public-members"], [1451, "public-members"], [1459, "public-members"], [1466, "public-members"], [1473, "public-members"], [1481, "public-members"], [1490, "public-members"], [1511, "public-members"], [1513, "public-members"], [1520, "public-members"], [1531, "public-members"], [1538, "public-members"], [1582, "public-members"], [1588, "public-members"], [1596, "public-members"], [1605, "public-members"], [1607, "public-members"], [1613, "public-members"], [1615, "public-members"], [1629, "public-members"], [1634, "public-members"], [1639, "public-members"], [1644, "public-members"], [1650, "public-members"], [1655, "public-members"], [1660, "public-members"], [1666, "public-members"], [1672, "public-members"], [1679, "public-members"], [1685, "public-members"], [1691, "public-members"], [1697, "public-members"], [1703, "public-members"], [1706, "public-members"], [1710, "public-members"], [1720, "public-members"], [1730, "public-members"], [1740, "public-members"], [1754, "public-members"], [1763, "public-members"], [1779, "public-members"], [1797, "public-members"], [1804, "public-members"], [1806, "public-members"]], "Parameters": [[1, "parameters"], [2, "parameters"], [3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [17, "parameters"], [20, "parameters"], [21, "parameters"], [27, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [55, "parameters"], [56, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [72, "parameters"], [73, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [97, "parameters"], [98, "parameters"], [101, "parameters"], [195, "parameters"], [303, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [318, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [326, "parameters"], [328, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [335, "parameters"], [338, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [374, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [384, "parameters"], [386, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [394, "parameters"], [395, "parameters"], [397, "parameters"], [398, "parameters"], [400, "parameters"], [401, "parameters"], [405, "parameters"], [406, "parameters"], [408, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [417, "parameters"], [418, "parameters"], [420, "parameters"], [422, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [436, "parameters"], [437, "parameters"], [439, "parameters"], [440, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [454, "parameters"], [455, "parameters"], [457, "parameters"], [458, "parameters"], [460, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [471, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [480, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [488, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [501, "parameters"], [503, "parameters"], [504, "parameters"], [508, "parameters"], [511, "parameters"], [513, "parameters"], [514, "parameters"], [518, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [533, "parameters"], [535, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [541, "parameters"], [543, "parameters"], [544, "parameters"], [545, "parameters"], [546, "parameters"], [549, "parameters"], [550, "parameters"], [552, "parameters"], [553, "parameters"], [554, "parameters"], [555, "parameters"], [556, "parameters"], [559, "parameters"], [560, "parameters"], [561, "parameters"], [562, "parameters"], [563, "parameters"], [565, "parameters"], [566, "parameters"], [567, "parameters"], [568, "parameters"], [570, "parameters"], [571, "parameters"], [573, "parameters"], [574, "parameters"], [575, "parameters"], [578, "parameters"], [579, "parameters"], [583, "parameters"], [586, "parameters"], [590, "parameters"], [593, "parameters"], [597, "parameters"], [598, "parameters"], [599, "parameters"], [601, "parameters"], [602, "parameters"], [603, "parameters"], [604, "parameters"], [606, "parameters"], [607, "parameters"], [608, "parameters"], [609, "parameters"], [612, "parameters"], [613, "parameters"], [614, "parameters"], [615, "parameters"], [618, "parameters"], [619, "parameters"], [620, "parameters"], [621, "parameters"], [623, "parameters"], [624, "parameters"], [625, "parameters"], [626, "parameters"], [627, "parameters"], [630, "parameters"], [631, "parameters"], [632, "parameters"], [634, "parameters"], [635, "parameters"], [636, "parameters"], [637, "parameters"], [639, "parameters"], [640, "parameters"], [641, "parameters"], [643, "parameters"], [644, "parameters"], [646, "parameters"], [647, "parameters"], [649, "parameters"], [651, "parameters"], [652, "parameters"], [654, "parameters"], [656, "parameters"], [658, "parameters"], [659, "parameters"], [661, "parameters"], [662, "parameters"], [663, "parameters"], [664, "parameters"], [665, "parameters"], [667, "parameters"], [668, "parameters"], [669, "parameters"], [670, "parameters"], [671, "parameters"], [673, "parameters"], [674, "parameters"], [675, "parameters"], [676, "parameters"], [677, "parameters"], [679, "parameters"], [680, "parameters"], [681, "parameters"], [682, "parameters"], [683, "parameters"], [685, "parameters"], [686, "parameters"], [689, "parameters"], [690, "parameters"], [693, "parameters"], [694, "parameters"], [697, "parameters"], [698, "parameters"], [701, "parameters"], [702, "parameters"], [705, "parameters"], [708, "parameters"], [709, "parameters"], [712, "parameters"], [713, "parameters"], [714, "parameters"], [715, "parameters"], [718, "parameters"], [719, "parameters"], [720, "parameters"], [721, "parameters"], [723, "parameters"], [724, "parameters"], [725, "parameters"], [726, "parameters"], [727, "parameters"], [728, "parameters"], [730, "parameters"], [732, "parameters"], [733, "parameters"], [734, "parameters"], [735, "parameters"], [737, "parameters"], [738, "parameters"], [739, "parameters"], [740, "parameters"], [741, "parameters"], [743, "parameters"], [744, "parameters"], [745, "parameters"], [746, "parameters"], [747, "parameters"], [750, "parameters"], [751, "parameters"], [753, "parameters"], [754, "parameters"], [755, "parameters"], [756, "parameters"], [757, "parameters"], [760, "parameters"], [761, "parameters"], [763, "parameters"], [764, "parameters"], [765, "parameters"], [766, "parameters"], [767, "parameters"], [768, "parameters"], [769, "parameters"], [772, "parameters"], [773, "parameters"], [774, "parameters"], [775, "parameters"], [778, "parameters"], [779, "parameters"], [780, "parameters"], [781, "parameters"], [782, "parameters"], [785, "parameters"], [786, "parameters"], [787, "parameters"], [788, "parameters"], [791, "parameters"], [792, "parameters"], [793, "parameters"], [794, "parameters"], [798, "parameters"], [800, "parameters"], [801, "parameters"], [802, "parameters"], [804, "parameters"], [806, "parameters"], [807, "parameters"], [808, "parameters"], [810, "parameters"], [812, "parameters"], [813, "parameters"], [814, "parameters"], [817, "parameters"], [819, "parameters"], [820, "parameters"], [821, "parameters"], [838, "parameters"], [839, "parameters"], [841, "parameters"], [842, "parameters"], [843, "parameters"], [847, "parameters"], [849, "parameters"], [850, "parameters"], [851, "parameters"], [853, "parameters"], [855, "parameters"], [856, "parameters"], [857, "parameters"], [860, "parameters"], [862, "parameters"], [863, "parameters"], [864, "parameters"], [865, "parameters"], [868, "parameters"], [869, "parameters"], [870, "parameters"], [872, "parameters"], [873, "parameters"], [874, "parameters"], [876, "parameters"], [877, "parameters"], [878, "parameters"], [880, "parameters"], [881, "parameters"], [882, "parameters"], [884, "parameters"], [885, "parameters"], [886, "parameters"], [887, "parameters"], [889, "parameters"], [890, "parameters"], [891, "parameters"], [892, "parameters"], [894, "parameters"], [895, "parameters"], [896, "parameters"], [897, "parameters"], [899, "parameters"], [900, "parameters"], [901, "parameters"], [902, "parameters"], [904, "parameters"], [905, "parameters"], [906, "parameters"], [907, "parameters"], [909, "parameters"], [910, "parameters"], [911, "parameters"], [914, "parameters"], [915, "parameters"], [918, "parameters"], [919, "parameters"], [920, "parameters"], [921, "parameters"], [923, "parameters"], [924, "parameters"], [925, "parameters"], [927, "parameters"], [928, "parameters"], [929, "parameters"], [930, "parameters"], [931, "parameters"], [933, "parameters"], [934, "parameters"], [935, "parameters"], [936, "parameters"], [937, "parameters"], [938, "parameters"], [939, "parameters"], [940, "parameters"], [941, "parameters"], [943, "parameters"], [944, "parameters"], [945, "parameters"], [946, "parameters"], [947, "parameters"], [948, "parameters"], [950, "parameters"], [951, "parameters"], [952, "parameters"], [954, "parameters"], [956, "parameters"], [957, "parameters"], [959, "parameters"], [960, "parameters"], [961, "parameters"], [963, "parameters"], [964, "parameters"], [965, "parameters"], [966, "parameters"], [967, "parameters"], [969, "parameters"], [971, "parameters"], [972, "parameters"], [974, "parameters"], [975, "parameters"], [976, "parameters"], [977, "parameters"], [978, "parameters"], [979, "parameters"], [980, "parameters"], [982, "parameters"], [983, "parameters"], [985, "parameters"], [987, "parameters"], [988, "parameters"], [989, "parameters"], [990, "parameters"], [991, "parameters"], [992, "parameters"], [993, "parameters"], [994, "parameters"], [995, "parameters"], [996, "parameters"], [997, "parameters"], [1003, "parameters"], [1004, "parameters"], [1006, "parameters"], [1008, "parameters"], [1013, "parameters"], [1019, "parameters"], [1039, "parameters"], [1040, "parameters"], [1041, "parameters"], [1043, "parameters"], [1048, "parameters"], [1051, "parameters"], [1063, "parameters"], [1064, "parameters"], [1065, "parameters"], [1069, "parameters"], [1070, "parameters"], [1076, "parameters"], [1110, "parameters"], [1112, "parameters"], [1120, "parameters"], [1121, "parameters"], [1122, "parameters"], [1123, "parameters"], [1125, "parameters"], [1126, "parameters"], [1128, "parameters"], [1129, "parameters"], [1130, "parameters"], [1131, "parameters"], [1132, "parameters"], [1133, "parameters"], [1134, "parameters"], [1135, "parameters"], [1136, "parameters"], [1137, "parameters"], [1138, "parameters"], [1139, "parameters"], [1140, "parameters"], [1141, "parameters"], [1145, "parameters"], [1147, "parameters"], [1149, "parameters"], [1151, "parameters"], [1152, "parameters"], [1155, "parameters"], [1156, "parameters"], [1157, "parameters"], [1160, "parameters"], [1161, "parameters"], [1162, "parameters"], [1163, "parameters"], [1164, "parameters"], [1165, "parameters"], [1187, "parameters"], [1207, "parameters"], [1225, "parameters"], [1226, "parameters"], [1235, "parameters"], [1243, "parameters"], [1245, "parameters"], [1249, "parameters"], [1257, "parameters"], [1259, "parameters"], [1261, "parameters"], [1264, "parameters"], [1265, "parameters"], [1266, "parameters"], [1267, "parameters"], [1269, "parameters"], [1271, "parameters"], [1272, "parameters"], [1273, "parameters"], [1278, "parameters"], [1280, "parameters"], [1281, "parameters"], [1282, "parameters"], [1283, "parameters"], [1284, "parameters"], [1291, "parameters"], [1292, "parameters"], [1293, "parameters"], [1294, "parameters"], [1297, "parameters"], [1298, "parameters"], [1299, "parameters"], [1301, "parameters"], [1302, "parameters"], [1303, "parameters"], [1305, "parameters"], [1309, "parameters"], [1310, "parameters"], [1311, "parameters"], [1312, "parameters"], [1313, "parameters"], [1315, "parameters"], [1316, "parameters"], [1317, "parameters"], [1318, "parameters"], [1319, "parameters"], [1320, "parameters"], [1321, "parameters"], [1322, "parameters"], [1323, "parameters"], [1324, "parameters"], [1327, "parameters"], [1328, "parameters"], [1329, "parameters"], [1330, "parameters"], [1331, "parameters"], [1332, "parameters"], [1334, "parameters"], [1335, "parameters"], [1336, "parameters"], [1337, "parameters"], [1338, "parameters"], [1340, "parameters"], [1341, "parameters"], [1343, "parameters"], [1344, "parameters"], [1345, "parameters"], [1346, "parameters"], [1348, "parameters"], [1349, "parameters"], [1350, "parameters"], [1351, "parameters"], [1353, "parameters"], [1354, "parameters"], [1355, "parameters"], [1358, "parameters"], [1359, "parameters"], [1363, "parameters"], [1364, "parameters"], [1368, "parameters"], [1369, "parameters"], [1370, "parameters"], [1371, "parameters"], [1372, "parameters"], [1373, "parameters"], [1374, "parameters"], [1375, "parameters"], [1376, "parameters"], [1377, "parameters"], [1378, "parameters"], [1379, "parameters"], [1380, "parameters"], [1381, "parameters"], [1382, "parameters"], [1383, "parameters"], [1384, "parameters"], [1385, "parameters"], [1386, "parameters"], [1389, "parameters"], [1390, "parameters"], [1391, "parameters"], [1392, "parameters"], [1394, "parameters"], [1395, "parameters"], [1396, "parameters"], [1398, "parameters"], [1399, "parameters"], [1401, "parameters"], [1403, "parameters"], [1404, "parameters"], [1405, "parameters"], [1406, "parameters"], [1407, "parameters"], [1408, "parameters"], [1411, "parameters"], [1412, "parameters"], [1416, "parameters"], [1417, "parameters"], [1418, "parameters"], [1419, "parameters"], [1421, "parameters"], [1422, "parameters"], [1425, "parameters"], [1426, "parameters"], [1427, "parameters"], [1428, "parameters"], [1429, "parameters"], [1430, "parameters"], [1431, "parameters"], [1432, "parameters"], [1433, "parameters"], [1434, "parameters"], [1435, "parameters"], [1436, "parameters"], [1437, "parameters"], [1438, "parameters"], [1439, "parameters"], [1440, "parameters"], [1441, "parameters"], [1443, "parameters"], [1447, "parameters"], [1448, "parameters"], [1450, "parameters"], [1452, "parameters"], [1453, "parameters"], [1457, "parameters"], [1458, "parameters"], [1460, "parameters"], [1461, "parameters"], [1464, "parameters"], [1465, "parameters"], [1467, "parameters"], [1468, "parameters"], [1471, "parameters"], [1472, "parameters"], [1474, "parameters"], [1475, "parameters"], [1479, "parameters"], [1480, "parameters"], [1482, "parameters"], [1483, "parameters"], [1487, "parameters"], [1488, "parameters"], [1489, "parameters"], [1491, "parameters"], [1493, "parameters"], [1494, "parameters"], [1495, "parameters"], [1497, "parameters"], [1498, "parameters"], [1499, "parameters"], [1500, "parameters"], [1505, "parameters"], [1506, "parameters"], [1512, "parameters"], [1514, "parameters"], [1515, "parameters"], [1516, "parameters"], [1517, "parameters"], [1521, "parameters"], [1522, "parameters"], [1523, "parameters"], [1524, "parameters"], [1532, "parameters"], [1533, "parameters"], [1540, "parameters"], [1541, "parameters"], [1542, "parameters"], [1543, "parameters"], [1545, "parameters"], [1546, "parameters"], [1547, "parameters"], [1548, "parameters"], [1549, "parameters"], [1552, "parameters"], [1553, "parameters"], [1555, "parameters"], [1556, "parameters"], [1557, "parameters"], [1560, "parameters"], [1573, "parameters"], [1574, "parameters"], [1575, "parameters"], [1577, "parameters"], [1578, "parameters"], [1579, "parameters"], [1583, "parameters"], [1584, "parameters"], [1585, "parameters"], [1586, "parameters"], [1587, "parameters"], [1589, "parameters"], [1590, "parameters"], [1591, "parameters"], [1592, "parameters"], [1593, "parameters"], [1595, "parameters"], [1597, "parameters"], [1598, "parameters"], [1599, "parameters"], [1600, "parameters"], [1601, "parameters"], [1605, "parameters"], [1606, "parameters"], [1608, "parameters"], [1609, "parameters"], [1610, "parameters"], [1613, "parameters"], [1614, "parameters"], [1616, "parameters"], [1617, "parameters"], [1620, "parameters"], [1625, "parameters"], [1626, "parameters"], [1630, "parameters"], [1631, "parameters"], [1632, "parameters"], [1635, "parameters"], [1636, "parameters"], [1637, "parameters"], [1640, "parameters"], [1641, "parameters"], [1642, "parameters"], [1645, "parameters"], [1646, "parameters"], [1647, "parameters"], [1648, "parameters"], [1651, "parameters"], [1652, "parameters"], [1653, "parameters"], [1656, "parameters"], [1657, "parameters"], [1658, "parameters"], [1661, "parameters"], [1662, "parameters"], [1663, "parameters"], [1664, "parameters"], [1667, "parameters"], [1668, "parameters"], [1669, "parameters"], [1671, "parameters"], [1673, "parameters"], [1674, "parameters"], [1675, "parameters"], [1676, "parameters"], [1680, "parameters"], [1681, "parameters"], [1682, "parameters"], [1686, "parameters"], [1687, "parameters"], [1688, "parameters"], [1692, "parameters"], [1693, "parameters"], [1694, "parameters"], [1698, "parameters"], [1699, "parameters"], [1700, "parameters"], [1704, "parameters"], [1707, "parameters"], [1709, "parameters"], [1711, "parameters"], [1712, "parameters"], [1713, "parameters"], [1714, "parameters"], [1716, "parameters"], [1721, "parameters"], [1722, "parameters"], [1723, "parameters"], [1724, "parameters"], [1726, "parameters"], [1731, "parameters"], [1732, "parameters"], [1733, "parameters"], [1734, "parameters"], [1736, "parameters"], [1741, "parameters"], [1742, "parameters"], [1743, "parameters"], [1744, "parameters"], [1747, "parameters"], [1755, "parameters"], [1757, "parameters"], [1760, "parameters"], [1761, "parameters"], [1764, "parameters"], [1765, "parameters"], [1768, "parameters"], [1773, "parameters"], [1774, "parameters"], [1775, "parameters"], [1776, "parameters"], [1785, "parameters"], [1786, "parameters"], [1788, "parameters"], [1791, "parameters"], [1792, "parameters"], [1794, "parameters"], [1795, "parameters"], [1796, "parameters"], [1798, "parameters"], [1803, "parameters"], [1805, "parameters"], [1811, "parameters"], [1812, "parameters"], [1813, "parameters"], [1814, "parameters"], [1815, "parameters"], [1816, "parameters"], [1817, "parameters"], [1818, "parameters"], [1819, "parameters"], [1820, "parameters"], [1821, "parameters"]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [15, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [36, "returns"], [38, "returns"], [39, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [56, "returns"], [59, "returns"], [61, "returns"], [64, "returns"], [65, "returns"], [69, "returns"], [70, "returns"], [73, "returns"], [74, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [85, "returns"], [86, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [114, "returns"], [195, "returns"], [233, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [313, "returns"], [318, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [328, "returns"], [329, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [341, "returns"], [345, "returns"], [346, "returns"], [348, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [357, "returns"], [359, "returns"], [360, "returns"], [367, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [381, "returns"], [382, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [395, "returns"], [396, "returns"], [398, "returns"], [399, "returns"], [401, "returns"], [402, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [414, "returns"], [420, "returns"], [421, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [436, "returns"], [437, "returns"], [441, "returns"], [442, "returns"], [445, "returns"], [446, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [464, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [470, "returns"], [471, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [483, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [492, "returns"], [494, "returns"], [496, "returns"], [497, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [504, "returns"], [507, "returns"], [508, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [523, "returns"], [530, "returns"], [531, "returns"], [538, "returns"], [539, "returns"], [546, "returns"], [547, "returns"], [556, "returns"], [557, "returns"], [562, "returns"], [563, "returns"], [566, "returns"], [567, "returns"], [568, "returns"], [570, "returns"], [571, "returns"], [574, "returns"], [575, "returns"], [577, "returns"], [579, "returns"], [580, "returns"], [581, "returns"], [585, "returns"], [587, "returns"], [588, "returns"], [592, "returns"], [594, "returns"], [595, "returns"], [598, "returns"], [599, "returns"], [602, "returns"], [603, "returns"], [604, "returns"], [607, "returns"], [609, "returns"], [613, "returns"], [615, "returns"], [616, "returns"], [619, "returns"], [621, "returns"], [625, "returns"], [626, "returns"], [627, "returns"], [631, "returns"], [632, "returns"], [635, "returns"], [637, "returns"], [640, "returns"], [641, "returns"], [643, "returns"], [644, "returns"], [646, "returns"], [647, "returns"], [651, "returns"], [652, "returns"], [658, "returns"], [659, "returns"], [662, "returns"], [664, "returns"], [665, "returns"], [668, "returns"], [670, "returns"], [671, "returns"], [674, "returns"], [676, "returns"], [677, "returns"], [680, "returns"], [682, "returns"], [683, "returns"], [686, "returns"], [687, "returns"], [690, "returns"], [691, "returns"], [694, "returns"], [695, "returns"], [698, "returns"], [699, "returns"], [702, "returns"], [703, "returns"], [705, "returns"], [706, "returns"], [709, "returns"], [710, "returns"], [713, "returns"], [714, "returns"], [715, "returns"], [716, "returns"], [719, "returns"], [720, "returns"], [721, "returns"], [724, "returns"], [725, "returns"], [726, "returns"], [732, "returns"], [733, "returns"], [734, "returns"], [735, "returns"], [738, "returns"], [739, "returns"], [740, "returns"], [744, "returns"], [745, "returns"], [746, "returns"], [748, "returns"], [750, "returns"], [751, "returns"], [754, "returns"], [758, "returns"], [760, "returns"], [761, "returns"], [766, "returns"], [767, "returns"], [768, "returns"], [770, "returns"], [776, "returns"], [783, "returns"], [789, "returns"], [795, "returns"], [800, "returns"], [801, "returns"], [806, "returns"], [807, "returns"], [812, "returns"], [815, "returns"], [819, "returns"], [822, "returns"], [841, "returns"], [842, "returns"], [844, "returns"], [845, "returns"], [849, "returns"], [850, "returns"], [855, "returns"], [858, "returns"], [862, "returns"], [866, "returns"], [869, "returns"], [870, "returns"], [873, "returns"], [874, "returns"], [877, "returns"], [878, "returns"], [881, "returns"], [882, "returns"], [885, "returns"], [886, "returns"], [887, "returns"], [890, "returns"], [891, "returns"], [892, "returns"], [895, "returns"], [896, "returns"], [897, "returns"], [900, "returns"], [901, "returns"], [902, "returns"], [905, "returns"], [906, "returns"], [907, "returns"], [911, "returns"], [912, "returns"], [915, "returns"], [916, "returns"], [917, "returns"], [926, "returns"], [927, "returns"], [928, "returns"], [929, "returns"], [930, "returns"], [931, "returns"], [933, "returns"], [934, "returns"], [935, "returns"], [936, "returns"], [938, "returns"], [939, "returns"], [940, "returns"], [941, "returns"], [946, "returns"], [947, "returns"], [948, "returns"], [951, "returns"], [957, "returns"], [964, "returns"], [965, "returns"], [966, "returns"], [967, "returns"], [975, "returns"], [976, "returns"], [977, "returns"], [978, "returns"], [979, "returns"], [980, "returns"], [983, "returns"], [988, "returns"], [996, "returns"], [997, "returns"], [1003, "returns"], [1005, "returns"], [1005, "id1"], [1005, "id2"], [1005, "id3"], [1005, "id4"], [1005, "id5"], [1005, "id6"], [1005, "id7"], [1039, "returns"], [1040, "returns"], [1041, "returns"], [1043, "returns"], [1063, "returns"], [1064, "returns"], [1065, "returns"], [1076, "returns"], [1110, "returns"], [1112, "returns"], [1120, "returns"], [1121, "returns"], [1123, "returns"], [1128, "returns"], [1129, "returns"], [1130, "returns"], [1131, "returns"], [1132, "returns"], [1133, "returns"], [1135, "returns"], [1136, "returns"], [1137, "returns"], [1139, "returns"], [1140, "returns"], [1141, "returns"], [1147, "returns"], [1149, "returns"], [1155, "returns"], [1160, "returns"], [1161, "returns"], [1162, "returns"], [1163, "returns"], [1164, "returns"], [1165, "returns"], [1181, "returns"], [1207, "returns"], [1211, "returns"], [1212, "returns"], [1213, "returns"], [1214, "returns"], [1218, "returns"], [1225, "returns"], [1226, "returns"], [1233, "returns"], [1234, "returns"], [1239, "returns"], [1243, "returns"], [1245, "returns"], [1247, "returns"], [1248, "returns"], [1253, "returns"], [1257, "returns"], [1259, "returns"], [1264, "returns"], [1265, "returns"], [1266, "returns"], [1267, "returns"], [1269, "returns"], [1271, "returns"], [1272, "returns"], [1273, "returns"], [1281, "returns"], [1282, "returns"], [1283, "returns"], [1284, "returns"], [1291, "returns"], [1292, "returns"], [1293, "returns"], [1294, "returns"], [1297, "returns"], [1298, "returns"], [1299, "returns"], [1301, "returns"], [1302, "returns"], [1309, "returns"], [1310, "returns"], [1311, "returns"], [1312, "returns"], [1313, "returns"], [1350, "returns"], [1364, "returns"], [1368, "returns"], [1374, "returns"], [1377, "returns"], [1381, "returns"], [1384, "returns"], [1389, "returns"], [1390, "returns"], [1391, "returns"], [1392, "returns"], [1395, "returns"], [1396, "returns"], [1398, "returns"], [1399, "returns"], [1401, "returns"], [1405, "returns"], [1406, "returns"], [1408, "returns"], [1409, "returns"], [1410, "returns"], [1416, "returns"], [1417, "returns"], [1418, "returns"], [1421, "returns"], [1425, "returns"], [1426, "returns"], [1427, "returns"], [1428, "returns"], [1429, "returns"], [1430, "returns"], [1431, "returns"], [1432, "returns"], [1433, "returns"], [1434, "returns"], [1435, "returns"], [1436, "returns"], [1437, "returns"], [1438, "returns"], [1439, "returns"], [1440, "returns"], [1441, "returns"], [1444, "returns"], [1445, "returns"], [1446, "returns"], [1447, "returns"], [1448, "returns"], [1454, "returns"], [1455, "returns"], [1456, "returns"], [1457, "returns"], [1458, "returns"], [1462, "returns"], [1463, "returns"], [1464, "returns"], [1465, "returns"], [1469, "returns"], [1470, "returns"], [1471, "returns"], [1472, "returns"], [1476, "returns"], [1477, "returns"], [1478, "returns"], [1479, "returns"], [1480, "returns"], [1484, "returns"], [1485, "returns"], [1486, "returns"], [1487, "returns"], [1488, "returns"], [1489, "returns"], [1492, "returns"], [1493, "returns"], [1494, "returns"], [1495, "returns"], [1496, "returns"], [1498, "returns"], [1499, "returns"], [1501, "returns"], [1502, "returns"], [1503, "returns"], [1504, "returns"], [1507, "returns"], [1508, "returns"], [1509, "returns"], [1510, "returns"], [1515, "returns"], [1516, "returns"], [1518, "returns"], [1519, "returns"], [1523, "returns"], [1524, "returns"], [1525, "returns"], [1526, "returns"], [1527, "returns"], [1529, "returns"], [1530, "returns"], [1534, "returns"], [1535, "returns"], [1537, "returns"], [1544, "returns"], [1545, "returns"], [1546, "returns"], [1547, "returns"], [1548, "returns"], [1549, "returns"], [1550, "returns"], [1551, "returns"], [1552, "returns"], [1553, "returns"], [1554, "returns"], [1555, "returns"], [1556, "returns"], [1557, "returns"], [1558, "returns"], [1559, "returns"], [1561, "returns"], [1562, "returns"], [1563, "returns"], [1564, "returns"], [1565, "returns"], [1566, "returns"], [1567, "returns"], [1568, "returns"], [1569, "returns"], [1570, "returns"], [1571, "returns"], [1572, "returns"], [1573, "returns"], [1574, "returns"], [1575, "returns"], [1576, "returns"], [1577, "returns"], [1580, "returns"], [1581, "returns"], [1584, "returns"], [1585, "returns"], [1590, "returns"], [1592, "returns"], [1593, "returns"], [1594, "returns"], [1595, "returns"], [1598, "returns"], [1599, "returns"], [1600, "returns"], [1602, "returns"], [1603, "returns"], [1604, "returns"], [1609, "returns"], [1610, "returns"], [1611, "returns"], [1612, "returns"], [1618, "returns"], [1619, "returns"], [1621, "returns"], [1622, "returns"], [1623, "returns"], [1624, "returns"], [1625, "returns"], [1626, "returns"], [1627, "returns"], [1628, "returns"], [1631, "returns"], [1632, "returns"], [1633, "returns"], [1636, "returns"], [1637, "returns"], [1638, "returns"], [1641, "returns"], [1642, "returns"], [1643, "returns"], [1646, "returns"], [1647, "returns"], [1649, "returns"], [1652, "returns"], [1653, "returns"], [1654, "returns"], [1658, "returns"], [1659, "returns"], [1662, "returns"], [1663, "returns"], [1665, "returns"], [1668, "returns"], [1669, "returns"], [1670, "returns"], [1671, "returns"], [1674, "returns"], [1675, "returns"], [1677, "returns"], [1678, "returns"], [1681, "returns"], [1682, "returns"], [1683, "returns"], [1684, "returns"], [1687, "returns"], [1688, "returns"], [1689, "returns"], [1690, "returns"], [1693, "returns"], [1694, "returns"], [1695, "returns"], [1696, "returns"], [1699, "returns"], [1700, "returns"], [1701, "returns"], [1702, "returns"], [1705, "returns"], [1708, "returns"], [1709, "returns"], [1712, "returns"], [1713, "returns"], [1714, "returns"], [1715, "returns"], [1717, "returns"], [1718, "returns"], [1719, "returns"], [1722, "returns"], [1723, "returns"], [1724, "returns"], [1725, "returns"], [1727, "returns"], [1728, "returns"], [1729, "returns"], [1732, "returns"], [1733, "returns"], [1734, "returns"], [1735, "returns"], [1737, "returns"], [1738, "returns"], [1739, "returns"], [1742, "returns"], [1743, "returns"], [1744, "returns"], [1745, "returns"], [1746, "returns"], [1748, "returns"], [1749, "returns"], [1750, "returns"], [1751, "returns"], [1752, "returns"], [1753, "returns"], [1755, "returns"], [1756, "returns"], [1758, "returns"], [1759, "returns"], [1760, "returns"], [1761, "returns"], [1762, "returns"], [1765, "returns"], [1766, "returns"], [1767, "returns"], [1769, "returns"], [1770, "returns"], [1771, "returns"], [1772, "returns"], [1773, "returns"], [1774, "returns"], [1777, "returns"], [1778, "returns"], [1786, "returns"], [1787, "returns"], [1789, "returns"], [1790, "returns"], [1791, "returns"], [1792, "returns"], [1793, "returns"], [1794, "returns"], [1795, "returns"], [1796, "returns"], [1803, "returns"], [1805, "returns"], [1810, "returns"], [1811, "returns"], [1813, "returns"], [1814, "returns"], [1815, "returns"], [1816, "returns"], [1817, "returns"], [1818, "returns"], [1819, "returns"], [1820, "returns"]], "Examples": [[114, "examples"], [186, "examples"], [233, "examples"], [274, "examples"], [276, "examples"], [1128, "examples"], [1131, "examples"], [1132, "examples"], [1133, "examples"], [1141, "examples"], [1161, "examples"], [1273, "examples"], [1280, "examples"], [1310, "examples"], [1311, "examples"], [1346, "examples"], [1374, "examples"], [1381, "examples"], [1397, "examples"], [1401, "examples"], [1403, "examples"], [1671, "examples"], [1709, "examples"], [1889, "examples"]], "Notes": [[114, "notes"], [233, "notes"], [742, "notes"], [777, "notes"], [784, "notes"], [790, "notes"], [796, "notes"], [797, "notes"], [803, "notes"], [809, "notes"], [816, "notes"], [823, "notes"], [852, "notes"], [1110, "notes"], [1122, "notes"], [1123, "notes"], [1126, "notes"], [1137, "notes"], [1155, "notes"], [1156, "notes"], [1157, "notes"], [1159, "notes"], [1161, "notes"], [1162, "notes"], [1210, "notes"], [1233, "notes"], [1234, "notes"], [1239, "notes"], [1247, "notes"], [1248, "notes"], [1253, "notes"], [1261, "notes"], [1265, "notes"], [1266, "notes"], [1269, "notes"], [1283, "notes"], [1284, "notes"], [1291, "notes"], [1293, "notes"], [1297, "notes"], [1298, "notes"], [1299, "notes"], [1301, "notes"], [1302, "notes"], [1309, "notes"], [1315, "notes"], [1331, "notes"], [1374, "notes"], [1376, "notes"], [1378, "notes"], [1381, "notes"], [1383, "notes"], [1385, "notes"], [1389, "notes"], [1394, "notes"], [1395, "notes"], [1406, "notes"], [1409, "notes"], [1410, "notes"], [1421, "notes"], [1671, "notes"], [1709, "notes"]], "See Also": [[114, "see-also"], [233, "see-also"], [1112, "see-also"], [1120, "see-also"], [1121, "see-also"], [1122, "see-also"], [1128, "see-also"], [1129, "see-also"], [1130, "see-also"], [1131, "see-also"], [1132, "see-also"], [1133, "see-also"], [1137, "see-also"], [1139, "see-also"], [1155, "see-also"], [1163, "see-also"], [1164, "see-also"], [1167, "see-also"], [1171, "see-also"], [1174, "see-also"], [1181, "see-also"], [1182, "see-also"], [1187, "see-also"], [1206, "see-also"], [1225, "see-also"], [1231, "see-also"], [1236, "see-also"], [1239, "see-also"], [1250, "see-also"], [1253, "see-also"], [1264, "see-also"], [1265, "see-also"], [1266, "see-also"], [1267, "see-also"], [1269, "see-also"], [1274, "see-also"], [1275, "see-also"], [1282, "see-also"], [1284, "see-also"], [1290, "see-also"], [1291, "see-also"], [1293, "see-also"], [1294, "see-also"], [1295, "see-also"], [1296, "see-also"], [1298, "see-also"], [1299, "see-also"], [1301, "see-also"], [1302, "see-also"], [1307, "see-also"], [1309, "see-also"], [1315, "see-also"], [1318, "see-also"], [1320, "see-also"], [1327, "see-also"], [1328, "see-also"], [1340, "see-also"], [1345, "see-also"], [1346, "see-also"], [1350, "see-also"], [1352, "see-also"], [1364, "see-also"], [1372, "see-also"], [1373, "see-also"], [1374, "see-also"], [1379, "see-also"], [1380, "see-also"], [1381, "see-also"], [1389, "see-also"], [1418, "see-also"]], "Yields": [[937, "yields"], [943, "yields"], [944, "yields"], [945, "yields"], [989, "yields"]], "Classes": [[1005, "classes"]], "Note": [[1025, null], [1088, null], [1139, null], [1167, null], [1187, null], [1235, null], [1249, null], [1298, null], [1396, null], [1405, null], [1405, null], [1406, null], [1406, null]], "Other Parameters": [[1110, "other-parameters"], [1120, "other-parameters"], [1128, "other-parameters"], [1129, "other-parameters"], [1131, "other-parameters"], [1132, "other-parameters"], [1133, "other-parameters"], [1134, "other-parameters"], [1136, "other-parameters"], [1137, "other-parameters"], [1138, "other-parameters"], [1139, "other-parameters"], [1140, "other-parameters"], [1147, "other-parameters"], [1151, "other-parameters"], [1152, "other-parameters"], [1155, "other-parameters"], [1160, "other-parameters"], [1162, "other-parameters"], [1163, "other-parameters"], [1164, "other-parameters"], [1264, "other-parameters"], [1265, "other-parameters"], [1266, "other-parameters"], [1267, "other-parameters"], [1269, "other-parameters"], [1278, "other-parameters"], [1280, "other-parameters"], [1282, "other-parameters"], [1284, "other-parameters"], [1291, "other-parameters"], [1292, "other-parameters"], [1293, "other-parameters"], [1294, "other-parameters"], [1298, "other-parameters"], [1299, "other-parameters"], [1301, "other-parameters"], [1302, "other-parameters"], [1309, "other-parameters"], [1310, "other-parameters"], [1311, "other-parameters"], [1350, "other-parameters"], [1364, "other-parameters"], [1368, "other-parameters"], [1373, "other-parameters"], [1380, "other-parameters"], [1390, "other-parameters"], [1392, "other-parameters"], [1399, "other-parameters"], [1401, "other-parameters"], [1403, "other-parameters"], [1405, "other-parameters"], [1406, "other-parameters"], [1418, "other-parameters"], [1421, "other-parameters"]], "References": [[1147, "references"], [1155, "references"], [1301, "references"]], "Discouraged": [[1232, null], [1246, null], [1299, null], [1377, null], [1384, null]], "Warnings": [[1271, "warnings"], [1272, "warnings"], [1273, "warnings"], [1310, "warnings"], [1311, "warnings"]], "Hint": [[1291, null], [1293, null]], "Warning": [[1292, null], [1342, null], [1350, null], [1364, null], [1377, null], [1384, null]], "See also": [[1395, null]], "Raises": [[1404, "raises"], [1671, "raises"], [1709, "raises"]], "API": [[1869, "api"]], "foxes.algorithms": [[1870, "foxes-algorithms"]], "Downwind algorithm": [[1871, "downwind-algorithm"]], "Downwind algorithm models": [[1871, "downwind-algorithm-models"]], "Iterative algorithm": [[1872, "iterative-algorithm"]], "Iterative algorithm models": [[1872, "iterative-algorithm-models"]], "Sequential algorithm": [[1873, "sequential-algorithm"]], "Sequential algorithm models": [[1873, "sequential-algorithm-models"]], "foxes.constants": [[1874, "foxes-constants"]], "foxes.core": [[1875, "foxes-core"]], "foxes.data": [[1876, "foxes-data"]], "foxes": [[1877, "foxes"]], "foxes.input": [[1878, "foxes-input"]], "foxes.input.farm_layout": [[1878, "foxes-input-farm-layout"]], "foxes.input.states": [[1878, "foxes-input-states"]], "foxes.input.windio": [[1878, "foxes-input-windio"]], "foxes.models": [[1879, "foxes-models"]], "foxes.models.farm_controllers": [[1879, "foxes-models-farm-controllers"]], "foxes.models.farm_models": [[1879, "foxes-models-farm-models"]], "foxes.models.partial_wakes": [[1879, "foxes-models-partial-wakes"]], "foxes.models.point_models": [[1879, "foxes-models-point-models"]], "foxes.models.rotor_models": [[1879, "foxes-models-rotor-models"]], "foxes.models.turbine_models": [[1879, "foxes-models-turbine-models"]], "foxes.models.turbine_types": [[1879, "foxes-models-turbine-types"]], "foxes.models.vertical_profiles": [[1879, "foxes-models-vertical-profiles"]], "foxes.models.axial_induction": [[1879, "foxes-models-axial-induction"]], "foxes.models.wake_frames": [[1879, "foxes-models-wake-frames"]], "foxes.models.wake_models": [[1879, "foxes-models-wake-models"], [1887, "foxes-models-wake-models"]], "foxes.models.wake_superpositions": [[1879, "foxes-models-wake-superpositions"]], "foxes.opt": [[1880, "foxes-opt"]], "foxes.opt.core": [[1880, "foxes-opt-core"]], "foxes.opt.problems": [[1880, "foxes-opt-problems"], [1881, "foxes-opt-problems"]], "foxes.opt.objectives": [[1880, "foxes-opt-objectives"]], "foxes.opt.constraints": [[1880, "foxes-opt-constraints"]], "foxes.opt.problems.layout": [[1881, "foxes-opt-problems-layout"]], "foxes.opt.problems.layout.geom_layouts": [[1881, "foxes-opt-problems-layout-geom-layouts"], [1882, "foxes-opt-problems-layout-geom-layouts"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1882, "foxes-opt-problems-layout-geom-layouts-objectives"]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1882, "foxes-opt-problems-layout-geom-layouts-constraints"]], "foxes.output": [[1883, "foxes-output"]], "foxes.output.flow_plots_2d": [[1883, "foxes-output-flow-plots-2d"]], "foxes.utils": [[1884, "foxes-utils"]], "foxes.utils.abl": [[1884, "foxes-utils-abl"]], "foxes.utils.geom2d": [[1884, "foxes-utils-geom2d"]], "foxes.utils.runners": [[1884, "foxes-utils-runners"]], "foxes.utils.two_circles": [[1884, "foxes-utils-two-circles"]], "foxes.utils.abl.neutral": [[1885, "foxes-utils-abl-neutral"]], "foxes.utils.abl.stable": [[1885, "foxes-utils-abl-stable"]], "foxes.utils.abl.unstable": [[1885, "foxes-utils-abl-unstable"]], "foxes.utils.abl.sheared": [[1885, "foxes-utils-abl-sheared"]], "foxes.variables": [[1886, "foxes-variables"]], "foxes.models.wake_models.wind": [[1887, "foxes-models-wake-models-wind"]], "foxes.models.wake_models.ti": [[1887, "foxes-models-wake-models-ti"]], "foxes.models.wake_models.induction": [[1887, "foxes-models-wake-models-induction"]], "Citation": [[1888, "citation"]], "Journal paper": [[1888, "journal-paper"]], "Version specific DOI": [[1888, "version-specific-doi"]], "History": [[1890, "history"]], "v0.1.0-alpha": [[1890, "v0-1-0-alpha"]], "v0.1.1-alpha": [[1890, "v0-1-1-alpha"]], "v0.1.2-alpha": [[1890, "v0-1-2-alpha"]], "v0.1.3-alpha": [[1890, "v0-1-3-alpha"]], "v0.1.4-alpha": [[1890, "v0-1-4-alpha"]], "v0.2.0-alpha": [[1890, "v0-2-0-alpha"]], "v0.2.1-alpha": [[1890, "v0-2-1-alpha"]], "v0.2.2-alpha": [[1890, "v0-2-2-alpha"]], "v0.2.3-alpha": [[1890, "v0-2-3-alpha"]], "v0.2.4-alpha": [[1890, "v0-2-4-alpha"]], "v0.2.5-alpha": [[1890, "v0-2-5-alpha"]], "v0.2.6-alpha": [[1890, "v0-2-6-alpha"]], "v0.3.0-alpha": [[1890, "v0-3-0-alpha"]], "v0.3.1-alpha": [[1890, "v0-3-1-alpha"]], "v0.3.2-alpha": [[1890, "v0-3-2-alpha"]], "v0.3.3-alpha": [[1890, "v0-3-3-alpha"]], "v0.3.4-alpha": [[1890, "v0-3-4-alpha"]], "v0.3.5-alpha": [[1890, "v0-3-5-alpha"]], "v0.4.0": [[1890, "v0-4-0"]], "v0.4.1": [[1890, "v0-4-1"]], "v0.4.2": [[1890, "v0-4-2"]], "v0.4.3": [[1890, "v0-4-3"]], "v0.4.4": [[1890, "v0-4-4"]], "v0.4.5": [[1890, "v0-4-5"]], "v0.5": [[1890, "v0-5"]], "v0.5.1": [[1890, "v0-5-1"]], "v0.5.2": [[1890, "v0-5-2"]], "v0.5.2.1": [[1890, "v0-5-2-1"]], "v0.6": [[1890, "v0-6"]], "v0.6.1": [[1890, "v0-6-1"]], "Welcome to FOXES": [[1891, "welcome-to-foxes"]], "License": [[1891, "license"]], "Contents": [[1891, "contents"]], "Contributing": [[1891, "contributing"]], "Acknowledgements": [[1891, "acknowledgements"]], "Installation": [[1892, "installation"]], "Requirements": [[1892, "requirements"]], "Installation via pip": [[1892, "installation-via-pip"]], "Virtual Python environment": [[1892, "virtual-python-environment"], [1892, "id1"]], "Standard users": [[1892, "standard-users"], [1892, "id2"]], "Developers": [[1892, "developers"], [1892, "id3"]], "Installation via conda": [[1892, "installation-via-conda"]], "Preparation": [[1892, "preparation"]], "Blockage modelling 2": [[1893, "Blockage-modelling-2"]], "Induction model comparison": [[1893, "Induction-model-comparison"]], "Blockage modelling 1": [[1894, "Blockage-modelling-1"]], "Wind farm blockage": [[1894, "Wind-farm-blockage"]], "Static data": [[1895, "Static-data"]], "Wind farm layout data": [[1895, "Wind-farm-layout-data"]], "test_farm_67.csv": [[1895, "test_farm_67.csv"]], "Ambient states data": [[1895, "Ambient-states-data"]], "WRF-Timeseries-4464.csv.gz": [[1895, "WRF-Timeseries-4464.csv.gz"]], "abl_states_6000.csv.gz": [[1895, "abl_states_6000.csv.gz"]], "timeseries_3000.csv.gz": [[1895, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[1895, "timeseries_8000.csv.gz"]], "timeseries_100.csv.gz": [[1895, "timeseries_100.csv.gz"]], "wind_rose_bremen.csv": [[1895, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[1895, "wind_rotation.nc"]], "Power and thrust curves": [[1895, "Power-and-thrust-curves"]], "DTU-10MW-D178d3-H119.csv": [[1895, "DTU-10MW-D178d3-H119.csv"]], "IEA-15MW-D240-H150.csv": [[1895, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[1895, "IWT-7d5MW-D164-H100.csv"]], "NREL-5MW-D126-H90.csv": [[1895, "NREL-5MW-D126-H90.csv"]], "File paths": [[1895, "File-paths"]], "Heterogeneous flow": [[1896, "Heterogeneous-flow"]], "Layout optimization": [[1897, "Layout-optimization"]], "The model book": [[1898, "The-model-book"]], "Multi-height wind data": [[1899, "Multi-height-wind-data"]], "Overview - how to setup foxes": [[1900, "Overview---how-to-setup-foxes"]], "Power mask": [[1901, "Power-mask"]], "Wind sector management": [[1902, "Wind-sector-management"]], "Dynamic wakes 2": [[1903, "Dynamic-wakes-2"]], "Sequential wake propagation": [[1903, "Sequential-wake-propagation"]], "Single row of turbines": [[1904, "Single-row-of-turbines"]], "Dynamic wakes 1": [[1905, "Dynamic-wakes-1"]], "Spatially homogeneous wake propagation": [[1905, "Spatially-homogeneous-wake-propagation"]], "Timeseries data": [[1906, "Timeseries-data"]], "Wind rose data": [[1907, "Wind-rose-data"]], "Yawed rotor wakes": [[1908, "Yawed-rotor-wakes"]], "Testing": [[1909, "testing"]]}, "indexentries": {"pep 585": [[114, "index-0"], [233, "index-0"]], "python enhancement proposals": [[114, "index-0"], [233, "index-0"]]}, "docurls": ["_foxes/algorithms/Downwind.html", "_foxes/algorithms/Downwind.__init__.html", "_foxes/algorithms/Downwind.all_models.html", "_foxes/algorithms/Downwind.calc_farm.html", "_foxes/algorithms/Downwind.calc_points.html", "_foxes/algorithms/Downwind.finalize.html", "_foxes/algorithms/Downwind.get_model.html", "_foxes/algorithms/Downwind.init_states.html", "_foxes/algorithms/Downwind.initialize.html", "_foxes/algorithms/Iterative.html", "_foxes/algorithms/Iterative.__init__.html", "_foxes/algorithms/Iterative.calc_farm.html", "_foxes/algorithms/Iterative.get_model.html", "_foxes/algorithms/Iterative.iterations.html", "_foxes/algorithms/Iterative.set_urelax.html", "_foxes/algorithms/Iterative.urelax.html", "_foxes/algorithms/Sequential.html", "_foxes/algorithms/Sequential.__init__.html", "_foxes/algorithms/Sequential.__iter__.html", "_foxes/algorithms/Sequential.__next__.html", "_foxes/algorithms/Sequential.calc_farm.html", "_foxes/algorithms/Sequential.calc_points.html", "_foxes/algorithms/Sequential.counter.html", "_foxes/algorithms/Sequential.cur_farm_results.html", "_foxes/algorithms/Sequential.cur_point_results.html", "_foxes/algorithms/Sequential.farm_results.html", "_foxes/algorithms/Sequential.fdata.html", "_foxes/algorithms/Sequential.get_model.html", "_foxes/algorithms/Sequential.index.html", "_foxes/algorithms/Sequential.iterating.html", "_foxes/algorithms/Sequential.mdata.html", "_foxes/algorithms/Sequential.pdata.html", "_foxes/algorithms/Sequential.point_results.html", "_foxes/algorithms/Sequential.size.html", "_foxes/algorithms/Sequential.weight.html", "_foxes/algorithms/downwind/models/CalcOrder.html", "_foxes/algorithms/downwind/models/CalcOrder.calculate.html", "_foxes/algorithms/downwind/models/CalcOrder.initialize.html", "_foxes/algorithms/downwind/models/CalcOrder.output_farm_vars.html", "_foxes/algorithms/downwind/models/CalcOrder.sub_models.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.contribute_to_wake_deltas.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.output_point_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.initialize.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.output_point_vars.html", "_foxes/algorithms/iterative/ConvCrit.html", "_foxes/algorithms/iterative/ConvCrit.__init__.html", "_foxes/algorithms/iterative/ConvCrit.check_converged.html", "_foxes/algorithms/iterative/ConvCrit.get_deltas.html", "_foxes/algorithms/iterative/ConvCritList.html", "_foxes/algorithms/iterative/ConvCritList.__init__.html", "_foxes/algorithms/iterative/ConvCritList.add_crit.html", "_foxes/algorithms/iterative/ConvCritList.check_converged.html", "_foxes/algorithms/iterative/ConvCritList.get_deltas.html", "_foxes/algorithms/iterative/ConvVarDelta.html", "_foxes/algorithms/iterative/ConvVarDelta.__init__.html", "_foxes/algorithms/iterative/ConvVarDelta.check_converged.html", "_foxes/algorithms/iterative/ConvVarDelta.get_deltas.html", "_foxes/algorithms/iterative/DefaultConv.html", "_foxes/algorithms/iterative/DefaultConv.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/iterative/models/URelax.html", "_foxes/algorithms/iterative/models/URelax.__init__.html", "_foxes/algorithms/iterative/models/URelax.calculate.html", "_foxes/algorithms/iterative/models/URelax.output_farm_vars.html", "_foxes/algorithms/sequential/SequentialPlugin.html", "_foxes/algorithms/sequential/SequentialPlugin.__init__.html", "_foxes/algorithms/sequential/SequentialPlugin.finalize.html", "_foxes/algorithms/sequential/SequentialPlugin.initialize.html", "_foxes/algorithms/sequential/SequentialPlugin.update.html", "_foxes/algorithms/sequential/models/SeqState.html", "_foxes/algorithms/sequential/models/SeqState.__init__.html", "_foxes/algorithms/sequential/models/SeqState.calculate.html", "_foxes/algorithms/sequential/models/SeqState.counter.html", "_foxes/algorithms/sequential/models/SeqState.index.html", "_foxes/algorithms/sequential/models/SeqState.initialize.html", "_foxes/algorithms/sequential/models/SeqState.output_point_vars.html", "_foxes/algorithms/sequential/models/SeqState.size.html", "_foxes/algorithms/sequential/models/SeqState.sub_models.html", "_foxes/algorithms/sequential/models/SeqState.weights.html", "_foxes/constants/AMB_RPOINT_RESULTS.html", "_foxes/constants/DTYPE.html", "_foxes/constants/DTYPE.T.html", "_foxes/constants/DTYPE.__abs__.html", "_foxes/constants/DTYPE.__add__.html", "_foxes/constants/DTYPE.__and__.html", "_foxes/constants/DTYPE.__array__.html", "_foxes/constants/DTYPE.__array_interface__.html", "_foxes/constants/DTYPE.__array_priority__.html", "_foxes/constants/DTYPE.__array_struct__.html", "_foxes/constants/DTYPE.__array_wrap__.html", "_foxes/constants/DTYPE.__bool__.html", "_foxes/constants/DTYPE.__class_getitem__.html", "_foxes/constants/DTYPE.__divmod__.html", "_foxes/constants/DTYPE.__eq__.html", "_foxes/constants/DTYPE.__float__.html", "_foxes/constants/DTYPE.__floordiv__.html", "_foxes/constants/DTYPE.__format__.html", "_foxes/constants/DTYPE.__ge__.html", "_foxes/constants/DTYPE.__getitem__.html", "_foxes/constants/DTYPE.__gt__.html", "_foxes/constants/DTYPE.__hash__.html", "_foxes/constants/DTYPE.__int__.html", "_foxes/constants/DTYPE.__invert__.html", "_foxes/constants/DTYPE.__le__.html", "_foxes/constants/DTYPE.__lshift__.html", "_foxes/constants/DTYPE.__lt__.html", "_foxes/constants/DTYPE.__mod__.html", "_foxes/constants/DTYPE.__mul__.html", "_foxes/constants/DTYPE.__ne__.html", "_foxes/constants/DTYPE.__neg__.html", "_foxes/constants/DTYPE.__new__.html", "_foxes/constants/DTYPE.__or__.html", "_foxes/constants/DTYPE.__pos__.html", "_foxes/constants/DTYPE.__pow__.html", "_foxes/constants/DTYPE.__radd__.html", "_foxes/constants/DTYPE.__rand__.html", "_foxes/constants/DTYPE.__rdivmod__.html", "_foxes/constants/DTYPE.__reduce__.html", "_foxes/constants/DTYPE.__repr__.html", "_foxes/constants/DTYPE.__rfloordiv__.html", "_foxes/constants/DTYPE.__rlshift__.html", "_foxes/constants/DTYPE.__rmod__.html", "_foxes/constants/DTYPE.__rmul__.html", "_foxes/constants/DTYPE.__ror__.html", "_foxes/constants/DTYPE.__rpow__.html", "_foxes/constants/DTYPE.__rrshift__.html", "_foxes/constants/DTYPE.__rshift__.html", "_foxes/constants/DTYPE.__rsub__.html", "_foxes/constants/DTYPE.__rtruediv__.html", "_foxes/constants/DTYPE.__rxor__.html", "_foxes/constants/DTYPE.__sizeof__.html", "_foxes/constants/DTYPE.__str__.html", "_foxes/constants/DTYPE.__sub__.html", "_foxes/constants/DTYPE.__truediv__.html", "_foxes/constants/DTYPE.__xor__.html", "_foxes/constants/DTYPE.all.html", "_foxes/constants/DTYPE.any.html", "_foxes/constants/DTYPE.argmax.html", "_foxes/constants/DTYPE.argmin.html", "_foxes/constants/DTYPE.argsort.html", "_foxes/constants/DTYPE.as_integer_ratio.html", "_foxes/constants/DTYPE.astype.html", "_foxes/constants/DTYPE.base.html", "_foxes/constants/DTYPE.byteswap.html", "_foxes/constants/DTYPE.choose.html", "_foxes/constants/DTYPE.clip.html", "_foxes/constants/DTYPE.compress.html", "_foxes/constants/DTYPE.conj.html", "_foxes/constants/DTYPE.conjugate.html", "_foxes/constants/DTYPE.copy.html", "_foxes/constants/DTYPE.cumprod.html", "_foxes/constants/DTYPE.cumsum.html", "_foxes/constants/DTYPE.data.html", "_foxes/constants/DTYPE.diagonal.html", "_foxes/constants/DTYPE.dtype.html", "_foxes/constants/DTYPE.dump.html", "_foxes/constants/DTYPE.dumps.html", "_foxes/constants/DTYPE.fill.html", "_foxes/constants/DTYPE.flags.html", "_foxes/constants/DTYPE.flat.html", "_foxes/constants/DTYPE.flatten.html", "_foxes/constants/DTYPE.getfield.html", "_foxes/constants/DTYPE.imag.html", "_foxes/constants/DTYPE.is_integer.html", "_foxes/constants/DTYPE.item.html", "_foxes/constants/DTYPE.itemset.html", "_foxes/constants/DTYPE.itemsize.html", "_foxes/constants/DTYPE.max.html", "_foxes/constants/DTYPE.mean.html", "_foxes/constants/DTYPE.min.html", "_foxes/constants/DTYPE.nbytes.html", "_foxes/constants/DTYPE.ndim.html", "_foxes/constants/DTYPE.newbyteorder.html", "_foxes/constants/DTYPE.nonzero.html", "_foxes/constants/DTYPE.prod.html", "_foxes/constants/DTYPE.ptp.html", "_foxes/constants/DTYPE.put.html", "_foxes/constants/DTYPE.ravel.html", "_foxes/constants/DTYPE.real.html", "_foxes/constants/DTYPE.repeat.html", "_foxes/constants/DTYPE.reshape.html", "_foxes/constants/DTYPE.resize.html", "_foxes/constants/DTYPE.round.html", "_foxes/constants/DTYPE.searchsorted.html", "_foxes/constants/DTYPE.setfield.html", "_foxes/constants/DTYPE.setflags.html", "_foxes/constants/DTYPE.shape.html", "_foxes/constants/DTYPE.size.html", "_foxes/constants/DTYPE.sort.html", "_foxes/constants/DTYPE.squeeze.html", "_foxes/constants/DTYPE.std.html", "_foxes/constants/DTYPE.strides.html", "_foxes/constants/DTYPE.sum.html", "_foxes/constants/DTYPE.swapaxes.html", "_foxes/constants/DTYPE.take.html", "_foxes/constants/DTYPE.tobytes.html", "_foxes/constants/DTYPE.tofile.html", "_foxes/constants/DTYPE.tolist.html", "_foxes/constants/DTYPE.tostring.html", "_foxes/constants/DTYPE.trace.html", "_foxes/constants/DTYPE.transpose.html", "_foxes/constants/DTYPE.var.html", "_foxes/constants/DTYPE.view.html", "_foxes/constants/FARM.html", "_foxes/constants/GW.html", "_foxes/constants/ITYPE.html", "_foxes/constants/ITYPE.__abs__.html", "_foxes/constants/ITYPE.__add__.html", "_foxes/constants/ITYPE.__and__.html", "_foxes/constants/ITYPE.__bool__.html", "_foxes/constants/ITYPE.__class_getitem__.html", "_foxes/constants/ITYPE.__divmod__.html", "_foxes/constants/ITYPE.__eq__.html", "_foxes/constants/ITYPE.__float__.html", "_foxes/constants/ITYPE.__floordiv__.html", "_foxes/constants/ITYPE.__ge__.html", "_foxes/constants/ITYPE.__gt__.html", "_foxes/constants/ITYPE.__hash__.html", "_foxes/constants/ITYPE.__index__.html", "_foxes/constants/ITYPE.__int__.html", "_foxes/constants/ITYPE.__invert__.html", "_foxes/constants/ITYPE.__le__.html", "_foxes/constants/ITYPE.__lshift__.html", "_foxes/constants/ITYPE.__lt__.html", "_foxes/constants/ITYPE.__mod__.html", "_foxes/constants/ITYPE.__mul__.html", "_foxes/constants/ITYPE.__ne__.html", "_foxes/constants/ITYPE.__neg__.html", "_foxes/constants/ITYPE.__new__.html", "_foxes/constants/ITYPE.__or__.html", "_foxes/constants/ITYPE.__pos__.html", "_foxes/constants/ITYPE.__pow__.html", "_foxes/constants/ITYPE.__radd__.html", "_foxes/constants/ITYPE.__rand__.html", "_foxes/constants/ITYPE.__rdivmod__.html", "_foxes/constants/ITYPE.__repr__.html", "_foxes/constants/ITYPE.__rfloordiv__.html", "_foxes/constants/ITYPE.__rlshift__.html", "_foxes/constants/ITYPE.__rmod__.html", "_foxes/constants/ITYPE.__rmul__.html", "_foxes/constants/ITYPE.__ror__.html", "_foxes/constants/ITYPE.__rpow__.html", "_foxes/constants/ITYPE.__rrshift__.html", "_foxes/constants/ITYPE.__rshift__.html", "_foxes/constants/ITYPE.__rsub__.html", "_foxes/constants/ITYPE.__rtruediv__.html", "_foxes/constants/ITYPE.__rxor__.html", "_foxes/constants/ITYPE.__str__.html", "_foxes/constants/ITYPE.__sub__.html", "_foxes/constants/ITYPE.__truediv__.html", "_foxes/constants/ITYPE.__xor__.html", "_foxes/constants/ITYPE.bit_count.html", "_foxes/constants/ITYPE.denominator.html", "_foxes/constants/ITYPE.is_integer.html", "_foxes/constants/ITYPE.numerator.html", "_foxes/constants/KAPPA.html", "_foxes/constants/MW.html", "_foxes/constants/POINT.html", "_foxes/constants/POINTS.html", "_foxes/constants/POP.html", "_foxes/constants/P_UNITS.html", "_foxes/constants/RPOINT.html", "_foxes/constants/RPOINTS.html", "_foxes/constants/RWEIGHTS.html", "_foxes/constants/STATE.html", "_foxes/constants/STATES_SEL.html", "_foxes/constants/STATE_POINT.html", "_foxes/constants/STATE_SOURCE_TURBINE.html", "_foxes/constants/STATE_TURBINE.html", "_foxes/constants/TMODELS.html", "_foxes/constants/TMODEL_SELS.html", "_foxes/constants/TNAME.html", "_foxes/constants/TURBINE.html", "_foxes/constants/TW.html", "_foxes/constants/VALID.html", "_foxes/constants/VARS.html", "_foxes/constants/W.html", "_foxes/constants/XYH.html", "_foxes/constants/kW.html", "_foxes/core/Algorithm.html", "_foxes/core/Algorithm.__init__.html", "_foxes/core/Algorithm.chunked.html", "_foxes/core/Algorithm.del_model_data.html", "_foxes/core/Algorithm.finalize.html", "_foxes/core/Algorithm.get_model_data.html", "_foxes/core/Algorithm.get_models_data.html", "_foxes/core/Algorithm.get_models_idata.html", "_foxes/core/Algorithm.idata_mem.html", "_foxes/core/Algorithm.initialize.html", "_foxes/core/Algorithm.new.html", "_foxes/core/Algorithm.new_point_data.html", "_foxes/core/Algorithm.print.html", "_foxes/core/Algorithm.store_model_data.html", "_foxes/core/Algorithm.update_n_turbines.html", "_foxes/core/AxialInductionModel.html", "_foxes/core/AxialInductionModel.ct2a.html", "_foxes/core/Data.html", "_foxes/core/Data.__init__.html", "_foxes/core/Data.add.html", "_foxes/core/Data.from_points.html", "_foxes/core/Data.n_points.html", "_foxes/core/Data.n_states.html", "_foxes/core/Data.n_turbines.html", "_foxes/core/Data.states_i0.html", "_foxes/core/DataCalcModel.html", "_foxes/core/DataCalcModel.calculate.html", "_foxes/core/DataCalcModel.run_calculation.html", "_foxes/core/ExtendedStates.html", "_foxes/core/ExtendedStates.__init__.html", "_foxes/core/ExtendedStates.append.html", "_foxes/core/ExtendedStates.calculate.html", "_foxes/core/ExtendedStates.index.html", "_foxes/core/ExtendedStates.output_point_vars.html", "_foxes/core/ExtendedStates.size.html", "_foxes/core/ExtendedStates.sub_models.html", "_foxes/core/ExtendedStates.weights.html", "_foxes/core/FarmController.html", "_foxes/core/FarmController.__init__.html", "_foxes/core/FarmController.calculate.html", "_foxes/core/FarmController.collect_models.html", "_foxes/core/FarmController.finalize.html", "_foxes/core/FarmController.initialize.html", "_foxes/core/FarmController.load_data.html", "_foxes/core/FarmController.output_farm_vars.html", "_foxes/core/FarmController.set_pars.html", "_foxes/core/FarmController.sub_models.html", "_foxes/core/FarmDataModel.html", "_foxes/core/FarmDataModel.__init__.html", "_foxes/core/FarmDataModel.calculate.html", "_foxes/core/FarmDataModel.output_farm_vars.html", "_foxes/core/FarmDataModel.run_calculation.html", "_foxes/core/FarmDataModelList.html", "_foxes/core/FarmDataModelList.__init__.html", "_foxes/core/FarmDataModelList.append.html", "_foxes/core/FarmDataModelList.calculate.html", "_foxes/core/FarmDataModelList.insert.html", "_foxes/core/FarmDataModelList.output_farm_vars.html", "_foxes/core/FarmDataModelList.sub_models.html", "_foxes/core/FarmModel.html", "_foxes/core/Model.html", "_foxes/core/Model.__init__.html", "_foxes/core/Model.__repr__.html", "_foxes/core/Model.data_to_store.html", "_foxes/core/Model.finalize.html", "_foxes/core/Model.from_data_or_store.html", "_foxes/core/Model.get_data.html", "_foxes/core/Model.initialize.html", "_foxes/core/Model.initialized.html", "_foxes/core/Model.load_data.html", "_foxes/core/Model.model_id.html", "_foxes/core/Model.sub_models.html", "_foxes/core/Model.var.html", "_foxes/core/PartialWakesModel.html", "_foxes/core/PartialWakesModel.__init__.html", "_foxes/core/PartialWakesModel.contribute_to_wake_deltas.html", "_foxes/core/PartialWakesModel.evaluate_results.html", "_foxes/core/PartialWakesModel.initialize.html", "_foxes/core/PartialWakesModel.new.html", "_foxes/core/PartialWakesModel.new_wake_deltas.html", "_foxes/core/PartialWakesModel.sub_models.html", "_foxes/core/PointDataModel.html", "_foxes/core/PointDataModel.calculate.html", "_foxes/core/PointDataModel.output_point_vars.html", "_foxes/core/PointDataModel.run_calculation.html", "_foxes/core/PointDataModelList.html", "_foxes/core/PointDataModelList.__init__.html", "_foxes/core/PointDataModelList.append.html", "_foxes/core/PointDataModelList.calculate.html", "_foxes/core/PointDataModelList.output_point_vars.html", "_foxes/core/PointDataModelList.sub_models.html", "_foxes/core/RotorModel.html", "_foxes/core/RotorModel.__init__.html", "_foxes/core/RotorModel.calculate.html", "_foxes/core/RotorModel.design_points.html", "_foxes/core/RotorModel.eval_rpoint_results.html", "_foxes/core/RotorModel.get_rotor_points.html", "_foxes/core/RotorModel.n_rotor_points.html", "_foxes/core/RotorModel.new.html", "_foxes/core/RotorModel.output_farm_vars.html", "_foxes/core/RotorModel.rotor_point_weights.html", "_foxes/core/States.html", "_foxes/core/States.index.html", "_foxes/core/States.load_data.html", "_foxes/core/States.output_point_vars.html", "_foxes/core/States.size.html", "_foxes/core/States.weights.html", "_foxes/core/Turbine.html", "_foxes/core/Turbine.__init__.html", "_foxes/core/Turbine.add_model.html", "_foxes/core/Turbine.insert_model.html", "_foxes/core/TurbineModel.html", "_foxes/core/TurbineModel.calculate.html", "_foxes/core/TurbineModel.new.html", "_foxes/core/TurbineType.html", "_foxes/core/TurbineType.__init__.html", "_foxes/core/TurbineType.new.html", "_foxes/core/VerticalProfile.html", "_foxes/core/VerticalProfile.calculate.html", "_foxes/core/VerticalProfile.input_vars.html", "_foxes/core/VerticalProfile.new.html", "_foxes/core/WakeFrame.html", "_foxes/core/WakeFrame.calc_centreline_integral.html", "_foxes/core/WakeFrame.calc_order.html", "_foxes/core/WakeFrame.get_centreline_points.html", "_foxes/core/WakeFrame.get_wake_coos.html", "_foxes/core/WakeFrame.get_wake_modelling_data.html", "_foxes/core/WakeFrame.new.html", "_foxes/core/WakeModel.html", "_foxes/core/WakeModel.contribute_to_wake_deltas.html", "_foxes/core/WakeModel.finalize_wake_deltas.html", "_foxes/core/WakeModel.init_wake_deltas.html", "_foxes/core/WakeModel.new.html", "_foxes/core/WakeSuperposition.html", "_foxes/core/WakeSuperposition.calc_final_wake_delta.html", "_foxes/core/WakeSuperposition.calc_wakes_plus_wake.html", "_foxes/core/WindFarm.html", "_foxes/core/WindFarm.__init__.html", "_foxes/core/WindFarm.add_turbine.html", "_foxes/core/WindFarm.n_turbines.html", "_foxes/core/WindFarm.turbine_names.html", "_foxes/data/StaticData.html", "_foxes/data/StaticData.__init__.html", "_foxes/data/parse_Pct_file_name.html", "_foxes/data/parse_Pct_two_files.html", "_foxes/input/farm_layout/add_from_csv.html", "_foxes/input/farm_layout/add_from_df.html", "_foxes/input/farm_layout/add_from_file.html", "_foxes/input/farm_layout/add_from_json.html", "_foxes/input/farm_layout/add_grid.html", "_foxes/input/farm_layout/add_row.html", "_foxes/input/states/FieldDataNC.html", "_foxes/input/states/FieldDataNC.__init__.html", "_foxes/input/states/FieldDataNC.calculate.html", "_foxes/input/states/FieldDataNC.index.html", "_foxes/input/states/FieldDataNC.load_data.html", "_foxes/input/states/FieldDataNC.output_point_vars.html", "_foxes/input/states/FieldDataNC.size.html", "_foxes/input/states/FieldDataNC.weights.html", "_foxes/input/states/MultiHeightStates.html", "_foxes/input/states/MultiHeightStates.RDICT.html", "_foxes/input/states/MultiHeightStates.__init__.html", "_foxes/input/states/MultiHeightStates.calculate.html", "_foxes/input/states/MultiHeightStates.finalize.html", "_foxes/input/states/MultiHeightStates.index.html", "_foxes/input/states/MultiHeightStates.load_data.html", "_foxes/input/states/MultiHeightStates.output_point_vars.html", "_foxes/input/states/MultiHeightStates.reset.html", "_foxes/input/states/MultiHeightStates.size.html", "_foxes/input/states/MultiHeightStates.weights.html", "_foxes/input/states/MultiHeightTimeseries.html", "_foxes/input/states/MultiHeightTimeseries.RDICT.html", "_foxes/input/states/ScanWS.html", "_foxes/input/states/ScanWS.__init__.html", "_foxes/input/states/ScanWS.calculate.html", "_foxes/input/states/ScanWS.load_data.html", "_foxes/input/states/ScanWS.output_point_vars.html", "_foxes/input/states/ScanWS.size.html", "_foxes/input/states/ScanWS.weights.html", "_foxes/input/states/SingleStateStates.html", "_foxes/input/states/SingleStateStates.__init__.html", "_foxes/input/states/SingleStateStates.calculate.html", "_foxes/input/states/SingleStateStates.initialize.html", "_foxes/input/states/SingleStateStates.output_point_vars.html", "_foxes/input/states/SingleStateStates.size.html", "_foxes/input/states/SingleStateStates.sub_models.html", "_foxes/input/states/SingleStateStates.weights.html", "_foxes/input/states/StatesTable.html", "_foxes/input/states/StatesTable.RDICT.html", "_foxes/input/states/StatesTable.__init__.html", "_foxes/input/states/StatesTable.calculate.html", "_foxes/input/states/StatesTable.finalize.html", "_foxes/input/states/StatesTable.index.html", "_foxes/input/states/StatesTable.initialize.html", "_foxes/input/states/StatesTable.load_data.html", "_foxes/input/states/StatesTable.output_point_vars.html", "_foxes/input/states/StatesTable.reset.html", "_foxes/input/states/StatesTable.size.html", "_foxes/input/states/StatesTable.sub_models.html", "_foxes/input/states/StatesTable.weights.html", "_foxes/input/states/TabStates.html", "_foxes/input/states/TabStates.__init__.html", "_foxes/input/states/TabStates.load_data.html", "_foxes/input/states/Timeseries.html", "_foxes/input/states/Timeseries.RDICT.html", "_foxes/input/states/create_random_abl_states.html", "_foxes/input/windio/read_case.html", "_foxes/models/farm_controllers/BasicFarmController.html", "_foxes/models/farm_models/Turbine2FarmModel.html", "_foxes/models/farm_models/Turbine2FarmModel.__init__.html", "_foxes/models/farm_models/Turbine2FarmModel.__repr__.html", "_foxes/models/farm_models/Turbine2FarmModel.calculate.html", "_foxes/models/farm_models/Turbine2FarmModel.output_farm_vars.html", "_foxes/models/farm_models/Turbine2FarmModel.sub_models.html", "_foxes/models/model_book/Dict.html", "_foxes/models/model_book/Dict.__getitem__.html", "_foxes/models/model_book/Dict.__init__.html", "_foxes/models/model_book/ModelBook.html", "_foxes/models/model_book/ModelBook.__getitem__.html", "_foxes/models/model_book/ModelBook.__init__.html", "_foxes/models/model_book/ModelBook.finalize.html", "_foxes/models/model_book/ModelBook.get.html", "_foxes/models/model_book/ModelBook.print_toc.html", "_foxes/models/partial_wakes/Mapped.html", "_foxes/models/partial_wakes/Mapped.__init__.html", "_foxes/models/partial_wakes/Mapped.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.evaluate_results.html", "_foxes/models/partial_wakes/Mapped.initialize.html", "_foxes/models/partial_wakes/Mapped.new_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.sub_models.html", "_foxes/models/partial_wakes/PartialAxiwake.html", "_foxes/models/partial_wakes/PartialAxiwake.__init__.html", "_foxes/models/partial_wakes/PartialAxiwake.__repr__.html", "_foxes/models/partial_wakes/PartialAxiwake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.evaluate_results.html", "_foxes/models/partial_wakes/PartialAxiwake.initialize.html", "_foxes/models/partial_wakes/PartialAxiwake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.sub_models.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__init__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__repr__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.evaluate_results.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.initialize.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.sub_models.html", "_foxes/models/partial_wakes/PartialGrid.html", "_foxes/models/partial_wakes/PartialGrid.__init__.html", "_foxes/models/partial_wakes/PartialGrid.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.html", "_foxes/models/partial_wakes/PartialTopHat.__init__.html", "_foxes/models/partial_wakes/PartialTopHat.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.evaluate_results.html", "_foxes/models/partial_wakes/PartialTopHat.initialize.html", "_foxes/models/partial_wakes/PartialTopHat.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.sub_models.html", "_foxes/models/partial_wakes/RotorPoints.html", "_foxes/models/partial_wakes/RotorPoints.__init__.html", "_foxes/models/partial_wakes/RotorPoints.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/RotorPoints.evaluate_results.html", "_foxes/models/partial_wakes/RotorPoints.get_wake_points.html", "_foxes/models/partial_wakes/RotorPoints.new_wake_deltas.html", "_foxes/models/point_models/SetUniformData.html", "_foxes/models/point_models/SetUniformData.__init__.html", "_foxes/models/point_models/SetUniformData.calculate.html", "_foxes/models/point_models/SetUniformData.load_data.html", "_foxes/models/point_models/SetUniformData.output_point_vars.html", "_foxes/models/point_models/TKE2TI.html", "_foxes/models/point_models/TKE2TI.calculate.html", "_foxes/models/point_models/TKE2TI.output_point_vars.html", "_foxes/models/point_models/WakeDeltas.html", "_foxes/models/point_models/WakeDeltas.__init__.html", "_foxes/models/point_models/WakeDeltas.calculate.html", "_foxes/models/point_models/WakeDeltas.output_point_vars.html", "_foxes/models/rotor_models/CentreRotor.html", "_foxes/models/rotor_models/CentreRotor.design_points.html", "_foxes/models/rotor_models/CentreRotor.eval_rpoint_results.html", "_foxes/models/rotor_models/CentreRotor.get_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.n_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.rotor_point_weights.html", "_foxes/models/rotor_models/GridRotor.html", "_foxes/models/rotor_models/GridRotor.__init__.html", "_foxes/models/rotor_models/GridRotor.__repr__.html", "_foxes/models/rotor_models/GridRotor.design_points.html", "_foxes/models/rotor_models/GridRotor.initialize.html", "_foxes/models/rotor_models/GridRotor.n_rotor_points.html", "_foxes/models/rotor_models/GridRotor.rotor_point_weights.html", "_foxes/models/rotor_models/LevelRotor.html", "_foxes/models/rotor_models/LevelRotor.__init__.html", "_foxes/models/rotor_models/LevelRotor.__repr__.html", "_foxes/models/rotor_models/LevelRotor.design_points.html", "_foxes/models/rotor_models/LevelRotor.initialize.html", "_foxes/models/rotor_models/LevelRotor.n_rotor_points.html", "_foxes/models/rotor_models/LevelRotor.rotor_point_weights.html", "_foxes/models/turbine_models/Calculator.html", "_foxes/models/turbine_models/Calculator.__init__.html", "_foxes/models/turbine_models/Calculator.calculate.html", "_foxes/models/turbine_models/Calculator.output_farm_vars.html", "_foxes/models/turbine_models/LookupTable.html", "_foxes/models/turbine_models/LookupTable.__init__.html", "_foxes/models/turbine_models/LookupTable.calculate.html", "_foxes/models/turbine_models/LookupTable.load_data.html", "_foxes/models/turbine_models/LookupTable.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.html", "_foxes/models/turbine_models/PowerMask.__init__.html", "_foxes/models/turbine_models/PowerMask.calculate.html", "_foxes/models/turbine_models/PowerMask.initialize.html", "_foxes/models/turbine_models/PowerMask.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.update_P_ct.html", "_foxes/models/turbine_models/RotorCentreCalc.html", "_foxes/models/turbine_models/RotorCentreCalc.__init__.html", "_foxes/models/turbine_models/RotorCentreCalc.calculate.html", "_foxes/models/turbine_models/RotorCentreCalc.initialize.html", "_foxes/models/turbine_models/RotorCentreCalc.output_farm_vars.html", "_foxes/models/turbine_models/RotorCentreCalc.sub_models.html", "_foxes/models/turbine_models/SectorManagement.html", "_foxes/models/turbine_models/SectorManagement.__init__.html", "_foxes/models/turbine_models/SectorManagement.calculate.html", "_foxes/models/turbine_models/SectorManagement.initialize.html", "_foxes/models/turbine_models/SectorManagement.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.html", "_foxes/models/turbine_models/SetFarmVars.__init__.html", "_foxes/models/turbine_models/SetFarmVars.add_var.html", "_foxes/models/turbine_models/SetFarmVars.calculate.html", "_foxes/models/turbine_models/SetFarmVars.load_data.html", "_foxes/models/turbine_models/SetFarmVars.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.reset.html", "_foxes/models/turbine_models/SetXYHD.html", "_foxes/models/turbine_models/SetXYHD.__init__.html", "_foxes/models/turbine_models/SetXYHD.calculate.html", "_foxes/models/turbine_models/SetXYHD.output_farm_vars.html", "_foxes/models/turbine_models/TableFactors.html", "_foxes/models/turbine_models/TableFactors.__init__.html", "_foxes/models/turbine_models/TableFactors.calculate.html", "_foxes/models/turbine_models/TableFactors.initialize.html", "_foxes/models/turbine_models/TableFactors.output_farm_vars.html", "_foxes/models/turbine_models/Thrust2Ct.html", "_foxes/models/turbine_models/Thrust2Ct.__init__.html", "_foxes/models/turbine_models/Thrust2Ct.calculate.html", "_foxes/models/turbine_models/Thrust2Ct.output_farm_vars.html", "_foxes/models/turbine_models/YAW2YAWM.html", "_foxes/models/turbine_models/YAW2YAWM.calculate.html", "_foxes/models/turbine_models/YAW2YAWM.output_farm_vars.html", "_foxes/models/turbine_models/YAWM2YAW.html", "_foxes/models/turbine_models/YAWM2YAW.calculate.html", "_foxes/models/turbine_models/YAWM2YAW.output_farm_vars.html", "_foxes/models/turbine_models/kTI.html", "_foxes/models/turbine_models/kTI.__init__.html", "_foxes/models/turbine_models/kTI.__repr__.html", "_foxes/models/turbine_models/kTI.calculate.html", "_foxes/models/turbine_models/kTI.output_farm_vars.html", "_foxes/models/turbine_types/CpCtFile.html", "_foxes/models/turbine_types/CpCtFile.__init__.html", "_foxes/models/turbine_types/CpCtFromTwo.html", "_foxes/models/turbine_types/CpCtFromTwo.__init__.html", "_foxes/models/turbine_types/NullType.html", "_foxes/models/turbine_types/NullType.calculate.html", "_foxes/models/turbine_types/NullType.output_farm_vars.html", "_foxes/models/turbine_types/PCtFile.html", "_foxes/models/turbine_types/PCtFile.__init__.html", "_foxes/models/turbine_types/PCtFile.calculate.html", "_foxes/models/turbine_types/PCtFile.finalize.html", "_foxes/models/turbine_types/PCtFile.load_data.html", "_foxes/models/turbine_types/PCtFile.output_farm_vars.html", "_foxes/models/turbine_types/PCtFromTwo.html", "_foxes/models/turbine_types/PCtFromTwo.__init__.html", "_foxes/models/turbine_types/PCtFromTwo.calculate.html", "_foxes/models/turbine_types/PCtFromTwo.finalize.html", "_foxes/models/turbine_types/PCtFromTwo.load_data.html", "_foxes/models/turbine_types/PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.output_farm_vars.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.input_vars.html", "_foxes/models/vertical_profiles/DataProfile.html", "_foxes/models/vertical_profiles/DataProfile.__init__.html", "_foxes/models/vertical_profiles/DataProfile.calculate.html", "_foxes/models/vertical_profiles/DataProfile.input_vars.html", "_foxes/models/vertical_profiles/ShearedProfile.html", "_foxes/models/vertical_profiles/ShearedProfile.calculate.html", "_foxes/models/vertical_profiles/ShearedProfile.input_vars.html", "_foxes/models/vertical_profiles/UniformProfile.html", "_foxes/models/vertical_profiles/UniformProfile.__init__.html", "_foxes/models/vertical_profiles/UniformProfile.calculate.html", "_foxes/models/vertical_profiles/UniformProfile.input_vars.html", "_foxes/models/wake_frames/FarmOrder.html", "_foxes/models/wake_frames/FarmOrder.__init__.html", "_foxes/models/wake_frames/FarmOrder.calc_order.html", "_foxes/models/wake_frames/FarmOrder.get_centreline_points.html", "_foxes/models/wake_frames/FarmOrder.get_wake_coos.html", "_foxes/models/wake_frames/FarmOrder.sub_models.html", "_foxes/models/wake_frames/RotorWD.html", "_foxes/models/wake_frames/RotorWD.__init__.html", "_foxes/models/wake_frames/RotorWD.calc_order.html", "_foxes/models/wake_frames/RotorWD.get_centreline_points.html", "_foxes/models/wake_frames/RotorWD.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.html", "_foxes/models/wake_frames/SeqDynamicWakes.__init__.html", "_foxes/models/wake_frames/SeqDynamicWakes.calc_order.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_centreline_points.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_modelling_data.html", "_foxes/models/wake_frames/SeqDynamicWakes.initialize.html", "_foxes/models/wake_frames/Streamlines2D.html", "_foxes/models/wake_frames/Streamlines2D.__init__.html", "_foxes/models/wake_frames/Streamlines2D.__repr__.html", "_foxes/models/wake_frames/Streamlines2D.calc_order.html", "_foxes/models/wake_frames/Streamlines2D.get_centreline_points.html", "_foxes/models/wake_frames/Streamlines2D.get_streamline_data.html", "_foxes/models/wake_frames/Streamlines2D.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.html", "_foxes/models/wake_frames/Timelines.__init__.html", "_foxes/models/wake_frames/Timelines.calc_order.html", "_foxes/models/wake_frames/Timelines.get_centreline_points.html", "_foxes/models/wake_frames/Timelines.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.initialize.html", "_foxes/models/wake_frames/YawedWakes.html", "_foxes/models/wake_frames/YawedWakes.__init__.html", "_foxes/models/wake_frames/YawedWakes.calc_order.html", "_foxes/models/wake_frames/YawedWakes.get_centreline_points.html", "_foxes/models/wake_frames/YawedWakes.get_wake_coos.html", "_foxes/models/wake_frames/YawedWakes.initialize.html", "_foxes/models/wake_frames/YawedWakes.sub_models.html", "_foxes/models/wake_models/AxisymmetricWakeModel.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.html", "_foxes/models/wake_models/DistSlicedWakeModel.__init__.html", "_foxes/models/wake_models/DistSlicedWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.contribute_to_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.finalize_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.initialize.html", "_foxes/models/wake_models/DistSlicedWakeModel.sub_models.html", "_foxes/models/wake_models/GaussianWakeModel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/GroundMirror.html", "_foxes/models/wake_models/GroundMirror.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.html", "_foxes/models/wake_models/TopHatWakeModel.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wake_radius.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.initialize.html", "_foxes/models/wake_models/TopHatWakeModel.sub_models.html", "_foxes/models/wake_models/WakeMirror.html", "_foxes/models/wake_models/WakeMirror.__init__.html", "_foxes/models/wake_models/WakeMirror.contribute_to_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.finalize_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.init_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.sub_models.html", "_foxes/models/wake_models/induction/RankineHalfBody.html", "_foxes/models/wake_models/induction/RankineHalfBody.__init__.html", "_foxes/models/wake_models/induction/RankineHalfBody.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.init_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.initialize.html", "_foxes/models/wake_models/induction/RankineHalfBody.sub_models.html", "_foxes/models/wake_models/induction/Rathmann.html", "_foxes/models/wake_models/induction/Rathmann.__init__.html", "_foxes/models/wake_models/induction/Rathmann.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.init_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.initialize.html", "_foxes/models/wake_models/induction/Rathmann.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar.html", "_foxes/models/wake_models/induction/SelfSimilar.__init__.html", "_foxes/models/wake_models/induction/SelfSimilar.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.init_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.initialize.html", "_foxes/models/wake_models/induction/SelfSimilar.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar2020.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__init__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__repr__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.init_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.html", "_foxes/models/wake_models/ti/IECTIWake.__init__.html", "_foxes/models/wake_models/ti/IECTIWake.__repr__.html", "_foxes/models/wake_models/ti/IECTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/IECTIWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.html", "_foxes/models/wake_models/wind/Bastankhah2014.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2014.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2014.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/Bastankhah2014.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2014.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016.html", "_foxes/models/wake_models/wind/Bastankhah2016.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2016.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/wind/Bastankhah2016.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2016.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.CHECK.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.MDATA_KEY.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.PARS.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC_S.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Y_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Z_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SP_SEL.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.X0.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.calc_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.clean.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.get_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.has_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.pars.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.sub_models.html", "_foxes/models/wake_models/wind/JensenWake.html", "_foxes/models/wake_models/wind/JensenWake.__init__.html", "_foxes/models/wake_models/wind/JensenWake.__repr__.html", "_foxes/models/wake_models/wind/JensenWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/wind/JensenWake.calc_wake_radius.html", "_foxes/models/wake_models/wind/JensenWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.html", "_foxes/models/wake_models/wind/TurbOParkWake.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWake.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWake.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWake.sub_models.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.finalize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.sub_models.html", "_foxes/models/wake_superpositions/TILinear.html", "_foxes/models/wake_superpositions/TILinear.__init__.html", "_foxes/models/wake_superpositions/TILinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TILinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIMax.html", "_foxes/models/wake_superpositions/TIMax.__init__.html", "_foxes/models/wake_superpositions/TIMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIPow.html", "_foxes/models/wake_superpositions/TIPow.__init__.html", "_foxes/models/wake_superpositions/TIPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIQuadratic.html", "_foxes/models/wake_superpositions/TIQuadratic.__init__.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.html", "_foxes/models/wake_superpositions/WSLinear.__init__.html", "_foxes/models/wake_superpositions/WSLinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMax.html", "_foxes/models/wake_superpositions/WSMax.__init__.html", "_foxes/models/wake_superpositions/WSMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSMax.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPow.html", "_foxes/models/wake_superpositions/WSPow.__init__.html", "_foxes/models/wake_superpositions/WSPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSPow.input_farm_vars.html", "_foxes/models/wake_superpositions/WSProduct.html", "_foxes/models/wake_superpositions/WSProduct.__init__.html", "_foxes/models/wake_superpositions/WSProduct.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSProduct.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSProduct.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadratic.html", "_foxes/models/wake_superpositions/WSQuadratic.__init__.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSQuadratic.input_farm_vars.html", "_foxes/output/Animator.html", "_foxes/output/Animator.__init__.html", "_foxes/output/Animator.add_generator.html", "_foxes/output/Animator.animate.html", "_foxes/output/Animator.generators.html", "_foxes/output/FarmLayoutOutput.html", "_foxes/output/FarmLayoutOutput.__init__.html", "_foxes/output/FarmLayoutOutput.get_figure.html", "_foxes/output/FarmLayoutOutput.get_layout_data.html", "_foxes/output/FarmLayoutOutput.get_layout_dict.html", "_foxes/output/FarmLayoutOutput.write_csv.html", "_foxes/output/FarmLayoutOutput.write_json.html", "_foxes/output/FarmLayoutOutput.write_plot.html", "_foxes/output/FarmLayoutOutput.write_xyh.html", "_foxes/output/FarmResultsEval.html", "_foxes/output/FarmResultsEval.__init__.html", "_foxes/output/FarmResultsEval.add_capacity.html", "_foxes/output/FarmResultsEval.add_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_mean.html", "_foxes/output/FarmResultsEval.calc_farm_sum.html", "_foxes/output/FarmResultsEval.calc_farm_yield.html", "_foxes/output/FarmResultsEval.calc_mean_farm_power.html", "_foxes/output/FarmResultsEval.calc_states_mean.html", "_foxes/output/FarmResultsEval.calc_states_std.html", "_foxes/output/FarmResultsEval.calc_states_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_mean.html", "_foxes/output/FarmResultsEval.calc_turbine_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_yield.html", "_foxes/output/FarmResultsEval.gen_stdata.html", "_foxes/output/FarmResultsEval.reduce_all.html", "_foxes/output/FarmResultsEval.reduce_states.html", "_foxes/output/FarmResultsEval.reduce_turbines.html", "_foxes/output/FarmResultsEval.weinsum.html", "_foxes/output/FlowPlots2D.html", "_foxes/output/FlowPlots2D.gen_states_fig_xy.html", "_foxes/output/FlowPlots2D.gen_states_fig_xz.html", "_foxes/output/FlowPlots2D.gen_states_fig_yz.html", "_foxes/output/FlowPlots2D.get_mean_fig_xy.html", "_foxes/output/FlowPlots2D.get_mean_fig_xz.html", "_foxes/output/FlowPlots2D.get_mean_fig_yz.html", "_foxes/output/Output.html", "_foxes/output/Output.__init__.html", "_foxes/output/Output.get_fpath.html", "_foxes/output/Output.new.html", "_foxes/output/Output.print_models.html", "_foxes/output/Output.write.html", "_foxes/output/PointCalculator.html", "_foxes/output/PointCalculator.__init__.html", "_foxes/output/PointCalculator.calculate.html", "_foxes/output/ResultsWriter.html", "_foxes/output/ResultsWriter.__init__.html", "_foxes/output/ResultsWriter.write_csv.html", "_foxes/output/ResultsWriter.write_nc.html", "_foxes/output/RosePlotOutput.html", "_foxes/output/RosePlotOutput.__init__.html", "_foxes/output/RosePlotOutput.get_data.html", "_foxes/output/RosePlotOutput.get_data_info.html", "_foxes/output/RosePlotOutput.get_figure.html", "_foxes/output/RosePlotOutput.write_figure.html", "_foxes/output/SeqFlowAnimationPlugin.html", "_foxes/output/SeqFlowAnimationPlugin.__init__.html", "_foxes/output/SeqFlowAnimationPlugin.gen_images.html", "_foxes/output/SeqFlowAnimationPlugin.initialize.html", "_foxes/output/SeqFlowAnimationPlugin.update.html", "_foxes/output/SliceData.html", "_foxes/output/SliceData.__init__.html", "_foxes/output/SliceData.get_mean_data_xy.html", "_foxes/output/SliceData.get_mean_data_xz.html", "_foxes/output/SliceData.get_mean_data_yz.html", "_foxes/output/SliceData.get_states_data_xy.html", "_foxes/output/SliceData.get_states_data_xz.html", "_foxes/output/SliceData.get_states_data_yz.html", "_foxes/output/StateTurbineMap.html", "_foxes/output/StateTurbineMap.__init__.html", "_foxes/output/StateTurbineMap.plot_map.html", "_foxes/output/StatesRosePlotOutput.html", "_foxes/output/StatesRosePlotOutput.__init__.html", "_foxes/output/TurbineTypeCurves.html", "_foxes/output/TurbineTypeCurves.__init__.html", "_foxes/output/TurbineTypeCurves.plot_curves.html", "_foxes/output/flow_plots_2d/get_fig.html", "_foxes/utils/DataBook.html", "_foxes/utils/DataBook.__init__.html", "_foxes/utils/DataBook.add_data_package.html", "_foxes/utils/DataBook.add_data_package_file.html", "_foxes/utils/DataBook.add_file.html", "_foxes/utils/DataBook.add_files.html", "_foxes/utils/DataBook.get_file_path.html", "_foxes/utils/DataBook.toc.html", "_foxes/utils/PandasFileHelper.html", "_foxes/utils/PandasFileHelper.DATA_FILE_FORMATS.html", "_foxes/utils/PandasFileHelper.DEFAULT_FORMAT_DICT.html", "_foxes/utils/PandasFileHelper.DEFAULT_READING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.DEFAULT_WRITING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.read_file.html", "_foxes/utils/PandasFileHelper.write_file.html", "_foxes/utils/TabWindroseAxes.html", "_foxes/utils/TabWindroseAxes.ArtistList.html", "_foxes/utils/TabWindroseAxes.ArtistList.__getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__init__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__repr__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__subclasshook__.html", "_foxes/utils/TabWindroseAxes.ArtistList.count.html", "_foxes/utils/TabWindroseAxes.ArtistList.index.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__add__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__array__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__sub__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.depth.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.frozen.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_matrix.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.invalidate.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_separable.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.pass_through.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.set_children.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_angles.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_point.html", "_foxes/utils/TabWindroseAxes.PolarAffine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__array__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__eq__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__init__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__str__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.frozen.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_matrix.html", "_foxes/utils/TabWindroseAxes.PolarAffine.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarAffine.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.inverted.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_separable.html", "_foxes/utils/TabWindroseAxes.PolarAffine.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.to_values.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.PolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.RadialLocator.html", "_foxes/utils/TabWindroseAxes.RadialLocator.MAXTICKS.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__call__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__init__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.create_dummy_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.RadialLocator.raise_if_exceeds.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_params.html", "_foxes/utils/TabWindroseAxes.RadialLocator.tick_values.html", "_foxes/utils/TabWindroseAxes.RadialLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.fix_minus.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data_short.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_ticks.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.get_offset.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.locs.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_locs.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__init__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.__init__.html", "_foxes/utils/TabWindroseAxes.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.__repr__.html", "_foxes/utils/TabWindroseAxes.__str__.html", "_foxes/utils/TabWindroseAxes.acorr.html", "_foxes/utils/TabWindroseAxes.add_artist.html", "_foxes/utils/TabWindroseAxes.add_callback.html", "_foxes/utils/TabWindroseAxes.add_child_axes.html", "_foxes/utils/TabWindroseAxes.add_collection.html", "_foxes/utils/TabWindroseAxes.add_container.html", "_foxes/utils/TabWindroseAxes.add_image.html", "_foxes/utils/TabWindroseAxes.add_line.html", "_foxes/utils/TabWindroseAxes.add_patch.html", "_foxes/utils/TabWindroseAxes.add_table.html", "_foxes/utils/TabWindroseAxes.angle_spectrum.html", "_foxes/utils/TabWindroseAxes.annotate.html", "_foxes/utils/TabWindroseAxes.apply_aspect.html", "_foxes/utils/TabWindroseAxes.arrow.html", "_foxes/utils/TabWindroseAxes.artists.html", "_foxes/utils/TabWindroseAxes.autoscale.html", "_foxes/utils/TabWindroseAxes.autoscale_view.html", "_foxes/utils/TabWindroseAxes.axes.html", "_foxes/utils/TabWindroseAxes.axhline.html", "_foxes/utils/TabWindroseAxes.axhspan.html", "_foxes/utils/TabWindroseAxes.axis.html", "_foxes/utils/TabWindroseAxes.axline.html", "_foxes/utils/TabWindroseAxes.axvline.html", "_foxes/utils/TabWindroseAxes.axvspan.html", "_foxes/utils/TabWindroseAxes.bar.html", "_foxes/utils/TabWindroseAxes.bar_label.html", "_foxes/utils/TabWindroseAxes.barbs.html", "_foxes/utils/TabWindroseAxes.barh.html", "_foxes/utils/TabWindroseAxes.box.html", "_foxes/utils/TabWindroseAxes.boxplot.html", "_foxes/utils/TabWindroseAxes.broken_barh.html", "_foxes/utils/TabWindroseAxes.bxp.html", "_foxes/utils/TabWindroseAxes.can_pan.html", "_foxes/utils/TabWindroseAxes.can_zoom.html", "_foxes/utils/TabWindroseAxes.cla.html", "_foxes/utils/TabWindroseAxes.clabel.html", "_foxes/utils/TabWindroseAxes.clear.html", "_foxes/utils/TabWindroseAxes.cohere.html", "_foxes/utils/TabWindroseAxes.collections.html", "_foxes/utils/TabWindroseAxes.contains.html", "_foxes/utils/TabWindroseAxes.contains_point.html", "_foxes/utils/TabWindroseAxes.contour.html", "_foxes/utils/TabWindroseAxes.contourf.html", "_foxes/utils/TabWindroseAxes.convert_xunits.html", "_foxes/utils/TabWindroseAxes.convert_yunits.html", "_foxes/utils/TabWindroseAxes.csd.html", "_foxes/utils/TabWindroseAxes.drag_pan.html", "_foxes/utils/TabWindroseAxes.draw.html", "_foxes/utils/TabWindroseAxes.draw_artist.html", "_foxes/utils/TabWindroseAxes.end_pan.html", "_foxes/utils/TabWindroseAxes.errorbar.html", "_foxes/utils/TabWindroseAxes.eventplot.html", "_foxes/utils/TabWindroseAxes.fill.html", "_foxes/utils/TabWindroseAxes.fill_between.html", "_foxes/utils/TabWindroseAxes.fill_betweenx.html", "_foxes/utils/TabWindroseAxes.findobj.html", "_foxes/utils/TabWindroseAxes.format_coord.html", "_foxes/utils/TabWindroseAxes.format_cursor_data.html", "_foxes/utils/TabWindroseAxes.format_xdata.html", "_foxes/utils/TabWindroseAxes.format_ydata.html", "_foxes/utils/TabWindroseAxes.from_ax.html", "_foxes/utils/TabWindroseAxes.get_adjustable.html", "_foxes/utils/TabWindroseAxes.get_agg_filter.html", "_foxes/utils/TabWindroseAxes.get_alpha.html", "_foxes/utils/TabWindroseAxes.get_anchor.html", "_foxes/utils/TabWindroseAxes.get_animated.html", "_foxes/utils/TabWindroseAxes.get_aspect.html", "_foxes/utils/TabWindroseAxes.get_autoscale_on.html", "_foxes/utils/TabWindroseAxes.get_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.get_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.get_axes_locator.html", "_foxes/utils/TabWindroseAxes.get_axisbelow.html", "_foxes/utils/TabWindroseAxes.get_box_aspect.html", "_foxes/utils/TabWindroseAxes.get_children.html", "_foxes/utils/TabWindroseAxes.get_clip_box.html", "_foxes/utils/TabWindroseAxes.get_clip_on.html", "_foxes/utils/TabWindroseAxes.get_clip_path.html", "_foxes/utils/TabWindroseAxes.get_cursor_data.html", "_foxes/utils/TabWindroseAxes.get_data_ratio.html", "_foxes/utils/TabWindroseAxes.get_default_bbox_extra_artists.html", "_foxes/utils/TabWindroseAxes.get_facecolor.html", "_foxes/utils/TabWindroseAxes.get_fc.html", "_foxes/utils/TabWindroseAxes.get_figure.html", "_foxes/utils/TabWindroseAxes.get_frame_on.html", "_foxes/utils/TabWindroseAxes.get_gid.html", "_foxes/utils/TabWindroseAxes.get_gridspec.html", "_foxes/utils/TabWindroseAxes.get_images.html", "_foxes/utils/TabWindroseAxes.get_in_layout.html", "_foxes/utils/TabWindroseAxes.get_label.html", "_foxes/utils/TabWindroseAxes.get_legend.html", "_foxes/utils/TabWindroseAxes.get_legend_handles_labels.html", "_foxes/utils/TabWindroseAxes.get_lines.html", "_foxes/utils/TabWindroseAxes.get_mouseover.html", "_foxes/utils/TabWindroseAxes.get_navigate.html", "_foxes/utils/TabWindroseAxes.get_navigate_mode.html", "_foxes/utils/TabWindroseAxes.get_path_effects.html", "_foxes/utils/TabWindroseAxes.get_picker.html", "_foxes/utils/TabWindroseAxes.get_position.html", "_foxes/utils/TabWindroseAxes.get_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.get_rasterized.html", "_foxes/utils/TabWindroseAxes.get_renderer_cache.html", "_foxes/utils/TabWindroseAxes.get_rlabel_position.html", "_foxes/utils/TabWindroseAxes.get_rmax.html", "_foxes/utils/TabWindroseAxes.get_rmin.html", "_foxes/utils/TabWindroseAxes.get_rorigin.html", "_foxes/utils/TabWindroseAxes.get_rsign.html", "_foxes/utils/TabWindroseAxes.get_shared_x_axes.html", "_foxes/utils/TabWindroseAxes.get_shared_y_axes.html", "_foxes/utils/TabWindroseAxes.get_sketch_params.html", "_foxes/utils/TabWindroseAxes.get_snap.html", "_foxes/utils/TabWindroseAxes.get_subplotspec.html", "_foxes/utils/TabWindroseAxes.get_theta_direction.html", "_foxes/utils/TabWindroseAxes.get_theta_offset.html", "_foxes/utils/TabWindroseAxes.get_thetamax.html", "_foxes/utils/TabWindroseAxes.get_thetamin.html", "_foxes/utils/TabWindroseAxes.get_tightbbox.html", "_foxes/utils/TabWindroseAxes.get_title.html", "_foxes/utils/TabWindroseAxes.get_transform.html", "_foxes/utils/TabWindroseAxes.get_transformed_clip_path_and_affine.html", "_foxes/utils/TabWindroseAxes.get_url.html", "_foxes/utils/TabWindroseAxes.get_visible.html", "_foxes/utils/TabWindroseAxes.get_window_extent.html", "_foxes/utils/TabWindroseAxes.get_xaxis.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_xbound.html", "_foxes/utils/TabWindroseAxes.get_xgridlines.html", "_foxes/utils/TabWindroseAxes.get_xlabel.html", "_foxes/utils/TabWindroseAxes.get_xlim.html", "_foxes/utils/TabWindroseAxes.get_xmajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xscale.html", "_foxes/utils/TabWindroseAxes.get_xticklabels.html", "_foxes/utils/TabWindroseAxes.get_xticklines.html", "_foxes/utils/TabWindroseAxes.get_xticks.html", "_foxes/utils/TabWindroseAxes.get_yaxis.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_ybound.html", "_foxes/utils/TabWindroseAxes.get_ygridlines.html", "_foxes/utils/TabWindroseAxes.get_ylabel.html", "_foxes/utils/TabWindroseAxes.get_ylim.html", "_foxes/utils/TabWindroseAxes.get_ymajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yscale.html", "_foxes/utils/TabWindroseAxes.get_yticklabels.html", "_foxes/utils/TabWindroseAxes.get_yticklines.html", "_foxes/utils/TabWindroseAxes.get_yticks.html", "_foxes/utils/TabWindroseAxes.get_zorder.html", "_foxes/utils/TabWindroseAxes.grid.html", "_foxes/utils/TabWindroseAxes.has_data.html", "_foxes/utils/TabWindroseAxes.have_units.html", "_foxes/utils/TabWindroseAxes.hexbin.html", "_foxes/utils/TabWindroseAxes.hist.html", "_foxes/utils/TabWindroseAxes.hist2d.html", "_foxes/utils/TabWindroseAxes.hlines.html", "_foxes/utils/TabWindroseAxes.images.html", "_foxes/utils/TabWindroseAxes.imshow.html", "_foxes/utils/TabWindroseAxes.in_axes.html", "_foxes/utils/TabWindroseAxes.indicate_inset.html", "_foxes/utils/TabWindroseAxes.indicate_inset_zoom.html", "_foxes/utils/TabWindroseAxes.inset_axes.html", "_foxes/utils/TabWindroseAxes.invert_xaxis.html", "_foxes/utils/TabWindroseAxes.invert_yaxis.html", "_foxes/utils/TabWindroseAxes.is_transform_set.html", "_foxes/utils/TabWindroseAxes.label_outer.html", "_foxes/utils/TabWindroseAxes.legend.html", "_foxes/utils/TabWindroseAxes.lines.html", "_foxes/utils/TabWindroseAxes.locator_params.html", "_foxes/utils/TabWindroseAxes.loglog.html", "_foxes/utils/TabWindroseAxes.magnitude_spectrum.html", "_foxes/utils/TabWindroseAxes.margins.html", "_foxes/utils/TabWindroseAxes.matshow.html", "_foxes/utils/TabWindroseAxes.minorticks_off.html", "_foxes/utils/TabWindroseAxes.minorticks_on.html", "_foxes/utils/TabWindroseAxes.mouseover.html", "_foxes/utils/TabWindroseAxes.name.html", "_foxes/utils/TabWindroseAxes.patches.html", "_foxes/utils/TabWindroseAxes.pchanged.html", "_foxes/utils/TabWindroseAxes.pcolor.html", "_foxes/utils/TabWindroseAxes.pcolorfast.html", "_foxes/utils/TabWindroseAxes.pcolormesh.html", "_foxes/utils/TabWindroseAxes.phase_spectrum.html", "_foxes/utils/TabWindroseAxes.pick.html", "_foxes/utils/TabWindroseAxes.pickable.html", "_foxes/utils/TabWindroseAxes.pie.html", "_foxes/utils/TabWindroseAxes.plot.html", "_foxes/utils/TabWindroseAxes.plot_date.html", "_foxes/utils/TabWindroseAxes.properties.html", "_foxes/utils/TabWindroseAxes.psd.html", "_foxes/utils/TabWindroseAxes.quiver.html", "_foxes/utils/TabWindroseAxes.quiverkey.html", "_foxes/utils/TabWindroseAxes.redraw_in_frame.html", "_foxes/utils/TabWindroseAxes.relim.html", "_foxes/utils/TabWindroseAxes.remove.html", "_foxes/utils/TabWindroseAxes.remove_callback.html", "_foxes/utils/TabWindroseAxes.reset_position.html", "_foxes/utils/TabWindroseAxes.scatter.html", "_foxes/utils/TabWindroseAxes.secondary_xaxis.html", "_foxes/utils/TabWindroseAxes.secondary_yaxis.html", "_foxes/utils/TabWindroseAxes.semilogx.html", "_foxes/utils/TabWindroseAxes.semilogy.html", "_foxes/utils/TabWindroseAxes.set.html", "_foxes/utils/TabWindroseAxes.set_adjustable.html", "_foxes/utils/TabWindroseAxes.set_agg_filter.html", "_foxes/utils/TabWindroseAxes.set_alpha.html", "_foxes/utils/TabWindroseAxes.set_anchor.html", "_foxes/utils/TabWindroseAxes.set_animated.html", "_foxes/utils/TabWindroseAxes.set_aspect.html", "_foxes/utils/TabWindroseAxes.set_autoscale_on.html", "_foxes/utils/TabWindroseAxes.set_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.set_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.set_axes_locator.html", "_foxes/utils/TabWindroseAxes.set_axis_off.html", "_foxes/utils/TabWindroseAxes.set_axis_on.html", "_foxes/utils/TabWindroseAxes.set_axisbelow.html", "_foxes/utils/TabWindroseAxes.set_box_aspect.html", "_foxes/utils/TabWindroseAxes.set_clip_box.html", "_foxes/utils/TabWindroseAxes.set_clip_on.html", "_foxes/utils/TabWindroseAxes.set_clip_path.html", "_foxes/utils/TabWindroseAxes.set_facecolor.html", "_foxes/utils/TabWindroseAxes.set_fc.html", "_foxes/utils/TabWindroseAxes.set_figure.html", "_foxes/utils/TabWindroseAxes.set_frame_on.html", "_foxes/utils/TabWindroseAxes.set_gid.html", "_foxes/utils/TabWindroseAxes.set_in_layout.html", "_foxes/utils/TabWindroseAxes.set_label.html", "_foxes/utils/TabWindroseAxes.set_legend.html", "_foxes/utils/TabWindroseAxes.set_mouseover.html", "_foxes/utils/TabWindroseAxes.set_navigate.html", "_foxes/utils/TabWindroseAxes.set_navigate_mode.html", "_foxes/utils/TabWindroseAxes.set_path_effects.html", "_foxes/utils/TabWindroseAxes.set_picker.html", "_foxes/utils/TabWindroseAxes.set_position.html", "_foxes/utils/TabWindroseAxes.set_prop_cycle.html", "_foxes/utils/TabWindroseAxes.set_radii_angle.html", "_foxes/utils/TabWindroseAxes.set_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.set_rasterized.html", "_foxes/utils/TabWindroseAxes.set_rgrids.html", "_foxes/utils/TabWindroseAxes.set_rlabel_position.html", "_foxes/utils/TabWindroseAxes.set_rlim.html", "_foxes/utils/TabWindroseAxes.set_rmax.html", "_foxes/utils/TabWindroseAxes.set_rmin.html", "_foxes/utils/TabWindroseAxes.set_rorigin.html", "_foxes/utils/TabWindroseAxes.set_rscale.html", "_foxes/utils/TabWindroseAxes.set_rticks.html", "_foxes/utils/TabWindroseAxes.set_sketch_params.html", "_foxes/utils/TabWindroseAxes.set_snap.html", "_foxes/utils/TabWindroseAxes.set_subplotspec.html", "_foxes/utils/TabWindroseAxes.set_theta_direction.html", "_foxes/utils/TabWindroseAxes.set_theta_offset.html", "_foxes/utils/TabWindroseAxes.set_theta_zero_location.html", "_foxes/utils/TabWindroseAxes.set_thetagrids.html", "_foxes/utils/TabWindroseAxes.set_thetalim.html", "_foxes/utils/TabWindroseAxes.set_thetamax.html", "_foxes/utils/TabWindroseAxes.set_thetamin.html", "_foxes/utils/TabWindroseAxes.set_title.html", "_foxes/utils/TabWindroseAxes.set_transform.html", "_foxes/utils/TabWindroseAxes.set_url.html", "_foxes/utils/TabWindroseAxes.set_visible.html", "_foxes/utils/TabWindroseAxes.set_xbound.html", "_foxes/utils/TabWindroseAxes.set_xlabel.html", "_foxes/utils/TabWindroseAxes.set_xlim.html", "_foxes/utils/TabWindroseAxes.set_xmargin.html", "_foxes/utils/TabWindroseAxes.set_xscale.html", "_foxes/utils/TabWindroseAxes.set_xticklabels.html", "_foxes/utils/TabWindroseAxes.set_xticks.html", "_foxes/utils/TabWindroseAxes.set_ybound.html", "_foxes/utils/TabWindroseAxes.set_ylabel.html", "_foxes/utils/TabWindroseAxes.set_ylim.html", "_foxes/utils/TabWindroseAxes.set_ymargin.html", "_foxes/utils/TabWindroseAxes.set_yscale.html", "_foxes/utils/TabWindroseAxes.set_yticklabels.html", "_foxes/utils/TabWindroseAxes.set_yticks.html", "_foxes/utils/TabWindroseAxes.set_zorder.html", "_foxes/utils/TabWindroseAxes.sharex.html", "_foxes/utils/TabWindroseAxes.sharey.html", "_foxes/utils/TabWindroseAxes.specgram.html", "_foxes/utils/TabWindroseAxes.spy.html", "_foxes/utils/TabWindroseAxes.stackplot.html", "_foxes/utils/TabWindroseAxes.stairs.html", "_foxes/utils/TabWindroseAxes.stale.html", "_foxes/utils/TabWindroseAxes.start_pan.html", "_foxes/utils/TabWindroseAxes.stem.html", "_foxes/utils/TabWindroseAxes.step.html", "_foxes/utils/TabWindroseAxes.sticky_edges.html", "_foxes/utils/TabWindroseAxes.streamplot.html", "_foxes/utils/TabWindroseAxes.table.html", "_foxes/utils/TabWindroseAxes.tables.html", "_foxes/utils/TabWindroseAxes.text.html", "_foxes/utils/TabWindroseAxes.texts.html", "_foxes/utils/TabWindroseAxes.tick_params.html", "_foxes/utils/TabWindroseAxes.ticklabel_format.html", "_foxes/utils/TabWindroseAxes.tricontour.html", "_foxes/utils/TabWindroseAxes.tricontourf.html", "_foxes/utils/TabWindroseAxes.tripcolor.html", "_foxes/utils/TabWindroseAxes.triplot.html", "_foxes/utils/TabWindroseAxes.twinx.html", "_foxes/utils/TabWindroseAxes.twiny.html", "_foxes/utils/TabWindroseAxes.update.html", "_foxes/utils/TabWindroseAxes.update_datalim.html", "_foxes/utils/TabWindroseAxes.update_from.html", "_foxes/utils/TabWindroseAxes.use_sticky_edges.html", "_foxes/utils/TabWindroseAxes.viewLim.html", "_foxes/utils/TabWindroseAxes.violin.html", "_foxes/utils/TabWindroseAxes.violinplot.html", "_foxes/utils/TabWindroseAxes.vlines.html", "_foxes/utils/TabWindroseAxes.xaxis_date.html", "_foxes/utils/TabWindroseAxes.xaxis_inverted.html", "_foxes/utils/TabWindroseAxes.xcorr.html", "_foxes/utils/TabWindroseAxes.yaxis_date.html", "_foxes/utils/TabWindroseAxes.yaxis_inverted.html", "_foxes/utils/TabWindroseAxes.zorder.html", "_foxes/utils/abl/neutral/calc_ws.html", "_foxes/utils/abl/neutral/logz.html", "_foxes/utils/abl/neutral/ustar.html", "_foxes/utils/abl/sheared/calc_ws.html", "_foxes/utils/abl/stable/calc_ws.html", "_foxes/utils/abl/stable/lgz.html", "_foxes/utils/abl/stable/logz.html", "_foxes/utils/abl/stable/psi.html", "_foxes/utils/abl/stable/ustar.html", "_foxes/utils/abl/unstable/calc_ws.html", "_foxes/utils/abl/unstable/logz.html", "_foxes/utils/abl/unstable/psi.html", "_foxes/utils/abl/unstable/ustar.html", "_foxes/utils/all_subclasses.html", "_foxes/utils/cubic_roots.html", "_foxes/utils/delta_wd.html", "_foxes/utils/exec_python.html", "_foxes/utils/geom2d/AreaGeometry.html", "_foxes/utils/geom2d/AreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/AreaGeometry.inverse.html", "_foxes/utils/geom2d/AreaGeometry.p_max.html", "_foxes/utils/geom2d/AreaGeometry.p_min.html", "_foxes/utils/geom2d/AreaGeometry.points_distance.html", "_foxes/utils/geom2d/AreaGeometry.points_inside.html", "_foxes/utils/geom2d/AreaIntersection.html", "_foxes/utils/geom2d/AreaIntersection.__new__.html", "_foxes/utils/geom2d/AreaUnion.html", "_foxes/utils/geom2d/AreaUnion.__init__.html", "_foxes/utils/geom2d/AreaUnion.add_to_figure.html", "_foxes/utils/geom2d/AreaUnion.inverse.html", "_foxes/utils/geom2d/AreaUnion.p_max.html", "_foxes/utils/geom2d/AreaUnion.p_min.html", "_foxes/utils/geom2d/AreaUnion.points_distance.html", "_foxes/utils/geom2d/AreaUnion.points_inside.html", "_foxes/utils/geom2d/Circle.html", "_foxes/utils/geom2d/Circle.__init__.html", "_foxes/utils/geom2d/Circle.add_to_figure.html", "_foxes/utils/geom2d/Circle.p_max.html", "_foxes/utils/geom2d/Circle.p_min.html", "_foxes/utils/geom2d/Circle.points_distance.html", "_foxes/utils/geom2d/Circle.points_inside.html", "_foxes/utils/geom2d/ClosedPolygon.html", "_foxes/utils/geom2d/ClosedPolygon.__init__.html", "_foxes/utils/geom2d/ClosedPolygon.add_to_figure.html", "_foxes/utils/geom2d/ClosedPolygon.p_max.html", "_foxes/utils/geom2d/ClosedPolygon.p_min.html", "_foxes/utils/geom2d/ClosedPolygon.points_distance.html", "_foxes/utils/geom2d/ClosedPolygon.points_inside.html", "_foxes/utils/geom2d/HalfPlane.html", "_foxes/utils/geom2d/HalfPlane.__init__.html", "_foxes/utils/geom2d/HalfPlane.add_to_figure.html", "_foxes/utils/geom2d/HalfPlane.inverse.html", "_foxes/utils/geom2d/HalfPlane.p_max.html", "_foxes/utils/geom2d/HalfPlane.p_min.html", "_foxes/utils/geom2d/HalfPlane.points_distance.html", "_foxes/utils/geom2d/HalfPlane.points_inside.html", "_foxes/utils/geom2d/InvertedAreaGeometry.html", "_foxes/utils/geom2d/InvertedAreaGeometry.__init__.html", "_foxes/utils/geom2d/InvertedAreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/InvertedAreaGeometry.inverse.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_max.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_min.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_distance.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_inside.html", "_foxes/utils/import_module.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__init__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__str__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.ana_deriv.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.component_names.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialized.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_components.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_int.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.html", "_foxes/utils/opt/constraints/MinDistConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_individual.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_population.html", "_foxes/utils/opt/constraints/MinDistConstraint.initialize.html", "_foxes/utils/opt/constraints/MinDistConstraint.n_components.html", "_foxes/utils/opt/constraints/MinDistConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmConstraint.html", "_foxes/utils/opt/core/FarmConstraint.__init__.html", "_foxes/utils/opt/core/FarmConstraint.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmConstraint.calc_individual.html", "_foxes/utils/opt/core/FarmConstraint.calc_population.html", "_foxes/utils/opt/core/FarmConstraint.farm.html", "_foxes/utils/opt/core/FarmConstraint.n_components.html", "_foxes/utils/opt/core/FarmConstraint.n_sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.print_models.html", "_foxes/utils/opt/core/FarmConstraint.sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmObjective.html", "_foxes/utils/opt/core/FarmObjective.__init__.html", "_foxes/utils/opt/core/FarmObjective.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmObjective.farm.html", "_foxes/utils/opt/core/FarmObjective.n_sel_turbines.html", "_foxes/utils/opt/core/FarmObjective.print_models.html", "_foxes/utils/opt/core/FarmObjective.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.html", "_foxes/utils/opt/core/FarmOptProblem.INT_INF.html", "_foxes/utils/opt/core/FarmOptProblem.__init__.html", "_foxes/utils/opt/core/FarmOptProblem.add_constraint.html", "_foxes/utils/opt/core/FarmOptProblem.add_objective.html", "_foxes/utils/opt/core/FarmOptProblem.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmOptProblem.all_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.apply_individual.html", "_foxes/utils/opt/core/FarmOptProblem.apply_population.html", "_foxes/utils/opt/core/FarmOptProblem.calc_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_individual.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_population.html", "_foxes/utils/opt/core/FarmOptProblem.constraints_tol.html", "_foxes/utils/opt/core/FarmOptProblem.counter.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_individual.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_population.html", "_foxes/utils/opt/core/FarmOptProblem.farm.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_individual.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_population.html", "_foxes/utils/opt/core/FarmOptProblem.get_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.initialize.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.maximize_objs.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.n_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.n_objectives.html", "_foxes/utils/opt/core/FarmOptProblem.n_sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_float.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_int.html", "_foxes/utils/opt/core/FarmOptProblem.parse_tvar.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_individual.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_population.html", "_foxes/utils/opt/core/FarmOptProblem.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.tvar.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_population.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_float.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_int.html", "_foxes/utils/opt/core/FarmVarsProblem.html", "_foxes/utils/opt/core/FarmVarsProblem.initialize.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_population.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_population.html", "_foxes/utils/opt/core/PopStates.html", "_foxes/utils/opt/core/PopStates.__init__.html", "_foxes/utils/opt/core/PopStates.calculate.html", "_foxes/utils/opt/core/PopStates.initialize.html", "_foxes/utils/opt/core/PopStates.load_data.html", "_foxes/utils/opt/core/PopStates.output_point_vars.html", "_foxes/utils/opt/core/PopStates.size.html", "_foxes/utils/opt/core/PopStates.weights.html", "_foxes/utils/opt/objectives/FarmVarObjective.html", "_foxes/utils/opt/objectives/FarmVarObjective.__init__.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_population.html", "_foxes/utils/opt/objectives/FarmVarObjective.finalize_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.initialize.html", "_foxes/utils/opt/objectives/FarmVarObjective.maximize.html", "_foxes/utils/opt/objectives/FarmVarObjective.n_components.html", "_foxes/utils/opt/objectives/FarmVarObjective.vardeps_float.html", "_foxes/utils/opt/objectives/MaxFarmPower.html", "_foxes/utils/opt/objectives/MaxFarmPower.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.html", "_foxes/utils/opt/objectives/MaxNTurbines.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_individual.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_population.html", "_foxes/utils/opt/objectives/MaxNTurbines.maximize.html", "_foxes/utils/opt/objectives/MaxNTurbines.n_components.html", "_foxes/utils/opt/objectives/MinimalMaxTI.html", "_foxes/utils/opt/objectives/MinimalMaxTI.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.html", "_foxes/utils/opt/problems/OptFarmVars.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.add_var.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.initialize.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_population.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_float.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.get_bounds.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintscdist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivescdist.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_int.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_int.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.ANGLE.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.var_names_float.html", "_foxes/utils/read_shp.html", "_foxes/utils/read_shp_polygons.html", "_foxes/utils/read_tab_file.html", "_foxes/utils/runners/DaskRunner.html", "_foxes/utils/runners/DaskRunner.__init__.html", "_foxes/utils/runners/DaskRunner.finalize.html", "_foxes/utils/runners/DaskRunner.initialize.html", "_foxes/utils/runners/DaskRunner.is_distributed.html", "_foxes/utils/runners/DaskRunner.print.html", "_foxes/utils/runners/DaskRunner.run.html", "_foxes/utils/runners/DefaultRunner.html", "_foxes/utils/runners/DefaultRunner.run.html", "_foxes/utils/runners/Runner.html", "_foxes/utils/runners/Runner.__init__.html", "_foxes/utils/runners/Runner.finalize.html", "_foxes/utils/runners/Runner.initialize.html", "_foxes/utils/runners/Runner.initialized.html", "_foxes/utils/runners/Runner.run.html", "_foxes/utils/shp2csv.html", "_foxes/utils/shp2geom2d.html", "_foxes/utils/sqrt_reg.html", "_foxes/utils/two_circles/area.html", "_foxes/utils/two_circles/calc_area.html", "_foxes/utils/uv2wd.html", "_foxes/utils/wd2uv.html", "_foxes/utils/wd2wdvec.html", "_foxes/utils/wdvec2wd.html", "_foxes/utils/write_nc.html", "_foxes/variables/AMB_CAP.html", "_foxes/variables/AMB_CT.html", "_foxes/variables/AMB_P.html", "_foxes/variables/AMB_REWS.html", "_foxes/variables/AMB_REWS2.html", "_foxes/variables/AMB_REWS3.html", "_foxes/variables/AMB_RHO.html", "_foxes/variables/AMB_T.html", "_foxes/variables/AMB_TI.html", "_foxes/variables/AMB_WD.html", "_foxes/variables/AMB_WS.html", "_foxes/variables/AMB_YAW.html", "_foxes/variables/AMB_YAWM.html", "_foxes/variables/AMB_YLD.html", "_foxes/variables/CAP.html", "_foxes/variables/CT.html", "_foxes/variables/D.html", "_foxes/variables/EFF.html", "_foxes/variables/H.html", "_foxes/variables/K.html", "_foxes/variables/KB.html", "_foxes/variables/KTI.html", "_foxes/variables/MAX_P.html", "_foxes/variables/MOL.html", "_foxes/variables/ORDER.html", "_foxes/variables/P.html", "_foxes/variables/PA_ALPHA.html", "_foxes/variables/PA_BETA.html", "_foxes/variables/REWS.html", "_foxes/variables/REWS2.html", "_foxes/variables/REWS3.html", "_foxes/variables/RHO.html", "_foxes/variables/SHEAR.html", "_foxes/variables/T.html", "_foxes/variables/TI.html", "_foxes/variables/TXYH.html", "_foxes/variables/WD.html", "_foxes/variables/WEIGHT.html", "_foxes/variables/WS.html", "_foxes/variables/X.html", "_foxes/variables/Y.html", "_foxes/variables/YAW.html", "_foxes/variables/YAWM.html", "_foxes/variables/YLD.html", "_foxes/variables/Z0.html", "_foxes/variables/amb2var.html", "_foxes/variables/var2amb.html", "api.html", "api_algorithms.html", "api_algorithms_downwind.html", "api_algorithms_iterative.html", "api_algorithms_sequential.html", "api_constants.html", "api_core.html", "api_data.html", "api_foxes.html", "api_input.html", "api_models.html", "api_opt.html", "api_opt_problems.html", "api_opt_problems_geom.html", "api_output.html", "api_utils.html", "api_utils_abl.html", "api_variables.html", "api_wake_models.html", "citation.html", "examples.html", "history.html", "index.html", "installation.html", "notebooks/blockage_comparison.html", "notebooks/blockage_farm.html", "notebooks/data.html", "notebooks/heterogeneous.html", "notebooks/layout_opt.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/overview.html", "notebooks/power_mask.html", "notebooks/sector_man.html", "notebooks/sequential.html", "notebooks/single_row.html", "notebooks/timelines.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html", "testing.html"]})