Search.setIndex({"titles": ["foxes.algorithms.Downwind", "foxes.algorithms.Downwind.__init__", "foxes.algorithms.Downwind.all_models", "foxes.algorithms.Downwind.calc_farm", "foxes.algorithms.Downwind.calc_points", "foxes.algorithms.Downwind.finalize", "foxes.algorithms.Downwind.get_model", "foxes.algorithms.Downwind.init_states", "foxes.algorithms.Downwind.initialize", "foxes.algorithms.Iterative", "foxes.algorithms.Iterative.__init__", "foxes.algorithms.Iterative.calc_farm", "foxes.algorithms.Iterative.get_model", "foxes.algorithms.Iterative.iterations", "foxes.algorithms.Iterative.set_urelax", "foxes.algorithms.Iterative.urelax", "foxes.algorithms.Sequential", "foxes.algorithms.Sequential.__init__", "foxes.algorithms.Sequential.__iter__", "foxes.algorithms.Sequential.__next__", "foxes.algorithms.Sequential.calc_farm", "foxes.algorithms.Sequential.calc_points", "foxes.algorithms.Sequential.counter", "foxes.algorithms.Sequential.cur_farm_results", "foxes.algorithms.Sequential.cur_point_results", "foxes.algorithms.Sequential.farm_results", "foxes.algorithms.Sequential.fdata", "foxes.algorithms.Sequential.get_model", "foxes.algorithms.Sequential.index", "foxes.algorithms.Sequential.iterating", "foxes.algorithms.Sequential.mdata", "foxes.algorithms.Sequential.pdata", "foxes.algorithms.Sequential.point_results", "foxes.algorithms.Sequential.size", "foxes.algorithms.Sequential.weight", "foxes.algorithms.downwind.models.CalcOrder", "foxes.algorithms.downwind.models.CalcOrder.calculate", "foxes.algorithms.downwind.models.CalcOrder.initialize", "foxes.algorithms.downwind.models.CalcOrder.output_farm_vars", "foxes.algorithms.downwind.models.CalcOrder.sub_models", "foxes.algorithms.downwind.models.FarmWakesCalculation", "foxes.algorithms.downwind.models.FarmWakesCalculation.__init__", "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate", "foxes.algorithms.downwind.models.FarmWakesCalculation.initialize", "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.downwind.models.FarmWakesCalculation.sub_models", "foxes.algorithms.downwind.models.PointWakesCalculation", "foxes.algorithms.downwind.models.PointWakesCalculation.__init__", "foxes.algorithms.downwind.models.PointWakesCalculation.calculate", "foxes.algorithms.downwind.models.PointWakesCalculation.contribute_to_wake_deltas", "foxes.algorithms.downwind.models.PointWakesCalculation.initialize", "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars", "foxes.algorithms.downwind.models.PointWakesCalculation.sub_models", "foxes.algorithms.downwind.models.SetAmbFarmResults", "foxes.algorithms.downwind.models.SetAmbFarmResults.__init__", "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate", "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbPointResults", "foxes.algorithms.downwind.models.SetAmbPointResults.__init__", "foxes.algorithms.downwind.models.SetAmbPointResults.calculate", "foxes.algorithms.downwind.models.SetAmbPointResults.initialize", "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars", "foxes.algorithms.iterative.ConvCrit", "foxes.algorithms.iterative.ConvCrit.__init__", "foxes.algorithms.iterative.ConvCrit.check_converged", "foxes.algorithms.iterative.ConvCrit.get_deltas", "foxes.algorithms.iterative.ConvCritList", "foxes.algorithms.iterative.ConvCritList.__init__", "foxes.algorithms.iterative.ConvCritList.add_crit", "foxes.algorithms.iterative.ConvCritList.check_converged", "foxes.algorithms.iterative.ConvCritList.get_deltas", "foxes.algorithms.iterative.ConvVarDelta", "foxes.algorithms.iterative.ConvVarDelta.__init__", "foxes.algorithms.iterative.ConvVarDelta.check_converged", "foxes.algorithms.iterative.ConvVarDelta.get_deltas", "foxes.algorithms.iterative.DefaultConv", "foxes.algorithms.iterative.DefaultConv.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation", "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate", "foxes.algorithms.iterative.models.FarmWakesCalculation.initialize", "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.iterative.models.FarmWakesCalculation.sub_models", "foxes.algorithms.iterative.models.URelax", "foxes.algorithms.iterative.models.URelax.__init__", "foxes.algorithms.iterative.models.URelax.calculate", "foxes.algorithms.iterative.models.URelax.output_farm_vars", "foxes.algorithms.sequential.SequentialPlugin", "foxes.algorithms.sequential.SequentialPlugin.__init__", "foxes.algorithms.sequential.SequentialPlugin.finalize", "foxes.algorithms.sequential.SequentialPlugin.initialize", "foxes.algorithms.sequential.SequentialPlugin.update", "foxes.algorithms.sequential.models.SeqState", "foxes.algorithms.sequential.models.SeqState.__init__", "foxes.algorithms.sequential.models.SeqState.calculate", "foxes.algorithms.sequential.models.SeqState.counter", "foxes.algorithms.sequential.models.SeqState.index", "foxes.algorithms.sequential.models.SeqState.initialize", "foxes.algorithms.sequential.models.SeqState.output_point_vars", "foxes.algorithms.sequential.models.SeqState.size", "foxes.algorithms.sequential.models.SeqState.sub_models", "foxes.algorithms.sequential.models.SeqState.weights", "foxes.constants.AMB_RPOINT_RESULTS", "foxes.constants.DTYPE", "foxes.constants.DTYPE.T", "foxes.constants.DTYPE.__abs__", "foxes.constants.DTYPE.__add__", "foxes.constants.DTYPE.__and__", "foxes.constants.DTYPE.__array__", "foxes.constants.DTYPE.__array_interface__", "foxes.constants.DTYPE.__array_priority__", "foxes.constants.DTYPE.__array_struct__", "foxes.constants.DTYPE.__array_wrap__", "foxes.constants.DTYPE.__bool__", "foxes.constants.DTYPE.__class_getitem__", "foxes.constants.DTYPE.__divmod__", "foxes.constants.DTYPE.__eq__", "foxes.constants.DTYPE.__float__", "foxes.constants.DTYPE.__floordiv__", "foxes.constants.DTYPE.__format__", "foxes.constants.DTYPE.__ge__", "foxes.constants.DTYPE.__getitem__", "foxes.constants.DTYPE.__gt__", "foxes.constants.DTYPE.__hash__", "foxes.constants.DTYPE.__int__", "foxes.constants.DTYPE.__invert__", "foxes.constants.DTYPE.__le__", "foxes.constants.DTYPE.__lshift__", "foxes.constants.DTYPE.__lt__", "foxes.constants.DTYPE.__mod__", "foxes.constants.DTYPE.__mul__", "foxes.constants.DTYPE.__ne__", "foxes.constants.DTYPE.__neg__", "foxes.constants.DTYPE.__new__", "foxes.constants.DTYPE.__or__", "foxes.constants.DTYPE.__pos__", "foxes.constants.DTYPE.__pow__", "foxes.constants.DTYPE.__radd__", "foxes.constants.DTYPE.__rand__", "foxes.constants.DTYPE.__rdivmod__", "foxes.constants.DTYPE.__reduce__", "foxes.constants.DTYPE.__repr__", "foxes.constants.DTYPE.__rfloordiv__", "foxes.constants.DTYPE.__rlshift__", "foxes.constants.DTYPE.__rmod__", "foxes.constants.DTYPE.__rmul__", "foxes.constants.DTYPE.__ror__", "foxes.constants.DTYPE.__rpow__", "foxes.constants.DTYPE.__rrshift__", "foxes.constants.DTYPE.__rshift__", "foxes.constants.DTYPE.__rsub__", "foxes.constants.DTYPE.__rtruediv__", "foxes.constants.DTYPE.__rxor__", "foxes.constants.DTYPE.__sizeof__", "foxes.constants.DTYPE.__str__", "foxes.constants.DTYPE.__sub__", "foxes.constants.DTYPE.__truediv__", "foxes.constants.DTYPE.__xor__", "foxes.constants.DTYPE.all", "foxes.constants.DTYPE.any", "foxes.constants.DTYPE.argmax", "foxes.constants.DTYPE.argmin", "foxes.constants.DTYPE.argsort", "foxes.constants.DTYPE.as_integer_ratio", "foxes.constants.DTYPE.astype", "foxes.constants.DTYPE.base", "foxes.constants.DTYPE.byteswap", "foxes.constants.DTYPE.choose", "foxes.constants.DTYPE.clip", "foxes.constants.DTYPE.compress", "foxes.constants.DTYPE.conj", "foxes.constants.DTYPE.conjugate", "foxes.constants.DTYPE.copy", "foxes.constants.DTYPE.cumprod", "foxes.constants.DTYPE.cumsum", "foxes.constants.DTYPE.data", "foxes.constants.DTYPE.diagonal", "foxes.constants.DTYPE.dtype", "foxes.constants.DTYPE.dump", "foxes.constants.DTYPE.dumps", "foxes.constants.DTYPE.fill", "foxes.constants.DTYPE.flags", "foxes.constants.DTYPE.flat", "foxes.constants.DTYPE.flatten", "foxes.constants.DTYPE.getfield", "foxes.constants.DTYPE.imag", "foxes.constants.DTYPE.is_integer", "foxes.constants.DTYPE.item", "foxes.constants.DTYPE.itemset", "foxes.constants.DTYPE.itemsize", "foxes.constants.DTYPE.max", "foxes.constants.DTYPE.mean", "foxes.constants.DTYPE.min", "foxes.constants.DTYPE.nbytes", "foxes.constants.DTYPE.ndim", "foxes.constants.DTYPE.newbyteorder", "foxes.constants.DTYPE.nonzero", "foxes.constants.DTYPE.prod", "foxes.constants.DTYPE.ptp", "foxes.constants.DTYPE.put", "foxes.constants.DTYPE.ravel", "foxes.constants.DTYPE.real", "foxes.constants.DTYPE.repeat", "foxes.constants.DTYPE.reshape", "foxes.constants.DTYPE.resize", "foxes.constants.DTYPE.round", "foxes.constants.DTYPE.searchsorted", "foxes.constants.DTYPE.setfield", "foxes.constants.DTYPE.setflags", "foxes.constants.DTYPE.shape", "foxes.constants.DTYPE.size", "foxes.constants.DTYPE.sort", "foxes.constants.DTYPE.squeeze", "foxes.constants.DTYPE.std", "foxes.constants.DTYPE.strides", "foxes.constants.DTYPE.sum", "foxes.constants.DTYPE.swapaxes", "foxes.constants.DTYPE.take", "foxes.constants.DTYPE.tobytes", "foxes.constants.DTYPE.tofile", "foxes.constants.DTYPE.tolist", "foxes.constants.DTYPE.tostring", "foxes.constants.DTYPE.trace", "foxes.constants.DTYPE.transpose", "foxes.constants.DTYPE.var", "foxes.constants.DTYPE.view", "foxes.constants.FARM", "foxes.constants.GW", "foxes.constants.ITYPE", "foxes.constants.ITYPE.__abs__", "foxes.constants.ITYPE.__add__", "foxes.constants.ITYPE.__and__", "foxes.constants.ITYPE.__bool__", "foxes.constants.ITYPE.__class_getitem__", "foxes.constants.ITYPE.__divmod__", "foxes.constants.ITYPE.__eq__", "foxes.constants.ITYPE.__float__", "foxes.constants.ITYPE.__floordiv__", "foxes.constants.ITYPE.__ge__", "foxes.constants.ITYPE.__gt__", "foxes.constants.ITYPE.__hash__", "foxes.constants.ITYPE.__index__", "foxes.constants.ITYPE.__int__", "foxes.constants.ITYPE.__invert__", "foxes.constants.ITYPE.__le__", "foxes.constants.ITYPE.__lshift__", "foxes.constants.ITYPE.__lt__", "foxes.constants.ITYPE.__mod__", "foxes.constants.ITYPE.__mul__", "foxes.constants.ITYPE.__ne__", "foxes.constants.ITYPE.__neg__", "foxes.constants.ITYPE.__new__", "foxes.constants.ITYPE.__or__", "foxes.constants.ITYPE.__pos__", "foxes.constants.ITYPE.__pow__", "foxes.constants.ITYPE.__radd__", "foxes.constants.ITYPE.__rand__", "foxes.constants.ITYPE.__rdivmod__", "foxes.constants.ITYPE.__repr__", "foxes.constants.ITYPE.__rfloordiv__", "foxes.constants.ITYPE.__rlshift__", "foxes.constants.ITYPE.__rmod__", "foxes.constants.ITYPE.__rmul__", "foxes.constants.ITYPE.__ror__", "foxes.constants.ITYPE.__rpow__", "foxes.constants.ITYPE.__rrshift__", "foxes.constants.ITYPE.__rshift__", "foxes.constants.ITYPE.__rsub__", "foxes.constants.ITYPE.__rtruediv__", "foxes.constants.ITYPE.__rxor__", "foxes.constants.ITYPE.__str__", "foxes.constants.ITYPE.__sub__", "foxes.constants.ITYPE.__truediv__", "foxes.constants.ITYPE.__xor__", "foxes.constants.ITYPE.bit_count", "foxes.constants.ITYPE.denominator", "foxes.constants.ITYPE.is_integer", "foxes.constants.ITYPE.numerator", "foxes.constants.KAPPA", "foxes.constants.MW", "foxes.constants.POINT", "foxes.constants.POINTS", "foxes.constants.POP", "foxes.constants.P_UNITS", "foxes.constants.RPOINT", "foxes.constants.RPOINTS", "foxes.constants.RWEIGHTS", "foxes.constants.STATE", "foxes.constants.STATES_SEL", "foxes.constants.STATE_POINT", "foxes.constants.STATE_SOURCE_TURBINE", "foxes.constants.STATE_TURBINE", "foxes.constants.TMODELS", "foxes.constants.TMODEL_SELS", "foxes.constants.TNAME", "foxes.constants.TURBINE", "foxes.constants.TW", "foxes.constants.VALID", "foxes.constants.VARS", "foxes.constants.W", "foxes.constants.XYH", "foxes.constants.kW", "foxes.core.Algorithm", "foxes.core.Algorithm.__init__", "foxes.core.Algorithm.chunked", "foxes.core.Algorithm.del_model_data", "foxes.core.Algorithm.finalize", "foxes.core.Algorithm.get_model_data", "foxes.core.Algorithm.get_models_data", "foxes.core.Algorithm.get_models_idata", "foxes.core.Algorithm.idata_mem", "foxes.core.Algorithm.initialize", "foxes.core.Algorithm.new", "foxes.core.Algorithm.new_point_data", "foxes.core.Algorithm.print", "foxes.core.Algorithm.store_model_data", "foxes.core.Algorithm.update_n_turbines", "foxes.core.AxialInductionModel", "foxes.core.AxialInductionModel.ct2a", "foxes.core.Data", "foxes.core.Data.__init__", "foxes.core.Data.add", "foxes.core.Data.from_points", "foxes.core.Data.n_points", "foxes.core.Data.n_states", "foxes.core.Data.n_turbines", "foxes.core.Data.states_i0", "foxes.core.DataCalcModel", "foxes.core.DataCalcModel.calculate", "foxes.core.DataCalcModel.run_calculation", "foxes.core.ExtendedStates", "foxes.core.ExtendedStates.__init__", "foxes.core.ExtendedStates.append", "foxes.core.ExtendedStates.calculate", "foxes.core.ExtendedStates.index", "foxes.core.ExtendedStates.output_point_vars", "foxes.core.ExtendedStates.size", "foxes.core.ExtendedStates.sub_models", "foxes.core.ExtendedStates.weights", "foxes.core.FarmController", "foxes.core.FarmController.__init__", "foxes.core.FarmController.calculate", "foxes.core.FarmController.collect_models", "foxes.core.FarmController.finalize", "foxes.core.FarmController.initialize", "foxes.core.FarmController.load_data", "foxes.core.FarmController.output_farm_vars", "foxes.core.FarmController.set_pars", "foxes.core.FarmController.sub_models", "foxes.core.FarmDataModel", "foxes.core.FarmDataModel.__init__", "foxes.core.FarmDataModel.calculate", "foxes.core.FarmDataModel.output_farm_vars", "foxes.core.FarmDataModel.run_calculation", "foxes.core.FarmDataModelList", "foxes.core.FarmDataModelList.__init__", "foxes.core.FarmDataModelList.append", "foxes.core.FarmDataModelList.calculate", "foxes.core.FarmDataModelList.insert", "foxes.core.FarmDataModelList.output_farm_vars", "foxes.core.FarmDataModelList.sub_models", "foxes.core.FarmModel", "foxes.core.Model", "foxes.core.Model.__init__", "foxes.core.Model.__repr__", "foxes.core.Model.data_to_store", "foxes.core.Model.finalize", "foxes.core.Model.from_data_or_store", "foxes.core.Model.get_data", "foxes.core.Model.initialize", "foxes.core.Model.initialized", "foxes.core.Model.load_data", "foxes.core.Model.model_id", "foxes.core.Model.sub_models", "foxes.core.Model.var", "foxes.core.PartialWakesModel", "foxes.core.PartialWakesModel.__init__", "foxes.core.PartialWakesModel.contribute_to_wake_deltas", "foxes.core.PartialWakesModel.evaluate_results", "foxes.core.PartialWakesModel.initialize", "foxes.core.PartialWakesModel.new", "foxes.core.PartialWakesModel.new_wake_deltas", "foxes.core.PartialWakesModel.sub_models", "foxes.core.PointDataModel", "foxes.core.PointDataModel.calculate", "foxes.core.PointDataModel.output_point_vars", "foxes.core.PointDataModel.run_calculation", "foxes.core.PointDataModelList", "foxes.core.PointDataModelList.__init__", "foxes.core.PointDataModelList.append", "foxes.core.PointDataModelList.calculate", "foxes.core.PointDataModelList.output_point_vars", "foxes.core.PointDataModelList.sub_models", "foxes.core.RotorModel", "foxes.core.RotorModel.__init__", "foxes.core.RotorModel.calculate", "foxes.core.RotorModel.design_points", "foxes.core.RotorModel.eval_rpoint_results", "foxes.core.RotorModel.get_rotor_points", "foxes.core.RotorModel.n_rotor_points", "foxes.core.RotorModel.new", "foxes.core.RotorModel.output_farm_vars", "foxes.core.RotorModel.rotor_point_weights", "foxes.core.States", "foxes.core.States.index", "foxes.core.States.load_data", "foxes.core.States.output_point_vars", "foxes.core.States.size", "foxes.core.States.weights", "foxes.core.Turbine", "foxes.core.Turbine.__init__", "foxes.core.Turbine.add_model", "foxes.core.Turbine.insert_model", "foxes.core.TurbineModel", "foxes.core.TurbineModel.calculate", "foxes.core.TurbineModel.new", "foxes.core.TurbineType", "foxes.core.TurbineType.__init__", "foxes.core.TurbineType.new", "foxes.core.VerticalProfile", "foxes.core.VerticalProfile.calculate", "foxes.core.VerticalProfile.input_vars", "foxes.core.VerticalProfile.new", "foxes.core.WakeFrame", "foxes.core.WakeFrame.calc_centreline_integral", "foxes.core.WakeFrame.calc_order", "foxes.core.WakeFrame.get_centreline_points", "foxes.core.WakeFrame.get_wake_coos", "foxes.core.WakeFrame.get_wake_modelling_data", "foxes.core.WakeFrame.new", "foxes.core.WakeModel", "foxes.core.WakeModel.contribute_to_wake_deltas", "foxes.core.WakeModel.finalize_wake_deltas", "foxes.core.WakeModel.init_wake_deltas", "foxes.core.WakeModel.new", "foxes.core.WakeSuperposition", "foxes.core.WakeSuperposition.calc_final_wake_delta", "foxes.core.WakeSuperposition.calc_wakes_plus_wake", "foxes.core.WindFarm", "foxes.core.WindFarm.__init__", "foxes.core.WindFarm.add_turbine", "foxes.core.WindFarm.n_turbines", "foxes.core.WindFarm.turbine_names", "foxes.data.StaticData", "foxes.data.StaticData.__init__", "foxes.data.parse_Pct_file_name", "foxes.data.parse_Pct_two_files", "foxes.input.farm_layout.add_from_csv", "foxes.input.farm_layout.add_from_df", "foxes.input.farm_layout.add_from_file", "foxes.input.farm_layout.add_from_json", "foxes.input.farm_layout.add_grid", "foxes.input.farm_layout.add_row", "foxes.input.states.FieldDataNC", "foxes.input.states.FieldDataNC.__init__", "foxes.input.states.FieldDataNC.calculate", "foxes.input.states.FieldDataNC.index", "foxes.input.states.FieldDataNC.load_data", "foxes.input.states.FieldDataNC.output_point_vars", "foxes.input.states.FieldDataNC.size", "foxes.input.states.FieldDataNC.weights", "foxes.input.states.MultiHeightStates", "foxes.input.states.MultiHeightStates.RDICT", "foxes.input.states.MultiHeightStates.__init__", "foxes.input.states.MultiHeightStates.calculate", "foxes.input.states.MultiHeightStates.finalize", "foxes.input.states.MultiHeightStates.index", "foxes.input.states.MultiHeightStates.load_data", "foxes.input.states.MultiHeightStates.output_point_vars", "foxes.input.states.MultiHeightStates.reset", "foxes.input.states.MultiHeightStates.size", "foxes.input.states.MultiHeightStates.weights", "foxes.input.states.MultiHeightTimeseries", "foxes.input.states.MultiHeightTimeseries.RDICT", "foxes.input.states.ScanWS", "foxes.input.states.ScanWS.__init__", "foxes.input.states.ScanWS.calculate", "foxes.input.states.ScanWS.load_data", "foxes.input.states.ScanWS.output_point_vars", "foxes.input.states.ScanWS.size", "foxes.input.states.ScanWS.weights", "foxes.input.states.SingleStateStates", "foxes.input.states.SingleStateStates.__init__", "foxes.input.states.SingleStateStates.calculate", "foxes.input.states.SingleStateStates.initialize", "foxes.input.states.SingleStateStates.output_point_vars", "foxes.input.states.SingleStateStates.size", "foxes.input.states.SingleStateStates.sub_models", "foxes.input.states.SingleStateStates.weights", "foxes.input.states.StatesTable", "foxes.input.states.StatesTable.RDICT", "foxes.input.states.StatesTable.__init__", "foxes.input.states.StatesTable.calculate", "foxes.input.states.StatesTable.finalize", "foxes.input.states.StatesTable.index", "foxes.input.states.StatesTable.initialize", "foxes.input.states.StatesTable.load_data", "foxes.input.states.StatesTable.output_point_vars", "foxes.input.states.StatesTable.reset", "foxes.input.states.StatesTable.size", "foxes.input.states.StatesTable.sub_models", "foxes.input.states.StatesTable.weights", "foxes.input.states.Timeseries", "foxes.input.states.Timeseries.RDICT", "foxes.input.states.create_random_abl_states", "foxes.input.windio.read_case", "foxes.models.farm_controllers.BasicFarmController", "foxes.models.farm_models.Turbine2FarmModel", "foxes.models.farm_models.Turbine2FarmModel.__init__", "foxes.models.farm_models.Turbine2FarmModel.__repr__", "foxes.models.farm_models.Turbine2FarmModel.calculate", "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars", "foxes.models.farm_models.Turbine2FarmModel.sub_models", "foxes.models.model_book.Dict", "foxes.models.model_book.Dict.__getitem__", "foxes.models.model_book.Dict.__init__", "foxes.models.model_book.ModelBook", "foxes.models.model_book.ModelBook.__getitem__", "foxes.models.model_book.ModelBook.__init__", "foxes.models.model_book.ModelBook.finalize", "foxes.models.model_book.ModelBook.get", "foxes.models.model_book.ModelBook.print_toc", "foxes.models.partial_wakes.Mapped", "foxes.models.partial_wakes.Mapped.__init__", "foxes.models.partial_wakes.Mapped.contribute_to_wake_deltas", "foxes.models.partial_wakes.Mapped.evaluate_results", "foxes.models.partial_wakes.Mapped.initialize", "foxes.models.partial_wakes.Mapped.new_wake_deltas", "foxes.models.partial_wakes.Mapped.sub_models", "foxes.models.partial_wakes.PartialAxiwake", "foxes.models.partial_wakes.PartialAxiwake.__init__", "foxes.models.partial_wakes.PartialAxiwake.__repr__", "foxes.models.partial_wakes.PartialAxiwake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.evaluate_results", "foxes.models.partial_wakes.PartialAxiwake.initialize", "foxes.models.partial_wakes.PartialAxiwake.new_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.sub_models", "foxes.models.partial_wakes.PartialDistSlicedWake", "foxes.models.partial_wakes.PartialDistSlicedWake.__init__", "foxes.models.partial_wakes.PartialDistSlicedWake.__repr__", "foxes.models.partial_wakes.PartialDistSlicedWake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.evaluate_results", "foxes.models.partial_wakes.PartialDistSlicedWake.initialize", "foxes.models.partial_wakes.PartialDistSlicedWake.new_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.sub_models", "foxes.models.partial_wakes.PartialGrid", "foxes.models.partial_wakes.PartialGrid.__init__", "foxes.models.partial_wakes.PartialGrid.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat", "foxes.models.partial_wakes.PartialTopHat.__init__", "foxes.models.partial_wakes.PartialTopHat.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.evaluate_results", "foxes.models.partial_wakes.PartialTopHat.initialize", "foxes.models.partial_wakes.PartialTopHat.new_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.sub_models", "foxes.models.partial_wakes.RotorPoints", "foxes.models.partial_wakes.RotorPoints.__init__", "foxes.models.partial_wakes.RotorPoints.contribute_to_wake_deltas", "foxes.models.partial_wakes.RotorPoints.evaluate_results", "foxes.models.partial_wakes.RotorPoints.get_wake_points", "foxes.models.partial_wakes.RotorPoints.new_wake_deltas", "foxes.models.point_models.SetUniformData", "foxes.models.point_models.SetUniformData.__init__", "foxes.models.point_models.SetUniformData.calculate", "foxes.models.point_models.SetUniformData.load_data", "foxes.models.point_models.SetUniformData.output_point_vars", "foxes.models.point_models.TKE2TI", "foxes.models.point_models.TKE2TI.calculate", "foxes.models.point_models.TKE2TI.output_point_vars", "foxes.models.point_models.WakeDeltas", "foxes.models.point_models.WakeDeltas.__init__", "foxes.models.point_models.WakeDeltas.calculate", "foxes.models.point_models.WakeDeltas.output_point_vars", "foxes.models.rotor_models.CentreRotor", "foxes.models.rotor_models.CentreRotor.design_points", "foxes.models.rotor_models.CentreRotor.eval_rpoint_results", "foxes.models.rotor_models.CentreRotor.get_rotor_points", "foxes.models.rotor_models.CentreRotor.n_rotor_points", "foxes.models.rotor_models.CentreRotor.rotor_point_weights", "foxes.models.rotor_models.GridRotor", "foxes.models.rotor_models.GridRotor.__init__", "foxes.models.rotor_models.GridRotor.__repr__", "foxes.models.rotor_models.GridRotor.design_points", "foxes.models.rotor_models.GridRotor.initialize", "foxes.models.rotor_models.GridRotor.n_rotor_points", "foxes.models.rotor_models.GridRotor.rotor_point_weights", "foxes.models.rotor_models.LevelRotor", "foxes.models.rotor_models.LevelRotor.__init__", "foxes.models.rotor_models.LevelRotor.__repr__", "foxes.models.rotor_models.LevelRotor.design_points", "foxes.models.rotor_models.LevelRotor.initialize", "foxes.models.rotor_models.LevelRotor.n_rotor_points", "foxes.models.rotor_models.LevelRotor.rotor_point_weights", "foxes.models.turbine_models.Calculator", "foxes.models.turbine_models.Calculator.__init__", "foxes.models.turbine_models.Calculator.calculate", "foxes.models.turbine_models.Calculator.output_farm_vars", "foxes.models.turbine_models.LookupTable", "foxes.models.turbine_models.LookupTable.__init__", "foxes.models.turbine_models.LookupTable.calculate", "foxes.models.turbine_models.LookupTable.load_data", "foxes.models.turbine_models.LookupTable.output_farm_vars", "foxes.models.turbine_models.PowerMask", "foxes.models.turbine_models.PowerMask.__init__", "foxes.models.turbine_models.PowerMask.calculate", "foxes.models.turbine_models.PowerMask.initialize", "foxes.models.turbine_models.PowerMask.output_farm_vars", "foxes.models.turbine_models.PowerMask.update_P_ct", "foxes.models.turbine_models.RotorCentreCalc", "foxes.models.turbine_models.RotorCentreCalc.__init__", "foxes.models.turbine_models.RotorCentreCalc.calculate", "foxes.models.turbine_models.RotorCentreCalc.initialize", "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars", "foxes.models.turbine_models.RotorCentreCalc.sub_models", "foxes.models.turbine_models.SectorManagement", "foxes.models.turbine_models.SectorManagement.__init__", "foxes.models.turbine_models.SectorManagement.calculate", "foxes.models.turbine_models.SectorManagement.initialize", "foxes.models.turbine_models.SectorManagement.output_farm_vars", "foxes.models.turbine_models.SetFarmVars", "foxes.models.turbine_models.SetFarmVars.__init__", "foxes.models.turbine_models.SetFarmVars.add_var", "foxes.models.turbine_models.SetFarmVars.calculate", "foxes.models.turbine_models.SetFarmVars.load_data", "foxes.models.turbine_models.SetFarmVars.output_farm_vars", "foxes.models.turbine_models.SetFarmVars.reset", "foxes.models.turbine_models.SetXYHD", "foxes.models.turbine_models.SetXYHD.__init__", "foxes.models.turbine_models.SetXYHD.calculate", "foxes.models.turbine_models.SetXYHD.output_farm_vars", "foxes.models.turbine_models.TableFactors", "foxes.models.turbine_models.TableFactors.__init__", "foxes.models.turbine_models.TableFactors.calculate", "foxes.models.turbine_models.TableFactors.initialize", "foxes.models.turbine_models.TableFactors.output_farm_vars", "foxes.models.turbine_models.Thrust2Ct", "foxes.models.turbine_models.Thrust2Ct.__init__", "foxes.models.turbine_models.Thrust2Ct.calculate", "foxes.models.turbine_models.Thrust2Ct.output_farm_vars", "foxes.models.turbine_models.YAW2YAWM", "foxes.models.turbine_models.YAW2YAWM.calculate", "foxes.models.turbine_models.YAW2YAWM.output_farm_vars", "foxes.models.turbine_models.YAWM2YAW", "foxes.models.turbine_models.YAWM2YAW.calculate", "foxes.models.turbine_models.YAWM2YAW.output_farm_vars", "foxes.models.turbine_models.kTI", "foxes.models.turbine_models.kTI.__init__", "foxes.models.turbine_models.kTI.__repr__", "foxes.models.turbine_models.kTI.calculate", "foxes.models.turbine_models.kTI.output_farm_vars", "foxes.models.turbine_types.CpCtFile", "foxes.models.turbine_types.CpCtFile.__init__", "foxes.models.turbine_types.CpCtFromTwo", "foxes.models.turbine_types.CpCtFromTwo.__init__", "foxes.models.turbine_types.NullType", "foxes.models.turbine_types.NullType.calculate", "foxes.models.turbine_types.NullType.output_farm_vars", "foxes.models.turbine_types.PCtFile", "foxes.models.turbine_types.PCtFile.__init__", "foxes.models.turbine_types.PCtFile.calculate", "foxes.models.turbine_types.PCtFile.finalize", "foxes.models.turbine_types.PCtFile.load_data", "foxes.models.turbine_types.PCtFile.output_farm_vars", "foxes.models.turbine_types.PCtFromTwo", "foxes.models.turbine_types.PCtFromTwo.__init__", "foxes.models.turbine_types.PCtFromTwo.calculate", "foxes.models.turbine_types.PCtFromTwo.finalize", "foxes.models.turbine_types.PCtFromTwo.load_data", "foxes.models.turbine_types.PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsRho2PCtFromTwo", "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate", "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize", "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data", "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsTI2PCtFromTwo", "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__", "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate", "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize", "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data", "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogStableWsProfile", "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogStableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogWsProfile", "foxes.models.vertical_profiles.ABLLogWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogWsProfile.input_vars", "foxes.models.vertical_profiles.DataProfile", "foxes.models.vertical_profiles.DataProfile.__init__", "foxes.models.vertical_profiles.DataProfile.calculate", "foxes.models.vertical_profiles.DataProfile.input_vars", "foxes.models.vertical_profiles.ShearedProfile", "foxes.models.vertical_profiles.ShearedProfile.calculate", "foxes.models.vertical_profiles.ShearedProfile.input_vars", "foxes.models.vertical_profiles.UniformProfile", "foxes.models.vertical_profiles.UniformProfile.__init__", "foxes.models.vertical_profiles.UniformProfile.calculate", "foxes.models.vertical_profiles.UniformProfile.input_vars", "foxes.models.wake_frames.FarmOrder", "foxes.models.wake_frames.FarmOrder.__init__", "foxes.models.wake_frames.FarmOrder.calc_order", "foxes.models.wake_frames.FarmOrder.get_centreline_points", "foxes.models.wake_frames.FarmOrder.get_wake_coos", "foxes.models.wake_frames.FarmOrder.sub_models", "foxes.models.wake_frames.RotorWD", "foxes.models.wake_frames.RotorWD.__init__", "foxes.models.wake_frames.RotorWD.calc_order", "foxes.models.wake_frames.RotorWD.get_centreline_points", "foxes.models.wake_frames.RotorWD.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes", "foxes.models.wake_frames.SeqDynamicWakes.__init__", "foxes.models.wake_frames.SeqDynamicWakes.calc_order", "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data", "foxes.models.wake_frames.SeqDynamicWakes.initialize", "foxes.models.wake_frames.Streamlines2D", "foxes.models.wake_frames.Streamlines2D.__init__", "foxes.models.wake_frames.Streamlines2D.__repr__", "foxes.models.wake_frames.Streamlines2D.calc_order", "foxes.models.wake_frames.Streamlines2D.get_centreline_points", "foxes.models.wake_frames.Streamlines2D.get_streamline_data", "foxes.models.wake_frames.Streamlines2D.get_wake_coos", "foxes.models.wake_frames.Timelines", "foxes.models.wake_frames.Timelines.__init__", "foxes.models.wake_frames.Timelines.calc_order", "foxes.models.wake_frames.Timelines.get_centreline_points", "foxes.models.wake_frames.Timelines.get_wake_coos", "foxes.models.wake_frames.Timelines.initialize", "foxes.models.wake_frames.YawedWakes", "foxes.models.wake_frames.YawedWakes.__init__", "foxes.models.wake_frames.YawedWakes.calc_order", "foxes.models.wake_frames.YawedWakes.get_centreline_points", "foxes.models.wake_frames.YawedWakes.get_wake_coos", "foxes.models.wake_frames.YawedWakes.initialize", "foxes.models.wake_frames.YawedWakes.sub_models", "foxes.models.wake_models.AxisymmetricWakeModel", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel", "foxes.models.wake_models.DistSlicedWakeModel.__init__", "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel.contribute_to_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.initialize", "foxes.models.wake_models.DistSlicedWakeModel.sub_models", "foxes.models.wake_models.GaussianWakeModel", "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma_spsel", "foxes.models.wake_models.GaussianWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.GroundMirror", "foxes.models.wake_models.GroundMirror.__init__", "foxes.models.wake_models.TopHatWakeModel", "foxes.models.wake_models.TopHatWakeModel.__init__", "foxes.models.wake_models.TopHatWakeModel.calc_centreline_wake_deltas", "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius", "foxes.models.wake_models.TopHatWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.TopHatWakeModel.initialize", "foxes.models.wake_models.TopHatWakeModel.sub_models", "foxes.models.wake_models.WakeMirror", "foxes.models.wake_models.WakeMirror.__init__", "foxes.models.wake_models.WakeMirror.contribute_to_wake_deltas", "foxes.models.wake_models.WakeMirror.finalize_wake_deltas", "foxes.models.wake_models.WakeMirror.init_wake_deltas", "foxes.models.wake_models.WakeMirror.sub_models", "foxes.models.wake_models.induction.RankineHalfBody", "foxes.models.wake_models.induction.RankineHalfBody.__init__", "foxes.models.wake_models.induction.RankineHalfBody.contribute_to_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.init_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.initialize", "foxes.models.wake_models.induction.RankineHalfBody.sub_models", "foxes.models.wake_models.induction.Rathmann", "foxes.models.wake_models.induction.Rathmann.__init__", "foxes.models.wake_models.induction.Rathmann.contribute_to_wake_deltas", "foxes.models.wake_models.induction.Rathmann.init_wake_deltas", "foxes.models.wake_models.induction.Rathmann.initialize", "foxes.models.wake_models.induction.Rathmann.sub_models", "foxes.models.wake_models.induction.SelfSimilar", "foxes.models.wake_models.induction.SelfSimilar.__init__", "foxes.models.wake_models.induction.SelfSimilar.contribute_to_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.init_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.initialize", "foxes.models.wake_models.induction.SelfSimilar.sub_models", "foxes.models.wake_models.induction.SelfSimilar2020", "foxes.models.wake_models.ti.CrespoHernandezTIWake", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__repr__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius", "foxes.models.wake_models.ti.CrespoHernandezTIWake.init_wake_deltas", "foxes.models.wake_models.ti.IECTIWake", "foxes.models.wake_models.ti.IECTIWake.__init__", "foxes.models.wake_models.ti.IECTIWake.__repr__", "foxes.models.wake_models.ti.IECTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius", "foxes.models.wake_models.ti.IECTIWake.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014", "foxes.models.wake_models.wind.Bastankhah2014.__init__", "foxes.models.wake_models.wind.Bastankhah2014.__repr__", "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.Bastankhah2014.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014.initialize", "foxes.models.wake_models.wind.Bastankhah2014.sub_models", "foxes.models.wake_models.wind.Bastankhah2016", "foxes.models.wake_models.wind.Bastankhah2016.__init__", "foxes.models.wake_models.wind.Bastankhah2016.__repr__", "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_spsel_x_yz", "foxes.models.wake_models.wind.Bastankhah2016.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2016.initialize", "foxes.models.wake_models.wind.Bastankhah2016.sub_models", "foxes.models.wake_models.wind.Bastankhah2016Model", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.CHECK", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.MDATA_KEY", "foxes.models.wake_models.wind.Bastankhah2016Model.NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.PARS", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC_S", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Y_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Z_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SP_SEL", "foxes.models.wake_models.wind.Bastankhah2016Model.X0", "foxes.models.wake_models.wind.Bastankhah2016Model.__init__", "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data", "foxes.models.wake_models.wind.Bastankhah2016Model.clean", "foxes.models.wake_models.wind.Bastankhah2016Model.get_data", "foxes.models.wake_models.wind.Bastankhah2016Model.has_data", "foxes.models.wake_models.wind.Bastankhah2016Model.initialize", "foxes.models.wake_models.wind.Bastankhah2016Model.pars", "foxes.models.wake_models.wind.Bastankhah2016Model.sub_models", "foxes.models.wake_models.wind.JensenWake", "foxes.models.wake_models.wind.JensenWake.__init__", "foxes.models.wake_models.wind.JensenWake.__repr__", "foxes.models.wake_models.wind.JensenWake.calc_centreline_wake_deltas", "foxes.models.wake_models.wind.JensenWake.calc_wake_radius", "foxes.models.wake_models.wind.JensenWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake", "foxes.models.wake_models.wind.TurbOParkWake.__init__", "foxes.models.wake_models.wind.TurbOParkWake.__repr__", "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake.initialize", "foxes.models.wake_models.wind.TurbOParkWake.sub_models", "foxes.models.wake_models.wind.TurbOParkWakeIX", "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__", "foxes.models.wake_models.wind.TurbOParkWakeIX.__repr__", "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize", "foxes.models.wake_models.wind.TurbOParkWakeIX.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize", "foxes.models.wake_models.wind.TurbOParkWakeIX.sub_models", "foxes.models.wake_superpositions.TILinear", "foxes.models.wake_superpositions.TILinear.__init__", "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta", "foxes.models.wake_superpositions.TILinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIMax", "foxes.models.wake_superpositions.TIMax.__init__", "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta", "foxes.models.wake_superpositions.TIMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIPow", "foxes.models.wake_superpositions.TIPow.__init__", "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta", "foxes.models.wake_superpositions.TIPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIQuadratic", "foxes.models.wake_superpositions.TIQuadratic.__init__", "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.TIQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear", "foxes.models.wake_superpositions.WSLinear.__init__", "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear.input_farm_vars", "foxes.models.wake_superpositions.WSMax", "foxes.models.wake_superpositions.WSMax.__init__", "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSMax.input_farm_vars", "foxes.models.wake_superpositions.WSPow", "foxes.models.wake_superpositions.WSPow.__init__", "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSPow.input_farm_vars", "foxes.models.wake_superpositions.WSProduct", "foxes.models.wake_superpositions.WSProduct.__init__", "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta", "foxes.models.wake_superpositions.WSProduct.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSProduct.input_farm_vars", "foxes.models.wake_superpositions.WSQuadratic", "foxes.models.wake_superpositions.WSQuadratic.__init__", "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars", "foxes.output.Animator", "foxes.output.Animator.__init__", "foxes.output.Animator.add_generator", "foxes.output.Animator.animate", "foxes.output.Animator.generators", "foxes.output.FarmLayoutOutput", "foxes.output.FarmLayoutOutput.__init__", "foxes.output.FarmLayoutOutput.get_figure", "foxes.output.FarmLayoutOutput.get_layout_data", "foxes.output.FarmLayoutOutput.get_layout_dict", "foxes.output.FarmLayoutOutput.write_csv", "foxes.output.FarmLayoutOutput.write_json", "foxes.output.FarmLayoutOutput.write_plot", "foxes.output.FarmLayoutOutput.write_xyh", "foxes.output.FarmResultsEval", "foxes.output.FarmResultsEval.__init__", "foxes.output.FarmResultsEval.add_capacity", "foxes.output.FarmResultsEval.add_efficiency", "foxes.output.FarmResultsEval.calc_farm_efficiency", "foxes.output.FarmResultsEval.calc_farm_mean", "foxes.output.FarmResultsEval.calc_farm_sum", "foxes.output.FarmResultsEval.calc_farm_yield", "foxes.output.FarmResultsEval.calc_mean_farm_power", "foxes.output.FarmResultsEval.calc_states_mean", "foxes.output.FarmResultsEval.calc_states_std", "foxes.output.FarmResultsEval.calc_states_sum", "foxes.output.FarmResultsEval.calc_turbine_mean", "foxes.output.FarmResultsEval.calc_turbine_sum", "foxes.output.FarmResultsEval.calc_turbine_yield", "foxes.output.FarmResultsEval.gen_stdata", "foxes.output.FarmResultsEval.reduce_all", "foxes.output.FarmResultsEval.reduce_states", "foxes.output.FarmResultsEval.reduce_turbines", "foxes.output.FarmResultsEval.weinsum", "foxes.output.FlowPlots2D", "foxes.output.FlowPlots2D.gen_states_fig_xy", "foxes.output.FlowPlots2D.gen_states_fig_xz", "foxes.output.FlowPlots2D.gen_states_fig_yz", "foxes.output.FlowPlots2D.get_mean_fig_xy", "foxes.output.FlowPlots2D.get_mean_fig_xz", "foxes.output.FlowPlots2D.get_mean_fig_yz", "foxes.output.Output", "foxes.output.Output.__init__", "foxes.output.Output.get_fpath", "foxes.output.Output.new", "foxes.output.Output.print_models", "foxes.output.Output.write", "foxes.output.PointCalculator", "foxes.output.PointCalculator.__init__", "foxes.output.PointCalculator.calculate", "foxes.output.ResultsWriter", "foxes.output.ResultsWriter.__init__", "foxes.output.ResultsWriter.write_csv", "foxes.output.ResultsWriter.write_nc", "foxes.output.RosePlotOutput", "foxes.output.RosePlotOutput.__init__", "foxes.output.RosePlotOutput.get_data", "foxes.output.RosePlotOutput.get_data_info", "foxes.output.RosePlotOutput.get_figure", "foxes.output.RosePlotOutput.write_figure", "foxes.output.SeqFlowAnimationPlugin", "foxes.output.SeqFlowAnimationPlugin.__init__", "foxes.output.SeqFlowAnimationPlugin.gen_images", "foxes.output.SeqFlowAnimationPlugin.initialize", "foxes.output.SeqFlowAnimationPlugin.update", "foxes.output.SliceData", "foxes.output.SliceData.__init__", "foxes.output.SliceData.get_mean_data_xy", "foxes.output.SliceData.get_mean_data_xz", "foxes.output.SliceData.get_mean_data_yz", "foxes.output.SliceData.get_states_data_xy", "foxes.output.SliceData.get_states_data_xz", "foxes.output.SliceData.get_states_data_yz", "foxes.output.StateTurbineMap", "foxes.output.StateTurbineMap.__init__", "foxes.output.StateTurbineMap.plot_map", "foxes.output.StatesRosePlotOutput", "foxes.output.StatesRosePlotOutput.__init__", "foxes.output.TurbineTypeCurves", "foxes.output.TurbineTypeCurves.__init__", "foxes.output.TurbineTypeCurves.plot_curves", "foxes.output.flow_plots_2d.get_fig", "foxes.utils.DataBook", "foxes.utils.DataBook.__init__", "foxes.utils.DataBook.add_data_package", "foxes.utils.DataBook.add_data_package_file", "foxes.utils.DataBook.add_file", "foxes.utils.DataBook.add_files", "foxes.utils.DataBook.get_file_path", "foxes.utils.DataBook.toc", "foxes.utils.PandasFileHelper", "foxes.utils.PandasFileHelper.DATA_FILE_FORMATS", "foxes.utils.PandasFileHelper.DEFAULT_FORMAT_DICT", "foxes.utils.PandasFileHelper.DEFAULT_READING_PARAMETERS", "foxes.utils.PandasFileHelper.DEFAULT_WRITING_PARAMETERS", "foxes.utils.PandasFileHelper.read_file", "foxes.utils.PandasFileHelper.write_file", "foxes.utils.TabWindroseAxes", "foxes.utils.TabWindroseAxes.ArtistList", "foxes.utils.TabWindroseAxes.ArtistList.__getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__init__", "foxes.utils.TabWindroseAxes.ArtistList.__repr__", "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__", "foxes.utils.TabWindroseAxes.ArtistList.count", "foxes.utils.TabWindroseAxes.ArtistList.index", "foxes.utils.TabWindroseAxes.InvertedPolarTransform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init_subclass__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__str__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.depth", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.frozen", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_matrix", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.input_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.invalidate", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.inverted", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_separable", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.output_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.pass_through", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point", "foxes.utils.TabWindroseAxes.PolarAffine", "foxes.utils.TabWindroseAxes.PolarAffine.__array__", "foxes.utils.TabWindroseAxes.PolarAffine.__eq__", "foxes.utils.TabWindroseAxes.PolarAffine.__init__", "foxes.utils.TabWindroseAxes.PolarAffine.__str__", "foxes.utils.TabWindroseAxes.PolarAffine.frozen", "foxes.utils.TabWindroseAxes.PolarAffine.get_affine", "foxes.utils.TabWindroseAxes.PolarAffine.get_matrix", "foxes.utils.TabWindroseAxes.PolarAffine.has_inverse", "foxes.utils.TabWindroseAxes.PolarAffine.input_dims", "foxes.utils.TabWindroseAxes.PolarAffine.inverted", "foxes.utils.TabWindroseAxes.PolarAffine.is_affine", "foxes.utils.TabWindroseAxes.PolarAffine.is_separable", "foxes.utils.TabWindroseAxes.PolarAffine.output_dims", "foxes.utils.TabWindroseAxes.PolarAffine.to_values", "foxes.utils.TabWindroseAxes.PolarAffine.transform", "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform", "foxes.utils.TabWindroseAxes.PolarTransform.__init__", "foxes.utils.TabWindroseAxes.PolarTransform.__str__", "foxes.utils.TabWindroseAxes.PolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.PolarTransform.input_dims", "foxes.utils.TabWindroseAxes.PolarTransform.inverted", "foxes.utils.TabWindroseAxes.PolarTransform.output_dims", "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.RadialLocator", "foxes.utils.TabWindroseAxes.RadialLocator.MAXTICKS", "foxes.utils.TabWindroseAxes.RadialLocator.__call__", "foxes.utils.TabWindroseAxes.RadialLocator.__init__", "foxes.utils.TabWindroseAxes.RadialLocator.axis", "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis", "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular", "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds", "foxes.utils.TabWindroseAxes.RadialLocator.set_axis", "foxes.utils.TabWindroseAxes.RadialLocator.set_params", "foxes.utils.TabWindroseAxes.RadialLocator.tick_values", "foxes.utils.TabWindroseAxes.RadialLocator.view_limits", "foxes.utils.TabWindroseAxes.ThetaFormatter", "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__", "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks", "foxes.utils.TabWindroseAxes.ThetaFormatter.get_offset", "foxes.utils.TabWindroseAxes.ThetaFormatter.locs", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs", "foxes.utils.TabWindroseAxes.ThetaLocator", "foxes.utils.TabWindroseAxes.ThetaLocator.__call__", "foxes.utils.TabWindroseAxes.ThetaLocator.__init__", "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular", "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis", "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits", "foxes.utils.TabWindroseAxes.__init__", "foxes.utils.TabWindroseAxes.__init_subclass__", "foxes.utils.TabWindroseAxes.__repr__", "foxes.utils.TabWindroseAxes.__str__", "foxes.utils.TabWindroseAxes.acorr", "foxes.utils.TabWindroseAxes.add_artist", "foxes.utils.TabWindroseAxes.add_callback", "foxes.utils.TabWindroseAxes.add_child_axes", "foxes.utils.TabWindroseAxes.add_collection", "foxes.utils.TabWindroseAxes.add_container", "foxes.utils.TabWindroseAxes.add_image", "foxes.utils.TabWindroseAxes.add_line", "foxes.utils.TabWindroseAxes.add_patch", "foxes.utils.TabWindroseAxes.add_table", "foxes.utils.TabWindroseAxes.angle_spectrum", "foxes.utils.TabWindroseAxes.annotate", "foxes.utils.TabWindroseAxes.apply_aspect", "foxes.utils.TabWindroseAxes.arrow", "foxes.utils.TabWindroseAxes.artists", "foxes.utils.TabWindroseAxes.autoscale", "foxes.utils.TabWindroseAxes.autoscale_view", "foxes.utils.TabWindroseAxes.axes", "foxes.utils.TabWindroseAxes.axhline", "foxes.utils.TabWindroseAxes.axhspan", "foxes.utils.TabWindroseAxes.axis", "foxes.utils.TabWindroseAxes.axline", "foxes.utils.TabWindroseAxes.axvline", "foxes.utils.TabWindroseAxes.axvspan", "foxes.utils.TabWindroseAxes.bar", "foxes.utils.TabWindroseAxes.bar_label", "foxes.utils.TabWindroseAxes.barbs", "foxes.utils.TabWindroseAxes.barh", "foxes.utils.TabWindroseAxes.box", "foxes.utils.TabWindroseAxes.boxplot", "foxes.utils.TabWindroseAxes.broken_barh", "foxes.utils.TabWindroseAxes.bxp", "foxes.utils.TabWindroseAxes.can_pan", "foxes.utils.TabWindroseAxes.can_zoom", "foxes.utils.TabWindroseAxes.cla", "foxes.utils.TabWindroseAxes.clabel", "foxes.utils.TabWindroseAxes.clear", "foxes.utils.TabWindroseAxes.cohere", "foxes.utils.TabWindroseAxes.collections", "foxes.utils.TabWindroseAxes.contains", "foxes.utils.TabWindroseAxes.contains_point", "foxes.utils.TabWindroseAxes.contour", "foxes.utils.TabWindroseAxes.contourf", "foxes.utils.TabWindroseAxes.convert_xunits", "foxes.utils.TabWindroseAxes.convert_yunits", "foxes.utils.TabWindroseAxes.csd", "foxes.utils.TabWindroseAxes.drag_pan", "foxes.utils.TabWindroseAxes.draw", "foxes.utils.TabWindroseAxes.draw_artist", "foxes.utils.TabWindroseAxes.end_pan", "foxes.utils.TabWindroseAxes.errorbar", "foxes.utils.TabWindroseAxes.eventplot", "foxes.utils.TabWindroseAxes.fill", "foxes.utils.TabWindroseAxes.fill_between", "foxes.utils.TabWindroseAxes.fill_betweenx", "foxes.utils.TabWindroseAxes.findobj", "foxes.utils.TabWindroseAxes.format_coord", "foxes.utils.TabWindroseAxes.format_cursor_data", "foxes.utils.TabWindroseAxes.format_xdata", "foxes.utils.TabWindroseAxes.format_ydata", "foxes.utils.TabWindroseAxes.from_ax", "foxes.utils.TabWindroseAxes.get_adjustable", "foxes.utils.TabWindroseAxes.get_agg_filter", "foxes.utils.TabWindroseAxes.get_alpha", "foxes.utils.TabWindroseAxes.get_anchor", "foxes.utils.TabWindroseAxes.get_animated", "foxes.utils.TabWindroseAxes.get_aspect", "foxes.utils.TabWindroseAxes.get_autoscale_on", "foxes.utils.TabWindroseAxes.get_autoscalex_on", "foxes.utils.TabWindroseAxes.get_autoscaley_on", "foxes.utils.TabWindroseAxes.get_axes_locator", "foxes.utils.TabWindroseAxes.get_axisbelow", "foxes.utils.TabWindroseAxes.get_box_aspect", "foxes.utils.TabWindroseAxes.get_children", "foxes.utils.TabWindroseAxes.get_clip_box", "foxes.utils.TabWindroseAxes.get_clip_on", "foxes.utils.TabWindroseAxes.get_clip_path", "foxes.utils.TabWindroseAxes.get_cursor_data", "foxes.utils.TabWindroseAxes.get_data_ratio", "foxes.utils.TabWindroseAxes.get_default_bbox_extra_artists", "foxes.utils.TabWindroseAxes.get_facecolor", "foxes.utils.TabWindroseAxes.get_fc", "foxes.utils.TabWindroseAxes.get_figure", "foxes.utils.TabWindroseAxes.get_frame_on", "foxes.utils.TabWindroseAxes.get_gid", "foxes.utils.TabWindroseAxes.get_gridspec", "foxes.utils.TabWindroseAxes.get_images", "foxes.utils.TabWindroseAxes.get_in_layout", "foxes.utils.TabWindroseAxes.get_label", "foxes.utils.TabWindroseAxes.get_legend", "foxes.utils.TabWindroseAxes.get_legend_handles_labels", "foxes.utils.TabWindroseAxes.get_lines", "foxes.utils.TabWindroseAxes.get_mouseover", "foxes.utils.TabWindroseAxes.get_navigate", "foxes.utils.TabWindroseAxes.get_navigate_mode", "foxes.utils.TabWindroseAxes.get_path_effects", "foxes.utils.TabWindroseAxes.get_picker", "foxes.utils.TabWindroseAxes.get_position", "foxes.utils.TabWindroseAxes.get_rasterization_zorder", "foxes.utils.TabWindroseAxes.get_rasterized", "foxes.utils.TabWindroseAxes.get_renderer_cache", "foxes.utils.TabWindroseAxes.get_rlabel_position", "foxes.utils.TabWindroseAxes.get_rmax", "foxes.utils.TabWindroseAxes.get_rmin", "foxes.utils.TabWindroseAxes.get_rorigin", "foxes.utils.TabWindroseAxes.get_rsign", "foxes.utils.TabWindroseAxes.get_shared_x_axes", "foxes.utils.TabWindroseAxes.get_shared_y_axes", "foxes.utils.TabWindroseAxes.get_sketch_params", "foxes.utils.TabWindroseAxes.get_snap", "foxes.utils.TabWindroseAxes.get_subplotspec", "foxes.utils.TabWindroseAxes.get_theta_direction", "foxes.utils.TabWindroseAxes.get_theta_offset", "foxes.utils.TabWindroseAxes.get_thetamax", "foxes.utils.TabWindroseAxes.get_thetamin", "foxes.utils.TabWindroseAxes.get_tightbbox", "foxes.utils.TabWindroseAxes.get_title", "foxes.utils.TabWindroseAxes.get_transform", "foxes.utils.TabWindroseAxes.get_transformed_clip_path_and_affine", "foxes.utils.TabWindroseAxes.get_url", "foxes.utils.TabWindroseAxes.get_visible", "foxes.utils.TabWindroseAxes.get_window_extent", "foxes.utils.TabWindroseAxes.get_xaxis", "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_xaxis_transform", "foxes.utils.TabWindroseAxes.get_xbound", "foxes.utils.TabWindroseAxes.get_xgridlines", "foxes.utils.TabWindroseAxes.get_xlabel", "foxes.utils.TabWindroseAxes.get_xlim", "foxes.utils.TabWindroseAxes.get_xmajorticklabels", "foxes.utils.TabWindroseAxes.get_xminorticklabels", "foxes.utils.TabWindroseAxes.get_xscale", "foxes.utils.TabWindroseAxes.get_xticklabels", "foxes.utils.TabWindroseAxes.get_xticklines", "foxes.utils.TabWindroseAxes.get_xticks", "foxes.utils.TabWindroseAxes.get_yaxis", "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_yaxis_transform", "foxes.utils.TabWindroseAxes.get_ybound", "foxes.utils.TabWindroseAxes.get_ygridlines", "foxes.utils.TabWindroseAxes.get_ylabel", "foxes.utils.TabWindroseAxes.get_ylim", "foxes.utils.TabWindroseAxes.get_ymajorticklabels", "foxes.utils.TabWindroseAxes.get_yminorticklabels", "foxes.utils.TabWindroseAxes.get_yscale", "foxes.utils.TabWindroseAxes.get_yticklabels", "foxes.utils.TabWindroseAxes.get_yticklines", "foxes.utils.TabWindroseAxes.get_yticks", "foxes.utils.TabWindroseAxes.get_zorder", "foxes.utils.TabWindroseAxes.grid", "foxes.utils.TabWindroseAxes.has_data", "foxes.utils.TabWindroseAxes.have_units", "foxes.utils.TabWindroseAxes.hexbin", "foxes.utils.TabWindroseAxes.hist", "foxes.utils.TabWindroseAxes.hist2d", "foxes.utils.TabWindroseAxes.hlines", "foxes.utils.TabWindroseAxes.images", "foxes.utils.TabWindroseAxes.imshow", "foxes.utils.TabWindroseAxes.in_axes", "foxes.utils.TabWindroseAxes.indicate_inset", "foxes.utils.TabWindroseAxes.indicate_inset_zoom", "foxes.utils.TabWindroseAxes.inset_axes", "foxes.utils.TabWindroseAxes.invert_xaxis", "foxes.utils.TabWindroseAxes.invert_yaxis", "foxes.utils.TabWindroseAxes.is_transform_set", "foxes.utils.TabWindroseAxes.label_outer", "foxes.utils.TabWindroseAxes.legend", "foxes.utils.TabWindroseAxes.lines", "foxes.utils.TabWindroseAxes.locator_params", "foxes.utils.TabWindroseAxes.loglog", "foxes.utils.TabWindroseAxes.magnitude_spectrum", "foxes.utils.TabWindroseAxes.margins", "foxes.utils.TabWindroseAxes.matshow", "foxes.utils.TabWindroseAxes.minorticks_off", "foxes.utils.TabWindroseAxes.minorticks_on", "foxes.utils.TabWindroseAxes.mouseover", "foxes.utils.TabWindroseAxes.name", "foxes.utils.TabWindroseAxes.patches", "foxes.utils.TabWindroseAxes.pchanged", "foxes.utils.TabWindroseAxes.pcolor", "foxes.utils.TabWindroseAxes.pcolorfast", "foxes.utils.TabWindroseAxes.pcolormesh", "foxes.utils.TabWindroseAxes.phase_spectrum", "foxes.utils.TabWindroseAxes.pick", "foxes.utils.TabWindroseAxes.pickable", "foxes.utils.TabWindroseAxes.pie", "foxes.utils.TabWindroseAxes.plot", "foxes.utils.TabWindroseAxes.plot_date", "foxes.utils.TabWindroseAxes.properties", "foxes.utils.TabWindroseAxes.psd", "foxes.utils.TabWindroseAxes.quiver", "foxes.utils.TabWindroseAxes.quiverkey", "foxes.utils.TabWindroseAxes.redraw_in_frame", "foxes.utils.TabWindroseAxes.relim", "foxes.utils.TabWindroseAxes.remove", "foxes.utils.TabWindroseAxes.remove_callback", "foxes.utils.TabWindroseAxes.reset_position", "foxes.utils.TabWindroseAxes.scatter", "foxes.utils.TabWindroseAxes.secondary_xaxis", "foxes.utils.TabWindroseAxes.secondary_yaxis", "foxes.utils.TabWindroseAxes.semilogx", "foxes.utils.TabWindroseAxes.semilogy", "foxes.utils.TabWindroseAxes.set", "foxes.utils.TabWindroseAxes.set_adjustable", "foxes.utils.TabWindroseAxes.set_agg_filter", "foxes.utils.TabWindroseAxes.set_alpha", "foxes.utils.TabWindroseAxes.set_anchor", "foxes.utils.TabWindroseAxes.set_animated", "foxes.utils.TabWindroseAxes.set_aspect", "foxes.utils.TabWindroseAxes.set_autoscale_on", "foxes.utils.TabWindroseAxes.set_autoscalex_on", "foxes.utils.TabWindroseAxes.set_autoscaley_on", "foxes.utils.TabWindroseAxes.set_axes_locator", "foxes.utils.TabWindroseAxes.set_axis_off", "foxes.utils.TabWindroseAxes.set_axis_on", "foxes.utils.TabWindroseAxes.set_axisbelow", "foxes.utils.TabWindroseAxes.set_box_aspect", "foxes.utils.TabWindroseAxes.set_clip_box", "foxes.utils.TabWindroseAxes.set_clip_on", "foxes.utils.TabWindroseAxes.set_clip_path", "foxes.utils.TabWindroseAxes.set_facecolor", "foxes.utils.TabWindroseAxes.set_fc", "foxes.utils.TabWindroseAxes.set_figure", "foxes.utils.TabWindroseAxes.set_frame_on", "foxes.utils.TabWindroseAxes.set_gid", "foxes.utils.TabWindroseAxes.set_in_layout", "foxes.utils.TabWindroseAxes.set_label", "foxes.utils.TabWindroseAxes.set_legend", "foxes.utils.TabWindroseAxes.set_mouseover", "foxes.utils.TabWindroseAxes.set_navigate", "foxes.utils.TabWindroseAxes.set_navigate_mode", "foxes.utils.TabWindroseAxes.set_path_effects", "foxes.utils.TabWindroseAxes.set_picker", "foxes.utils.TabWindroseAxes.set_position", "foxes.utils.TabWindroseAxes.set_prop_cycle", "foxes.utils.TabWindroseAxes.set_radii_angle", "foxes.utils.TabWindroseAxes.set_rasterization_zorder", "foxes.utils.TabWindroseAxes.set_rasterized", "foxes.utils.TabWindroseAxes.set_rgrids", "foxes.utils.TabWindroseAxes.set_rlabel_position", "foxes.utils.TabWindroseAxes.set_rlim", "foxes.utils.TabWindroseAxes.set_rmax", "foxes.utils.TabWindroseAxes.set_rmin", "foxes.utils.TabWindroseAxes.set_rorigin", "foxes.utils.TabWindroseAxes.set_rscale", "foxes.utils.TabWindroseAxes.set_rticks", "foxes.utils.TabWindroseAxes.set_sketch_params", "foxes.utils.TabWindroseAxes.set_snap", "foxes.utils.TabWindroseAxes.set_subplotspec", "foxes.utils.TabWindroseAxes.set_theta_direction", "foxes.utils.TabWindroseAxes.set_theta_offset", "foxes.utils.TabWindroseAxes.set_theta_zero_location", "foxes.utils.TabWindroseAxes.set_thetagrids", "foxes.utils.TabWindroseAxes.set_thetalim", "foxes.utils.TabWindroseAxes.set_thetamax", "foxes.utils.TabWindroseAxes.set_thetamin", "foxes.utils.TabWindroseAxes.set_title", "foxes.utils.TabWindroseAxes.set_transform", "foxes.utils.TabWindroseAxes.set_url", "foxes.utils.TabWindroseAxes.set_visible", "foxes.utils.TabWindroseAxes.set_xbound", "foxes.utils.TabWindroseAxes.set_xlabel", "foxes.utils.TabWindroseAxes.set_xlim", "foxes.utils.TabWindroseAxes.set_xmargin", "foxes.utils.TabWindroseAxes.set_xscale", "foxes.utils.TabWindroseAxes.set_xticklabels", "foxes.utils.TabWindroseAxes.set_xticks", "foxes.utils.TabWindroseAxes.set_ybound", "foxes.utils.TabWindroseAxes.set_ylabel", "foxes.utils.TabWindroseAxes.set_ylim", "foxes.utils.TabWindroseAxes.set_ymargin", "foxes.utils.TabWindroseAxes.set_yscale", "foxes.utils.TabWindroseAxes.set_yticklabels", "foxes.utils.TabWindroseAxes.set_yticks", "foxes.utils.TabWindroseAxes.set_zorder", "foxes.utils.TabWindroseAxes.sharex", "foxes.utils.TabWindroseAxes.sharey", "foxes.utils.TabWindroseAxes.specgram", "foxes.utils.TabWindroseAxes.spy", "foxes.utils.TabWindroseAxes.stackplot", "foxes.utils.TabWindroseAxes.stairs", "foxes.utils.TabWindroseAxes.stale", "foxes.utils.TabWindroseAxes.start_pan", "foxes.utils.TabWindroseAxes.stem", "foxes.utils.TabWindroseAxes.step", "foxes.utils.TabWindroseAxes.sticky_edges", "foxes.utils.TabWindroseAxes.streamplot", "foxes.utils.TabWindroseAxes.table", "foxes.utils.TabWindroseAxes.tables", "foxes.utils.TabWindroseAxes.text", "foxes.utils.TabWindroseAxes.texts", "foxes.utils.TabWindroseAxes.tick_params", "foxes.utils.TabWindroseAxes.ticklabel_format", "foxes.utils.TabWindroseAxes.tricontour", "foxes.utils.TabWindroseAxes.tricontourf", "foxes.utils.TabWindroseAxes.tripcolor", "foxes.utils.TabWindroseAxes.triplot", "foxes.utils.TabWindroseAxes.twinx", "foxes.utils.TabWindroseAxes.twiny", "foxes.utils.TabWindroseAxes.update", "foxes.utils.TabWindroseAxes.update_datalim", "foxes.utils.TabWindroseAxes.update_from", "foxes.utils.TabWindroseAxes.use_sticky_edges", "foxes.utils.TabWindroseAxes.viewLim", "foxes.utils.TabWindroseAxes.violin", "foxes.utils.TabWindroseAxes.violinplot", "foxes.utils.TabWindroseAxes.vlines", "foxes.utils.TabWindroseAxes.xaxis_date", "foxes.utils.TabWindroseAxes.xaxis_inverted", "foxes.utils.TabWindroseAxes.xcorr", "foxes.utils.TabWindroseAxes.yaxis_date", "foxes.utils.TabWindroseAxes.yaxis_inverted", "foxes.utils.TabWindroseAxes.zorder", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.lgz", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.logz", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.all_subclasses", "foxes.utils.cubic_roots", "foxes.utils.delta_wd", "foxes.utils.exec_python", "foxes.utils.geom2d.AreaGeometry", "foxes.utils.geom2d.AreaGeometry.add_to_figure", "foxes.utils.geom2d.AreaGeometry.inverse", "foxes.utils.geom2d.AreaGeometry.p_max", "foxes.utils.geom2d.AreaGeometry.p_min", "foxes.utils.geom2d.AreaGeometry.points_distance", "foxes.utils.geom2d.AreaGeometry.points_inside", "foxes.utils.geom2d.AreaIntersection", "foxes.utils.geom2d.AreaIntersection.__new__", "foxes.utils.geom2d.AreaUnion", "foxes.utils.geom2d.AreaUnion.__init__", "foxes.utils.geom2d.AreaUnion.add_to_figure", "foxes.utils.geom2d.AreaUnion.inverse", "foxes.utils.geom2d.AreaUnion.p_max", "foxes.utils.geom2d.AreaUnion.p_min", "foxes.utils.geom2d.AreaUnion.points_distance", "foxes.utils.geom2d.AreaUnion.points_inside", "foxes.utils.geom2d.Circle", "foxes.utils.geom2d.Circle.__init__", "foxes.utils.geom2d.Circle.add_to_figure", "foxes.utils.geom2d.Circle.p_max", "foxes.utils.geom2d.Circle.p_min", "foxes.utils.geom2d.Circle.points_distance", "foxes.utils.geom2d.Circle.points_inside", "foxes.utils.geom2d.ClosedPolygon", "foxes.utils.geom2d.ClosedPolygon.__init__", "foxes.utils.geom2d.ClosedPolygon.add_to_figure", "foxes.utils.geom2d.ClosedPolygon.p_max", "foxes.utils.geom2d.ClosedPolygon.p_min", "foxes.utils.geom2d.ClosedPolygon.points_distance", "foxes.utils.geom2d.ClosedPolygon.points_inside", "foxes.utils.geom2d.HalfPlane", "foxes.utils.geom2d.HalfPlane.__init__", "foxes.utils.geom2d.HalfPlane.add_to_figure", "foxes.utils.geom2d.HalfPlane.inverse", "foxes.utils.geom2d.HalfPlane.p_max", "foxes.utils.geom2d.HalfPlane.p_min", "foxes.utils.geom2d.HalfPlane.points_distance", "foxes.utils.geom2d.HalfPlane.points_inside", "foxes.utils.geom2d.InvertedAreaGeometry", "foxes.utils.geom2d.InvertedAreaGeometry.__init__", "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure", "foxes.utils.geom2d.InvertedAreaGeometry.inverse", "foxes.utils.geom2d.InvertedAreaGeometry.p_max", "foxes.utils.geom2d.InvertedAreaGeometry.p_min", "foxes.utils.geom2d.InvertedAreaGeometry.points_distance", "foxes.utils.geom2d.InvertedAreaGeometry.points_inside", "foxes.utils.import_module", "foxes.opt.constraints.AreaGeometryConstraint", "foxes.opt.constraints.AreaGeometryConstraint.__init__", "foxes.opt.constraints.AreaGeometryConstraint.__str__", "foxes.opt.constraints.AreaGeometryConstraint.ana_deriv", "foxes.opt.constraints.AreaGeometryConstraint.calc_individual", "foxes.opt.constraints.AreaGeometryConstraint.calc_population", "foxes.opt.constraints.AreaGeometryConstraint.component_names", "foxes.opt.constraints.AreaGeometryConstraint.finalize", "foxes.opt.constraints.AreaGeometryConstraint.finalize_individual", "foxes.opt.constraints.AreaGeometryConstraint.finalize_population", "foxes.opt.constraints.AreaGeometryConstraint.initialize", "foxes.opt.constraints.AreaGeometryConstraint.initialized", "foxes.opt.constraints.AreaGeometryConstraint.n_components", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.var_names_float", "foxes.opt.constraints.AreaGeometryConstraint.var_names_int", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_float", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_int", "foxes.opt.constraints.FarmBoundaryConstraint", "foxes.opt.constraints.FarmBoundaryConstraint.__init__", "foxes.opt.constraints.MinDistConstraint", "foxes.opt.constraints.MinDistConstraint.__init__", "foxes.opt.constraints.MinDistConstraint.calc_individual", "foxes.opt.constraints.MinDistConstraint.calc_population", "foxes.opt.constraints.MinDistConstraint.initialize", "foxes.opt.constraints.MinDistConstraint.n_components", "foxes.opt.constraints.MinDistConstraint.vardeps_float", "foxes.opt.core.FarmConstraint", "foxes.opt.core.FarmConstraint.__init__", "foxes.opt.core.FarmConstraint.add_to_layout_figure", "foxes.opt.core.FarmConstraint.calc_individual", "foxes.opt.core.FarmConstraint.calc_population", "foxes.opt.core.FarmConstraint.farm", "foxes.opt.core.FarmConstraint.n_components", "foxes.opt.core.FarmConstraint.n_sel_turbines", "foxes.opt.core.FarmConstraint.print_models", "foxes.opt.core.FarmConstraint.sel_turbines", "foxes.opt.core.FarmConstraint.vardeps_float", "foxes.opt.core.FarmObjective", "foxes.opt.core.FarmObjective.__init__", "foxes.opt.core.FarmObjective.add_to_layout_figure", "foxes.opt.core.FarmObjective.farm", "foxes.opt.core.FarmObjective.n_sel_turbines", "foxes.opt.core.FarmObjective.print_models", "foxes.opt.core.FarmObjective.sel_turbines", "foxes.opt.core.FarmOptProblem", "foxes.opt.core.FarmOptProblem.INT_INF", "foxes.opt.core.FarmOptProblem.__init__", "foxes.opt.core.FarmOptProblem.add_constraint", "foxes.opt.core.FarmOptProblem.add_objective", "foxes.opt.core.FarmOptProblem.add_to_layout_figure", "foxes.opt.core.FarmOptProblem.all_turbines", "foxes.opt.core.FarmOptProblem.apply_individual", "foxes.opt.core.FarmOptProblem.apply_population", "foxes.opt.core.FarmOptProblem.calc_gradients", "foxes.opt.core.FarmOptProblem.check_constraints_individual", "foxes.opt.core.FarmOptProblem.check_constraints_population", "foxes.opt.core.FarmOptProblem.constraints_tol", "foxes.opt.core.FarmOptProblem.counter", "foxes.opt.core.FarmOptProblem.evaluate_individual", "foxes.opt.core.FarmOptProblem.evaluate_population", "foxes.opt.core.FarmOptProblem.farm", "foxes.opt.core.FarmOptProblem.finalize_individual", "foxes.opt.core.FarmOptProblem.finalize_population", "foxes.opt.core.FarmOptProblem.get_gradients", "foxes.opt.core.FarmOptProblem.initial_values_float", "foxes.opt.core.FarmOptProblem.initial_values_int", "foxes.opt.core.FarmOptProblem.initialize", "foxes.opt.core.FarmOptProblem.max_values_constraints", "foxes.opt.core.FarmOptProblem.max_values_float", "foxes.opt.core.FarmOptProblem.max_values_int", "foxes.opt.core.FarmOptProblem.maximize_objs", "foxes.opt.core.FarmOptProblem.min_values_constraints", "foxes.opt.core.FarmOptProblem.min_values_float", "foxes.opt.core.FarmOptProblem.min_values_int", "foxes.opt.core.FarmOptProblem.n_constraints", "foxes.opt.core.FarmOptProblem.n_objectives", "foxes.opt.core.FarmOptProblem.n_sel_turbines", "foxes.opt.core.FarmOptProblem.n_vars_float", "foxes.opt.core.FarmOptProblem.n_vars_int", "foxes.opt.core.FarmOptProblem.parse_tvar", "foxes.opt.core.FarmOptProblem.prob_res_einsum_individual", "foxes.opt.core.FarmOptProblem.prob_res_einsum_population", "foxes.opt.core.FarmOptProblem.sel_turbines", "foxes.opt.core.FarmOptProblem.tvar", "foxes.opt.core.FarmOptProblem.update_problem_individual", "foxes.opt.core.FarmOptProblem.update_problem_population", "foxes.opt.core.FarmOptProblem.var_names_float", "foxes.opt.core.FarmOptProblem.var_names_int", "foxes.opt.core.FarmVarsProblem", "foxes.opt.core.FarmVarsProblem.initialize", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_individual", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_population", "foxes.opt.core.FarmVarsProblem.update_problem_individual", "foxes.opt.core.FarmVarsProblem.update_problem_population", "foxes.opt.core.PopStates", "foxes.opt.core.PopStates.__init__", "foxes.opt.core.PopStates.calculate", "foxes.opt.core.PopStates.initialize", "foxes.opt.core.PopStates.load_data", "foxes.opt.core.PopStates.output_point_vars", "foxes.opt.core.PopStates.size", "foxes.opt.core.PopStates.weights", "foxes.opt.objectives.FarmVarObjective", "foxes.opt.objectives.FarmVarObjective.__init__", "foxes.opt.objectives.FarmVarObjective.calc_individual", "foxes.opt.objectives.FarmVarObjective.calc_population", "foxes.opt.objectives.FarmVarObjective.finalize_individual", "foxes.opt.objectives.FarmVarObjective.initialize", "foxes.opt.objectives.FarmVarObjective.maximize", "foxes.opt.objectives.FarmVarObjective.n_components", "foxes.opt.objectives.FarmVarObjective.vardeps_float", "foxes.opt.objectives.MaxFarmPower", "foxes.opt.objectives.MaxFarmPower.__init__", "foxes.opt.objectives.MaxNTurbines", "foxes.opt.objectives.MaxNTurbines.__init__", "foxes.opt.objectives.MaxNTurbines.calc_individual", "foxes.opt.objectives.MaxNTurbines.calc_population", "foxes.opt.objectives.MaxNTurbines.maximize", "foxes.opt.objectives.MaxNTurbines.n_components", "foxes.opt.objectives.MinimalMaxTI", "foxes.opt.objectives.MinimalMaxTI.__init__", "foxes.opt.problems.OptFarmVars", "foxes.opt.problems.OptFarmVars.__init__", "foxes.opt.problems.OptFarmVars.add_var", "foxes.opt.problems.OptFarmVars.initial_values_float", "foxes.opt.problems.OptFarmVars.initial_values_int", "foxes.opt.problems.OptFarmVars.initialize", "foxes.opt.problems.OptFarmVars.max_values_float", "foxes.opt.problems.OptFarmVars.max_values_int", "foxes.opt.problems.OptFarmVars.min_values_float", "foxes.opt.problems.OptFarmVars.min_values_int", "foxes.opt.problems.OptFarmVars.opt2farm_vars_individual", "foxes.opt.problems.OptFarmVars.opt2farm_vars_population", "foxes.opt.problems.OptFarmVars.var_names_float", "foxes.opt.problems.OptFarmVars.var_names_int", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_population", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.get_bounds", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Valid", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.cdist", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.Objective", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.cdist", "foxes.opt.problems.layout.geom_layouts.GeomLayout", "foxes.opt.problems.layout.geom_layouts.GeomLayout.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayout.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayout.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.var_names_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_int", "foxes.opt.problems.layout.FarmLayoutOptProblem", "foxes.opt.problems.layout.FarmLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.initialize", "foxes.opt.problems.layout.FarmLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.FarmLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_int", "foxes.opt.problems.layout.RegularLayoutOptProblem", "foxes.opt.problems.layout.RegularLayoutOptProblem.ANGLE", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegularLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegularLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegularLayoutOptProblem.var_names_float", "foxes.utils.read_shp", "foxes.utils.read_shp_polygons", "foxes.utils.runners.DaskRunner", "foxes.utils.runners.DaskRunner.__init__", "foxes.utils.runners.DaskRunner.finalize", "foxes.utils.runners.DaskRunner.initialize", "foxes.utils.runners.DaskRunner.is_distributed", "foxes.utils.runners.DaskRunner.print", "foxes.utils.runners.DaskRunner.run", "foxes.utils.runners.DefaultRunner", "foxes.utils.runners.DefaultRunner.run", "foxes.utils.runners.Runner", "foxes.utils.runners.Runner.__init__", "foxes.utils.runners.Runner.finalize", "foxes.utils.runners.Runner.initialize", "foxes.utils.runners.Runner.initialized", "foxes.utils.runners.Runner.run", "foxes.utils.shp2csv", "foxes.utils.shp2geom2d", "foxes.utils.sqrt_reg", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.uv2wd", "foxes.utils.wd2uv", "foxes.utils.wd2wdvec", "foxes.utils.wdvec2wd", "foxes.utils.write_nc", "foxes.variables.AMB_CAP", "foxes.variables.AMB_CT", "foxes.variables.AMB_P", "foxes.variables.AMB_REWS", "foxes.variables.AMB_REWS2", "foxes.variables.AMB_REWS3", "foxes.variables.AMB_RHO", "foxes.variables.AMB_T", "foxes.variables.AMB_TI", "foxes.variables.AMB_WD", "foxes.variables.AMB_WS", "foxes.variables.AMB_YAW", "foxes.variables.AMB_YAWM", "foxes.variables.AMB_YLD", "foxes.variables.CAP", "foxes.variables.CT", "foxes.variables.D", "foxes.variables.EFF", "foxes.variables.H", "foxes.variables.K", "foxes.variables.KB", "foxes.variables.KTI", "foxes.variables.MAX_P", "foxes.variables.MOL", "foxes.variables.ORDER", "foxes.variables.P", "foxes.variables.PA_ALPHA", "foxes.variables.PA_BETA", "foxes.variables.REWS", "foxes.variables.REWS2", "foxes.variables.REWS3", "foxes.variables.RHO", "foxes.variables.SHEAR", "foxes.variables.T", "foxes.variables.TI", "foxes.variables.TXYH", "foxes.variables.WD", "foxes.variables.WEIGHT", "foxes.variables.WS", "foxes.variables.X", "foxes.variables.Y", "foxes.variables.YAW", "foxes.variables.YAWM", "foxes.variables.YLD", "foxes.variables.Z0", "foxes.variables.amb2var", "foxes.variables.var2amb", "API", "foxes.algorithms", "Downwind algorithm", "Iterative algorithm", "Sequential algorithm", "foxes.constants", "foxes.core", "foxes.data", "foxes", "foxes.input", "foxes.models", "foxes.opt", "foxes.opt.problems", "foxes.opt.problems.layout.geom_layouts", "foxes.output", "foxes.utils", "foxes.utils.abl.neutral", "foxes.variables", "foxes.models.wake_models", "Citation", "Examples", "History", "Welcome to FOXES", "Installation", "Blockage modelling 2", "Blockage modelling 1", "Static data", "Heterogeneous flow", "Layout optimization", "The model book", "Multi-height wind data", "Overview - how to setup foxes", "Power mask", "Wind sector management", "Dynamic wakes 2", "Single row of turbines", "Dynamic wakes 1", "Timeseries data", "Wind rose data", "Yawed rotor wakes", "Testing"], "terms": {"class": [0, 9, 11, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 302, 312, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 380, 383, 387, 393, 400, 403, 409, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 506, 507, 513, 516, 520, 522, 523, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 651, 652, 653, 654, 657, 658, 663, 664, 669, 670, 675, 676, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 801, 806, 813, 820, 843, 844, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 910, 919, 939, 946, 949, 952, 953, 955, 956, 959, 965, 970, 971, 978, 981, 983, 987, 995, 1003, 1007, 1010, 1017, 1045, 1057, 1066, 1075, 1084, 1087, 1089, 1097, 1103, 1104, 1162, 1230, 1231, 1232, 1244, 1245, 1246, 1270, 1306, 1373, 1380, 1396, 1435, 1438, 1439, 1446, 1448, 1456, 1463, 1470, 1478, 1487, 1508, 1510, 1517, 1528, 1535, 1544, 1554, 1579, 1580, 1585, 1593, 1602, 1604, 1610, 1612, 1617, 1626, 1627, 1631, 1632, 1636, 1637, 1641, 1642, 1647, 1652, 1657, 1658, 1663, 1664, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1754, 1760, 1765, 1776, 1785, 1793, 1800, 1802, 1865, 1867, 1868, 1869, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1883, 1886, 1891, 1894, 1899, 1901, 1904], "fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1867, 1868, 1869, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 326, 328, 329, 333, 335, 338, 341, 342, 343, 344, 345, 346, 351, 352, 353, 357, 359, 365, 366, 367, 368, 369, 371, 376, 377, 378, 379, 381, 384, 386, 390, 391, 395, 397, 398, 401, 405, 406, 408, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 455, 457, 458, 460, 464, 465, 467, 468, 471, 476, 477, 478, 480, 483, 484, 485, 488, 492, 493, 495, 496, 497, 501, 505, 510, 511, 519, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 563, 564, 565, 567, 568, 571, 572, 575, 576, 583, 590, 595, 596, 599, 600, 601, 604, 605, 606, 610, 611, 612, 616, 617, 618, 622, 623, 624, 628, 629, 632, 633, 634, 637, 638, 640, 641, 643, 644, 648, 649, 655, 656, 659, 660, 661, 662, 665, 666, 667, 668, 671, 672, 673, 674, 677, 678, 679, 680, 708, 710, 711, 712, 716, 717, 718, 719, 721, 722, 723, 724, 725, 729, 730, 731, 732, 735, 736, 737, 738, 741, 742, 743, 744, 747, 748, 751, 752, 753, 754, 757, 758, 763, 764, 765, 766, 770, 771, 772, 776, 777, 778, 779, 783, 784, 785, 789, 790, 791, 797, 798, 799, 803, 804, 805, 809, 810, 811, 816, 817, 818, 836, 840, 846, 847, 848, 852, 853, 854, 859, 860, 861, 862, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 884, 887, 888, 889, 892, 893, 894, 897, 898, 899, 902, 903, 904, 921, 933, 952, 953, 965, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 1007, 1289, 1299, 1535, 1537, 1587, 1588, 1589, 1590, 1592, 1761, 1782, 1865, 1871, 1875, 1879, 1886, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "downwind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 1866, 1868, 1869, 1886, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "core": [0, 1, 2, 4, 6, 12, 16, 17, 21, 26, 27, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 82, 83, 85, 86, 92, 93, 94, 97, 98, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 450, 451, 452, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 471, 474, 476, 477, 478, 480, 481, 482, 483, 484, 485, 487, 488, 489, 491, 492, 493, 495, 496, 497, 501, 505, 506, 507, 508, 510, 511, 512, 516, 519, 522, 523, 524, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 579, 583, 586, 590, 593, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 610, 611, 612, 613, 614, 616, 617, 618, 619, 622, 623, 624, 626, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 654, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 685, 689, 693, 697, 701, 704, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 747, 748, 749, 751, 752, 753, 754, 755, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 797, 798, 799, 803, 804, 805, 806, 807, 809, 810, 811, 812, 816, 817, 818, 819, 820, 835, 836, 838, 839, 840, 842, 846, 847, 848, 849, 850, 852, 853, 854, 855, 856, 857, 859, 860, 861, 862, 863, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 921, 933, 981, 1487, 1510, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1604, 1612, 1652, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1761, 1776, 1782, 1865, 1867, 1868, 1869, 1874, 1875, 1877, 1878, 1883, 1886], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 290, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 835, 836, 837, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 1000, 1001, 1002, 1167, 1215, 1266, 1275, 1355, 1422, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1491, 1492, 1499, 1506, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1525, 1528, 1529, 1530, 1533, 1535, 1537, 1540, 1542, 1543, 1557, 1570, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1867, 1868, 1869, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1883, 1884, 1886, 1887, 1888, 1889, 1904], "The": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 181, 185, 189, 193, 194, 195, 201, 210, 227, 228, 278, 279, 296, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 504, 505, 506, 507, 508, 510, 511, 513, 515, 516, 519, 520, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 537, 538, 540, 541, 542, 543, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 750, 751, 752, 753, 754, 757, 758, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 809, 810, 811, 813, 814, 816, 817, 818, 820, 835, 836, 838, 839, 840, 843, 844, 846, 847, 848, 849, 850, 852, 853, 854, 856, 857, 859, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 1000, 1001, 1002, 1003, 1005, 1010, 1017, 1023, 1027, 1029, 1033, 1036, 1037, 1038, 1040, 1044, 1045, 1048, 1050, 1054, 1055, 1057, 1058, 1060, 1061, 1062, 1066, 1070, 1071, 1072, 1073, 1082, 1104, 1107, 1109, 1117, 1118, 1120, 1122, 1123, 1124, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1152, 1153, 1157, 1158, 1159, 1160, 1161, 1162, 1164, 1179, 1184, 1203, 1208, 1210, 1215, 1222, 1223, 1229, 1230, 1231, 1232, 1236, 1242, 1243, 1244, 1245, 1246, 1250, 1256, 1258, 1261, 1262, 1263, 1266, 1268, 1270, 1275, 1277, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1306, 1307, 1308, 1309, 1310, 1315, 1317, 1328, 1342, 1343, 1345, 1347, 1348, 1355, 1361, 1365, 1369, 1370, 1371, 1373, 1374, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1411, 1413, 1414, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1438, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1535, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1609, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1675, 1676, 1677, 1678, 1679, 1681, 1682, 1683, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1799, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1819, 1820, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1833, 1834, 1836, 1840, 1841, 1842, 1843, 1844, 1845, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1862, 1865, 1867, 1870, 1871, 1873, 1875, 1877, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905], "turbin": [0, 1, 3, 4, 9, 11, 16, 20, 21, 35, 46, 48, 49, 290, 291, 292, 293, 294, 295, 302, 316, 319, 325, 339, 340, 341, 342, 347, 361, 368, 375, 377, 378, 395, 397, 409, 410, 411, 412, 413, 414, 415, 416, 418, 423, 424, 425, 426, 427, 428, 431, 437, 438, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 506, 507, 508, 510, 516, 518, 522, 524, 525, 529, 532, 533, 537, 540, 541, 545, 547, 548, 550, 551, 555, 557, 558, 575, 593, 594, 595, 597, 599, 602, 604, 608, 610, 614, 615, 616, 619, 622, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 663, 665, 669, 671, 675, 677, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 729, 730, 732, 733, 735, 736, 737, 739, 741, 742, 743, 747, 748, 751, 752, 757, 758, 759, 763, 764, 765, 768, 770, 774, 776, 783, 787, 789, 793, 794, 797, 798, 803, 804, 806, 809, 813, 816, 820, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 912, 917, 919, 921, 924, 925, 926, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 954, 957, 958, 959, 961, 963, 972, 973, 974, 978, 981, 983, 985, 1487, 1488, 1508, 1510, 1511, 1517, 1518, 1524, 1526, 1528, 1529, 1532, 1534, 1535, 1537, 1541, 1567, 1570, 1573, 1574, 1579, 1593, 1594, 1602, 1603, 1604, 1610, 1611, 1612, 1614, 1627, 1631, 1632, 1636, 1637, 1641, 1642, 1647, 1658, 1669, 1688, 1689, 1694, 1700, 1707, 1708, 1717, 1718, 1727, 1728, 1751, 1760, 1776, 1782, 1829, 1830, 1842, 1853, 1859, 1860, 1866, 1867, 1868, 1870, 1871, 1872, 1874, 1875, 1876, 1877, 1878, 1879, 1882, 1883, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "ar": [0, 35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 87, 92, 98, 195, 302, 327, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 394, 396, 397, 401, 403, 406, 413, 416, 423, 431, 432, 433, 435, 447, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 506, 507, 511, 522, 523, 529, 530, 537, 538, 546, 549, 556, 561, 565, 566, 568, 569, 572, 573, 574, 575, 579, 580, 582, 586, 587, 589, 593, 594, 596, 597, 601, 602, 606, 608, 609, 612, 614, 615, 618, 619, 624, 626, 629, 630, 631, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 662, 663, 668, 669, 674, 675, 680, 752, 753, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 799, 805, 810, 817, 848, 853, 861, 880, 884, 885, 889, 890, 894, 895, 899, 900, 904, 917, 935, 936, 937, 951, 957, 958, 1002, 1038, 1045, 1057, 1066, 1075, 1097, 1103, 1107, 1109, 1118, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1138, 1139, 1142, 1146, 1152, 1157, 1158, 1160, 1161, 1164, 1178, 1186, 1203, 1222, 1223, 1228, 1242, 1256, 1258, 1260, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1270, 1274, 1277, 1278, 1280, 1281, 1288, 1289, 1290, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1306, 1309, 1310, 1311, 1312, 1315, 1317, 1324, 1325, 1342, 1343, 1345, 1347, 1361, 1362, 1365, 1371, 1373, 1374, 1375, 1378, 1380, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1413, 1414, 1415, 1418, 1439, 1445, 1446, 1448, 1455, 1456, 1462, 1463, 1469, 1470, 1477, 1478, 1485, 1487, 1508, 1510, 1517, 1535, 1541, 1544, 1545, 1546, 1554, 1579, 1585, 1590, 1612, 1614, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1655, 1656, 1657, 1663, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1811, 1869, 1874, 1875, 1877, 1878, 1880, 1883, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903, 1904, 1905], "evalu": [0, 16, 35, 46, 47, 62, 65, 66, 70, 71, 74, 75, 368, 377, 378, 381, 393, 397, 420, 423, 425, 427, 428, 431, 432, 433, 436, 437, 524, 525, 527, 529, 530, 532, 533, 535, 537, 540, 541, 543, 547, 550, 551, 553, 557, 558, 560, 573, 575, 579, 586, 683, 687, 691, 695, 699, 702, 706, 708, 710, 712, 714, 716, 718, 719, 721, 723, 724, 726, 729, 732, 733, 735, 737, 739, 741, 743, 746, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 919, 981, 1413, 1414, 1422, 1423, 1425, 1426, 1427, 1428, 1431, 1432, 1438, 1535, 1549, 1550, 1579, 1612, 1707, 1708, 1717, 1727, 1737, 1751, 1760, 1776, 1810, 1867, 1868, 1869, 1875, 1877, 1878, 1879, 1884, 1886, 1887, 1896, 1898, 1899, 1900, 1901, 1902], "onc": [0, 529, 1002, 1087, 1092, 1311, 1888, 1892, 1893, 1899, 1900, 1901, 1904], "order": [0, 35, 103, 195, 228, 368, 423, 425, 506, 669, 675, 708, 710, 714, 716, 719, 721, 726, 729, 733, 735, 739, 741, 1002, 1131, 1135, 1148, 1149, 1233, 1247, 1262, 1268, 1269, 1369, 1371, 1374, 1376, 1378, 1381, 1401, 1402, 1403, 1544, 1554, 1842, 1866, 1867, 1875, 1882, 1886, 1890, 1893, 1897, 1898, 1899, 1900, 1901], "i": [0, 9, 16, 22, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 95, 103, 114, 163, 186, 195, 228, 233, 241, 276, 302, 317, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 368, 371, 375, 383, 384, 386, 387, 390, 393, 396, 397, 403, 405, 409, 413, 414, 416, 419, 423, 425, 428, 430, 435, 447, 449, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 504, 506, 507, 510, 522, 523, 529, 530, 537, 538, 545, 546, 548, 549, 555, 556, 561, 562, 563, 564, 566, 567, 569, 571, 573, 574, 575, 579, 580, 582, 586, 589, 593, 594, 595, 597, 599, 600, 602, 604, 608, 610, 614, 616, 619, 622, 623, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 658, 659, 661, 663, 664, 665, 667, 669, 671, 673, 675, 676, 677, 679, 681, 685, 689, 693, 697, 701, 704, 708, 710, 714, 716, 719, 721, 724, 726, 729, 733, 735, 739, 741, 746, 747, 748, 749, 751, 756, 757, 758, 759, 761, 763, 765, 768, 774, 781, 787, 793, 794, 797, 800, 801, 803, 806, 809, 813, 816, 820, 843, 846, 849, 852, 856, 859, 864, 868, 872, 876, 880, 885, 890, 895, 900, 926, 946, 956, 980, 985, 1002, 1003, 1005, 1007, 1009, 1010, 1014, 1016, 1017, 1019, 1020, 1021, 1022, 1032, 1034, 1037, 1038, 1040, 1042, 1043, 1044, 1045, 1048, 1057, 1061, 1062, 1064, 1065, 1066, 1067, 1073, 1074, 1075, 1081, 1082, 1087, 1089, 1096, 1097, 1100, 1104, 1107, 1108, 1109, 1110, 1117, 1118, 1119, 1120, 1122, 1123, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1144, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1172, 1173, 1174, 1175, 1176, 1179, 1184, 1190, 1194, 1196, 1197, 1199, 1206, 1215, 1222, 1229, 1230, 1231, 1232, 1243, 1244, 1245, 1246, 1258, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1273, 1275, 1277, 1278, 1279, 1280, 1281, 1283, 1284, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1306, 1307, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1325, 1326, 1328, 1332, 1334, 1337, 1339, 1341, 1342, 1343, 1345, 1346, 1347, 1355, 1356, 1360, 1361, 1362, 1365, 1369, 1370, 1371, 1372, 1374, 1375, 1376, 1377, 1378, 1379, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1411, 1413, 1414, 1415, 1417, 1418, 1420, 1438, 1444, 1445, 1454, 1455, 1461, 1462, 1468, 1469, 1476, 1477, 1484, 1485, 1535, 1554, 1565, 1566, 1575, 1576, 1579, 1583, 1584, 1585, 1587, 1589, 1593, 1612, 1668, 1704, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1772, 1773, 1776, 1793, 1798, 1869, 1875, 1876, 1882, 1883, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "calcul": [0, 3, 4, 9, 11, 16, 17, 19, 20, 21, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 83, 85, 86, 92, 94, 97, 98, 101, 302, 319, 320, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 357, 359, 361, 366, 369, 371, 377, 378, 379, 381, 383, 384, 386, 387, 390, 391, 393, 394, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 420, 421, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 471, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 488, 489, 492, 493, 495, 496, 497, 501, 502, 506, 507, 510, 511, 519, 524, 525, 526, 527, 529, 532, 533, 534, 535, 540, 541, 542, 543, 547, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 579, 580, 583, 586, 587, 590, 593, 594, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 609, 610, 611, 612, 614, 616, 617, 618, 619, 622, 623, 624, 626, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 722, 723, 725, 726, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 763, 764, 765, 766, 768, 770, 771, 772, 774, 776, 777, 778, 779, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 809, 810, 811, 813, 816, 817, 818, 820, 836, 840, 843, 846, 847, 848, 849, 852, 853, 854, 856, 859, 860, 861, 862, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 910, 911, 919, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 938, 952, 953, 954, 959, 960, 970, 971, 982, 1002, 1117, 1120, 1136, 1144, 1152, 1160, 1161, 1186, 1194, 1263, 1279, 1291, 1298, 1334, 1386, 1388, 1401, 1402, 1403, 1404, 1405, 1414, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1436, 1437, 1439, 1444, 1446, 1448, 1454, 1456, 1461, 1463, 1468, 1470, 1476, 1478, 1484, 1487, 1490, 1491, 1492, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1544, 1554, 1571, 1572, 1575, 1576, 1579, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1592, 1593, 1595, 1596, 1602, 1604, 1606, 1607, 1610, 1612, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1668, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1772, 1773, 1776, 1811, 1812, 1813, 1814, 1815, 1816, 1822, 1823, 1847, 1848, 1865, 1866, 1867, 1868, 1869, 1871, 1875, 1876, 1879, 1880, 1881, 1882, 1883, 1886, 1887, 1890, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1901, 1902, 1903, 1904], "provid": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 946, 980, 985, 1118, 1134, 1136, 1159, 1184, 1262, 1264, 1266, 1280, 1289, 1294, 1295, 1328, 1341, 1355, 1375, 1382, 1388, 1392, 1393, 1404, 1415, 1585, 1589, 1873, 1875, 1886, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902], "turbineord": 0, "object": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 153, 195, 228, 251, 302, 308, 309, 313, 317, 322, 327, 330, 339, 345, 349, 354, 361, 362, 365, 367, 368, 371, 372, 375, 377, 378, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 505, 506, 507, 516, 520, 522, 524, 525, 529, 532, 533, 537, 540, 541, 545, 547, 548, 550, 551, 555, 557, 558, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 906, 912, 934, 940, 941, 942, 943, 944, 945, 959, 963, 981, 986, 1002, 1020, 1107, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1162, 1167, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1278, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1309, 1310, 1311, 1335, 1343, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1402, 1403, 1404, 1405, 1414, 1415, 1418, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1487, 1494, 1497, 1508, 1510, 1517, 1528, 1529, 1535, 1538, 1539, 1544, 1549, 1550, 1552, 1553, 1554, 1557, 1561, 1566, 1571, 1572, 1579, 1580, 1585, 1589, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1617, 1626, 1631, 1636, 1641, 1645, 1647, 1652, 1657, 1663, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1713, 1717, 1723, 1727, 1733, 1737, 1744, 1751, 1752, 1754, 1760, 1762, 1765, 1776, 1783, 1785, 1809, 1871, 1873, 1875, 1877, 1891, 1892, 1893, 1894, 1897, 1898, 1899, 1900, 1902, 1903, 1904], "state": [0, 1, 2, 3, 4, 7, 9, 11, 16, 17, 20, 21, 48, 49, 92, 93, 96, 99, 101, 287, 288, 289, 290, 291, 302, 303, 313, 319, 324, 326, 330, 331, 334, 336, 338, 341, 368, 377, 378, 393, 395, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 424, 426, 427, 428, 431, 437, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 561, 562, 573, 575, 593, 594, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 711, 712, 717, 718, 722, 723, 724, 730, 732, 733, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 910, 911, 912, 919, 924, 925, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 954, 957, 970, 972, 973, 974, 975, 976, 977, 978, 981, 982, 986, 1002, 1010, 1023, 1045, 1050, 1066, 1122, 1390, 1582, 1585, 1586, 1591, 1592, 1594, 1603, 1611, 1614, 1623, 1758, 1771, 1789, 1855, 1866, 1869, 1870, 1871, 1875, 1876, 1879, 1882, 1886, 1887, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "ambient": [0, 1, 3, 4, 16, 17, 20, 21, 53, 57, 102, 378, 393, 394, 395, 397, 403, 432, 436, 453, 525, 533, 541, 551, 558, 569, 570, 573, 575, 579, 580, 586, 587, 753, 771, 777, 794, 795, 864, 865, 866, 868, 869, 870, 872, 873, 874, 876, 877, 878, 880, 881, 882, 885, 886, 887, 890, 891, 892, 897, 900, 901, 902, 919, 921, 927, 933, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1863, 1864, 1867, 1870, 1874, 1875, 1882, 1886, 1887, 1889, 1890, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903], "wake_model": [0, 1, 46, 47, 375, 376, 424, 516, 522, 523, 529, 530, 537, 538, 545, 546, 548, 549, 555, 556, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "list": [0, 1, 2, 9, 16, 17, 35, 38, 39, 40, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 61, 66, 67, 71, 72, 77, 81, 82, 83, 86, 92, 96, 98, 100, 228, 241, 302, 317, 319, 320, 327, 329, 330, 331, 332, 334, 335, 337, 339, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 373, 375, 376, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 401, 403, 404, 406, 409, 410, 411, 412, 413, 416, 419, 421, 423, 424, 430, 435, 438, 440, 442, 443, 447, 451, 452, 453, 454, 456, 458, 461, 463, 466, 468, 469, 472, 474, 478, 481, 485, 487, 489, 491, 494, 497, 498, 500, 502, 506, 507, 511, 512, 521, 522, 523, 528, 529, 530, 536, 537, 538, 544, 545, 546, 548, 549, 554, 555, 556, 561, 562, 565, 566, 568, 569, 570, 572, 573, 579, 580, 586, 587, 593, 594, 596, 597, 598, 601, 602, 606, 608, 612, 613, 614, 615, 618, 619, 624, 626, 629, 630, 631, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 662, 663, 668, 669, 674, 675, 680, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 703, 704, 707, 708, 713, 714, 719, 726, 733, 739, 745, 746, 749, 755, 756, 759, 761, 767, 768, 769, 773, 774, 780, 781, 786, 787, 792, 793, 794, 800, 806, 812, 813, 819, 820, 842, 843, 849, 855, 856, 863, 864, 868, 872, 876, 880, 884, 885, 889, 890, 894, 895, 899, 900, 904, 905, 907, 909, 921, 924, 925, 928, 930, 931, 932, 934, 954, 957, 958, 961, 963, 964, 972, 973, 974, 975, 976, 977, 985, 987, 989, 992, 994, 995, 1002, 1003, 1005, 1044, 1117, 1125, 1128, 1129, 1132, 1133, 1134, 1136, 1137, 1138, 1142, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1162, 1180, 1186, 1193, 1198, 1222, 1234, 1237, 1238, 1240, 1241, 1248, 1251, 1252, 1254, 1255, 1258, 1261, 1262, 1263, 1264, 1266, 1278, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1309, 1310, 1343, 1347, 1361, 1365, 1374, 1375, 1381, 1382, 1387, 1388, 1392, 1393, 1394, 1396, 1402, 1403, 1409, 1413, 1414, 1415, 1435, 1438, 1447, 1448, 1449, 1487, 1488, 1490, 1491, 1492, 1493, 1504, 1505, 1508, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1521, 1526, 1528, 1529, 1534, 1537, 1544, 1554, 1571, 1572, 1573, 1577, 1578, 1580, 1585, 1590, 1593, 1594, 1595, 1596, 1602, 1603, 1604, 1606, 1607, 1610, 1611, 1614, 1624, 1625, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1659, 1660, 1665, 1666, 1668, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1704, 1706, 1716, 1726, 1736, 1749, 1750, 1759, 1774, 1775, 1790, 1792, 1865, 1868, 1869, 1871, 1873, 1874, 1879, 1886, 1889, 1890, 1891, 1894, 1897], "wakemodel": [0, 46, 47, 49, 375, 376, 424, 430, 431, 432, 433, 434, 516, 523, 530, 538, 546, 549, 556, 749, 768, 769, 774, 781, 787, 1871, 1883], "wake": [0, 1, 3, 4, 20, 21, 35, 40, 46, 47, 48, 49, 77, 368, 375, 376, 377, 378, 380, 381, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 516, 522, 523, 524, 525, 527, 529, 530, 532, 533, 535, 537, 538, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 558, 559, 560, 569, 645, 708, 709, 711, 712, 714, 717, 718, 719, 722, 723, 724, 726, 730, 732, 733, 734, 736, 737, 739, 740, 742, 743, 746, 747, 748, 749, 750, 751, 752, 753, 756, 757, 758, 759, 761, 762, 763, 764, 765, 768, 769, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 795, 797, 798, 799, 800, 801, 803, 804, 805, 806, 807, 809, 810, 813, 814, 816, 817, 820, 835, 836, 839, 843, 844, 846, 847, 848, 849, 850, 852, 853, 856, 857, 859, 861, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 885, 886, 887, 888, 890, 891, 892, 893, 895, 896, 897, 898, 900, 901, 902, 903, 1438, 1707, 1717, 1837, 1844, 1845, 1863, 1867, 1868, 1871, 1875, 1877, 1878, 1882, 1883, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1896, 1897, 1900, 1902, 1903], "model": [0, 1, 2, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 292, 293, 302, 303, 305, 307, 308, 309, 310, 315, 317, 319, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 447, 453, 455, 457, 458, 461, 464, 465, 467, 468, 472, 474, 476, 477, 478, 481, 483, 484, 485, 487, 489, 492, 493, 495, 496, 497, 500, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 910, 919, 939, 946, 949, 950, 952, 955, 959, 970, 978, 981, 983, 984, 985, 1487, 1508, 1510, 1517, 1525, 1528, 1533, 1579, 1580, 1585, 1587, 1588, 1589, 1590, 1593, 1602, 1604, 1610, 1614, 1844, 1845, 1865, 1870, 1871, 1876, 1880, 1882, 1885, 1886, 1887, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "appli": [0, 1, 49, 83, 431, 432, 433, 436, 437, 752, 753, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 799, 805, 810, 817, 848, 853, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 926, 1002, 1010, 1036, 1037, 1040, 1041, 1042, 1043, 1045, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1073, 1074, 1107, 1117, 1128, 1133, 1134, 1137, 1144, 1152, 1158, 1225, 1258, 1261, 1266, 1279, 1291, 1294, 1295, 1298, 1312, 1315, 1317, 1318, 1360, 1373, 1380, 1386, 1388, 1400, 1411, 1418, 1535, 1542, 1543, 1579, 1612, 1614, 1668, 1706, 1707, 1709, 1710, 1717, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1751, 1760, 1776, 1867, 1868, 1875, 1886, 1889, 1890, 1893, 1899, 1901, 1904], "all": [0, 1, 2, 3, 4, 9, 16, 20, 21, 35, 36, 39, 40, 42, 45, 46, 48, 52, 53, 55, 57, 59, 77, 79, 82, 83, 85, 92, 94, 100, 101, 103, 158, 195, 228, 302, 317, 327, 328, 330, 333, 337, 338, 339, 341, 345, 348, 349, 351, 354, 357, 360, 361, 362, 371, 373, 375, 376, 382, 383, 384, 387, 390, 392, 393, 397, 403, 405, 408, 413, 414, 416, 419, 423, 425, 430, 435, 436, 438, 442, 453, 454, 455, 457, 460, 461, 464, 467, 471, 472, 474, 476, 477, 480, 481, 483, 487, 488, 489, 492, 496, 500, 501, 502, 506, 507, 510, 512, 516, 522, 528, 529, 536, 537, 544, 545, 548, 554, 555, 559, 561, 563, 564, 566, 567, 569, 571, 573, 575, 579, 586, 593, 594, 595, 597, 599, 600, 602, 604, 608, 610, 613, 614, 616, 619, 622, 623, 625, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 685, 689, 693, 697, 701, 704, 708, 710, 713, 714, 716, 719, 721, 726, 729, 733, 735, 739, 741, 745, 746, 749, 755, 756, 759, 761, 767, 768, 773, 774, 780, 781, 786, 787, 792, 793, 794, 800, 806, 812, 813, 819, 820, 837, 842, 843, 849, 855, 856, 863, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 910, 912, 919, 938, 939, 946, 950, 952, 954, 955, 957, 958, 959, 961, 963, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 1002, 1010, 1034, 1045, 1066, 1075, 1087, 1092, 1096, 1107, 1118, 1122, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1148, 1149, 1157, 1158, 1160, 1161, 1162, 1170, 1222, 1261, 1262, 1263, 1264, 1266, 1277, 1278, 1280, 1287, 1288, 1289, 1290, 1294, 1295, 1297, 1299, 1306, 1309, 1310, 1312, 1314, 1315, 1317, 1324, 1345, 1346, 1375, 1382, 1388, 1389, 1392, 1395, 1396, 1400, 1401, 1402, 1403, 1404, 1405, 1411, 1415, 1418, 1435, 1438, 1487, 1490, 1491, 1492, 1506, 1507, 1508, 1510, 1512, 1513, 1516, 1517, 1520, 1521, 1525, 1527, 1528, 1533, 1535, 1537, 1541, 1544, 1550, 1554, 1565, 1566, 1579, 1585, 1587, 1589, 1592, 1593, 1594, 1595, 1596, 1601, 1602, 1603, 1604, 1606, 1607, 1610, 1611, 1612, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1656, 1657, 1659, 1660, 1663, 1665, 1666, 1668, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1792, 1812, 1865, 1871, 1873, 1874, 1875, 1880, 1884, 1886, 1888, 1889, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1901, 1903], "rotor_model": [0, 1, 516, 529, 530, 537, 538, 546, 548, 549, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "rotormodel": [0, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 516, 529, 530, 537, 538, 546, 548, 549, 573, 579, 586, 1871, 1875], "rotor": [0, 1, 102, 284, 285, 286, 339, 341, 349, 350, 375, 393, 395, 396, 397, 398, 399, 400, 402, 409, 410, 416, 417, 447, 516, 529, 530, 537, 538, 545, 546, 548, 549, 555, 559, 573, 574, 575, 576, 577, 578, 579, 582, 584, 585, 586, 587, 589, 591, 592, 608, 609, 620, 626, 627, 714, 781, 782, 787, 788, 895, 910, 911, 912, 940, 941, 942, 986, 1487, 1488, 1614, 1627, 1821, 1822, 1823, 1834, 1846, 1847, 1848, 1853, 1870, 1871, 1875, 1882, 1885, 1886, 1887, 1889, 1890, 1893, 1896, 1899, 1901, 1902], "wake_fram": [0, 1, 375, 376, 516, 523, 529, 530, 538, 545, 546, 548, 549, 555, 556, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "wakefram": [0, 375, 376, 423, 424, 425, 426, 427, 428, 429, 516, 523, 530, 538, 546, 549, 556, 708, 709, 714, 719, 726, 733, 739, 740, 1871, 1875], "frame": [0, 1, 35, 375, 376, 396, 423, 424, 426, 427, 429, 431, 461, 516, 523, 530, 538, 546, 549, 556, 561, 562, 574, 582, 589, 708, 709, 711, 712, 714, 717, 718, 719, 722, 723, 726, 730, 732, 733, 736, 737, 739, 740, 742, 743, 752, 770, 776, 783, 789, 820, 1268, 1294, 1791, 1867, 1871, 1875, 1883, 1886, 1890, 1892, 1896, 1899, 1901, 1904], "partial_wakes_model": [0, 1, 1889, 1890, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "partialwakesmodel": [0, 375, 376, 377, 378, 379, 380, 381, 382, 522, 529, 537, 548, 555, 1871, 1875], "partial": [0, 1, 375, 380, 516, 522, 523, 529, 537, 545, 548, 555, 746, 749, 1294, 1871, 1875, 1883, 1889, 1890, 1896, 1899, 1901], "farm_control": [0, 1, 506, 516, 1894], "farmcontrol": [0, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 506, 516, 1871, 1875], "farm": [0, 1, 3, 4, 9, 11, 16, 17, 20, 21, 23, 25, 26, 36, 40, 42, 48, 49, 53, 55, 59, 64, 69, 73, 77, 79, 85, 91, 94, 226, 302, 303, 316, 333, 339, 341, 342, 349, 351, 354, 357, 361, 368, 375, 377, 378, 381, 384, 390, 393, 395, 397, 398, 409, 410, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 438, 439, 441, 447, 448, 449, 450, 451, 452, 455, 464, 476, 483, 492, 505, 506, 507, 510, 516, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 559, 560, 563, 567, 571, 575, 576, 593, 594, 595, 599, 604, 610, 616, 619, 622, 626, 628, 632, 637, 640, 643, 646, 648, 655, 659, 665, 671, 677, 708, 710, 711, 712, 716, 717, 718, 721, 722, 723, 724, 729, 730, 731, 732, 735, 736, 737, 739, 740, 741, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 795, 797, 798, 799, 803, 804, 805, 806, 807, 809, 810, 813, 814, 816, 817, 836, 843, 844, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 910, 911, 912, 913, 914, 919, 920, 921, 922, 923, 926, 927, 939, 940, 941, 942, 943, 944, 945, 952, 953, 955, 956, 959, 960, 961, 963, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 982, 1487, 1508, 1510, 1517, 1522, 1528, 1531, 1535, 1551, 1575, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1587, 1593, 1602, 1604, 1610, 1612, 1614, 1622, 1623, 1707, 1717, 1727, 1737, 1751, 1757, 1758, 1760, 1770, 1771, 1772, 1773, 1776, 1788, 1789, 1865, 1866, 1867, 1868, 1870, 1871, 1874, 1875, 1876, 1877, 1879, 1884, 1885, 1886, 1887, 1889, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "control": [0, 1, 506, 516, 1002, 1117, 1131, 1136, 1144, 1152, 1157, 1160, 1161, 1258, 1266, 1277, 1278, 1279, 1288, 1289, 1291, 1294, 1295, 1296, 1298, 1309, 1310, 1324, 1343, 1365, 1370, 1374, 1377, 1381, 1395, 1396, 1402, 1403, 1875, 1890, 1899, 1901], "n_state": [0, 4, 16, 17, 21, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 313, 319, 322, 324, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 397, 398, 408, 409, 410, 411, 412, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 504, 510, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 559, 563, 567, 571, 575, 576, 593, 594, 595, 599, 604, 610, 616, 621, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 710, 711, 712, 716, 717, 718, 721, 722, 723, 724, 729, 730, 731, 732, 735, 736, 737, 741, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 839, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 954, 986, 1535, 1537, 1579, 1581, 1582, 1585, 1587, 1592, 1612, 1622, 1623, 1751, 1757, 1758, 1760, 1770, 1771, 1776, 1788, 1789, 1874, 1876, 1890, 1899, 1900, 1901], "int": [0, 1, 9, 10, 13, 22, 28, 33, 37, 43, 50, 60, 64, 69, 73, 80, 95, 97, 99, 103, 124, 228, 242, 274, 302, 303, 314, 323, 324, 325, 326, 336, 343, 344, 345, 358, 366, 369, 371, 372, 377, 378, 379, 395, 397, 399, 405, 407, 409, 410, 412, 440, 441, 447, 449, 450, 451, 452, 454, 457, 459, 461, 463, 465, 467, 469, 470, 477, 479, 484, 486, 489, 491, 493, 495, 496, 498, 499, 519, 524, 525, 526, 529, 530, 532, 533, 534, 538, 540, 541, 542, 546, 547, 550, 551, 552, 557, 558, 564, 575, 577, 579, 580, 583, 584, 586, 587, 590, 591, 600, 605, 611, 617, 623, 633, 660, 661, 666, 667, 672, 673, 678, 679, 698, 725, 738, 744, 754, 766, 779, 785, 791, 811, 818, 840, 854, 860, 862, 908, 910, 911, 912, 917, 921, 922, 933, 934, 940, 941, 942, 943, 944, 945, 954, 957, 958, 961, 963, 964, 972, 973, 974, 975, 976, 977, 986, 1057, 1107, 1109, 1117, 1125, 1128, 1129, 1136, 1144, 1152, 1157, 1164, 1258, 1261, 1262, 1263, 1266, 1275, 1279, 1289, 1290, 1291, 1295, 1296, 1298, 1386, 1387, 1401, 1402, 1403, 1414, 1418, 1438, 1487, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1520, 1521, 1523, 1524, 1526, 1528, 1529, 1532, 1534, 1535, 1537, 1538, 1539, 1544, 1545, 1546, 1548, 1552, 1553, 1554, 1556, 1557, 1560, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1573, 1574, 1579, 1580, 1582, 1585, 1586, 1588, 1589, 1591, 1593, 1595, 1596, 1597, 1598, 1600, 1602, 1604, 1606, 1607, 1609, 1610, 1612, 1614, 1616, 1617, 1619, 1621, 1623, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1645, 1646, 1647, 1649, 1650, 1651, 1652, 1654, 1655, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1665, 1666, 1667, 1669, 1671, 1672, 1673, 1675, 1676, 1678, 1679, 1681, 1682, 1684, 1685, 1687, 1688, 1689, 1690, 1691, 1693, 1694, 1696, 1697, 1699, 1700, 1703, 1704, 1707, 1708, 1713, 1717, 1718, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1733, 1737, 1738, 1743, 1744, 1746, 1748, 1750, 1751, 1752, 1754, 1758, 1760, 1761, 1762, 1764, 1765, 1767, 1769, 1771, 1775, 1776, 1783, 1785, 1789, 1792, 1793, 1794, 1808, 1813, 1814, 1815, 1816, 1817, 1870, 1891], "number": [0, 9, 10, 13, 16, 33, 92, 99, 103, 114, 163, 186, 194, 210, 228, 233, 274, 276, 302, 316, 319, 323, 324, 325, 330, 336, 393, 399, 403, 407, 438, 441, 452, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 529, 530, 573, 577, 579, 580, 584, 586, 587, 591, 630, 814, 912, 917, 940, 941, 942, 943, 944, 945, 961, 963, 964, 986, 1003, 1008, 1010, 1022, 1027, 1033, 1045, 1054, 1058, 1066, 1070, 1072, 1082, 1107, 1117, 1131, 1133, 1135, 1136, 1144, 1148, 1149, 1152, 1261, 1262, 1263, 1266, 1270, 1277, 1278, 1279, 1281, 1288, 1290, 1291, 1298, 1299, 1306, 1309, 1310, 1311, 1341, 1348, 1371, 1374, 1381, 1386, 1388, 1395, 1396, 1401, 1402, 1403, 1404, 1414, 1418, 1487, 1499, 1500, 1501, 1508, 1510, 1515, 1517, 1523, 1528, 1535, 1565, 1566, 1568, 1569, 1579, 1582, 1585, 1591, 1593, 1600, 1602, 1604, 1609, 1610, 1612, 1623, 1626, 1627, 1630, 1631, 1632, 1635, 1636, 1637, 1640, 1641, 1646, 1647, 1651, 1652, 1657, 1658, 1662, 1663, 1667, 1668, 1669, 1675, 1676, 1681, 1682, 1687, 1688, 1689, 1693, 1694, 1699, 1700, 1703, 1704, 1706, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1751, 1758, 1760, 1761, 1771, 1776, 1789, 1794, 1876, 1878, 1884, 1893, 1894, 1896], "classmethod": [0, 6, 9, 12, 16, 27, 302, 312, 319, 322, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 522, 529, 537, 545, 548, 555, 573, 579, 586, 593, 597, 602, 607, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 910, 919, 939, 946, 949, 950, 952, 955, 959, 962, 970, 978, 981, 983, 995, 1000, 1001, 1002, 1003, 1007, 1010, 1017, 1045, 1066, 1104, 1438, 1487, 1508, 1510, 1517, 1525, 1528, 1533, 1535, 1570, 1574, 1579, 1593, 1602, 1604, 1610, 1612, 1751, 1760, 1776, 1793, 1797], "get_model": [0, 6, 9, 12, 16, 27], "name": [0, 1, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 35, 38, 39, 40, 44, 45, 46, 49, 51, 52, 53, 56, 57, 61, 62, 63, 66, 67, 71, 72, 77, 81, 83, 86, 92, 98, 100, 294, 302, 310, 312, 317, 319, 320, 321, 322, 327, 330, 335, 337, 339, 340, 346, 347, 348, 349, 352, 354, 359, 360, 361, 362, 365, 367, 374, 375, 380, 381, 382, 383, 385, 387, 391, 392, 393, 395, 400, 401, 403, 406, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 445, 446, 447, 450, 451, 452, 453, 454, 458, 461, 463, 468, 472, 474, 478, 481, 482, 485, 487, 489, 491, 497, 500, 502, 504, 506, 507, 511, 512, 513, 515, 516, 520, 521, 522, 523, 527, 528, 529, 535, 537, 543, 544, 545, 548, 553, 554, 555, 560, 561, 562, 565, 566, 568, 569, 572, 573, 579, 580, 586, 587, 593, 596, 597, 598, 601, 602, 606, 608, 609, 612, 613, 614, 615, 618, 619, 621, 624, 626, 629, 630, 634, 635, 636, 638, 639, 641, 642, 644, 645, 646, 649, 650, 651, 652, 653, 654, 656, 657, 658, 662, 663, 664, 668, 669, 670, 674, 675, 676, 680, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 703, 704, 707, 708, 713, 714, 719, 726, 733, 739, 740, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 758, 759, 761, 762, 763, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 795, 797, 799, 800, 801, 803, 805, 806, 807, 810, 813, 814, 816, 817, 819, 820, 843, 844, 846, 848, 849, 850, 853, 856, 857, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 910, 912, 919, 934, 935, 936, 937, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 955, 957, 958, 959, 961, 962, 963, 964, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 985, 986, 987, 990, 993, 1002, 1003, 1005, 1082, 1138, 1157, 1159, 1261, 1263, 1266, 1270, 1285, 1288, 1289, 1290, 1295, 1306, 1393, 1402, 1403, 1438, 1486, 1487, 1488, 1493, 1502, 1503, 1504, 1505, 1508, 1509, 1510, 1511, 1517, 1518, 1525, 1528, 1529, 1533, 1535, 1537, 1570, 1574, 1577, 1578, 1579, 1580, 1581, 1582, 1585, 1590, 1593, 1594, 1602, 1603, 1604, 1605, 1610, 1611, 1612, 1614, 1622, 1623, 1624, 1625, 1626, 1627, 1631, 1632, 1636, 1637, 1641, 1642, 1647, 1648, 1652, 1657, 1658, 1663, 1664, 1669, 1670, 1676, 1677, 1682, 1683, 1688, 1689, 1694, 1695, 1700, 1701, 1703, 1704, 1707, 1716, 1717, 1726, 1727, 1736, 1737, 1749, 1750, 1751, 1757, 1758, 1759, 1760, 1761, 1770, 1771, 1774, 1775, 1776, 1782, 1788, 1789, 1790, 1792, 1870, 1872, 1880, 1886, 1888, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1902], "get": [0, 6, 9, 12, 16, 26, 27, 30, 31, 35, 40, 46, 53, 57, 62, 65, 66, 70, 71, 74, 75, 77, 83, 92, 103, 177, 228, 302, 307, 317, 319, 326, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 426, 430, 435, 443, 453, 461, 472, 474, 481, 489, 502, 506, 507, 516, 520, 522, 529, 537, 545, 548, 555, 559, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 711, 714, 717, 719, 722, 726, 730, 731, 733, 736, 739, 742, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 910, 919, 939, 946, 948, 952, 955, 959, 961, 970, 978, 981, 983, 987, 993, 994, 1002, 1010, 1015, 1016, 1024, 1025, 1045, 1046, 1051, 1052, 1066, 1067, 1081, 1085, 1100, 1127, 1144, 1152, 1171, 1178, 1187, 1190, 1200, 1201, 1218, 1219, 1221, 1222, 1223, 1232, 1235, 1240, 1246, 1249, 1254, 1261, 1262, 1298, 1299, 1347, 1361, 1374, 1381, 1386, 1402, 1403, 1439, 1441, 1446, 1448, 1451, 1456, 1463, 1470, 1473, 1478, 1481, 1487, 1489, 1506, 1507, 1508, 1510, 1516, 1517, 1527, 1528, 1535, 1547, 1558, 1562, 1574, 1579, 1585, 1593, 1601, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1886, 1889, 1890, 1891], "specif": [0, 6, 9, 12, 16, 27, 35, 40, 46, 53, 57, 77, 83, 92, 195, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1003, 1010, 1038, 1045, 1066, 1146, 1263, 1280, 1312, 1395, 1585, 1867, 1868, 1869, 1880, 1887, 1902], "mbook": [0, 1, 16, 17, 302, 303, 505, 981, 982, 983, 984, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "constructor": [0, 1, 9, 10, 16, 17, 35, 40, 41, 46, 47, 53, 54, 57, 58, 62, 63, 66, 67, 71, 72, 75, 76, 77, 78, 83, 84, 87, 88, 92, 93, 302, 303, 312, 317, 319, 320, 327, 330, 331, 339, 340, 349, 350, 354, 355, 361, 362, 363, 375, 376, 383, 387, 388, 393, 394, 400, 403, 409, 410, 413, 415, 416, 417, 418, 419, 423, 429, 430, 434, 435, 438, 439, 443, 444, 453, 454, 461, 463, 472, 474, 475, 481, 482, 489, 491, 502, 506, 507, 508, 513, 515, 516, 518, 522, 523, 529, 530, 537, 538, 545, 546, 548, 549, 555, 556, 561, 562, 566, 569, 570, 573, 579, 580, 586, 587, 593, 594, 597, 598, 602, 603, 608, 609, 614, 615, 619, 620, 626, 627, 630, 631, 635, 636, 639, 642, 645, 646, 650, 651, 652, 653, 654, 657, 658, 663, 664, 669, 670, 675, 676, 681, 682, 685, 686, 689, 690, 693, 694, 697, 698, 701, 704, 705, 708, 709, 714, 715, 719, 720, 726, 727, 733, 734, 739, 740, 746, 749, 750, 756, 759, 760, 761, 762, 768, 769, 774, 775, 781, 782, 787, 788, 793, 794, 795, 800, 801, 806, 807, 813, 814, 820, 835, 843, 844, 849, 850, 856, 857, 864, 865, 868, 869, 872, 873, 876, 877, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 910, 911, 919, 920, 939, 946, 947, 949, 952, 953, 955, 956, 959, 960, 965, 966, 970, 971, 978, 979, 981, 982, 983, 984, 987, 988, 1010, 1035, 1045, 1066, 1263, 1266, 1288, 1290, 1446, 1447, 1448, 1449, 1463, 1464, 1470, 1471, 1478, 1479, 1487, 1488, 1508, 1509, 1510, 1511, 1517, 1518, 1535, 1537, 1579, 1585, 1586, 1593, 1594, 1602, 1603, 1604, 1605, 1610, 1611, 1612, 1613, 1626, 1627, 1631, 1632, 1636, 1637, 1641, 1642, 1647, 1648, 1652, 1653, 1657, 1658, 1663, 1664, 1669, 1670, 1676, 1677, 1682, 1683, 1688, 1689, 1694, 1695, 1700, 1701, 1703, 1704, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1751, 1776, 1782, 1793, 1794, 1894, 1902], "init_st": [0, 7, 9, 16], "initi": [0, 7, 8, 9, 16, 18, 35, 37, 40, 43, 46, 50, 53, 57, 60, 77, 80, 83, 87, 90, 92, 97, 302, 311, 317, 320, 322, 327, 329, 330, 339, 344, 347, 349, 354, 361, 362, 369, 370, 375, 379, 381, 383, 387, 393, 403, 413, 416, 419, 423, 430, 433, 435, 453, 454, 461, 472, 474, 481, 484, 489, 495, 502, 506, 507, 522, 526, 527, 529, 534, 535, 537, 542, 543, 545, 548, 552, 553, 555, 560, 561, 566, 569, 573, 579, 583, 586, 590, 593, 597, 602, 605, 608, 611, 614, 617, 619, 626, 630, 633, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 725, 726, 733, 738, 739, 744, 746, 749, 754, 756, 759, 761, 766, 768, 772, 774, 778, 779, 781, 784, 785, 787, 790, 791, 793, 794, 799, 800, 805, 806, 810, 811, 813, 817, 818, 820, 840, 843, 848, 849, 853, 854, 856, 861, 862, 864, 868, 872, 876, 880, 885, 890, 895, 900, 965, 968, 1075, 1078, 1097, 1099, 1123, 1127, 1300, 1438, 1487, 1497, 1498, 1508, 1510, 1514, 1517, 1528, 1535, 1555, 1556, 1557, 1579, 1580, 1585, 1588, 1593, 1598, 1602, 1604, 1610, 1612, 1614, 1615, 1616, 1617, 1626, 1631, 1636, 1641, 1645, 1647, 1652, 1657, 1661, 1663, 1669, 1673, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1712, 1713, 1717, 1722, 1723, 1727, 1732, 1733, 1737, 1742, 1743, 1744, 1751, 1753, 1754, 1760, 1763, 1764, 1765, 1776, 1784, 1785, 1793, 1796, 1800, 1802, 1803, 1805, 1806, 1886, 1890, 1893, 1895, 1899, 1901], "need": [0, 7, 9, 16, 368, 419, 421, 428, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 703, 704, 707, 724, 880, 884, 885, 889, 890, 894, 895, 899, 900, 904, 1002, 1075, 1081, 1096, 1097, 1100, 1119, 1132, 1133, 1138, 1230, 1231, 1232, 1244, 1245, 1246, 1259, 1288, 1289, 1290, 1296, 1375, 1382, 1388, 1390, 1393, 1394, 1401, 1402, 1403, 1886, 1890, 1893, 1895, 1897, 1898, 1903], "all_model": [0, 2, 9, 16], "with_stat": [0, 2, 9, 16], "true": [0, 2, 3, 4, 9, 11, 16, 29, 64, 69, 73, 103, 186, 228, 276, 368, 370, 397, 424, 443, 450, 454, 504, 575, 579, 580, 586, 587, 626, 627, 839, 857, 934, 940, 941, 942, 943, 944, 945, 987, 993, 1002, 1007, 1010, 1016, 1020, 1026, 1032, 1034, 1045, 1053, 1056, 1057, 1066, 1067, 1069, 1107, 1111, 1118, 1120, 1122, 1123, 1127, 1131, 1133, 1134, 1135, 1136, 1138, 1144, 1148, 1149, 1152, 1157, 1160, 1161, 1162, 1174, 1194, 1204, 1222, 1242, 1256, 1258, 1261, 1262, 1266, 1268, 1269, 1270, 1273, 1275, 1277, 1280, 1288, 1290, 1294, 1295, 1296, 1298, 1303, 1306, 1312, 1315, 1316, 1317, 1324, 1341, 1349, 1356, 1371, 1374, 1375, 1378, 1381, 1382, 1386, 1389, 1392, 1395, 1400, 1401, 1402, 1403, 1409, 1411, 1413, 1414, 1418, 1438, 1444, 1445, 1454, 1455, 1456, 1458, 1461, 1462, 1463, 1465, 1468, 1469, 1470, 1472, 1476, 1477, 1484, 1485, 1498, 1541, 1604, 1605, 1711, 1721, 1731, 1741, 1792, 1794, 1889, 1890, 1892, 1893, 1895, 1897, 1899, 1901, 1902, 1903], "return": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 106, 107, 108, 112, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 163, 186, 228, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 509, 522, 529, 531, 537, 539, 545, 548, 555, 561, 566, 569, 573, 579, 581, 586, 588, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 647, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 724, 726, 728, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 796, 800, 802, 806, 808, 813, 815, 820, 843, 845, 849, 851, 856, 858, 864, 868, 872, 876, 880, 885, 890, 895, 900, 910, 929, 934, 940, 941, 942, 959, 981, 986, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1014, 1018, 1019, 1020, 1021, 1022, 1023, 1029, 1041, 1042, 1043, 1044, 1045, 1047, 1049, 1050, 1055, 1057, 1059, 1063, 1064, 1065, 1066, 1068, 1071, 1074, 1075, 1077, 1081, 1082, 1085, 1087, 1088, 1090, 1091, 1092, 1097, 1098, 1100, 1105, 1106, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1139, 1140, 1147, 1150, 1151, 1154, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1189, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1203, 1205, 1206, 1213, 1214, 1216, 1217, 1220, 1224, 1225, 1226, 1227, 1228, 1229, 1233, 1234, 1237, 1238, 1239, 1241, 1243, 1247, 1248, 1251, 1252, 1253, 1255, 1257, 1258, 1259, 1260, 1267, 1273, 1284, 1293, 1297, 1300, 1311, 1313, 1341, 1417, 1420, 1439, 1446, 1448, 1456, 1463, 1470, 1478, 1487, 1508, 1510, 1517, 1528, 1585, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1880, 1886, 1900], "calc_farm": [0, 3, 9, 11, 16, 20, 1535, 1537, 1886, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "calc_paramet": [0, 3, 4, 20, 21], "persist": [0, 3, 20, 1347, 1361, 1374, 1381], "final": [0, 3, 4, 5, 9, 11, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 87, 89, 92, 302, 306, 317, 327, 330, 339, 343, 347, 349, 354, 361, 362, 366, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 432, 435, 436, 453, 461, 465, 472, 474, 481, 489, 493, 502, 506, 507, 516, 519, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 660, 663, 666, 669, 672, 675, 678, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 753, 756, 759, 761, 768, 771, 774, 777, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 860, 864, 866, 868, 870, 872, 874, 876, 878, 880, 881, 882, 885, 886, 887, 890, 891, 892, 895, 896, 897, 900, 901, 902, 965, 1487, 1494, 1495, 1496, 1508, 1510, 1517, 1528, 1535, 1552, 1553, 1579, 1585, 1593, 1597, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783, 1793, 1795, 1800, 1802, 1804, 1886, 1889, 1893, 1898, 1901, 1903], "data": [0, 1, 3, 4, 9, 11, 16, 20, 21, 26, 30, 31, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 97, 103, 175, 177, 195, 228, 302, 303, 305, 307, 308, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 365, 367, 368, 369, 371, 375, 377, 378, 381, 383, 384, 386, 387, 390, 393, 395, 397, 398, 403, 405, 409, 413, 414, 416, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 443, 444, 445, 446, 447, 448, 449, 450, 453, 454, 455, 457, 461, 463, 464, 467, 472, 474, 476, 477, 481, 482, 483, 489, 491, 492, 496, 502, 504, 506, 507, 510, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 571, 573, 575, 576, 579, 586, 593, 595, 597, 598, 599, 600, 602, 604, 607, 608, 610, 614, 615, 616, 619, 621, 622, 623, 626, 627, 628, 630, 631, 632, 635, 637, 639, 640, 642, 643, 645, 646, 648, 650, 651, 652, 653, 654, 655, 657, 658, 659, 661, 663, 664, 665, 667, 669, 670, 671, 673, 675, 676, 677, 679, 681, 683, 685, 687, 689, 691, 693, 695, 697, 698, 699, 701, 702, 704, 706, 708, 710, 711, 712, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 729, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 763, 764, 765, 766, 768, 770, 771, 772, 774, 776, 777, 778, 779, 781, 783, 784, 785, 787, 789, 790, 791, 793, 794, 795, 797, 798, 799, 800, 803, 804, 805, 806, 807, 809, 810, 811, 813, 814, 816, 817, 818, 820, 836, 837, 838, 839, 840, 843, 844, 846, 847, 848, 849, 852, 853, 854, 856, 859, 861, 862, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 910, 911, 919, 924, 925, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 939, 943, 944, 945, 946, 951, 952, 955, 956, 957, 958, 959, 961, 963, 964, 965, 968, 969, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 986, 987, 988, 994, 995, 1000, 1001, 1002, 1021, 1045, 1048, 1066, 1081, 1100, 1107, 1117, 1118, 1119, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1164, 1168, 1184, 1185, 1230, 1231, 1232, 1236, 1242, 1244, 1245, 1246, 1250, 1256, 1258, 1261, 1262, 1263, 1264, 1266, 1270, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1302, 1306, 1307, 1308, 1309, 1310, 1312, 1317, 1325, 1341, 1343, 1371, 1372, 1378, 1379, 1386, 1387, 1388, 1389, 1392, 1393, 1394, 1395, 1398, 1402, 1403, 1409, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1424, 1430, 1434, 1487, 1495, 1496, 1508, 1510, 1517, 1528, 1535, 1552, 1553, 1575, 1576, 1579, 1583, 1584, 1585, 1587, 1589, 1593, 1597, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1772, 1773, 1776, 1783, 1791, 1865, 1867, 1868, 1870, 1871, 1874, 1875, 1879, 1880, 1881, 1882, 1885, 1886, 1887, 1889, 1890, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1901, 1904], "calc_point": [0, 4, 9, 16, 21, 954, 972, 973, 974, 975, 976, 977, 1886, 1889, 1890, 1900], "farm_result": [0, 3, 4, 9, 11, 16, 20, 21, 25, 910, 911, 919, 920, 939, 952, 953, 955, 956, 970, 971, 978, 979, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "point": [0, 1, 4, 9, 14, 16, 17, 21, 24, 31, 32, 46, 48, 49, 57, 59, 91, 94, 102, 103, 163, 186, 280, 281, 284, 285, 286, 289, 302, 313, 319, 322, 323, 330, 331, 333, 368, 377, 378, 381, 383, 384, 387, 390, 393, 395, 396, 397, 398, 399, 402, 423, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 464, 476, 483, 492, 516, 524, 525, 527, 529, 530, 532, 533, 535, 540, 541, 543, 547, 550, 551, 553, 555, 557, 558, 559, 560, 563, 567, 569, 571, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 589, 591, 592, 708, 711, 712, 714, 717, 718, 719, 720, 722, 723, 724, 726, 727, 730, 732, 733, 734, 736, 737, 739, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 940, 941, 942, 943, 944, 945, 952, 953, 954, 959, 960, 961, 963, 969, 970, 971, 981, 982, 1002, 1010, 1019, 1038, 1044, 1045, 1061, 1062, 1066, 1081, 1100, 1107, 1117, 1118, 1125, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1144, 1146, 1147, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1230, 1231, 1244, 1245, 1258, 1261, 1262, 1266, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1341, 1365, 1370, 1377, 1386, 1387, 1395, 1400, 1402, 1403, 1404, 1405, 1409, 1414, 1418, 1439, 1442, 1443, 1444, 1445, 1446, 1448, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1478, 1482, 1483, 1484, 1485, 1535, 1537, 1587, 1668, 1706, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1761, 1792, 1811, 1812, 1866, 1867, 1870, 1871, 1875, 1878, 1879, 1880, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1899, 1900, 1901, 1902, 1903], "point_model": [0, 4, 9, 21, 330, 331, 516, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 1894], "none": [0, 1, 4, 9, 10, 16, 17, 35, 40, 46, 47, 48, 53, 57, 62, 63, 64, 66, 67, 69, 71, 72, 73, 77, 78, 83, 87, 91, 92, 96, 103, 136, 147, 228, 254, 264, 302, 303, 308, 313, 317, 319, 326, 327, 329, 330, 334, 339, 341, 349, 354, 361, 362, 367, 368, 375, 376, 378, 383, 387, 390, 393, 395, 397, 403, 404, 409, 410, 411, 412, 413, 416, 417, 419, 423, 424, 428, 430, 435, 438, 439, 447, 449, 451, 452, 453, 454, 456, 461, 463, 466, 469, 472, 474, 475, 481, 482, 489, 491, 494, 498, 502, 506, 507, 513, 515, 516, 518, 520, 521, 522, 523, 525, 529, 530, 533, 537, 538, 541, 545, 546, 548, 549, 551, 555, 556, 558, 561, 566, 569, 573, 575, 579, 586, 593, 597, 602, 608, 614, 615, 619, 626, 630, 635, 639, 642, 645, 646, 650, 652, 654, 657, 658, 663, 664, 669, 670, 675, 676, 681, 685, 689, 693, 697, 698, 701, 704, 708, 714, 719, 720, 724, 726, 733, 734, 739, 740, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 806, 807, 813, 814, 843, 844, 849, 856, 864, 868, 872, 876, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 905, 906, 910, 911, 912, 915, 916, 917, 918, 919, 921, 926, 933, 934, 939, 940, 941, 942, 943, 944, 945, 946, 947, 954, 955, 956, 957, 958, 959, 961, 963, 965, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 982, 983, 985, 986, 987, 988, 993, 1002, 1003, 1005, 1010, 1016, 1066, 1067, 1075, 1078, 1079, 1087, 1088, 1097, 1107, 1108, 1117, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1148, 1149, 1152, 1153, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1167, 1179, 1184, 1192, 1196, 1197, 1201, 1215, 1217, 1222, 1228, 1240, 1254, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1275, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1309, 1310, 1311, 1314, 1317, 1325, 1328, 1341, 1343, 1345, 1347, 1349, 1355, 1356, 1361, 1365, 1369, 1370, 1371, 1374, 1375, 1376, 1377, 1378, 1381, 1382, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1401, 1402, 1403, 1404, 1413, 1414, 1415, 1416, 1418, 1419, 1436, 1438, 1456, 1458, 1463, 1465, 1470, 1472, 1486, 1487, 1488, 1490, 1491, 1492, 1508, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1521, 1528, 1529, 1535, 1537, 1538, 1539, 1544, 1554, 1579, 1585, 1593, 1594, 1595, 1596, 1602, 1603, 1604, 1606, 1607, 1610, 1611, 1612, 1614, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1658, 1659, 1660, 1663, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1706, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1751, 1760, 1761, 1776, 1792, 1793, 1794, 1880, 1889, 1890, 1892, 1894, 1895, 1899, 1900, 1901, 1904], "given": [0, 4, 9, 16, 21, 195, 409, 410, 423, 426, 474, 520, 593, 619, 646, 669, 675, 708, 711, 714, 717, 719, 722, 726, 730, 733, 736, 739, 740, 742, 794, 795, 806, 807, 813, 814, 843, 844, 919, 921, 926, 933, 938, 952, 987, 993, 1002, 1010, 1020, 1021, 1036, 1037, 1039, 1044, 1045, 1060, 1061, 1066, 1075, 1085, 1097, 1107, 1117, 1118, 1128, 1132, 1133, 1134, 1136, 1137, 1142, 1144, 1152, 1154, 1157, 1158, 1159, 1160, 1161, 1184, 1261, 1262, 1263, 1264, 1266, 1267, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1328, 1343, 1345, 1375, 1382, 1386, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1402, 1403, 1404, 1405, 1409, 1413, 1414, 1415, 1418, 1422, 1425, 1426, 1431, 1486, 1487, 1495, 1496, 1508, 1510, 1517, 1528, 1535, 1545, 1546, 1552, 1553, 1579, 1593, 1597, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1655, 1657, 1663, 1668, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1706, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783, 1793, 1799, 1800, 1801, 1802, 1807, 1874, 1875, 1876, 1879, 1880, 1881, 1886, 1898], "set": [0, 4, 9, 14, 16, 21, 92, 93, 327, 339, 347, 409, 410, 416, 504, 506, 561, 619, 626, 912, 1002, 1010, 1035, 1038, 1045, 1066, 1081, 1087, 1096, 1100, 1108, 1117, 1119, 1122, 1123, 1126, 1127, 1130, 1131, 1133, 1134, 1135, 1136, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1168, 1215, 1216, 1258, 1260, 1261, 1262, 1263, 1266, 1268, 1269, 1273, 1275, 1277, 1279, 1280, 1281, 1288, 1290, 1291, 1292, 1294, 1295, 1296, 1298, 1299, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1339, 1340, 1342, 1343, 1344, 1345, 1346, 1347, 1349, 1350, 1351, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1386, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1409, 1411, 1413, 1414, 1416, 1419, 1438, 1817, 1875, 1886, 1888, 1889, 1890, 1891, 1897, 1898, 1902, 1903, 1904], "clear_mem": [0, 5, 9, 16, 302, 306, 1901], "fals": [0, 3, 4, 5, 9, 16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 97, 103, 186, 302, 306, 315, 317, 319, 326, 327, 330, 339, 349, 350, 354, 361, 362, 367, 368, 369, 375, 383, 387, 393, 395, 397, 403, 413, 416, 419, 423, 430, 435, 447, 453, 454, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 570, 573, 575, 579, 586, 593, 597, 602, 608, 614, 619, 620, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 682, 685, 686, 689, 690, 693, 694, 697, 701, 704, 708, 714, 719, 726, 733, 739, 744, 746, 749, 754, 756, 759, 761, 766, 768, 774, 779, 781, 782, 785, 787, 788, 791, 793, 794, 795, 800, 806, 811, 813, 818, 820, 840, 843, 849, 854, 856, 862, 864, 868, 872, 876, 880, 881, 885, 886, 890, 891, 895, 900, 901, 910, 911, 912, 919, 921, 927, 933, 940, 941, 942, 943, 944, 945, 952, 954, 955, 957, 958, 959, 961, 963, 964, 972, 973, 974, 975, 976, 977, 981, 986, 1002, 1007, 1010, 1030, 1031, 1032, 1034, 1038, 1045, 1057, 1066, 1107, 1118, 1120, 1122, 1123, 1127, 1133, 1134, 1136, 1138, 1152, 1154, 1157, 1160, 1161, 1174, 1186, 1204, 1222, 1240, 1241, 1242, 1254, 1255, 1256, 1261, 1262, 1263, 1266, 1268, 1269, 1270, 1280, 1288, 1289, 1290, 1294, 1296, 1298, 1302, 1306, 1312, 1315, 1317, 1324, 1327, 1349, 1356, 1371, 1374, 1375, 1378, 1381, 1382, 1389, 1392, 1395, 1400, 1401, 1411, 1413, 1414, 1418, 1438, 1439, 1440, 1444, 1446, 1448, 1450, 1454, 1456, 1461, 1463, 1468, 1470, 1476, 1478, 1480, 1484, 1488, 1535, 1544, 1549, 1550, 1554, 1579, 1585, 1612, 1614, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1792, 1809, 1880, 1886, 1892], "print": [0, 9, 16, 302, 314, 516, 521, 910, 912, 919, 939, 946, 950, 952, 955, 959, 970, 978, 981, 983, 1085, 1281, 1438, 1487, 1508, 1510, 1517, 1525, 1528, 1533, 1593, 1602, 1604, 1610, 1793, 1798, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1899, 1900, 1901, 1902, 1903, 1904], "arg": [0, 9, 10, 16, 17, 20, 302, 312, 314, 393, 400, 413, 415, 416, 418, 423, 429, 430, 434, 448, 449, 513, 515, 516, 520, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 682, 685, 686, 689, 690, 693, 694, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 760, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 910, 919, 929, 939, 946, 949, 952, 954, 955, 959, 970, 978, 981, 983, 1002, 1010, 1015, 1045, 1046, 1066, 1103, 1127, 1131, 1133, 1135, 1148, 1149, 1159, 1167, 1228, 1275, 1278, 1288, 1289, 1290, 1295, 1299, 1309, 1310, 1343, 1353, 1354, 1362, 1380, 1388, 1392, 1393, 1402, 1403, 1404, 1405, 1612, 1613, 1652, 1653, 1793, 1798, 1799, 1800, 1801, 1802, 1807, 1809, 1874, 1880, 1890], "vlim": [0, 9, 16, 302, 314], "1": [0, 1, 9, 16, 83, 84, 103, 114, 163, 182, 186, 228, 233, 274, 275, 276, 283, 302, 314, 396, 397, 438, 440, 447, 449, 450, 451, 452, 454, 504, 574, 575, 582, 589, 650, 651, 653, 658, 664, 669, 670, 676, 787, 793, 794, 800, 849, 850, 905, 908, 910, 912, 919, 921, 922, 957, 958, 963, 985, 1002, 1010, 1013, 1019, 1045, 1066, 1085, 1107, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1136, 1138, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1185, 1218, 1261, 1262, 1263, 1266, 1270, 1275, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1299, 1300, 1306, 1307, 1308, 1314, 1315, 1317, 1324, 1326, 1343, 1358, 1365, 1372, 1379, 1386, 1387, 1389, 1392, 1393, 1394, 1395, 1396, 1398, 1400, 1402, 1403, 1404, 1413, 1414, 1418, 1436, 1438, 1495, 1496, 1535, 1552, 1557, 1579, 1580, 1594, 1597, 1612, 1617, 1641, 1642, 1668, 1669, 1670, 1682, 1683, 1706, 1707, 1713, 1717, 1723, 1727, 1733, 1737, 1744, 1751, 1752, 1754, 1760, 1761, 1762, 1765, 1776, 1783, 1785, 1794, 1808, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1870, 1880, 1883, 1885, 1887, 1889, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904], "kwarg": [0, 3, 4, 9, 10, 11, 16, 17, 20, 21, 103, 133, 228, 251, 302, 312, 314, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 448, 449, 513, 515, 516, 520, 522, 529, 537, 538, 545, 546, 548, 555, 573, 579, 586, 593, 594, 597, 598, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 682, 685, 686, 689, 690, 693, 694, 697, 701, 704, 708, 714, 719, 726, 733, 739, 740, 746, 749, 756, 759, 760, 761, 768, 774, 781, 787, 793, 794, 795, 800, 801, 806, 813, 814, 843, 844, 849, 856, 905, 908, 910, 912, 917, 919, 926, 939, 940, 941, 942, 943, 944, 945, 946, 949, 951, 952, 953, 954, 955, 956, 957, 958, 959, 963, 964, 970, 971, 972, 973, 974, 975, 976, 977, 978, 980, 981, 983, 985, 995, 1000, 1001, 1002, 1010, 1015, 1045, 1046, 1066, 1075, 1080, 1084, 1087, 1097, 1103, 1104, 1107, 1117, 1118, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1137, 1142, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1167, 1228, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1270, 1275, 1277, 1278, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1343, 1344, 1347, 1349, 1353, 1354, 1361, 1362, 1365, 1370, 1373, 1374, 1375, 1377, 1380, 1381, 1382, 1386, 1387, 1388, 1389, 1393, 1396, 1398, 1400, 1402, 1403, 1404, 1405, 1415, 1418, 1487, 1488, 1508, 1509, 1510, 1511, 1517, 1518, 1519, 1528, 1529, 1530, 1535, 1537, 1540, 1579, 1580, 1593, 1594, 1602, 1603, 1604, 1605, 1610, 1611, 1612, 1613, 1617, 1627, 1631, 1632, 1636, 1637, 1642, 1647, 1648, 1652, 1653, 1658, 1663, 1664, 1668, 1706, 1751, 1754, 1760, 1761, 1765, 1776, 1782, 1785, 1791, 1792, 1793, 1798, 1799, 1800, 1801, 1802, 1807, 1809, 1817, 1880], "function": [0, 9, 16, 36, 42, 48, 55, 59, 79, 85, 94, 302, 314, 327, 328, 329, 333, 341, 351, 353, 354, 357, 377, 378, 384, 386, 387, 390, 397, 414, 425, 455, 461, 463, 464, 469, 476, 483, 489, 491, 492, 498, 510, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 563, 567, 571, 575, 593, 594, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 645, 648, 655, 659, 665, 671, 677, 710, 716, 721, 729, 735, 741, 946, 947, 951, 963, 972, 973, 974, 975, 976, 977, 986, 1002, 1044, 1075, 1084, 1097, 1107, 1109, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1139, 1140, 1144, 1152, 1157, 1160, 1161, 1162, 1165, 1166, 1169, 1229, 1243, 1258, 1261, 1266, 1268, 1279, 1281, 1287, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1311, 1313, 1339, 1341, 1343, 1349, 1386, 1387, 1389, 1392, 1396, 1398, 1413, 1418, 1426, 1429, 1431, 1433, 1436, 1438, 1487, 1499, 1506, 1507, 1508, 1510, 1515, 1516, 1517, 1523, 1527, 1528, 1529, 1535, 1544, 1549, 1550, 1552, 1553, 1554, 1565, 1566, 1575, 1576, 1579, 1583, 1584, 1587, 1593, 1594, 1600, 1601, 1602, 1603, 1604, 1605, 1609, 1610, 1611, 1612, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1646, 1647, 1651, 1652, 1657, 1662, 1663, 1667, 1668, 1669, 1675, 1676, 1681, 1682, 1687, 1688, 1693, 1694, 1699, 1700, 1703, 1704, 1706, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1772, 1773, 1776, 1783, 1793, 1799, 1800, 1801, 1802, 1807, 1810, 1811, 1865, 1871, 1872, 1873, 1874, 1875, 1876, 1879, 1880, 1881, 1886, 1889, 1891, 1893, 1894, 1899, 1903], "base": [0, 9, 11, 16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 62, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 103, 165, 228, 302, 314, 317, 327, 328, 330, 331, 333, 339, 341, 342, 349, 351, 354, 357, 361, 362, 372, 375, 383, 384, 387, 390, 393, 403, 413, 414, 416, 419, 423, 425, 430, 435, 447, 451, 452, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 506, 507, 510, 516, 522, 529, 537, 545, 548, 555, 561, 563, 566, 567, 569, 571, 573, 579, 586, 593, 595, 597, 599, 602, 604, 608, 610, 614, 616, 619, 622, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 663, 665, 669, 671, 675, 677, 681, 685, 689, 693, 697, 701, 704, 708, 710, 714, 716, 719, 721, 726, 729, 733, 735, 739, 741, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 801, 806, 813, 820, 843, 844, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 946, 953, 956, 965, 968, 969, 971, 987, 1002, 1003, 1066, 1075, 1078, 1097, 1099, 1103, 1118, 1120, 1133, 1134, 1136, 1261, 1262, 1269, 1278, 1281, 1299, 1302, 1304, 1309, 1310, 1345, 1346, 1402, 1403, 1424, 1430, 1434, 1435, 1439, 1478, 1517, 1528, 1535, 1544, 1579, 1585, 1587, 1593, 1627, 1632, 1637, 1642, 1652, 1658, 1664, 1703, 1802, 1865, 1868, 1869, 1871, 1875, 1876, 1879, 1880, 1881, 1883, 1886, 1888, 1889, 1895, 1896, 1898, 1899, 1901, 1902, 1903, 1904], "verbos": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 92, 97, 302, 303, 314, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 438, 440, 447, 449, 450, 451, 452, 453, 454, 457, 461, 465, 467, 469, 472, 474, 477, 481, 484, 489, 493, 495, 496, 498, 502, 506, 507, 516, 519, 522, 526, 529, 534, 537, 542, 545, 548, 552, 555, 561, 564, 566, 569, 573, 579, 583, 586, 590, 593, 597, 600, 602, 605, 608, 611, 614, 617, 619, 623, 626, 630, 633, 635, 639, 642, 645, 650, 652, 654, 657, 660, 661, 663, 666, 667, 669, 672, 673, 675, 678, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 725, 726, 733, 738, 739, 744, 746, 749, 754, 756, 759, 761, 766, 768, 774, 779, 781, 785, 787, 791, 793, 794, 800, 806, 811, 813, 818, 820, 840, 843, 849, 854, 856, 860, 862, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 908, 919, 921, 922, 957, 958, 972, 973, 974, 975, 976, 977, 1487, 1494, 1495, 1496, 1497, 1508, 1510, 1514, 1517, 1528, 1535, 1538, 1539, 1544, 1545, 1546, 1552, 1553, 1554, 1557, 1579, 1580, 1585, 1588, 1589, 1593, 1597, 1598, 1602, 1604, 1610, 1612, 1617, 1626, 1631, 1636, 1641, 1645, 1647, 1652, 1654, 1655, 1657, 1661, 1663, 1669, 1673, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1713, 1717, 1723, 1727, 1733, 1737, 1744, 1751, 1752, 1754, 1760, 1762, 1765, 1776, 1783, 1785, 1793, 1794, 1798, 1808, 1817, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "chunk": [0, 1, 3, 4, 9, 16, 17, 20, 21, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 303, 304, 317, 319, 326, 327, 328, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 371, 375, 383, 384, 387, 390, 393, 403, 405, 413, 414, 416, 419, 423, 425, 430, 435, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 506, 507, 510, 522, 529, 537, 545, 548, 555, 561, 563, 564, 566, 567, 569, 571, 573, 579, 586, 593, 595, 597, 599, 600, 602, 604, 608, 610, 614, 616, 619, 622, 623, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 685, 689, 693, 697, 701, 704, 708, 710, 714, 716, 719, 721, 726, 729, 733, 735, 739, 741, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585, 1587, 1589, 1866, 1869, 1886, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "d": [0, 9, 16, 26, 30, 31, 103, 182, 228, 302, 304, 409, 410, 416, 417, 445, 446, 654, 794, 795, 910, 911, 1045, 1059, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1306, 1386, 1387, 1438, 1487, 1488, 1510, 1511, 1626, 1627, 1668, 1706, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1811, 1812, 1817, 1834, 1880, 1882, 1889, 1890, 1893, 1899, 1901], "properti": [0, 9, 13, 15, 16, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 53, 57, 77, 83, 92, 95, 302, 310, 317, 319, 323, 324, 325, 327, 330, 339, 349, 354, 361, 362, 370, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 438, 441, 442, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 841, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 909, 1002, 1003, 1005, 1010, 1022, 1045, 1057, 1066, 1107, 1109, 1117, 1118, 1120, 1121, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1137, 1138, 1144, 1145, 1152, 1157, 1158, 1159, 1160, 1161, 1258, 1261, 1262, 1264, 1265, 1266, 1268, 1275, 1276, 1278, 1279, 1284, 1286, 1287, 1288, 1290, 1291, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1311, 1325, 1341, 1343, 1347, 1361, 1365, 1370, 1374, 1375, 1377, 1381, 1382, 1387, 1388, 1389, 1390, 1392, 1394, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1408, 1410, 1411, 1412, 1415, 1418, 1438, 1487, 1493, 1498, 1500, 1501, 1504, 1505, 1508, 1510, 1517, 1522, 1524, 1526, 1528, 1531, 1532, 1534, 1535, 1541, 1547, 1548, 1551, 1558, 1561, 1562, 1565, 1566, 1567, 1568, 1569, 1573, 1579, 1585, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1793, 1800, 1802, 1806], "idata_mem": [0, 9, 16, 302, 310], "current": [0, 9, 13, 16, 19, 22, 23, 24, 26, 28, 29, 30, 31, 34, 64, 69, 73, 87, 90, 91, 92, 95, 195, 302, 310, 965, 968, 969, 1002, 1143, 1157, 1184, 1236, 1242, 1250, 1256, 1263, 1280, 1288, 1290, 1294, 1302, 1306, 1312, 1343, 1347, 1356, 1361, 1374, 1381, 1393, 1396, 1400, 1401, 1409, 1535, 1548, 1579, 1612, 1751, 1760, 1776, 1875, 1896, 1898], "idata": [0, 5, 9, 16, 302, 306, 308, 309, 310, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589, 1886], "memori": [0, 3, 4, 5, 9, 16, 20, 21, 103, 153, 228, 302, 306, 307, 310, 345, 371, 405, 453, 454, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1082, 1589, 1668, 1706, 1886, 1902], "store_model_data": [0, 9, 16, 302, 315], "forc": [0, 3, 4, 9, 16, 20, 21, 53, 83, 92, 97, 195, 302, 315, 317, 327, 330, 349, 354, 361, 362, 369, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 507, 561, 566, 569, 573, 593, 597, 619, 626, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 726, 739, 744, 746, 749, 754, 756, 759, 761, 766, 768, 774, 779, 781, 785, 787, 791, 793, 794, 800, 806, 811, 813, 818, 820, 840, 843, 849, 854, 856, 862, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1002, 1117, 1127, 1136, 1144, 1152, 1279, 1280, 1291, 1298, 1346, 1386, 1395, 1404, 1411, 1875, 1888], "store": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 305, 315, 317, 320, 322, 327, 330, 339, 340, 345, 349, 354, 361, 362, 365, 367, 371, 375, 383, 387, 393, 395, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 836, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1010, 1023, 1045, 1050, 1066, 1294, 1392, 1585, 1589, 1668, 1706, 1889, 1890, 1894], "get_model_data": [0, 9, 16, 302, 307], "from": [0, 9, 16, 35, 40, 46, 47, 49, 53, 57, 77, 83, 92, 103, 108, 112, 114, 195, 228, 233, 302, 307, 308, 317, 318, 319, 322, 327, 330, 331, 339, 349, 354, 361, 362, 365, 367, 368, 375, 376, 377, 383, 387, 393, 395, 398, 403, 413, 416, 419, 423, 424, 428, 430, 435, 443, 444, 445, 446, 449, 450, 453, 454, 461, 463, 472, 474, 481, 489, 491, 502, 504, 506, 507, 522, 523, 524, 529, 530, 532, 537, 538, 540, 545, 546, 547, 548, 549, 550, 555, 556, 557, 561, 562, 566, 569, 573, 576, 579, 586, 593, 597, 598, 602, 608, 614, 615, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 709, 714, 719, 720, 724, 726, 733, 734, 739, 740, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 806, 813, 820, 843, 849, 850, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 910, 911, 951, 954, 961, 963, 972, 973, 974, 975, 976, 977, 981, 985, 987, 988, 989, 990, 1002, 1003, 1005, 1010, 1016, 1035, 1045, 1048, 1066, 1075, 1082, 1086, 1097, 1102, 1107, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1262, 1264, 1266, 1268, 1269, 1279, 1282, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1306, 1308, 1311, 1313, 1316, 1326, 1360, 1365, 1370, 1371, 1377, 1378, 1386, 1387, 1388, 1392, 1393, 1396, 1398, 1402, 1403, 1404, 1406, 1407, 1408, 1410, 1415, 1418, 1435, 1438, 1486, 1535, 1538, 1539, 1570, 1579, 1585, 1612, 1668, 1706, 1751, 1760, 1776, 1792, 1813, 1814, 1815, 1816, 1822, 1823, 1847, 1848, 1863, 1864, 1872, 1874, 1875, 1879, 1880, 1882, 1883, 1886, 1888, 1889, 1890, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1904], "del_model_data": [0, 9, 16, 302, 305], "remov": [0, 9, 16, 302, 305, 619, 625, 1002, 1045, 1048, 1109, 1131, 1135, 1144, 1148, 1149, 1152, 1282, 1298, 1299, 1303, 1304, 1328, 1386, 1402, 1403, 1886, 1888, 1897], "update_n_turbin": [0, 9, 16, 302, 316], "reset": [0, 9, 16, 302, 316, 461, 469, 472, 489, 498, 502, 619, 625, 1002, 1305, 1343, 1400, 1895, 1897, 1899], "accord": [0, 9, 16, 302, 316, 375, 378, 449, 522, 525, 529, 533, 537, 541, 545, 548, 551, 555, 558, 586, 587, 693, 995, 1000, 1001, 1136, 1138, 1266, 1894, 1898], "self": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 105, 106, 107, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 302, 316, 317, 327, 330, 339, 345, 349, 354, 361, 362, 364, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 509, 522, 529, 531, 537, 539, 545, 548, 555, 561, 564, 566, 569, 573, 579, 580, 581, 586, 588, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 647, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 728, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 796, 800, 802, 806, 808, 813, 815, 820, 843, 845, 849, 851, 856, 858, 864, 868, 872, 876, 880, 885, 890, 895, 900, 917, 1002, 1003, 1006, 1010, 1014, 1018, 1019, 1029, 1034, 1045, 1047, 1049, 1055, 1066, 1068, 1071, 1075, 1078, 1097, 1099, 1105, 1106, 1162, 1410, 1560, 1564, 1585, 1589, 1619, 1621, 1711, 1721, 1731, 1741, 1746, 1748, 1767, 1769, 1800, 1802, 1803, 1883], "get_models_idata": [0, 9, 16, 302, 309], "get_models_data": [0, 9, 16, 302, 308], "creat": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 228, 251, 302, 308, 313, 317, 319, 322, 327, 330, 339, 345, 349, 354, 361, 362, 371, 374, 375, 377, 378, 381, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 504, 506, 507, 520, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 560, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 908, 910, 912, 939, 959, 963, 965, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 986, 1002, 1108, 1117, 1120, 1136, 1137, 1138, 1144, 1152, 1160, 1161, 1262, 1266, 1270, 1279, 1288, 1289, 1290, 1291, 1296, 1298, 1326, 1343, 1347, 1361, 1374, 1381, 1386, 1392, 1396, 1398, 1402, 1403, 1404, 1405, 1406, 1407, 1413, 1414, 1416, 1419, 1585, 1589, 1614, 1874, 1879, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "xarrai": [0, 3, 4, 9, 11, 16, 17, 20, 21, 23, 24, 25, 32, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 91, 92, 302, 308, 313, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 454, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 598, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 910, 911, 919, 920, 952, 953, 954, 956, 960, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 982, 1438, 1585, 1817, 1871, 1886, 1890, 1893, 1899, 1900, 1901], "input": [0, 9, 16, 228, 274, 302, 308, 328, 329, 353, 386, 419, 420, 421, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 593, 594, 597, 598, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 884, 889, 894, 899, 904, 1010, 1027, 1036, 1037, 1040, 1045, 1054, 1060, 1061, 1062, 1066, 1070, 1073, 1107, 1117, 1136, 1262, 1263, 1266, 1279, 1280, 1289, 1291, 1306, 1307, 1308, 1315, 1414, 1418, 1438, 1668, 1706, 1808, 1865, 1875, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "new_point_data": [0, 9, 16, 302, 313], "states_indic": [0, 9, 16, 302, 313], "contain": [0, 9, 16, 302, 313, 319, 320, 322, 516, 987, 989, 990, 1002, 1021, 1081, 1100, 1112, 1117, 1118, 1132, 1134, 1138, 1146, 1150, 1151, 1152, 1157, 1160, 1161, 1162, 1193, 1198, 1242, 1256, 1261, 1262, 1279, 1291, 1298, 1356, 1386, 1392, 1395, 1413, 1414, 1554, 1792, 1871, 1874, 1875, 1876, 1880, 1892, 1893, 1894, 1896, 1897, 1900, 1902], "onli": [0, 9, 16, 114, 233, 302, 313, 424, 447, 529, 708, 756, 757, 761, 764, 781, 782, 787, 788, 794, 798, 800, 804, 806, 809, 843, 847, 849, 852, 856, 857, 859, 961, 963, 1002, 1010, 1037, 1040, 1044, 1045, 1048, 1057, 1061, 1062, 1066, 1073, 1107, 1108, 1123, 1128, 1133, 1136, 1152, 1157, 1158, 1160, 1161, 1162, 1184, 1222, 1261, 1262, 1266, 1274, 1280, 1289, 1290, 1294, 1295, 1298, 1299, 1306, 1328, 1347, 1356, 1361, 1374, 1375, 1381, 1382, 1386, 1387, 1393, 1395, 1401, 1402, 1403, 1404, 1406, 1407, 1414, 1418, 1436, 1544, 1668, 1706, 1886, 1888, 1889, 1890, 1891, 1893, 1894, 1900, 1901, 1902, 1904], "new": [0, 9, 16, 103, 114, 133, 186, 195, 228, 233, 251, 276, 302, 312, 375, 380, 381, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 437, 522, 527, 529, 535, 537, 543, 545, 548, 553, 555, 560, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 867, 871, 875, 879, 883, 888, 893, 898, 903, 910, 919, 939, 946, 949, 952, 955, 959, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 1010, 1041, 1042, 1043, 1045, 1063, 1064, 1065, 1066, 1074, 1132, 1153, 1156, 1157, 1230, 1231, 1232, 1244, 1245, 1246, 1294, 1307, 1308, 1342, 1371, 1378, 1391, 1406, 1407, 1438, 1502, 1503, 1535, 1542, 1543, 1579, 1612, 1707, 1709, 1710, 1717, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1751, 1760, 1776, 1886, 1888, 1893, 1894], "algo_typ": [0, 9, 16, 302, 312], "run": [0, 1, 9, 16, 19, 29, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 312, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 365, 375, 380, 383, 387, 393, 400, 403, 413, 415, 416, 418, 419, 420, 422, 423, 429, 430, 434, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 620, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 702, 704, 706, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 884, 885, 889, 890, 894, 895, 899, 900, 904, 910, 919, 939, 946, 949, 952, 955, 959, 970, 978, 981, 983, 1002, 1082, 1535, 1537, 1575, 1576, 1583, 1584, 1585, 1761, 1772, 1773, 1793, 1794, 1799, 1800, 1801, 1802, 1807, 1871, 1875, 1876, 1880, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1905], "time": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 454, 522, 529, 537, 545, 548, 555, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 910, 919, 933, 939, 946, 949, 952, 955, 959, 970, 978, 981, 983, 1002, 1010, 1028, 1045, 1066, 1117, 1136, 1144, 1152, 1158, 1159, 1266, 1279, 1280, 1291, 1295, 1296, 1298, 1299, 1317, 1372, 1379, 1386, 1585, 1668, 1706, 1876, 1880, 1886, 1888, 1891, 1892, 1895, 1896, 1897, 1899, 1901, 1902, 1903], "factori": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 522, 529, 537, 545, 548, 555, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 910, 919, 939, 946, 949, 952, 955, 959, 970, 978, 981, 983], "__repr__": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 509, 522, 529, 531, 537, 539, 545, 548, 555, 561, 566, 569, 573, 579, 581, 586, 588, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 647, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 728, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 796, 800, 802, 806, 808, 813, 815, 820, 843, 845, 849, 851, 856, 858, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1002, 1003, 1006, 1105, 1585], "repr": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 509, 522, 529, 531, 537, 539, 545, 548, 555, 561, 566, 569, 573, 579, 581, 586, 588, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 647, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 728, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 796, 800, 802, 806, 808, 813, 815, 820, 843, 845, 849, 851, 856, 858, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1002, 1003, 1006, 1105, 1438, 1585], "model_id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "uniqu": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 447, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1002, 1020, 1109, 1191, 1304, 1333, 1438, 1585, 1887], "type": [0, 9, 16, 35, 40, 46, 53, 57, 71, 72, 77, 83, 92, 103, 114, 133, 195, 228, 233, 251, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 409, 410, 413, 416, 418, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 516, 518, 520, 521, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 983, 985, 1002, 1003, 1005, 1075, 1078, 1085, 1097, 1099, 1118, 1132, 1150, 1151, 1153, 1156, 1158, 1262, 1270, 1277, 1289, 1373, 1380, 1387, 1391, 1438, 1585, 1614, 1668, 1706, 1800, 1802, 1803, 1870, 1871, 1875, 1879, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1904], "var": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 224, 228, 298, 302, 317, 327, 329, 330, 339, 349, 354, 361, 362, 374, 375, 378, 383, 387, 393, 403, 413, 416, 419, 421, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 525, 529, 533, 537, 541, 545, 548, 551, 555, 558, 561, 566, 569, 570, 573, 579, 586, 593, 597, 602, 608, 609, 614, 619, 621, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 703, 704, 707, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 919, 924, 925, 928, 929, 930, 931, 932, 938, 939, 940, 941, 942, 943, 944, 945, 959, 961, 963, 964, 981, 986, 1002, 1131, 1135, 1148, 1149, 1438, 1487, 1490, 1508, 1510, 1517, 1528, 1535, 1554, 1570, 1574, 1579, 1580, 1581, 1582, 1585, 1593, 1602, 1604, 1610, 1612, 1622, 1623, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1668, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1706, 1751, 1757, 1758, 1760, 1770, 1771, 1776, 1788, 1789, 1870, 1889, 1890, 1899], "v": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1002, 1133, 1295, 1296, 1299, 1306, 1395, 1585, 1668, 1706, 1813, 1814], "variabl": [0, 3, 4, 9, 11, 14, 16, 20, 21, 35, 36, 38, 40, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 71, 72, 77, 79, 81, 83, 84, 85, 86, 92, 94, 98, 298, 302, 317, 327, 328, 329, 330, 333, 335, 339, 341, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 368, 374, 375, 381, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 397, 401, 403, 406, 413, 414, 416, 419, 421, 423, 424, 428, 430, 431, 432, 433, 435, 436, 437, 453, 454, 455, 458, 461, 463, 464, 468, 472, 474, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 502, 504, 506, 507, 510, 511, 522, 527, 529, 535, 537, 543, 545, 548, 553, 555, 560, 561, 562, 563, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 579, 580, 586, 587, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 608, 609, 610, 612, 614, 615, 616, 618, 619, 621, 622, 624, 625, 626, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 652, 654, 655, 656, 657, 658, 659, 662, 663, 664, 665, 668, 669, 670, 671, 674, 675, 676, 677, 680, 681, 684, 685, 688, 689, 692, 693, 696, 697, 698, 700, 701, 703, 704, 705, 707, 708, 714, 715, 719, 724, 726, 733, 739, 740, 746, 747, 748, 749, 750, 751, 752, 753, 756, 758, 759, 761, 762, 763, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 795, 797, 799, 800, 801, 803, 805, 806, 807, 810, 813, 814, 816, 817, 820, 843, 844, 846, 848, 849, 850, 853, 856, 857, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 912, 919, 924, 925, 928, 930, 931, 932, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 951, 954, 955, 957, 958, 959, 961, 962, 963, 964, 970, 972, 973, 974, 975, 976, 977, 978, 980, 981, 983, 985, 986, 1131, 1135, 1148, 1149, 1342, 1487, 1490, 1491, 1492, 1495, 1496, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1510, 1512, 1513, 1516, 1517, 1520, 1521, 1527, 1528, 1535, 1538, 1539, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1559, 1560, 1563, 1564, 1568, 1569, 1570, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1587, 1590, 1593, 1594, 1595, 1596, 1597, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1668, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1706, 1707, 1709, 1710, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1732, 1734, 1735, 1736, 1737, 1739, 1740, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1868, 1870, 1874, 1875, 1876, 1877, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "flag": [0, 2, 3, 4, 9, 11, 16, 17, 20, 21, 29, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 92, 103, 181, 228, 302, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 370, 375, 383, 387, 393, 403, 413, 416, 419, 423, 424, 430, 435, 450, 453, 454, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 580, 586, 587, 593, 597, 602, 608, 614, 619, 620, 626, 627, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 682, 685, 686, 689, 690, 693, 694, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 806, 813, 820, 843, 849, 856, 857, 864, 868, 872, 876, 880, 881, 885, 886, 890, 891, 895, 900, 901, 910, 911, 912, 921, 927, 933, 934, 940, 941, 942, 943, 944, 945, 954, 957, 961, 963, 964, 972, 973, 974, 975, 976, 977, 986, 993, 1002, 1133, 1194, 1444, 1454, 1461, 1468, 1476, 1484, 1487, 1498, 1508, 1510, 1517, 1528, 1535, 1541, 1544, 1549, 1550, 1554, 1561, 1579, 1585, 1593, 1599, 1602, 1604, 1608, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1674, 1676, 1680, 1682, 1686, 1688, 1692, 1694, 1698, 1700, 1702, 1703, 1705, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1793, 1794, 1800, 1802, 1806, 1888, 1893], "sub_model": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 487, 489, 500, 502, 506, 507, 512, 522, 528, 529, 536, 537, 544, 545, 548, 554, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 613, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 713, 714, 719, 726, 733, 739, 745, 746, 749, 755, 756, 759, 761, 767, 768, 773, 774, 780, 781, 786, 787, 792, 793, 794, 800, 806, 812, 813, 819, 820, 842, 843, 849, 855, 856, 863, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585, 1886], "sub": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 195, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 487, 489, 500, 502, 506, 507, 512, 522, 528, 529, 536, 537, 544, 545, 548, 554, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 613, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 713, 714, 719, 726, 733, 739, 745, 746, 749, 755, 756, 759, 761, 767, 768, 773, 774, 780, 781, 786, 787, 792, 793, 794, 800, 806, 812, 813, 819, 820, 842, 843, 849, 855, 856, 863, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1010, 1020, 1021, 1045, 1066, 1278, 1309, 1310, 1580, 1585, 1614, 1876, 1886, 1893], "load_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585, 1589, 1886], "algo": [0, 9, 16, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 71, 73, 75, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 302, 317, 319, 326, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 365, 366, 367, 368, 369, 371, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 390, 391, 393, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 458, 460, 461, 464, 465, 467, 468, 469, 471, 472, 474, 476, 477, 478, 480, 481, 483, 484, 485, 488, 489, 492, 493, 495, 496, 497, 498, 501, 502, 505, 506, 507, 510, 511, 516, 519, 522, 524, 525, 526, 527, 529, 532, 533, 534, 535, 537, 540, 541, 542, 543, 545, 547, 548, 550, 551, 552, 553, 555, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 575, 576, 579, 583, 586, 590, 593, 595, 596, 597, 599, 600, 601, 602, 604, 605, 606, 608, 610, 611, 612, 614, 616, 617, 618, 619, 622, 623, 624, 626, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 644, 645, 648, 649, 650, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 677, 678, 679, 680, 681, 685, 689, 693, 697, 701, 704, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 729, 730, 731, 732, 733, 735, 736, 737, 738, 739, 741, 742, 743, 744, 746, 747, 748, 749, 751, 752, 753, 754, 756, 757, 758, 759, 761, 763, 764, 765, 766, 768, 770, 771, 772, 774, 776, 777, 778, 779, 781, 783, 784, 785, 787, 789, 790, 791, 793, 794, 797, 798, 799, 800, 803, 804, 805, 806, 809, 810, 811, 813, 816, 817, 818, 820, 836, 840, 843, 846, 847, 848, 849, 852, 853, 854, 856, 859, 860, 861, 862, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 919, 921, 933, 939, 952, 953, 954, 965, 968, 969, 970, 971, 1535, 1537, 1575, 1576, 1579, 1583, 1584, 1585, 1587, 1588, 1589, 1590, 1592, 1612, 1751, 1760, 1761, 1772, 1773, 1776, 1782, 1889, 1890, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "0": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 84, 92, 97, 103, 108, 113, 163, 186, 228, 232, 278, 283, 302, 303, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 396, 403, 405, 413, 416, 419, 423, 430, 435, 440, 447, 449, 450, 451, 452, 453, 457, 461, 462, 465, 467, 469, 472, 473, 474, 477, 481, 484, 489, 490, 493, 495, 496, 498, 502, 503, 504, 506, 507, 516, 519, 522, 526, 529, 534, 537, 542, 545, 548, 552, 555, 561, 564, 566, 569, 573, 574, 579, 582, 583, 586, 589, 590, 593, 597, 600, 602, 603, 605, 608, 611, 614, 615, 617, 619, 623, 626, 630, 633, 635, 639, 642, 645, 650, 652, 654, 657, 658, 660, 661, 663, 664, 666, 667, 669, 670, 672, 673, 675, 676, 678, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 725, 726, 727, 733, 734, 738, 739, 744, 746, 749, 754, 756, 759, 761, 766, 768, 774, 779, 781, 785, 787, 791, 793, 794, 795, 800, 806, 807, 811, 813, 814, 818, 820, 835, 840, 843, 849, 850, 854, 856, 857, 860, 862, 864, 868, 872, 876, 880, 885, 890, 895, 900, 908, 912, 921, 922, 939, 941, 942, 944, 945, 952, 954, 957, 958, 963, 972, 973, 974, 975, 976, 977, 985, 1002, 1045, 1107, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1134, 1136, 1138, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1185, 1219, 1261, 1262, 1263, 1266, 1268, 1269, 1270, 1275, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1299, 1300, 1306, 1307, 1308, 1311, 1314, 1315, 1324, 1326, 1355, 1359, 1360, 1362, 1365, 1371, 1372, 1378, 1379, 1386, 1387, 1389, 1392, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1413, 1414, 1418, 1421, 1422, 1424, 1426, 1430, 1431, 1434, 1436, 1438, 1487, 1494, 1495, 1496, 1497, 1508, 1510, 1514, 1517, 1528, 1535, 1538, 1539, 1544, 1545, 1546, 1552, 1553, 1554, 1557, 1579, 1580, 1585, 1588, 1589, 1593, 1594, 1597, 1598, 1602, 1604, 1610, 1612, 1617, 1626, 1631, 1636, 1641, 1645, 1647, 1652, 1654, 1655, 1657, 1661, 1663, 1668, 1669, 1673, 1676, 1682, 1683, 1688, 1694, 1700, 1703, 1706, 1707, 1713, 1717, 1723, 1727, 1733, 1737, 1744, 1751, 1752, 1754, 1760, 1762, 1765, 1776, 1783, 1785, 1793, 1794, 1808, 1810, 1814, 1815, 1817, 1870, 1880, 1881, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "load": [0, 3, 4, 9, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 454, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585, 1589, 1886, 1887, 1892, 1893], "subject": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1541, 1585, 1589], "get_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 838, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 959, 961, 981, 1585], "target": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585, 1898], "lookup": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 598, 602, 603, 608, 614, 619, 626, 630, 635, 636, 639, 642, 645, 650, 652, 654, 657, 658, 663, 664, 669, 670, 675, 676, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 933, 1585, 1875, 1886], "smfp": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "mdata": [0, 9, 16, 30, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 317, 327, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 365, 367, 368, 371, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 405, 413, 414, 416, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 453, 455, 457, 461, 464, 467, 472, 474, 476, 477, 481, 483, 489, 492, 496, 502, 506, 507, 510, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 559, 560, 561, 563, 564, 566, 567, 569, 571, 573, 575, 576, 579, 586, 593, 595, 597, 599, 600, 602, 604, 608, 610, 614, 616, 619, 622, 623, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 661, 663, 665, 667, 669, 671, 673, 675, 677, 679, 681, 685, 689, 693, 697, 701, 704, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 722, 723, 726, 729, 730, 731, 732, 733, 735, 736, 737, 739, 741, 742, 743, 746, 747, 748, 749, 751, 752, 753, 756, 757, 758, 759, 761, 763, 764, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 797, 798, 799, 800, 803, 804, 805, 806, 809, 810, 813, 816, 817, 820, 836, 837, 838, 839, 843, 846, 847, 848, 849, 852, 853, 856, 859, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 1585, 1587, 1589], "getter": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "entri": [0, 9, 14, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 308, 309, 315, 317, 319, 321, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 409, 413, 416, 419, 423, 430, 435, 453, 457, 461, 467, 472, 474, 477, 481, 489, 496, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 564, 566, 569, 573, 579, 586, 593, 597, 600, 602, 608, 614, 619, 623, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 661, 663, 667, 669, 673, 675, 679, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 838, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 951, 1001, 1134, 1136, 1275, 1303, 1585, 1589, 1668, 1706, 1874, 1886, 1891, 1898], "data_to_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "add": [0, 9, 16, 35, 40, 46, 53, 57, 66, 68, 77, 83, 92, 302, 317, 319, 321, 327, 330, 332, 339, 349, 354, 356, 361, 362, 365, 375, 383, 387, 389, 393, 402, 403, 409, 411, 413, 416, 419, 423, 430, 433, 435, 437, 438, 440, 443, 447, 448, 449, 450, 451, 452, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 578, 579, 585, 586, 592, 593, 597, 602, 608, 614, 619, 621, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 772, 774, 778, 781, 784, 787, 790, 793, 794, 799, 800, 805, 806, 810, 813, 817, 820, 843, 848, 849, 853, 856, 861, 864, 867, 868, 871, 872, 875, 876, 879, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 905, 907, 912, 919, 921, 922, 940, 941, 942, 943, 944, 945, 963, 986, 987, 989, 990, 991, 992, 1002, 1010, 1016, 1087, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1134, 1142, 1157, 1230, 1231, 1244, 1245, 1268, 1269, 1270, 1299, 1300, 1307, 1308, 1396, 1398, 1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480, 1487, 1508, 1510, 1517, 1519, 1528, 1530, 1535, 1538, 1539, 1540, 1579, 1585, 1593, 1602, 1604, 1610, 1612, 1614, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1874, 1883, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902], "local": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 795, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1401, 1438, 1585, 1875, 1887, 1888, 1891, 1893, 1896, 1899, 1902], "intend": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 919, 934, 1002, 1082, 1153, 1156, 1164, 1184, 1316, 1391, 1585], "iter": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 33, 35, 40, 46, 53, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 724, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 965, 968, 969, 1295, 1343, 1402, 1438, 1585, 1866, 1869, 1879, 1886, 1889, 1890, 1899, 1901], "from_data_or_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "ret_dim": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "safe": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 453, 461, 472, 474, 481, 489, 502, 506, 507, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1585], "centr": [1, 396, 573, 574, 582, 589, 608, 719, 720, 726, 727, 733, 734, 761, 763, 794, 797, 800, 803, 843, 846, 1131, 1135, 1148, 1149, 1456, 1457, 1470, 1471, 1811, 1812, 1853, 1875, 1880, 1882, 1886, 1889, 1891, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "rotor_wd": [1, 1889, 1890, 1893, 1894, 1895, 1897, 1898, 1902, 1903], "auto": [1, 1002, 1107, 1127, 1173, 1262, 1266, 1288, 1290, 1295, 1299, 1311, 1317, 1349, 1356, 1371, 1378, 1387, 1418, 1817, 1889, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "basic_ctrl": [1, 1890, 1894, 1899, 1901], "10000": [1, 17, 726, 727, 1136, 1889, 1890], "1000": [1, 283, 302, 303, 602, 603, 933, 1075, 1076, 1097, 1136, 1261, 1262, 1398, 1870, 1890, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "wake_mirror": [1, 1890], "dbook": [1, 302, 303, 449, 1891], "modelbook": [1, 17, 302, 303, 505, 516, 517, 518, 519, 520, 521, 981, 983, 984, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "book": [1, 17, 302, 303, 409, 410, 444, 449, 505, 749, 750, 762, 795, 801, 807, 814, 844, 850, 857, 981, 983, 984, 985, 987, 988, 1398, 1885, 1886, 1887, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1900, 1901, 1902, 1903], "windfarm": [1, 17, 302, 303, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 505, 910, 911, 1487, 1510, 1522, 1531, 1551, 1871, 1873, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "wind": [1, 17, 71, 72, 226, 294, 295, 302, 303, 339, 342, 403, 409, 410, 438, 439, 440, 441, 447, 448, 449, 450, 451, 452, 461, 474, 475, 481, 482, 505, 506, 602, 603, 635, 636, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 681, 685, 689, 693, 701, 708, 714, 715, 739, 774, 781, 787, 793, 794, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 910, 911, 913, 914, 927, 959, 961, 963, 964, 972, 973, 974, 975, 976, 977, 981, 985, 1002, 1131, 1133, 1135, 1148, 1149, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1437, 1487, 1508, 1510, 1517, 1522, 1528, 1531, 1535, 1551, 1579, 1593, 1602, 1604, 1610, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1813, 1814, 1815, 1816, 1821, 1822, 1823, 1827, 1828, 1846, 1847, 1848, 1854, 1856, 1865, 1870, 1871, 1874, 1875, 1876, 1877, 1880, 1881, 1882, 1885, 1886, 1887, 1889, 1892, 1893, 1894, 1896, 1897, 1899, 1900, 1901, 1902, 1904], "str": [1, 3, 4, 6, 12, 14, 16, 17, 20, 21, 27, 36, 38, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 62, 63, 67, 71, 72, 79, 81, 85, 86, 94, 98, 103, 154, 195, 228, 270, 283, 312, 319, 320, 321, 322, 328, 329, 333, 335, 339, 341, 346, 347, 351, 352, 353, 357, 359, 362, 365, 367, 368, 374, 378, 380, 381, 384, 385, 386, 390, 391, 393, 394, 395, 397, 400, 401, 406, 409, 410, 414, 415, 416, 417, 418, 421, 422, 424, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 461, 463, 464, 468, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 500, 504, 505, 510, 511, 513, 515, 516, 518, 520, 521, 522, 523, 525, 527, 533, 535, 541, 543, 551, 553, 558, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 572, 575, 580, 587, 593, 594, 595, 596, 597, 598, 599, 601, 602, 603, 604, 606, 610, 612, 614, 615, 616, 618, 619, 621, 622, 624, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 643, 644, 645, 646, 648, 649, 651, 653, 655, 656, 657, 658, 659, 662, 663, 664, 665, 668, 669, 670, 671, 674, 675, 676, 677, 680, 684, 688, 692, 696, 698, 700, 703, 707, 714, 715, 724, 739, 740, 747, 748, 749, 750, 751, 752, 753, 758, 761, 762, 763, 765, 770, 771, 772, 774, 775, 776, 777, 778, 781, 782, 783, 784, 787, 788, 789, 790, 794, 795, 797, 799, 800, 801, 803, 805, 806, 807, 810, 813, 814, 816, 817, 820, 835, 838, 843, 844, 846, 848, 849, 850, 853, 856, 857, 861, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 882, 883, 884, 887, 888, 889, 892, 893, 894, 897, 898, 899, 902, 903, 904, 912, 915, 916, 917, 918, 924, 925, 928, 930, 931, 932, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 947, 948, 951, 954, 957, 958, 961, 962, 963, 964, 965, 966, 972, 973, 974, 975, 976, 977, 980, 985, 986, 987, 989, 990, 991, 992, 993, 994, 995, 1000, 1001, 1002, 1003, 1005, 1010, 1018, 1045, 1049, 1066, 1068, 1106, 1107, 1117, 1118, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1144, 1152, 1153, 1157, 1158, 1160, 1161, 1223, 1239, 1253, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1275, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1311, 1315, 1317, 1333, 1335, 1343, 1347, 1360, 1361, 1365, 1367, 1370, 1374, 1375, 1377, 1381, 1382, 1387, 1388, 1392, 1393, 1395, 1396, 1398, 1400, 1402, 1403, 1414, 1415, 1416, 1418, 1419, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1486, 1488, 1489, 1493, 1502, 1503, 1504, 1505, 1509, 1510, 1511, 1518, 1529, 1537, 1538, 1539, 1554, 1570, 1574, 1577, 1578, 1580, 1587, 1590, 1593, 1594, 1602, 1603, 1605, 1610, 1611, 1614, 1624, 1625, 1627, 1632, 1637, 1642, 1658, 1664, 1668, 1670, 1677, 1683, 1689, 1695, 1701, 1704, 1706, 1711, 1716, 1721, 1726, 1731, 1736, 1741, 1749, 1750, 1759, 1761, 1774, 1775, 1782, 1790, 1791, 1792, 1793, 1794, 1808, 1809, 1817, 1870, 1886, 1894], "Will": 1, "look": [1, 749, 750, 762, 795, 801, 807, 814, 844, 850, 857, 933, 1294, 1299, 1890, 1891, 1893, 1896, 1898, 1903], "up": [1, 749, 750, 762, 795, 801, 807, 814, 844, 850, 857, 933, 1002, 1081, 1100, 1138, 1156, 1160, 1161, 1266, 1290, 1316, 1374, 1381, 1416, 1419, 1886, 1889, 1890], "dict": [1, 3, 4, 10, 11, 14, 15, 16, 17, 20, 21, 36, 42, 46, 47, 48, 49, 55, 59, 65, 70, 71, 72, 74, 79, 83, 84, 85, 94, 302, 303, 308, 309, 310, 312, 314, 315, 319, 320, 322, 328, 329, 333, 339, 340, 341, 345, 347, 351, 353, 357, 371, 378, 381, 384, 386, 390, 395, 397, 400, 405, 414, 415, 418, 420, 424, 429, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 461, 463, 464, 467, 476, 477, 481, 482, 483, 489, 491, 492, 496, 504, 505, 510, 513, 514, 515, 516, 520, 522, 523, 525, 527, 533, 535, 538, 541, 543, 546, 551, 553, 558, 560, 561, 562, 563, 564, 567, 571, 575, 594, 595, 597, 598, 599, 600, 604, 608, 609, 610, 615, 616, 622, 623, 628, 631, 632, 637, 640, 643, 648, 651, 653, 655, 657, 658, 659, 661, 663, 664, 665, 667, 669, 670, 671, 673, 675, 676, 677, 679, 682, 683, 686, 687, 690, 691, 694, 695, 697, 698, 699, 702, 706, 719, 720, 726, 727, 733, 734, 739, 740, 747, 748, 749, 750, 751, 752, 753, 758, 760, 762, 763, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 795, 797, 799, 801, 803, 805, 807, 810, 813, 814, 816, 817, 841, 844, 846, 848, 850, 853, 856, 857, 861, 908, 912, 914, 924, 925, 926, 935, 936, 937, 940, 941, 942, 943, 944, 945, 949, 951, 953, 954, 956, 957, 958, 963, 964, 965, 966, 971, 972, 973, 974, 975, 976, 977, 980, 985, 986, 987, 995, 1000, 1001, 1002, 1117, 1118, 1120, 1125, 1128, 1129, 1133, 1134, 1136, 1138, 1144, 1146, 1152, 1157, 1258, 1279, 1291, 1294, 1295, 1296, 1298, 1300, 1365, 1374, 1381, 1387, 1398, 1408, 1413, 1414, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1488, 1502, 1503, 1509, 1511, 1518, 1529, 1535, 1537, 1538, 1539, 1580, 1581, 1582, 1587, 1589, 1593, 1594, 1602, 1603, 1605, 1610, 1611, 1613, 1617, 1622, 1623, 1627, 1632, 1637, 1642, 1658, 1664, 1668, 1706, 1711, 1721, 1731, 1741, 1754, 1757, 1758, 1761, 1765, 1770, 1771, 1782, 1785, 1788, 1789, 1791, 1792, 1793, 1794, 1799, 1801, 1807, 1808, 1809, 1817, 1871, 1880, 1892, 1893, 1898, 1899, 1901], "choic": [1, 302, 303, 409, 417, 912, 935, 936, 937, 1268, 1269, 1299, 1375, 1382, 1614, 1793, 1794, 1820, 1843, 1882, 1893, 1896, 1899, 1900, 1901, 1902, 1903, 1904], "parallel": [1, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 1002, 1158, 1585, 1668, 1706, 1794, 1886, 1887, 1893, 1896, 1902, 1903], "dask": [1, 3, 4, 20, 21, 302, 303, 327, 1793, 1794, 1880, 1886, 1887, 1890, 1901, 1902], "e": [1, 302, 303, 327, 368, 504, 561, 562, 602, 603, 639, 642, 768, 849, 951, 963, 1001, 1002, 1019, 1021, 1045, 1059, 1066, 1103, 1108, 1117, 1118, 1123, 1126, 1127, 1128, 1130, 1132, 1134, 1136, 1137, 1157, 1158, 1159, 1160, 1161, 1162, 1179, 1194, 1222, 1258, 1261, 1262, 1263, 1266, 1268, 1270, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1295, 1299, 1300, 1303, 1306, 1307, 1308, 1311, 1315, 1317, 1324, 1325, 1334, 1341, 1343, 1360, 1374, 1375, 1381, 1382, 1386, 1388, 1392, 1393, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1438, 1535, 1565, 1566, 1579, 1612, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1792, 1809, 1873, 1875, 1883, 1886, 1887, 1888, 1889, 1892, 1893, 1894, 1895, 1896, 1899, 1904, 1905], "g": [1, 302, 303, 368, 602, 603, 768, 774, 849, 951, 963, 1001, 1002, 1021, 1045, 1066, 1108, 1118, 1123, 1126, 1128, 1130, 1132, 1134, 1136, 1137, 1157, 1159, 1162, 1194, 1258, 1261, 1262, 1266, 1278, 1280, 1295, 1299, 1300, 1303, 1317, 1324, 1334, 1341, 1343, 1374, 1375, 1381, 1382, 1392, 1393, 1398, 1400, 1401, 1668, 1706, 1792, 1809, 1873, 1875, 1883, 1886, 1887, 1889, 1890, 1892, 1895, 1900, 1904], "switch": [1, 3, 4, 20, 21, 395, 940, 941, 942, 943, 944, 945, 986, 1593, 1594, 1603, 1611, 1886, 1890, 1893, 1898], "mirror": [1, 759, 768, 1883, 1886, 1889, 1890], "kei": [1, 3, 4, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 121, 228, 283, 310, 319, 320, 322, 328, 333, 341, 351, 357, 368, 378, 381, 384, 390, 395, 397, 414, 428, 431, 432, 433, 455, 464, 476, 481, 482, 483, 489, 491, 492, 504, 510, 513, 514, 516, 517, 522, 523, 525, 527, 533, 535, 541, 543, 551, 553, 558, 560, 563, 567, 571, 575, 595, 599, 604, 608, 609, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 724, 747, 748, 749, 750, 751, 752, 753, 758, 762, 763, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 795, 797, 799, 801, 803, 805, 807, 810, 814, 816, 817, 820, 838, 844, 846, 848, 850, 853, 857, 861, 935, 936, 937, 951, 957, 958, 987, 994, 995, 999, 1002, 1003, 1004, 1118, 1136, 1138, 1153, 1299, 1300, 1343, 1413, 1414, 1502, 1503, 1538, 1539, 1580, 1581, 1582, 1587, 1593, 1614, 1622, 1623, 1757, 1758, 1770, 1771, 1788, 1789, 1792, 1870, 1894], "valu": [1, 3, 4, 14, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 106, 107, 115, 116, 118, 120, 122, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 181, 186, 195, 228, 230, 231, 234, 235, 237, 238, 239, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 283, 310, 318, 328, 329, 333, 341, 351, 357, 378, 381, 384, 390, 395, 397, 414, 423, 426, 431, 432, 433, 453, 454, 455, 461, 463, 464, 474, 475, 476, 481, 482, 483, 489, 491, 492, 504, 510, 516, 522, 523, 525, 527, 533, 535, 541, 543, 551, 553, 558, 560, 563, 567, 569, 570, 571, 575, 595, 598, 599, 602, 604, 608, 609, 610, 616, 622, 628, 632, 637, 640, 643, 646, 648, 655, 659, 665, 669, 671, 675, 677, 693, 697, 698, 704, 705, 708, 711, 714, 717, 719, 720, 722, 726, 730, 733, 734, 736, 739, 742, 746, 747, 748, 749, 750, 751, 752, 753, 757, 758, 762, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 795, 797, 798, 799, 801, 803, 804, 805, 807, 809, 810, 814, 816, 817, 836, 839, 844, 846, 847, 848, 850, 852, 853, 857, 859, 861, 921, 926, 933, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 957, 958, 961, 963, 964, 972, 973, 974, 975, 976, 977, 985, 986, 987, 1002, 1003, 1008, 1009, 1010, 1029, 1036, 1037, 1040, 1042, 1043, 1045, 1047, 1055, 1059, 1060, 1061, 1062, 1064, 1065, 1066, 1071, 1073, 1074, 1075, 1081, 1085, 1087, 1088, 1090, 1091, 1092, 1097, 1100, 1107, 1109, 1117, 1118, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1146, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1164, 1165, 1166, 1170, 1184, 1203, 1205, 1236, 1250, 1258, 1261, 1262, 1263, 1266, 1268, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1309, 1310, 1311, 1313, 1314, 1317, 1324, 1343, 1345, 1348, 1356, 1360, 1362, 1370, 1371, 1373, 1377, 1378, 1380, 1383, 1386, 1387, 1389, 1392, 1393, 1394, 1395, 1396, 1398, 1401, 1402, 1403, 1404, 1413, 1414, 1418, 1426, 1429, 1431, 1433, 1438, 1487, 1490, 1491, 1492, 1495, 1496, 1502, 1503, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1538, 1539, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1562, 1563, 1564, 1575, 1576, 1579, 1580, 1581, 1582, 1583, 1584, 1587, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1612, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1654, 1655, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1740, 1742, 1743, 1745, 1746, 1747, 1748, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1776, 1783, 1784, 1786, 1787, 1788, 1789, 1792, 1799, 1801, 1807, 1810, 1838, 1870, 1875, 1880, 1882, 1886, 1889, 1890, 1892, 1897, 1898, 1904], "height": [1, 300, 409, 410, 416, 417, 419, 420, 447, 453, 454, 461, 463, 472, 586, 587, 626, 627, 681, 683, 685, 687, 689, 691, 693, 695, 697, 699, 701, 702, 704, 706, 768, 769, 1002, 1133, 1134, 1158, 1179, 1268, 1270, 1299, 1311, 1317, 1325, 1342, 1389, 1396, 1402, 1403, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1836, 1853, 1874, 1875, 1881, 1882, 1885, 1886, 1887, 1890, 1891, 1892, 1896, 1899, 1900], "databook": [1, 302, 303, 443, 444, 449, 987, 988, 989, 990, 991, 992, 993, 994, 1872, 1880], "option": [1, 3, 4, 10, 11, 17, 20, 21, 47, 48, 62, 63, 67, 72, 78, 91, 195, 303, 308, 309, 312, 313, 314, 326, 328, 329, 331, 341, 353, 357, 367, 368, 375, 376, 378, 386, 390, 395, 397, 400, 409, 410, 411, 412, 415, 417, 418, 424, 428, 429, 434, 438, 444, 447, 448, 449, 450, 451, 452, 453, 454, 461, 463, 469, 472, 475, 482, 489, 491, 498, 502, 504, 510, 515, 518, 520, 521, 523, 525, 530, 533, 538, 541, 546, 549, 551, 556, 558, 575, 580, 587, 594, 598, 615, 631, 646, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 682, 686, 690, 694, 698, 719, 720, 724, 733, 734, 740, 760, 795, 801, 806, 807, 814, 843, 844, 857, 906, 908, 911, 912, 921, 926, 933, 934, 940, 941, 942, 943, 944, 945, 946, 947, 949, 953, 954, 956, 957, 958, 961, 963, 964, 966, 969, 970, 971, 972, 973, 974, 975, 976, 977, 980, 981, 983, 985, 986, 987, 988, 1000, 1001, 1002, 1003, 1005, 1009, 1010, 1016, 1066, 1067, 1107, 1117, 1118, 1127, 1128, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1309, 1310, 1317, 1328, 1347, 1355, 1361, 1371, 1374, 1375, 1378, 1381, 1382, 1386, 1388, 1389, 1392, 1393, 1395, 1396, 1402, 1403, 1404, 1405, 1413, 1414, 1415, 1418, 1440, 1444, 1450, 1454, 1458, 1461, 1465, 1468, 1472, 1476, 1480, 1484, 1486, 1488, 1491, 1492, 1509, 1511, 1512, 1513, 1518, 1520, 1521, 1529, 1537, 1538, 1539, 1544, 1549, 1550, 1554, 1580, 1594, 1595, 1596, 1602, 1603, 1605, 1606, 1607, 1610, 1611, 1613, 1614, 1617, 1627, 1628, 1629, 1632, 1633, 1634, 1637, 1638, 1639, 1642, 1643, 1644, 1649, 1650, 1658, 1659, 1660, 1664, 1665, 1666, 1668, 1670, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1704, 1706, 1708, 1711, 1718, 1721, 1728, 1731, 1738, 1741, 1754, 1761, 1765, 1782, 1785, 1791, 1792, 1793, 1794, 1809, 1817, 1879, 1886, 1888, 1893, 1895, 1896, 1898, 1902, 1903], "default": [1, 46, 47, 48, 75, 96, 103, 195, 228, 302, 303, 308, 309, 334, 404, 424, 449, 456, 461, 466, 489, 494, 518, 523, 529, 530, 537, 538, 546, 548, 549, 556, 598, 646, 740, 814, 915, 916, 917, 918, 921, 933, 959, 962, 981, 995, 1002, 1017, 1038, 1081, 1091, 1097, 1100, 1103, 1104, 1107, 1117, 1118, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1164, 1184, 1186, 1222, 1223, 1242, 1256, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1275, 1277, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1306, 1309, 1310, 1312, 1315, 1317, 1324, 1326, 1341, 1342, 1355, 1360, 1365, 1370, 1371, 1373, 1374, 1375, 1377, 1378, 1380, 1381, 1382, 1386, 1387, 1389, 1392, 1393, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1409, 1411, 1413, 1414, 1415, 1416, 1418, 1419, 1554, 1668, 1704, 1706, 1792, 1800, 1817, 1868, 1870, 1880, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1900, 1901, 1902, 1904], "level": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 361, 366, 369, 371, 379, 405, 447, 449, 450, 451, 452, 454, 457, 465, 467, 469, 477, 484, 493, 495, 496, 498, 519, 526, 534, 542, 552, 564, 583, 586, 587, 590, 600, 605, 611, 617, 623, 633, 660, 661, 666, 667, 672, 673, 678, 679, 725, 738, 744, 754, 766, 779, 785, 791, 811, 818, 840, 854, 860, 862, 908, 919, 921, 922, 926, 940, 941, 942, 943, 944, 945, 957, 958, 972, 973, 974, 975, 976, 977, 986, 1002, 1075, 1082, 1097, 1131, 1135, 1142, 1148, 1149, 1268, 1370, 1377, 1383, 1393, 1402, 1403, 1494, 1495, 1496, 1497, 1514, 1538, 1539, 1544, 1545, 1546, 1552, 1553, 1554, 1557, 1580, 1588, 1589, 1597, 1598, 1612, 1614, 1617, 1645, 1654, 1655, 1661, 1673, 1713, 1723, 1733, 1744, 1752, 1754, 1762, 1765, 1783, 1785, 1793, 1794, 1808, 1817, 1865, 1871, 1873, 1875, 1886, 1890, 1899], "mean": [1, 103, 191, 228, 302, 303, 343, 435, 912, 919, 924, 927, 928, 931, 935, 936, 937, 939, 954, 961, 963, 970, 972, 973, 974, 1120, 1128, 1136, 1138, 1144, 1152, 1157, 1261, 1266, 1298, 1386, 1389, 1404, 1413, 1414, 1593, 1594, 1602, 1603, 1611, 1668, 1682, 1683, 1706, 1876, 1878, 1886, 1890, 1893, 1895, 1902, 1903], "silent": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 366, 369, 371, 379, 405, 440, 447, 449, 450, 451, 452, 457, 467, 469, 477, 484, 495, 496, 498, 519, 526, 534, 542, 552, 564, 583, 590, 600, 605, 611, 617, 623, 633, 661, 667, 673, 679, 725, 738, 744, 754, 766, 779, 785, 791, 811, 818, 840, 854, 860, 862, 908, 921, 922, 957, 958, 972, 973, 974, 975, 976, 977, 1392, 1494, 1495, 1496, 1497, 1514, 1538, 1539, 1544, 1545, 1546, 1552, 1553, 1554, 1557, 1580, 1588, 1589, 1597, 1598, 1617, 1645, 1654, 1655, 1661, 1673, 1713, 1723, 1733, 1744, 1752, 1754, 1762, 1765, 1783, 1785, 1793, 1794, 1808, 1817], "bool": [2, 3, 4, 5, 11, 16, 17, 20, 21, 29, 64, 69, 73, 97, 103, 186, 228, 276, 306, 315, 326, 339, 341, 349, 350, 367, 368, 369, 370, 395, 397, 411, 412, 414, 424, 437, 447, 450, 453, 454, 504, 569, 570, 575, 579, 580, 586, 587, 595, 599, 604, 610, 616, 620, 622, 626, 627, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 681, 682, 685, 686, 689, 690, 693, 694, 744, 747, 748, 751, 754, 757, 758, 763, 765, 766, 779, 781, 782, 785, 787, 788, 791, 794, 795, 797, 803, 809, 811, 816, 818, 839, 840, 846, 852, 854, 856, 857, 859, 862, 867, 871, 875, 879, 880, 881, 883, 885, 886, 888, 890, 891, 893, 898, 900, 901, 903, 910, 911, 912, 921, 927, 933, 934, 940, 941, 942, 943, 944, 945, 954, 957, 958, 961, 963, 964, 972, 973, 974, 975, 976, 977, 986, 993, 1010, 1016, 1038, 1045, 1057, 1066, 1067, 1107, 1117, 1118, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1146, 1148, 1149, 1152, 1157, 1160, 1161, 1162, 1178, 1204, 1222, 1240, 1242, 1254, 1256, 1258, 1261, 1262, 1263, 1266, 1268, 1270, 1277, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1302, 1306, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1324, 1327, 1332, 1334, 1337, 1338, 1341, 1346, 1356, 1368, 1371, 1374, 1375, 1378, 1381, 1382, 1386, 1387, 1389, 1392, 1396, 1398, 1400, 1401, 1402, 1403, 1409, 1413, 1414, 1418, 1438, 1440, 1444, 1450, 1454, 1458, 1461, 1465, 1468, 1472, 1476, 1480, 1484, 1487, 1488, 1498, 1506, 1507, 1516, 1527, 1541, 1544, 1549, 1550, 1554, 1593, 1594, 1599, 1601, 1603, 1604, 1605, 1608, 1611, 1614, 1674, 1680, 1686, 1692, 1698, 1702, 1705, 1707, 1708, 1711, 1721, 1731, 1741, 1792, 1793, 1794, 1806, 1809, 1890, 1899, 1901], "includ": [2, 48, 330, 983, 989, 1002, 1039, 1108, 1133, 1152, 1162, 1194, 1222, 1228, 1262, 1266, 1289, 1290, 1298, 1334, 1347, 1361, 1370, 1374, 1377, 1381, 1401, 1403, 1409, 1411, 1879, 1886, 1888, 1891, 1893, 1903, 1904], "mdl": [2, 1486], "chunked_result": [3, 4, 20, 21], "after": [3, 4, 11, 20, 21, 331, 397, 435, 436, 447, 575, 602, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 972, 973, 974, 975, 976, 977, 1010, 1016, 1045, 1066, 1123, 1133, 1266, 1273, 1277, 1280, 1296, 1375, 1382, 1402, 1403, 1893, 1897], "instead": [3, 4, 20, 21, 326, 367, 447, 453, 454, 461, 463, 489, 491, 794, 795, 880, 881, 885, 886, 890, 891, 900, 901, 957, 958, 961, 963, 1002, 1082, 1120, 1133, 1144, 1152, 1207, 1229, 1243, 1262, 1288, 1295, 1298, 1299, 1306, 1347, 1361, 1372, 1374, 1379, 1381, 1386, 1392, 1393, 1402, 1403, 1404, 1535, 1544, 1579, 1612, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1880, 1886, 1888, 1895, 1901, 1903, 1904], "result": [3, 4, 9, 11, 16, 20, 21, 23, 24, 25, 32, 36, 42, 48, 53, 55, 57, 59, 62, 64, 66, 69, 71, 73, 75, 79, 85, 91, 94, 102, 195, 328, 329, 333, 341, 351, 353, 357, 378, 384, 386, 390, 393, 395, 397, 414, 420, 424, 432, 435, 436, 455, 464, 476, 483, 492, 510, 525, 529, 533, 541, 551, 558, 563, 567, 569, 570, 571, 573, 575, 579, 586, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 683, 687, 691, 695, 699, 702, 706, 708, 753, 761, 763, 771, 777, 794, 797, 800, 803, 843, 846, 866, 870, 872, 873, 874, 878, 880, 882, 885, 887, 890, 891, 892, 895, 897, 900, 902, 910, 911, 912, 919, 920, 921, 922, 924, 925, 926, 928, 930, 931, 932, 933, 935, 936, 937, 938, 952, 953, 954, 955, 956, 959, 960, 961, 963, 969, 970, 971, 978, 979, 982, 1019, 1118, 1120, 1131, 1134, 1135, 1136, 1138, 1144, 1148, 1149, 1152, 1160, 1161, 1162, 1266, 1270, 1295, 1298, 1299, 1312, 1327, 1356, 1372, 1379, 1386, 1387, 1396, 1491, 1492, 1495, 1496, 1512, 1513, 1520, 1521, 1535, 1542, 1543, 1545, 1546, 1549, 1550, 1552, 1553, 1571, 1572, 1579, 1587, 1595, 1596, 1597, 1606, 1607, 1612, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1659, 1660, 1665, 1666, 1668, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1706, 1707, 1709, 1710, 1717, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1751, 1752, 1760, 1762, 1776, 1783, 1799, 1801, 1807, 1810, 1866, 1867, 1870, 1875, 1879, 1882, 1886, 1889, 1890, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904], "addit": [3, 4, 17, 20, 21, 312, 329, 353, 386, 400, 415, 418, 424, 429, 434, 447, 448, 453, 454, 481, 482, 505, 538, 546, 594, 598, 651, 653, 658, 664, 670, 676, 682, 686, 690, 694, 697, 698, 740, 760, 795, 801, 814, 844, 856, 857, 940, 941, 942, 943, 944, 945, 949, 953, 954, 956, 957, 958, 963, 964, 965, 966, 971, 972, 973, 974, 975, 976, 977, 980, 985, 1107, 1118, 1184, 1263, 1266, 1278, 1280, 1289, 1295, 1300, 1309, 1310, 1341, 1386, 1387, 1393, 1418, 1488, 1509, 1511, 1518, 1529, 1535, 1537, 1580, 1594, 1602, 1603, 1605, 1610, 1611, 1617, 1754, 1761, 1765, 1782, 1785, 1791, 1792, 1808, 1817, 1886, 1890, 1898, 1902, 1903], "run_calcul": [3, 4, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 1585], "dataset": [3, 4, 9, 11, 17, 20, 21, 23, 24, 25, 32, 64, 69, 73, 91, 308, 313, 327, 329, 353, 386, 453, 454, 910, 911, 919, 920, 952, 953, 954, 956, 960, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 982, 1002, 1134, 1136, 1138, 1262, 1295, 1413, 1414, 1817, 1871, 1886, 1890, 1893, 1899, 1900, 1901], "have": [3, 4, 11, 20, 21, 397, 575, 593, 594, 954, 1002, 1010, 1022, 1045, 1066, 1107, 1109, 1133, 1137, 1150, 1151, 1158, 1222, 1259, 1261, 1264, 1266, 1288, 1289, 1290, 1295, 1299, 1305, 1306, 1307, 1308, 1316, 1342, 1343, 1362, 1386, 1388, 1395, 1396, 1402, 1403, 1415, 1418, 1668, 1706, 1812, 1875, 1886, 1888, 1890, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1903], "dimens": [3, 4, 11, 20, 21, 103, 194, 209, 214, 228, 289, 291, 313, 319, 320, 321, 322, 329, 367, 368, 397, 575, 919, 935, 936, 937, 954, 1002, 1010, 1021, 1027, 1032, 1033, 1045, 1054, 1058, 1066, 1070, 1072, 1127, 1133, 1134, 1168, 1263, 1266, 1288, 1289, 1290, 1299, 1312, 1325, 1400, 1815, 1870, 1875, 1890, 1891, 1893, 1899, 1900, 1901, 1904], "persist_mdata": [4, 21], "persist_pdata": 4, "numpi": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 114, 119, 228, 233, 313, 318, 319, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 510, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 559, 563, 567, 571, 574, 575, 576, 578, 582, 585, 589, 592, 593, 594, 595, 599, 604, 610, 616, 621, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 683, 687, 691, 695, 697, 698, 699, 702, 706, 710, 711, 712, 716, 717, 718, 721, 722, 723, 724, 729, 730, 731, 732, 735, 736, 737, 741, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 838, 839, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 913, 943, 944, 945, 954, 972, 973, 974, 975, 976, 977, 981, 986, 1036, 1037, 1040, 1060, 1061, 1062, 1073, 1107, 1117, 1133, 1137, 1144, 1152, 1160, 1161, 1242, 1256, 1261, 1262, 1279, 1288, 1291, 1295, 1296, 1298, 1299, 1307, 1308, 1386, 1418, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1490, 1506, 1507, 1516, 1527, 1535, 1537, 1544, 1547, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1571, 1572, 1581, 1582, 1587, 1592, 1601, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1668, 1706, 1711, 1712, 1714, 1715, 1721, 1722, 1724, 1725, 1731, 1732, 1734, 1735, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1753, 1755, 1756, 1757, 1758, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1786, 1787, 1788, 1789, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1870, 1889, 1890, 1892, 1893, 1897, 1899, 1900, 1901, 1904], "ndarrai": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 313, 318, 321, 322, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 510, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 559, 563, 567, 571, 574, 575, 576, 578, 582, 585, 589, 592, 593, 594, 595, 599, 604, 610, 616, 621, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 683, 687, 691, 695, 697, 698, 699, 702, 706, 710, 711, 712, 716, 717, 718, 721, 722, 723, 724, 729, 730, 731, 732, 735, 736, 737, 741, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 838, 839, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 913, 938, 943, 944, 945, 954, 972, 973, 974, 975, 976, 977, 981, 986, 1107, 1117, 1133, 1137, 1144, 1152, 1160, 1161, 1261, 1262, 1279, 1288, 1291, 1298, 1299, 1386, 1418, 1436, 1437, 1442, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1463, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1490, 1506, 1507, 1516, 1527, 1535, 1537, 1544, 1547, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1571, 1572, 1581, 1582, 1587, 1592, 1601, 1614, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1668, 1706, 1711, 1712, 1714, 1715, 1721, 1722, 1724, 1725, 1731, 1732, 1734, 1735, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1753, 1755, 1756, 1757, 1758, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1784, 1786, 1787, 1788, 1789, 1792, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1889, 1890, 1901, 1904], "interest": [4, 16, 17, 21, 46, 985, 1222, 1867, 1875, 1889, 1896, 1900, 1901], "shape": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 209, 228, 313, 322, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 452, 455, 460, 464, 471, 476, 480, 483, 488, 492, 501, 510, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 559, 563, 567, 571, 574, 575, 576, 578, 582, 585, 589, 592, 593, 594, 595, 599, 604, 610, 616, 621, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 683, 687, 691, 695, 697, 699, 702, 706, 710, 711, 712, 716, 717, 718, 721, 722, 723, 724, 729, 730, 731, 732, 735, 736, 737, 741, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 839, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 913, 943, 944, 945, 954, 981, 986, 1036, 1037, 1040, 1060, 1061, 1062, 1073, 1120, 1134, 1136, 1157, 1262, 1263, 1266, 1288, 1289, 1290, 1295, 1299, 1306, 1355, 1388, 1392, 1395, 1436, 1437, 1442, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1490, 1491, 1492, 1495, 1496, 1506, 1507, 1512, 1513, 1516, 1520, 1521, 1527, 1535, 1537, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1575, 1576, 1581, 1582, 1583, 1584, 1587, 1592, 1595, 1596, 1597, 1599, 1601, 1606, 1607, 1608, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1656, 1659, 1660, 1665, 1666, 1671, 1672, 1674, 1678, 1679, 1680, 1684, 1685, 1686, 1690, 1691, 1692, 1696, 1697, 1698, 1702, 1705, 1709, 1710, 1711, 1712, 1714, 1715, 1719, 1720, 1721, 1722, 1724, 1725, 1729, 1730, 1731, 1732, 1734, 1735, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1752, 1753, 1755, 1756, 1757, 1758, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1783, 1784, 1786, 1787, 1788, 1789, 1791, 1792, 1808, 1812, 1813, 1814, 1815, 1816, 1880, 1886, 1889, 1890, 1899, 1900, 1904], "n_point": [4, 16, 17, 21, 48, 49, 59, 94, 313, 319, 322, 323, 333, 378, 384, 390, 396, 424, 426, 427, 431, 432, 433, 436, 437, 455, 464, 476, 483, 492, 525, 533, 541, 551, 558, 559, 563, 567, 571, 574, 582, 589, 711, 712, 717, 718, 722, 723, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 753, 757, 758, 763, 764, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 798, 799, 803, 804, 805, 809, 810, 816, 817, 836, 839, 846, 847, 848, 852, 853, 859, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903, 954, 1444, 1445, 1454, 1455, 1461, 1462, 1464, 1468, 1469, 1476, 1477, 1484, 1485, 1535, 1537, 1587, 1711, 1721, 1731, 1741, 1792, 1890, 1900], "3": [4, 16, 17, 21, 114, 186, 233, 313, 322, 395, 396, 398, 426, 427, 431, 559, 566, 574, 576, 582, 589, 711, 712, 717, 718, 722, 723, 730, 732, 736, 737, 742, 743, 752, 770, 776, 783, 789, 913, 954, 981, 986, 1003, 1010, 1011, 1045, 1066, 1085, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1207, 1215, 1258, 1261, 1262, 1266, 1268, 1269, 1270, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1307, 1308, 1311, 1343, 1387, 1392, 1396, 1398, 1436, 1438, 1535, 1537, 1668, 1706, 1875, 1880, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "pointdatamodel": [4, 21, 46, 57, 331, 332, 383, 384, 385, 386, 387, 388, 389, 403, 516, 561, 566, 569, 1867, 1871, 1875], "execut": [4, 21, 36, 42, 48, 55, 59, 79, 85, 94, 328, 331, 333, 341, 351, 357, 384, 390, 414, 425, 455, 464, 476, 483, 492, 510, 563, 567, 571, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 710, 716, 721, 729, 735, 741, 1280, 1438, 1587, 1793, 1800, 1875, 1880, 1888], "persist_fdata": [4, 21], "point_result": [4, 16, 21, 32, 954, 1889, 1890, 1900], "clear": [5, 306, 1002, 1128, 1141, 1143, 1896], "max_it": [9, 10], "maxim": [9, 10, 579, 580, 602, 726, 727, 733, 734, 814, 940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 985, 986, 1413, 1414, 1439, 1442, 1446, 1448, 1452, 1456, 1459, 1463, 1466, 1470, 1474, 1478, 1482, 1528, 1535, 1558, 1559, 1560, 1561, 1579, 1593, 1594, 1599, 1602, 1603, 1604, 1608, 1610, 1611, 1612, 1618, 1619, 1636, 1637, 1669, 1674, 1676, 1680, 1682, 1686, 1688, 1692, 1694, 1698, 1700, 1702, 1703, 1705, 1707, 1714, 1717, 1724, 1727, 1728, 1734, 1737, 1738, 1745, 1746, 1751, 1755, 1760, 1761, 1766, 1767, 1776, 1786, 1840, 1875, 1876, 1878, 1882, 1886, 1893, 1897], "conv_crit": [9, 10, 1890], "convcrit": [9, 10, 62, 63, 64, 65, 66, 67, 68, 71, 1868], "converg": [9, 10, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 1866, 1868, 1886, 1890, 1901], "criteria": [9, 10, 62, 63, 64, 66, 67, 69, 71, 72, 73, 75, 1868, 1890], "prev_farm_result": 9, "previou": [9, 64, 69, 73, 368, 428, 435, 437, 724, 864, 867, 868, 871, 872, 875, 876, 879, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903, 1123, 1280, 1370, 1377, 1886, 1890, 1901], "set_urelax": [9, 14, 1890], "entry_point": [9, 14], "urel": [9, 14, 83, 84], "under": [9, 14, 15, 77, 78, 83, 84, 339, 340, 345, 354, 371, 387, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1262, 1299, 1389, 1402, 1403, 1589, 1868, 1883, 1886, 1887, 1890, 1891, 1892, 1894, 1897, 1904], "relax": [9, 14, 15, 77, 78, 83, 84, 1868, 1886, 1890], "paramet": [9, 15, 16, 46, 327, 339, 354, 387, 453, 461, 489, 504, 506, 507, 522, 645, 657, 663, 669, 675, 697, 719, 726, 733, 739, 794, 800, 806, 813, 820, 841, 843, 849, 856, 965, 995, 1002, 1215, 1535, 1760, 1776, 1837, 1844, 1845, 1875, 1877, 1882, 1886, 1890, 1893, 1896, 1900, 1902, 1903], "urelax": [9, 15, 77, 78, 83, 84, 85, 86, 1868], "tupl": [10, 17, 103, 209, 214, 228, 312, 314, 319, 320, 321, 322, 328, 329, 353, 367, 386, 400, 415, 418, 429, 434, 448, 449, 504, 515, 520, 522, 523, 682, 686, 690, 694, 757, 760, 809, 852, 859, 912, 934, 938, 940, 941, 942, 943, 944, 945, 949, 954, 963, 972, 973, 974, 975, 976, 977, 980, 985, 986, 1003, 1005, 1045, 1059, 1117, 1118, 1125, 1128, 1129, 1131, 1133, 1135, 1137, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1215, 1258, 1261, 1262, 1268, 1269, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1307, 1308, 1311, 1328, 1347, 1361, 1371, 1378, 1387, 1392, 1395, 1409, 1438, 1613, 1799, 1801, 1807, 1809], "argument": [10, 11, 17, 314, 329, 353, 386, 505, 515, 520, 594, 682, 686, 690, 694, 908, 912, 919, 938, 954, 963, 980, 985, 1009, 1057, 1117, 1122, 1125, 1128, 1129, 1132, 1133, 1134, 1137, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1263, 1268, 1269, 1270, 1275, 1277, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1355, 1365, 1371, 1373, 1378, 1380, 1386, 1387, 1388, 1392, 1393, 1398, 1400, 1402, 1403, 1404, 1613, 1668, 1706, 1711, 1721, 1731, 1741, 1793, 1794, 1799, 1801, 1807, 1809, 1886, 1891, 1897, 1902, 1903], "keyword": [10, 314, 1117, 1125, 1128, 1129, 1132, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1263, 1268, 1269, 1270, 1277, 1279, 1280, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1365, 1371, 1373, 1378, 1380, 1386, 1387, 1388, 1392, 1393, 1398, 1400, 1402, 1403, 1404, 1613, 1799, 1801, 1807, 1809], "first": [14, 64, 69, 73, 319, 326, 330, 368, 446, 669, 675, 714, 961, 963, 1002, 1003, 1009, 1122, 1132, 1134, 1136, 1138, 1157, 1160, 1161, 1262, 1263, 1266, 1270, 1274, 1281, 1289, 1290, 1371, 1378, 1383, 1386, 1392, 1395, 1402, 1403, 1404, 1405, 1875, 1888, 1889, 1890, 1893, 1895, 1902, 1903, 1904], "pre_rotor": [14, 35, 339, 341, 349, 350, 361, 413, 506, 619, 620, 639, 642, 1580, 1614], "post_rotor": [14, 1580], "pre_wak": [14, 1890], "last": [14, 919, 938, 1019, 1138, 1158, 1262, 1274, 1288, 1290, 1386, 1436, 1888], "urlx": 15, "util": [15, 365, 367, 438, 443, 516, 965, 966, 970, 971, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1865, 1872, 1886, 1890, 1893, 1899, 1901, 1902, 1903], "sequenti": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 719, 965, 968, 969, 1312, 1866, 1879, 1885, 1886], "A": [16, 66, 92, 103, 114, 182, 228, 233, 313, 354, 357, 361, 387, 390, 443, 444, 474, 481, 513, 654, 697, 701, 704, 759, 768, 774, 787, 793, 794, 806, 849, 850, 856, 857, 907, 933, 987, 988, 1002, 1003, 1005, 1014, 1019, 1021, 1107, 1117, 1118, 1132, 1133, 1134, 1136, 1137, 1138, 1140, 1142, 1144, 1152, 1157, 1158, 1160, 1161, 1162, 1215, 1261, 1263, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1300, 1306, 1307, 1308, 1313, 1341, 1362, 1365, 1374, 1381, 1386, 1388, 1389, 1392, 1393, 1394, 1396, 1398, 1402, 1403, 1413, 1414, 1418, 1668, 1706, 1707, 1717, 1727, 1737, 1810, 1868, 1869, 1871, 1872, 1874, 1875, 1878, 1880, 1883, 1890, 1891, 1892, 1894], "without": [16, 339, 506, 774, 781, 787, 793, 938, 1081, 1100, 1157, 1159, 1295, 1296, 1386, 1869, 1875, 1886, 1890, 1893, 1897, 1899, 1900, 1901], "thi": [16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 85, 94, 114, 233, 328, 329, 333, 341, 349, 350, 351, 353, 357, 378, 384, 386, 390, 395, 397, 414, 425, 430, 431, 443, 455, 464, 476, 483, 492, 510, 522, 525, 533, 541, 551, 558, 563, 567, 569, 571, 575, 595, 599, 602, 604, 610, 616, 620, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 693, 708, 710, 716, 721, 729, 735, 741, 746, 749, 752, 756, 759, 761, 768, 770, 774, 776, 781, 783, 787, 789, 793, 794, 800, 806, 813, 814, 843, 849, 856, 895, 919, 946, 972, 973, 974, 975, 976, 977, 995, 1002, 1003, 1005, 1007, 1010, 1015, 1016, 1017, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1081, 1082, 1084, 1086, 1087, 1089, 1096, 1097, 1100, 1102, 1104, 1107, 1109, 1110, 1117, 1118, 1119, 1120, 1122, 1123, 1127, 1128, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1144, 1148, 1149, 1152, 1153, 1154, 1156, 1157, 1158, 1160, 1161, 1162, 1164, 1165, 1166, 1173, 1180, 1184, 1185, 1195, 1199, 1224, 1228, 1229, 1230, 1231, 1232, 1243, 1244, 1245, 1246, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1270, 1273, 1275, 1278, 1279, 1281, 1284, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1305, 1306, 1307, 1308, 1309, 1310, 1316, 1317, 1322, 1323, 1324, 1325, 1328, 1337, 1339, 1341, 1343, 1345, 1346, 1347, 1349, 1355, 1360, 1361, 1369, 1370, 1372, 1374, 1376, 1377, 1379, 1381, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1411, 1413, 1414, 1415, 1418, 1436, 1456, 1463, 1470, 1487, 1488, 1554, 1575, 1576, 1583, 1584, 1587, 1614, 1668, 1706, 1707, 1717, 1727, 1737, 1760, 1772, 1773, 1867, 1868, 1869, 1872, 1874, 1875, 1876, 1880, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "us": [16, 228, 241, 319, 329, 354, 387, 435, 447, 522, 537, 566, 602, 681, 682, 685, 686, 689, 690, 693, 694, 708, 746, 749, 794, 795, 814, 820, 835, 912, 919, 934, 957, 958, 1002, 1003, 1005, 1007, 1010, 1016, 1020, 1021, 1023, 1045, 1048, 1050, 1066, 1067, 1075, 1087, 1097, 1107, 1108, 1109, 1117, 1118, 1120, 1123, 1126, 1127, 1128, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1138, 1144, 1148, 1149, 1150, 1151, 1152, 1154, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1166, 1169, 1170, 1182, 1184, 1186, 1195, 1207, 1222, 1224, 1228, 1229, 1230, 1231, 1232, 1243, 1244, 1245, 1246, 1258, 1259, 1261, 1262, 1263, 1266, 1277, 1278, 1279, 1280, 1281, 1283, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1309, 1310, 1312, 1314, 1316, 1327, 1328, 1343, 1347, 1355, 1361, 1365, 1372, 1373, 1374, 1375, 1379, 1380, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1392, 1393, 1394, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1413, 1414, 1416, 1418, 1419, 1438, 1487, 1488, 1490, 1535, 1559, 1560, 1563, 1564, 1575, 1576, 1579, 1583, 1584, 1612, 1618, 1619, 1620, 1621, 1668, 1704, 1706, 1714, 1715, 1734, 1735, 1745, 1746, 1747, 1748, 1751, 1755, 1756, 1760, 1766, 1767, 1768, 1769, 1772, 1773, 1776, 1786, 1787, 1869, 1874, 1875, 1876, 1886, 1888, 1889, 1890, 1893, 1894, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1903, 1904], "simul": [16, 787, 793, 1869, 1886, 1887, 1891, 1896, 1899], "environ": [16, 1869, 1886], "do": [16, 368, 1075, 1084, 1096, 1097, 1184, 1266, 1289, 1290, 1299, 1356, 1362, 1386, 1402, 1403, 1668, 1706, 1869, 1875, 1886, 1893, 1895, 1899, 1901, 1902, 1903], "support": [16, 995, 1002, 1009, 1075, 1084, 1097, 1118, 1132, 1133, 1137, 1139, 1140, 1148, 1149, 1159, 1170, 1262, 1266, 1275, 1277, 1278, 1289, 1290, 1295, 1299, 1302, 1303, 1309, 1310, 1311, 1314, 1328, 1345, 1346, 1349, 1356, 1370, 1373, 1377, 1380, 1386, 1387, 1403, 1438, 1668, 1706, 1869, 1886, 1887, 1888, 1896], "multi": [16, 472, 749, 1869, 1874, 1885, 1886, 1887], "comput": [16, 36, 42, 48, 55, 59, 79, 85, 94, 228, 274, 317, 318, 328, 333, 341, 351, 357, 375, 384, 390, 414, 423, 425, 428, 435, 455, 464, 476, 483, 492, 510, 563, 567, 571, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 654, 655, 659, 665, 671, 677, 708, 710, 714, 716, 719, 721, 724, 726, 729, 733, 735, 739, 741, 813, 952, 981, 1002, 1019, 1038, 1096, 1117, 1131, 1135, 1136, 1148, 1149, 1152, 1262, 1279, 1291, 1298, 1386, 1394, 1409, 1587, 1668, 1706, 1866, 1869, 1875, 1879, 1886, 1896, 1901, 1904], "like": [16, 1002, 1038, 1107, 1118, 1123, 1126, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1142, 1148, 1149, 1157, 1158, 1159, 1160, 1161, 1164, 1184, 1261, 1262, 1263, 1264, 1266, 1281, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1306, 1309, 1310, 1341, 1349, 1371, 1378, 1387, 1388, 1389, 1392, 1393, 1402, 1403, 1404, 1409, 1413, 1414, 1415, 1418, 1869, 1891, 1896, 1898], "fmu": [16, 1869], "calc_par": [16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 329, 330, 339, 347, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 1585], "states0": [16, 428, 724], "origin": [16, 92, 93, 103, 163, 437, 768, 769, 867, 871, 875, 879, 883, 888, 893, 898, 903, 972, 973, 974, 975, 976, 977, 1002, 1045, 1136, 1158, 1204, 1266, 1281, 1305, 1315, 1342, 1343, 1352, 1386, 1387, 1402, 1403, 1406, 1407, 1438, 1479, 1582, 1585, 1586, 1623, 1668, 1706, 1758, 1771, 1789, 1887, 1901], "plugin": [16, 17, 87, 965, 1869, 1879, 1899], "sequentialiterplugin": [16, 17], "updat": [16, 17, 87, 91, 375, 378, 437, 522, 525, 529, 533, 537, 541, 545, 548, 551, 555, 558, 602, 867, 871, 875, 879, 883, 888, 893, 898, 903, 965, 969, 1002, 1010, 1019, 1023, 1029, 1045, 1050, 1055, 1066, 1071, 1108, 1119, 1123, 1259, 1303, 1348, 1352, 1400, 1408, 1409, 1535, 1575, 1576, 1579, 1583, 1584, 1612, 1751, 1760, 1772, 1773, 1776, 1869, 1886, 1893, 1899, 1904], "everi": [16, 17, 586, 587, 1097, 1160, 1161, 1261, 1275, 1295, 1393, 1888, 1899], "__iter__": [16, 18], "__next__": [16, 19], "step": [16, 19, 33, 103, 214, 228, 424, 451, 452, 579, 580, 586, 587, 726, 727, 856, 857, 933, 985, 1002, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1160, 1161, 1258, 1262, 1279, 1291, 1295, 1296, 1298, 1387, 1389, 1393, 1886, 1890, 1891, 1892, 1894, 1895, 1896, 1899, 1901, 1903], "next": [16, 19, 1002, 1133, 1306, 1318, 1438, 1889, 1890, 1893, 1895, 1897, 1899, 1900, 1902, 1903], "size": [16, 33, 92, 99, 103, 153, 210, 228, 319, 330, 336, 397, 403, 407, 424, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 575, 726, 727, 856, 857, 912, 917, 985, 1002, 1118, 1133, 1134, 1137, 1157, 1160, 1161, 1222, 1261, 1266, 1275, 1288, 1289, 1294, 1295, 1299, 1300, 1306, 1317, 1388, 1395, 1398, 1400, 1585, 1586, 1591, 1892, 1893, 1902], "total": [16, 33, 92, 99, 330, 336, 403, 407, 435, 441, 453, 459, 461, 470, 472, 474, 479, 481, 486, 489, 499, 502, 910, 919, 927, 939, 946, 948, 952, 955, 959, 970, 978, 981, 983, 1118, 1120, 1158, 1262, 1535, 1565, 1566, 1579, 1585, 1591, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1886, 1893], "counter": [16, 22, 92, 95, 319, 326, 986, 1299, 1360, 1535, 1548, 1579, 1612, 1751, 1760, 1776], "index": [16, 22, 28, 48, 49, 92, 95, 96, 228, 241, 326, 329, 330, 334, 354, 358, 368, 377, 378, 403, 404, 409, 410, 412, 424, 426, 427, 428, 431, 437, 447, 453, 456, 461, 463, 466, 469, 472, 474, 481, 489, 491, 494, 498, 502, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 615, 711, 712, 717, 718, 722, 723, 724, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 910, 911, 912, 940, 941, 942, 943, 944, 945, 954, 972, 973, 974, 986, 1003, 1009, 1107, 1117, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1270, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1414, 1415, 1418, 1490, 1535, 1570, 1574, 1579, 1585, 1612, 1751, 1760, 1776, 1811, 1886, 1891, 1897, 1898, 1899, 1902, 1904], "weight": [16, 34, 92, 101, 286, 330, 338, 393, 395, 397, 402, 403, 408, 453, 454, 460, 461, 471, 472, 474, 480, 481, 488, 489, 501, 502, 504, 529, 548, 573, 575, 578, 579, 580, 585, 586, 587, 592, 919, 938, 954, 972, 973, 974, 1002, 1262, 1263, 1266, 1300, 1388, 1398, 1571, 1572, 1585, 1592, 1668, 1683, 1706, 1855, 1870, 1875, 1880, 1882, 1886, 1890, 1891, 1893, 1898, 1899, 1900, 1901, 1903], "arrai": [16, 34, 36, 42, 48, 55, 59, 79, 85, 94, 103, 104, 108, 109, 110, 111, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 328, 333, 341, 351, 357, 368, 384, 390, 409, 410, 414, 425, 455, 464, 476, 483, 492, 510, 563, 567, 571, 593, 594, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 710, 716, 721, 729, 735, 741, 938, 1002, 1010, 1015, 1036, 1037, 1038, 1040, 1045, 1046, 1060, 1061, 1062, 1066, 1073, 1107, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1164, 1242, 1256, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1279, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1402, 1403, 1404, 1409, 1413, 1414, 1415, 1418, 1436, 1437, 1490, 1491, 1492, 1495, 1496, 1512, 1513, 1520, 1521, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1553, 1554, 1575, 1576, 1583, 1584, 1587, 1595, 1596, 1597, 1599, 1606, 1607, 1608, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1656, 1659, 1660, 1665, 1666, 1668, 1671, 1672, 1674, 1678, 1679, 1680, 1684, 1685, 1686, 1690, 1691, 1692, 1696, 1697, 1698, 1702, 1705, 1706, 1709, 1710, 1711, 1719, 1720, 1721, 1729, 1730, 1731, 1739, 1740, 1741, 1752, 1762, 1772, 1773, 1783, 1792, 1813, 1814, 1815, 1816, 1886, 1890, 1892, 1893, 1899, 1901, 1904], "fdata": [16, 26, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 330, 333, 339, 341, 349, 351, 354, 357, 361, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 413, 414, 416, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 506, 507, 510, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 559, 560, 561, 563, 566, 567, 569, 571, 573, 575, 576, 579, 586, 593, 595, 597, 599, 602, 604, 608, 610, 614, 616, 619, 622, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 663, 665, 669, 671, 675, 677, 708, 710, 711, 712, 714, 716, 717, 718, 719, 721, 722, 723, 724, 726, 729, 730, 731, 732, 733, 735, 736, 737, 739, 741, 742, 743, 746, 747, 748, 749, 751, 752, 753, 756, 757, 758, 759, 761, 763, 764, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 797, 798, 799, 800, 803, 804, 805, 806, 809, 810, 813, 816, 817, 820, 836, 843, 846, 847, 848, 849, 852, 853, 856, 859, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 1585, 1587], "pdata": [16, 31, 46, 48, 49, 57, 59, 92, 94, 319, 322, 330, 333, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 403, 423, 427, 428, 430, 431, 432, 433, 435, 436, 437, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 560, 561, 563, 566, 567, 569, 571, 708, 712, 714, 718, 719, 723, 724, 726, 732, 733, 737, 739, 743, 746, 747, 748, 749, 751, 752, 753, 756, 757, 758, 759, 761, 763, 764, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 797, 798, 799, 800, 803, 804, 805, 806, 809, 810, 813, 816, 817, 820, 836, 843, 846, 847, 848, 849, 852, 853, 856, 859, 861, 864, 866, 867, 868, 870, 871, 872, 874, 875, 876, 878, 879, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 1585, 1587], "overal": [16, 25, 32, 1899], "cur_farm_result": [16, 23], "cur_point_result": [16, 24], "indx": 28, "itr": 29, "": [33, 35, 40, 46, 53, 57, 77, 83, 92, 103, 195, 228, 308, 309, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 368, 383, 386, 387, 393, 403, 413, 416, 453, 454, 461, 472, 474, 481, 489, 502, 506, 507, 537, 538, 546, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 938, 972, 973, 974, 975, 976, 977, 986, 1002, 1010, 1015, 1045, 1046, 1066, 1087, 1089, 1103, 1107, 1109, 1117, 1118, 1133, 1134, 1136, 1137, 1138, 1144, 1152, 1157, 1158, 1160, 1161, 1164, 1180, 1193, 1234, 1241, 1248, 1255, 1257, 1261, 1262, 1263, 1264, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1306, 1311, 1315, 1317, 1326, 1328, 1335, 1343, 1360, 1368, 1374, 1381, 1386, 1388, 1389, 1392, 1395, 1398, 1404, 1408, 1413, 1414, 1415, 1418, 1436, 1438, 1537, 1544, 1554, 1585, 1761, 1782, 1821, 1822, 1823, 1828, 1846, 1847, 1848, 1856, 1880, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "w": [34, 283, 299, 368, 417, 461, 481, 482, 566, 650, 651, 653, 657, 658, 663, 664, 669, 675, 986, 995, 997, 999, 1103, 1136, 1295, 1300, 1315, 1360, 1422, 1425, 1426, 1431, 1668, 1706, 1814, 1815, 1856, 1863, 1864, 1870, 1875, 1880, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "n_turbin": [34, 36, 42, 55, 79, 85, 101, 319, 325, 338, 339, 341, 351, 357, 395, 397, 398, 408, 414, 425, 438, 441, 452, 460, 471, 480, 488, 501, 510, 575, 576, 593, 594, 595, 599, 604, 610, 616, 621, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 710, 716, 721, 729, 731, 735, 741, 913, 1592, 1626, 1627, 1657, 1658, 1707, 1708, 1717, 1718, 1727, 1728, 1889, 1890, 1893, 1895, 1897, 1898, 1899, 1900, 1901], "calcord": [35, 36, 37, 38, 39, 1867, 1890, 1899, 1901], "farmdatamodel": [35, 40, 53, 77, 83, 339, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 393, 413, 1867, 1868, 1871], "via": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 447, 448, 453, 454, 461, 463, 469, 472, 474, 481, 489, 491, 498, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 910, 919, 939, 946, 951, 952, 955, 959, 970, 978, 981, 983, 995, 1087, 1089, 1123, 1133, 1266, 1299, 1402, 1403, 1404, 1544, 1554, 1585, 1793, 1867, 1873, 1874, 1876, 1880, 1886, 1887, 1893, 1896, 1897, 1902, 1904], "output_farm_var": [35, 38, 40, 44, 53, 56, 77, 81, 83, 86, 339, 346, 349, 352, 354, 359, 361, 393, 401, 413, 416, 506, 507, 511, 573, 579, 586, 593, 596, 597, 601, 602, 606, 608, 612, 614, 618, 619, 624, 626, 629, 630, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 662, 663, 668, 669, 674, 675, 680], "which": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 302, 330, 335, 339, 346, 349, 352, 354, 359, 361, 378, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 423, 431, 432, 433, 436, 437, 453, 458, 461, 463, 468, 472, 474, 478, 481, 485, 489, 497, 502, 506, 507, 511, 525, 533, 541, 551, 558, 561, 565, 566, 568, 569, 572, 573, 579, 586, 593, 596, 597, 601, 602, 606, 608, 612, 614, 615, 618, 619, 624, 626, 629, 630, 631, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 658, 662, 663, 664, 668, 669, 674, 675, 676, 680, 708, 709, 739, 740, 747, 748, 749, 751, 752, 753, 757, 758, 763, 765, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 797, 799, 803, 805, 809, 810, 816, 817, 846, 848, 852, 853, 859, 861, 866, 867, 870, 871, 872, 873, 874, 875, 878, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 912, 915, 916, 917, 918, 934, 954, 963, 972, 973, 974, 981, 986, 1002, 1003, 1005, 1010, 1020, 1022, 1035, 1045, 1066, 1075, 1107, 1108, 1117, 1120, 1122, 1123, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1144, 1146, 1152, 1157, 1158, 1160, 1161, 1162, 1164, 1205, 1215, 1218, 1222, 1223, 1230, 1231, 1232, 1236, 1240, 1244, 1245, 1246, 1250, 1254, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1317, 1327, 1328, 1341, 1342, 1343, 1345, 1355, 1356, 1358, 1365, 1371, 1378, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1400, 1402, 1403, 1404, 1411, 1413, 1414, 1415, 1418, 1544, 1554, 1585, 1590, 1593, 1594, 1603, 1611, 1614, 1668, 1706, 1813, 1816, 1871, 1875, 1883, 1887, 1890, 1892, 1893, 1896, 1899, 1900, 1901, 1902, 1903, 1904], "being": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 431, 432, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 506, 507, 511, 561, 565, 566, 568, 569, 572, 573, 579, 586, 593, 596, 597, 601, 602, 606, 608, 612, 614, 618, 619, 624, 626, 629, 630, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 662, 663, 668, 669, 674, 675, 680, 752, 753, 770, 771, 776, 777, 783, 789, 1118, 1120, 1125, 1129, 1160, 1161, 1186, 1307, 1308, 1384, 1385, 1554, 1585, 1590, 1668, 1706, 1886, 1889], "modifi": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 375, 377, 378, 383, 385, 387, 391, 393, 397, 401, 403, 406, 413, 416, 431, 432, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 506, 507, 511, 522, 524, 525, 529, 532, 533, 537, 540, 541, 545, 547, 548, 550, 551, 555, 557, 558, 561, 565, 566, 568, 569, 572, 573, 575, 579, 586, 593, 596, 597, 601, 602, 606, 608, 612, 614, 618, 619, 624, 626, 629, 630, 634, 635, 638, 639, 641, 642, 644, 645, 649, 650, 652, 654, 656, 657, 662, 663, 668, 669, 674, 675, 680, 752, 753, 770, 771, 776, 777, 783, 789, 946, 947, 1119, 1280, 1343, 1347, 1356, 1361, 1369, 1374, 1376, 1381, 1394, 1402, 1403, 1585, 1590, 1871, 1890], "main": [35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 327, 328, 330, 333, 339, 341, 349, 351, 354, 357, 361, 383, 384, 387, 390, 403, 413, 414, 416, 453, 455, 461, 464, 472, 474, 476, 481, 483, 489, 492, 502, 506, 507, 510, 561, 563, 566, 567, 569, 571, 593, 595, 597, 599, 602, 604, 608, 610, 614, 616, 619, 622, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 663, 665, 669, 671, 675, 677, 1136, 1138, 1290, 1307, 1585, 1587, 1888, 1891], "out_var": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 594, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 1585], "start": [35, 40, 46, 53, 57, 77, 83, 92, 103, 175, 228, 327, 329, 330, 331, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 444, 447, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 708, 709, 739, 740, 961, 963, 987, 988, 1002, 1009, 1019, 1038, 1118, 1120, 1133, 1157, 1294, 1299, 1391, 1395, 1438, 1585, 1810, 1880, 1886, 1889, 1891, 1897, 1900, 1904], "apply_ufunc": [35, 40, 46, 53, 57, 77, 83, 92, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 453, 461, 472, 474, 481, 489, 502, 506, 507, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 1585], "singl": [36, 42, 48, 55, 59, 79, 85, 92, 94, 319, 328, 333, 341, 351, 357, 384, 390, 414, 425, 452, 455, 464, 476, 481, 483, 492, 510, 563, 567, 571, 573, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 710, 716, 721, 729, 735, 741, 957, 961, 963, 1002, 1044, 1118, 1133, 1134, 1137, 1155, 1158, 1261, 1262, 1280, 1295, 1306, 1328, 1343, 1386, 1402, 1403, 1487, 1491, 1508, 1510, 1512, 1517, 1520, 1528, 1535, 1549, 1579, 1587, 1593, 1595, 1602, 1604, 1606, 1610, 1612, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1649, 1652, 1657, 1659, 1663, 1665, 1669, 1671, 1676, 1678, 1682, 1684, 1688, 1690, 1694, 1696, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1866, 1867, 1869, 1874, 1885, 1886, 1887, 1889, 1890, 1891, 1895, 1896, 1901], "should": [36, 42, 48, 55, 59, 79, 85, 94, 328, 333, 341, 345, 351, 357, 371, 384, 390, 405, 414, 425, 453, 454, 455, 457, 464, 467, 476, 477, 483, 492, 496, 510, 522, 563, 564, 567, 571, 595, 599, 600, 604, 610, 616, 622, 623, 628, 632, 637, 640, 643, 648, 655, 659, 661, 665, 667, 671, 673, 677, 679, 710, 716, 721, 729, 735, 741, 895, 1002, 1007, 1010, 1028, 1029, 1035, 1045, 1055, 1066, 1071, 1086, 1102, 1125, 1128, 1129, 1132, 1133, 1142, 1144, 1152, 1158, 1160, 1161, 1185, 1229, 1243, 1259, 1288, 1290, 1296, 1298, 1306, 1374, 1375, 1381, 1382, 1386, 1389, 1392, 1393, 1395, 1414, 1587, 1589, 1668, 1706, 1812, 1817, 1888, 1890, 1892, 1893, 1897, 1898, 1902, 1903, 1904], "output": [36, 38, 42, 44, 48, 51, 55, 56, 57, 59, 61, 79, 81, 85, 86, 94, 98, 328, 329, 333, 335, 341, 346, 351, 352, 353, 357, 359, 368, 384, 385, 386, 390, 391, 401, 406, 414, 440, 453, 454, 455, 458, 461, 463, 464, 468, 476, 478, 481, 482, 483, 485, 489, 491, 492, 497, 510, 511, 563, 565, 567, 568, 571, 572, 593, 594, 595, 596, 597, 598, 599, 601, 604, 606, 610, 612, 616, 618, 622, 624, 628, 629, 632, 634, 637, 638, 640, 641, 643, 644, 648, 649, 655, 656, 659, 662, 665, 668, 671, 674, 677, 680, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 1002, 1010, 1033, 1036, 1037, 1040, 1045, 1058, 1060, 1061, 1062, 1066, 1072, 1073, 1242, 1256, 1266, 1289, 1345, 1346, 1390, 1587, 1590, 1668, 1706, 1808, 1817, 1865, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "output_var": [38, 44, 51, 56, 61, 81, 86, 98, 335, 346, 352, 359, 385, 391, 401, 406, 453, 454, 458, 461, 463, 468, 472, 478, 485, 489, 491, 497, 502, 511, 561, 562, 565, 568, 572, 596, 597, 598, 601, 606, 612, 618, 624, 629, 630, 631, 634, 638, 641, 644, 649, 656, 662, 668, 674, 680, 1590, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "smdl": [39, 45, 52, 82, 100, 337, 348, 360, 373, 382, 392, 487, 500, 512, 528, 536, 544, 554, 613, 713, 745, 755, 767, 773, 780, 786, 792, 812, 819, 842, 855, 863], "farmwakescalcul": [40, 41, 42, 43, 44, 45, 77, 78, 79, 80, 81, 82, 1867, 1868, 1890, 1899, 1901], "effect": [40, 46, 77, 375, 393, 395, 548, 573, 579, 586, 774, 781, 787, 793, 1002, 1010, 1016, 1066, 1067, 1133, 1154, 1258, 1262, 1263, 1299, 1303, 1340, 1346, 1375, 1382, 1821, 1822, 1823, 1846, 1847, 1848, 1867, 1868, 1875, 1877, 1878, 1882, 1886, 1889, 1890, 1896, 1897, 1898, 1903, 1904], "pointwakescalcul": [46, 47, 48, 49, 50, 51, 52, 1867], "pvar": [46, 57], "emodel": [46, 47], "pointdatamodellist": [46, 47, 330, 387, 388, 389, 390, 391, 392, 1871], "extra": [46, 47, 972, 973, 974, 975, 976, 977, 1119, 1317, 1387, 1398, 1668, 1706], "emodels_cpar": [46, 47], "output_point_var": [46, 51, 57, 61, 92, 98, 330, 335, 383, 385, 387, 391, 403, 406, 453, 458, 461, 468, 472, 474, 478, 481, 485, 489, 497, 502, 561, 565, 566, 568, 569, 572, 1585, 1590], "contribute_to_wake_delta": [46, 49, 375, 377, 378, 430, 431, 522, 524, 525, 529, 532, 533, 537, 540, 541, 545, 547, 548, 550, 551, 555, 557, 558, 746, 749, 752, 756, 759, 761, 768, 770, 774, 776, 781, 783, 787, 789, 793, 794, 800, 806, 813, 843, 849, 856], "contribut": [46, 49, 375, 377, 430, 431, 435, 436, 522, 524, 529, 532, 537, 540, 545, 547, 548, 550, 555, 557, 746, 749, 752, 756, 759, 761, 768, 770, 774, 776, 781, 783, 787, 789, 793, 794, 800, 806, 813, 843, 849, 856, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 1262, 1890], "delta": [46, 49, 62, 65, 66, 70, 71, 74, 75, 375, 377, 378, 381, 430, 431, 432, 433, 435, 436, 437, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 560, 569, 570, 639, 642, 719, 720, 733, 734, 746, 747, 748, 749, 751, 752, 753, 756, 758, 759, 761, 763, 765, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 797, 799, 800, 803, 805, 806, 810, 813, 816, 817, 843, 846, 848, 849, 853, 856, 861, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 882, 883, 885, 887, 888, 890, 892, 893, 895, 897, 898, 900, 902, 903, 912, 933, 1437, 1642, 1670, 1875, 1886, 1890, 1896, 1899, 1901], "states_source_turbin": [46, 48, 49, 368, 377, 423, 424, 426, 427, 428, 431, 437, 524, 532, 540, 547, 550, 557, 708, 711, 712, 714, 717, 718, 719, 722, 723, 724, 726, 730, 732, 733, 736, 737, 739, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 820, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903], "For": [48, 49, 327, 368, 377, 378, 409, 410, 424, 426, 427, 428, 431, 437, 504, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 602, 711, 712, 717, 718, 722, 723, 724, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 794, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 985, 1002, 1020, 1022, 1038, 1039, 1075, 1118, 1119, 1122, 1131, 1135, 1136, 1137, 1139, 1148, 1149, 1152, 1157, 1158, 1159, 1168, 1185, 1204, 1228, 1261, 1262, 1263, 1266, 1277, 1288, 1289, 1290, 1294, 1296, 1298, 1299, 1306, 1307, 1308, 1312, 1324, 1326, 1328, 1341, 1343, 1347, 1356, 1361, 1371, 1372, 1374, 1378, 1379, 1381, 1387, 1392, 1393, 1394, 1395, 1396, 1398, 1400, 1402, 1403, 1404, 1406, 1407, 1668, 1706, 1888, 1890, 1891, 1893, 1895, 1896, 1897, 1899, 1900, 1901, 1902, 1904, 1905], "each": [48, 49, 87, 103, 214, 228, 327, 339, 357, 368, 377, 378, 390, 409, 410, 424, 426, 427, 428, 431, 437, 504, 524, 525, 532, 533, 540, 541, 547, 550, 551, 557, 558, 669, 675, 711, 712, 714, 717, 718, 722, 723, 724, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 921, 940, 943, 944, 945, 985, 1002, 1010, 1021, 1038, 1045, 1066, 1118, 1119, 1131, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1174, 1258, 1261, 1262, 1263, 1264, 1269, 1280, 1288, 1290, 1292, 1294, 1295, 1298, 1299, 1312, 1318, 1347, 1361, 1372, 1374, 1379, 1381, 1386, 1388, 1392, 1395, 1396, 1404, 1413, 1414, 1415, 1528, 1593, 1599, 1602, 1604, 1608, 1610, 1668, 1669, 1674, 1676, 1680, 1682, 1686, 1688, 1692, 1694, 1698, 1700, 1702, 1703, 1705, 1706, 1869, 1875, 1889, 1890, 1891, 1893, 1896, 1897, 1900, 1901, 1902, 1903, 1904], "one": [48, 49, 103, 189, 228, 354, 357, 368, 377, 378, 387, 390, 395, 397, 402, 424, 426, 427, 428, 431, 437, 522, 523, 524, 525, 529, 530, 532, 533, 537, 538, 540, 541, 545, 546, 547, 548, 549, 550, 551, 556, 557, 558, 575, 578, 579, 580, 585, 592, 711, 712, 717, 718, 722, 723, 724, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 978, 985, 1002, 1019, 1109, 1117, 1118, 1120, 1128, 1131, 1133, 1134, 1135, 1136, 1144, 1148, 1149, 1152, 1158, 1160, 1161, 1223, 1261, 1262, 1263, 1266, 1277, 1279, 1288, 1289, 1290, 1291, 1295, 1298, 1306, 1341, 1343, 1360, 1365, 1386, 1388, 1394, 1395, 1396, 1402, 1403, 1404, 1406, 1407, 1436, 1438, 1668, 1706, 1812, 1875, 1879, 1880, 1886, 1890, 1891, 1895, 1903, 1904], "caus": [48, 49, 368, 377, 424, 426, 427, 428, 431, 437, 524, 532, 540, 547, 550, 557, 711, 712, 717, 718, 722, 723, 724, 730, 732, 736, 737, 742, 743, 747, 748, 751, 752, 757, 758, 763, 764, 765, 770, 776, 783, 789, 797, 798, 803, 804, 809, 816, 836, 839, 846, 847, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 1029, 1055, 1071, 1082, 1134, 1288, 1886, 1890], "wmodel": [49, 768, 769], "wdelta": [49, 437, 747, 748, 751, 758, 765, 816, 867, 871, 875, 879, 883, 888, 893, 898, 903], "ob": [49, 431, 432, 752, 753, 770, 771, 776, 777, 783, 789], "fly": [49, 431, 432, 433, 726, 731, 752, 753, 770, 771, 772, 776, 777, 778, 783, 784, 789, 790, 799, 805, 810, 817, 848, 853, 861, 1402, 1403, 1404, 1405], "setambfarmresult": [53, 54, 55, 56, 1867, 1890, 1899, 1901], "copi": [53, 57, 103, 172, 228, 397, 575, 1002, 1010, 1023, 1029, 1045, 1050, 1055, 1066, 1071, 1410, 1867], "setambpointresult": [57, 58, 59, 60, 61, 1867], "treat": [57, 938, 1002, 1029, 1055, 1071, 1262, 1296, 1392, 1416, 1419, 1899], "abstract": [62, 64, 65, 302, 317, 318, 327, 328, 349, 351, 352, 361, 375, 377, 378, 381, 383, 384, 385, 393, 396, 399, 402, 403, 407, 408, 413, 414, 416, 419, 420, 421, 423, 425, 427, 430, 431, 433, 435, 436, 437, 746, 747, 749, 751, 756, 757, 761, 763, 764, 1003, 1007, 1439, 1442, 1443, 1444, 1445, 1446, 1517, 1523, 1528, 1535, 1579, 1581, 1582, 1652, 1703, 1705, 1802, 1807, 1865, 1868, 1871, 1876, 1880, 1883, 1886], "check_converg": [62, 64, 66, 69, 71, 73, 75], "prev_result": [62, 64, 66, 69, 71, 73, 75], "check": [62, 64, 66, 69, 71, 73, 75, 820, 823, 839, 993, 1162, 1289, 1393, 1487, 1508, 1510, 1517, 1535, 1545, 1546, 1579, 1604, 1605, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1655, 1657, 1663, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1811, 1886, 1890, 1893, 1901, 1902], "get_delta": [62, 65, 66, 70, 71, 74, 75], "most": [62, 65, 66, 70, 71, 74, 75, 1002, 1133, 1136, 1144, 1152, 1164, 1178, 1184, 1262, 1288, 1289, 1290, 1295, 1298, 1317, 1324, 1374, 1381, 1386, 1393, 1395, 1402, 1403, 1406, 1407, 1890, 1904], "recent": [62, 65, 66, 70, 71, 74, 75], "convcritlist": [66, 67, 68, 69, 70, 1868], "crit": [66, 67, 68], "add_crit": [66, 68], "criterion": [66, 68, 1162], "convvardelta": [71, 72, 73, 74, 75, 1868], "requir": [71, 302, 326, 329, 423, 428, 522, 708, 714, 719, 724, 726, 733, 739, 1002, 1039, 1119, 1138, 1168, 1262, 1266, 1312, 1315, 1317, 1413, 1868, 1886, 1887, 1891, 1892, 1893, 1894, 1896, 1899, 1902, 1904, 1905], "select": [71, 83, 288, 293, 312, 329, 339, 341, 375, 376, 380, 400, 409, 410, 411, 412, 413, 414, 415, 418, 422, 429, 434, 437, 454, 461, 463, 469, 472, 489, 491, 498, 502, 507, 521, 593, 594, 595, 599, 604, 610, 616, 622, 628, 632, 637, 640, 643, 648, 655, 659, 665, 671, 677, 747, 748, 751, 757, 758, 763, 765, 797, 803, 809, 816, 846, 852, 859, 867, 871, 875, 879, 883, 888, 893, 898, 903, 949, 972, 973, 974, 975, 976, 977, 978, 980, 1075, 1086, 1097, 1102, 1240, 1254, 1487, 1488, 1490, 1491, 1492, 1508, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1521, 1524, 1526, 1528, 1529, 1532, 1534, 1535, 1537, 1544, 1554, 1567, 1573, 1579, 1593, 1595, 1596, 1602, 1604, 1606, 1607, 1610, 1612, 1614, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1659, 1660, 1665, 1666, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1751, 1760, 1776, 1865, 1868, 1870, 1871, 1873, 1875, 1877, 1886, 1889, 1892, 1893, 1894, 1895, 1896, 1900, 1902], "limit": [71, 72, 314, 814, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 1002, 1003, 1005, 1010, 1016, 1045, 1048, 1066, 1067, 1081, 1100, 1119, 1120, 1123, 1126, 1127, 1130, 1131, 1132, 1135, 1136, 1138, 1148, 1149, 1157, 1168, 1209, 1210, 1220, 1221, 1236, 1242, 1250, 1256, 1261, 1263, 1269, 1280, 1289, 1295, 1302, 1303, 1312, 1349, 1350, 1351, 1362, 1363, 1364, 1371, 1372, 1375, 1378, 1379, 1382, 1394, 1401, 1409, 1411, 1413, 1414, 1886], "float": [71, 72, 103, 117, 163, 186, 228, 236, 318, 409, 410, 416, 417, 424, 461, 463, 474, 475, 481, 482, 602, 603, 646, 651, 653, 657, 658, 663, 664, 670, 675, 676, 697, 698, 704, 705, 719, 720, 726, 727, 733, 734, 739, 740, 768, 769, 794, 795, 800, 801, 806, 807, 813, 814, 820, 835, 843, 844, 849, 850, 856, 857, 872, 873, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 910, 911, 912, 921, 923, 926, 927, 933, 940, 941, 942, 943, 944, 945, 961, 963, 964, 972, 973, 974, 975, 976, 977, 985, 986, 1002, 1019, 1038, 1081, 1100, 1117, 1118, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1149, 1152, 1153, 1157, 1158, 1160, 1161, 1164, 1173, 1208, 1209, 1210, 1211, 1236, 1250, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1275, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1315, 1317, 1325, 1341, 1345, 1347, 1350, 1351, 1352, 1355, 1360, 1361, 1365, 1369, 1370, 1371, 1372, 1375, 1376, 1377, 1378, 1379, 1382, 1383, 1386, 1387, 1389, 1391, 1392, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1414, 1415, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1438, 1456, 1457, 1487, 1488, 1490, 1491, 1492, 1495, 1496, 1500, 1502, 1504, 1506, 1508, 1510, 1511, 1512, 1513, 1516, 1517, 1520, 1521, 1527, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1555, 1559, 1563, 1568, 1575, 1576, 1577, 1579, 1581, 1582, 1583, 1584, 1593, 1594, 1595, 1596, 1597, 1601, 1602, 1603, 1604, 1606, 1607, 1610, 1611, 1612, 1614, 1615, 1618, 1620, 1622, 1623, 1624, 1626, 1627, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1642, 1643, 1644, 1647, 1648, 1649, 1650, 1652, 1653, 1657, 1658, 1659, 1660, 1663, 1665, 1666, 1668, 1669, 1670, 1671, 1672, 1676, 1678, 1679, 1682, 1683, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1706, 1707, 1708, 1709, 1710, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1727, 1728, 1729, 1730, 1732, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1742, 1745, 1747, 1749, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1766, 1768, 1770, 1771, 1772, 1773, 1774, 1776, 1782, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1810, 1811, 1814, 1815, 1870, 1891, 1893], "wd_var": [71, 72, 959, 961, 963, 981], "direct": [71, 72, 403, 474, 475, 481, 482, 579, 580, 586, 587, 714, 715, 941, 942, 944, 945, 961, 963, 964, 972, 973, 974, 975, 976, 977, 1002, 1120, 1123, 1131, 1133, 1135, 1148, 1149, 1152, 1158, 1218, 1230, 1231, 1232, 1242, 1244, 1245, 1246, 1256, 1261, 1262, 1266, 1294, 1299, 1315, 1317, 1358, 1360, 1371, 1378, 1389, 1393, 1395, 1400, 1417, 1420, 1437, 1470, 1471, 1813, 1814, 1815, 1816, 1827, 1854, 1866, 1867, 1873, 1875, 1880, 1882, 1886, 1889, 1890, 1891, 1892, 1895, 1896, 1898, 1900, 1902, 1903, 1904], "unit": [71, 72, 227, 279, 283, 296, 299, 301, 416, 417, 602, 603, 794, 795, 926, 933, 1002, 1087, 1107, 1117, 1126, 1130, 1144, 1150, 1151, 1152, 1258, 1260, 1266, 1268, 1270, 1275, 1279, 1291, 1298, 1299, 1300, 1317, 1325, 1386, 1396, 1402, 1403, 1418, 1510, 1511, 1668, 1706, 1820, 1843, 1870, 1882, 1891], "deg": [71, 72, 1891], "defaultconv": [75, 76, 1868, 1890, 1901], "dure": [83, 92, 319, 320, 329, 345, 371, 405, 453, 454, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 965, 1002, 1081, 1100, 1153, 1589, 1868, 1869, 1879, 1886, 1893, 1894, 1901, 1902], "factor": [83, 84, 283, 602, 603, 630, 631, 794, 795, 806, 807, 849, 850, 856, 857, 1215, 1266, 1307, 1308, 1355, 1395, 1414, 1423, 1427, 1428, 1432, 1593, 1594, 1603, 1611, 1642, 1670, 1839, 1870, 1875, 1881, 1882, 1886, 1904], "bewteen": [83, 84], "sequentialplugin": [87, 88, 89, 90, 91, 965, 1869, 1879], "sequeti": [87, 89, 90, 91, 968, 969], "intial": [87, 90, 965, 968], "fre": [87, 91, 910, 965, 969], "pre": [87, 91, 339, 341, 781, 782, 787, 788, 965, 969, 1002, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1160, 1161, 1258, 1262, 1279, 1291, 1295, 1296, 1298, 1387, 1393, 1888, 1897, 1901], "latest": [91, 969, 1535, 1575, 1576, 1579, 1583, 1584, 1612, 1751, 1760, 1772, 1773, 1776, 1888], "seqstat": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 1869, 1899], "just": [92, 1127, 1184, 1268, 1278, 1281, 1295, 1309, 1310, 1343, 1393, 1404, 1869, 1886, 1897], "serv": [92, 368, 428, 724, 1869, 1891], "structur": [92, 537, 669, 675, 1295, 1438, 1869, 1875, 1886, 1895, 1902], "placehold": [92, 1869], "statist": [92, 101, 330, 338, 403, 408, 453, 460, 461, 471, 472, 474, 480, 481, 488, 489, 501, 502, 1134, 1136, 1157, 1585, 1592, 1855, 1882, 1891, 1903], "indic": [96, 313, 334, 395, 397, 404, 451, 452, 456, 466, 494, 575, 912, 940, 941, 942, 957, 958, 972, 973, 974, 975, 976, 977, 986, 1002, 1087, 1088, 1136, 1157, 1158, 1268, 1269, 1281, 1307, 1308, 1341, 1438, 1544, 1573, 1880, 1886], "array_lik": [96, 313, 319, 320, 329, 334, 404, 409, 410, 451, 456, 466, 475, 494, 504, 1668, 1706], "label": [96, 334, 404, 409, 410, 456, 466, 494, 940, 941, 942, 943, 944, 945, 985, 986, 1002, 1087, 1092, 1096, 1103, 1117, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1142, 1144, 1152, 1157, 1159, 1160, 1161, 1195, 1197, 1208, 1228, 1230, 1231, 1232, 1237, 1238, 1240, 1244, 1245, 1246, 1251, 1252, 1254, 1258, 1261, 1262, 1264, 1268, 1274, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1301, 1311, 1322, 1323, 1335, 1343, 1344, 1347, 1348, 1361, 1365, 1370, 1374, 1375, 1377, 1381, 1382, 1387, 1388, 1392, 1393, 1396, 1398, 1400, 1415, 1416, 1419, 1889, 1890, 1891, 1898, 1902], "integ": [96, 103, 163, 181, 228, 241, 334, 404, 456, 466, 494, 1003, 1008, 1009, 1010, 1027, 1033, 1045, 1054, 1058, 1066, 1070, 1072, 1131, 1133, 1135, 1148, 1149, 1261, 1262, 1266, 1281, 1299, 1356, 1487, 1490, 1491, 1492, 1495, 1496, 1503, 1505, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1556, 1560, 1564, 1575, 1576, 1578, 1579, 1581, 1582, 1583, 1584, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1612, 1619, 1621, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1707, 1709, 1710, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1746, 1748, 1751, 1752, 1757, 1758, 1760, 1762, 1767, 1769, 1770, 1771, 1772, 1773, 1776, 1783, 1788, 1789], "overwrit": [97, 315, 369, 409, 410, 744, 754, 766, 779, 785, 791, 811, 818, 840, 854, 862], "exist": [97, 315, 369, 615, 744, 754, 766, 779, 785, 791, 811, 818, 820, 839, 840, 854, 862, 993, 1002, 1109, 1270, 1290, 1296, 1343, 1402, 1403, 1656, 1896, 1900, 1904], "constant": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 1002, 1160, 1161, 1388, 1389, 1414, 1422, 1424, 1426, 1430, 1431, 1434, 1865, 1882, 1886, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "amb_rpoint_result": [102, 1870], "amb_rpoint_r": [102, 1870], "identifi": [102, 226, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 368, 1020, 1021, 1413, 1414, 1865, 1870, 1886, 1901], "dtype": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 1262, 1870, 1893], "__hash__": [103, 123, 228, 240], "hash": [103, 123, 228, 240, 1438], "__str__": [103, 154, 228, 270, 1002, 1010, 1018, 1045, 1049, 1066, 1068, 1106, 1487, 1489, 1508, 1510, 1517, 1528, 1535, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "__lt__": [103, 128, 228, 246], "__le__": [103, 126, 228, 244], "__eq__": [103, 116, 228, 235, 1045, 1047], "__ne__": [103, 131, 228, 249], "__gt__": [103, 122, 228, 239], "__ge__": [103, 120, 228, 238], "__add__": [103, 106, 228, 230, 1010, 1014, 1045, 1066], "__radd__": [103, 137, 228, 255], "__sub__": [103, 155, 228, 271, 1010, 1019, 1045, 1066], "__rsub__": [103, 150, 228, 267], "__mul__": [103, 130, 228, 248], "__rmul__": [103, 145, 228, 262], "__mod__": [103, 129, 228, 247], "__rmod__": [103, 144, 228, 261], "__divmod__": [103, 115, 228, 234], "divmod": [103, 115, 139, 228, 234, 257, 1438], "__rdivmod__": [103, 139, 228, 257], "__pow__": [103, 136, 228, 254], "mod": [103, 136, 147, 228, 254, 264], "pow": [103, 136, 147, 228, 254, 264, 872, 873, 890, 891, 1438], "__rpow__": [103, 147, 228, 264], "__neg__": [103, 132, 228, 250], "__pos__": [103, 135, 228, 253], "__abs__": [103, 105, 228, 229], "ab": [103, 105, 228, 229, 1438], "__bool__": [103, 113, 228, 232], "__int__": [103, 124, 228, 242], "__float__": [103, 117, 228, 236], "__floordiv__": [103, 118, 228, 237], "__rfloordiv__": [103, 142, 228, 259], "__truediv__": [103, 156, 228, 272], "__rtruediv__": [103, 151, 228, 268], "see": [103, 104, 133, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 251, 1002, 1019, 1039, 1075, 1078, 1097, 1099, 1103, 1110, 1122, 1123, 1133, 1138, 1144, 1146, 1157, 1158, 1159, 1204, 1216, 1270, 1275, 1277, 1278, 1289, 1294, 1303, 1307, 1308, 1309, 1310, 1316, 1345, 1346, 1365, 1373, 1380, 1387, 1393, 1395, 1396, 1400, 1402, 1403, 1404, 1405, 1406, 1407, 1438, 1668, 1706, 1800, 1802, 1803, 1886, 1888, 1890, 1893, 1895, 1896, 1903], "help": [103, 133, 228, 251, 995, 1075, 1078, 1097, 1099, 1438, 1800, 1802, 1803, 1880], "accur": [103, 133, 228, 251, 1075, 1078, 1097, 1099, 1800, 1802, 1803], "signatur": [103, 133, 228, 251, 1075, 1078, 1097, 1099, 1107, 1109, 1118, 1127, 1133, 1162, 1261, 1278, 1288, 1289, 1290, 1295, 1299, 1309, 1310, 1343, 1362, 1392, 1393, 1402, 1403, 1404, 1405, 1418, 1800, 1802, 1803], "as_integer_ratio": [103, 163], "pair": [103, 163, 1002, 1136, 1147, 1275, 1315, 1401, 1668, 1706], "whose": [103, 163, 1120, 1876, 1891], "ratio": [103, 163, 1002, 1119, 1120, 1133, 1168, 1173, 1179, 1185, 1266, 1294, 1312, 1317, 1325, 1387], "exactli": [103, 163, 308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1019, 1266, 1388, 1589], "equal": [103, 163, 1019, 1020, 1117, 1127, 1136, 1144, 1152, 1262, 1266, 1279, 1281, 1288, 1290, 1291, 1294, 1296, 1298, 1311, 1317, 1325, 1386, 1387, 1395, 1818, 1832, 1835, 1882], "posit": [103, 163, 409, 410, 412, 986, 1002, 1066, 1075, 1087, 1088, 1090, 1091, 1118, 1119, 1125, 1129, 1132, 1133, 1134, 1136, 1137, 1138, 1157, 1158, 1159, 1160, 1161, 1204, 1208, 1223, 1261, 1268, 1278, 1280, 1299, 1300, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1315, 1317, 1328, 1342, 1347, 1348, 1356, 1365, 1370, 1371, 1374, 1375, 1377, 1378, 1381, 1382, 1389, 1392, 1393, 1396, 1398, 1402, 1403, 1404, 1406, 1407, 1413, 1414, 1487, 1508, 1751, 1876, 1877, 1886, 1897], "denomin": [103, 163, 228, 275], "rais": [103, 163, 453, 993, 1003, 1009, 1075, 1082, 1084, 1097, 1107, 1117, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1296, 1298, 1299, 1306, 1343, 1362, 1386, 1388, 1389, 1392, 1395, 1414, 1415, 1418], "overflowerror": [103, 163, 1438], "infin": [103, 163], "valueerror": [103, 163, 1003, 1009, 1288, 1290, 1294, 1343, 1362, 1438, 1668, 1706], "nan": [103, 163, 368, 453, 454, 504, 938, 1263, 1306, 1402, 1403, 1436, 1490, 1886, 1897], "is_integ": [103, 186, 228, 276], "finit": [103, 186, 228, 276, 1343, 1402, 1403], "integr": [103, 186, 228, 276, 423, 424, 579, 580, 586, 587, 708, 714, 719, 726, 733, 739, 856, 857, 1144, 1152, 1261, 1262, 1298, 1386, 1395, 1883, 1886], "otherwis": [103, 186, 993, 1002, 1003, 1005, 1007, 1057, 1081, 1100, 1107, 1136, 1138, 1174, 1204, 1261, 1280, 1288, 1306, 1312, 1374, 1381, 1386, 1387, 1409, 1411, 1413, 1414, 1418, 1704, 1895], "item": [103, 114, 187, 228, 233, 1890], "parametr": [103, 114, 228, 233], "wrapper": [103, 114, 228, 233, 507, 759, 768, 1278, 1289, 1309, 1310, 1393, 1875, 1883, 1886], "around": [103, 114, 228, 233, 1081, 1100, 1136, 1278, 1309, 1310, 1362, 1388, 1393, 1398, 1886, 1889, 1890], "__invert__": [103, 125, 228, 243], "__lshift__": [103, 127, 228, 245], "__rlshift__": [103, 143, 228, 260], "__rshift__": [103, 149, 228, 266], "__rrshift__": [103, 148, 228, 265], "__and__": [103, 107, 228, 231], "__rand__": [103, 138, 228, 256], "__xor__": [103, 157, 228, 273], "__rxor__": [103, 152, 228, 269], "__or__": [103, 134, 228, 252], "__ror__": [103, 146, 228, 263], "__getitem__": [103, 121, 228, 319, 513, 514, 516, 517, 1003, 1004], "tolist": [103, 220, 228], "scalar": [103, 104, 108, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 368, 561, 562, 1117, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1138, 1144, 1152, 1157, 1160, 1161, 1164, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1311, 1314, 1387, 1396, 1398, 1402, 1403, 1413, 1414, 1415, 1668, 1706], "method": [103, 114, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 233, 449, 598, 864, 865, 868, 869, 872, 873, 876, 877, 1000, 1001, 1002, 1010, 1017, 1021, 1029, 1044, 1045, 1055, 1066, 1071, 1081, 1082, 1086, 1087, 1089, 1096, 1100, 1102, 1104, 1108, 1122, 1127, 1134, 1136, 1152, 1154, 1164, 1184, 1258, 1261, 1262, 1263, 1266, 1268, 1269, 1270, 1277, 1280, 1288, 1289, 1290, 1294, 1296, 1298, 1299, 1306, 1307, 1308, 1328, 1369, 1374, 1376, 1381, 1387, 1388, 1392, 1393, 1402, 1403, 1414], "ident": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1002, 1010, 1019, 1045, 1066, 1158, 1295, 1306, 1387, 1892, 1904], "correspond": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 326, 377, 524, 532, 540, 547, 550, 557, 602, 1010, 1026, 1029, 1045, 1053, 1055, 1066, 1069, 1071, 1117, 1136, 1144, 1152, 1157, 1158, 1261, 1279, 1288, 1290, 1291, 1294, 1296, 1298, 1328, 1386, 1394, 1401, 1413, 1414, 1813, 1816, 1863, 1864, 1882, 1888, 1890, 1893, 1894, 1895, 1898], "attribut": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1165, 1166, 1222, 1229, 1243, 1261, 1341, 1342, 1394, 1395, 1891], "itemset": [103, 188, 228], "tobyt": [103, 218, 228], "tofil": [103, 219, 228], "tostr": [103, 221, 228], "byteswap": [103, 166, 228], "astyp": [103, 164, 228], "getfield": [103, 184, 228], "setfield": [103, 207, 228], "resiz": [103, 204, 228, 1266], "__array__": [103, 108, 228, 1010, 1015, 1045, 1046, 1066], "sc": [103, 108, 112, 228], "dim": [103, 108, 228, 319, 320, 321, 322, 367, 368], "specifi": [103, 108, 228, 375, 377, 522, 524, 529, 532, 537, 540, 545, 547, 548, 550, 555, 557, 615, 1002, 1003, 1005, 1010, 1016, 1066, 1067, 1108, 1118, 1119, 1122, 1128, 1131, 1133, 1135, 1136, 1144, 1148, 1149, 1152, 1159, 1179, 1261, 1262, 1263, 1280, 1288, 1289, 1290, 1294, 1295, 1298, 1299, 1306, 1307, 1308, 1317, 1360, 1386, 1388, 1392, 1393, 1396, 1398, 1402, 1403, 1404, 1405, 1411, 1414, 1704, 1875, 1886, 1893, 1902], "__array_wrap__": [103, 112, 228], "obj": [103, 112, 228, 1295, 1549, 1550, 1552, 1553, 1752, 1762, 1783], "__sizeof__": [103, 153, 228], "byte": [103, 153, 189, 193, 195, 214, 228, 1438], "__reduce__": [103, 140, 228], "helper": [103, 140, 228, 946, 986, 995, 1000, 1001, 1087, 1089, 1296, 1585, 1865, 1876, 1880], "pickl": [103, 140, 228], "dump": [103, 178, 179, 228], "fill": [103, 180, 228, 375, 378, 381, 443, 453, 522, 525, 527, 529, 533, 535, 537, 541, 543, 545, 548, 551, 553, 555, 558, 560, 963, 1002, 1120, 1126, 1127, 1130, 1133, 1134, 1149, 1159, 1160, 1161, 1261, 1262, 1266, 1268, 1288, 1290, 1295, 1299, 1306, 1317, 1389, 1392, 1402, 1403, 1413, 1414, 1440, 1450, 1458, 1465, 1472, 1480, 1872], "transpos": [103, 223, 228, 1262], "take": [103, 217, 228, 308, 309, 376, 872, 873, 890, 891, 954, 972, 973, 974, 1010, 1016, 1066, 1067, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1262, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1311, 1313, 1362, 1375, 1382, 1386, 1387, 1389, 1396, 1398, 1402, 1404, 1414], "put": [103, 199, 228, 1133, 1307, 1308, 1398, 1400], "repeat": [103, 202, 228, 1134, 1388, 1402, 1403, 1614], "choos": [103, 167, 228, 1144, 1152, 1261, 1288, 1290, 1298, 1386, 1402, 1403, 1668, 1706, 1888, 1889, 1890, 1895, 1897, 1903], "sort": [103, 211, 228, 1386, 1438], "argsort": [103, 162, 228], "searchsort": [103, 206, 228], "argmax": [103, 160, 228], "argmin": [103, 161, 228], "reshap": [103, 203, 228], "squeez": [103, 212, 228], "view": [103, 182, 225, 228, 1002, 1045, 1048, 1081, 1097, 1100, 1119, 1122, 1123, 1213, 1214, 1236, 1250, 1295, 1349, 1371, 1375, 1378, 1382, 1394, 1411], "swapax": [103, 216, 228], "max": [103, 190, 228, 504, 615, 868, 885, 912, 935, 936, 937, 972, 973, 974, 975, 976, 977, 1045, 1131, 1135, 1148, 1149, 1262, 1402, 1403, 1413, 1438, 1593, 1594, 1603, 1611, 1612, 1614, 1656, 1682, 1683, 1875, 1878, 1886, 1898], "min": [103, 192, 228, 504, 615, 912, 935, 936, 937, 972, 973, 974, 975, 976, 977, 1045, 1131, 1135, 1148, 1149, 1262, 1402, 1403, 1413, 1438, 1593, 1594, 1603, 1611, 1612, 1614, 1656, 1682, 1683, 1878, 1886, 1898, 1899, 1901], "ptp": [103, 198, 228], "trace": [103, 222, 228, 1901], "diagon": [103, 176, 228], "clip": [103, 168, 228, 1002, 1118, 1138, 1160, 1161, 1182, 1183, 1225, 1242, 1256, 1266, 1278, 1309, 1310, 1326, 1327, 1328, 1372, 1379], "conj": [103, 170, 228], "conjug": [103, 171, 228, 1418], "nonzero": [103, 196, 228], "std": [103, 213, 228], "sum": [103, 215, 228, 912, 919, 925, 930, 932, 935, 936, 937, 938, 1261, 1262, 1266, 1294, 1388, 1438, 1535, 1565, 1566, 1571, 1572, 1579, 1593, 1594, 1603, 1611, 1612, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1886, 1902], "cumsum": [103, 174, 228], "prod": [103, 197, 228], "cumprod": [103, 173, 228], "ani": [103, 114, 159, 195, 228, 233, 377, 378, 381, 524, 525, 527, 532, 533, 535, 540, 541, 543, 547, 550, 551, 553, 557, 558, 560, 654, 908, 1002, 1003, 1005, 1010, 1019, 1028, 1035, 1045, 1048, 1066, 1075, 1081, 1084, 1097, 1100, 1109, 1118, 1123, 1132, 1133, 1146, 1148, 1149, 1153, 1157, 1158, 1258, 1259, 1260, 1263, 1266, 1280, 1295, 1299, 1300, 1306, 1387, 1398, 1400, 1437, 1438, 1491, 1492, 1495, 1496, 1512, 1513, 1520, 1521, 1542, 1543, 1552, 1553, 1595, 1596, 1597, 1606, 1607, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1659, 1660, 1665, 1666, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1709, 1710, 1719, 1720, 1729, 1730, 1739, 1740, 1752, 1762, 1783, 1799, 1801, 1807, 1813, 1814, 1815, 1816, 1875, 1888, 1892, 1896, 1899, 1901, 1902, 1904], "compress": [103, 169, 228, 1817], "flatten": [103, 183, 228, 1306], "ravel": [103, 200, 228, 1889, 1890], "round": [103, 205, 228, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1356, 1387, 1438, 1817], "__format__": [103, 119, 228], "formatt": [103, 119, 228, 1002, 1087, 1096, 1164, 1165, 1166, 1296, 1375, 1382, 1401], "setflag": [103, 208, 228], "newbyteord": [103, 195, 228], "new_ord": [103, 195, 228], "differ": [103, 195, 228, 522, 537, 545, 1019, 1075, 1118, 1131, 1133, 1134, 1135, 1144, 1148, 1149, 1152, 1158, 1230, 1231, 1232, 1244, 1245, 1246, 1262, 1266, 1278, 1288, 1289, 1290, 1295, 1298, 1362, 1373, 1380, 1386, 1395, 1875, 1883, 1886, 1889, 1891, 1892, 1898], "ndim": [103, 194, 228], "stride": [103, 214, 228], "pointer": [103, 175, 228], "items": [103, 189, 228], "length": [103, 189, 193, 228, 451, 504, 522, 523, 726, 727, 733, 734, 1002, 1036, 1037, 1038, 1040, 1044, 1060, 1061, 1062, 1073, 1107, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1215, 1258, 1261, 1262, 1264, 1268, 1275, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1306, 1311, 1343, 1355, 1386, 1387, 1388, 1395, 1396, 1398, 1400, 1404, 1415, 1418, 1422, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1585, 1841, 1862, 1876, 1882, 1886, 1891], "element": [103, 189, 210, 228, 579, 580, 586, 587, 1117, 1137, 1144, 1152, 1215, 1228, 1230, 1231, 1232, 1244, 1245, 1246, 1262, 1279, 1290, 1291, 1295, 1298, 1299, 1388, 1396, 1402, 1403, 1668, 1706], "gentyp": [103, 210, 228], "nbyte": [103, 193, 228], "descriptor": [103, 177, 228], "real": [103, 201, 228, 1117, 1144, 1152, 1279, 1291, 1298, 1386, 1436, 1880], "part": [103, 185, 201, 228, 345, 371, 405, 457, 467, 477, 496, 521, 529, 564, 600, 623, 661, 667, 673, 679, 1002, 1010, 1024, 1025, 1037, 1040, 1042, 1043, 1045, 1048, 1051, 1052, 1061, 1062, 1064, 1065, 1066, 1073, 1074, 1133, 1225, 1295, 1299, 1589, 1891, 1893, 1895, 1896, 1898], "imag": [103, 185, 228, 912, 934, 940, 941, 942, 943, 944, 945, 986, 1002, 1113, 1117, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1263, 1265, 1266, 1268, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1311, 1313, 1356, 1386, 1387, 1396, 1398, 1402, 1403, 1411, 1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480, 1899], "imaginari": [103, 185, 228], "flat": [103, 182, 228, 1288, 1289, 1290, 1404], "t": [103, 104, 228, 447, 635, 636, 719, 720, 733, 734, 938, 995, 997, 1002, 1019, 1134, 1266, 1306, 1366, 1386, 1404, 1668, 1706, 1851, 1863, 1864, 1882, 1899, 1901], "__array_interface__": [103, 109, 228], "protocol": [103, 109, 111, 228], "python": [103, 109, 114, 228, 233, 1438, 1668, 1706, 1880, 1886, 1887, 1896, 1899], "side": [103, 109, 228, 938, 1117, 1134, 1144, 1152, 1160, 1161, 1262, 1274, 1279, 1291, 1298, 1386, 1403, 1889, 1899], "__array_struct__": [103, 111, 228], "struct": [103, 111, 228], "__array_priority__": [103, 110, 228], "prioriti": [103, 110, 228], "pleas": [104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 1128, 1375, 1382, 1884, 1887, 1905], "version": [114, 186, 233, 276, 1087, 1091, 1110, 1117, 1132, 1144, 1152, 1157, 1207, 1279, 1289, 1291, 1294, 1298, 1386, 1668, 1706, 1886, 1887, 1888], "22": [114, 186, 233, 276, 1131, 1135, 1148, 1149, 1890, 1891, 1893, 1897, 1902], "alia": [114, 233, 1002, 1157, 1188, 1288, 1290, 1330], "genericalia": [114, 233], "import": [114, 233, 1019, 1486, 1668, 1706, 1880, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "np": [114, 163, 186, 233, 274, 276, 321, 322, 368, 933, 938, 1107, 1133, 1262, 1295, 1299, 1362, 1395, 1418, 1436, 1438, 1490, 1491, 1492, 1495, 1496, 1512, 1513, 1520, 1521, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1553, 1554, 1575, 1576, 1583, 1584, 1595, 1596, 1597, 1599, 1606, 1607, 1608, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1654, 1655, 1656, 1659, 1660, 1665, 1666, 1668, 1671, 1672, 1674, 1678, 1679, 1680, 1684, 1685, 1686, 1690, 1691, 1692, 1696, 1697, 1698, 1702, 1705, 1706, 1709, 1710, 1719, 1720, 1729, 1730, 1739, 1740, 1752, 1762, 1772, 1773, 1783, 1792, 1889, 1890, 1892, 1893, 1897, 1899, 1900, 1901, 1904], "signedinteg": [114, 228, 233, 1870], "avail": [114, 233, 1138, 1179, 1223, 1261, 1263, 1266, 1288, 1289, 1290, 1295, 1306, 1315, 1365, 1387, 1402, 1403, 1413, 1414, 1875, 1883, 1885, 1886, 1888, 1891, 1902], "9": [114, 233, 1157, 1295, 1668, 1706, 1886, 1888, 1890, 1891, 1893, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1904], "later": [114, 233, 1019, 1109, 1893, 1897, 1899, 1901, 1902], "pep": [114, 233], "585": [114, 233], "hint": [114, 233, 1486, 1880], "gener": [114, 233, 708, 726, 731, 856, 905, 907, 909, 919, 934, 939, 940, 941, 942, 943, 944, 945, 1003, 1005, 1019, 1037, 1040, 1044, 1061, 1062, 1073, 1133, 1261, 1262, 1263, 1266, 1281, 1288, 1289, 1290, 1294, 1299, 1306, 1341, 1375, 1382, 1386, 1387, 1395, 1402, 1403, 1496, 1553, 1877, 1879, 1883, 1886, 1889, 1890, 1891, 1893], "standard": [114, 233, 919, 929, 1002, 1133, 1148, 1149, 1159, 1262, 1288, 1290, 1393, 1668, 1706, 1886, 1900], "collect": [114, 233, 302, 934, 940, 941, 942, 943, 944, 945, 986, 1002, 1003, 1111, 1137, 1145, 1158, 1261, 1263, 1264, 1288, 1290, 1299, 1302, 1303, 1306, 1341, 1392, 1413, 1414, 1415, 1668, 1706, 1896, 1900], "doubl": [163, 186, 1886], "10": [163, 739, 787, 793, 794, 806, 813, 820, 849, 856, 1002, 1107, 1133, 1152, 1157, 1261, 1263, 1270, 1278, 1298, 1309, 1310, 1386, 1401, 1418, 1438, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "25": [163, 795, 849, 850, 856, 857, 1125, 1129, 1130, 1886, 1890, 1891, 1893, 1897, 1900, 1901], "4": [163, 731, 794, 1085, 1125, 1128, 1129, 1157, 1261, 1262, 1266, 1268, 1269, 1277, 1289, 1290, 1295, 1299, 1395, 1668, 1706, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "2": [186, 276, 409, 410, 451, 452, 504, 522, 523, 566, 747, 748, 751, 758, 764, 765, 787, 793, 798, 804, 806, 807, 816, 847, 849, 856, 912, 1002, 1010, 1012, 1027, 1033, 1038, 1045, 1054, 1058, 1066, 1070, 1072, 1085, 1107, 1117, 1118, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1258, 1261, 1262, 1263, 1270, 1278, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1317, 1324, 1343, 1362, 1372, 1379, 1386, 1387, 1394, 1400, 1413, 1414, 1418, 1436, 1438, 1442, 1443, 1444, 1445, 1452, 1453, 1454, 1455, 1456, 1457, 1459, 1460, 1461, 1462, 1464, 1466, 1467, 1468, 1469, 1470, 1471, 1474, 1475, 1476, 1477, 1482, 1483, 1484, 1485, 1668, 1706, 1711, 1721, 1731, 1741, 1792, 1811, 1812, 1875, 1885, 1887, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904], "chang": [195, 614, 615, 1002, 1010, 1023, 1028, 1045, 1050, 1066, 1086, 1102, 1109, 1123, 1127, 1157, 1258, 1268, 1269, 1270, 1277, 1278, 1280, 1287, 1295, 1299, 1305, 1306, 1307, 1308, 1309, 1310, 1312, 1325, 1342, 1369, 1371, 1376, 1378, 1393, 1395, 1398, 1400, 1402, 1403, 1411, 1875, 1886, 1887, 1888, 1891, 1895], "also": [195, 423, 912, 1010, 1016, 1066, 1067, 1107, 1122, 1133, 1137, 1138, 1144, 1157, 1158, 1277, 1289, 1294, 1307, 1308, 1316, 1328, 1345, 1346, 1365, 1373, 1374, 1380, 1381, 1387, 1388, 1389, 1395, 1396, 1400, 1402, 1414, 1418, 1810, 1880, 1886, 1887, 1890, 1891, 1893, 1896, 1897, 1898, 1902, 1904], "made": [195, 1003, 1266], "field": [195, 895, 919, 938, 972, 973, 974, 975, 976, 977, 1002, 1133, 1299, 1890, 1892, 1896, 1900, 1903, 1904], "code": [195, 302, 820, 1002, 1118, 1157, 1281, 1295, 1396, 1883, 1886, 1887, 1888], "can": [195, 416, 537, 561, 749, 820, 1002, 1003, 1007, 1010, 1019, 1035, 1045, 1066, 1109, 1117, 1118, 1120, 1122, 1126, 1127, 1128, 1130, 1132, 1133, 1134, 1137, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1162, 1184, 1222, 1261, 1262, 1263, 1266, 1268, 1269, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1306, 1307, 1308, 1309, 1310, 1312, 1327, 1341, 1347, 1361, 1362, 1373, 1374, 1375, 1380, 1381, 1382, 1386, 1387, 1388, 1393, 1394, 1395, 1396, 1398, 1402, 1403, 1404, 1405, 1409, 1414, 1544, 1614, 1668, 1706, 1873, 1874, 1875, 1876, 1883, 1884, 1886, 1888, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "follow": [195, 461, 726, 800, 1010, 1014, 1045, 1066, 1107, 1117, 1118, 1136, 1138, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1215, 1261, 1262, 1263, 1264, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1315, 1341, 1362, 1371, 1378, 1386, 1387, 1388, 1395, 1402, 1403, 1413, 1414, 1415, 1418, 1668, 1706, 1875, 1885, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1897, 1898, 1901, 1902, 1903, 1904], "swap": 195, "opposit": [195, 1133, 1406, 1407, 1889], "endian": 195, "littl": 195, "big": [195, 1157], "nativ": [195, 1002, 1087, 1118, 1266], "ignor": [195, 1109, 1261, 1262, 1263, 1266, 1288, 1289, 1290, 1294, 1306, 1345, 1346, 1392, 1393, 1402, 1403, 1409], "abov": [195, 973, 974, 976, 977, 1002, 1118, 1133, 1136, 1157, 1160, 1161, 1178, 1223, 1270, 1281, 1299, 1300, 1324, 1355, 1365, 1373, 1380, 1387, 1402, 1403, 1887, 1888, 1889, 1893, 1897, 1898, 1902, 1904], "new_dtyp": 195, "gw": [227, 283, 417, 1870, 1887], "giga": [227, 1870], "watt": [227, 279, 283, 296, 299, 301, 933, 1870], "ityp": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 1870], "__index__": [228, 241], "convert": [228, 241, 1002, 1087, 1150, 1151, 1164, 1184, 1296, 1308, 1328, 1335, 1395, 1668, 1706, 1792, 1900], "an": [228, 241, 368, 409, 579, 580, 681, 682, 685, 686, 689, 690, 693, 694, 708, 800, 905, 939, 940, 941, 942, 943, 944, 945, 963, 970, 973, 976, 986, 1002, 1003, 1005, 1010, 1021, 1028, 1029, 1045, 1055, 1059, 1066, 1071, 1081, 1082, 1087, 1088, 1100, 1107, 1108, 1110, 1113, 1117, 1118, 1120, 1123, 1125, 1128, 1129, 1132, 1133, 1134, 1136, 1137, 1144, 1146, 1150, 1151, 1152, 1157, 1158, 1159, 1160, 1161, 1164, 1165, 1184, 1204, 1213, 1214, 1223, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1273, 1275, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1315, 1316, 1326, 1341, 1346, 1347, 1355, 1360, 1361, 1362, 1371, 1374, 1375, 1378, 1381, 1382, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1402, 1403, 1404, 1405, 1406, 1407, 1411, 1414, 1415, 1418, 1436, 1535, 1539, 1579, 1612, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1866, 1871, 1874, 1879, 1886, 1890, 1892, 1898, 1899, 1902, 1904], "suitabl": [228, 241, 1128, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "bit_count": [228, 274], "bit": [228, 274, 1893], "absolut": [228, 274, 639, 642, 1362, 1829, 1859, 1875, 1882, 1886, 1904], "analog": [228, 274, 1133], "builtin": [228, 274, 1057, 1438], "popcount": [228, 274], "c": [228, 274, 1002, 1003, 1007, 1014, 1045, 1059, 1107, 1117, 1125, 1127, 1128, 1129, 1133, 1142, 1144, 1152, 1157, 1258, 1261, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1311, 1315, 1317, 1343, 1387, 1398, 1401, 1404, 1418, 1438, 1668, 1706, 1888, 1904], "numer": [228, 277, 697, 787, 793, 1002, 1133, 1134, 1294, 1296, 1299, 1306, 1369, 1376, 1398, 1401, 1402, 1403, 1487, 1508, 1510, 1517, 1524, 1528, 1532, 1535, 1567, 1579, 1593, 1602, 1604, 1610, 1612, 1751, 1760, 1776, 1875], "itself": [228, 277, 1002, 1150, 1151, 1152, 1185, 1298, 1300], "int64": [274, 276, 1890, 1893, 1899, 1900], "127": [274, 1902], "7": [274, 1003, 1132, 1133, 1157, 1270, 1294, 1668, 1706, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "uint32": 276, "5": [276, 794, 849, 850, 1002, 1045, 1118, 1120, 1125, 1126, 1129, 1130, 1131, 1133, 1135, 1136, 1138, 1148, 1149, 1266, 1268, 1270, 1295, 1299, 1311, 1315, 1324, 1372, 1379, 1398, 1400, 1402, 1403, 1413, 1414, 1668, 1706, 1817, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "kappa": [278, 1422, 1424, 1426, 1430, 1431, 1434, 1870, 1881], "41": [278, 1422, 1424, 1426, 1430, 1431, 1434, 1870, 1881, 1890, 1893], "van": [278, 1422, 1424, 1426, 1430, 1431, 1434, 1870], "karman": [278, 1422, 1424, 1426, 1430, 1431, 1434, 1870], "mw": [279, 283, 417, 445, 446, 1870, 1891, 1895, 1897, 1902, 1903], "mega": [279, 1870], "pop": [282, 1544, 1554, 1582, 1623, 1758, 1771, 1789, 1870], "popul": [282, 1487, 1492, 1496, 1508, 1510, 1513, 1517, 1521, 1528, 1535, 1543, 1544, 1546, 1550, 1553, 1554, 1579, 1585, 1586, 1593, 1596, 1602, 1604, 1607, 1610, 1612, 1626, 1629, 1631, 1634, 1636, 1639, 1641, 1644, 1647, 1650, 1652, 1655, 1657, 1660, 1663, 1666, 1669, 1672, 1676, 1679, 1682, 1685, 1688, 1691, 1694, 1697, 1700, 1703, 1707, 1710, 1717, 1720, 1727, 1730, 1737, 1740, 1751, 1760, 1776, 1870, 1876, 1891, 1893], "p_unit": [283, 416, 417, 654, 1870, 1886], "1000000000": [283, 1870], "1000000": [283, 1870], "tw": [283, 296, 1870], "1000000000000": [283, 1870], "kw": [283, 301, 416, 417, 602, 603, 654, 933, 1870], "power": [283, 416, 417, 518, 602, 603, 650, 652, 657, 658, 663, 664, 669, 670, 675, 676, 872, 873, 890, 891, 919, 921, 926, 927, 933, 983, 985, 1002, 1128, 1144, 1152, 1261, 1263, 1279, 1298, 1386, 1602, 1820, 1840, 1843, 1870, 1875, 1876, 1879, 1882, 1885, 1886, 1887, 1893, 1895, 1896, 1898, 1902, 1903, 1904], "rel": [283, 1038, 1118, 1134, 1222, 1262, 1268, 1270, 1294, 1299, 1307, 1308, 1315, 1830, 1860, 1870, 1882], "rpoint": [284, 285, 393, 395, 559, 573, 579, 586, 1870], "rotor_point": [284, 285, 1870, 1894], "rweight": [286, 1870], "rotor_weight": [286, 1870], "states_sel": [288, 409, 411, 412, 461, 463, 469, 472, 489, 491, 498, 502, 972, 973, 974, 975, 976, 977, 1870, 1899], "state_point": [289, 368, 1870], "state_source_turbin": [290, 1870], "per": [290, 395, 397, 461, 575, 579, 580, 586, 587, 746, 919, 928, 930, 931, 932, 933, 936, 937, 1117, 1134, 1136, 1144, 1152, 1262, 1279, 1291, 1298, 1299, 1386, 1396, 1760, 1794, 1870, 1874, 1898], "state_turbin": [291, 368, 1870], "tmodel": [292, 1870, 1890, 1899, 1901], "tmodel_sel": [293, 1870, 1890, 1899, 1901], "tname": [294, 1870, 1890, 1893, 1898, 1899, 1900], "terra": [296, 1870], "valid": [297, 657, 658, 663, 664, 675, 676, 1003, 1005, 1118, 1125, 1128, 1129, 1157, 1158, 1258, 1294, 1295, 1343, 1365, 1400, 1604, 1605, 1663, 1664, 1665, 1666, 1667, 1707, 1708, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1870, 1878, 1887, 1902], "xyh": [300, 910, 916, 918, 1882, 1899], "vector": [300, 451, 452, 940, 941, 942, 943, 944, 945, 1002, 1107, 1117, 1133, 1136, 1138, 1144, 1152, 1279, 1288, 1290, 1291, 1298, 1299, 1300, 1345, 1346, 1386, 1395, 1413, 1414, 1418, 1470, 1471, 1544, 1554, 1585, 1668, 1706, 1813, 1814, 1815, 1816, 1853, 1876, 1880, 1882, 1887, 1893, 1901, 1902, 1903], "x": [300, 319, 396, 423, 424, 426, 447, 451, 453, 454, 513, 514, 529, 574, 579, 582, 589, 626, 627, 708, 711, 714, 717, 719, 722, 726, 730, 731, 733, 736, 739, 742, 746, 747, 748, 749, 751, 756, 757, 758, 761, 763, 764, 765, 794, 797, 798, 800, 803, 804, 806, 809, 816, 820, 836, 839, 843, 846, 847, 849, 852, 856, 859, 912, 913, 939, 940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 985, 986, 1002, 1010, 1014, 1029, 1032, 1036, 1037, 1040, 1045, 1055, 1057, 1060, 1061, 1062, 1066, 1071, 1073, 1087, 1088, 1107, 1117, 1118, 1120, 1122, 1123, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1144, 1150, 1152, 1153, 1157, 1159, 1160, 1161, 1163, 1165, 1173, 1213, 1222, 1230, 1231, 1232, 1233, 1236, 1244, 1245, 1246, 1258, 1261, 1262, 1263, 1266, 1268, 1271, 1274, 1277, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1312, 1315, 1317, 1322, 1323, 1343, 1369, 1370, 1371, 1372, 1374, 1381, 1384, 1386, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1415, 1417, 1418, 1420, 1436, 1439, 1440, 1442, 1443, 1446, 1448, 1450, 1452, 1453, 1456, 1458, 1459, 1460, 1463, 1465, 1466, 1467, 1470, 1472, 1474, 1475, 1478, 1480, 1482, 1483, 1668, 1706, 1810, 1815, 1816, 1853, 1857, 1875, 1880, 1882, 1883, 1887, 1889, 1890, 1891, 1892, 1893, 1895, 1899, 1900, 1901, 1902, 1903, 1904], "y": [300, 319, 396, 447, 451, 453, 454, 513, 514, 574, 582, 589, 626, 627, 731, 912, 913, 939, 940, 942, 943, 945, 972, 973, 974, 975, 976, 977, 985, 986, 1002, 1010, 1032, 1045, 1048, 1066, 1107, 1118, 1120, 1122, 1123, 1125, 1126, 1128, 1130, 1133, 1134, 1137, 1144, 1151, 1152, 1153, 1157, 1159, 1160, 1161, 1163, 1166, 1173, 1214, 1222, 1230, 1231, 1232, 1244, 1245, 1246, 1247, 1250, 1258, 1261, 1263, 1264, 1266, 1268, 1272, 1274, 1277, 1278, 1280, 1288, 1289, 1290, 1295, 1296, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1312, 1315, 1317, 1322, 1323, 1365, 1374, 1376, 1377, 1378, 1379, 1381, 1385, 1388, 1389, 1391, 1392, 1393, 1394, 1395, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1409, 1417, 1418, 1420, 1439, 1440, 1442, 1443, 1446, 1448, 1450, 1452, 1453, 1456, 1458, 1459, 1460, 1463, 1465, 1466, 1467, 1470, 1472, 1474, 1475, 1478, 1480, 1482, 1483, 1668, 1706, 1815, 1816, 1853, 1858, 1882, 1889, 1890, 1891, 1892, 1893, 1899, 1900, 1901, 1902], "kilo": [301, 1870], "meant": [302, 1230, 1231, 1232, 1244, 1245, 1246], "call": [302, 327, 329, 339, 353, 354, 386, 387, 602, 1002, 1010, 1017, 1028, 1035, 1045, 1066, 1075, 1081, 1082, 1084, 1085, 1096, 1097, 1100, 1104, 1109, 1117, 1119, 1123, 1127, 1132, 1133, 1144, 1152, 1153, 1156, 1157, 1158, 1164, 1184, 1222, 1258, 1261, 1263, 1266, 1273, 1277, 1278, 1279, 1280, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1306, 1309, 1310, 1316, 1318, 1335, 1343, 1360, 1386, 1387, 1388, 1391, 1392, 1393, 1402, 1403, 1404, 1405, 1406, 1407, 1411, 1535, 1544, 1575, 1576, 1579, 1583, 1584, 1612, 1668, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1772, 1773, 1776, 1871, 1875, 1886, 1888, 1890, 1896, 1897, 1900, 1901, 1904], "top": [302, 548, 761, 1002, 1117, 1118, 1125, 1128, 1129, 1133, 1134, 1144, 1152, 1157, 1230, 1231, 1244, 1245, 1250, 1258, 1262, 1266, 1274, 1279, 1281, 1291, 1295, 1296, 1298, 1307, 1308, 1311, 1315, 1349, 1365, 1377, 1378, 1387, 1398, 1400, 1403, 1406, 1407, 1413, 1414, 1417, 1420, 1865, 1873, 1875, 1883, 1890, 1904], "ha": [308, 309, 315, 345, 370, 371, 405, 457, 467, 477, 496, 521, 564, 600, 623, 661, 667, 673, 679, 1002, 1010, 1026, 1045, 1053, 1066, 1069, 1108, 1123, 1128, 1132, 1133, 1136, 1138, 1154, 1160, 1161, 1164, 1261, 1262, 1263, 1266, 1268, 1273, 1280, 1288, 1289, 1290, 1292, 1299, 1307, 1308, 1346, 1388, 1391, 1393, 1398, 1413, 1414, 1498, 1589, 1760, 1814, 1815, 1866, 1868, 1886, 1887, 1889, 1892, 1895, 1897, 1898, 1899, 1901, 1902], "two": [308, 309, 315, 345, 371, 405, 451, 457, 467, 477, 496, 564, 600, 623, 630, 652, 661, 667, 669, 673, 675, 679, 1002, 1010, 1014, 1019, 1022, 1045, 1057, 1066, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1159, 1160, 1161, 1258, 1261, 1263, 1266, 1268, 1269, 1270, 1279, 1280, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1311, 1313, 1342, 1356, 1386, 1387, 1396, 1398, 1436, 1589, 1668, 1706, 1811, 1812, 1875, 1879, 1880, 1886, 1892, 1893, 1896, 1897, 1898, 1899, 1902, 1904], "data_var": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "name_str": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "dim_tupl": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "data_ndarrai": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "coord": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1002, 1153, 1267, 1391, 1398, 1413, 1589, 1668, 1706], "dim_name_str": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "dim_arrai": [308, 309, 315, 345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1589], "deriv": [312, 380, 400, 415, 418, 422, 429, 434, 787, 793, 949, 1002, 1435, 1487, 1490, 1508, 1510, 1517, 1528, 1544, 1554, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1880, 1886, 1889], "axialinductionmodel": [317, 318, 516, 761, 762, 774, 775, 781, 782, 787, 788, 806, 807, 820, 835, 849, 850, 856, 857, 1871, 1886], "axial": [317, 529, 1871, 1875, 1886, 1889], "induct": [317, 318, 516, 761, 762, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 806, 807, 820, 835, 849, 850, 856, 857, 1871, 1875, 1885, 1886, 1890], "ct2a": [317, 318, 1875], "ct": [317, 318, 518, 602, 635, 636, 650, 652, 653, 657, 658, 663, 664, 669, 670, 675, 676, 763, 764, 794, 795, 797, 798, 803, 804, 814, 846, 847, 983, 985, 995, 997, 1833, 1863, 1864, 1875, 1879, 1882, 1886, 1890, 1891, 1897, 1899, 1900, 1901, 1904], "model_book": [319, 513, 514, 515, 516, 517, 518, 519, 520, 521, 1871, 1880], "meta": [319, 1871, 1890, 1901], "usual": [319, 1158, 1266, 1280, 1342, 1394, 1896], "same": [319, 320, 322, 420, 683, 687, 691, 695, 699, 702, 706, 926, 1045, 1097, 1118, 1127, 1133, 1134, 1137, 1139, 1157, 1158, 1261, 1262, 1264, 1266, 1270, 1288, 1289, 1290, 1295, 1299, 1306, 1317, 1342, 1343, 1355, 1388, 1393, 1395, 1396, 1402, 1403, 1404, 1415, 1437, 1438, 1614, 1668, 1706, 1812, 1886, 1889, 1902, 1904], "subset": [319, 320, 322, 329, 361, 454, 461, 463, 469, 489, 491, 498, 516, 521, 1142, 1157, 1871, 1875, 1886, 1894], "loop_dim": [319, 320, 327, 329], "loop": [319, 320, 329, 1436, 1886, 1889, 1899, 1901], "states_i0": [319, 326], "from_point": [319, 322], "datacalcmodel": [327, 328, 329, 349, 383, 1871, 1886], "thei": [327, 395, 409, 410, 423, 433, 772, 778, 784, 790, 799, 805, 810, 817, 848, 853, 861, 1107, 1123, 1133, 1136, 1152, 1157, 1160, 1161, 1184, 1278, 1280, 1288, 1290, 1295, 1299, 1306, 1309, 1310, 1345, 1371, 1378, 1395, 1402, 1403, 1418, 1875, 1883, 1886, 1891, 1892, 1893, 1894, 1896, 1902], "depend": [327, 397, 522, 529, 561, 562, 575, 586, 658, 664, 669, 670, 675, 676, 746, 749, 756, 757, 761, 764, 794, 798, 800, 804, 806, 809, 843, 847, 849, 852, 856, 859, 1010, 1035, 1036, 1037, 1040, 1045, 1060, 1061, 1062, 1066, 1073, 1075, 1118, 1119, 1179, 1266, 1277, 1278, 1289, 1296, 1299, 1300, 1309, 1310, 1373, 1374, 1380, 1381, 1387, 1392, 1393, 1487, 1506, 1507, 1508, 1510, 1516, 1517, 1527, 1528, 1593, 1594, 1601, 1602, 1603, 1604, 1610, 1611, 1614, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1704, 1820, 1843, 1875, 1882, 1883, 1886, 1888, 1892, 1895, 1896, 1902, 1904, 1905], "individu": [327, 409, 416, 669, 675, 774, 781, 787, 793, 1133, 1134, 1136, 1146, 1262, 1266, 1280, 1289, 1392, 1398, 1487, 1491, 1492, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1545, 1549, 1550, 1579, 1593, 1595, 1596, 1602, 1604, 1606, 1607, 1610, 1612, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1654, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1871, 1875, 1890, 1893, 1896, 1899], "out_core_var": 329, "initial_result": 329, "sel": [329, 454, 1612, 1614], "isel": [329, 454], "typic": [329, 353, 386, 403, 1131, 1135, 1148, 1149, 1266, 1299, 1326, 1387, 1394, 1554], "fc": [329, 368, 1002, 1117, 1120, 1126, 1130, 1133, 1134, 1137, 1144, 1152, 1160, 1161, 1261, 1268, 1279, 1288, 1290, 1291, 1298, 1299, 1311, 1386, 1604, 1605, 1889, 1890, 1892, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "extendedst": [330, 331, 332, 333, 334, 335, 336, 337, 338, 1871, 1886], "extend": [330, 1002, 1017, 1104, 1136, 1138, 1160, 1161, 1288, 1290, 1393, 1402, 1403, 1409, 1413, 1414, 1868, 1869, 1871, 1884, 1887], "pmodel": 330, "append": [330, 332, 354, 356, 387, 389, 1899], "analys": [339, 1871], "handl": [339, 1002, 1066, 1119, 1168, 1171, 1179, 1197, 1290, 1312, 1315, 1325, 1871, 1886], "turbine_typ": [339, 516, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 983, 985, 1889, 1890, 1891, 1894, 1898, 1900, 1902], "turbinetyp": [339, 416, 417, 418, 516, 654, 657, 658, 663, 664, 669, 670, 675, 676, 1871, 1875], "turbine_model_nam": 339, "found": [339, 367, 520, 740, 814, 993, 1289, 1388, 1874, 1876, 1884, 1894, 1900, 1902], "turbine_model_sel": 339, "n_model": 339, "pre_rotor_model": 339, "farmdatamodellist": [339, 354, 355, 356, 357, 358, 359, 360, 1871], "post_rotor_model": 339, "par": [339, 340, 506, 820, 828, 841, 965, 966, 986], "respecitv": 339, "set_par": [339, 347, 506], "model_nam": [339, 347, 506], "init_par": [339, 347, 506], "final_par": [339, 347, 506], "collect_model": [339, 342, 506], "analyz": [339, 342, 506, 1438], "gather": [339, 342, 506], "st_sel": [339, 341, 413, 414, 416, 506, 593, 594, 595, 597, 599, 602, 604, 608, 610, 614, 616, 619, 622, 626, 628, 630, 632, 635, 637, 639, 640, 642, 643, 645, 648, 650, 652, 654, 655, 657, 659, 663, 665, 669, 671, 675, 677], "respect": [340, 451, 586, 587, 1127, 1264, 1280, 1290, 1296, 1300, 1369, 1371, 1373, 1376, 1378, 1380, 1395, 1396, 1400, 1415, 1668, 1706, 1891, 1902, 1903, 1904], "post": [341, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1160, 1161, 1258, 1279, 1291, 1295, 1296, 1298, 1387, 1393, 1887, 1890, 1896, 1899, 1901], "Such": [345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1160, 1161, 1589, 1891], "reason": [345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 1019, 1118, 1278, 1290, 1296, 1299, 1309, 1310, 1328, 1589], "here": [345, 371, 405, 457, 467, 477, 496, 564, 600, 623, 661, 667, 673, 679, 739, 740, 794, 795, 806, 807, 813, 814, 843, 844, 1134, 1278, 1280, 1295, 1299, 1309, 1310, 1373, 1380, 1393, 1589, 1873, 1874, 1876, 1886, 1887, 1889, 1890, 1891, 1893, 1895, 1897, 1898, 1900, 1902, 1903, 1904], "automat": [345, 371, 393, 394, 395, 405, 457, 467, 477, 496, 564, 580, 587, 600, 623, 661, 667, 673, 679, 912, 933, 972, 973, 974, 975, 976, 977, 1066, 1085, 1119, 1123, 1127, 1132, 1136, 1138, 1262, 1268, 1269, 1277, 1278, 1309, 1310, 1365, 1402, 1403, 1404, 1413, 1414, 1589, 1668, 1706, 1886, 1902], "befor": [349, 350, 432, 447, 620, 753, 771, 777, 972, 973, 974, 975, 976, 977, 1066, 1067, 1082, 1096, 1119, 1144, 1152, 1157, 1261, 1263, 1266, 1279, 1280, 1288, 1289, 1290, 1296, 1298, 1306, 1371, 1372, 1374, 1379, 1381, 1386, 1400, 1402, 1403, 1575, 1576, 1583, 1584, 1604, 1605, 1614, 1772, 1773, 1889, 1890, 1893, 1899], "By": [354, 387, 1118, 1157, 1160, 1161, 1261, 1263, 1266, 1288, 1289, 1290, 1294, 1295, 1306, 1373, 1380, 1398, 1402, 1403, 1554, 1890, 1904], "togeth": [354, 387, 1010, 1014, 1022, 1045, 1066, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403, 1904], "common": [354, 387, 739, 813, 820, 836, 1021, 1039, 1266, 1317, 1393, 1668, 1706, 1883], "insert": [354, 358, 409, 412, 1041, 1063, 1814, 1815], "farmmodel": [361, 507, 516, 1871, 1875], "oper": [361, 436, 866, 870, 874, 878, 882, 887, 892, 897, 902, 919, 935, 936, 937, 1002, 1122, 1153, 1156, 1277, 1347, 1361, 1374, 1381, 1391, 1871, 1897], "contrast": [361, 1356, 1436, 1871], "turbinemodel": [361, 411, 412, 413, 414, 415, 416, 507, 508, 516, 593, 594, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 1871, 1875], "allow": [361, 504, 1117, 1118, 1144, 1152, 1279, 1288, 1290, 1291, 1298, 1343, 1386, 1395, 1871, 1886, 1893, 1901], "applic": [361, 1394, 1491, 1492, 1495, 1496, 1512, 1513, 1520, 1521, 1535, 1542, 1543, 1548, 1552, 1553, 1579, 1595, 1596, 1597, 1606, 1607, 1612, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1659, 1660, 1665, 1666, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697, 1709, 1710, 1719, 1720, 1729, 1730, 1739, 1740, 1751, 1752, 1760, 1762, 1776, 1783, 1871, 1886, 1887, 1893, 1899], "abc": [362, 1002, 1003, 1007, 1871], "error": [367, 368, 443, 453, 800, 987, 993, 1134, 1157, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1371, 1378, 1402, 1403, 1902], "upcast": 368, "accept_non": 368, "accept_nan": 368, "combin": [368, 864, 865, 868, 869, 872, 873, 876, 877, 1295, 1306, 1886, 1889, 1890, 1899, 1904], "m": [368, 454, 461, 669, 675, 726, 727, 939, 940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1266, 1268, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1313, 1372, 1378, 1379, 1387, 1388, 1396, 1398, 1401, 1510, 1511, 1668, 1706, 1821, 1822, 1823, 1828, 1834, 1836, 1841, 1846, 1847, 1848, 1856, 1857, 1862, 1882, 1888, 1889, 1890, 1891, 1892, 1895, 1900, 1901, 1902, 1903], "f": [368, 593, 594, 946, 947, 1002, 1045, 1059, 1117, 1144, 1152, 1279, 1291, 1298, 1347, 1361, 1386, 1436, 1668, 1706, 1889, 1890, 1895, 1897, 1899, 1901, 1902, 1903, 1904], "p": [368, 602, 657, 658, 664, 670, 676, 951, 985, 995, 997, 1002, 1115, 1266, 1289, 1295, 1438, 1668, 1706, 1832, 1835, 1843, 1863, 1864, 1882, 1886, 1887, 1890, 1891, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "data_prio": 368, "search": [368, 453, 454, 461, 463, 516, 521, 646, 739, 740, 794, 795, 806, 807, 813, 814, 843, 844, 1435, 1880, 1886, 1894, 1895, 1900, 1902], "throw": 368, "been": [370, 1002, 1010, 1022, 1045, 1066, 1108, 1123, 1133, 1259, 1262, 1266, 1273, 1299, 1305, 1498, 1866, 1868, 1886, 1887, 1899], "quantiti": [375, 393, 1133, 1299, 1896], "new_wake_delta": [375, 377, 378, 381, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 560], "zero": [375, 381, 522, 527, 529, 535, 537, 543, 545, 548, 553, 555, 560, 646, 747, 748, 751, 757, 758, 763, 765, 797, 803, 809, 816, 846, 852, 859, 961, 963, 1002, 1122, 1123, 1144, 1152, 1281, 1298, 1360, 1386, 1387, 1388, 1438, 1668, 1706, 1793, 1798, 1810, 1838, 1880, 1882, 1889, 1890, 1900], "evaluate_result": [375, 378, 522, 525, 529, 533, 537, 541, 545, 548, 551, 555, 558], "pwake_typ": [375, 380, 522, 529, 537, 545, 548, 555], "wake_delta": [377, 378, 381, 430, 431, 432, 433, 436, 437, 522, 524, 525, 527, 529, 532, 533, 535, 537, 540, 541, 543, 545, 547, 548, 550, 551, 553, 555, 557, 558, 560, 746, 749, 752, 753, 756, 759, 761, 768, 770, 771, 772, 774, 776, 777, 778, 781, 783, 784, 787, 789, 790, 793, 794, 799, 800, 805, 806, 810, 813, 817, 843, 848, 849, 853, 856, 861, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 887, 888, 892, 893, 897, 898, 902, 903], "states_turbin": [378, 395, 397, 525, 533, 541, 551, 558, 575], "amb_r": [378, 525, 533, 541, 551, 558], "place": [378, 525, 533, 541, 551, 558, 940, 941, 942, 943, 944, 945, 1118, 1132, 1160, 1161, 1230, 1231, 1232, 1244, 1245, 1246, 1266, 1275, 1280, 1281, 1294, 1387, 1392, 1393, 1394, 1396, 1398, 1402, 1403, 1614, 1760, 1776, 1877, 1892, 1893, 1897], "calc_var": [393, 394, 573, 579, 580, 586, 587, 608, 609], "Their": [393, 394, 580, 587, 1134, 1266], "ad": [393, 394, 433, 435, 436, 580, 587, 598, 772, 778, 784, 790, 799, 805, 810, 817, 848, 853, 861, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902, 919, 938, 1002, 1107, 1118, 1123, 1158, 1259, 1280, 1295, 1303, 1326, 1341, 1343, 1372, 1379, 1394, 1403, 1418, 1554, 1614, 1874, 1886, 1888, 1890, 1893, 1894, 1898, 1899, 1900, 1902, 1903, 1904], "n_rotor_point": [393, 399, 573, 577, 579, 584, 586, 591], "rotor_point_weight": [393, 402, 573, 578, 579, 585, 586, 592], "design_point": [393, 396, 573, 574, 579, 582, 586, 589], "design": [393, 396, 398, 573, 574, 576, 579, 582, 586, 589, 963, 1066, 1144, 1152, 1289, 1298, 1375, 1382, 1386], "get_rotor_point": [393, 398, 573, 576, 579, 586], "eval_rpoint_result": [393, 397, 573, 575, 579, 586], "rpoint_result": [393, 397, 573, 575, 579, 586], "rmodel_typ": [393, 400, 573, 579, 586], "store_rpoint": 395, "store_rweight": 395, "store_amb_r": 395, "n_rpoint": [395, 397, 398, 399, 402, 575, 576, 577, 578, 584, 585, 591, 592], "reult": 395, "come": [395, 1133, 1269, 1395, 1891, 1898, 1902], "formul": [396, 574, 582, 589, 1898], "plane": [396, 574, 582, 589, 768, 939, 940, 941, 942, 943, 944, 945, 970, 972, 973, 974, 975, 976, 977, 986, 1299, 1470, 1880, 1883, 1886, 1889, 1899], "z": [396, 574, 582, 589, 697, 698, 731, 941, 942, 944, 945, 972, 973, 974, 975, 976, 977, 1002, 1122, 1184, 1277, 1281, 1345, 1374, 1381, 1387, 1402, 1403, 1890], "coordin": [396, 423, 424, 426, 427, 431, 453, 454, 574, 582, 589, 708, 711, 712, 714, 717, 718, 719, 722, 723, 726, 730, 732, 733, 736, 737, 739, 742, 743, 752, 770, 776, 783, 789, 910, 911, 972, 973, 974, 975, 976, 977, 1002, 1010, 1016, 1066, 1067, 1103, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1147, 1153, 1157, 1160, 1161, 1163, 1222, 1230, 1231, 1232, 1236, 1242, 1244, 1245, 1246, 1250, 1256, 1261, 1266, 1268, 1270, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1300, 1315, 1317, 1342, 1371, 1378, 1391, 1395, 1398, 1413, 1593, 1668, 1706, 1711, 1721, 1731, 1741, 1792, 1853, 1857, 1858, 1882, 1890, 1891, 1892, 1893, 1896, 1899, 1900, 1901], "radiu": [396, 574, 582, 589, 761, 764, 794, 798, 800, 804, 843, 847, 1002, 1045, 1048, 1066, 1075, 1133, 1146, 1208, 1266, 1294, 1347, 1348, 1456, 1457, 1487, 1488, 1811, 1812], "n_rotor_axi": [396, 574, 582, 589], "n_rotor_sid": [396, 574, 582, 589], "n_rotor_up": [396, 574, 582, 589], "dpoint": [396, 574, 582, 589], "copy_to_ambi": [397, 575], "either": [397, 461, 463, 489, 491, 561, 562, 575, 630, 631, 965, 966, 986, 987, 1119, 1122, 1128, 1133, 1134, 1137, 1138, 1173, 1186, 1262, 1266, 1288, 1300, 1306, 1312, 1315, 1402, 1403, 1404, 1405, 1409, 1413, 1414, 1510, 1511, 1614, 1880, 1882, 1898, 1901], "In": [397, 575, 1003, 1019, 1037, 1040, 1041, 1061, 1062, 1063, 1073, 1097, 1118, 1119, 1123, 1133, 1136, 1157, 1261, 1262, 1263, 1266, 1281, 1288, 1289, 1290, 1295, 1299, 1306, 1356, 1374, 1375, 1381, 1382, 1387, 1402, 1403, 1404, 1436, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "latter": [397, 529, 575, 1290, 1792, 1886, 1893, 1897, 1898, 1902, 1904], "case": [397, 453, 505, 575, 933, 961, 963, 980, 985, 993, 1020, 1022, 1041, 1063, 1082, 1097, 1118, 1119, 1123, 1127, 1131, 1133, 1135, 1136, 1148, 1149, 1157, 1164, 1184, 1236, 1250, 1261, 1262, 1263, 1266, 1288, 1289, 1290, 1295, 1299, 1300, 1306, 1312, 1317, 1328, 1371, 1374, 1375, 1378, 1381, 1382, 1387, 1388, 1393, 1394, 1402, 1403, 1404, 1486, 1874, 1886, 1890, 1893, 1897, 1898, 1899, 1900, 1901, 1902, 1904], "expect": [397, 445, 446, 575, 615, 630, 1136, 1261, 1262, 1266, 1394, 1892, 1895], "els": [397, 575, 961, 963, 1165, 1166], "If": [397, 520, 575, 646, 739, 740, 794, 795, 806, 807, 813, 814, 843, 844, 957, 958, 961, 963, 1003, 1005, 1007, 1010, 1016, 1019, 1034, 1045, 1066, 1067, 1081, 1100, 1107, 1108, 1117, 1118, 1119, 1120, 1122, 1123, 1127, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1148, 1149, 1150, 1151, 1152, 1157, 1158, 1159, 1160, 1161, 1204, 1222, 1258, 1261, 1262, 1263, 1264, 1266, 1270, 1278, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1312, 1315, 1316, 1317, 1328, 1341, 1343, 1345, 1346, 1355, 1356, 1365, 1369, 1370, 1372, 1374, 1375, 1376, 1377, 1379, 1381, 1382, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1401, 1402, 1403, 1404, 1405, 1409, 1413, 1414, 1415, 1418, 1436, 1580, 1668, 1704, 1706, 1792, 1897, 1902], "describ": [403, 1118, 1136, 1160, 1161, 1203, 1280, 1295, 1355, 1874, 1888, 1891, 1892, 1900], "meteorolog": [403, 1896], "speed": [403, 461, 474, 475, 481, 482, 602, 603, 635, 636, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 681, 685, 689, 693, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 985, 1131, 1133, 1135, 1148, 1149, 1283, 1289, 1290, 1316, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1814, 1815, 1821, 1822, 1823, 1828, 1846, 1847, 1848, 1856, 1874, 1875, 1881, 1882, 1889, 1890, 1891, 1892, 1893, 1895, 1896, 1898, 1900, 1902, 1903, 1904], "turbul": [403, 675, 794, 849, 850, 1826, 1852, 1875, 1882, 1883, 1886, 1892, 1895, 1896, 1902, 1903, 1904], "intens": [403, 675, 1826, 1852, 1875, 1882, 1883, 1886, 1892, 1896, 1902, 1903, 1904], "air": [403, 474, 475, 481, 482, 651, 653, 657, 658, 663, 664, 669, 675, 676, 985, 1824, 1849, 1875, 1882, 1886, 1892, 1895], "densiti": [403, 474, 475, 481, 482, 651, 653, 669, 985, 1002, 1136, 1144, 1152, 1261, 1262, 1263, 1279, 1298, 1386, 1395, 1413, 1414, 1641, 1642, 1669, 1824, 1849, 1875, 1878, 1882, 1886, 1892, 1895], "mere": 409, "defin": [409, 708, 1002, 1085, 1118, 1119, 1128, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1159, 1160, 1161, 1196, 1258, 1261, 1262, 1263, 1266, 1288, 1289, 1290, 1295, 1298, 1299, 1305, 1306, 1315, 1317, 1325, 1341, 1343, 1356, 1386, 1392, 1393, 1396, 1402, 1403, 1404, 1405, 1414, 1418, 1668, 1706, 1707, 1717, 1875, 1878, 1882, 1889, 1893, 1896, 1897, 1898, 1901, 1904], "basic": [409, 445, 446, 506, 529, 626, 1295, 1872, 1875, 1893, 1895, 1899], "xy": [409, 410, 939, 940, 943, 970, 972, 975, 1002, 1010, 1040, 1118, 1120, 1126, 1130, 1134, 1144, 1152, 1268, 1295, 1299, 1409, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1886, 1890, 1892, 1899, 1904], "ground": [409, 410, 759, 768, 1836, 1882, 1883, 1886, 1890], "appear": [409, 410, 800, 1002, 1136, 1295, 1365, 1370, 1374, 1377, 1381, 1400, 1893, 1895, 1897, 1902, 1904], "mstates_sel": 409, "boolean": [409, 410, 593, 594, 1002, 1194, 1275, 1341, 1395, 1545, 1546, 1561, 1654, 1655, 1668, 1706, 1711, 1721, 1731, 1741], "diamet": [409, 410, 416, 417, 447, 586, 587, 626, 627, 794, 910, 911, 912, 1299, 1627, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1834, 1875, 1882, 1886, 1889, 1893, 1896], "h": [409, 410, 416, 417, 445, 446, 454, 654, 913, 1197, 1263, 1295, 1836, 1882, 1889, 1890, 1891, 1892, 1895, 1899, 1900, 1901], "hub": [409, 410, 416, 417, 447, 1875, 1886, 1895, 1896, 1899, 1900], "turbine_model": [409, 410, 447, 507, 508, 516, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "add_model": [409, 411], "insert_model": [409, 412], "models_state_sel": 410, "tmodel_typ": [413, 415, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645], "overwritten": 416, "p_nomin": [416, 417, 654, 933, 1818, 1832, 1882, 1886], "nomin": [416, 417, 921, 1133, 1897], "ttype_typ": [416, 418, 650, 652, 654, 657, 663, 669, 675], "verticalprofil": [419, 420, 421, 422, 481, 482, 489, 491, 681, 682, 685, 686, 689, 690, 693, 694, 697, 701, 704, 1871, 1875], "vertic": [419, 586, 587, 939, 941, 942, 970, 1002, 1107, 1126, 1128, 1129, 1130, 1134, 1136, 1137, 1138, 1157, 1158, 1161, 1230, 1231, 1244, 1245, 1261, 1262, 1264, 1266, 1275, 1288, 1295, 1356, 1365, 1389, 1392, 1396, 1398, 1413, 1414, 1415, 1418, 1871, 1875, 1879, 1886, 1895, 1904], "profil": [419, 420, 421, 422, 481, 482, 491, 681, 683, 684, 685, 687, 688, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 849, 1423, 1427, 1428, 1432, 1871, 1875, 1881, 1886, 1889, 1890, 1891, 1895], "input_var": [419, 421, 597, 598, 681, 684, 685, 688, 689, 692, 693, 696, 697, 700, 701, 703, 704, 707, 884, 889, 894, 899, 904], "profile_typ": [419, 422, 681, 685, 689, 693, 697, 701, 704], "translat": [423, 1579, 1581, 1582, 1612, 1622, 1623, 1751, 1757, 1758, 1760, 1770, 1771, 1776, 1788, 1789, 1896, 1904], "global": [423, 1438, 1891], "respons": [423, 1875, 1896, 1898], "calc_ord": [423, 425, 708, 710, 714, 716, 719, 721, 726, 729, 733, 735, 739, 741], "get_wake_coo": [423, 427, 708, 712, 714, 718, 719, 723, 726, 732, 733, 737, 739, 743], "get_wake_modelling_data": [423, 428, 708, 714, 719, 724, 726, 733, 739], "get_centreline_point": [423, 426, 708, 711, 714, 717, 719, 722, 726, 730, 733, 736, 739, 742], "along": [423, 424, 426, 579, 580, 586, 587, 708, 711, 714, 717, 719, 722, 726, 730, 733, 736, 739, 742, 1002, 1066, 1120, 1139, 1215, 1261, 1263, 1266, 1288, 1290, 1294, 1355, 1386, 1389, 1395, 1416, 1419, 1875, 1886, 1889, 1890, 1896, 1900, 1904], "centrelin": [423, 424, 426, 708, 711, 714, 717, 719, 722, 726, 730, 733, 736, 739, 742, 856, 857, 1886, 1889, 1896], "calc_centreline_integr": [423, 424, 708, 714, 719, 726, 733, 739], "wframe_typ": [423, 429, 708, 714, 719, 726, 733, 739], "dx": [424, 856, 857, 1002, 1120, 1894], "self_wak": [424, 856, 857], "ipar": [424, 463, 631, 856, 857], "upper": [424, 586, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 1002, 1118, 1126, 1130, 1134, 1136, 1138, 1157, 1233, 1247, 1262, 1266, 1269, 1275, 1281, 1300, 1369, 1376, 1387, 1394, 1398, 1402, 1403, 1656, 1875, 1901], "bound": [424, 453, 1002, 1010, 1039, 1045, 1048, 1066, 1118, 1134, 1186, 1222, 1228, 1233, 1247, 1261, 1266, 1268, 1270, 1277, 1369, 1370, 1376, 1377, 1389, 1396, 1409, 1487, 1508, 1510, 1517, 1626, 1631, 1636, 1641, 1647, 1652, 1656, 1657, 1663, 1886], "consid": [424, 856, 857, 1136, 1263, 1544, 1554, 1886, 1902], "interpol": [424, 453, 454, 463, 597, 598, 631, 650, 652, 657, 663, 669, 670, 675, 676, 697, 698, 719, 720, 726, 727, 733, 734, 1002, 1160, 1161, 1266, 1281, 1290, 1356, 1875, 1886], "n_var": [424, 1554], "wake_coo": [427, 431, 712, 718, 723, 732, 737, 743, 752, 770, 776, 783, 789], "creation": [428, 518, 724, 959, 981, 1865, 1879, 1899, 1903], "init_wake_delta": [430, 433, 746, 749, 756, 759, 761, 768, 772, 774, 778, 781, 784, 787, 790, 793, 794, 799, 800, 805, 806, 810, 813, 817, 843, 848, 849, 853, 856, 861], "storag": [430, 433, 746, 749, 756, 759, 761, 768, 772, 774, 778, 781, 784, 787, 790, 793, 794, 799, 800, 805, 806, 810, 813, 817, 843, 848, 849, 853, 856, 861, 1889], "finalize_wake_delta": [430, 432, 746, 749, 753, 756, 759, 761, 768, 771, 774, 777, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856], "amb_result": [430, 432, 436, 746, 749, 753, 756, 759, 761, 768, 771, 774, 777, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856, 866, 870, 874, 878, 882, 887, 892, 897, 902], "wmodel_typ": [430, 434, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 843, 849, 856], "afterward": [432, 753, 771, 777], "wakesuperposit": [435, 436, 437, 516, 749, 864, 868, 872, 876, 880, 885, 890, 895, 900, 1871, 1875], "superposit": [435, 516, 746, 749, 750, 756, 761, 762, 774, 781, 787, 793, 794, 795, 800, 801, 806, 807, 813, 814, 843, 844, 849, 850, 856, 857, 864, 868, 872, 876, 1871, 1875, 1886, 1894, 1896, 1903], "note": [435, 951, 1019, 1118, 1157, 1160, 1161, 1289, 1303, 1360, 1361, 1396, 1760, 1875, 1888, 1891, 1892, 1893, 1895, 1898, 1900, 1903, 1904], "matter": [435, 1897], "other": [435, 474, 978, 1002, 1010, 1014, 1019, 1020, 1035, 1045, 1047, 1066, 1075, 1103, 1142, 1158, 1228, 1268, 1269, 1270, 1294, 1375, 1382, 1384, 1385, 1388, 1392, 1404, 1405, 1410, 1438, 1535, 1575, 1576, 1579, 1583, 1584, 1612, 1751, 1760, 1772, 1773, 1776, 1874, 1879, 1886, 1888, 1892, 1894, 1896, 1897, 1898, 1904], "calc_wakes_plus_wak": [435, 437, 864, 867, 868, 871, 872, 875, 876, 879, 880, 883, 885, 888, 890, 893, 895, 898, 900, 903], "calc_final_wake_delta": [435, 436, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 885, 887, 890, 892, 895, 897, 900, 902], "final_wake_delta": [436, 866, 870, 874, 878, 882, 887, 892, 897, 902], "simpl": [436, 787, 793, 866, 870, 874, 878, 882, 887, 892, 897, 902, 1118, 1122, 1299, 1388, 1394, 1886, 1892, 1897, 1900, 1904], "plu": [436, 866, 870, 874, 878, 882, 887, 892, 897, 902, 1262, 1295, 1343, 1792, 1809, 1899], "sel_sp": [437, 867, 871, 875, 879, 883, 888, 893, 898, 903], "wake_model_result": [437, 867, 871, 875, 879, 883, 888, 893, 898, 903], "n_sel_sp": [437, 867, 871, 875, 879, 883, 888, 893, 898, 903], "boundari": [438, 439, 912, 1288, 1289, 1290, 1306, 1396, 1402, 1403, 1439, 1440, 1444, 1446, 1448, 1450, 1454, 1456, 1458, 1461, 1463, 1465, 1468, 1470, 1472, 1476, 1478, 1480, 1484, 1487, 1488, 1508, 1509, 1626, 1627, 1628, 1629, 1630, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1876, 1878, 1890, 1891, 1893], "geom2d": [438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1487, 1488, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1809, 1893], "areageometri": [438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1456, 1463, 1470, 1478, 1479, 1487, 1488, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1809, 1880], "wind_farm": [438, 439], "add_turbin": [438, 440, 447, 1890, 1904], "turbine_nam": [438, 442, 955, 957, 958], "staticdata": [443, 444, 1872, 1891], "static": [443, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 987, 989, 990, 1002, 1087, 1089, 1167, 1446, 1447, 1865, 1872, 1880, 1886, 1887, 1890, 1892, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1903], "directori": [443, 946, 947, 1872], "add_data_packag": [443, 987, 989], "context": [443, 987, 989, 990, 991, 992, 993, 994, 1002, 1146, 1184, 1199, 1284, 1337, 1890, 1893, 1899, 1901], "packag": [443, 987, 989, 990, 1136, 1438, 1486, 1865, 1873, 1874, 1875, 1876, 1880, 1883, 1886, 1887, 1888, 1891, 1893, 1894, 1896, 1900, 1904], "file_sfx": [443, 987, 989], "file": [443, 445, 446, 447, 448, 449, 450, 453, 454, 461, 463, 489, 491, 505, 518, 561, 562, 598, 614, 615, 630, 631, 650, 651, 652, 653, 657, 658, 663, 664, 669, 670, 675, 676, 800, 910, 915, 916, 917, 918, 919, 939, 946, 947, 948, 951, 952, 954, 955, 957, 958, 959, 964, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 987, 989, 990, 991, 992, 993, 995, 1000, 1001, 1290, 1791, 1792, 1808, 1817, 1872, 1874, 1875, 1879, 1880, 1886, 1887, 1888, 1892, 1893, 1895, 1898, 1900, 1901, 1902, 1903], "locat": [443, 573, 934, 987, 989, 990, 1002, 1010, 1038, 1045, 1066, 1075, 1077, 1082, 1084, 1085, 1086, 1087, 1088, 1096, 1097, 1098, 1102, 1123, 1133, 1136, 1138, 1157, 1171, 1219, 1230, 1231, 1232, 1242, 1244, 1245, 1246, 1256, 1262, 1266, 1275, 1277, 1278, 1296, 1299, 1300, 1307, 1308, 1309, 1310, 1315, 1321, 1359, 1360, 1365, 1374, 1375, 1381, 1382, 1392, 1398, 1402, 1403, 1814, 1815, 1888, 1891, 1898, 1904], "add_data_package_fil": [443, 987, 990], "file_nam": [443, 445, 910, 919, 939, 946, 951, 952, 955, 959, 964, 970, 978, 981, 983, 987, 990, 993, 1872], "add_fil": [443, 987, 991, 992], "file_path": [443, 449, 450, 910, 915, 916, 917, 918, 955, 957, 958, 987, 991, 992, 995, 1000, 1001, 1874], "path": [443, 445, 446, 449, 450, 461, 463, 489, 491, 505, 518, 614, 615, 630, 631, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 910, 919, 939, 946, 948, 952, 954, 955, 957, 958, 959, 964, 970, 978, 981, 983, 987, 991, 992, 993, 1000, 1001, 1002, 1010, 1041, 1042, 1043, 1045, 1063, 1064, 1065, 1066, 1074, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1183, 1225, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1328, 1340, 1356, 1387, 1389, 1396, 1398, 1463, 1791, 1792, 1808, 1817, 1880, 1887, 1890, 1899, 1901, 1902], "get_file_path": [443, 987, 993, 1891], "check_raw": [443, 987, 993], "toc": [443, 987, 994, 1891], "content": [443, 516, 521, 987, 994, 1902], "data_book": [444, 987, 988], "parse_pct_file_nam": [445, 1872], "pars": [445, 446, 453, 454, 1295, 1535, 1570, 1579, 1612, 1751, 1760, 1776, 1872], "format": [445, 446, 453, 454, 461, 914, 951, 972, 973, 974, 975, 976, 977, 995, 1001, 1002, 1087, 1088, 1132, 1148, 1149, 1157, 1163, 1164, 1165, 1166, 1275, 1281, 1294, 1295, 1296, 1306, 1347, 1361, 1375, 1382, 1392, 1393, 1401, 1438, 1874, 1891, 1892], "csv": [445, 446, 447, 448, 461, 910, 915, 955, 957, 958, 995, 996, 998, 999, 1808, 1874, 1880, 1886, 1890, 1893, 1895, 1898, 1899, 1900, 1901, 1902, 1903], "pathlib": [445, 446, 946, 948, 987, 993, 1398, 1891], "parsed_data": [445, 446], "parse_pct_two_fil": [446, 1872], "file_name_a": [446, 1872], "file_name_b": [446, 1872], "second": [446, 1002, 1134, 1157, 1160, 1161, 1262, 1263, 1270, 1295, 1307, 1308, 1822, 1847, 1882], "farm_layout": [447, 448, 449, 450, 451, 452, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903], "add_from_csv": [447, 448, 1874], "data_sourc": [447, 448, 453, 454, 461, 463, 472, 489, 491, 502, 561, 562, 597, 598, 614, 615, 630, 631, 650, 651, 657, 658, 697, 698, 1874, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1901, 1902, 1903, 1904], "col_index": 447, "col_nam": 447, "col_x": 447, "col_i": 447, "col_h": 447, "col_d": 447, "col_id": 447, "cols_models_pr": 447, "cols_models_post": 447, "turbine_base_nam": 447, "turbine_id": 447, "turbine_base_name_count_shift": 447, "turbine_paramet": [447, 450, 451, 452], "panda": [447, 448, 461, 463, 469, 489, 491, 498, 504, 561, 562, 597, 598, 614, 615, 630, 631, 650, 651, 652, 653, 657, 658, 663, 664, 669, 670, 675, 676, 698, 910, 919, 926, 928, 930, 931, 932, 933, 936, 937, 939, 946, 951, 952, 955, 956, 959, 961, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 995, 1000, 1001, 1295, 1438, 1874, 1875, 1880, 1886, 1889, 1897, 1898, 1900, 1902, 1904], "datafram": [447, 448, 461, 463, 489, 491, 504, 561, 562, 597, 598, 614, 615, 630, 631, 650, 651, 652, 653, 657, 658, 663, 664, 669, 670, 675, 676, 698, 926, 928, 930, 931, 932, 933, 936, 937, 951, 955, 956, 959, 961, 963, 964, 972, 973, 974, 975, 976, 977, 981, 1000, 1001, 1295, 1874, 1875, 1886, 1897, 1898, 1900, 1902, 1904], "column": [447, 461, 463, 489, 491, 504, 561, 562, 597, 598, 615, 630, 631, 651, 653, 657, 658, 663, 664, 669, 675, 698, 951, 957, 958, 995, 1001, 1133, 1136, 1138, 1262, 1266, 1274, 1281, 1288, 1289, 1290, 1295, 1299, 1386, 1395, 1396, 1413, 1414, 1436, 1668, 1706, 1792, 1891, 1895, 1897, 1898, 1901, 1902], "enter": [447, 1261], "forward": [447, 449, 450, 451, 452, 510, 912, 917, 951, 972, 973, 974, 975, 976, 977, 1000, 1001, 1122, 1262, 1278, 1295, 1299, 1309, 1310, 1395, 1405], "add_from_df": [448, 1874, 1886], "add_from_fil": [449, 1874, 1891, 1902], "infer": [449, 450, 1404, 1900], "suffix": [449, 453, 454], "add_from_json": [450, 1874], "set_farm_nam": 450, "turbim": [450, 1874], "json": [450, 914, 1874], "add_grid": [451, 1874, 1890, 1892, 1899, 1901, 1903], "xy_bas": [451, 452, 1874, 1889, 1890, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1903], "step_vector": [451, 1874, 1890, 1892, 1899, 1901, 1903], "regular": [451, 453, 579, 586, 1002, 1261, 1266, 1281, 1288, 1289, 1290, 1316, 1398, 1727, 1737, 1760, 1776, 1810, 1874, 1875, 1877, 1878, 1880, 1886, 1890, 1899, 1901, 1903], "grid": [451, 453, 537, 545, 579, 972, 973, 974, 975, 976, 977, 986, 1002, 1128, 1133, 1232, 1234, 1246, 1248, 1258, 1288, 1289, 1290, 1299, 1322, 1323, 1356, 1395, 1402, 1403, 1404, 1405, 1642, 1670, 1676, 1717, 1718, 1727, 1737, 1738, 1760, 1761, 1776, 1874, 1875, 1877, 1878, 1886, 1890, 1892, 1903], "add_row": [452, 1874, 1889, 1893, 1895, 1897, 1898, 1900], "xy_step": [452, 1874, 1889, 1893, 1895, 1897, 1898, 1900], "row": [452, 630, 631, 957, 1133, 1134, 1157, 1158, 1266, 1274, 1281, 1288, 1289, 1290, 1299, 1306, 1386, 1395, 1396, 1668, 1706, 1737, 1738, 1760, 1761, 1874, 1885, 1887, 1889, 1890, 1895, 1897, 1901, 1902], "fielddatanc": [453, 454, 455, 456, 457, 458, 459, 460, 1874, 1886, 1892], "heterogen": [453, 1874, 1885, 1887, 1895], "horizont": [453, 768, 939, 940, 943, 944, 945, 970, 972, 975, 1002, 1038, 1107, 1125, 1126, 1128, 1130, 1134, 1136, 1137, 1138, 1157, 1158, 1160, 1230, 1231, 1244, 1245, 1261, 1262, 1264, 1266, 1295, 1299, 1389, 1392, 1396, 1398, 1413, 1414, 1415, 1418, 1874, 1879, 1883, 1886, 1891, 1892, 1895, 1899, 1900], "netcdf": [453, 954, 955, 958, 1874, 1892], "pattern": [453, 454, 1002, 1294, 1387, 1403, 1886, 1897], "end": [453, 454, 938, 989, 995, 1000, 1001, 1019, 1118, 1120, 1132, 1133, 1136, 1138, 1164, 1184, 1264, 1280, 1372, 1374, 1379, 1381, 1415], "nc": [453, 454, 995, 996, 998, 999, 1817, 1886, 1892], "One": [453, 454, 1118, 1371, 1378, 1892], "mani": [453, 454, 1020, 1133, 1134, 1886, 1887], "ovar": [453, 461, 489, 561, 630], "var2ncvar": [453, 454, 1892], "map": [453, 454, 461, 463, 489, 491, 504, 522, 523, 524, 525, 526, 527, 528, 561, 562, 597, 598, 615, 951, 972, 973, 974, 975, 976, 977, 978, 980, 1002, 1010, 1045, 1066, 1136, 1138, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403, 1413, 1414, 1438, 1502, 1503, 1538, 1539, 1704, 1863, 1864, 1875, 1879, 1882, 1886, 1890, 1894, 1895, 1898, 1899, 1901], "fixed_var": [453, 454, 461, 463, 489, 491, 502, 1891, 1892, 1893, 1895, 1897, 1898, 1901, 1902, 1903, 1904], "uniform": [453, 454, 461, 463, 481, 489, 491, 561, 562, 646, 704, 733, 1133, 1289, 1299, 1612, 1614, 1874, 1875, 1886, 1889, 1890, 1891, 1900, 1902, 1904], "read": [453, 454, 461, 463, 489, 491, 505, 562, 598, 615, 631, 651, 653, 657, 658, 663, 664, 669, 670, 675, 676, 995, 1000, 1791, 1792, 1808, 1809, 1865, 1872, 1874, 1880, 1886, 1890, 1892, 1899, 1901, 1902], "states_coord": [453, 454, 1892], "x_coord": [453, 454, 1892], "y_coord": [453, 454, 1892], "h_coord": [453, 454, 1892], "pre_load": [453, 454, 1892], "weight_ncvar": [453, 454], "bounds_error": [453, 1892], "exceed": [453, 504, 1396], "fill_valu": 453, "time_format": [453, 454, 1892], "datetim": [453, 454, 1296, 1416, 1419], "string": [453, 454, 521, 949, 963, 1002, 1087, 1090, 1091, 1107, 1117, 1118, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1163, 1164, 1184, 1223, 1235, 1249, 1258, 1261, 1262, 1263, 1264, 1266, 1275, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1335, 1347, 1361, 1374, 1381, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1400, 1402, 1403, 1414, 1415, 1418, 1438, 1487, 1489, 1508, 1510, 1517, 1528, 1535, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1668, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1880], "interp_nan": [453, 454], "linearli": [453, 454, 774, 781, 787, 793, 1395], "interpn_par": [453, 454], "scipi": [453, 454, 463, 631, 669, 670, 675, 676, 1117, 1144, 1152, 1279, 1291, 1298, 1386, 1387, 1668, 1706], "interpn": [453, 454, 631, 669, 670, 675, 676], "utmx": [454, 1892], "utmi": [454, 1892], "d_": 454, "xr": [454, 1438], "multiheightst": [461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 1874, 1886], "multipl": [461, 746, 1002, 1019, 1133, 1158, 1159, 1160, 1161, 1262, 1266, 1295, 1299, 1311, 1343, 1398, 1404, 1874, 1875, 1886, 1887, 1898], "taken": [461, 1261, 1288, 1300, 1402, 1403, 1900], "exampl": [461, 985, 1120, 1134, 1157, 1159, 1266, 1280, 1294, 1295, 1347, 1356, 1361, 1362, 1372, 1379, 1411, 1438, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "50": [461, 504, 1133, 1261, 1438, 1890, 1891, 1893, 1894, 1895, 1898, 1899, 1903], "60": [461, 1890, 1893, 1899], "100": [461, 607, 1002, 1136, 1261, 1414, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904], "var2col": [461, 463, 489, 491, 502, 504, 561, 562, 1891, 1893, 1895, 1898, 1899, 1901, 1902, 1903], "fix": [461, 463, 474, 489, 491, 1066, 1123, 1128, 1266, 1305, 1315, 1325, 1342, 1374, 1381, 1387, 1401, 1631, 1688, 1717, 1874, 1878, 1886, 1890], "pd_read_par": [461, 463, 491, 562, 698], "slice": [461, 463, 469, 489, 491, 498, 537, 939, 970, 972, 973, 974, 975, 976, 977, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1294, 1295, 1296, 1298, 1387, 1438, 1875, 1879, 1886, 1900], "rang": [461, 463, 469, 489, 491, 498, 614, 615, 1002, 1075, 1081, 1086, 1097, 1100, 1102, 1117, 1136, 1138, 1144, 1152, 1157, 1261, 1262, 1263, 1266, 1270, 1279, 1280, 1288, 1289, 1290, 1291, 1295, 1298, 1306, 1314, 1362, 1372, 1379, 1386, 1398, 1401, 1402, 1403, 1413, 1414, 1438, 1875, 1886, 1889, 1897, 1898, 1899, 1904], "states_loc": [461, 463, 469, 472, 489, 491, 498, 502, 1895], "loc": [461, 463, 469, 489, 491, 498, 1002, 1075, 1082, 1085, 1087, 1094, 1096, 1097, 1223, 1275, 1360, 1365, 1370, 1374, 1377, 1381, 1392, 1396, 1897, 1898], "rdict": [461, 462, 472, 473, 489, 490, 502, 503], "index_col": [461, 462, 472, 473, 489, 490, 502, 503], "interp1d": 463, "multiheighttimeseri": [472, 473, 1874, 1886, 1891, 1895], "timeseri": [472, 502, 503, 719, 720, 733, 734, 933, 1874, 1875, 1885, 1886, 1887, 1895, 1899, 1901], "parse_d": [472, 473, 502, 503], "scanw": [474, 475, 476, 477, 478, 479, 480, 1874], "wd": [474, 475, 481, 482, 615, 714, 715, 731, 986, 995, 997, 1813, 1814, 1815, 1816, 1854, 1863, 1864, 1880, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "ti": [474, 475, 481, 482, 566, 645, 646, 675, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 856, 857, 864, 868, 872, 876, 985, 995, 997, 1610, 1838, 1839, 1852, 1863, 1864, 1875, 1876, 1882, 1886, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "rho": [474, 475, 481, 482, 650, 651, 653, 657, 658, 663, 664, 675, 676, 985, 995, 997, 1849, 1863, 1864, 1882, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "ws_list": [474, 475], "singlestatest": [481, 482, 483, 484, 485, 486, 487, 488, 1874, 1886, 1889, 1890, 1900], "profdict": [481, 489], "profdata": [481, 482], "statest": [489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 1874, 1891, 1893, 1897, 1898, 1903, 1904], "readabl": [489, 1874, 1898, 1902], "rpar": [489, 657], "create_random_abl_st": [504, 1874], "cols_minmax": 504, "mol_abs_rang": 504, "5000": [504, 1371, 1378, 1893, 1897, 1899, 1901, 1902], "normal": [504, 569, 570, 714, 912, 1007, 1010, 1023, 1045, 1050, 1066, 1133, 1136, 1137, 1144, 1160, 1161, 1261, 1262, 1263, 1266, 1288, 1289, 1290, 1294, 1299, 1300, 1306, 1395, 1398, 1402, 1403, 1417, 1420, 1668, 1706, 1875, 1891, 1897, 1903], "random": [504, 1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1215, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1355, 1387, 1396, 1398, 1874, 1891], "abl": [504, 681, 685, 689, 693, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1874, 1875, 1886], "mol": [504, 693, 1429, 1430, 1433, 1434, 1841, 1881, 1882, 1890, 1891], "neutral": [504, 681, 693, 1422, 1423, 1424, 1875, 1880], "stratif": 504, "windio": [505, 1886], "read_cas": [505, 1874], "case_yaml": [505, 1874], "site_par": [505, 1874], "farm_par": 505, "ana_par": 505, "yaml": [505, 1874, 1886], "read_sit": 505, "read_farm": 505, "read_analys": 505, "basicfarmcontrol": [506, 1875, 1890, 1894, 1899, 1901], "condit": [506, 614, 739, 813, 820, 1266, 1487, 1488, 1811, 1875, 1886, 1889, 1890, 1893, 1896, 1898, 1900, 1904], "farm_model": [507, 508, 509, 510, 511, 512, 516, 1894], "turbine2farmmodel": [507, 508, 509, 510, 511, 512, 1875, 1894], "promot": [507, 1875], "simpli": [507, 569, 1085, 1133, 1160, 1161, 1280, 1360, 1875, 1888, 1890, 1891, 1894, 1898, 1903], "init": [510, 989, 990, 1580, 1612, 1614, 1617, 1754, 1765, 1785], "slightli": [513, 1139, 1290, 1299, 1880, 1898], "enhanc": [513, 1880], "dictionari": [513, 515, 820, 841, 951, 1001, 1002, 1133, 1134, 1136, 1138, 1146, 1297, 1300, 1341, 1365, 1374, 1381, 1398, 1413, 1414, 1880], "pass": [515, 1107, 1117, 1118, 1127, 1128, 1132, 1133, 1134, 1144, 1152, 1157, 1158, 1160, 1161, 1261, 1262, 1263, 1266, 1268, 1269, 1270, 1277, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1299, 1343, 1370, 1371, 1375, 1377, 1378, 1382, 1384, 1385, 1386, 1387, 1388, 1389, 1402, 1403, 1404, 1405, 1418, 1668, 1706, 1903], "kind": [516, 1230, 1231, 1232, 1244, 1245, 1246, 1892, 1904], "partial_wak": [516, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 1894], "partialwakemodel": 516, "wake_superposit": [516, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 1894], "induction_model": [516, 1889], "base_class": 516, "pct_file": [516, 518], "print_toc": [516, 521, 1894], "model_typ": [516, 520, 910, 919, 939, 946, 949, 952, 955, 959, 970, 978, 981, 983], "class_nam": [516, 520], "curv": [518, 650, 651, 653, 657, 663, 664, 669, 670, 675, 676, 983, 985, 1002, 1041, 1063, 1159, 1160, 1161, 1389, 1875, 1879, 1886, 1887, 1890, 1897], "dynam": [520, 719, 733, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403, 1486, 1875, 1880, 1885, 1887], "optin": [520, 537, 1792], "mclass": 520, "more": [522, 1044, 1117, 1118, 1133, 1136, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1263, 1266, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1298, 1299, 1306, 1324, 1343, 1386, 1388, 1393, 1402, 1403, 1404, 1438, 1668, 1706, 1886, 1889, 1890, 1898, 1899, 1902], "than": [522, 895, 1019, 1075, 1082, 1097, 1120, 1136, 1158, 1236, 1250, 1261, 1262, 1263, 1266, 1288, 1290, 1299, 1311, 1315, 1362, 1371, 1372, 1378, 1379, 1386, 1402, 1403, 1889, 1899, 1902], "invok": [522, 602, 708, 774, 781, 787, 793, 1007, 1875, 1886, 1887, 1888, 1890, 1893, 1902, 1903, 1904], "wname2pwak": [522, 523], "wtype2pwak": [522, 523], "ones": [523, 530, 538, 546, 549, 556, 1299, 1436], "partialaxiwak": [529, 530, 531, 532, 533, 534, 535, 536, 746, 1875, 1890, 1894, 1899, 1901], "idea": [529, 895, 1886, 1897], "radial": [529, 530, 747, 758, 764, 765, 798, 804, 847, 1002, 1010, 1016, 1045, 1048, 1066, 1067, 1139, 1209, 1210, 1347, 1349, 1350, 1351, 1352, 1889], "n": [529, 530, 537, 538, 545, 546, 579, 580, 586, 587, 849, 940, 941, 942, 943, 944, 945, 986, 1036, 1037, 1038, 1040, 1060, 1061, 1062, 1073, 1103, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1262, 1263, 1266, 1268, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1306, 1311, 1313, 1315, 1360, 1386, 1387, 1388, 1396, 1398, 1401, 1402, 1403, 1413, 1414, 1418, 1438, 1470, 1471, 1500, 1501, 1568, 1569, 1631, 1632, 1636, 1637, 1647, 1648, 1668, 1688, 1689, 1706, 1875, 1886, 1888, 1890, 1891, 1894, 1899, 1900, 1901, 1902, 1904], "radii": [529, 763, 764, 797, 798, 803, 804, 846, 847, 1002, 1344, 1347, 1811, 1880], "cover": [529, 1136, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "disc": [529, 548, 1487, 1488, 1886, 1896], "overlap": [529, 548, 579, 580, 1144, 1152, 1157, 1268, 1269, 1298, 1386], "circl": [529, 548, 1045, 1097, 1127, 1131, 1133, 1135, 1148, 1149, 1295, 1343, 1362, 1392, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1707, 1708, 1711, 1717, 1718, 1721, 1727, 1728, 1731, 1737, 1738, 1741, 1811, 1812, 1880, 1893], "area": [529, 579, 580, 1002, 1118, 1160, 1161, 1262, 1290, 1294, 1299, 1315, 1388, 1389, 1403, 1413, 1414, 1440, 1446, 1448, 1450, 1456, 1458, 1465, 1472, 1480, 1487, 1488, 1792, 1811, 1812, 1876, 1880, 1886, 1889, 1893], "partialdistslicedwak": [537, 538, 539, 540, 541, 542, 543, 544, 545, 749, 1875, 1894], "distanc": [537, 794, 795, 1117, 1132, 1133, 1136, 1138, 1144, 1152, 1279, 1291, 1294, 1298, 1300, 1386, 1400, 1439, 1440, 1444, 1446, 1448, 1450, 1454, 1456, 1458, 1461, 1463, 1465, 1468, 1470, 1472, 1476, 1478, 1480, 1484, 1510, 1511, 1657, 1658, 1668, 1670, 1682, 1683, 1706, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1761, 1811, 1812, 1875, 1876, 1878, 1880, 1889, 1893, 1904], "make": [537, 1002, 1038, 1127, 1134, 1138, 1157, 1261, 1263, 1270, 1278, 1288, 1290, 1294, 1299, 1307, 1308, 1309, 1310, 1386, 1393, 1395, 1400, 1404, 1414, 1811, 1875, 1876, 1888, 1893, 1902], "done": [537, 1139, 1261, 1312, 1498, 1899, 1901], "grotor": 537, "gridrotor": [537, 538, 546, 579, 580, 581, 582, 583, 584, 585, 1875, 1890, 1894], "partialgrid": [545, 546, 547, 1875, 1894], "mai": [545, 602, 1003, 1017, 1019, 1041, 1063, 1075, 1087, 1089, 1104, 1109, 1119, 1120, 1127, 1132, 1133, 1136, 1157, 1158, 1160, 1161, 1230, 1231, 1232, 1236, 1242, 1244, 1245, 1246, 1250, 1256, 1259, 1262, 1266, 1268, 1269, 1270, 1283, 1288, 1289, 1290, 1295, 1296, 1299, 1305, 1306, 1307, 1308, 1312, 1315, 1341, 1360, 1371, 1373, 1374, 1378, 1380, 1381, 1392, 1395, 1402, 1403, 1875, 1892, 1899, 1904], "partialtophat": [548, 549, 550, 551, 552, 553, 554, 1875, 1894], "hat": [548, 761, 1875, 1883, 1904], "rotorpoint": [555, 556, 557, 558, 559, 560, 1875, 1889, 1890, 1894], "directli": [555, 981, 987, 1133, 1160, 1161, 1229, 1243, 1261, 1277, 1296, 1299, 1307, 1308, 1414, 1535, 1544, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1873, 1875, 1879, 1880, 1883, 1889, 1898], "get_wake_point": [555, 559], "setuniformdata": [561, 562, 563, 564, 565, 1875, 1886], "both": [561, 562, 756, 757, 806, 809, 849, 852, 856, 859, 1002, 1044, 1118, 1122, 1132, 1138, 1139, 1160, 1161, 1240, 1254, 1258, 1261, 1277, 1278, 1280, 1290, 1295, 1307, 1308, 1312, 1342, 1356, 1371, 1378, 1387, 1393, 1395, 1400, 1401, 1402, 1403, 1406, 1407, 1760, 1889, 1897, 1902, 1903], "assum": [561, 562, 1136, 1138, 1258, 1388, 1393, 1404, 1704, 1811, 1901], "Or": [561, 562], "independ": [561, 562, 1091, 1134, 1158, 1262, 1312, 1325, 1406, 1407, 1895], "written": [561, 562, 954, 957, 958, 1887], "tke2ti": [566, 567, 568, 1875, 1886, 1894], "tke": [566, 1875, 1886, 1891, 1895, 1896], "sqrt": [566, 1261, 1262, 1299, 1668, 1706, 1810, 1875, 1880, 1886], "wakedelta": [569, 570, 571, 572, 1875], "subtract": [569, 1066, 1067, 1875, 1893], "divid": [569, 570, 972, 973, 974, 975, 976, 977, 1152, 1261, 1262, 1298, 1395], "centrerotor": [573, 574, 575, 576, 577, 578, 1875, 1894, 1899, 1901], "compos": [579, 586, 1010, 1014, 1019, 1045, 1066, 1875], "possibli": [579, 1081, 1100, 1875], "kick": [579, 1875], "out": [579, 1019, 1082, 1266, 1290, 1299, 1400, 1402, 1403, 1438, 1668, 1706, 1810, 1875, 1890, 1898, 1899, 1901, 1904], "outsid": [579, 1118, 1263, 1294, 1327, 1400, 1401, 1402, 1403, 1875, 1892], "reduc": [579, 580, 586, 587, 919, 935, 936, 937, 972, 973, 974, 975, 976, 977, 1261, 1277, 1283, 1299, 1886], "reduct": [579, 580, 1889], "actual": [579, 580, 1117, 1144, 1152, 1160, 1161, 1259, 1266, 1279, 1291, 1298, 1315, 1342, 1386, 1394, 1535, 1544, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1886, 1888, 1895, 1897, 1900], "repres": [579, 580, 630, 669, 675, 913, 1020, 1131, 1135, 1136, 1138, 1148, 1149, 1158, 1266, 1278, 1295, 1296, 1299, 1309, 1310, 1365, 1371, 1378, 1393, 1395, 1413, 1414, 1438, 1456, 1463, 1470, 1875, 1880, 1891, 1903, 1904], "circ": [579, 580], "recalcul": [579, 580], "accordingli": [579, 580, 1261, 1299], "nint": [579, 580, 586, 587], "200": [579, 580, 586, 587, 1890, 1891, 1893, 1895, 1904], "levelrotor": [586, 587, 588, 589, 590, 591, 592, 1875, 1886, 1894], "between": [586, 1002, 1038, 1117, 1118, 1125, 1129, 1131, 1133, 1135, 1136, 1138, 1144, 1148, 1149, 1152, 1158, 1159, 1160, 1161, 1230, 1231, 1244, 1245, 1261, 1262, 1266, 1269, 1275, 1279, 1288, 1289, 1290, 1291, 1294, 1298, 1300, 1306, 1356, 1386, 1389, 1393, 1400, 1402, 1403, 1418, 1658, 1668, 1706, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1761, 1811, 1812, 1839, 1875, 1882, 1890, 1892, 1893, 1895, 1899], "lower": [586, 880, 881, 885, 886, 890, 891, 895, 896, 900, 901, 934, 1002, 1118, 1126, 1130, 1134, 1136, 1138, 1157, 1233, 1247, 1261, 1262, 1266, 1268, 1269, 1270, 1275, 1300, 1317, 1369, 1376, 1383, 1387, 1389, 1395, 1398, 1402, 1403, 1656, 1875, 1886, 1901], "blade": [586, 1875], "tip": [586, 1133, 1134, 1299, 1875], "rew": [586, 995, 997, 1846, 1863, 1864, 1875, 1882, 1886, 1890, 1892, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "in_var": [593, 594], "vairabl": [593, 594], "func": [593, 594, 1002, 1109, 1307, 1308, 1535, 1544, 1554, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1793, 1799, 1800, 1801, 1802, 1807], "in0": [593, 594], "in1": [593, 594], "stsel": [593, 594], "out0": [593, 594], "ou1": [593, 594], "where": [593, 594, 913, 1002, 1010, 1020, 1023, 1038, 1045, 1050, 1066, 1109, 1118, 1131, 1133, 1135, 1136, 1144, 1148, 1149, 1152, 1157, 1158, 1160, 1161, 1262, 1264, 1295, 1298, 1306, 1315, 1317, 1362, 1386, 1388, 1393, 1394, 1401, 1415, 1418, 1668, 1706, 1810, 1814, 1815, 1893, 1895, 1896, 1898, 1904], "inx": [593, 594], "outi": [593, 594], "lookupt": [597, 598, 599, 600, 601, 1875, 1886], "tabl": [597, 598, 630, 1002, 1116, 1131, 1135, 1148, 1149, 1299, 1396, 1397, 1875, 1886, 1897, 1898], "varmap": [597, 598, 1487, 1502, 1503, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "pd_file_read_par": [598, 615, 631, 651, 658], "xr_interp_arg": 598, "powermask": [602, 603, 604, 605, 606, 607, 1875, 1886, 1894, 1897], "derat": [602, 983, 1840, 1879, 1882, 1886, 1897, 1898], "below": [602, 973, 974, 976, 977, 1002, 1019, 1118, 1131, 1133, 1135, 1136, 1148, 1149, 1157, 1178, 1205, 1268, 1270, 1280, 1288, 1290, 1295, 1299, 1300, 1324, 1345, 1398, 1402, 1403, 1886, 1888, 1889], "rate": [602, 1266], "higher": [602, 1270, 1886], "boost": [602, 983, 1840, 1879, 1882, 1886, 1897, 1898], "introduc": [602, 1883, 1886], "so": [602, 1010, 1014, 1045, 1066, 1096, 1118, 1133, 1134, 1157, 1158, 1184, 1258, 1262, 1266, 1268, 1269, 1294, 1299, 1307, 1308, 1325, 1356, 1362, 1371, 1375, 1378, 1382, 1387, 1402, 1403, 1436, 1886, 1896, 1897, 1899, 1900, 1901], "wise": [602, 630, 631, 1668, 1706, 1886, 1899], "var_ws_p": [602, 603, 658, 664, 670, 676], "factor_p": [602, 603, 607], "rews3": [602, 603, 607, 658, 664, 670, 676, 995, 997, 1848, 1863, 1864, 1882, 1890, 1899, 1901], "update_p_ct": [602, 607], "max_p": [602, 607, 1840, 1882, 1897, 1898], "rated_p": [602, 607], "var_w": 607, "p_lim": 607, "rotorcentrecalc": [608, 609, 610, 611, 612, 613, 1875, 1886, 1894], "sectormanag": [614, 615, 616, 617, 618, 1875, 1886, 1898], "range_var": [614, 615, 1898], "target_var": [614, 615, 1898], "col_tind": 615, "col_tnam": [615, 1898], "colmap": [615, 1898], "var_period": 615, "amb_wd": [615, 959, 961, 963, 981, 995, 997, 1827, 1863, 1864, 1882, 1890, 1899, 1900, 1901], "360": [615, 1131, 1135, 1148, 1149], "within": [615, 987, 1002, 1117, 1119, 1146, 1204, 1261, 1279, 1280, 1291, 1306, 1314, 1315, 1341, 1396, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1811, 1876, 1878, 1880, 1886, 1888, 1889, 1893, 1896, 1899], "period": [615, 1307], "setfarmvar": [619, 620, 621, 622, 623, 624, 625, 1875, 1886, 1897, 1904], "add_var": [619, 621, 1612, 1614, 1897, 1904], "setxyhd": [626, 627, 628, 629, 1875, 1890, 1899, 1901], "set_xi": [626, 627], "set_h": [626, 627], "set_d": [626, 627], "tablefactor": [630, 631, 632, 633, 634, 1875, 1886], "multipli": [630, 631, 794, 795, 806, 807, 849, 850, 856, 857, 1875, 1886], "dimension": [630, 1133, 1263, 1295, 1668, 1706, 1875, 1879, 1886], "col_var": [630, 631, 697, 698], "row_var": [630, 631], "onto": [630, 631], "thrust2ct": [635, 636, 637, 638, 1875, 1886, 1894], "thrust": [635, 636, 1819, 1833, 1875, 1882, 1886, 1887, 1890, 1896, 1897, 1904], "thrust_var": [635, 636], "wsct": [635, 657, 663, 669, 675], "var_ws_ct": [635, 636, 658, 664, 670, 676], "rews2": [635, 636, 658, 664, 670, 676, 995, 997, 1847, 1863, 1864, 1882, 1890, 1899, 1901], "yaw2yawm": [639, 640, 641, 1875, 1886, 1894, 1904], "yaw": [639, 642, 658, 664, 670, 676, 739, 813, 820, 995, 997, 1829, 1830, 1859, 1860, 1863, 1864, 1875, 1882, 1885, 1886, 1887, 1890, 1893, 1894, 1899, 1900, 1901], "yawm": [639, 642, 739, 813, 836, 1860, 1863, 1864, 1875, 1882, 1904], "yawm2yaw": [642, 643, 644, 1875, 1886, 1894, 1904], "kti": [645, 646, 647, 648, 649, 1838, 1839, 1875, 1882, 1886, 1894, 1902], "k": [645, 646, 739, 740, 794, 795, 800, 801, 806, 807, 813, 814, 836, 843, 844, 1131, 1135, 1148, 1149, 1157, 1295, 1418, 1837, 1838, 1839, 1875, 1882, 1886, 1890, 1894, 1899, 1901, 1902, 1903], "linear": [645, 864, 865, 868, 869, 872, 873, 876, 877, 880, 1002, 1128, 1144, 1148, 1152, 1261, 1263, 1266, 1277, 1279, 1288, 1289, 1290, 1298, 1306, 1373, 1380, 1386, 1401, 1402, 1403, 1875, 1903], "ti_var": [645, 646, 856, 857], "k_var": [645, 646, 739, 740, 794, 795, 800, 801, 806, 807, 813, 814, 843, 844], "kb": [645, 646, 1838, 1839, 1882, 1886], "ti_val": [645, 646], "cpctfile": [650, 651, 1875, 1886], "pctfile": [650, 651, 657, 658, 659, 660, 661, 662, 1875, 1890, 1891, 1894, 1898, 1899, 1900, 1901, 1902], "cp": [650, 651, 652, 653, 1875, 1886], "col_w": [650, 651, 657, 658, 663], "col_cp": [650, 651, 653], "225": [650, 651, 653, 669, 985, 1889, 1890, 1891, 1892, 1893, 1897, 1898, 1900, 1901, 1902, 1903, 1904], "paramer": 651, "cpctfromtwo": [652, 653, 1875, 1886], "pctfromtwo": [652, 653, 663, 664, 665, 666, 667, 668, 1875], "data_source_cp": [652, 653], "data_source_ct": [652, 653, 663, 664, 669, 670, 675, 676], "col_ws_cp_fil": 653, "pd_file_read_pars_cp": 653, "pd_file_read_pars_ct": [653, 664, 670, 676], "nulltyp": [654, 655, 656, 1875, 1886, 1894], "doe": [654, 1017, 1029, 1055, 1066, 1071, 1104, 1118, 1123, 1133, 1140, 1150, 1151, 1222, 1228, 1289, 1299, 1346, 1388, 1402, 1403, 1404, 1411, 1707, 1717, 1727, 1737, 1875, 1895, 1897, 1899, 1901], "col_p": [657, 658, 663, 664], "col_ct": [657, 658, 663, 664], "densitii": [657, 658, 663, 664, 675, 676], "correct": [657, 658, 663, 664, 675, 676, 708, 794, 795, 800, 895, 1087, 1089, 1152, 1222, 1263, 1266, 1268, 1269, 1298, 1360, 1875, 1886, 1896, 1897, 1900], "wsp": [657, 663, 669, 675], "p_ct": [658, 664, 669, 670, 676], "p_p": [658, 664, 670, 676, 1904], "88": [658, 664, 670, 676, 1890, 1891, 1893, 1901, 1902, 1904], "expon": [658, 664, 670, 676, 701, 1261, 1425, 1850, 1875, 1882, 1886, 1904], "source_p": [663, 669, 675], "source_ct": [663, 669, 675], "rpars_p": [663, 669, 675], "rpars_ct": [663, 669, 675], "data_source_p": [663, 664, 669, 670, 675, 676], "col_ws_p_fil": [663, 664], "col_ws_ct_fil": 664, "pd_file_read_pars_p": [664, 670, 676], "wsrho2pctfromtwo": [669, 670, 671, 672, 673, 674, 1875], "950": [669, 1893], "975": 669, "275": 669, "subsequ": [669, 675, 1890, 1896, 1899], "neccessarili": [669, 675, 1875, 1902], "ipars_p": [669, 675], "ipars_ct": [669, 675], "interpn_pars_p": [670, 676], "interpn_pars_ct": [670, 676], "wsti2pctfromtwo": [675, 676, 677, 678, 679, 680, 1875, 1886], "05": [675, 985, 1010, 1038, 1045, 1066, 1275, 1652, 1653, 1890, 1891, 1893, 1895, 1897, 1898, 1899, 1901, 1903, 1904], "06": [675, 1890, 1891, 1893, 1895, 1899, 1901, 1902], "07": [675, 820, 835, 1890, 1891, 1892, 1894, 1899, 1901], "vertical_profil": [681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707], "abllogneutralwsprofil": [681, 682, 683, 684, 1875], "log": [681, 685, 689, 693, 1002, 1045, 1066, 1075, 1082, 1097, 1134, 1261, 1262, 1263, 1266, 1278, 1288, 1289, 1290, 1306, 1309, 1310, 1373, 1375, 1380, 1382, 1402, 1403, 1423, 1427, 1428, 1432, 1875, 1881], "ustar_input": [681, 682, 685, 686, 689, 690, 693, 694], "ustar": [681, 682, 685, 686, 689, 690, 693, 694, 1422, 1424, 1426, 1430, 1431, 1434, 1881, 1886], "abllogstablewsprofil": [685, 686, 687, 688, 1875, 1890], "stabl": [685, 693, 1426, 1427, 1428, 1429, 1430, 1875, 1880, 1888, 1890], "abllogunstablewsprofil": [689, 690, 691, 692, 1875], "unstabl": [689, 693, 1431, 1432, 1433, 1434, 1875, 1880], "abllogwsprofil": [693, 694, 695, 696, 1875, 1891], "pick": [693, 1002, 1146, 1203, 1292, 1293, 1341, 1406, 1407, 1890], "dataprofil": [697, 698, 699, 700, 1875, 1886], "data_z": 697, "n_z": 697, "data_v": 697, "interp_par": [697, 698], "col_z": [697, 698], "read_csv": 698, "shearedprofil": [701, 702, 703, 1875, 1886], "shear": [701, 1425, 1850, 1875, 1880, 1882, 1886], "uniformprofil": [704, 705, 706, 707, 1875], "farmord": [708, 709, 710, 711, 712, 713, 1875, 1894], "warn": [708, 1003, 1005, 1075, 1082, 1084, 1097, 1288, 1290, 1295, 1299, 1346, 1438], "test": [708, 1002, 1146, 1341, 1439, 1445, 1446, 1448, 1455, 1456, 1462, 1463, 1469, 1470, 1477, 1478, 1485, 1886, 1891], "purpos": [708, 1290, 1891, 1893, 1900], "give": [708, 1117, 1133, 1136, 1144, 1152, 1157, 1173, 1262, 1279, 1291, 1295, 1298, 1299, 1300, 1386, 1402, 1403, 1886, 1889, 1902], "when": [708, 1002, 1010, 1017, 1019, 1023, 1045, 1050, 1057, 1066, 1082, 1087, 1089, 1104, 1108, 1117, 1118, 1119, 1123, 1132, 1133, 1134, 1136, 1144, 1152, 1153, 1156, 1157, 1184, 1199, 1261, 1262, 1263, 1266, 1277, 1279, 1280, 1284, 1287, 1288, 1289, 1290, 1291, 1294, 1295, 1298, 1306, 1315, 1319, 1320, 1327, 1337, 1384, 1385, 1386, 1389, 1391, 1394, 1395, 1402, 1403, 1411, 1886, 1890, 1891, 1892, 1893, 1897, 1899, 1902], "base_fram": [708, 709, 739, 740], "rotorwd1": [708, 709], "rotorwd": [708, 709, 714, 715, 716, 717, 718, 739, 740, 1875, 1890, 1894], "align": [714, 1002, 1131, 1132, 1134, 1135, 1148, 1149, 1230, 1231, 1244, 1245, 1261, 1262, 1356, 1396, 1406, 1407, 1875], "axi": [714, 912, 940, 941, 942, 943, 944, 945, 962, 963, 973, 974, 976, 977, 978, 980, 985, 986, 1002, 1010, 1016, 1038, 1066, 1067, 1075, 1079, 1083, 1085, 1087, 1095, 1097, 1101, 1122, 1123, 1125, 1126, 1127, 1129, 1130, 1132, 1134, 1157, 1174, 1178, 1222, 1228, 1230, 1231, 1232, 1233, 1236, 1242, 1244, 1245, 1246, 1247, 1250, 1256, 1258, 1260, 1261, 1262, 1263, 1266, 1269, 1271, 1272, 1277, 1278, 1280, 1294, 1296, 1299, 1300, 1301, 1307, 1308, 1309, 1310, 1318, 1322, 1323, 1324, 1347, 1349, 1361, 1362, 1369, 1370, 1371, 1373, 1375, 1376, 1377, 1378, 1380, 1382, 1384, 1385, 1386, 1389, 1398, 1400, 1401, 1402, 1403, 1406, 1407, 1416, 1417, 1419, 1420, 1440, 1450, 1458, 1465, 1472, 1480, 1519, 1530, 1540, 1668, 1706, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1813, 1814, 1815, 1816, 1875, 1879, 1880, 1900, 1904], "var_wd": [714, 715], "seqdynamicwak": [719, 720, 721, 722, 723, 724, 725, 1894, 1899], "cl_ipar": [719, 720, 726, 727, 733, 734], "line": [719, 720, 726, 727, 733, 734, 761, 763, 794, 797, 800, 803, 843, 846, 940, 941, 942, 986, 1002, 1041, 1063, 1107, 1114, 1117, 1125, 1127, 1128, 1129, 1133, 1134, 1136, 1138, 1142, 1148, 1149, 1152, 1157, 1158, 1178, 1198, 1215, 1234, 1241, 1248, 1255, 1258, 1262, 1264, 1268, 1269, 1275, 1276, 1279, 1288, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1311, 1322, 1323, 1324, 1341, 1347, 1355, 1356, 1361, 1386, 1389, 1392, 1393, 1395, 1396, 1400, 1402, 1403, 1405, 1413, 1414, 1415, 1418, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1886, 1888, 1889, 1890, 1900], "dt_min": [719, 720, 733, 734, 1901], "minut": [719, 720, 733, 734, 1891, 1895, 1901], "streamlines2d": [726, 727, 728, 729, 730, 731, 732, 1875, 1886, 1894], "streamlin": [726, 727, 731, 856, 1002, 1395, 1875, 1883, 1886, 1892, 1896], "max_length": [726, 727], "get_streamline_data": [726, 731], "n_step": 731, "timelin": [733, 734, 735, 736, 737, 738, 1875, 1886, 1894, 1901], "spatial": [733, 1510, 1668, 1706, 1875, 1876, 1885, 1886, 1891, 1899], "max_wake_length": [733, 734], "20000": [733, 734], "yawedwak": [739, 740, 741, 742, 743, 744, 745, 1875, 1886, 1894], "bend": [739, 1875, 1886, 1904], "bastankhah": [739, 806, 813, 820, 1875, 1883, 1886, 1904], "2016": [739, 813, 820, 1875, 1883, 1886], "refer": [739, 774, 781, 787, 793, 794, 800, 806, 813, 820, 849, 1122, 1126, 1130, 1136, 1157, 1277, 1393, 1424, 1425, 1430, 1434, 1668, 1706, 1881, 1886, 1889, 1891, 1904], "experiment": [739, 813, 820, 1268, 1269, 1270, 1289, 1307, 1308], "theoret": [739, 813, 820], "studi": [739, 813, 820, 1887], "majid": [739, 806, 813, 820], "fernando": [739, 806, 813, 820], "port\u00e9": [739, 806, 813, 820], "agel": [739, 806, 813, 820, 1904], "http": [739, 774, 781, 787, 793, 794, 800, 806, 813, 820, 849, 856, 895, 1133, 1136, 1388, 1436, 1811, 1884, 1886, 1887, 1888, 1902, 1905], "doi": [739, 787, 793, 794, 806, 813, 820, 1887], "org": [739, 794, 806, 813, 820, 849, 856, 895, 1133, 1136, 1438, 1884], "1017": [739, 813, 820], "jfm": [739, 813, 820], "595": [739, 813, 820], "bastankhah2016model": [739, 740, 813, 814, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 1883], "model_par": [739, 813], "growth": [739, 740, 794, 795, 800, 801, 806, 807, 813, 814, 843, 844, 849, 850, 856, 857, 1837, 1882, 1886, 1903], "misalign": [739, 813, 1904], "axisymmetricwakemodel": [746, 747, 748, 756, 761, 1883], "distslicedwakemodel": [746, 749, 750, 751, 752, 753, 754, 755, 813, 1883], "r": [746, 747, 756, 757, 758, 761, 764, 765, 781, 787, 793, 794, 798, 800, 804, 806, 809, 843, 847, 849, 852, 856, 859, 1002, 1010, 1066, 1075, 1118, 1125, 1128, 1129, 1136, 1159, 1163, 1258, 1266, 1295, 1400, 1883, 1889, 1899], "separ": [746, 749, 1010, 1021, 1032, 1045, 1066, 1118, 1134, 1157, 1164, 1295, 1401, 1883, 1886, 1896], "abil": [746, 749], "calc_wakes_spsel_x_r": [746, 747, 756, 758, 761, 765, 794, 800, 806, 843, 849, 856], "calc_wakes_spsel_x_yz": [746, 748, 749, 751, 756, 761, 794, 800, 806, 813, 816, 843, 849, 856], "n_r_per_x": [747, 758, 764, 765, 798, 804, 847], "n_sp_sel": [747, 748, 751, 757, 758, 763, 765, 797, 803, 809, 816, 846, 852, 859], "sp_sel": [747, 748, 751, 757, 758, 763, 765, 797, 803, 809, 816, 820, 833, 846, 852, 859], "non": [747, 748, 751, 757, 758, 763, 765, 797, 803, 809, 816, 846, 852, 859, 986, 1002, 1010, 1037, 1040, 1043, 1045, 1061, 1062, 1065, 1066, 1073, 1074, 1128, 1136, 1138, 1225, 1266, 1278, 1288, 1289, 1290, 1306, 1309, 1310, 1375, 1382, 1387, 1582, 1623, 1656, 1668, 1706, 1758, 1771, 1789, 1810, 1880, 1886, 1887, 1888], "yz": [748, 749, 751, 816, 939, 942, 945, 965, 966, 970, 974, 977, 1883, 1886], "n_yz_per_x": [748, 751, 816], "denpend": [749, 1883], "superp": 749, "gaussianwakemodel": [756, 757, 758, 806, 849, 856, 1883], "gaussian": [756, 849, 1136, 1266, 1414, 1883], "calc_amplitude_sigma_spsel": [756, 757, 806, 809, 849, 852, 856, 859], "amplitud": [756, 757, 806, 809, 849, 852, 856, 859, 1215, 1279, 1355, 1386], "sigma": [756, 757, 806, 809, 849, 852, 856, 859, 1886], "amsi": [757, 809, 852, 859], "groundmirror": [759, 760, 1883], "wakemirror": [759, 760, 768, 769, 770, 771, 772, 773, 1883, 1886], "reflect": [759, 768, 769, 1117, 1144, 1152, 1279, 1291, 1298, 1386, 1883, 1886, 1890, 1896, 1899, 1901, 1904], "tophatwakemodel": [761, 762, 763, 764, 765, 766, 767, 794, 800, 843, 1883], "betz": [761, 762, 1886, 1894], "calc_wake_radiu": [761, 764, 794, 798, 800, 804, 843, 847], "calc_centreline_wake_delta": [761, 763, 794, 797, 800, 803, 843, 846], "wake_r": [763, 764, 797, 798, 803, 804, 846, 847], "cl_del": [763, 797, 803, 846], "varlu": [763, 797, 803, 846], "rankinehalfbodi": [774, 775, 776, 777, 778, 779, 780, 1883, 1886, 1890, 1894], "rankin": [774, 1883, 1886, 1889, 1890], "half": [774, 961, 963, 1120, 1125, 1129, 1133, 1160, 1161, 1262, 1299, 1393, 1395, 1413, 1414, 1470, 1880, 1883, 1886, 1889, 1890], "bodi": [774, 1136, 1138, 1413, 1414, 1883, 1886, 1889, 1890], "superpos": [774, 781, 787, 793], "b": [774, 1002, 1014, 1019, 1045, 1059, 1107, 1136, 1159, 1266, 1295, 1316, 1318, 1319, 1320, 1324, 1327, 1332, 1338, 1339, 1368, 1418, 1668, 1706, 1887, 1889], "gribben": [774, 1889], "hawk": [774, 1889], "potenti": [774, 1262, 1889], "flow": [774, 939, 940, 941, 942, 943, 944, 945, 965, 970, 972, 973, 974, 975, 976, 977, 986, 1002, 1395, 1879, 1885, 1886, 1887, 1889, 1890, 1895, 1896, 1899, 1900, 1901], "blockag": [774, 781, 787, 793, 1883, 1885, 1886, 1887], "techinc": 774, "paper": [774, 1887], "frazer": 774, "nash": 774, "consult": 774, "2019": [774, 800, 801, 1889], "www": [774, 781, 787, 793, 1438], "fnc": 774, "co": [774, 1066, 1904], "uk": 774, "media": 774, "o5eosxa": 774, "pdf": [774, 800, 849, 856, 895, 1266, 1289, 1403], "madsen": [774, 775, 781, 782, 787, 788, 793, 807, 820, 835, 850, 857, 1886, 1890, 1894, 1899, 1901], "rathmann": [781, 782, 783, 784, 785, 786, 1883, 1886, 1889, 1894], "forst": [781, 787, 793, 1883, 1889], "alexand": [781, 787, 793, 1889], "meyer": [781, 787, 793, 1883, 1889], "et": [781, 787, 793, 1889], "al": [781, 787, 793, 1889], "On": [781, 787, 793, 1266, 1899], "accuraci": [781, 787, 793], "predict": [781, 787, 793], "renew": [781, 787, 793], "energi": [781, 787, 793, 1887, 1895, 1896], "2023": [781, 787, 793, 1884, 1891, 1901], "sciencedirect": [781, 787, 793], "com": [781, 787, 793, 1388, 1436, 1438, 1811, 1886, 1887, 1888, 1905], "scienc": [781, 787, 793], "articl": [781, 787, 793, 849, 856, 1884], "pii": [781, 787, 793], "s0960148123007620": [781, 787, 793], "pre_rotor_onli": [781, 782, 787, 788, 793], "region": [781, 782, 787, 788, 814, 820, 835, 1002, 1159, 1160, 1161, 1402, 1403, 1886, 1889, 1890], "selfsimilar": [787, 788, 789, 790, 791, 792, 793, 1883, 1886, 1889, 1894], "similar": [787, 793, 1127, 1160, 1161, 1263, 1288, 1289, 1290, 1296, 1386, 1883, 1889, 1892], "troldborg": [787, 793, 1883, 1889], "niel": [787, 793, 1889], "raul": [787, 793, 1889], "zone": [787, 793, 1296, 1792, 1809, 1890], "20": [787, 793, 1157, 1279, 1386, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1901, 1902, 1903], "12": [787, 793, 1157, 1295, 1398, 1890, 1891, 1893, 1897, 1898, 1899, 1900, 1901, 1903, 1904], "2017": [787, 793, 1889, 1891, 1902], "2011": [787, 793], "2020": [787, 793, 1883, 1889], "onlinelibrari": [787, 793], "wilei": [787, 793, 1144, 1152, 1298], "full": [787, 793, 1087, 1090, 1107, 1117, 1120, 1125, 1128, 1129, 1133, 1136, 1138, 1144, 1152, 1157, 1258, 1266, 1279, 1291, 1294, 1295, 1296, 1298, 1362, 1387, 1393, 1418, 1438, 1487, 1488, 1886, 1891, 1895], "1002": [787, 793], "we": [787, 793, 794, 1019, 1307, 1308, 1312, 1668, 1706, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "2137": [787, 793], "selfsimilar2020": [793, 1883, 1886, 1889, 1890, 1894], "crespohernandeztiwak": [794, 795, 796, 797, 798, 799, 1883, 1886, 1894], "crespo": [794, 1883], "hernandez": [794, 1883], "empir": [794, 1883], "correl": [794, 1002, 1107, 1418, 1668, 1706, 1883], "characterist": 794, "j": [794, 806, 849, 1136, 1288, 1290, 1668, 1706], "1016": [794, 806], "0167": 794, "6105": 794, "95": [794, 1136, 1891, 1893, 1903], "00033": 794, "eqn": 794, "17": [794, 1891, 1893, 1897, 1901, 1903], "15": [794, 1136, 1138, 1157, 1270, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1902, 1903], "1088": [794, 849, 856], "1742": [794, 849, 856], "6596": [794, 849, 856], "625": 794, "012039": 794, "a_near": [794, 795], "a_far": [794, 795], "e1": [794, 795], "e2": [794, 795], "e3": [794, 795], "use_ambti": [794, 795], "sbeta_factor": [794, 795, 806, 807, 849, 850, 856, 857, 1886, 1893], "sbeta": [794, 795, 806, 807, 849, 850, 856, 857, 1886], "near_wake_d": [794, 795], "362": 795, "73": [795, 1890, 1893], "83": [795, 1668, 1706, 1893, 1902], "0325": 795, "32": [795, 1890, 1893], "iectiwak": [800, 801, 802, 803, 804, 805, 1883, 1894], "iec": [800, 1883], "64100": [800, 1883], "2005": [800, 1883], "8": [800, 850, 895, 910, 912, 917, 963, 1002, 1134, 1270, 1295, 1372, 1379, 1438, 1883, 1884, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "orbit": 800, "dtu": [800, 1890, 1899, 1901], "dk": 800, "3750291": 800, "2009_31": 800, "v2": 800, "volluk": 800, "implement": [800, 1017, 1104, 1164, 1184, 1290, 1312, 1889, 1893, 1896], "document": [800, 1002, 1103, 1136, 1142, 1263, 1266, 1370, 1377, 1668, 1706, 1876, 1886], "frandsen": [800, 849, 850, 1886], "opening_angl": [800, 801], "open": [800, 801, 1131, 1262, 1396, 1438, 1884, 1886], "angl": [800, 801, 836, 1002, 1010, 1038, 1045, 1066, 1117, 1134, 1268, 1279, 1291, 1294, 1299, 1300, 1344, 1347, 1361, 1362, 1386, 1776, 1777, 1829, 1830, 1859, 1860, 1882, 1892, 1904], "21": [800, 801, 1890, 1891, 1893, 1897, 1902], "6": [800, 801, 1131, 1135, 1148, 1149, 1157, 1207, 1294, 1295, 1392, 1400, 1668, 1706, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "iec_typ": [800, 801], "bastankhah2014": [806, 807, 808, 809, 810, 811, 812, 1883, 1886, 1890, 1893, 1894, 1899, 1901], "2014": [806, 1883], "analyt": [806, 1487, 1490, 1508, 1510, 1517, 1528, 1544, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "renen": 806, "01": [806, 1810, 1880, 1890, 1891, 1893, 1894, 1895, 1899, 1901, 1902], "002": 806, "bastankhah2016": [813, 814, 815, 816, 817, 818, 819, 1883, 1886, 1890, 1894], "ct_max": 814, "beyond": [814, 1136, 1138], "9999": 814, "alpha": [814, 820, 835, 1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1170, 1258, 1261, 1263, 1266, 1268, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1311, 1314, 1387, 1395, 1396, 1398, 1402, 1403, 1404, 1844, 1882, 1890, 1893, 1899], "determin": [814, 820, 835, 933, 1003, 1005, 1107, 1118, 1136, 1160, 1161, 1258, 1259, 1261, 1266, 1295, 1299, 1306, 1341, 1342, 1365, 1387, 1398, 1402, 1403, 1418, 1886, 1896], "onset": [814, 820, 835], "far": [814, 820, 835, 1125, 1886], "beta": [814, 820, 835, 1845, 1882, 1886], "repetit": [820, 1883], "avoid": [820, 1019, 1075, 1081, 1097, 1100, 1157, 1312, 1365, 1668, 1706, 1883, 1890, 1904], "mdata_kei": [820, 826], "x0": [820, 834, 1262, 1268, 1270, 1402, 1403, 1810, 1880], "NEAR": [820, 827], "r_pc": [820, 829], "r_pc_": [820, 830], "ampl_near": [820, 822], "delta_near": [820, 825], "ampl_far": [820, 821], "sigma_y_far": [820, 831], "sigma_z_far": [820, 832], "delta_far": [820, 824], "58": [820, 835, 1891, 1893, 1897], "calc_data": [820, 836], "has_data": [820, 839, 1002, 1259], "clean": [820, 837], "gamma": [836, 1263, 1904], "radiant": [836, 1904], "jensenwak": [843, 844, 845, 846, 847, 848, 1883, 1894], "jensen": [843, 1668, 1706, 1883, 1894], "turboparkwak": [849, 850, 851, 852, 853, 854, 855, 1883, 1886, 1894], "turbopark": [849, 856, 1883, 1886], "optim": [849, 1488, 1495, 1509, 1511, 1517, 1518, 1529, 1535, 1537, 1541, 1552, 1575, 1576, 1579, 1581, 1582, 1583, 1584, 1594, 1597, 1602, 1603, 1605, 1610, 1611, 1612, 1622, 1623, 1627, 1632, 1637, 1642, 1652, 1658, 1664, 1668, 1670, 1677, 1683, 1689, 1695, 1701, 1704, 1706, 1707, 1717, 1727, 1737, 1751, 1752, 1757, 1758, 1760, 1762, 1770, 1771, 1772, 1773, 1776, 1783, 1788, 1789, 1865, 1871, 1876, 1877, 1878, 1884, 1885, 1886, 1887], "park": 849, "pedersen": 849, "svensson": 849, "l": [849, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1197, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "poulsen": 849, "nygaard": 849, "iopscienc": [849, 856], "iop": [849, 856], "2265": [849, 856], "022063": [849, 856], "c1": [849, 850, 1682, 1683], "c2": [849, 850, 1392, 1682, 1683], "turboparkwakeix": [856, 857, 858, 859, 860, 861, 862, 863, 1883, 1894], "over": [856, 919, 924, 925, 954, 961, 963, 1002, 1132, 1134, 1137, 1144, 1152, 1157, 1199, 1262, 1284, 1292, 1298, 1312, 1337, 1341, 1343, 1386, 1396, 1402, 1403, 1404, 1436, 1668, 1706, 1836, 1882, 1883, 1886, 1893, 1899, 1903], "own": [856, 857, 1263, 1900], "tilinear": [864, 865, 866, 867, 1875, 1894], "superp_to_amb": [864, 865, 868, 869, 872, 873, 876, 877], "quadrat": [864, 865, 868, 869, 872, 873, 876, 877, 900, 1875], "timax": [868, 869, 870, 871, 1875, 1894], "tipow": [872, 873, 874, 875, 1875, 1894], "tiquadrat": [876, 877, 878, 879, 1875, 1886, 1894], "wslinear": [880, 881, 882, 883, 884, 1875, 1886, 1894], "supersposit": [880, 885, 890, 895, 900, 1875], "deficit": [880, 881, 885, 886, 890, 891, 895, 900, 901, 1875, 1883, 1886, 1889, 1890, 1893, 1896, 1902, 1903, 1904], "scale_amb": [880, 881, 885, 886, 890, 891, 900, 901], "scale": [880, 881, 885, 886, 890, 891, 900, 901, 1002, 1045, 1048, 1066, 1075, 1086, 1097, 1102, 1117, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1173, 1215, 1239, 1253, 1258, 1261, 1262, 1263, 1266, 1268, 1278, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1309, 1310, 1311, 1317, 1355, 1373, 1380, 1386, 1387, 1395, 1396, 1398, 1402, 1403, 1593, 1594, 1603, 1611, 1682, 1683, 1889, 1890, 1892, 1899, 1901], "lim_low": [880, 881, 885, 886, 890, 891, 895, 896, 900, 901], "lim_high": [880, 881, 885, 886, 890, 891, 895, 896, 900, 901], "input_farm_var": [880, 884, 885, 889, 890, 894, 895, 899, 900, 904], "wsmax": [885, 886, 887, 888, 889, 1875, 1894], "wspow": [890, 891, 892, 893, 894, 1875, 1894], "wsproduct": [895, 896, 897, 898, 899, 1875, 1894], "product": [895, 1152, 1668, 1706, 1875], "dimensionless": 895, "rescal": 895, "rather": [895, 1019, 1158, 1262, 1299], "equival": [895, 1037, 1040, 1042, 1043, 1061, 1062, 1064, 1065, 1073, 1074, 1152, 1197, 1261, 1270, 1295, 1371, 1378, 1384, 1385, 1896, 1902, 1904], "arxiv": 895, "2010": 895, "03873": 895, "equat": [895, 1886], "wsquadrat": [900, 901, 902, 903, 904, 1875, 1894], "anim": [905, 906, 907, 908, 909, 919, 934, 940, 941, 942, 943, 944, 945, 965, 986, 1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1172, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1316, 1387, 1396, 1398, 1879, 1886, 1899, 1901], "yield": [905, 907, 909, 919, 926, 933, 1262, 1295, 1355, 1831, 1861, 1879, 1882, 1884, 1886, 1887, 1895, 1896, 1902, 1903], "artist": [905, 907, 909, 934, 1002, 1003, 1005, 1107, 1108, 1109, 1117, 1118, 1121, 1123, 1124, 1125, 1128, 1129, 1136, 1138, 1144, 1146, 1150, 1151, 1152, 1154, 1155, 1157, 1162, 1164, 1172, 1178, 1180, 1182, 1184, 1186, 1189, 1194, 1195, 1199, 1203, 1205, 1206, 1215, 1222, 1224, 1257, 1258, 1259, 1262, 1266, 1269, 1273, 1279, 1280, 1284, 1291, 1292, 1293, 1295, 1296, 1297, 1298, 1302, 1303, 1316, 1324, 1326, 1327, 1328, 1331, 1333, 1334, 1337, 1341, 1343, 1345, 1346, 1366, 1367, 1368, 1383, 1387, 1388, 1390, 1394, 1395, 1406, 1407, 1408, 1411, 1418, 1879, 1886], "fig": [905, 906, 907, 909, 912, 919, 934, 940, 941, 942, 943, 944, 945, 963, 986, 1002, 1167, 1194, 1222, 1270, 1331, 1334, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "pyplot": [905, 906, 908, 912, 963, 980, 985, 1148, 1149, 1266, 1275, 1289, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1519, 1530, 1540, 1711, 1721, 1731, 1741, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "figur": [905, 906, 910, 912, 934, 939, 940, 941, 942, 943, 944, 945, 959, 963, 981, 986, 1002, 1117, 1118, 1119, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1167, 1179, 1189, 1194, 1204, 1207, 1222, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1303, 1311, 1316, 1325, 1331, 1334, 1342, 1347, 1361, 1374, 1381, 1387, 1396, 1398, 1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480, 1487, 1508, 1510, 1517, 1519, 1528, 1530, 1535, 1540, 1579, 1593, 1602, 1604, 1610, 1612, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1751, 1760, 1776, 1886, 1889, 1890, 1893, 1895, 1900, 1902], "add_gener": [905, 907, 1899, 1901], "gen": [905, 907, 909], "verbostii": 908, "artistanim": 908, "farmlayoutoutput": [910, 911, 912, 913, 914, 915, 916, 917, 918, 1879, 1886, 1890, 1891, 1893, 1895, 1898, 1899, 1902, 1903], "plot": [910, 912, 915, 916, 917, 918, 939, 940, 941, 942, 943, 944, 945, 959, 963, 964, 965, 966, 978, 980, 981, 983, 985, 986, 1002, 1107, 1117, 1118, 1125, 1127, 1128, 1129, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1184, 1185, 1261, 1262, 1263, 1264, 1266, 1268, 1270, 1277, 1278, 1279, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1343, 1347, 1361, 1371, 1378, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1402, 1404, 1405, 1411, 1413, 1414, 1415, 1418, 1440, 1450, 1458, 1465, 1472, 1480, 1711, 1721, 1731, 1741, 1879, 1886, 1889, 1890, 1892, 1893, 1897, 1898, 1900, 1902, 1903, 1904], "layout": [910, 912, 913, 914, 915, 916, 917, 918, 1002, 1194, 1334, 1388, 1487, 1508, 1510, 1517, 1519, 1528, 1530, 1535, 1540, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1871, 1876, 1879, 1885, 1886, 1887, 1899, 1901, 1902], "from_r": [910, 911], "results_st": [910, 911], "from_result": [910, 911], "get_layout_data": [910, 913], "get_layout_dict": [910, 914], "get_figur": [910, 912, 917, 959, 963, 964, 981, 1002, 1189, 1890, 1891, 1893, 1895, 1898, 1899, 1902, 1903], "color_bi": [910, 912, 1895, 1902, 1903], "fontsiz": [910, 912, 917, 1365, 1374, 1381, 1396, 1398], "figsiz": [910, 912, 919, 934, 940, 941, 942, 943, 944, 945, 963, 978, 980, 985, 986, 1002, 1167, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1900, 1901, 1902, 1903], "annot": [910, 912, 1002, 1118, 1120, 1132, 1895, 1899, 1902, 1903], "write_plot": [910, 917], "write": [910, 915, 916, 917, 918, 919, 939, 946, 951, 952, 955, 957, 958, 959, 964, 970, 972, 973, 974, 975, 976, 977, 978, 981, 983, 995, 1001, 1808, 1817, 1879, 1880, 1886], "write_xyh": [910, 918], "write_csv": [910, 915, 955, 957], "write_json": [910, 916], "get_fpath": [910, 919, 939, 946, 948, 952, 955, 959, 970, 978, 981, 983], "fname": [910, 919, 939, 946, 947, 948, 952, 955, 959, 970, 978, 981, 983, 1002, 1194, 1334, 1791, 1792, 1880], "format_col2var": [910, 919, 939, 946, 951, 952, 955, 959, 970, 978, 981, 983], "format_dict": [910, 919, 939, 946, 951, 952, 955, 959, 970, 978, 981, 983, 995, 1001], "print_model": [910, 919, 939, 946, 950, 952, 955, 959, 970, 978, 981, 983, 1487, 1508, 1510, 1517, 1525, 1528, 1533, 1593, 1602, 1604, 1610], "titl": [912, 940, 941, 942, 943, 944, 945, 962, 963, 978, 980, 983, 985, 986, 1002, 1222, 1223, 1311, 1365, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1884, 1886, 1889, 1890, 1891, 1895, 1897, 1898, 1899, 1901, 1902, 1903], "ax": [912, 919, 934, 940, 941, 942, 943, 944, 945, 978, 980, 985, 986, 1002, 1003, 1005, 1021, 1045, 1066, 1075, 1078, 1081, 1087, 1089, 1100, 1103, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1118, 1119, 1120, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1134, 1135, 1139, 1140, 1141, 1143, 1147, 1148, 1149, 1150, 1151, 1157, 1159, 1167, 1168, 1171, 1173, 1179, 1187, 1190, 1193, 1197, 1198, 1200, 1204, 1207, 1213, 1214, 1222, 1223, 1228, 1229, 1236, 1243, 1250, 1259, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1275, 1277, 1278, 1280, 1281, 1282, 1283, 1288, 1289, 1290, 1294, 1295, 1296, 1299, 1300, 1301, 1303, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1325, 1326, 1327, 1329, 1332, 1338, 1342, 1343, 1349, 1365, 1370, 1374, 1375, 1377, 1381, 1382, 1384, 1385, 1386, 1387, 1388, 1393, 1395, 1396, 1398, 1400, 1401, 1404, 1405, 1406, 1407, 1409, 1415, 1418, 1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480, 1487, 1508, 1510, 1517, 1519, 1528, 1530, 1535, 1540, 1579, 1593, 1602, 1604, 1610, 1612, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1751, 1760, 1776, 1880, 1889, 1890, 1891, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903], "normalize_d": 912, "ret_im": [912, 934, 940, 941, 942, 943, 944, 945, 986, 1899, 1901], "barg": [912, 1711, 1721, 1731, 1741], "anno_delx": [912, 1899], "anno_d": [912, 1899], "scatter": [912, 934, 1002, 1295, 1306, 1886], "color": [912, 940, 941, 942, 943, 944, 945, 986, 1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1160, 1161, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1279, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1311, 1329, 1330, 1343, 1365, 1387, 1388, 1392, 1393, 1395, 1396, 1398, 1400, 1402, 1403, 1404, 1415, 1440, 1450, 1458, 1465, 1472, 1480, 1886, 1902], "mean_rew": [912, 1895, 1902, 1903], "etc": [912, 1002, 1117, 1128, 1131, 1135, 1144, 1148, 1149, 1152, 1222, 1261, 1263, 1266, 1279, 1288, 1289, 1290, 1291, 1298, 1299, 1301, 1306, 1315, 1317, 1386, 1395, 1402, 1403, 1886, 1893, 1895], "wrt": [912, 919, 928, 929, 930, 931, 932, 1439, 1444, 1446, 1448, 1454, 1456, 1461, 1463, 1468, 1470, 1476, 1478, 1484, 1544, 1554], "plt": [912, 934, 940, 941, 942, 943, 944, 945, 980, 985, 986, 1262, 1270, 1295, 1438, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "No": [912, 1134, 1157, 1261, 1288, 1290, 1306, 1890], "matplotlib": [912, 934, 940, 941, 942, 943, 944, 945, 963, 986, 1002, 1003, 1005, 1010, 1016, 1039, 1045, 1048, 1066, 1067, 1075, 1082, 1087, 1097, 1107, 1117, 1118, 1119, 1123, 1125, 1126, 1127, 1129, 1130, 1131, 1133, 1135, 1136, 1138, 1144, 1146, 1148, 1149, 1152, 1157, 1159, 1164, 1168, 1171, 1179, 1184, 1222, 1228, 1230, 1231, 1232, 1240, 1244, 1245, 1246, 1254, 1258, 1261, 1262, 1263, 1264, 1266, 1270, 1275, 1279, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1311, 1312, 1315, 1316, 1317, 1325, 1328, 1342, 1343, 1347, 1361, 1365, 1370, 1373, 1377, 1380, 1386, 1387, 1389, 1395, 1396, 1398, 1402, 1403, 1405, 1406, 1407, 1414, 1415, 1418, 1438, 1440, 1450, 1458, 1463, 1465, 1472, 1480, 1519, 1530, 1540, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "im": [912, 934, 940, 941, 942, 943, 944, 945, 986, 1386], "pathcollect": [912, 934, 1306], "farmresultsev": [919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 1879, 1886, 1895, 1897, 1901, 1902, 1903], "farm_calc": 919, "weinsum": [919, 938], "rh": [919, 938], "einstein": [919, 938, 1886], "reduce_st": [919, 936, 1902], "vars_op": [919, 936, 937], "some": [919, 935, 936, 937, 1002, 1019, 1041, 1063, 1081, 1087, 1089, 1096, 1100, 1127, 1160, 1161, 1266, 1289, 1299, 1341, 1375, 1382, 1393, 1435, 1668, 1706, 1880, 1890, 1893, 1896, 1897, 1899, 1904], "reduce_turbin": [919, 937], "reduce_al": [919, 935], "states_op": [919, 935], "turbines_op": [919, 935], "calc_states_mean": [919, 928], "calc_states_sum": [919, 930], "calc_states_std": [919, 929], "deviat": [919, 929, 1295], "calc_turbine_mean": [919, 931], "calc_turbine_sum": [919, 932], "calc_farm_mean": [919, 924], "calc_farm_sum": [919, 925], "calc_mean_farm_pow": [919, 927, 1895, 1897, 1902, 1903], "calc_turbine_yield": [919, 926, 933, 1902], "annual": [919, 933, 1895, 1902, 1903], "add_capac": [919, 921, 1902], "p_nom": [919, 921], "capac": [919, 921, 1818, 1832, 1882, 1886, 1902], "calc_farm_yield": [919, 926, 1895, 1903], "turbine_yield": [919, 926], "power_uncert": [919, 926], "p75": [919, 926, 1886], "p90": [919, 926, 1886], "add_effici": [919, 922, 1902, 1903], "effici": [919, 922, 923, 1002, 1144, 1152, 1155, 1298, 1301, 1328, 1386, 1668, 1706, 1835, 1882, 1886, 1895, 1897, 1902, 1903], "calc_farm_effici": [919, 923, 1895, 1902, 1903], "gen_stdata": [919, 934, 1901], "eff": [923, 995, 997, 1835, 1882, 1902], "fulli": [924, 925, 935, 1066, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1887], "contract": [924, 925, 935, 1593, 1594, 1603, 1611], "uncertainti": 926, "trigger": [926, 1010, 1028, 1045, 1066, 1287, 1438], "farm_yield": 926, "_type_": 929, "_description_": 929, "hour": 933, "delta_t": 933, "p_unit_w": 933, "retur": 933, "durat": 933, "datetime64": [933, 1296, 1899, 1901], "seri": [933, 1002, 1157, 1388, 1880, 1886, 1896, 1899, 1902], "gwh": [933, 1831, 1861, 1882, 1895, 1902, 1903], "legloc": [934, 1901], "right": [934, 938, 1002, 1045, 1117, 1118, 1120, 1125, 1128, 1129, 1133, 1144, 1152, 1157, 1160, 1161, 1223, 1230, 1231, 1236, 1244, 1245, 1258, 1262, 1266, 1269, 1274, 1275, 1279, 1291, 1295, 1296, 1298, 1299, 1300, 1307, 1308, 1315, 1317, 1365, 1370, 1371, 1386, 1387, 1393, 1396, 1398, 1400, 1406, 1417, 1420, 1438, 1889], "legend": [934, 962, 963, 1002, 1195, 1196, 1197, 1262, 1270, 1275, 1294, 1295, 1303, 1311, 1335, 1392, 1889, 1890], "It": [938, 1007, 1017, 1019, 1029, 1055, 1071, 1104, 1107, 1109, 1117, 1118, 1122, 1128, 1144, 1152, 1261, 1263, 1266, 1279, 1288, 1289, 1290, 1291, 1295, 1298, 1306, 1369, 1376, 1386, 1388, 1393, 1402, 1403, 1404, 1418, 1887, 1888, 1892, 1895, 1897, 1898], "about": [938, 1133, 1138, 1299, 1306, 1413, 1414, 1438, 1893, 1897], "hand": [938, 1019, 1886], "einsum": [938, 1535, 1571, 1572, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "express": [938, 1656], "convent": [938, 1266, 1288, 1290, 1387, 1436, 1668, 1706], "mention": [938, 1373, 1380, 1891, 1895], "obligatori": 938, "flowplots2d": [939, 940, 941, 942, 943, 944, 945, 1879, 1886, 1889, 1890, 1892, 1893, 1895, 1900, 1901, 1903, 1904], "slicedata": [939, 940, 941, 942, 943, 944, 945, 970, 971, 972, 973, 974, 975, 976, 977, 1879, 1886], "2d": [939, 940, 941, 942, 943, 944, 945, 965, 970, 972, 973, 974, 975, 976, 977, 1002, 1133, 1136, 1158, 1261, 1262, 1263, 1266, 1281, 1288, 1289, 1290, 1295, 1299, 1306, 1386, 1387, 1395, 1396, 1409, 1439, 1463, 1470, 1879, 1880, 1886, 1889, 1903], "get_mean_fig_xi": [939, 943, 1893, 1903], "xlabel": [939, 940, 941, 943, 944, 986, 1002, 1222, 1235, 1295, 1311, 1370], "ylabel": [939, 940, 942, 943, 945, 986, 1002, 1222, 1249, 1295, 1311, 1377], "get_mean_fig_xz": [939, 944], "x_direct": [939, 941, 942, 944, 945, 973, 974, 976, 977, 1895], "270": [939, 941, 942, 944, 945, 973, 974, 976, 977, 1889, 1890, 1891, 1895, 1897, 1900, 1904], "xz": [939, 941, 944, 965, 966, 970, 973, 976, 1886], "get_mean_fig_yz": [939, 945], "gen_states_fig_xi": [939, 940, 1889, 1890, 1892, 1900, 1901, 1904], "gen_states_fig_xz": [939, 941, 1890, 1895], "gen_states_fig_yz": [939, 942, 1904], "runner": [939, 965, 966, 970, 971, 1535, 1537, 1579, 1751, 1761, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1886, 1890, 1893, 1899, 1901, 1902, 1903], "get_mean_data_xi": [939, 943, 970, 972], "resolut": [939, 970, 972, 973, 974, 975, 976, 977, 1117, 1144, 1152, 1279, 1291, 1298, 1386, 1889, 1890, 1892, 1893, 1895, 1899, 1900, 1901, 1903, 1904], "get_mean_data_xz": [939, 944, 970, 973], "get_mean_data_yz": [939, 945, 970, 974], "get_states_data_xi": [939, 940, 970, 975], "get_states_data_xz": [939, 941, 970, 976], "get_states_data_yz": [939, 942, 970, 977], "vlabel": [940, 941, 942, 943, 944, 945, 986], "add_bar": [940, 941, 942, 943, 944, 945, 986], "cmap": [940, 941, 942, 943, 944, 945, 986, 1002, 1131, 1133, 1135, 1137, 1148, 1149, 1160, 1161, 1261, 1263, 1266, 1288, 1289, 1290, 1299, 1306, 1386, 1387, 1395, 1402, 1403, 1404, 1897], "vmin": [940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 986, 1002, 1075, 1081, 1085, 1086, 1097, 1102, 1133, 1137, 1160, 1161, 1261, 1263, 1266, 1288, 1289, 1290, 1299, 1306, 1386, 1402, 1403, 1404, 1889, 1890, 1897, 1899, 1901], "vmax": [940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 986, 1075, 1081, 1085, 1086, 1097, 1102, 1133, 1137, 1160, 1161, 1261, 1263, 1266, 1288, 1289, 1290, 1299, 1306, 1386, 1402, 1403, 1404, 1889, 1890, 1897, 1899, 1901], "quiver_n": [940, 941, 942, 943, 944, 945, 1890, 1892, 1899, 1901], "quiver_par": [940, 941, 942, 943, 944, 945, 1890, 1892, 1899, 1901], "ret_stat": [940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 986], "rotor_color": [940, 941, 942], "contourf": [940, 941, 942, 943, 944, 945, 986, 1002, 1149], "pure": [940, 941, 942, 943, 944, 945, 1626, 1631, 1636, 1641, 1647, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1707, 1717, 1877, 1878, 1886], "bar": [940, 941, 942, 943, 944, 945, 963, 986, 1002, 1131, 1132, 1134, 1135, 1157, 1184, 1261, 1262, 1668, 1706, 1711, 1721, 1731, 1741, 1793, 1794, 1903], "colormap": [940, 941, 942, 943, 944, 945, 1117, 1131, 1133, 1135, 1137, 1148, 1149, 1160, 1161, 1261, 1263, 1266, 1279, 1288, 1289, 1290, 1291, 1298, 1299, 1306, 1386, 1395, 1402, 1403], "minim": [940, 941, 942, 943, 944, 945, 972, 973, 974, 975, 976, 977, 985, 986, 1388, 1439, 1443, 1446, 1448, 1453, 1456, 1460, 1463, 1467, 1470, 1475, 1478, 1483, 1510, 1511, 1535, 1562, 1563, 1564, 1579, 1593, 1594, 1603, 1610, 1611, 1612, 1620, 1621, 1641, 1642, 1647, 1657, 1658, 1670, 1700, 1707, 1708, 1715, 1717, 1718, 1725, 1727, 1728, 1735, 1737, 1738, 1747, 1748, 1751, 1756, 1760, 1761, 1768, 1769, 1776, 1782, 1787, 1876, 1878, 1893], "th": [940, 941, 942, 943, 944, 945, 1668, 1706, 1886], "quiver": [940, 941, 942, 943, 944, 945, 986, 1002, 1133, 1299, 1300], "usag": [940, 941, 942, 943, 944, 945, 986, 1134, 1157, 1886], "orient": [940, 941, 942, 965, 966, 1002, 1158, 1262, 1288, 1290, 1299, 1307, 1308, 1389, 1392, 1402, 1403, 1417, 1420, 1898, 1899], "si": [940, 941, 942, 943, 944, 945, 986, 1899, 1901], "quadmesh": [940, 941, 942, 943, 944, 945, 986, 1263, 1289, 1290], "quadcontourset": [940, 941, 942, 943, 944, 945, 986], "zlabel": [941, 942, 944, 945], "north": [941, 942, 944, 945, 973, 974, 976, 977, 1131, 1135, 1148, 1149, 1898], "ech": [941, 942], "ret_data": [943, 944, 945, 959, 963, 964, 981], "n_x": [943, 944, 945, 986, 1261], "n_y": [943, 944, 945, 986, 1261], "job": 946, "handi": 946, "out_dir": [946, 947], "out_fname_fun": [946, 947], "fpath": [948, 1817], "underli": [951, 1487, 1488, 1491, 1508, 1509, 1510, 1511, 1512, 1517, 1518, 1520, 1528, 1529, 1593, 1594, 1595, 1602, 1603, 1604, 1605, 1606, 1610, 1611, 1626, 1627, 1628, 1631, 1632, 1633, 1636, 1637, 1638, 1641, 1642, 1643, 1647, 1649, 1652, 1657, 1658, 1659, 1663, 1664, 1665, 1669, 1670, 1671, 1676, 1677, 1678, 1682, 1683, 1684, 1688, 1689, 1690, 1694, 1695, 1696, 1700, 1701, 1703, 1704], "fv": [951, 985, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "4f": [951, 995, 997, 1001], "pointcalcul": [952, 953, 954, 1879, 1886], "states_mean": [952, 954], "weight_turbin": [952, 954, 972, 973, 974], "to_fil": [954, 972, 973, 974, 975, 976, 977], "write_var": 954, "write_par": [954, 972, 973, 974, 975, 976, 977], "write_nc": [954, 955, 958, 1817], "resultswrit": [955, 956, 957, 958, 1879, 1886], "state_turbine_t": 957, "roseplotoutput": [959, 960, 961, 962, 963, 964, 981, 1879, 1886, 1898], "rose": [959, 961, 963, 964, 981, 1002, 1131, 1135, 1148, 1149, 1879, 1880, 1885, 1886, 1887, 1891, 1893, 1898, 1902], "get_data_info": [959, 962, 981], "dname": [959, 962, 981], "descript": [959, 962, 981, 1118, 1119, 1122, 1127, 1168, 1171, 1179, 1262, 1266, 1288, 1289, 1290, 1295, 1312, 1315, 1317, 1325, 1393, 1395, 1865, 1866, 1874, 1875, 1876, 1883], "sector": [959, 961, 963, 964, 981, 1002, 1131, 1135, 1148, 1149, 1885, 1886, 1887, 1896, 1902], "var_bin": [959, 961, 963, 964, 981], "write_figur": [959, 964, 981], "start0": [961, 963], "bin": [961, 963, 964, 1002, 1131, 1135, 1148, 1149, 1261, 1262, 1263, 1386, 1438, 1880, 1886, 1888, 1891, 1902, 1903], "seper": [961, 963, 964], "relev": [961, 963, 1160, 1161, 1266, 1387, 1402, 1403, 1875, 1883, 1890], "degre": [961, 963, 1002, 1038, 1087, 1097, 1208, 1220, 1221, 1294, 1299, 1300, 1308, 1311, 1347, 1348, 1360, 1361, 1362, 1363, 1364, 1436, 1814, 1815, 1827, 1829, 1830, 1854, 1859, 1860, 1880, 1882, 1889, 1890, 1904], "minu": [961, 963, 1087, 1089], "width": [961, 963, 1002, 1118, 1120, 1133, 1134, 1136, 1138, 1148, 1149, 1158, 1179, 1262, 1268, 1270, 1294, 1299, 1311, 1317, 1325, 1342, 1356, 1386, 1395, 1396, 1400, 1402, 1413, 1414, 1886], "pd": [961, 963, 964, 1438, 1889, 1897, 1898, 1904], "long": [962, 1002, 1066, 1091, 1128, 1299, 1307, 1308, 1886], "text": [962, 1002, 1118, 1132, 1223, 1230, 1231, 1235, 1237, 1238, 1240, 1244, 1245, 1249, 1251, 1252, 1254, 1275, 1294, 1300, 1306, 1347, 1361, 1365, 1370, 1374, 1375, 1377, 1381, 1382, 1396, 1398, 1399, 1438], "rect": [963, 1002, 1167, 1268, 1270, 1898], "contour": [963, 986, 1002, 1142, 1148, 1402, 1403, 1886], "newli": [963, 1406, 1407], "rectangl": [963, 1002, 1125, 1126, 1129, 1130, 1134, 1137, 1190, 1261, 1268, 1269, 1317, 1324, 1328, 1332, 1398, 1892], "tabwindroseax": [963, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1880, 1886], "seqflowanimationplugin": [965, 966, 967, 968, 969, 1879, 1899], "yx": [965, 966], "gen_imag": [965, 967, 1899], "data_format": [972, 973, 974, 975, 976, 977], "xmin": [972, 973, 975, 976, 1002, 1125, 1126, 1127, 1130, 1137, 1261, 1263, 1264, 1289, 1371, 1386, 1394, 1396, 1890, 1892, 1893, 1895, 1899, 1904], "ymin": [972, 974, 975, 977, 1002, 1126, 1127, 1129, 1130, 1137, 1261, 1263, 1289, 1378, 1394, 1396, 1415, 1890, 1892, 1893, 1899, 1904], "xmax": [972, 973, 975, 976, 1002, 1125, 1126, 1127, 1130, 1261, 1263, 1264, 1289, 1371, 1386, 1394, 1890, 1892, 1893, 1895, 1899, 1901, 1904], "ymax": [972, 974, 975, 977, 1002, 1126, 1127, 1129, 1130, 1261, 1263, 1289, 1378, 1394, 1415, 1890, 1892, 1893, 1899, 1901, 1904], "xspace": [972, 973, 975, 976, 1890], "500": [972, 973, 974, 975, 976, 977, 1682, 1683, 1890, 1891, 1892, 1893, 1894, 1895, 1898, 1901, 1903], "yspace": [972, 974, 975, 977, 1890], "normalize_x": [972, 973, 974, 975, 976, 977], "normalize_i": [972, 973, 974, 975, 976, 977], "normalize_z": [972, 973, 974, 975, 976, 977], "normalize_v": [972, 973, 974, 975, 976, 977], "label_map": [972, 973, 974, 975, 976, 977], "states_isel": [972, 973, 974, 975, 976, 977], "ret_grid": [972, 973, 974, 975, 976, 977], "space": [972, 973, 974, 975, 976, 977, 1002, 1010, 1066, 1119, 1131, 1133, 1179, 1228, 1262, 1275, 1296, 1299, 1315, 1317, 1325, 1370, 1377, 1395, 1413, 1414, 1642, 1668, 1670, 1676, 1706, 1717, 1718, 1760, 1776, 1782, 1878, 1886], "grid_data": [972, 973, 974, 975, 976, 977], "x_po": [972, 973, 974, 975, 976, 977, 986], "y_po": [972, 973, 974, 975, 976, 977, 986], "z_po": [972, 973, 974, 975, 976, 977], "g_pt": [972, 973, 974, 975, 976, 977], "zmin": [973, 974, 976, 977, 1890, 1895, 1904], "zmax": [973, 974, 976, 977, 1890, 1895, 1904], "zspace": [973, 974, 976, 977], "stateturbinemap": [978, 979, 980, 1879, 1886, 1897], "heat": [978, 980, 1879, 1886], "plot_map": [978, 980, 1897], "subplot": [980, 985, 1002, 1192, 1217, 1270, 1274, 1277, 1357, 1889, 1890, 1891, 1893, 1897, 1899, 1900, 1901, 1902, 1903], "pcolormesh": [980, 1002, 1263, 1288, 1289, 1290], "statesroseplotoutput": [981, 982, 1879, 1886, 1891, 1893, 1895, 1898, 1902, 1903], "ws_var": [981, 982], "amb_rew": [981, 982, 995, 997, 1821, 1863, 1864, 1882, 1890, 1892, 1893, 1897, 1899, 1900, 1901, 1902], "turbinetypecurv": [983, 984, 985, 1879, 1886, 1891, 1897], "plot_curv": [983, 985, 1891, 1897], "p_max": [983, 985, 1439, 1442, 1446, 1448, 1452, 1456, 1459, 1463, 1466, 1470, 1474, 1478, 1482, 1893, 1897], "x_label": 985, "y_label": 985, "ws_min": [985, 1898], "ws_max": [985, 1894, 1898], "30": [985, 1890, 1891, 1893, 1901, 1902, 1903, 1904], "ws_step": 985, "pmax_arg": 985, "mask": [985, 1133, 1262, 1278, 1288, 1290, 1299, 1306, 1309, 1310, 1402, 1403, 1404, 1405, 1885, 1886, 1887, 1898], "labl": 985, "flow_plots_2d": [986, 1886, 1889], "get_fig": [986, 1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741], "quiv": 986, "invert_axi": 986, "show_rotor_dict": 986, "x_y": 986, "invert": [986, 1002, 1010, 1019, 1029, 1045, 1055, 1066, 1071, 1157, 1236, 1250, 1271, 1272, 1299, 1439, 1441, 1446, 1448, 1451, 1456, 1463, 1470, 1473, 1478, 1481, 1880], "dbase": 987, "must": [989, 990, 1003, 1005, 1010, 1016, 1027, 1033, 1045, 1054, 1058, 1066, 1067, 1070, 1072, 1107, 1109, 1117, 1118, 1133, 1134, 1142, 1144, 1152, 1157, 1158, 1184, 1261, 1262, 1266, 1279, 1280, 1288, 1290, 1291, 1295, 1298, 1299, 1307, 1308, 1314, 1328, 1343, 1374, 1381, 1386, 1392, 1395, 1396, 1402, 1403, 1404, 1418, 1510, 1876, 1892], "py": [990, 1438], "file_man": 990, "keyerror": [993, 1438], "pandasfilehelp": [995, 996, 997, 998, 999, 1000, 1001, 1880], "default_reading_paramet": [995, 998], "default_writing_paramet": [995, 999], "data_file_format": [995, 996], "export": 995, "default_format_dict": [995, 997], "bz2": [995, 996, 998, 999], "gz": [995, 996, 998, 999, 1886, 1895, 1899, 1901, 1902, 1903], "zip": [995, 996, 998, 999, 1438], "h5": [995, 996, 998, 999], "mode": [995, 999, 1002, 1107, 1131, 1135, 1148, 1149, 1386, 1392, 1418, 1899], "amb_cap": [995, 997, 1818, 1863, 1864, 1882, 1902], "5f": [995, 997], "amb_ct": [995, 997, 1819, 1863, 1864, 1882, 1890, 1893, 1899, 1900, 1901], "6f": [995, 997], "amb_p": [995, 997, 1818, 1820, 1835, 1863, 1864, 1882, 1890, 1892, 1893, 1897, 1899, 1900, 1901, 1902], "3f": [995, 997], "amb_rews2": [995, 997, 1822, 1863, 1864, 1882, 1890, 1893, 1899, 1900, 1901], "amb_rews3": [995, 997, 1823, 1863, 1864, 1882, 1890, 1893, 1899, 1900, 1901], "amb_rho": [995, 997, 1824, 1863, 1864, 1882, 1890, 1893, 1899, 1900, 1901], "amb_t": [995, 997, 1825, 1863, 1864, 1882], "amb_ti": [995, 997, 1826, 1863, 1864, 1882, 1890, 1894, 1899, 1900, 1901], "amb_w": [995, 997, 1828, 1863, 1864, 1882, 1891, 1893, 1895, 1898, 1900, 1902, 1903], "amb_yaw": [995, 997, 1829, 1863, 1864, 1882, 1890, 1899, 1901], "amb_yld": [995, 997, 1831, 1863, 1864, 1882, 1902], "cap": [995, 997, 1134, 1136, 1138, 1157, 1398, 1832, 1863, 1864, 1882, 1902], "yld": [995, 997, 1861, 1863, 1864, 1882, 1902], "read_fil": [995, 1000, 1791, 1808], "write_fil": [995, 1001], "windros": [1002, 1131, 1135, 1148, 1149, 1285, 1880, 1886], "windroseax": [1002, 1167, 1880, 1886], "stochast": [1002, 1880], "from_ax": [1002, 1167], "her": [1002, 1275], "adjust": [1002, 1075, 1081, 1097, 1100, 1119, 1127, 1132, 1136, 1138, 1168, 1266, 1270, 1311, 1312, 1317, 1325, 1387], "unset": [1002, 1311], "agg_filt": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1387, 1396, 1398], "set_radii_angl": [1002, 1344], "set_legend": [1002, 1336], "pyplot_argu": [1002, 1336], "draw": [1002, 1118, 1120, 1125, 1128, 1129, 1130, 1131, 1134, 1135, 1136, 1138, 1148, 1149, 1154, 1157, 1222, 1230, 1231, 1232, 1244, 1245, 1246, 1258, 1261, 1262, 1268, 1269, 1275, 1283, 1290, 1294, 1315, 1316, 1318, 1319, 1320, 1346, 1388, 1392, 1395, 1396, 1400, 1402, 1403, 1405, 1413, 1711, 1721, 1731, 1741], "segment": [1002, 1038, 1041, 1063, 1066, 1117, 1132, 1144, 1148, 1149, 1152, 1279, 1291, 1298, 1356, 1386], "center": [1002, 1117, 1118, 1131, 1132, 1133, 1134, 1135, 1144, 1148, 1149, 1152, 1158, 1223, 1230, 1231, 1244, 1245, 1261, 1262, 1266, 1279, 1288, 1290, 1291, 1294, 1298, 1315, 1317, 1356, 1365, 1370, 1377, 1386, 1396, 1398, 1402, 1403, 1413, 1414], "pylab": [1002, 1148, 1149], "command": [1002, 1148, 1149, 1200, 1338, 1343, 1346, 1438, 1440, 1450, 1458, 1465, 1472, 1480, 1880, 1888], "box": [1002, 1010, 1039, 1045, 1066, 1118, 1119, 1127, 1131, 1135, 1136, 1138, 1140, 1168, 1179, 1186, 1222, 1228, 1266, 1268, 1269, 1311, 1312, 1317, 1325, 1328, 1370, 1377, 1396, 1398, 1400], "proport": [1002, 1135, 1668, 1706], "get_xaxis_transform": [1002, 1232], "transform": [1002, 1010, 1014, 1015, 1016, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1032, 1033, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1058, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1069, 1070, 1071, 1072, 1073, 1074, 1108, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1224, 1225, 1230, 1231, 1232, 1244, 1245, 1246, 1258, 1261, 1268, 1270, 1273, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1307, 1308, 1311, 1328, 1342, 1366, 1387, 1395, 1396, 1398], "tick": [1002, 1075, 1077, 1082, 1085, 1087, 1088, 1091, 1092, 1096, 1097, 1098, 1134, 1136, 1138, 1178, 1228, 1232, 1237, 1238, 1240, 1241, 1242, 1246, 1251, 1252, 1254, 1255, 1256, 1274, 1277, 1278, 1280, 1281, 1282, 1283, 1296, 1301, 1322, 1323, 1324, 1347, 1361, 1370, 1374, 1375, 1377, 1381, 1382, 1400, 1401, 1406, 1407, 1413, 1414, 1416, 1419], "gridlin": [1002, 1178, 1232, 1246, 1324, 1347, 1361, 1400], "get_xaxis_text1_transform": [1002, 1230], "pad": [1002, 1117, 1132, 1144, 1152, 1230, 1231, 1244, 1245, 1279, 1280, 1291, 1298, 1365, 1372, 1379, 1386, 1400], "pad_point": [1002, 1230, 1231, 1244, 1245], "valign": [1002, 1230, 1231, 1244, 1245], "bottom": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1230, 1231, 1244, 1245, 1250, 1258, 1261, 1262, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1307, 1308, 1311, 1313, 1315, 1317, 1342, 1349, 1377, 1378, 1387, 1389, 1392, 1394, 1396, 1398, 1400, 1413, 1414, 1417, 1420], "baselin": [1002, 1134, 1230, 1231, 1244, 1245, 1365, 1374, 1381, 1388, 1389, 1392, 1398], "center_baselin": [1002, 1230, 1231, 1244, 1245, 1398], "halign": [1002, 1230, 1231, 1244, 1245], "left": [1002, 1045, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1223, 1230, 1231, 1236, 1244, 1245, 1258, 1261, 1262, 1266, 1268, 1269, 1270, 1275, 1279, 1281, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1307, 1308, 1311, 1313, 1315, 1317, 1342, 1365, 1370, 1371, 1377, 1378, 1386, 1387, 1393, 1396, 1398, 1400, 1401, 1402, 1403, 1417, 1420, 1901], "get_xaxis_text2_transform": [1002, 1231], "secondari": [1002, 1231, 1307, 1308], "get_yaxis_transform": [1002, 1246], "get_yaxis_text1_transform": [1002, 1244], "get_yaxis_text2_transform": [1002, 1245], "secondart": [1002, 1245], "render": [1002, 1118, 1136, 1138, 1154, 1222, 1228, 1263, 1266, 1289, 1290, 1311, 1317, 1321, 1401, 1413, 1414, 1893], "its": [1002, 1010, 1023, 1028, 1029, 1045, 1048, 1050, 1055, 1066, 1071, 1120, 1122, 1136, 1154, 1159, 1162, 1168, 1225, 1261, 1262, 1263, 1266, 1268, 1270, 1288, 1289, 1290, 1304, 1306, 1307, 1308, 1317, 1341, 1395, 1402, 1403, 1409, 1411, 1414, 1668, 1706, 1776, 1877, 1887, 1896, 1900], "children": [1002, 1003, 1005, 1010, 1023, 1035, 1045, 1050, 1066, 1110, 1154, 1222], "set_thetamax": [1002, 1363], "thetamax": [1002, 1311, 1362, 1363], "maximum": [1002, 1022, 1045, 1136, 1220, 1277, 1362, 1363, 1395, 1402, 1403, 1413, 1414, 1668, 1706, 1886, 1889, 1903], "theta": [1002, 1010, 1066, 1087, 1097, 1103, 1118, 1163, 1208, 1218, 1220, 1221, 1348, 1358, 1360, 1361, 1362, 1363, 1364], "get_thetamax": [1002, 1220], "set_thetamin": [1002, 1364], "thetamin": [1002, 1311, 1362, 1364], "minimum": [1002, 1010, 1016, 1045, 1066, 1067, 1117, 1136, 1144, 1152, 1221, 1279, 1291, 1298, 1299, 1362, 1364, 1386, 1395, 1402, 1403, 1413, 1414, 1889], "get_thetamin": [1002, 1221], "set_thetalim": [1002, 1362], "set_theta_offset": [1002, 1359, 1360], "offset": [1002, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1219, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1311, 1313, 1359, 1360, 1365, 1386, 1387, 1396, 1398, 1401, 1886], "radian": [1002, 1010, 1038, 1045, 1066, 1087, 1117, 1219, 1291, 1308, 1359, 1360, 1361, 1362], "get_theta_offset": [1002, 1219], "set_theta_zero_loc": [1002, 1360], "set_theta_direct": [1002, 1358], "increas": [1002, 1117, 1144, 1152, 1218, 1233, 1247, 1279, 1291, 1298, 1299, 1358, 1386, 1392, 1393, 1395, 1402, 1403, 1417, 1420, 1883], "get_theta_direct": [1002, 1218], "set_rmax": [1002, 1350], "rmax": [1002, 1311, 1349, 1350], "outer": [1002, 1209, 1274, 1289, 1350, 1396, 1402, 1403, 1886, 1899], "get_rmax": [1002, 1209], "set_rmin": [1002, 1351], "rmin": [1002, 1311, 1349, 1351], "inner": [1002, 1210, 1351, 1396], "get_rmin": [1002, 1210], "set_rorigin": [1002, 1352], "rorigin": [1002, 1311, 1352], "get_rorigin": [1002, 1211], "get_rsign": [1002, 1212], "set_rlim": [1002, 1349], "emit": [1002, 1082, 1127, 1349, 1371, 1378], "get_rlabel_posit": [1002, 1208], "set_rlabel_posit": [1002, 1348], "set_yscal": [1002, 1278, 1310, 1380], "yaxi": [1002, 1151, 1166, 1176, 1243, 1248, 1251, 1252, 1253, 1254, 1255, 1256, 1296, 1308, 1320, 1377, 1380, 1381, 1382, 1407, 1419, 1420], "set_rscal": [1002, 1353], "set_rtick": [1002, 1354], "set_thetagrid": [1002, 1347, 1361], "fmt": [1002, 1132, 1157, 1278, 1294, 1295, 1296, 1309, 1310, 1347, 1361, 1393], "polar": [1002, 1010, 1045, 1066, 1118, 1139, 1140, 1157, 1185, 1270, 1347, 1361], "set_rgrid": [1002, 1347, 1361], "format_coord": [1002, 1163], "get_data_ratio": [1002, 1185], "aspect": [1002, 1119, 1120, 1168, 1171, 1173, 1179, 1185, 1266, 1281, 1294, 1305, 1311, 1312, 1315, 1317, 1325, 1342, 1387], "alwai": [1002, 1010, 1019, 1034, 1037, 1040, 1045, 1061, 1062, 1066, 1073, 1118, 1126, 1128, 1130, 1185, 1262, 1290, 1294, 1306, 1360, 1374, 1381, 1902], "can_zoom": [1002, 1140], "whether": [1002, 1010, 1020, 1021, 1038, 1045, 1066, 1118, 1123, 1127, 1133, 1136, 1138, 1139, 1140, 1144, 1146, 1147, 1152, 1168, 1172, 1175, 1176, 1178, 1182, 1190, 1199, 1200, 1206, 1240, 1254, 1258, 1259, 1260, 1266, 1267, 1270, 1273, 1275, 1284, 1288, 1289, 1290, 1293, 1298, 1302, 1306, 1316, 1318, 1319, 1320, 1324, 1327, 1332, 1337, 1338, 1341, 1371, 1378, 1386, 1387, 1389, 1390, 1400, 1401, 1409, 1411, 1417, 1420], "zoom": [1002, 1139, 1140, 1201, 1299, 1347, 1361, 1374, 1381], "button": [1002, 1139, 1140, 1153, 1156, 1201, 1339, 1391], "can_pan": [1002, 1139], "pan": [1002, 1139, 1153, 1156, 1201, 1347, 1361, 1374, 1381, 1391], "start_pan": [1002, 1391], "end_pan": [1002, 1156], "complet": [1002, 1156, 1261, 1263, 1266, 1288, 1289, 1290, 1299, 1306, 1402, 1403, 1886, 1890, 1891, 1894, 1895, 1898, 1901, 1902, 1903], "mous": [1002, 1146, 1153, 1156, 1184, 1199, 1284, 1337, 1341, 1391], "drag_pan": [1002, 1153], "move": [1002, 1153, 1184, 1199, 1284, 1337, 1356, 1374, 1381, 1886, 1893, 1899], "get_titl": [1002, 1223], "set_titl": [1002, 1365, 1889, 1890], "fontdict": [1002, 1365, 1370, 1374, 1377, 1381, 1398], "get_legend_handles_label": [1002, 1197], "legend_handler_map": [1002, 1197], "inset_ax": [1002, 1110, 1268, 1269, 1270], "zorder": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1144, 1152, 1157, 1160, 1161, 1205, 1257, 1258, 1261, 1268, 1270, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1324, 1345, 1383, 1387, 1395, 1396, 1398, 1400, 1421, 1893], "child": [1002, 1110, 1180, 1270, 1292], "inset": [1002, 1268, 1269, 1270], "indicate_inset": [1002, 1268, 1269], "connect": [1002, 1118, 1157, 1160, 1161, 1268, 1269, 1295, 1299], "indicate_inset_zoom": [1002, 1269], "connector": [1002, 1268, 1269], "secondary_xaxi": [1002, 1307], "secondary_yaxi": [1002, 1308], "xytext": [1002, 1118, 1120], "xycoord": [1002, 1118], "axhlin": [1002, 1107, 1125, 1128, 1264, 1418], "across": [1002, 1125, 1126, 1129, 1130, 1264, 1395, 1415], "axvlin": [1002, 1128, 1129, 1415], "axlin": [1002, 1125, 1128, 1129], "xy1": [1002, 1128], "xy2": [1002, 1128], "slope": [1002, 1125, 1128, 1129, 1388], "infinit": [1002, 1128, 1889], "straight": [1002, 1128, 1266, 1295, 1890], "axhspan": [1002, 1125, 1126, 1130], "span": [1002, 1097, 1125, 1126, 1129, 1130, 1136, 1138], "axvspan": [1002, 1126, 1129, 1130], "hline": [1002, 1125, 1264, 1295, 1415], "linestyl": [1002, 1107, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1264, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1343, 1387, 1392, 1393, 1402, 1415, 1418, 1889, 1890], "solid": [1002, 1158, 1264, 1288, 1290, 1295, 1392, 1402, 1415], "vline": [1002, 1107, 1129, 1264, 1295, 1415, 1418], "eventplot": [1002, 1158], "lineoffset": [1002, 1158], "scalex": [1002, 1123, 1295], "scalei": [1002, 1123, 1295], "versu": [1002, 1157, 1295], "marker": [1002, 1107, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1306, 1324, 1343, 1387, 1392, 1393, 1405, 1418], "plot_dat": [1002, 1296], "o": [1002, 1107, 1120, 1126, 1130, 1133, 1134, 1136, 1137, 1160, 1161, 1261, 1268, 1288, 1290, 1295, 1296, 1299, 1343, 1392, 1418, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1900, 1901, 1902, 1903, 1904], "tz": [1002, 1296, 1416, 1419], "xdate": [1002, 1296], "ydate": [1002, 1296], "discourag": [1002, 1343, 1402, 1403, 1404], "coerc": [1002, 1296], "date": [1002, 1082, 1158, 1296, 1416, 1419, 1891], "loglog": [1002, 1128, 1278], "semilogx": [1002, 1309], "semilogi": [1002, 1310], "acorr": [1002, 1107], "autocorrel": [1002, 1107], "xcorr": [1002, 1418], "norm": [1002, 1107, 1133, 1137, 1160, 1161, 1261, 1263, 1266, 1288, 1289, 1290, 1299, 1306, 1395, 1402, 1403, 1404, 1418, 1668, 1706], "detrend": [1002, 1107, 1144, 1152, 1298, 1386, 1418], "detrend_non": [1002, 1107, 1144, 1152, 1298, 1386, 1418], "cross": [1002, 1107, 1144, 1152, 1160, 1161, 1343, 1394, 1418, 1901, 1904], "barh": [1002, 1132, 1134, 1262], "bar_label": [1002, 1132], "broken_barh": [1002, 1137], "xrang": [1002, 1125, 1137], "yrang": [1002, 1129, 1130, 1137], "sequenc": [1002, 1003, 1044, 1117, 1125, 1128, 1129, 1131, 1133, 1134, 1135, 1136, 1137, 1138, 1144, 1148, 1149, 1152, 1157, 1158, 1159, 1258, 1261, 1262, 1278, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1374, 1381, 1386, 1387, 1388, 1393, 1402, 1403, 1414], "stem": [1002, 1120, 1392, 1896], "linefmt": [1002, 1392], "markerfmt": [1002, 1392], "basefmt": [1002, 1392], "pie": [1002, 1294], "explod": [1002, 1294], "autopct": [1002, 1294], "chart": [1002, 1262, 1294, 1295], "errorbar": [1002, 1132, 1134, 1157], "yerr": [1002, 1134, 1157], "xerr": [1002, 1134, 1157], "ecolor": [1002, 1134, 1157], "attach": [1002, 1118, 1134, 1157, 1261], "boxplot": [1002, 1136, 1138], "notch": [1002, 1136, 1138], "sym": [1002, 1136, 1388], "vert": [1002, 1133, 1136, 1137, 1138, 1160, 1161, 1261, 1288, 1299, 1413, 1414], "whi": [1002, 1136], "whisker": [1002, 1136, 1138], "bxp": [1002, 1138], "bxpstat": [1002, 1138], "vari": [1002, 1295, 1306, 1395, 1886, 1889, 1891, 1895], "hexbin": [1002, 1261, 1262, 1263], "gridsiz": [1002, 1261], "xscale": [1002, 1261, 1311], "hexagon": [1002, 1261, 1262, 1263, 1299], "arrow": [1002, 1118, 1120, 1133, 1157, 1299, 1300, 1395], "dy": [1002, 1120], "quiverkei": [1002, 1299, 1300], "q": [1002, 1300, 1668, 1706], "u": [1002, 1087, 1089, 1133, 1299, 1300, 1395, 1668, 1706, 1813, 1814, 1893], "barb": [1002, 1133], "polygon": [1002, 1126, 1130, 1133, 1159, 1160, 1161, 1262, 1290, 1299, 1463, 1464, 1792, 1880, 1893], "fill_between": [1002, 1159, 1160, 1161, 1388], "y1": [1002, 1160, 1295, 1388, 1402, 1403], "y2": [1002, 1159, 1160, 1278, 1295, 1309, 1310, 1388, 1393], "fill_betweenx": [1002, 1160, 1161], "x1": [1002, 1161, 1262, 1295, 1402, 1403], "x2": [1002, 1159, 1161, 1278, 1295, 1309, 1310, 1393], "imshow": [1002, 1263, 1266, 1281, 1288, 1290, 1386, 1387, 1395, 1402, 1403], "displai": [1002, 1118, 1132, 1153, 1184, 1228, 1261, 1262, 1263, 1266, 1267, 1281, 1283, 1317, 1335, 1347, 1361, 1374, 1381, 1391, 1902, 1903], "raster": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1205, 1206, 1258, 1261, 1266, 1268, 1279, 1281, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1345, 1346, 1387, 1396, 1398], "pcolor": [1002, 1280, 1288, 1289, 1290, 1404], "shade": [1002, 1288, 1289, 1290, 1404], "pseudocolor": [1002, 1266, 1288, 1289, 1290, 1404], "rectangular": [1002, 1136, 1261, 1262, 1288, 1289, 1290, 1398], "pcolorfast": [1002, 1289], "clabel": [1002, 1142], "hist": [1002, 1262, 1263], "histogram": [1002, 1261, 1262, 1263, 1394, 1886], "stair": [1002, 1262, 1389, 1393], "edg": [1002, 1045, 1118, 1131, 1132, 1134, 1135, 1136, 1157, 1160, 1161, 1223, 1261, 1262, 1263, 1275, 1288, 1289, 1290, 1299, 1300, 1306, 1317, 1365, 1389, 1393, 1394, 1396, 1402, 1403, 1405], "stepwis": [1002, 1389], "hist2d": [1002, 1261, 1262, 1263], "psd": [1002, 1152, 1279, 1298, 1386], "nfft": [1002, 1117, 1144, 1152, 1279, 1291, 1298, 1386], "window": [1002, 1117, 1144, 1152, 1184, 1279, 1291, 1298, 1386, 1886], "spectral": [1002, 1144, 1152, 1279, 1298, 1386], "csd": [1002, 1152, 1298], "magnitude_spectrum": [1002, 1117, 1279, 1291, 1298, 1386], "magnitud": [1002, 1117, 1133, 1279, 1291, 1298, 1386, 1401], "spectrum": [1002, 1117, 1144, 1152, 1279, 1291, 1298, 1386], "angle_spectrum": [1002, 1117, 1279, 1291, 1386], "pad_to": [1002, 1117, 1144, 1152, 1279, 1291, 1298, 1386], "phase_spectrum": [1002, 1117, 1279, 1291, 1386], "phase": [1002, 1117, 1279, 1291, 1386], "coher": [1002, 1144], "256": [1002, 1144, 1152, 1298, 1386, 1897], "specgram": [1002, 1117, 1279, 1291, 1298, 1386], "spectrogram": [1002, 1386], "spy": [1002, 1387], "precis": [1002, 1160, 1161, 1387, 1668, 1706], "markers": [1002, 1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1306, 1387], "sparsiti": [1002, 1387], "matshow": [1002, 1266, 1281], "matrix": [1002, 1010, 1015, 1025, 1045, 1046, 1052, 1059, 1066, 1266, 1281, 1288, 1290, 1668, 1706], "violinplot": [1002, 1136, 1413, 1414], "violin": [1002, 1413, 1414], "vpstat": [1002, 1413], "celltext": [1002, 1396], "cellcolour": [1002, 1396], "cellloc": [1002, 1396], "stackplot": [1002, 1388], "stack": [1002, 1132, 1134, 1262, 1388], "streamplot": [1002, 1395], "linewidth": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1343, 1387, 1395, 1402], "tricontour": [1002, 1402], "unstructur": [1002, 1402, 1403, 1404, 1405], "triangular": [1002, 1120, 1402, 1403, 1404, 1405], "tricontourf": [1002, 1403], "tripcolor": [1002, 1404], "triplot": [1002, 1405], "__init_subclass__": [1002, 1010, 1017, 1045, 1066, 1104], "subclass": [1002, 1010, 1017, 1027, 1033, 1045, 1054, 1057, 1058, 1066, 1070, 1072, 1086, 1102, 1104, 1118, 1146, 1154, 1162, 1164, 1184, 1222, 1261, 1263, 1266, 1270, 1288, 1289, 1290, 1306, 1307, 1308, 1402, 1403], "get_subplotspec": [1002, 1217], "subplotspec": [1002, 1217, 1311, 1357], "associ": [1002, 1010, 1016, 1066, 1067, 1085, 1109, 1133, 1164, 1192, 1217, 1262, 1266, 1357, 1892], "set_subplotspec": [1002, 1357], "get_gridspec": [1002, 1192], "gridspec": [1002, 1192], "get_window_ext": [1002, 1222, 1228], "empti": [1002, 1133, 1136, 1228, 1295], "set_figur": [1002, 1331], "instanc": [1002, 1003, 1005, 1010, 1022, 1045, 1057, 1066, 1085, 1123, 1124, 1131, 1132, 1135, 1136, 1138, 1142, 1148, 1149, 1157, 1162, 1189, 1196, 1224, 1229, 1243, 1261, 1263, 1266, 1270, 1288, 1289, 1290, 1294, 1296, 1302, 1306, 1326, 1331, 1347, 1361, 1365, 1374, 1381, 1387, 1388, 1398, 1402, 1403, 1406, 1407, 1413, 1414, 1892, 1901], "belong": [1002, 1189, 1331], "viewlim": [1002, 1412], "get_posit": [1002, 1119, 1204], "bbox": [1002, 1010, 1039, 1045, 1066, 1117, 1118, 1119, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1204, 1222, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1315, 1321, 1326, 1342, 1387, 1396, 1398, 1409], "set_posit": [1002, 1204, 1305, 1342], "po": [1002, 1087, 1088, 1342], "reset_posit": [1002, 1305], "activ": [1002, 1204, 1294, 1305, 1315, 1342, 1888], "set_axes_loc": [1002, 1321], "get_axes_loc": [1002, 1177], "axes_loc": [1002, 1177, 1311], "sharex": [1002, 1384, 1889, 1890], "share": [1002, 1157, 1213, 1214, 1312, 1315, 1317, 1384, 1385, 1406, 1407], "sharei": [1002, 1385, 1889, 1890], "cla": [1002, 1141], "patch": [1002, 1115, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1136, 1137, 1138, 1144, 1147, 1152, 1157, 1159, 1160, 1161, 1190, 1258, 1261, 1262, 1268, 1269, 1279, 1286, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1311, 1324, 1328, 1332, 1341, 1387, 1389, 1395, 1396, 1398], "get_facecolor": [1002, 1187, 1188], "facecolor": [1002, 1120, 1126, 1130, 1133, 1134, 1137, 1160, 1161, 1187, 1261, 1268, 1288, 1290, 1299, 1306, 1311, 1329, 1398, 1404], "set_facecolor": [1002, 1329, 1330], "set_prop_cycl": [1002, 1343], "cycl": [1002, 1117, 1137, 1144, 1152, 1159, 1279, 1291, 1294, 1295, 1298, 1306, 1343, 1386, 1388, 1392, 1402, 1403], "get_aspect": [1002, 1173], "set_aspect": [1002, 1119, 1127, 1168, 1171, 1179, 1266, 1294, 1312, 1315, 1317, 1325, 1342, 1387], "anchor": [1002, 1010, 1038, 1045, 1066, 1127, 1133, 1171, 1299, 1311, 1315, 1317, 1398], "get_adjust": [1002, 1119, 1168], "physic": [1002, 1168, 1312, 1325], "datalim": [1002, 1108, 1127, 1168, 1259, 1311, 1312, 1317, 1325, 1409], "achiev": [1002, 1119, 1127, 1134, 1168, 1289, 1312, 1317, 1899], "desir": [1002, 1168, 1280, 1303, 1902, 1904], "set_adjust": [1002, 1119, 1168, 1312, 1317, 1325], "how": [1002, 1119, 1133, 1136, 1168, 1299, 1312, 1317, 1885, 1886, 1887, 1890, 1897, 1902, 1903], "get_box_aspect": [1002, 1179], "set_box_aspect": [1002, 1179, 1325], "get_anchor": [1002, 1119, 1171], "set_anchor": [1002, 1119, 1171, 1315, 1317], "apply_aspect": [1002, 1119], "conveni": [1002, 1122, 1127, 1281, 1295, 1343, 1888, 1900], "get_legend": [1002, 1196], "get_imag": [1002, 1193], "axesimag": [1002, 1113, 1184, 1193, 1266, 1281, 1289, 1386, 1387], "get_lin": [1002, 1198], "get_xaxi": [1002, 1229], "xaxi": [1002, 1150, 1165, 1175, 1229, 1234, 1237, 1238, 1239, 1240, 1241, 1242, 1296, 1307, 1319, 1370, 1373, 1374, 1375, 1406, 1416, 1417], "get_yaxi": [1002, 1243], "get_xgridlin": [1002, 1234], "line2d": [1002, 1107, 1114, 1117, 1125, 1128, 1129, 1136, 1138, 1144, 1152, 1157, 1162, 1234, 1241, 1248, 1255, 1258, 1278, 1279, 1291, 1295, 1296, 1298, 1309, 1310, 1347, 1361, 1387, 1392, 1393, 1400, 1405, 1418], "get_xticklin": [1002, 1241], "minor": [1002, 1238, 1240, 1241, 1242, 1252, 1254, 1255, 1256, 1258, 1278, 1282, 1283, 1309, 1310, 1374, 1375, 1381, 1382, 1400], "get_ygridlin": [1002, 1248], "get_yticklin": [1002, 1255], "add_artist": [1002, 1108], "add_child_ax": [1002, 1110], "axesbas": [1002, 1110], "add_collect": [1002, 1111], "autolim": [1002, 1111, 1303], "add_imag": [1002, 1113], "add_lin": [1002, 1114], "add_patch": [1002, 1115], "add_tabl": [1002, 1116, 1396], "tab": [1002, 1116], "add_contain": [1002, 1112], "relim": [1002, 1123, 1302, 1303], "visible_onli": [1002, 1302], "recomput": [1002, 1302], "update_datalim": [1002, 1108, 1409], "updatex": [1002, 1409], "updatei": [1002, 1409], "in_ax": [1002, 1267], "mouseev": [1002, 1146, 1184, 1267, 1292, 1341], "event": [1002, 1117, 1125, 1128, 1129, 1144, 1146, 1152, 1157, 1158, 1184, 1258, 1267, 1279, 1291, 1292, 1295, 1296, 1298, 1341, 1387, 1406, 1407], "get_autoscalex_on": [1002, 1175, 1369], "autosc": [1002, 1081, 1100, 1108, 1122, 1123, 1127, 1174, 1175, 1176, 1262, 1277, 1280, 1299, 1318, 1319, 1320, 1369, 1371, 1372, 1376, 1378, 1379, 1394, 1411], "get_autoscaley_on": [1002, 1176, 1376], "set_autoscalex_on": [1002, 1319], "autoscale_view": [1002, 1122, 1123, 1277, 1280, 1295, 1318, 1319, 1320, 1411], "set_autoscaley_on": [1002, 1320], "get_autoscale_on": [1002, 1174], "set_autoscale_on": [1002, 1318], "use_sticky_edg": [1002, 1280, 1411], "obei": [1002, 1411], "sticky_edg": [1002, 1394, 1411], "set_xmargin": [1002, 1372], "prior": [1002, 1123, 1372, 1379], "set_ymargin": [1002, 1379], "margin": [1002, 1122, 1123, 1261, 1280, 1372, 1379, 1394, 1411], "tight": [1002, 1122, 1123, 1127, 1194, 1222, 1277, 1280, 1334], "retriev": [1002, 1280], "set_rasterization_zord": [1002, 1345], "threshold": [1002, 1345], "graphic": [1002, 1290, 1345, 1346], "get_rasterization_zord": [1002, 1205], "autoscal": [1002, 1122, 1123, 1406, 1407, 1411], "enabl": [1002, 1087, 1089, 1122, 1136, 1138, 1341, 1346, 1402, 1403, 1887], "toggl": [1002, 1122, 1258, 1413, 1414], "draw_artist": [1002, 1155, 1316], "redraw": [1002, 1155, 1301], "redraw_in_fram": [1002, 1301], "get_renderer_cach": [1002, 1207], "deprec": [1002, 1003, 1005, 1207, 1288, 1290, 1296, 1392], "get_frame_on": [1002, 1190], "drawn": [1002, 1118, 1119, 1120, 1133, 1136, 1137, 1157, 1190, 1258, 1261, 1262, 1268, 1269, 1290, 1294, 1295, 1299, 1306, 1312, 1317, 1332, 1342, 1383, 1389, 1390, 1395, 1396, 1402, 1403, 1405], "set_frame_on": [1002, 1332], "get_axisbelow": [1002, 1178, 1324], "set_axisbelow": [1002, 1178, 1258, 1324], "visibl": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1154, 1157, 1160, 1161, 1186, 1227, 1242, 1256, 1258, 1261, 1268, 1269, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1303, 1311, 1327, 1368, 1374, 1375, 1381, 1382, 1387, 1396, 1398, 1890], "major": [1002, 1123, 1165, 1166, 1237, 1240, 1242, 1251, 1254, 1256, 1258, 1277, 1374, 1375, 1381, 1382, 1400, 1401], "configur": [1002, 1258, 1396, 1401], "ticklabel_format": [1002, 1401], "style": [1002, 1107, 1117, 1118, 1123, 1125, 1128, 1129, 1132, 1134, 1136, 1144, 1152, 1157, 1158, 1258, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1306, 1343, 1387, 1392, 1393, 1395, 1398, 1400, 1401, 1418, 1886], "scilimit": [1002, 1401], "scalarformatt": [1002, 1347, 1401], "locator_param": [1002, 1277], "behavior": [1002, 1122, 1128, 1133, 1136, 1203, 1277, 1299, 1341, 1356, 1392], "tick_param": [1002, 1375, 1382, 1400], "set_axis_off": [1002, 1322], "turn": [1002, 1122, 1127, 1283, 1322, 1323, 1371, 1378], "off": [1002, 1117, 1120, 1122, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1144, 1152, 1157, 1158, 1258, 1268, 1279, 1283, 1291, 1295, 1296, 1298, 1322, 1341, 1371, 1378, 1387, 1890, 1893, 1898], "set_axis_on": [1002, 1323], "get_xlabel": [1002, 1235], "set_xlabel": [1002, 1370, 1889, 1890, 1900], "labelpad": [1002, 1370, 1377], "invert_xaxi": [1002, 1233, 1236, 1271, 1369, 1371], "xaxis_invert": [1002, 1233, 1236, 1271, 1369, 1371, 1417], "invers": [1002, 1010, 1019, 1026, 1029, 1045, 1053, 1055, 1066, 1069, 1071, 1299, 1307, 1308, 1369, 1376, 1417, 1420, 1439, 1441, 1446, 1448, 1451, 1456, 1463, 1470, 1473, 1478, 1481, 1668, 1706, 1904], "get_xbound": [1002, 1233, 1236, 1271, 1369, 1371], "set_xbound": [1002, 1233, 1236, 1271, 1369, 1371], "get_xlim": [1002, 1233, 1236, 1271, 1369, 1371], "set_xlim": [1002, 1123, 1126, 1127, 1157, 1233, 1236, 1271, 1369, 1371], "get_xscal": [1002, 1239], "set_xscal": [1002, 1278, 1309, 1373], "get_xtick": [1002, 1242], "set_xtick": [1002, 1374, 1375], "get_xmajorticklabel": [1002, 1237], "get_xminorticklabel": [1002, 1238], "get_xticklabel": [1002, 1240], "set_xticklabel": [1002, 1374], "get_ylabel": [1002, 1249], "set_ylabel": [1002, 1377, 1889, 1890, 1900], "invert_yaxi": [1002, 1247, 1250, 1272, 1376, 1378], "yaxis_invert": [1002, 1247, 1250, 1272, 1376, 1378, 1420], "get_ybound": [1002, 1247, 1250, 1272, 1376, 1378], "set_ybound": [1002, 1247, 1250, 1272, 1376, 1378], "get_ylim": [1002, 1247, 1250, 1272, 1376, 1378], "set_ylim": [1002, 1127, 1130, 1157, 1247, 1250, 1272, 1349, 1376, 1378], "get_yscal": [1002, 1253], "get_ytick": [1002, 1256], "set_ytick": [1002, 1381, 1382], "get_ymajorticklabel": [1002, 1251], "get_yminorticklabel": [1002, 1252], "get_yticklabel": [1002, 1254], "set_yticklabel": [1002, 1381], "xaxis_d": [1002, 1416], "yaxis_d": [1002, 1419], "format_xdata": [1002, 1165], "format_ydata": [1002, 1166], "minorticks_on": [1002, 1283], "minorticks_off": [1002, 1282, 1283], "get_navig": [1002, 1200], "respond": [1002, 1200, 1338], "navig": [1002, 1200, 1201, 1311, 1338, 1339], "set_navig": [1002, 1338], "toolbar": [1002, 1201, 1338, 1339], "get_navigate_mod": [1002, 1201], "statu": [1002, 1184, 1201, 1339, 1902], "set_navigate_mod": [1002, 1339], "get_children": [1002, 1180], "contains_point": [1002, 1147], "pixel": [1002, 1118, 1147, 1222, 1261, 1266, 1288, 1289, 1290, 1295, 1299, 1345, 1346, 1355, 1356, 1387, 1402, 1403], "insid": [1002, 1147, 1275, 1294, 1400, 1439, 1445, 1446, 1448, 1455, 1456, 1462, 1463, 1469, 1470, 1471, 1477, 1478, 1485, 1487, 1488, 1508, 1876, 1892], "get_default_bbox_extra_artist": [1002, 1186], "get_tightbbox": [1002, 1222, 1228], "call_axes_loc": [1002, 1222], "decor": [1002, 1222, 1365], "twinx": [1002, 1406], "twin": [1002, 1312, 1406, 1407], "twini": [1002, 1407], "get_shared_x_ax": [1002, 1213], "immut": [1002, 1003, 1213, 1214], "grouper": [1002, 1213, 1214], "get_shared_y_ax": [1002, 1214], "label_out": [1002, 1274], "show": [1002, 1107, 1127, 1131, 1133, 1135, 1136, 1138, 1148, 1149, 1158, 1258, 1274, 1281, 1307, 1418, 1793, 1794, 1886, 1889, 1890, 1891, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1902, 1903, 1904], "get_fc": [1002, 1188], "set_fc": [1002, 1330], "possibl": [1002, 1127, 1132, 1203, 1261, 1262, 1288, 1290, 1303, 1306, 1317, 1324, 1347, 1356, 1361, 1362, 1374, 1381, 1402, 1403, 1404, 1487, 1490, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1668, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1706, 1898], "have_unit": [1002, 1260], "convert_xunit": [1002, 1150], "convert_yunit": [1002, 1151], "resid": [1002, 1124], "stale": [1002, 1390], "re": [1002, 1390, 1897, 1901], "match": [1002, 1133, 1136, 1138, 1158, 1162, 1262, 1266, 1280, 1299, 1306, 1374, 1381, 1390, 1395, 1404, 1413, 1414, 1668, 1706], "intern": [1002, 1261, 1287, 1289, 1290, 1299, 1390, 1402, 1403, 1876, 1887], "add_callback": [1002, 1109, 1287, 1304], "callback": [1002, 1109, 1287, 1304], "whenev": [1002, 1109, 1888, 1899], "remove_callback": [1002, 1109, 1287, 1304], "oid": [1002, 1304], "observ": [1002, 1109, 1127, 1133, 1304, 1371, 1378, 1668, 1706, 1890], "pchang": [1002, 1287], "regist": [1002, 1261, 1263, 1266, 1287, 1288, 1289, 1290, 1306, 1373, 1380, 1402, 1403], "is_transform_set": [1002, 1273], "explicitli": [1002, 1179, 1263, 1266, 1273, 1299, 1316, 1343, 1374, 1375, 1381, 1382, 1387, 1400, 1402, 1403, 1886], "set_transform": [1002, 1273, 1366], "get_transform": [1002, 1108, 1224], "pickabl": [1002, 1203, 1292, 1293], "process": [1002, 1292, 1794, 1896], "set_pick": [1002, 1203, 1292, 1293, 1341], "picker": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1292, 1295, 1296, 1298, 1299, 1311, 1341, 1387, 1396, 1398], "get_pick": [1002, 1203, 1292, 1293], "get_url": [1002, 1226], "url": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1226, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1367, 1387, 1396, 1398, 1884], "set_url": [1002, 1266, 1367], "get_gid": [1002, 1191], "group": [1002, 1158, 1159, 1191, 1295, 1333, 1400, 1404], "set_gid": [1002, 1333], "gid": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1333, 1387, 1396, 1398], "get_snap": [1002, 1216], "snap": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1216, 1258, 1261, 1268, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1356, 1387, 1396, 1398], "set_snap": [1002, 1216, 1356], "get_sketch_param": [1002, 1215], "sketch": [1002, 1215, 1355], "set_sketch_param": [1002, 1355], "set_path_effect": [1002, 1340], "path_effect": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1340, 1387, 1396, 1398], "get_path_effect": [1002, 1202], "set_clip_box": [1002, 1326], "clipbox": [1002, 1181, 1326], "set_clip_path": [1002, 1328], "get_alpha": [1002, 1170], "blend": [1002, 1021, 1158, 1170, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1314, 1402, 1403], "backend": [1002, 1170, 1266, 1289, 1314, 1355, 1356, 1403], "get_vis": [1002, 1154, 1227], "get_anim": [1002, 1172], "get_in_layout": [1002, 1194], "get_clip_on": [1002, 1182], "get_clip_box": [1002, 1181], "get_clip_path": [1002, 1183], "get_transformed_clip_path_and_affin": [1002, 1225], "affin": [1002, 1010, 1015, 1024, 1025, 1037, 1040, 1042, 1043, 1045, 1046, 1051, 1052, 1061, 1062, 1064, 1065, 1066, 1073, 1074, 1225], "remain": [1002, 1132, 1160, 1161, 1225, 1262, 1277, 1280, 1387, 1400], "set_clip_on": [1002, 1327], "get_raster": [1002, 1206], "set_raster": [1002, 1346], "bitmap": [1002, 1346], "get_agg_filt": [1002, 1169], "filter": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1162, 1169, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1313, 1355, 1386, 1387, 1396, 1398, 1438], "agg": [1002, 1169, 1289, 1313, 1356, 1403], "set_agg_filt": [1002, 1313], "filter_func": [1002, 1313], "set_alpha": [1002, 1314], "set_vis": [1002, 1368], "set_anim": [1002, 1316], "set_in_layout": [1002, 1186, 1222, 1334], "in_layout": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1334, 1387, 1396, 1398], "tutori": [1002, 1194, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1316, 1334, 1402, 1403], "intermedi": [1002, 1194, 1266, 1289, 1334], "constrainedlayout_guid": [1002, 1194, 1334], "tight_layout": [1002, 1194, 1334, 1890], "savefig": [1002, 1194, 1334], "bbox_inch": [1002, 1194, 1334], "get_label": [1002, 1195], "set_label": [1002, 1335], "get_zord": [1002, 1257], "set_zord": [1002, 1258, 1383], "sticki": [1002, 1280, 1394], "update_from": [1002, 1410], "prop": [1002, 1275, 1341, 1408], "findobj": [1002, 1162], "include_self": [1002, 1162], "find": [1002, 1162, 1668, 1706, 1865, 1872, 1886], "get_cursor_data": [1002, 1164, 1184, 1337], "cursor": [1002, 1184, 1199, 1284, 1337], "format_cursor_data": [1002, 1164, 1184], "represent": [1002, 1087, 1090, 1164, 1184, 1266], "get_mouseov": [1002, 1199], "queri": [1002, 1199, 1284, 1337], "custom": [1002, 1003, 1007, 1133, 1144, 1152, 1199, 1270, 1284, 1296, 1298, 1337, 1373, 1380, 1386], "inform": [1002, 1082, 1133, 1184, 1199, 1284, 1306, 1324, 1337, 1438, 1896, 1900, 1902], "set_mouseov": [1002, 1337], "mouseov": [1002, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1284, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1337, 1387, 1396, 1398], "polartransform": [1002, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074], "polaraffin": [1002, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065], "affine2dbas": [1002, 1045], "project": [1002, 1045, 1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1153, 1156, 1157, 1160, 1161, 1230, 1231, 1232, 1244, 1245, 1246, 1258, 1261, 1268, 1270, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1361, 1387, 1391, 1887], "invertedpolartransform": [1002, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044], "cartesian": [1002, 1010, 1016, 1066, 1067], "back": [1002, 1010, 1082, 1120, 1165, 1166, 1299, 1402, 1892], "thetaformatt": [1002, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1361], "ticker": [1002, 1075, 1087, 1097, 1277, 1296, 1347, 1361, 1374, 1375, 1381, 1382, 1402, 1403, 1406, 1407], "symbol": [1002, 1087, 1089, 1136, 1157, 1299], "radialloc": [1002, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086], "thetaloc": [1002, 1097, 1098, 1099, 1100, 1101, 1102], "artistlist": [1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009], "sublist": [1002, 1003, 1005], "were": [1003, 1158, 1215, 1413, 1554, 1886, 1896, 1903, 1904], "futur": [1003, 1157, 1296, 1343, 1395], "replac": [1003, 1087, 1089, 1375, 1382, 1886, 1888], "alreadi": [1003, 1010, 1034, 1045, 1066, 1262, 1296, 1343, 1384, 1385, 1402, 1403, 1404, 1405, 1895, 1900], "prop_nam": [1003, 1005], "valid_typ": [1003, 1005], "invalid_typ": [1003, 1005], "pull": [1003, 1005, 1887], "access": [1003, 1005, 1229, 1243, 1295, 1873], "unspecifi": [1003, 1005, 1087, 1088, 1090, 1388], "unless": [1003, 1005, 1107, 1117, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1164, 1179, 1261, 1262, 1263, 1264, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1296, 1298, 1299, 1306, 1342, 1386, 1388, 1389, 1392, 1395, 1400, 1402, 1414, 1415, 1418], "never": [1003, 1005], "exclud": [1003, 1005, 1160, 1161, 1186, 1262, 1302, 1316, 1886], "present": [1003, 1009, 1133, 1302, 1371, 1387, 1897], "count": [1003, 1008, 1120, 1158, 1261, 1262, 1263, 1604, 1605, 1886], "occurr": [1003, 1008, 1131, 1135, 1148, 1149], "__subclasshook__": [1003, 1007], "overrid": [1003, 1007, 1086, 1102, 1133, 1184, 1240, 1254, 1300, 1396, 1398, 1402, 1403], "issubclass": [1003, 1007, 1438], "earli": 1007, "abcmeta": 1007, "__subclasscheck__": 1007, "notimpl": [1007, 1438], "outcom": 1007, "cach": [1007, 1039], "stop": 1009, "recommend": [1009, 1136, 1138, 1393, 1888, 1892], "input_dim": [1010, 1027, 1036, 1037, 1040, 1044, 1045, 1054, 1060, 1061, 1062, 1066, 1070, 1073], "overridden": [1010, 1017, 1027, 1033, 1045, 1054, 1058, 1066, 1070, 1072, 1104, 1136, 1153, 1154, 1156, 1164, 1184, 1230, 1231, 1232, 1244, 1245, 1246, 1391], "output_dim": [1010, 1033, 1036, 1037, 1040, 1044, 1045, 1058, 1060, 1061, 1062, 1066, 1072, 1073], "use_rmin": [1010, 1016, 1066, 1067], "transform_non_affin": [1010, 1037, 1040, 1045, 1061, 1062, 1066, 1073], "has_invers": [1010, 1026, 1045, 1053, 1066, 1069], "is_separ": [1010, 1032, 1045, 1057, 1066], "depth": [1010, 1022, 1045, 1066, 1313, 1378], "chain": [1010, 1022, 1045, 1066, 1261, 1887], "form": [1010, 1022, 1045, 1066, 1118, 1158, 1262, 1288, 1290, 1343, 1893, 1902], "contains_branch": [1010, 1020, 1045, 1066], "tree": [1010, 1020, 1021, 1045, 1066], "contains_branch_seper": [1010, 1021, 1045, 1066], "other_transform": [1010, 1021, 1045, 1066], "branch": [1010, 1021, 1045, 1066, 1887, 1888], "cancel": [1010, 1019, 1045, 1066], "term": [1010, 1019, 1045, 1066, 1886, 1889], "interfac": [1010, 1015, 1045, 1046, 1066, 1343, 1874, 1886, 1893], "transform_affin": [1010, 1037, 1040, 1045, 1061, 1062, 1066, 1073], "transform_bbox": [1010, 1039, 1045, 1066], "get_affin": [1010, 1024, 1045, 1051, 1066], "get_matrix": [1010, 1025, 1045, 1052, 1066], "transform_point": [1010, 1044, 1045, 1066], "transform_path": [1010, 1041, 1042, 1043, 1045, 1063, 1064, 1065, 1066, 1074], "transform_path_affin": [1010, 1042, 1043, 1045, 1064, 1065, 1066, 1074], "transform_path_non_affin": [1010, 1042, 1043, 1045, 1064, 1065, 1066, 1074], "transform_angl": [1010, 1038, 1045, 1066], "pt": [1010, 1038, 1045, 1066], "pushoff": [1010, 1038, 1045, 1066], "1e": [1010, 1038, 1045, 1066, 1652, 1653, 1890, 1893], "invalid_non_affin": [1010, 1013, 1045, 1066], "invalid_affin": [1010, 1012, 1045, 1066], "invalid": [1010, 1011, 1028, 1034, 1035, 1045, 1066, 1278, 1280, 1309, 1310, 1343], "is_affin": [1010, 1030, 1045, 1056, 1066], "is_bbox": [1010, 1031, 1045, 1066], "pass_through": [1010, 1034, 1045, 1066], "ancestor": [1010, 1028, 1034, 1045, 1066], "even": [1010, 1019, 1034, 1045, 1066, 1158, 1262, 1303, 1387, 1411, 1904], "transformnod": [1010, 1028, 1045, 1066], "set_children": [1010, 1035, 1045, 1066], "let": [1010, 1035, 1045, 1066, 1890, 1892, 1893, 1895, 1897, 1898, 1901, 1902, 1903, 1904], "system": [1010, 1035, 1045, 1066, 1118, 1300, 1398, 1886, 1888, 1891, 1896, 1900, 1902], "know": [1010, 1035, 1045, 1066, 1096, 1393, 1404], "frozen": [1010, 1019, 1023, 1045, 1050, 1066], "node": [1010, 1023, 1045, 1050, 1066, 1159, 1160, 1161, 1295, 1299, 1405], "previous": [1010, 1023, 1045, 1050, 1066, 1097, 1263, 1280, 1328, 1554, 1886], "known": [1010, 1023, 1045, 1050, 1066], "deepcopi": [1010, 1023, 1045, 1050, 1066], "might": [1010, 1023, 1045, 1050, 1066, 1277, 1371, 1378, 1896], "_apply_theta_transform": [1016, 1067], "noth": [1017, 1075, 1084, 1097, 1104, 1288], "regard": 1019, "likewis": [1019, 1263], "naiv": 1019, "inaccuraci": 1019, "guarante": [1019, 1347, 1361, 1374, 1381], "wherea": 1019, "small": [1019, 1133, 1277, 1278, 1299, 1309, 1310, 1398, 1886, 1890, 1891], "epsilon": [1019, 1341], "mutat": 1019, "won": 1019, "anymor": 1019, "routin": 1020, "therefor": [1020, 1258, 1402, 1403], "situat": [1020, 1158], "whole": [1020, 1126, 1130, 1134, 1136, 1535, 1543, 1579, 1612, 1707, 1710, 1717, 1720, 1727, 1730, 1737, 1740, 1751, 1760, 1776, 1886], "x_isdata": 1021, "y_isdata": 1021, "tran": 1021, "transdata": [1021, 1108, 1270], "special": [1022, 1290, 1312], "composit": 1022, "hold": [1029, 1055, 1071], "temporari": [1029, 1055, 1071], "op": [1037, 1040, 1061, 1062, 1073], "measur": [1038, 1144, 1152, 1298, 1299], "smarter": 1039, "transformedbbox": [1039, 1326], "began": [1041, 1063], "kept": [1044, 1266, 1274, 1387, 1886], "backcompat": 1044, "capabl": [1044, 1886, 1887], "rest": 1045, "compon": [1045, 1133, 1136, 1138, 1299, 1413, 1414, 1487, 1490, 1491, 1492, 1493, 1495, 1496, 1499, 1506, 1507, 1508, 1510, 1512, 1513, 1515, 1516, 1517, 1520, 1521, 1523, 1527, 1528, 1535, 1544, 1554, 1565, 1566, 1579, 1593, 1595, 1596, 1597, 1599, 1600, 1601, 1602, 1604, 1606, 1607, 1608, 1609, 1610, 1612, 1626, 1628, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1638, 1639, 1640, 1641, 1643, 1644, 1646, 1647, 1649, 1650, 1651, 1652, 1656, 1657, 1659, 1660, 1662, 1663, 1665, 1666, 1667, 1668, 1669, 1671, 1672, 1674, 1675, 1676, 1678, 1679, 1680, 1681, 1682, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1813, 1814, 1816, 1893], "x_": 1045, "frac": [1045, 1144, 1668, 1706], "r_": 1045, "scale_transform": [1045, 1048, 1067], "bboxbas": [1045, 1048, 1222], "to_valu": [1045, 1059], "cannot": [1057, 1160, 1161, 1280, 1295, 1384, 1385, 1394, 1490], "sin": 1066, "screen": [1066, 1118, 1128, 1299], "circular": [1066, 1127], "arc": 1066, "_interpolation_step": 1066, "tr": [1066, 1073], "ensur": [1075, 1184, 1266, 1387, 1406, 1407, 1411, 1487, 1488, 1889, 1890], "strictli": [1075, 1395], "task": [1075, 1893], "deleg": 1075, "set_axi": [1075, 1083, 1087, 1095, 1097, 1101], "__call__": [1075, 1077, 1082, 1087, 1088, 1097, 1098], "nonsingular": [1075, 1081, 1097, 1100], "singular": [1075, 1081, 1097, 1100, 1262, 1288, 1290], "view_limit": [1075, 1086, 1097, 1102], "maxtick": [1075, 1076, 1082, 1097], "tick_valu": [1075, 1085, 1097], "set_param": [1075, 1084, 1097, 1277], "raise_if_exce": [1075, 1082, 1097], "longer": [1075, 1082, 1097, 1157, 1299, 1886], "create_dummy_axi": [1075, 1080, 1087, 1097], "v0": [1081, 1097, 1100], "v1": [1081, 1097, 1100], "inf": [1081, 1100, 1306, 1402, 1403, 1559, 1563, 1618, 1620, 1656, 1714, 1715, 1734, 1735, 1745, 1747, 1755, 1756, 1766, 1768, 1786, 1787], "slop": [1081, 1100], "expand": [1081, 1100, 1123, 1133, 1215, 1288, 1290, 1299, 1355, 1372, 1375, 1379, 1382, 1398], "interv": [1081, 1100, 1136, 1138, 1160, 1161, 1280, 1372, 1379, 1393, 1403, 1414, 1899], "appropri": [1081, 1100, 1288, 1290], "modif": [1081, 1100], "immedi": 1082, "user": [1082, 1118, 1164, 1184, 1266, 1268, 1269, 1307, 1308, 1339, 1341, 1414, 1668, 1706, 1820, 1843, 1865, 1874, 1882, 1886, 1896], "huge": 1082, "strang": 1082, "would": [1082, 1118, 1133, 1137, 1159, 1281, 1307, 1308, 1326, 1356, 1411, 1668, 1706, 1890, 1899], "except": [1082, 1097, 1107, 1117, 1125, 1129, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1386, 1387, 1388, 1389, 1392, 1395, 1403, 1414, 1415, 1418, 1438, 1668, 1706], "To": [1085, 1117, 1120, 1134, 1144, 1152, 1157, 1261, 1278, 1279, 1280, 1289, 1291, 1294, 1298, 1299, 1306, 1386, 1406, 1407, 1668, 1706], "behaviour": [1086, 1102, 1901], "format_tick": [1087, 1092], "format_data": [1087, 1090], "format_data_short": [1087, 1091], "short": [1087, 1091, 1343, 1886, 1891], "get_offset": [1087, 1093, 1261], "set_loc": [1087, 1096], "fix_minu": [1087, 1089], "want": [1087, 1089, 1118, 1133, 1258, 1277, 1295, 1299, 1306, 1307, 1308, 1341, 1374, 1381, 1402, 1403, 1904], "hyphen": [1087, 1089], "proper": [1087, 1089, 1266], "unicod": [1087, 1089], "2212": [1087, 1089], "typograph": [1087, 1089, 1306], "perform": [1087, 1089, 1107, 1117, 1122, 1136, 1139, 1144, 1152, 1279, 1283, 1291, 1298, 1305, 1386, 1392, 1394, 1418, 1887], "rc": [1087, 1089, 1123, 1134, 1157, 1158, 1261, 1262, 1263, 1264, 1266, 1288, 1289, 1290, 1295, 1296, 1300, 1306, 1365, 1370, 1377, 1386, 1387, 1401, 1402, 1403, 1415, 1416, 1419], "unicode_minu": [1087, 1089], "becaus": [1096, 1132, 1266, 1277, 1306, 1374, 1381, 1402, 1403, 1404, 1889], "work": [1097, 1262, 1288, 1290, 1296, 1306, 1347, 1361, 1374, 1381, 1387, 1402, 1403, 1436, 1886, 1888, 1892, 1901, 1903], "entir": [1097, 1413, 1414], "45": [1097, 1299, 1890, 1893], "theta_label": 1103, "callabl": [1107, 1109, 1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1132, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1311, 1313, 1321, 1341, 1386, 1387, 1396, 1398, 1414, 1418, 1438, 1668, 1706], "mlab": [1107, 1144, 1152, 1298, 1386, 1414, 1418], "normalis": [1107, 1418], "usevlin": [1107, 1418], "addition": [1107, 1127, 1266, 1278, 1288, 1290, 1295, 1309, 1310, 1349, 1373, 1380, 1418, 1549, 1550], "maxlag": [1107, 1418], "lag": [1107, 1418], "len": [1107, 1133, 1136, 1152, 1294, 1295, 1298, 1299, 1389, 1392, 1418, 1438], "linecollect": [1107, 1157, 1158, 1264, 1392, 1395, 1413, 1414, 1415, 1418], "accept": [1107, 1117, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1279, 1288, 1289, 1290, 1291, 1294, 1296, 1298, 1299, 1300, 1306, 1307, 1308, 1328, 1373, 1380, 1386, 1388, 1389, 1392, 1393, 1395, 1402, 1403, 1414, 1415, 1418, 1886, 1889], "interpret": [1107, 1117, 1118, 1132, 1133, 1134, 1136, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1279, 1280, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1341, 1386, 1388, 1389, 1392, 1395, 1402, 1403, 1414, 1415, 1418], "dedic": [1108, 1402, 1403], "necessari": [1108, 1222, 1295, 1296, 1375, 1382, 1402, 1888, 1901], "manual": [1108, 1895], "def": [1109, 1118, 1162, 1261], "lowlevel": 1110, "wrap": [1117, 1281, 1291, 1362, 1398], "signal": [1117, 1144, 1152, 1159, 1279, 1291, 1298, 1386, 1886, 1901], "sampl": [1117, 1144, 1152, 1263, 1279, 1291, 1298, 1386, 1893], "frequenc": [1117, 1144, 1152, 1279, 1291, 1298, 1307, 1386], "fourier": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "freq": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "window_han": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "window_non": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "blackman": [1117, 1144, 1152, 1266, 1279, 1291, 1298, 1386], "ham": [1117, 1144, 1152, 1266, 1279, 1291, 1298, 1386, 1668, 1706], "bartlett": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "get_window": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "onesid": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "twosid": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "complex": [1117, 1144, 1152, 1279, 1289, 1291, 1298, 1386, 1418, 1438, 1887, 1902], "while": [1117, 1139, 1144, 1152, 1184, 1279, 1290, 1291, 1298, 1386, 1393, 1406, 1407, 1888, 1890], "fft": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "resolv": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "peak": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "detail": [1117, 1118, 1119, 1144, 1146, 1152, 1157, 1216, 1263, 1266, 1278, 1279, 1288, 1290, 1291, 1296, 1298, 1309, 1310, 1317, 1342, 1386, 1387, 1388, 1393, 1395, 1893, 1896, 1902], "extent": [1117, 1137, 1144, 1152, 1222, 1261, 1266, 1279, 1291, 1298, 1386, 1402, 1403], "acquir": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "downsampl": [1117, 1144, 1152, 1266, 1279, 1291, 1298, 1386], "baseband": [1117, 1144, 1152, 1279, 1291, 1298, 1386], "dpi": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1313, 1387, 1396, 1398], "corner": [1117, 1118, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1266, 1268, 1269, 1270, 1279, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1300, 1311, 1313, 1317, 1387, 1396, 1398, 1402, 1403, 1668, 1706, 1892], "antialias": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1266, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387, 1402, 1403], "aa": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "clip_box": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1387, 1396, 1398], "clip_on": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1311, 1387, 1396, 1398], "clip_path": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1387, 1396, 1398], "dash_capstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "capstyl": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "butt": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "dash_joinstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "joinstyl": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "miter": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "bevel": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "dash": [1117, 1125, 1128, 1129, 1133, 1137, 1144, 1152, 1157, 1158, 1160, 1161, 1258, 1261, 1264, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387, 1392, 1402, 1415], "ink": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1158, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "1d": [1117, 1125, 1128, 1129, 1131, 1133, 1135, 1136, 1144, 1148, 1149, 1152, 1157, 1158, 1258, 1263, 1279, 1289, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1387, 1393, 1395, 1889], "drawstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387, 1393], "mid": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1160, 1161, 1258, 1262, 1279, 1291, 1295, 1296, 1298, 1299, 1387, 1393], "fillstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "gapcolor": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "seq": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1134, 1144, 1152, 1157, 1258, 1268, 1279, 1291, 1295, 1296, 1298, 1387], "lw": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1343, 1387], "markerstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1306, 1387], "markeredgecolor": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "mec": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "markeredgewidth": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "mew": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "markerfacecolor": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "mfc": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "markerfacecoloralt": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "mfcalt": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "markeveri": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "abstractpatheffect": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1340, 1387, 1396, 1398], "pickradiu": [1117, 1125, 1128, 1129, 1133, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1387], "unknown": [1117, 1120, 1125, 1128, 1129, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1387, 1398], "sketch_param": [1117, 1120, 1125, 1126, 1128, 1129, 1130, 1133, 1134, 1137, 1144, 1152, 1157, 1160, 1161, 1258, 1261, 1268, 1279, 1288, 1290, 1291, 1295, 1296, 1298, 1299, 1311, 1387, 1396, 1398], "solid_capstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "solid_joinstyl": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "xdata": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "ydata": [1117, 1125, 1128, 1129, 1144, 1152, 1157, 1258, 1279, 1291, 1295, 1296, 1298, 1387], "unwrap": [1117, 1279, 1291, 1386], "textcoord": 1118, "arrowprop": [1118, 1120], "annotation_clip": 1118, "simplest": 1118, "anoth": [1118, 1290, 1384, 1385, 1395, 1812, 1899, 1903, 1904], "fraction": [1118, 1120, 1262, 1275, 1294], "subfigur": 1118, "parent": [1118, 1270, 1307, 1308, 1891], "who": [1118, 1406, 1407], "usabl": 1118, "rendererbas": [1118, 1154, 1222], "xcoord": 1118, "ycoord": 1118, "guid": [1118, 1270], "well": [1118, 1144, 1152, 1157, 1278, 1298, 1306, 1309, 1310, 1328, 1386, 1393, 1887, 1891, 1893, 1904], "fancyarrowpatch": [1118, 1395], "histor": [1118, 1296], "wai": [1118, 1133, 1160, 1161, 1281, 1289, 1295, 1317, 1393, 1395, 1402, 1403, 1892], "fanci": 1118, "arrowstyl": [1118, 1120, 1395], "headwidth": [1118, 1299], "head": [1118, 1120, 1299, 1300, 1392], "headlength": [1118, 1299], "shrink": 1118, "exact": [1118, 1402, 1403], "connectionstyl": 1118, "relpo": 1118, "patcha": 1118, "patchb": 1118, "shrinka": 1118, "shrinkb": 1118, "mutation_scal": 1118, "mutation_aspect": 1118, "pathpatch": 1118, "former": [1119, 1295], "affect": [1119, 1120, 1288, 1299, 1322, 1323, 1401, 1886, 1897], "further": [1119, 1123, 1127, 1133, 1266, 1289, 1317, 1347, 1361, 1374, 1381, 1387, 1902], "you": [1119, 1132, 1133, 1144, 1152, 1158, 1159, 1160, 1161, 1164, 1184, 1229, 1243, 1258, 1283, 1288, 1289, 1290, 1295, 1296, 1298, 1299, 1306, 1316, 1341, 1346, 1347, 1361, 1374, 1375, 1381, 1382, 1386, 1387, 1393, 1398, 1402, 1403, 1404, 1436, 1668, 1706, 1888, 1894, 1895, 1896, 1900, 1902, 1904], "yourself": [1119, 1164, 1184, 1375, 1382, 1436, 1891], "001": [1120, 1893], "tail": [1120, 1299, 1300], "length_includes_head": 1120, "head_width": 1120, "head_length": 1120, "overhang": 1120, "swept": [1120, 1299], "neg": [1120, 1134, 1372, 1379, 1402, 1810, 1880], "greater": [1120, 1136, 1236, 1250, 1288, 1290, 1311, 1371, 1372, 1378, 1379], "head_starts_at_zero": 1120, "edgecolor": [1120, 1126, 1130, 1131, 1133, 1134, 1135, 1137, 1160, 1161, 1261, 1268, 1288, 1290, 1299, 1306, 1897], "ec": [1120, 1126, 1130, 1133, 1134, 1137, 1160, 1161, 1261, 1268, 1288, 1290, 1299], "hatch": [1120, 1126, 1130, 1133, 1134, 1137, 1160, 1161, 1261, 1268, 1288, 1290, 1294, 1299, 1403], "fancyarrow": 1120, "produc": [1120, 1136, 1138, 1266, 1289, 1290, 1392, 1810, 1880, 1889, 1897, 1902], "squar": [1120, 1127, 1157, 1164, 1266, 1294, 1295, 1317, 1387, 1388, 1668, 1706], "leav": [1122, 1290, 1371, 1378, 1395, 1888], "unchang": [1122, 1371, 1378, 1400, 1401], "3d": [1122, 1277], "three": [1122, 1138, 1223, 1266, 1277, 1365, 1404, 1891, 1904], "Then": [1122, 1888], "regardless": [1122, 1126, 1128, 1130, 1288, 1360, 1369, 1376], "unlik": [1123, 1144, 1152, 1298, 1386], "autolimit_mod": 1123, "round_numb": 1123, "expans": [1123, 1375, 1382, 1394], "reus": 1123, "behav": [1123, 1349], "preserv": [1123, 1280], "preexist": 1123, "revers": [1123, 1262, 1371, 1378, 1438], "altern": [1123, 1261, 1262, 1288, 1290, 1295, 1370, 1377, 1398, 1404, 1888], "arbitrari": [1125, 1129, 1184, 1289, 1299, 1375, 1382, 1896], "thick": [1125, 1128, 1129, 1157], "red": [1125, 1128, 1129, 1131, 1135, 1148, 1149, 1157, 1159, 1295, 1343, 1398, 1400, 1402, 1403], "middl": [1125, 1126, 1129, 1130, 1133, 1299, 1300, 1317], "75": [1125, 1129, 1891, 1892, 1893, 1895, 1902], "close": [1126, 1130, 1160, 1161, 1389, 1395, 1396, 1403, 1439, 1463, 1880, 1889, 1892, 1899, 1901], "xlim": [1127, 1311, 1371], "ylim": [1127, 1311, 1378], "explicit": [1127, 1133, 1261, 1263, 1266, 1288, 1289, 1290, 1295, 1299, 1306, 1402, 1403, 1486, 1793, 1794, 1886, 1892], "disabl": [1127, 1325, 1341], "larg": [1127, 1262, 1288, 1290, 1398, 1400], "enough": 1127, "notifi": [1127, 1371, 1378, 1402, 1403], "thu": [1128, 1266, 1290], "exponenti": 1128, "decai": 1128, "semilog": 1128, "law": [1128, 1263], "howev": [1128, 1133, 1158, 1184, 1262, 1289, 1290, 1296, 1393, 1394, 1402, 1403, 1404, 1889, 1895, 1904], "undefin": 1128, "transax": [1128, 1268, 1270, 1326, 1398], "through": [1128, 1132, 1294, 1388, 1392, 1886, 1887], "green": [1130, 1157, 1295, 1343, 1393], "transluc": [1130, 1400], "55": [1130, 1891, 1893, 1901, 1902], "blow": [1131, 1135, 1148, 1149], "nsector": [1131, 1135, 1148, 1149], "16": [1131, 1135, 1148, 1149, 1355, 1890, 1891, 1893, 1895, 1897, 1898, 1901, 1902, 1903], "cardin": [1131, 1135, 1148, 1149, 1315, 1317], "blowto": [1131, 1135, 1148, 1149], "pi": [1131, 1135, 1148, 1149, 1362], "rotat": [1131, 1133, 1135, 1148, 1149, 1294, 1299, 1398, 1400, 1889, 1891], "pollut": [1131, 1135, 1148, 1149], "black": [1131, 1134, 1135, 1137, 1148, 1149, 1295, 1356, 1398, 1886], "rgb": [1131, 1135, 1148, 1149, 1266, 1289, 1290, 1306], "cm": [1131, 1135, 1148, 1149], "calm_limit": [1131, 1135, 1148, 1149], "calm": [1131, 1135, 1148, 1149], "label_typ": 1132, "barcontain": [1132, 1134, 1262], "fit": [1132, 1266, 1387], "unnam": 1132, "preced": [1132, 1134, 1294, 1295, 1306, 1404], "galleri": [1132, 1134, 1157, 1266, 1288, 1290, 1294, 1307, 1308, 1324, 1345, 1346], "lines_bars_and_mark": [1132, 1134], "bar_label_demo": 1132, "horizontalalign": [1132, 1365, 1370, 1374, 1377, 1381, 1398], "verticalalign": [1132, 1365, 1374, 1381, 1398], "va": [1132, 1398], "tradition": 1133, "meteorologi": 1133, "technic": [1133, 1295, 1328], "As": [1133, 1164, 1184, 1299, 1402, 1403, 1886, 1888, 1890, 1904], "oppos": 1133, "quantit": 1133, "slant": 1133, "triangl": [1133, 1299, 1402, 1403, 1404, 1405], "variou": [1133, 1295, 1347, 1361, 1374, 1381], "increment": 1133, "schemat": 1133, "largest": [1133, 1261], "those": [1133, 1136, 1138, 1288, 1290, 1295, 1306, 1386, 1393, 1406, 1407, 1668, 1706, 1896], "smallest": [1133, 1444, 1454, 1461, 1468, 1476, 1484], "There": [1133, 1266, 1289, 1290, 1295, 1347, 1361, 1374, 1381], "cours": 1133, "ever": 1133, "easili": [1133, 1900], "distinguish": 1133, "shown": [1133, 1136, 1138, 1281, 1299, 1315, 1886, 1889, 1891], "65": [1133, 1891, 1893, 1902], "en": [1133, 1136], "wikipedia": [1133, 1136], "wiki": [1133, 1136], "wind_barb": 1133, "pivot": [1133, 1299], "meshgrid": [1133, 1299, 1395], "shaft": [1133, 1299], "barbcolor": 1133, "against": [1133, 1394, 1814, 1815], "shift": [1133, 1262], "awai": 1133, "flagcolor": 1133, "coeffici": [1133, 1436, 1571, 1572, 1819, 1833, 1882, 1896, 1897], "featur": [1133, 1290, 1393, 1886, 1898], "wish": [1133, 1158, 1306, 1893, 1902, 1903, 1904], "These": [1133, 1157, 1266, 1280, 1289, 1295, 1312, 1342, 1343, 1373, 1375, 1380, 1382, 1396, 1811, 1875, 1892, 1893, 1895, 1901, 1904], "twice": [1133, 1317], "emptybarb": 1133, "low": 1133, "fill_empti": 1133, "transpar": [1133, 1158, 1261, 1266, 1268, 1288, 1289, 1290, 1306, 1400, 1402, 1403], "alloc": [1133, 1342], "nearest": [1133, 1266, 1281, 1288, 1290, 1356, 1444, 1454, 1461, 1468, 1476, 1484], "truncat": 1133, "lowest": [1133, 1136, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "barb_incr": 1133, "flip_barb": 1133, "toward": [1133, 1262], "pressur": 1133, "northern": 1133, "hemispher": 1133, "flip": [1133, 1136, 1371, 1378], "polycollect": [1133, 1137, 1160, 1161, 1261, 1288, 1290, 1299, 1388, 1413, 1414], "clim": [1133, 1137, 1160, 1161, 1261, 1288, 1290, 1299], "rgba": [1133, 1137, 1160, 1161, 1261, 1266, 1288, 1289, 1290, 1299, 1306], "face": [1133, 1134, 1137, 1160, 1161, 1261, 1288, 1290, 1295, 1299, 1300, 1306, 1404], "thereof": [1133, 1137, 1160, 1161, 1261, 1288, 1290, 1299], "offset_transform": [1133, 1137, 1160, 1161, 1261, 1288, 1290, 1299], "transoffset": [1133, 1137, 1160, 1161, 1261, 1288, 1290, 1299], "verts_and_cod": [1133, 1137, 1160, 1161, 1261, 1288, 1299], "ment": 1134, "don": [1134, 1306, 1404], "tick_label": 1134, "de": 1134, "duplic": 1134, "best": [1134, 1294, 1892, 1893, 1898], "symmetr": [1134, 1157, 1362, 1388], "errorbar_featur": [1134, 1157], "capsiz": [1134, 1157], "error_kw": 1134, "horizontal_barchart_distribut": 1134, "patch_artist": [1136, 1138], "bootstrap": 1136, "usermedian": 1136, "conf_interv": 1136, "meanlin": [1136, 1138], "showmean": [1136, 1138, 1413, 1414], "showcap": [1136, 1138], "showbox": [1136, 1138], "showflier": [1136, 1138], "boxprop": [1136, 1138], "flierprop": [1136, 1138], "medianprop": [1136, 1138], "meanprop": [1136, 1138], "capprop": [1136, 1138], "whiskerprop": [1136, 1138], "manage_tick": [1136, 1138], "autorang": 1136, "capwidth": [1136, 1138], "quartil": [1136, 1138], "q1": [1136, 1138], "third": [1136, 1138, 1295, 1823, 1848, 1882, 1886], "q3": [1136, 1138], "median": [1136, 1138, 1413, 1414], "5x": 1136, "inter": 1136, "iqr": 1136, "flier": [1136, 1138], "past": [1136, 1138], "box_plot": 1136, "5iqr": 1136, "confid": [1136, 1138], "ci": [1136, 1138], "less": [1136, 1262, 1263, 1299, 1886], "distinct": 1136, "consist": [1136, 1295, 1886, 1890, 1891, 1897, 1898, 1900, 1903], "visual": [1136, 1266, 1387, 1890, 1893, 1895, 1897, 1898, 1900, 1901, 1902], "hide": 1136, "datum": 1136, "highest": [1136, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "tukei": 1136, "definit": [1136, 1160, 1161, 1817], "percentil": 1136, "particular": [1136, 1281, 1299, 1306, 1312, 1887, 1902], "outlier": [1136, 1138, 1262, 1263], "asymptot": 1136, "approxim": [1136, 1261, 1886, 1895], "mcgill": 1136, "larsen": 1136, "1978": 1136, "kendal": 1136, "stuart": 1136, "1967": 1136, "extrem": [1136, 1138, 1902], "smaller": [1136, 1262, 1266, 1275, 1290, 1299, 1315, 1386], "distribut": [1136, 1262, 1413, 1414, 1886, 1891, 1893, 1902], "25th": 1136, "75th": 1136, "try": [1136, 1138, 1346], "Not": [1136, 1138], "shownotch": [1136, 1138], "That": [1136, 1138], "central": 1136, "arithmet": 1136, "estim": [1136, 1413, 1414], "probabl": [1136, 1262, 1294, 1395, 1668, 1706], "xwidth": 1137, "yheight": 1137, "blue": [1137, 1159, 1295, 1343], "interleav": 1137, "stat": [1138, 1413], "med": 1138, "whislo": 1138, "whishi": 1138, "cilo": 1138, "cihi": 1138, "mislead": 1139, "azimuth": 1139, "contourset": [1142, 1402, 1403], "contourlabel": 1142, "noverlap": [1144, 1152, 1298, 1386], "scale_by_freq": [1144, 1152, 1298, 1386], "c_": 1144, "p_": [1144, 1152, 1298, 1904], "xx": [1144, 1298, 1398], "yy": 1144, "block": [1144, 1152, 1298, 1386, 1668, 1706, 1893], "NOT": [1144, 1152, 1298, 1386], "incorrect": [1144, 1152, 1298, 1386], "ing": [1144, 1152, 1298, 1386], "trend": [1144, 1152, 1298, 1386], "matlab": [1144, 1152, 1298, 1386, 1392], "modul": [1144, 1152, 1298, 1386, 1436, 1438, 1486, 1880, 1886], "detrend_mean": [1144, 1152, 1298, 1386], "detrend_linear": [1144, 1152, 1298, 1386], "hz": [1144, 1152, 1298, 1386], "compat": [1144, 1152, 1157, 1298, 1343, 1386, 1395], "cxy": 1144, "bendat": [1144, 1152, 1298], "piersol": [1144, 1152, 1298], "analysi": [1144, 1152, 1298, 1887], "procedur": [1144, 1152, 1298], "john": [1144, 1152, 1298], "son": [1144, 1152, 1298], "1986": [1144, 1152, 1298], "backend_bas": [1146, 1184], "linspac": [1148, 1149, 1438, 1889, 1890, 1900], "return_lin": [1152, 1298], "welch": [1152, 1298], "averag": [1152, 1261, 1298, 1299, 1896], "periodogram": [1152, 1298, 1386], "loss": [1152, 1298], "due": [1152, 1160, 1161, 1288, 1290, 1298, 1317, 1875, 1886, 1890, 1898], "pxy": 1152, "log_": [1152, 1261, 1298], "decibel": [1152, 1298], "though": [1152, 1298, 1889, 1904], "mousebutton": [1153, 1391], "press": [1153, 1391], "elinewidth": 1157, "barsabov": 1157, "lolim": 1157, "uplim": 1157, "xlolim": 1157, "xuplim": 1157, "erroreveri": 1157, "capthick": 1157, "insensit": 1157, "sensibl": 1157, "backward": [1157, 1395, 1901], "ride": 1157, "releas": [1157, 1886, 1888], "caret": 1157, "lim": [1157, 1890, 1901], "tricki": 1157, "upward": [1157, 1266], "errorbarcontain": 1157, "plotlin": 1157, "caplin": 1157, "barlinecol": 1157, "rand": 1157, "alias": [1157, 1266, 1343, 1349], "linelength": 1158, "commonli": [1158, 1261, 1295], "neurosci": 1158, "neural": 1158, "spike": 1158, "dot": [1158, 1264, 1295, 1299, 1392, 1402, 1415, 1668, 1706], "discret": [1158, 1261], "arriv": 1158, "peopl": 1158, "busi": 1158, "dai": [1158, 1902], "month": [1158, 1895], "hurrican": 1158, "year": [1158, 1371, 1884], "centuri": 1158, "practic": 1158, "arrang": [1158, 1262, 1668, 1706], "orthogon": [1158, 1470], "stretch": [1158, 1266, 1398], "opaqu": [1158, 1261, 1266, 1288, 1289, 1290, 1306, 1400, 1402, 1403], "dashdot": [1158, 1264, 1402, 1415], "onoffseq": 1158, "eventcollect": 1158, "legal": [1159, 1388], "section": [1160, 1161, 1288, 1290, 1295, 1386, 1894, 1896, 1900, 1902, 1904], "impli": [1160, 1161, 1893], "isol": [1160, 1161], "unfil": [1160, 1161, 1262], "adjac": [1160, 1161, 1288, 1290, 1356], "semant": [1160, 1161, 1262], "often": [1160, 1161, 1891, 1896], "intersect": [1160, 1161, 1299, 1446, 1811, 1812, 1880], "occur": [1160, 1161, 1266, 1393], "continu": [1160, 1161, 1393, 1395, 1904], "constantli": [1160, 1161, 1393], "recurs": 1162, "isinst": [1162, 1438], "comma": 1164, "enclos": 1164, "bracket": [1164, 1886], "colorbar": [1164, 1402, 1403, 1886], "fmt_xdata": 1165, "fall": [1165, 1166, 1402, 1901], "fmt_ydata": 1166, "chosen": [1179, 1261, 1268, 1269, 1278, 1295, 1309, 1310, 1325, 1886], "explan": [1204, 1288, 1402, 1403, 1404], "sinc": [1207, 1266, 1387, 1392, 1886, 1897, 1901], "canva": [1207, 1222, 1266], "get_render": [1207, 1222], "wiggl": [1215, 1355, 1388], "perpendicular": [1215, 1355, 1392], "shrunken": [1215, 1355], "clockwis": [1218, 1294, 1299, 1300, 1358, 1360], "counterclockwis": [1218, 1294, 1358], "bbox_extra_artist": 1222, "for_layout_onli": 1222, "_axes_loc": 1222, "caller": 1222, "tightbbox": 1222, "compar": [1222, 1289, 1886, 1889, 1897, 1898], "spine": [1222, 1228], "flush": [1223, 1365], "ticklabel": [1228, 1240, 1254, 1322, 1323, 1374, 1381], "primarili": [1230, 1231, 1232, 1244, 1245, 1246], "tick1": [1232, 1246], "tick2": [1232, 1246], "henc": [1242, 1256, 1402, 1403, 1889, 1896, 1897, 1898, 1902], "suppli": [1258, 1261, 1263, 1266, 1288, 1289, 1290, 1306, 1307, 1308, 1341, 1402, 1403, 1668, 1706], "compris": 1258, "anyth": [1259, 1266, 1893], "yscale": [1261, 1311], "reduce_c_funct": 1261, "mincnt": 1261, "accumul": [1261, 1262], "nx": [1261, 1263], "ny": [1261, 1263], "zig": 1261, "zag": 1261, "illustr": 1261, "logarithm": [1261, 1263, 1278, 1309, 1310], "lognorm": [1261, 1263], "log10": [1261, 1279, 1386], "cell": [1261, 1289, 1395, 1396], "assign": [1261, 1295, 1388, 1394, 1402, 1403], "mx2": 1261, "get_arrai": 1261, "hbar": 1261, "vbar": 1261, "colormapnorm": [1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "symlog": [1261, 1263, 1266, 1288, 1289, 1290, 1306, 1373, 1380, 1402, 1403], "logit": [1261, 1263, 1266, 1288, 1289, 1290, 1306, 1373, 1380, 1402, 1403], "get_scale_nam": [1261, 1263, 1266, 1288, 1289, 1290, 1306, 1402, 1403], "instanti": [1261, 1263, 1266, 1270, 1288, 1289, 1290, 1306, 1402, 1403], "sometim": [1261, 1295, 1388], "lead": [1261, 1266, 1327], "unsightli": 1261, "unpaint": 1261, "outlin": [1261, 1289], "aggreg": 1261, "amax": 1261, "cumul": 1262, "histtyp": 1262, "rwidth": 1262, "n0": 1262, "n1": 1262, "patches0": 1262, "patches1": 1262, "unequ": 1262, "righthand": 1262, "word": [1262, 1266], "strategi": 1262, "histogram_bin_edg": 1262, "fd": 1262, "doan": 1262, "scott": [1262, 1414], "stone": 1262, "rice": 1262, "sturg": 1262, "raw": [1262, 1266], "diff": [1262, 1683], "datapoint": 1262, "amount": [1262, 1386], "barstack": 1262, "stepfil": 1262, "tradit": 1262, "lineplot": 1262, "nbin": [1262, 1277], "data1": 1262, "data2": 1262, "significantli": [1262, 1392], "acceler": 1262, "cmin": [1263, 1413, 1414], "cmax": [1263, 1413, 1414], "x_edg": 1263, "y_edg": 1263, "leftmost": 1263, "rightmost": 1263, "talli": 1263, "w_i": 1263, "weigh": 1263, "x_i": [1263, 1668, 1706], "y_i": 1263, "upon": 1263, "bi": 1263, "xedg": 1263, "yedg": 1263, "accomplish": 1263, "powernorm": 1263, "begin": [1264, 1388, 1415, 1893], "interpolation_stag": 1266, "filternorm": 1266, "filterrad": 1266, "resampl": 1266, "grayscal": 1266, "grai": 1266, "255": [1266, 1289, 1290], "artifact": [1266, 1288], "images_contours_and_field": [1266, 1288, 1290], "image_antialias": 1266, "pil": 1266, "particularli": [1266, 1387], "shortcut": [1266, 1295, 1343, 1387, 1402, 1403, 1865], "bilinear": 1266, "bicub": 1266, "spline16": 1266, "spline36": 1266, "han": 1266, "hermit": 1266, "kaiser": 1266, "quadric": 1266, "catrom": 1266, "bessel": 1266, "mitchel": 1266, "lanczo": 1266, "svg": [1266, 1289, 1403], "down": [1266, 1299, 1886, 1889, 1902], "upsampl": 1266, "viewer": 1266, "least": [1266, 1396, 1510, 1668, 1706, 1876], "act": [1266, 1299], "anti": [1266, 1300], "happen": 1266, "interpolation_method": 1266, "overview": [1266, 1885, 1886, 1887, 1900], "discuss": [1266, 1288, 1290], "antigrain": 1266, "carri": 1266, "matric": [1266, 1387], "downward": 1266, "imshow_ext": 1266, "numcol": 1266, "numrow": 1266, "doesn": 1266, "rule": [1266, 1593, 1594, 1603, 1611, 1886, 1898, 1904], "graph": 1266, "larger": [1266, 1288, 1290, 1299, 1362], "coincid": [1266, 1394, 1411], "channel": [1266, 1888], "unassoci": 1266, "disregard": 1266, "opac": 1266, "premultipli": 1266, "adopt": 1266, "99": [1268, 1890, 1891, 1893, 1898, 1901, 1902], "api": [1268, 1269, 1270, 1307, 1308, 1339, 1886, 1887, 1890, 1902], "y0": [1268, 1270, 1402, 1403], "mark": [1268, 1280, 1406, 1407, 1413, 1414, 1895], "rectangle_patch": [1268, 1269], "connector_lin": [1268, 1269], "connectionpatch": [1268, 1269], "four": [1268, 1269, 1668, 1706, 1886, 1889, 1892], "lower_left": 1268, "upper_left": 1268, "lower_right": 1268, "upper_right": 1268, "deem": [1268, 1269], "aitoff": 1270, "hammer": 1270, "lambert": 1270, "mollweid": 1270, "rectilinear": [1270, 1356], "axes_class": 1270, "incompat": 1270, "axisartist_us": 1270, "axin1": 1270, "axin2": 1270, "decimal_plac": 1275, "decim": [1275, 1401], "isax": 1275, "fontproperti": [1275, 1300, 1398], "font": [1275, 1398, 1400], "borderpad": 1275, "whitespac": 1275, "border": [1275, 1294, 1386], "shadow": [1275, 1294], "behind": [1275, 1889], "labelspac": 1275, "005": [1275, 1299], "handlelenght": 1275, "handletextsep": 1275, "02": [1275, 1890, 1891, 1893, 1894, 1899, 1901, 1902], "borderaxespad": 1275, "involv": [1277, 1707, 1717, 1727, 1737, 1886], "maxnloc": [1277, 1402, 1403], "fmt2": [1278, 1295, 1309, 1310, 1393], "thin": [1278, 1309, 1310, 1393], "concept": [1278, 1309, 1310, 1393, 1886, 1889, 1901], "nonposit": [1278, 1309, 1310], "decad": [1278, 1309, 1310, 1375, 1382], "veri": [1278, 1288, 1309, 1310, 1891, 1892, 1893, 1902], "db": [1279, 1386], "spec": [1279, 1295, 1386, 1400], "typeerror": [1280, 1438], "xmargin": [1280, 1311], "ymargin": [1280, 1311], "alter": 1280, "assumpt": [1280, 1895], "them": [1283, 1295, 1394, 1400, 1436, 1668, 1706, 1892, 1903], "problem": [1283, 1487, 1488, 1491, 1492, 1495, 1496, 1508, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1520, 1521, 1528, 1529, 1535, 1537, 1538, 1539, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1571, 1572, 1579, 1593, 1594, 1595, 1596, 1597, 1602, 1603, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1871, 1886, 1893, 1902], "quadrilater": [1288, 1289, 1290], "slow": [1288, 1886, 1889], "much": [1288, 1290, 1899], "faster": [1288, 1289, 1290, 1306, 1902], "quad": [1288, 1290], "drop": [1288, 1290, 1886], "halfwai": [1288, 1290], "pcolormesh_grid": [1288, 1290], "force_edgecolor": [1288, 1290], "mesh": [1288, 1289, 1290], "elimin": 1288, "artifici": [1288, 1585, 1876, 1899], "stroke": 1288, "prefer": [1288, 1290, 1306, 1888], "equidist": [1288, 1290], "surround": 1288, "nrow": [1288, 1290], "ncolumn": [1288, 1290], "fastest": 1289, "lack": 1289, "position": [1289, 1402, 1403, 1404], "monoton": 1289, "fast": [1289, 1436, 1887], "slowest": 1289, "compact": 1289, "pcolorimag": 1289, "gouraud": [1290, 1404], "smooth": [1290, 1810], "cari": 1290, "misc": [1290, 1324, 1345, 1346], "rasterization_demo": [1290, 1345, 1346], "li": 1290, "almost": 1290, "slight": [1290, 1295], "irrespect": [1290, 1886], "fire": [1292, 1341], "pctdistanc": 1294, "labeldist": 1294, "startangl": 1294, "counterclock": 1294, "wedgeprop": 1294, "textprop": 1294, "rotatelabel": 1294, "wedg": 1294, "shapes_and_collect": 1294, "hatch_style_refer": 1294, "pct": 1294, "still": [1294, 1324], "beneath": 1294, "conflict": [1294, 1295], "autotext": 1294, "notat": [1295, 1401], "bo": 1295, "ditto": 1295, "pluss": 1295, "mix": [1295, 1760, 1890], "go": 1295, "could": [1295, 1668, 1706, 1886, 1896, 1898, 1900, 1903], "col": 1295, "syntax": [1295, 1668, 1706], "prop_cycl": [1295, 1306, 1311], "ro": 1295, "abbrevi": [1295, 1317], "quickli": 1295, "ambigu": 1295, "issu": [1295, 1346, 1886, 1887], "suppress": 1295, "adapt": 1295, "bubbl": 1295, "charact": [1295, 1392], "triangle_down": 1295, "triangle_up": 1295, "triangle_left": 1295, "triangle_right": 1295, "tri_down": 1295, "tri_up": 1295, "tri_left": 1295, "tri_right": 1295, "octagon": 1295, "pentagon": 1295, "star": 1295, "hexagon1": 1295, "hexagon2": 1295, "diamond": [1295, 1299], "thin_diamond": 1295, "_": 1295, "letter": [1295, 1792, 1809], "cyan": 1295, "magenta": 1295, "yellow": 1295, "white": [1295, 1897], "cn": 1295, "hex": [1295, 1438], "008000": 1295, "plain": [1296, 1401], "timezon": [1296, 1416, 1419], "axis_d": 1296, "resort": 1296, "tzinfo": [1296, 1416, 1419], "date2num": 1296, "num": 1296, "num2dat": 1296, "drang": 1296, "autodateloc": 1296, "dateloc": 1296, "autodateformatt": 1296, "dateformatt": 1296, "mathrm": 1298, "pxx": 1298, "scale_unit": [1299, 1892], "headaxislength": 1299, "uv": [1299, 1813, 1814, 1880], "gradient": [1299, 1535, 1544, 1554, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "correspondingli": 1299, "synonym": [1299, 1668, 1706], "inch": [1299, 1300], "summar": [1299, 1886], "minshaft": 1299, "terribl": 1299, "minlength": [1299, 1395], "guidelin": 1299, "proportion": 1299, "headaxi": 1299, "protrud": 1299, "broken": 1299, "labelpo": 1300, "somewher": [1300, 1897], "labelsep": 1300, "labelcolor": [1300, 1400], "font_manag": [1300, 1398], "famili": [1300, 1398], "variant": [1300, 1398], "At": [1302, 1396, 1891], "invis": [1302, 1406, 1407], "until": [1303, 1395, 1411, 1866, 1868, 1886], "redrawn": 1303, "figurecanvasbas": 1303, "draw_idl": 1303, "wa": [1303, 1356, 1898, 1901], "undo": [1305, 1895], "satisfi": 1305, "constraint": [1305, 1317, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1528, 1529, 1535, 1538, 1544, 1545, 1546, 1547, 1549, 1550, 1552, 1553, 1554, 1558, 1562, 1565, 1579, 1612, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1670, 1677, 1683, 1689, 1695, 1701, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1761, 1762, 1776, 1783, 1871, 1877, 1893], "plotnonfinit": 1306, "72": [1306, 1891, 1892, 1893, 1901], "rcparam": [1306, 1365, 1374, 1381, 1398, 1899, 1901], "indistinguish": 1306, "shorthand": [1306, 1315], "nonfinit": 1306, "bad": 1306, "set_bad": 1306, "scatterplot": 1306, "unmask": 1306, "fundament": 1306, "lambda": [1307, 1308, 1668, 1706, 1899, 1901], "reciproc": [1307, 1308], "subplots_axes_and_figur": [1307, 1308], "secondary_axi": [1307, 1308], "convers": [1307, 1308], "_secondary_ax": [1307, 1308], "secondaryaxi": [1307, 1308], "miscellan": [1307, 1308, 1398], "xtick": [1309, 1311], "ytick": [1310, 1311], "autoscale_on": 1311, "autoscalex_on": 1311, "autoscaley_on": 1311, "axisbelow": 1311, "box_aspect": 1311, "frame_on": 1311, "radii_angl": 1311, "rasterization_zord": 1311, "rgrid": 1311, "rlabel_posit": 1311, "rlim": 1311, "rscale": 1311, "rtick": 1311, "theta_direct": 1311, "theta_offset": 1311, "theta_zero_loc": 1311, "thetagrid": 1311, "thetalim": 1311, "xbound": 1311, "xticklabel": 1311, "ybound": 1311, "yticklabel": 1311, "sw": [1311, 1315, 1317, 1360], "se": [1311, 1315, 1317, 1360], "ne": [1311, 1315, 1360], "navigate_mod": 1311, "impos": 1312, "restrict": 1312, "partli": 1312, "inclus": 1314, "southwest": 1315, "diagram": 1315, "nw": [1315, 1360], "approach": [1316, 1896], "blit": 1316, "advanc": 1316, "meet": 1317, "zorder_demo": 1324, "confus": 1325, "unexpect": [1327, 1374, 1381], "transformedpath": 1328, "toolcursorposit": 1337, "navigationtoolbar2": 1337, "toler": [1341, 1535, 1547, 1579, 1612, 1648, 1652, 1653, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "hit": [1341, 1901, 1904], "pickev": 1341, "from_bound": 1342, "from_ext": 1342, "cycler": 1343, "label2": [1343, 1374, 1381], "values2": 1343, "simultan": 1343, "Its": 1343, "favor": 1343, "rcsetup": 1343, "unvalid": 1343, "deactiv": [1345, 1888], "angular": [1347, 1348], "formatstrformatt": [1347, 1361], "delet": [1347, 1361, 1374, 1381], "immin": [1347, 1361, 1374, 1381], "risk": [1347, 1361, 1374, 1381], "lost": [1347, 1361, 1374, 1381], "set_tick_param": [1347, 1361, 1374, 1381], "polarax": [1347, 1361], "get_gridlin": [1347, 1361], "get_ticklabel": [1347, 1361], "128": [1355, 1386], "pgf": 1355, "rng": 1355, "seed": [1355, 1893], "clearer": 1356, "1px": 1356, "grei": 1356, "realli": [1356, 1902], "wide": 1356, "macosx": 1356, "vertex": 1356, "anticlockwis": 1358, "minval": 1362, "maxval": 1362, "titles": [1365, 1374, 1381], "fontweight": [1365, 1374, 1381, 1398], "titleweight": [1365, 1374, 1381], "titlecolor": 1365, "titleloc": 1365, "titlei": 1365, "titlepad": 1365, "honor": [1369, 1376], "labelloc": [1370, 1377], "high": [1370, 1377, 1898], "decreas": [1371, 1378], "right_lim": 1371, "suppos": [1371, 1378], "ago": 1371, "your": [1372, 1379, 1887, 1888, 1900], "scalebas": [1373, 1380], "linearscal": [1373, 1380], "logscal": [1373, 1380], "symmetricallogscal": [1373, 1380], "logitscal": [1373, 1380], "funcscal": [1373, 1380], "register_scal": [1373, 1380], "ll": [1374, 1381], "set_": [1374, 1381], "fixedloc": [1374, 1375, 1381, 1382], "free": [1374, 1381], "label1": [1374, 1381], "set_major_formatt": [1375, 1382], "mandatori": [1375, 1382], "intent": [1375, 1382], "prevent": [1375, 1382, 1886], "surpris": [1375, 1382], "top_lim": 1378, "ocean": 1378, "surfac": 1378, "construct": [1384, 1385, 1404, 1887], "xextent": 1386, "split": 1386, "what": 1386, "success": [1386, 1893], "midpoint": 1386, "spars": [1387, 1886], "spmatrix": 1387, "unstack": 1388, "y3": 1388, "y4": 1388, "weighted_wiggl": 1388, "themeriv": 1388, "account": [1388, 1396, 1890], "layer": [1388, 1890, 1891], "streamgraph": 1388, "leebyron": 1388, "val": [1389, 1413], "steppatch": 1389, "use_line_collect": 1392, "c0": 1392, "c3": [1392, 1682, 1683], "classic": [1392, 1886], "old": [1392, 1502, 1503], "stemcontain": 1392, "markerlin": 1392, "stemlin": 1392, "inspir": 1392, "uniformli": 1393, "rare": 1393, "stick": 1394, "moreov": 1394, "bump": 1394, "arrows": 1395, "start_point": 1395, "maxlength": 1395, "integration_direct": 1395, "broken_streamlin": 1395, "evenli": 1395, "x_1d": 1395, "y_1d": 1395, "veloc": [1395, 1422, 1424, 1426, 1430, 1431, 1434, 1881], "domain": [1395, 1892], "30x30": 1395, "travers": 1395, "density_x": 1395, "density_i": 1395, "With": [1395, 1899], "nx2": [1395, 1409], "termin": [1395, 1893], "too": 1395, "streamplotset": 1395, "patchcollect": 1395, "colwidth": 1396, "rowlabel": 1396, "rowcolour": 1396, "rowloc": 1396, "collabel": 1396, "colcolour": 1396, "colloc": 1396, "header": 1396, "finer": 1396, "grain": 1396, "break": 1396, "background": [1396, 1398, 1717, 1718, 1878, 1886, 1892, 1893, 1896], "ncol": 1396, "substr": 1396, "brtl": 1396, "visible_edg": 1396, "backgroundcolor": 1398, "fancybboxpatch": 1398, "fontfamili": 1398, "fontnam": 1398, "serif": 1398, "san": 1398, "cursiv": 1398, "fantasi": 1398, "monospac": 1398, "font_properti": 1398, "medium": 1398, "fontstretch": 1398, "ultra": 1398, "condens": 1398, "semi": [1398, 1889], "fontstyl": 1398, "ital": 1398, "obliqu": 1398, "fontvari": 1398, "ultralight": 1398, "light": 1398, "roman": 1398, "semibold": 1398, "demibold": 1398, "demi": 1398, "bold": 1398, "heavi": 1398, "linespac": 1398, "math_fontfamili": 1398, "multialign": 1398, "ma": 1398, "parse_math": 1398, "rotation_mod": 1398, "transform_rotates_text": 1398, "usetex": 1398, "get_tick_param": 1400, "inout": 1400, "labels": 1400, "labelbottom": 1400, "labeltop": 1400, "labelleft": 1400, "labelright": 1400, "labelrot": 1400, "grid_color": 1400, "grid_alpha": 1400, "grid_linewidth": 1400, "grid_linestyl": 1400, "useoffset": 1401, "uselocal": 1401, "usemathtext": 1401, "sci": 1401, "scientif": 1401, "english": 1401, "use_local": 1401, "mathtext": 1401, "use_mathtext": 1401, "attributeerror": [1401, 1438], "triangul": [1402, 1403, 1404, 1405], "neither": [1402, 1403, 1404, 1405, 1895, 1897], "clariti": [1402, 1403, 1404], "mutual": [1402, 1403, 1404, 1405], "exclus": [1402, 1403, 1404, 1405], "set_mask": [1402, 1403], "tri": [1402, 1403], "nice": [1402, 1403, 1893], "tricontourset": [1402, 1403], "ascend": [1402, 1403], "shorter": [1402, 1403], "set_und": [1402, 1403], "set_ov": [1402, 1403], "xunit": [1402, 1403], "yunit": [1402, 1403], "conversioninterfac": [1402, 1403], "monochrom": 1402, "negative_linestyl": 1402, "crosshatch": 1403, "postscript": 1403, "z1": 1403, "z2": 1403, "sens": 1404, "other_paramet": [1404, 1405], "inherit": [1406, 1407], "linearloc": [1406, 1407], "xydata": 1409, "union": [1409, 1448, 1880], "showextrema": [1413, 1414], "showmedian": [1413, 1414], "quantil": [1413, 1414], "kernel": [1413, 1414], "extrema": [1413, 1414], "cmean": [1413, 1414], "cbar": [1413, 1414], "cmedian": [1413, 1414], "cquantil": [1413, 1414], "bw_method": 1414, "stand": 1414, "bandwidth": 1414, "silverman": 1414, "kde": 1414, "gaussiankd": 1414, "sum_n": 1418, "cdot": [1418, 1668, 1706], "calc_w": [1422, 1425, 1426, 1431, 1881], "z0": [1422, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1862, 1881, 1882, 1890, 1891], "rough": [1422, 1423, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1862, 1882], "friction": [1422, 1424, 1426, 1430, 1431, 1434, 1881], "logz": [1423, 1428, 1432, 1881], "lz": [1423, 1427, 1428, 1432], "ws_ref": [1424, 1430, 1434, 1881], "h_ref": [1424, 1430, 1434, 1881], "height0": [1425, 1881], "ws0": [1425, 1881], "psi": [1426, 1429, 1431, 1433, 1881], "lgz": [1427, 1881], "monin": [1429, 1430, 1433, 1434, 1841, 1882, 1891], "obukhov": [1429, 1430, 1433, 1434, 1891], "all_subclass": [1435, 1880], "cl": [1435, 1446, 1447, 1880], "cubic_root": [1436, 1880, 1886], "a0": [1436, 1880], "a1": [1436, 1880], "a2": [1436, 1880], "a3": [1436, 1880], "root": [1436, 1880], "polynomi": [1436, 1880, 1886], "spare": 1436, "github": [1436, 1885, 1886, 1887, 1888, 1905], "opencv": 1436, "blob": 1436, "master": 1436, "calib3d": 1436, "src": 1436, "polynom_solv": 1436, "cpp": 1436, "n_a0": 1436, "delta_wd": [1437, 1880], "wd_a": [1437, 1880], "wd_b": [1437, 1880], "exec_python": [1438, 1880], "newlin": [1438, 1880], "__builtins__": 1438, "arithmeticerror": 1438, "assertionerror": 1438, "baseexcept": 1438, "blockingioerror": 1438, "brokenpipeerror": 1438, "buffererror": 1438, "byteswarn": 1438, "childprocesserror": 1438, "connectionabortederror": 1438, "connectionerror": 1438, "connectionrefusederror": 1438, "connectionreseterror": 1438, "deprecationwarn": 1438, "eoferror": 1438, "ellipsi": 1438, "environmenterror": 1438, "oserror": 1438, "fileexistserror": 1438, "filenotfounderror": 1438, "floatingpointerror": 1438, "futurewarn": 1438, "generatorexit": 1438, "ioerror": 1438, "importerror": 1438, "importwarn": 1438, "indentationerror": 1438, "indexerror": 1438, "interruptederror": 1438, "isadirectoryerror": 1438, "keyboardinterrupt": 1438, "lookuperror": 1438, "memoryerror": 1438, "modulenotfounderror": 1438, "nameerror": 1438, "notadirectoryerror": 1438, "notimplementederror": 1438, "pendingdeprecationwarn": 1438, "permissionerror": 1438, "processlookuperror": 1438, "recursionerror": 1438, "referenceerror": 1438, "resourcewarn": 1438, "runtimeerror": 1438, "runtimewarn": 1438, "stopasynciter": 1438, "stopiter": 1438, "syntaxerror": 1438, "syntaxwarn": 1438, "systemerror": 1438, "systemexit": 1438, "taberror": 1438, "timeouterror": 1438, "unboundlocalerror": 1438, "unicodedecodeerror": 1438, "unicodeencodeerror": 1438, "unicodeerror": 1438, "unicodetranslateerror": 1438, "unicodewarn": 1438, "userwarn": 1438, "zerodivisionerror": 1438, "__build_class__": 1438, "built": 1438, "__debug__": 1438, "__doc__": 1438, "nnoteworthi": 1438, "nil": 1438, "__import__": 1438, "__loader__": 1438, "_frozen_importlib": 1438, "builtinimport": 1438, "__name__": 1438, "__package__": 1438, "__pybind11_internals_v4_gcc_libstdcpp_cxxabi1014__": 1438, "capsul": 1438, "null": 1438, "__spec__": 1438, "modulespec": 1438, "loader": 1438, "ascii": 1438, "breakpoint": 1438, "bytearrai": 1438, "chr": 1438, "compil": 1438, "copyright": 1438, "2001": 1438, "2021": [1438, 1891], "softwar": [1438, 1884, 1887, 1891], "foundat": 1438, "reserv": 1438, "2000": [1438, 1890, 1893, 1898], "beopen": 1438, "1995": 1438, "corpor": 1438, "nation": 1438, "research": [1438, 1887], "1991": 1438, "sticht": 1438, "mathematisch": 1438, "centrum": 1438, "amsterdam": 1438, "credit": 1438, "thank": [1438, 1886], "cwi": 1438, "cnri": 1438, "zope": 1438, "cast": 1438, "thousand": 1438, "develop": [1438, 1887], "delattr": 1438, "dir": 1438, "enumer": [1438, 1889, 1890], "eval": 1438, "exec": 1438, "exit": 1438, "ctrl": 1438, "eof": 1438, "frozenset": 1438, "getattr": 1438, "hasattr": 1438, "interact": 1438, "licens": 1438, "memoryview": 1438, "oct": 1438, "ord": 1438, "quit": 1438, "setattr": 1438, "staticmethod": 1438, "super": [1438, 1580, 1617, 1754, 1765, 1785], "__cached__": 1438, "home": [1438, 1890, 1892, 1899, 1901], "jona": [1438, 1884, 1890, 1892, 1899, 1901], "git": [1438, 1887, 1888, 1890, 1892, 1899, 1901, 1905], "__pycache__": 1438, "cpython": 1438, "38": [1438, 1890, 1893, 1895, 1899, 1902], "pyc": 1438, "__file__": 1438, "_frozen_importlib_extern": 1438, "sourcefileload": 1438, "venv": [1438, 1888], "lib": 1438, "python3": [1438, 1888], "site": [1438, 1891, 1893], "__init__": 1438, "7000": [1438, 1898, 1899], "119": [1438, 1899], "namespac": 1438, "geometri": [1439, 1441, 1445, 1446, 1447, 1448, 1449, 1451, 1455, 1456, 1462, 1463, 1469, 1470, 1473, 1477, 1478, 1479, 1481, 1485, 1487, 1488, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1792, 1809, 1876, 1878, 1880, 1893], "p_min": [1439, 1442, 1443, 1446, 1448, 1452, 1453, 1456, 1459, 1460, 1463, 1466, 1467, 1470, 1474, 1475, 1478, 1482, 1483, 1893], "points_dist": [1439, 1444, 1446, 1448, 1454, 1456, 1461, 1463, 1468, 1470, 1476, 1478, 1484], "return_nearest": [1439, 1444, 1446, 1448, 1454, 1456, 1461, 1463, 1468, 1470, 1476, 1478, 1484], "points_insid": [1439, 1445, 1446, 1448, 1455, 1456, 1462, 1463, 1469, 1470, 1477, 1478, 1485], "add_to_figur": [1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480, 1893], "show_boundari": [1439, 1440, 1446, 1448, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1478, 1480], "fill_mod": [1440, 1450, 1456, 1458, 1463, 1465, 1470, 1472, 1480, 1893], "inside_slategrai": [1440, 1450, 1480], "pars_boundari": [1440, 1450, 1458, 1465, 1472, 1480], "pars_dist": [1440, 1450, 1458, 1465, 1472, 1480, 1893], "dist": [1440, 1444, 1450, 1454, 1458, 1461, 1465, 1468, 1472, 1476, 1480, 1484, 1511, 1668, 1706], "dist_insid": [1440, 1450, 1458, 1465, 1472, 1480, 1893], "dist_outsid": [1440, 1450, 1458, 1465, 1472, 1480, 1893], "inside_": [1440, 1450, 1458, 1465, 1472, 1480], "outside_": [1440, 1450, 1458, 1465, 1472, 1480], "invertedareageometri": [1441, 1451, 1473, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1880], "probe": [1444, 1445, 1454, 1455, 1461, 1462, 1468, 1469, 1476, 1477, 1484, 1485, 1535, 1537], "bundari": [1444, 1454, 1461, 1468, 1476, 1484], "p_nearest": [1444, 1454, 1461, 1468, 1476, 1484], "areaintersect": [1446, 1447, 1880], "areaunion": [1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1880], "cobnstructor": [1456, 1457], "closedpolygon": [1463, 1464, 1465, 1466, 1467, 1468, 1469, 1880, 1893], "poli": 1463, "halfplan": [1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1880], "import_modul": [1486, 1880], "deduc": 1486, "instal": [1486, 1886, 1887, 1905], "advic": 1486, "fail": [1486, 1890, 1901], "imnport": 1486, "opt": [1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1865, 1871, 1886, 1893], "areageometryconstraint": [1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1876], "farmconstraint": [1487, 1510, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1876], "constrain": [1487, 1508, 1876], "sel_turbin": [1487, 1488, 1508, 1510, 1511, 1517, 1518, 1526, 1528, 1529, 1534, 1535, 1537, 1573, 1579, 1593, 1602, 1604, 1610, 1612, 1751, 1760, 1776], "disc_insid": [1487, 1488], "n_compon": [1487, 1495, 1496, 1499, 1506, 1507, 1508, 1510, 1515, 1516, 1517, 1523, 1527, 1528, 1544, 1545, 1546, 1553, 1554, 1593, 1597, 1599, 1600, 1601, 1602, 1604, 1608, 1609, 1610, 1626, 1630, 1631, 1635, 1636, 1640, 1641, 1646, 1647, 1651, 1652, 1654, 1655, 1656, 1657, 1662, 1663, 1667, 1669, 1674, 1675, 1676, 1680, 1681, 1682, 1686, 1687, 1688, 1692, 1693, 1694, 1698, 1699, 1700, 1702, 1703, 1705], "vardeps_float": [1487, 1506, 1508, 1510, 1516, 1517, 1527, 1528, 1593, 1601, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "calc_individu": [1487, 1491, 1508, 1510, 1512, 1517, 1520, 1528, 1593, 1595, 1602, 1604, 1606, 1610, 1626, 1628, 1631, 1633, 1636, 1638, 1641, 1643, 1647, 1649, 1652, 1657, 1659, 1663, 1665, 1669, 1671, 1676, 1678, 1682, 1684, 1688, 1690, 1694, 1696, 1700, 1703], "vars_int": [1487, 1490, 1491, 1492, 1495, 1496, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1575, 1576, 1579, 1581, 1582, 1583, 1584, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1612, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1707, 1709, 1710, 1717, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1751, 1752, 1757, 1758, 1760, 1762, 1770, 1771, 1772, 1773, 1776, 1783, 1788, 1789], "vars_float": [1487, 1490, 1491, 1492, 1495, 1496, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1575, 1576, 1579, 1581, 1582, 1583, 1584, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1612, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1707, 1709, 1710, 1717, 1719, 1720, 1727, 1729, 1730, 1737, 1739, 1740, 1751, 1752, 1757, 1758, 1760, 1762, 1770, 1771, 1772, 1773, 1776, 1783, 1788, 1789], "problem_result": [1487, 1491, 1492, 1495, 1496, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1542, 1543, 1552, 1553, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1709, 1710, 1719, 1720, 1729, 1730, 1739, 1740, 1752, 1762, 1783, 1893], "calc_popul": [1487, 1492, 1508, 1510, 1513, 1517, 1521, 1528, 1593, 1596, 1602, 1604, 1607, 1610, 1626, 1629, 1631, 1634, 1636, 1639, 1641, 1644, 1647, 1650, 1652, 1657, 1660, 1663, 1666, 1669, 1672, 1676, 1679, 1682, 1685, 1688, 1691, 1694, 1697, 1700, 1703], "n_sel_turbin": [1487, 1508, 1510, 1517, 1524, 1528, 1532, 1535, 1567, 1579, 1581, 1582, 1593, 1602, 1604, 1610, 1612, 1622, 1623, 1751, 1757, 1758, 1760, 1770, 1771, 1776, 1788, 1789], "add_to_layout_figur": [1487, 1508, 1510, 1517, 1519, 1528, 1530, 1535, 1540, 1579, 1593, 1602, 1604, 1610, 1612, 1751, 1760, 1776], "get_bound": [1487, 1508, 1510, 1517, 1626, 1631, 1636, 1641, 1647, 1652, 1656, 1657, 1663], "check_individu": [1487, 1508, 1510, 1517, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1657, 1663], "constraint_valu": [1487, 1508, 1510, 1517, 1535, 1545, 1546, 1579, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1655, 1657, 1663, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "fullfil": [1487, 1508, 1510, 1517, 1535, 1545, 1546, 1579, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1654, 1655, 1657, 1663, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "check_popul": [1487, 1508, 1510, 1517, 1626, 1631, 1636, 1641, 1647, 1652, 1655, 1657, 1663], "component_nam": [1487, 1493, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "var_names_int": [1487, 1505, 1508, 1510, 1517, 1528, 1535, 1578, 1579, 1593, 1602, 1604, 1610, 1612, 1625, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1726, 1727, 1737, 1750, 1751, 1760, 1775, 1776], "n_vars_int": [1487, 1490, 1491, 1492, 1495, 1496, 1501, 1507, 1508, 1510, 1512, 1513, 1517, 1520, 1521, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1556, 1560, 1564, 1569, 1575, 1576, 1579, 1581, 1582, 1583, 1584, 1593, 1595, 1596, 1597, 1602, 1604, 1606, 1607, 1610, 1612, 1616, 1619, 1621, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1707, 1709, 1710, 1717, 1719, 1720, 1722, 1724, 1725, 1727, 1729, 1730, 1737, 1739, 1740, 1743, 1746, 1748, 1751, 1752, 1757, 1758, 1760, 1762, 1764, 1767, 1769, 1770, 1771, 1772, 1773, 1776, 1783, 1788, 1789, 1893], "var_names_float": [1487, 1504, 1508, 1510, 1517, 1528, 1535, 1577, 1579, 1593, 1602, 1604, 1610, 1612, 1624, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1716, 1717, 1727, 1736, 1737, 1749, 1751, 1759, 1760, 1774, 1776, 1790], "n_vars_float": [1487, 1490, 1491, 1492, 1495, 1496, 1500, 1506, 1508, 1510, 1512, 1513, 1516, 1517, 1520, 1521, 1527, 1528, 1535, 1542, 1543, 1544, 1549, 1550, 1552, 1553, 1554, 1555, 1559, 1563, 1568, 1575, 1576, 1579, 1581, 1582, 1583, 1584, 1593, 1595, 1596, 1597, 1601, 1602, 1604, 1606, 1607, 1610, 1612, 1615, 1618, 1620, 1622, 1623, 1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1652, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700, 1703, 1704, 1707, 1709, 1710, 1712, 1714, 1715, 1717, 1719, 1720, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1740, 1742, 1745, 1747, 1751, 1752, 1753, 1755, 1756, 1757, 1758, 1760, 1762, 1763, 1766, 1768, 1770, 1771, 1772, 1773, 1776, 1783, 1784, 1786, 1787, 1788, 1789, 1893], "vardeps_int": [1487, 1507, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "rename_vars_int": [1487, 1503, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "renam": [1487, 1502, 1503, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1886], "rename_vars_float": [1487, 1502, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "finalize_individu": [1487, 1495, 1508, 1510, 1517, 1528, 1535, 1552, 1579, 1593, 1597, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783], "champion": [1487, 1495, 1508, 1510, 1517, 1528, 1535, 1552, 1579, 1593, 1597, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783], "finalize_popul": [1487, 1496, 1508, 1510, 1517, 1528, 1535, 1553, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "ana_deriv": [1487, 1490, 1508, 1510, 1517, 1528, 1593, 1602, 1604, 1610, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703], "info": [1487, 1489, 1508, 1510, 1517, 1528, 1535, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "finish": [1487, 1498, 1508, 1510, 1517, 1528, 1535, 1579, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1890, 1893], "farmoptproblem": [1488, 1509, 1511, 1518, 1529, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1594, 1602, 1603, 1605, 1610, 1611, 1627, 1632, 1637, 1642, 1658, 1664, 1670, 1677, 1683, 1689, 1695, 1701, 1876, 1886], "iwopi": [1488, 1511, 1518, 1529, 1535, 1537, 1538, 1539, 1544, 1554, 1652, 1703, 1704, 1707, 1717, 1727, 1737, 1871, 1876, 1878, 1887, 1893], "differenti": [1490, 1544, 1554], "n_sel_compon": [1490, 1491, 1492, 1512, 1513, 1520, 1521, 1595, 1596, 1606, 1607, 1628, 1629, 1633, 1634, 1638, 1639, 1643, 1644, 1649, 1650, 1659, 1660, 1665, 1666, 1671, 1672, 1678, 1679, 1684, 1685, 1690, 1691, 1696, 1697], "n_pop": [1492, 1496, 1513, 1521, 1543, 1546, 1550, 1553, 1576, 1582, 1584, 1585, 1586, 1596, 1607, 1623, 1629, 1634, 1639, 1644, 1650, 1655, 1660, 1666, 1672, 1679, 1685, 1691, 1697, 1710, 1720, 1730, 1740, 1758, 1771, 1773, 1789, 1876], "dep": [1506, 1507, 1516, 1527, 1593, 1594, 1601, 1603, 1611], "farmboundaryconstraint": [1508, 1509, 1876, 1893], "mindistconstraint": [1510, 1511, 1512, 1513, 1514, 1515, 1516, 1876, 1893], "keep": [1510, 1876, 1888], "min_dist": [1510, 1511, 1657, 1658, 1669, 1670, 1707, 1708, 1717, 1718, 1727, 1728, 1737, 1738, 1760, 1761, 1893], "min_dist_unit": [1510, 1511, 1893], "constaint": [1510, 1514, 1657, 1661], "geom_layout": [1517, 1528, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1871, 1876], "farmobject": [1528, 1529, 1530, 1531, 1532, 1533, 1534, 1593, 1594, 1603, 1604, 1605, 1611, 1876], "calc_farm_arg": [1535, 1537], "all_turbin": [1535, 1541, 1579, 1612, 1751, 1760, 1776], "tvar": [1535, 1574, 1579, 1612, 1751, 1760, 1776], "turbine_i": [1535, 1570, 1574, 1579, 1612, 1751, 1760, 1776], "parse_tvar": [1535, 1570, 1579, 1612, 1751, 1760, 1776], "tvr": [1535, 1570, 1579, 1612, 1751, 1760, 1776], "update_problem_individu": [1535, 1575, 1579, 1583, 1612, 1751, 1760, 1772, 1776], "update_problem_popul": [1535, 1576, 1579, 1584, 1612, 1751, 1760, 1773, 1776], "apply_individu": [1535, 1542, 1579, 1612, 1707, 1709, 1717, 1719, 1727, 1729, 1737, 1739, 1751, 1760, 1776], "apply_popul": [1535, 1543, 1579, 1612, 1707, 1710, 1717, 1720, 1727, 1730, 1737, 1740, 1751, 1760, 1776], "int_inf": [1535, 1536, 1560, 1564, 1579, 1612, 1619, 1621, 1707, 1717, 1727, 1737, 1746, 1748, 1751, 1760, 1767, 1769, 1776], "999999": [1535, 1536, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "initial_values_int": [1535, 1556, 1579, 1612, 1616, 1707, 1717, 1722, 1727, 1737, 1743, 1751, 1760, 1764, 1776], "min_values_int": [1535, 1564, 1579, 1612, 1621, 1707, 1717, 1725, 1727, 1737, 1748, 1751, 1760, 1769, 1776], "max_values_int": [1535, 1560, 1579, 1612, 1619, 1707, 1717, 1724, 1727, 1737, 1746, 1751, 1760, 1767, 1776], "initial_values_float": [1535, 1555, 1579, 1612, 1615, 1707, 1712, 1717, 1727, 1732, 1737, 1742, 1751, 1753, 1760, 1763, 1776, 1784], "min_values_float": [1535, 1563, 1579, 1612, 1620, 1707, 1715, 1717, 1727, 1735, 1737, 1747, 1751, 1756, 1760, 1768, 1776, 1787], "max_values_float": [1535, 1559, 1579, 1612, 1618, 1707, 1714, 1717, 1727, 1734, 1737, 1745, 1751, 1755, 1760, 1766, 1776, 1786], "add_object": [1535, 1539, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1893], "varmap_int": [1535, 1538, 1539, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "varmap_float": [1535, 1538, 1539, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "add_constraint": [1535, 1538, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1893], "min_values_constraint": [1535, 1562, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "max_values_constraint": [1535, 1558, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "constraints_tol": [1535, 1547, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "n_object": [1535, 1549, 1550, 1552, 1561, 1566, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783, 1893], "n_constraint": [1535, 1547, 1549, 1550, 1552, 1553, 1558, 1562, 1565, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1752, 1760, 1762, 1776, 1783, 1893], "calc_gradi": [1535, 1544, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "ivar": [1535, 1544, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "get_gradi": [1535, 1544, 1554, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "obtain": [1535, 1554, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1891, 1895, 1903], "link": [1535, 1554, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1887, 1893, 1902], "maximize_obj": [1535, 1561, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "evaluate_individu": [1535, 1549, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "ret_prob_r": [1535, 1549, 1550, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "evaluate_popul": [1535, 1550, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "check_constraints_individu": [1535, 1545, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "check_constraints_popul": [1535, 1546, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "prob_res_einsum_individu": [1535, 1571, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "prob_res_list": [1535, 1571, 1572, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "coeff": [1535, 1571, 1572, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "prob_res_einsum_popul": [1535, 1572, 1579, 1612, 1707, 1717, 1727, 1737, 1751, 1760, 1776], "fvar": 1544, "vr": 1544, "overload": [1544, 1868, 1869, 1886], "optfunctionlist": [1544, 1554], "n_vr": 1544, "ctol": 1547, "con": [1549, 1550, 1552, 1553, 1752, 1762, 1783], "prob_r": [1549, 1550, 1571, 1572], "cf": [1554, 1898], "problemdefaultfunc": 1554, "cma": 1558, "unbound": [1559, 1560, 1563, 1564, 1618, 1619, 1620, 1621, 1714, 1715, 1734, 1735, 1745, 1746, 1747, 1748, 1755, 1756, 1766, 1767, 1768, 1769, 1786, 1787], "cmi": 1562, "n_con": 1565, "n_obj": 1566, "farmvarsproblem": [1579, 1580, 1581, 1582, 1583, 1584, 1612, 1613, 1751, 1760, 1761, 1776, 1782, 1876, 1877, 1886], "pre_rotor_var": [1579, 1580], "post_rotor_var": [1579, 1580], "opt2farm_vars_individu": [1579, 1581, 1612, 1622, 1751, 1757, 1760, 1770, 1776, 1788], "opt2farm_vars_popul": [1579, 1582, 1612, 1623, 1751, 1758, 1760, 1771, 1776, 1789], "farm_var": [1581, 1582, 1622, 1623, 1757, 1758, 1770, 1771, 1788, 1789], "popstat": [1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1876], "farmvarobject": [1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1610, 1876], "contract_st": [1593, 1594, 1603, 1611], "contract_turbin": [1594, 1603, 1611], "maxfarmpow": [1602, 1603, 1876, 1893], "maximize_pow": [1602, 1603, 1893], "maxnturbin": [1604, 1605, 1606, 1607, 1608, 1609, 1876], "turrbin": [1604, 1876], "check_valid": [1604, 1605], "max_n_turbin": [1604, 1605], "minimalmaxti": [1610, 1611, 1876], "minimize_ti": [1610, 1611], "optfarmvar": [1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1877], "typ": [1612, 1614], "model_kei": 1614, "geometr": [1626, 1627, 1631, 1632, 1636, 1637, 1641, 1642, 1647, 1657, 1658, 1663, 1664, 1669, 1670, 1676, 1677, 1682, 1683, 1688, 1689, 1694, 1695, 1700, 1701, 1707, 1717, 1877, 1878, 1886], "cmpnt": [1626, 1628, 1629, 1631, 1633, 1634, 1636, 1638, 1639, 1641, 1643, 1644, 1647, 1649, 1650, 1657, 1659, 1660, 1663, 1665, 1666, 1669, 1671, 1672, 1676, 1678, 1679, 1682, 1684, 1685, 1688, 1690, 1691, 1694, 1696, 1697, 1700], "additio": [1627, 1632, 1637, 1642, 1658, 1664], "cfixn": [1631, 1632, 1633, 1634, 1635, 1878], "cmaxn": [1636, 1637, 1638, 1639, 1640, 1878], "cmindens": [1641, 1642, 1643, 1644, 1645, 1646, 1878], "min_valu": [1641, 1642], "dfactor": [1641, 1642, 1669, 1670], "min_dens": [1641, 1642], "cminn": [1647, 1648, 1649, 1650, 1651, 1878], "tol": [1648, 1652, 1653], "violat": [1648, 1652, 1653], "optfunct": [1652, 1703, 1871], "mindist": [1657, 1658, 1659, 1660, 1661, 1662, 1878], "cdist": [1668, 1706], "xa": [1668, 1706], "xb": [1668, 1706], "metric": [1668, 1706], "euclidean": [1668, 1706], "m_a": [1668, 1706], "m_b": [1668, 1706], "braycurti": [1668, 1706], "canberra": [1668, 1706], "chebyshev": [1668, 1706], "cityblock": [1668, 1706], "cosin": [1668, 1706], "dice": [1668, 1706], "jaccard": [1668, 1706], "jensenshannon": [1668, 1706], "kulczynski1": [1668, 1706], "mahalanobi": [1668, 1706], "minkowski": [1668, 1706], "rogerstanimoto": [1668, 1706], "russellrao": [1668, 1706], "seuclidean": [1668, 1706], "sokalmichen": [1668, 1706], "sokalsneath": [1668, 1706], "sqeuclidean": [1668, 1706], "yule": [1668, 1706], "unweight": [1668, 1706], "varianc": [1668, 1706], "vstack": [1668, 1706], "ddof": [1668, 1706], "vi": [1668, 1706], "covari": [1668, 1706], "inv": [1668, 1706], "cov": [1668, 1706], "ij": [1668, 1706], "thrown": [1668, 1706], "_p": [1668, 1706], "quasi": [1668, 1706], "citi": [1668, 1706], "manhattan": [1668, 1706], "u_i": [1668, 1706], "v_i": [1668, 1706], "_2": [1668, 1706], "disagre": [1668, 1706], "save": [1668, 1706, 1902], "shannon": [1668, 1706], "pointwis": [1668, 1706], "kullback": [1668, 1706], "leibler": [1668, 1706], "diverg": [1668, 1706], "max_i": [1668, 1706], "sum_i": [1668, 1706], "brai": [1668, 1706], "curti": [1668, 1706], "kulczynski": [1668, 1706], "roger": [1668, 1706], "tanimoto": [1668, 1706], "russel": [1668, 1706], "rao": [1668, 1706], "sokal": [1668, 1706], "michen": [1668, 1706], "sneath": [1668, 1706], "ariti": [1668, 1706], "dm": [1668, 1706], "librari": [1668, 1706, 1893, 1900], "ineffici": [1668, 1706], "35": [1668, 1706, 1890, 1891, 1893, 1898, 1901], "0456": [1668, 1706], "85": [1668, 1706, 1890, 1893], "2672": [1668, 1706, 1902], "1174": [1668, 1706], "89": [1668, 1706, 1893, 1901, 1903], "9711": [1668, 1706], "9728": [1668, 1706], "9422": [1668, 1706], "36": [1668, 1706, 1891, 1893], "1667": [1668, 1706], "86": [1668, 1706, 1884, 1893, 1895, 1901], "7833": [1668, 1706], "7044": [1668, 1706], "6172": [1668, 1706], "8856": [1668, 1706], "0893": [1668, 1706], "3561": [1668, 1706], "8477": [1668, 1706], "cube": [1668, 1706], "maxdens": [1669, 1670, 1671, 1672, 1673, 1674, 1675, 1878], "max_dens": [1669, 1670], "maxgridspac": [1676, 1677, 1678, 1679, 1680, 1681, 1878], "max_dxdi": [1676, 1677], "memimadist": [1682, 1683, 1684, 1685, 1686, 1687, 1878], "mimamean": [1682, 1683], "ofixn": [1688, 1689, 1690, 1691, 1692, 1693, 1878], "omaxn": [1694, 1695, 1696, 1697, 1698, 1699, 1700, 1878], "maxn": [1694, 1695], "ominn": [1700, 1701, 1702, 1878], "vnames_int": 1704, "vnames_float": 1704, "cname": 1704, "geomlayout": [1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1878, 1886], "calc_valid": [1707, 1708], "plotli": [1707, 1711, 1717, 1721, 1727, 1731, 1737, 1741, 1886], "true_circl": [1711, 1721, 1731, 1741], "ndarari": [1711, 1721, 1731, 1741], "geomlayoutgrid": [1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1878, 1886], "grid_spac": [1717, 1718], "geomreggrid": [1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1878, 1886], "max_dist": [1727, 1728, 1737, 1738, 1761], "n_grid": [1737, 1738, 1760, 1761], "n_max": [1737, 1738], "n_row_max": [1737, 1738, 1761], "farmlayoutoptproblem": [1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1877, 1893], "reggridslayoutoptproblem": [1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1877], "sever": [1760, 1877, 1886], "min_spac": [1760, 1776, 1782], "max_n_row": 1760, "regularlayoutoptproblem": [1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1877, 1886], "spacing_x": [1776, 1780], "spacing_i": [1776, 1781], "offset_x": [1776, 1778], "offset_i": [1776, 1779], "read_shp": [1791, 1792, 1880, 1886], "shp": [1791, 1792, 1808, 1880], "geopanda": [1791, 1792, 1808], "geodatafram": 1791, "wsg84": 1791, "read_shp_polygon": [1792, 1809, 1880, 1886], "name_col": 1792, "geom_col": 1792, "to_utm": 1792, "ret_utm_zon": [1792, 1809, 1880], "extract": 1792, "utm": [1792, 1809], "32u": [1792, 1809], "point_dict_exterior": 1792, "point_dict_interior": 1792, "utm_zone_str": [1792, 1809], "utem": [1792, 1809], "daskrunn": [1793, 1794, 1795, 1796, 1797, 1798, 1799, 1880, 1886, 1890, 1892, 1893, 1899, 1901, 1902, 1903], "schedul": [1793, 1794, 1886, 1893, 1902], "progress_bar": [1793, 1794, 1886], "progress": [1793, 1794, 1902, 1903], "cluster_arg": [1793, 1794], "cluster": [1793, 1794, 1886, 1887, 1893, 1902, 1903], "setup": [1793, 1794, 1885, 1886, 1887, 1889, 1890, 1893, 1895, 1897, 1898, 1900, 1903, 1904], "client_arg": [1793, 1794], "client": [1793, 1794], "n_worker": [1793, 1794], "is_distribut": [1793, 1797], "threads_per_work": 1794, "worker": [1794, 1902], "thread": [1794, 1902], "defaultrunn": [1800, 1801, 1880, 1886], "shp2csv": [1808, 1880, 1886], "ifil": [1808, 1880], "ofil": [1808, 1880], "in_kwarg": [1808, 1880], "out_kwarg": [1808, 1880], "inam": 1808, "onam": 1808, "to_csv": 1808, "shp2geom2d": [1809, 1880], "shapefil": [1809, 1880], "geom": 1809, "tool": [1809, 1899, 1902], "sqrt_reg": [1810, 1880], "smallish": [1810, 1880], "two_circl": [1811, 1812], "r1": [1811, 1812, 1880], "r2": [1811, 1812, 1880], "sure": [1811, 1888, 1893, 1902], "diego": 1811, "assencio": 1811, "8d6ca3d82151bad815f78addf9b5c1c6": 1811, "calc_area": [1812, 1880], "broadcast": [1812, 1814, 1815], "uv2wd": [1813, 1880], "wd2uv": [1814, 1880], "wd2wdvec": [1815, 1880], "wdvec": [1815, 1816, 1880], "wdvec2wd": [1816, 1880], "complevel": 1817, "netcfd": [1817, 1892], "to_netcdf": 1817, "moment": [1822, 1823, 1847, 1848, 1882], "kg": [1824, 1849, 1882], "m3": [1824, 1849, 1882], "temperatur": [1825, 1851, 1882], "kelvin": [1825, 1851, 1882], "amb_yawm": [1830, 1863, 1864, 1882], "maxp": [1840, 1882, 1897, 1898], "ubukhof": [1841, 1882], "pa_alpha": [1844, 1882], "porteagel": [1844, 1845, 1882, 1886], "pa_beta": [1845, 1882], "txyh": [1853, 1882, 1899], "amb2var": [1863, 1882], "var2amb": [1864, 1882], "concret": [1865, 1875, 1883], "manag": [1866, 1885, 1886, 1887, 1896], "sweep": [1866, 1867], "reach": [1866, 1868, 1873, 1886, 1890, 1901], "uns": 1866, "atmospher": [1874, 1875, 1887, 1891], "propag": [1875, 1885, 1886, 1896], "ie": 1875, "machin": 1875, "net": 1875, "extern": 1876, "classif": 1883, "cite": 1884, "joss": 1884, "bibtex": 1884, "schmidt2023": 1884, "author": [1884, 1891], "schmidt": 1884, "luka": 1884, "vollmer": 1884, "martin": 1884, "d\u00f6renk\u00e4mper": 1884, "bernhard": 1884, "stoevesandt": 1884, "21105": 1884, "05464": 1884, "publish": [1884, 1886], "volum": 1884, "page": 1884, "5464": 1884, "zenodo": 1884, "jupyt": 1885, "notebook": [1885, 1886, 1896], "folder": [1885, 1886], "repositori": [1885, 1887, 1905], "homogen": [1885, 1899], "comparison": [1885, 1887, 1890], "readi": [1886, 1894, 1900, 1901, 1904], "transfer": [1886, 1904], "fraunhof": [1886, 1887, 1893], "iw": [1886, 1887, 1891, 1893], "hous": 1886, "predecessor": [1886, 1887], "flappi": [1886, 1887], "yet": 1886, "enjoi": 1886, "await": 1886, "comment": 1886, "changelog": 1886, "fraunhoferiw": [1886, 1887, 1888, 1905], "commit": [1886, 1887], "discov": 1886, "flake8": 1886, "now": [1886, 1890, 1892, 1893, 1894, 1895, 1897, 1898, 1899, 1900, 1901, 1903, 1904], "pytest": [1886, 1905], "unittest": 1886, "workflow": 1886, "docu": 1886, "io": 1886, "doc": [1886, 1902], "html": [1886, 1899, 1901], "miss": 1886, "wind_rot": [1886, 1892], "manifest": 1886, "orst": 1886, "pctsinglefil": 1886, "iecti2019": 1886, "iecti2005": 1886, "pip": [1886, 1887, 1905], "pcttwofil": 1886, "windroseoutput": 1886, "ambientwindroseoutput": 1886, "improv": 1886, "show_plotly_fig": 1886, "browser": 1886, "wind_ros": 1886, "layout_single_st": 1886, "layout_wind_ros": 1886, "layout_opt": [1886, 1893], "ipynb": 1886, "demonstr": [1886, 1889, 1891, 1893, 1897, 1900, 1903, 1904], "wrf": [1886, 1895, 1896], "ambientroseplotoutput": 1886, "multi_height": 1886, "bug": 1886, "veer": 1886, "power_mask": 1886, "solv": [1886, 1893], "cubic": 1886, "forgotten": 1886, "hotfix": 1886, "wsrho2pcttwofil": 1886, "sector_manag": 1886, "sector_man": 1886, "col_model": 1886, "linearsuperposit": 1886, "compare_wak": 1886, "yawed_wak": 1886, "simplifi": 1886, "intuit": 1886, "turboparkix": 1886, "eq": 1886, "wrong": 1886, "layout_regular_grid": 1886, "geom_reggrid": 1886, "geopandas_help": 1886, "interior": 1886, "11": [1886, 1888, 1890, 1891, 1893, 1897, 1901, 1902, 1904], "cleaner": 1886, "treatment": 1886, "slimmer": 1886, "productsuperposit": 1886, "restart": 1886, "incomplet": 1886, "slurm": 1886, "queue": 1886, "timeseries_slurm": 1886, "hpc": 1886, "apigen": 1886, "timeseries_100": [1886, 1901], "timestep": 1886, "consider": 1886, "autom": 1886, "pypi": 1886, "netcdf4": 1886, "keep_model": 1886, "mostli": 1886, "address": [1886, 1902], "rhb": [1886, 1889, 1890, 1894], "induction_rhb": 1886, "conda": [1886, 1887], "forg": [1886, 1888], "refactor": 1886, "bastankhahwak": 1886, "porteagelwak": 1886, "jump": 1886, "bastankhah025": [1886, 1893], "restructur": 1886, "simpler": 1886, "ws_linear": [1886, 1894, 1901], "ti_quadrat": [1886, 1894], "mess": 1886, "lighter": 1886, "reformul": 1886, "crespohernandez": [1886, 1904], "virtual": 1886, "betzaxialinduct": [1886, 1894], "relat": [1886, 1903], "madsenaxialinduct": [1886, 1894], "disk": 1886, "blockage_comparison": 1886, "fresh": 1886, "modular": 1887, "steer": 1887, "ow": 1887, "remot": 1887, "tracker": 1887, "report": 1887, "mit": 1887, "citat": 1887, "journal": 1887, "histori": 1887, "fork": [1887, 1888], "checkout": 1887, "new_branch": 1887, "am": [1887, 1901], "awesom": 1887, "messag": 1887, "push": 1887, "request": 1887, "flapfoam": 1887, "public": [1887, 1904], "publicli": 1887, "fund": 1887, "feder": 1887, "ministri": 1887, "econom": 1887, "affair": 1887, "climat": 1887, "action": [1887, 1896], "bmwk": 1887, "roject": 1887, "smart": 1887, "grant": 1887, "0325851b": 1887, "0325397b": 1887, "03ee3008a": 1887, "educ": 1887, "bmbf": 1887, "framework": 1887, "h2digit": 1887, "03sf0635": 1887, "furthermor": [1887, 1897], "horizon": 1887, "europ": 1887, "101084205": 1887, "decid": 1888, "dev": 1888, "egg": 1888, "clone": [1888, 1905], "cd": [1888, 1905], "concern": 1888, "strongli": 1888, "libmamba": 1888, "solver": [1888, 1893], "config": 1888, "again": [1888, 1893, 1897], "build": 1888, "inlin": [1889, 1890, 1892, 1893, 1895, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904], "800": [1890, 1893, 1899, 1900, 1901], "400": [1890, 1893], "dtu10mw": [1889, 1890, 1891, 1894, 1899, 1901], "04": [1889, 1890, 1891, 1893, 1894, 1899, 1901], "fact": [1890, 1904], "upstream": [1889, 1890], "influenc": [1890, 1897], "downstream": [1890, 1904], "notic": [1890, 1893, 1897, 1898, 1899, 1901, 1902, 1904], "aglo": 1890, "freshli": [1890, 1894], "repeatedli": 1890, "vicin": 1890, "cut": 1890, "grid36": [1890, 1894], "bastankhah025_linear_lim_k004": [1890, 1894, 1899], "4000": [1889, 1890, 1892, 1893, 1898, 1903], "among": 1890, "39": [1889, 1890, 1891, 1892, 1893, 1899, 1900, 1901, 1902], "basic_ctrl_pr": [1890, 1899, 1901], "power_ct_curv": [1890, 1899, 1901], "10mw": [1890, 1899, 1901], "d178d3": [1890, 1899, 1901], "h119": [1890, 1899, 1901], "basic_ctrl_postr": [1890, 1899, 1901], "rotorpoints1": 1890, "partialaxiwake10": [1890, 1899, 1901], "48": [1890, 1893, 1901], "partialwk": [1890, 1899, 1901], "sp": [1890, 1894, 1899, 1901], "ws_linear_lim": [1890, 1894, 1899], "setxyhd_t2f": [1890, 1899, 1901], "calc_yaw_centrerotor1": [1890, 1899, 1901], "urelax_ct": [1890, 1901], "iterative_calc": [1890, 1901], "oder": [1890, 1899, 1901], "00": [1890, 1891, 1893, 1895, 1899, 1901, 1902], "03": [1890, 1891, 1893, 1899, 1900, 1901, 1902], "101": [1890, 1901, 1903], "lt": [1890, 1891, 1893, 1899, 1900, 1901], "gt": [1890, 1891, 1893, 1899, 1900, 1901], "u7": [1890, 1901], "float64": [1890, 1893, 1899, 1900, 1901], "chunksiz": [1890, 1901], "102": [1890, 1901, 1902], "91": [1890, 1893, 1895], "51": [1891, 1893, 1899, 1901], "414e": 1890, "000e": [1890, 1901], "ok": [1890, 1901], "024e": 1890, "81": [1890, 1893, 1899, 1903], "106": 1890, "799e": 1890, "190e": 1890, "79": [1893, 1900], "019e": 1890, "659e": 1890, "148": 1901, "254e": 1890, "777e": 1890, "53": 1893, "966e": [1890, 1901], "488e": 1890, "87": [1893, 1897], "876e": 1890, "125e": 1890, "906e": 1890, "697e": 1890, "34": [1890, 1891, 1893], "80": [1890, 1893, 1901, 1903], "448e": 1890, "103e": 1890, "90": [1890, 1891, 1893, 1895], "622e": 1890, "790e": 1890, "74": [1890, 1893], "922e": 1890, "086e": 1890, "18": [1891, 1893, 1897], "008e": 1890, "324e": 1890, "71": 1893, "31": [1890, 1891, 1892, 1893, 1895, 1902], "288e": 1890, "059e": 1890, "13": [1890, 1891, 1893, 1895, 1897, 1901], "47": [1890, 1892, 1893, 1901], "19": [1891, 1893, 1897, 1901, 1902], "141e": 1890, "067e": 1890, "14": [1890, 1891, 1893, 1897, 1902], "541e": 1890, "226e": 1890, "814": [1890, 1899], "731e": 1890, "4e": [1890, 1900], "65e": 1890, "05e": 1890, "40": [1890, 1893, 1901], "46": [1890, 1891, 1893], "43": [1890, 1893, 1901], "44": [1890, 1892, 1893], "u3": 1890, "t0": [1890, 1891, 1893, 1897, 1898, 1899, 1900, 1902, 1904], "t1": [1890, 1891, 1893, 1897, 1898, 1899, 1900, 1902, 1904], "t2": [1890, 1891, 1893, 1897, 1899, 1900, 1902], "t3": [1890, 1891, 1893, 1897, 1899, 1900, 1902], "t44": 1890, "t45": 1890, "t46": 1890, "t47": 1890, "south": [1890, 1898], "westerli": [1890, 1898], "300": [1890, 1891, 1893, 1897, 1904], "front": [1889, 1890], "clearli": [1889, 1890, 1904], "merg": 1890, "xlist": 1890, "investig": 1890, "constrict": 1890, "scenario": 1890, "1000m": 1890, "windspe": [1889, 1890], "npoint": [1889, 1890, 1900], "profile_pt": [1889, 1890], "bmodel": 1890, "mirror_combo": 1890, "500m": 1890, "df": [1889, 1890], "92": [1890, 1891, 1893], "56": [1890, 1893], "103": [1890, 1901], "67": [1890, 1891, 1893, 1901, 1902], "104": [1890, 1901], "26": [1891, 1892, 1893, 1899, 1902], "wakemirror_rhb": 1890, "27": [1890, 1891, 1893, 1899, 1901, 1902], "105": 1890, "wakemirror1_rhb": 1890, "64": [1891, 1893, 1902], "08": 1901, "seem": 1890, "imagin": 1890, "realist": [1889, 1890, 1899], "120": [1890, 1891, 1899], "bname": 1890, "wakes0": 1890, "iecti2019_quart": [1890, 1894], "bastankhah2016_linear_lim_k004": [1890, 1894], "3000": [1890, 1891, 1893, 1897, 1904], "28": [1893, 1901], "640x480": [], "comparis": 1889, "flow_plot": 1889, "fp": 1889, "ttype": [1889, 1898], "8m": 1889, "colour": 1889, "centreline_pt": 1889, "finalis": 1889, "subplots_adjust": 1889, "solut": 1889, "vortex": 1889, "cylind": 1889, "sign": 1889, "And": 1889, "weakest": 1889, "strongest": 1889, "terminologi": [1891, 1896, 1900], "randomli": 1891, "101872": [1891, 1902], "70": [1890, 1891, 1892, 1893, 1898, 1902, 1903], "1004753": [1891, 1902], "57": [1891, 1893, 1902], "103659": [1891, 1902], "97": [1890, 1891, 1893, 1895, 1901, 1902], "1002993": [1891, 1902], "29": [1890, 1891, 1893, 1902], "100780": [1891, 1902], "09": [1891, 1902], "1000779": [1891, 1902], "100290": [1891, 1902], "42": [1891, 1893, 1901, 1902], "1004330": [1891, 1902], "t4": [1891, 1893, 1897, 1899, 1900], "103005": 1891, "1003540": 1891, "t5": [1891, 1893, 1899], "100102": 1891, "1004849": 1891, "t6": [1891, 1893, 1899], "104162": 1891, "1001061": 1891, "mesoscal": 1891, "2009": [1891, 1895], "37214": [1891, 1895], "42685": [1891, 1895], "28838": [1891, 1895], "23": [1891, 1893, 1895, 1899, 1901, 1902], "27767": [1891, 1895], "36368": [1891, 1895], "30095": [1891, 1895], "150": [1891, 1893, 1895, 1902, 1903], "250": [1891, 1893, 1895, 1898, 1904], "binnd": 1891, "253": 1891, "032": 1891, "542331196166035e": 1891, "207": 1891, "145": 1891, "0001230528308906": 1891, "49": [1890, 1891, 1892, 1893], "116": 1891, "0001563449299843": 1891, "314": 1891, "048": 1891, "618827331554488e": 1891, "302": 1891, "027": 1891, "694": 1891, "98695302482496e": 1891, "2018": [1891, 1899], "24": [1891, 1893, 1897, 1901, 1902], "172": 1891, "184": 1891, "52": [1891, 1893, 1901], "198": [1891, 1897], "209": [1891, 1893], "93": [1890, 1891, 1893], "78": [1890, 1891, 1893, 1901, 1903], "217": 1891, "223": 1891, "68": [1890, 1891, 1893, 1901], "227": 1891, "8000": [1891, 1900, 1902], "62": [1890, 1891, 1893, 1901, 1902], "244": [1891, 1902], "0504": [1891, 1902], "243": [1891, 1902], "0514": [1891, 1902], "0522": [1891, 1902], "33": [1891, 1893, 1901, 1902], "241": [1891, 1902], "0523": [1891, 1902], "0518": 1891, "242": 1891, "0513": 1891, "269": 1891, "836": 1891, "344": 1891, "268": 1891, "532": 1891, "267": 1891, "406": 1891, "265": 1891, "981": 1891, "coars": [1891, 1893, 1903], "216": [1891, 1893, 1903], "bremen": [1891, 1893, 1898], "germani": [1891, 1893], "00158": [1891, 1893, 1903], "00244": [1891, 1893, 1903], "00319": [1891, 1893, 1903], "00367": 1891, "00042": [1891, 1893, 1903], "inhomogen": 1891, "long_nam": 1891, "subtitl": 1891, "2500": [1891, 1892, 1893], "180": 1891, "220": 1891, "dtu10": 1891, "iea15": 1891, "iea15mw": [1891, 1894], "iwt7": [1891, 1894], "nrel5": [1891, 1897, 1900, 1902], "nrel5mw": [1891, 1892, 1893, 1894, 1895, 1897, 1900, 1902, 1903, 1904], "nstate": 1891, "ncurv": 1891, "pctcurv": 1891, "categori": 1891, "relative_to": 1891, "posixpath": 1891, "printout": [1891, 1900], "feel": 1891, "invit": 1891, "claim": 1892, "our": [1892, 1893, 1894, 1895, 1897, 1898, 1899, 1903, 1904], "realiz": [1892, 1904], "streamlines_100": [1892, 1894], "grid16": [1892, 1894], "jensen_linear_k007": [1892, 1894, 1900], "implicit": [1892, 1893, 1902, 1904], "fr": [1892, 1895, 1897, 1900, 1902], "to_datafram": [1892, 1895, 1897, 1900, 1901, 1902, 1904], "201": 1892, "158092": 1892, "491089": 1892, "1474": 1892, "211367": 1892, "208": [1892, 1893], "044994": 1892, "673386": 1892, "1580": 1892, "523022": 1892, "214": [1892, 1893], "523994": 1892, "960601": 1892, "1748": 1892, "171047": 1892, "218": 1892, "242345": 1892, "867297": 1892, "1127": 1892, "597810": 1892, "222": 1892, "297880": 1892, "283373": 1892, "1352": 1892, "715530": 1892, "899315": 1892, "731909": 1892, "808657": 1892, "1614": 1892, "607085": 1892, "1101": 1892, "211997": 1892, "236": 1892, "751304": 1892, "932726": 1892, "1156": 1892, "958672": 1892, "237": 1892, "139685": 1892, "375640": 1892, "142662": 1892, "1406": 1892, "547918": 1892, "801": 1892, "751505": 1892, "484049": 1892, "818854": 1892, "381124": 1892, "1665": 1892, "347000": 1892, "908": 1892, "970303": 1892, "311353": 1892, "703701": 1892, "149847": 1892, "1054": 1892, "871543": 1892, "454": 1892, "760942": 1892, "259090": 1892, "995899": 1892, "857833": 1892, "1185": 1892, "898485": 1892, "690": 1892, "639688": 1892, "676969": 1892, "357075": 1892, "1396": 1892, "122949": 1892, "537113": 1892, "352448": 1892, "263710": 1892, "521": 1892, "748653": 1892, "492": 1892, "140844": 1892, "447853": 1892, "960030": 1892, "917024": 1892, "724": 1892, "421405": 1892, "710": 1892, "071241": 1892, "815208": 1892, "580130": 1892, "998": 1892, "581195": 1892, "462887": 1892, "352662": 1892, "621921": 1892, "552147": 1892, "960214": 1892, "363478": 1892, "184792": 1892, "580285": 1892, "552663": 1892, "pymoo": 1893, "genet": 1893, "optimizer_pymoo": 1893, "gm": 1893, "tackl": 1893, "wind_rose_bremen": [1893, 1898, 1903], "0036700002": [1893, 1903], "1200": 1893, "900": [1893, 1901, 1903], "1500": 1893, "700": 1893, "question": 1893, "t7": [1893, 1899], "t8": [1893, 1899], "t9": 1893, "shortli": 1893, "bastankhah025_linear_k002": [1893, 1894], "n_obj_cmptn": 1893, "n_con_cmptn": 1893, "smoother": 1893, "ga": 1893, "n_max_gen": 1893, "pop_siz": 1893, "problem_par": 1893, "algo_par": 1893, "setup_par": 1893, "term_par": 1893, "ftol": 1893, "xtol": 1893, "print_info": 1893, "successfulli": 1893, "float_random": 1893, "floatrandomsampl": 1893, "defaultsingleobjectivetermin": 1893, "n_gen": 1893, "n_eval": 1893, "cv_min": 1893, "cv_avg": 1893, "f_avg": 1893, "f_min": 1893, "257950e": 1893, "094916e": 1893, "589298e": 1893, "141458e": 1893, "108843e": 1893, "097684e": 1893, "011586e": 1893, "869307e": 1893, "250281e": 1893, "238949e": 1893, "668302e": 1893, "350": 1893, "500554e": 1893, "011095e": 1893, "198486e": 1893, "450": 1893, "571793e": 1893, "998508e": 1893, "775495e": 1893, "550": 1893, "695093e": 1893, "482376e": 1893, "600": [1893, 1895, 1897, 1898, 1899], "369663e": 1893, "650": 1893, "255097e": 1893, "461710e": 1893, "135664e": 1893, "750": [1893, 1904], "098324e": 1893, "266611e": 1893, "850": 1893, "446678e": 1893, "484456e": 1893, "440080e": 1893, "151751e": 1893, "917821e": 1893, "998273e": 1893, "871628e": 1893, "1050": 1893, "019366e": 1893, "071983e": 1893, "1100": 1893, "4405916400": 1893, "193676e": 1893, "1150": 1893, "9794099827": 1893, "349004e": 1893, "000000e": 1893, "738912e": 1893, "632250e": 1893, "1250": 1893, "137290e": 1893, "629958e": 1893, "633040e": 1893, "1300": 1893, "1859595870": 1893, "623456e": 1893, "1350": 1893, "6172307553": 1893, "623231e": 1893, "635398e": 1893, "1400": 1893, "0289892170": 1893, "623859e": 1893, "637392e": 1893, "1450": 1893, "630865e": 1893, "639713e": 1893, "636295e": 1893, "648299e": 1893, "1550": 1893, "639242e": 1893, "1600": 1893, "642970e": 1893, "659120e": 1893, "1650": 1893, "647586e": 1893, "1700": 1893, "651638e": 1893, "664510e": 1893, "1750": 1893, "656008e": 1893, "667086e": 1893, "1800": 1893, "660144e": 1893, "672340e": 1893, "37": 1893, "1850": 1893, "664176e": 1893, "679336e": 1893, "1900": 1893, "668654e": 1893, "683192e": 1893, "1950": 1893, "672131e": 1893, "675730e": 1893, "684436e": 1893, "2050": 1893, "679345e": 1893, "685910e": 1893, "2100": 1893, "682198e": 1893, "687477e": 1893, "2150": 1893, "684352e": 1893, "690953e": 1893, "2200": 1893, "686737e": 1893, "692379e": 1893, "2250": 1893, "688213e": 1893, "693244e": 1893, "2300": 1893, "690648e": 1893, "698961e": 1893, "2350": 1893, "693554e": 1893, "701783e": 1893, "2400": 1893, "696589e": 1893, "703675e": 1893, "2450": 1893, "699951e": 1893, "705554e": 1893, "702238e": 1893, "705714e": 1893, "2550": 1893, "704255e": 1893, "710990e": 1893, "2600": 1893, "706153e": 1893, "713617e": 1893, "2650": 1893, "708070e": 1893, "713903e": 1893, "54": 1893, "2700": 1893, "709566e": 1893, "2750": 1893, "711365e": 1893, "714727e": 1893, "2800": 1893, "712767e": 1893, "715763e": 1893, "2850": 1893, "713924e": 1893, "717583e": 1893, "2900": 1893, "715063e": 1893, "718967e": 1893, "59": [1893, 1899], "2950": 1893, "716309e": 1893, "720381e": 1893, "717715e": 1893, "721396e": 1893, "61": 1893, "3050": 1893, "718699e": 1893, "722662e": 1893, "3100": 1893, "719379e": 1893, "723719e": 1893, "63": [1893, 1901, 1902], "3150": 1893, "720750e": 1893, "728523e": 1893, "3200": 1893, "721825e": 1893, "3250": 1893, "723489e": 1893, "730297e": 1893, "66": [1890, 1893, 1901, 1902], "3300": 1893, "724960e": 1893, "3350": 1893, "726414e": 1893, "3400": 1893, "728228e": 1893, "736205e": 1893, "69": 1893, "3450": 1893, "729573e": 1893, "3500": 1893, "730764e": 1893, "3550": 1893, "732604e": 1893, "740851e": 1893, "3600": 1893, "734725e": 1893, "3650": 1893, "736656e": 1893, "3700": 1893, "738042e": 1893, "742883e": 1893, "3750": 1893, "739408e": 1893, "76": [1890, 1893], "3800": 1893, "740628e": 1893, "745662e": 1893, "77": 1893, "3850": 1893, "742020e": 1893, "747658e": 1893, "3900": 1893, "743480e": 1893, "748826e": 1893, "3950": 1893, "745263e": 1893, "750244e": 1893, "746462e": 1893, "4050": 1893, "747639e": 1893, "750263e": 1893, "82": [1893, 1901], "4100": 1893, "748825e": 1893, "750442e": 1893, "4150": 1893, "749469e": 1893, "750688e": 1893, "84": [1893, 1901, 1902], "4200": 1893, "750088e": 1893, "751212e": 1893, "4250": 1893, "750365e": 1893, "4300": 1893, "750600e": 1893, "751361e": 1893, "4350": 1893, "750885e": 1893, "752174e": 1893, "4400": 1893, "751208e": 1893, "752654e": 1893, "4450": 1893, "751561e": 1893, "752717e": 1893, "4500": 1893, "751994e": 1893, "752956e": 1893, "4550": 1893, "752418e": 1893, "753591e": 1893, "4600": 1893, "755239e": 1893, "4650": 1893, "753058e": 1893, "755383e": 1893, "94": [1890, 1893, 1901, 1903], "4700": 1893, "753560e": 1893, "755434e": 1893, "4750": 1893, "754149e": 1893, "96": 1893, "4800": 1893, "754853e": 1893, "756107e": 1893, "4850": 1893, "755318e": 1893, "756331e": 1893, "98": [1890, 1893], "4900": 1893, "755540e": 1893, "756656e": 1893, "4950": 1893, "755761e": 1893, "756008e": 1893, "28783": 1893, "277672267686": 1893, "x_0000": 1893, "114235e": 1893, "y_0000": 1893, "311872e": 1893, "x_0001": 1893, "197274e": 1893, "y_0001": 1893, "544626e": 1893, "x_0002": 1893, "998818e": 1893, "y_0002": 1893, "087410e": 1893, "x_0003": 1893, "932613e": 1893, "y_0003": 1893, "498619e": 1893, "x_0004": 1893, "951248e": 1893, "y_0004": 1893, "494226e": 1893, "x_0005": 1893, "365731e": 1893, "y_0005": 1893, "180728e": 1893, "x_0006": 1893, "168690e": 1893, "y_0006": 1893, "726276e": 1893, "x_0007": 1893, "468598e": 1893, "y_0007": 1893, "232537e": 1893, "x_0008": 1893, "999757e": 1893, "y_0008": 1893, "507834e": 1893, "x_0009": 1893, "017820e": 1893, "y_0009": 1893, "495002e": 1893, "878328e": 1893, "boundary_0000": 1893, "573154e": 1893, "boundary_0001": 1893, "boundary_0002": 1893, "182467e": 1893, "boundary_0003": 1893, "381264e": 1893, "boundary_0004": 1893, "875224e": 1893, "boundary_0005": 1893, "boundary_0006": 1893, "787956e": 1893, "boundary_0007": 1893, "385391e": 1893, "boundary_0008": 1893, "426929e": 1893, "boundary_0009": 1893, "781952e": 1893, "dist_0_1": 1893, "434586e": 1893, "dist_0_2": 1893, "027015e": 1893, "dist_0_3": 1893, "421938e": 1893, "dist_0_4": 1893, "439414e": 1893, "dist_0_5": 1893, "194822e": 1893, "dist_0_6": 1893, "880748e": 1893, "dist_0_7": 1893, "044156e": 1893, "dist_0_8": 1893, "585859e": 1893, "dist_0_9": 1893, "377881e": 1893, "dist_1_2": 1893, "374803e": 1893, "dist_1_3": 1893, "051430e": 1893, "dist_1_4": 1893, "639116e": 1893, "dist_1_5": 1893, "742672e": 1893, "dist_1_6": 1893, "511013e": 1893, "dist_1_7": 1893, "572399e": 1893, "dist_1_8": 1893, "421784e": 1893, "dist_1_9": 1893, "268625e": 1893, "dist_2_3": 1893, "592622e": 1893, "dist_2_4": 1893, "860049e": 1893, "dist_2_5": 1893, "508672e": 1893, "dist_2_6": 1893, "703977e": 1893, "dist_2_7": 1893, "298466e": 1893, "dist_2_8": 1893, "339020e": 1893, "dist_2_9": 1893, "916108e": 1893, "dist_3_4": 1893, "971977e": 1893, "dist_3_5": 1893, "895907e": 1893, "dist_3_6": 1893, "012944e": 1893, "dist_3_7": 1893, "762303e": 1893, "dist_3_8": 1893, "245126e": 1893, "dist_3_9": 1893, "394927e": 1893, "dist_4_5": 1893, "818416e": 1893, "dist_4_6": 1893, "313328e": 1893, "dist_4_7": 1893, "002709e": 1893, "dist_4_8": 1893, "959411e": 1893, "dist_4_9": 1893, "041244e": 1893, "dist_5_6": 1893, "566637e": 1893, "dist_5_7": 1893, "512055e": 1893, "dist_5_8": 1893, "293245e": 1893, "dist_5_9": 1893, "389183e": 1893, "dist_6_7": 1893, "137620e": 1893, "dist_6_8": 1893, "391898e": 1893, "dist_6_9": 1893, "735820e": 1893, "dist_7_8": 1893, "750976e": 1893, "dist_7_9": 1893, "215227e": 1893, "dist_8_9": 1893, "322396e": 1893, "210": 1893, "211": 1893, "212": 1893, "213": 1893, "215": 1893, "995": 1893, "081": 1893, "109": 1893, "5e": 1893, "611": 1893, "1197": 1893, "999": 1893, "546": 1893, "501": 1893, "131": [1893, 1895], "654": 1893, "508": 1893, "495e": 1893, "00013": 1893, "u2": [1893, 1899, 1900, 1901], "dpar": 1893, "outside_whit": 1893, "organ": 1894, "axial_induct": 1894, "farm_pmask": 1894, "pmask": [1894, 1897, 1898], "farm_hubh_data": 1894, "hubh_data": 1894, "farm_kti": 1894, "farm_kti_02": 1894, "kti_02": [1894, 1902], "farm_kti_04": 1894, "kti_04": 1894, "farm_kti_05": 1894, "kti_05": [1894, 1903, 1904], "farm_kti_amb": 1894, "kti_amb": 1894, "farm_kti_amb_02": 1894, "kti_amb_02": 1894, "farm_kti_amb_04": 1894, "kti_amb_04": 1894, "farm_kti_amb_05": 1894, "kti_amb_05": 1894, "farm_thrust2ct": 1894, "farm_yaw2yawm": 1894, "farm_yawm2yaw": 1894, "axiwake10": 1894, "axiwake2": 1894, "axiwake20": 1894, "axiwake3": 1894, "axiwake4": 1894, "axiwake5": 1894, "axiwake6": 1894, "axiwake7": 1894, "axiwake8": 1894, "axiwake9": 1894, "distslic": 1894, "distsliced100": 1894, "distsliced16": 1894, "distsliced25": 1894, "distsliced36": 1894, "distsliced4": 1894, "distsliced400": 1894, "distsliced49": 1894, "distsliced64": 1894, "distsliced81": 1894, "distsliced9": 1894, "grid100": 1894, "grid25": 1894, "grid4": 1894, "grid400": 1894, "grid49": 1894, "grid64": 1894, "grid81": 1894, "grid9": [1894, 1895], "top_hat": 1894, "level10": 1894, "level2": 1894, "level20": 1894, "level3": 1894, "level4": 1894, "level5": 1894, "level6": 1894, "level7": 1894, "level8": 1894, "level9": 1894, "5mw": [1894, 1898, 1900, 1902], "null_typ": 1894, "rotor_wd_farmo": 1894, "seq_dyn_wak": [1894, 1899], "seq_dyn_wakes_10min": 1894, "seq_dyn_wakes_10": 1894, "seq_dyn_wakes_1min": [1894, 1899], "seq_dyn_wakes_1": 1894, "seq_dyn_wakes_30min": 1894, "seq_dyn_wakes_30": 1894, "streamlines_1": 1894, "streamlines_10": 1894, "streamlines_100_farmo": 1894, "streamlines_100_yaw": 1894, "streamlines_10_farmo": 1894, "streamlines_10_yaw": 1894, "streamlines_1_farmo": 1894, "streamlines_1_yaw": 1894, "streamlines_5": 1894, "streamlines_50": 1894, "streamlines_500": 1894, "streamlines_500_farmo": 1894, "streamlines_500_yaw": 1894, "streamlines_50_farmo": 1894, "streamlines_50_yaw": 1894, "streamlines_5_farmo": 1894, "streamlines_5_yaw": 1894, "timelines_10min": 1894, "timelines_10": [1894, 1901], "timelines_1km": 1894, "timelines_1min": 1894, "timelines_1": 1894, "timelines_30min": 1894, "timelines_30": 1894, "bastankhah025b_cub": 1894, "ws_cubic": 1894, "bastankhah025b_cubic_amb": 1894, "ws_cubic_amb": 1894, "bastankhah025b_cubic_amb_k002": 1894, "bastankhah025b_cubic_amb_k004": 1894, "bastankhah025b_cubic_k002": 1894, "bastankhah025b_cubic_k004": 1894, "bastankhah025b_linear": 1894, "bastankhah025b_linear_amb": 1894, "ws_linear_amb": 1894, "bastankhah025b_linear_amb_k002": 1894, "bastankhah025b_linear_amb_k004": 1894, "bastankhah025b_linear_amb_lim": 1894, "ws_linear_amb_lim": 1894, "bastankhah025b_linear_amb_lim_k002": 1894, "bastankhah025b_linear_amb_lim_k004": 1894, "bastankhah025b_linear_k002": 1894, "bastankhah025b_linear_k004": 1894, "bastankhah025b_linear_lim": 1894, "bastankhah025b_linear_lim_k002": 1894, "bastankhah025b_linear_lim_k004": 1894, "bastankhah025b_max_amb": 1894, "ws_max_amb": 1894, "bastankhah025b_max_amb_k002": 1894, "bastankhah025b_max_amb_k004": 1894, "bastankhah025b_product": 1894, "ws_product": 1894, "bastankhah025b_product_k002": 1894, "bastankhah025b_product_k004": 1894, "bastankhah025b_product_lim": 1894, "ws_product_lim": 1894, "bastankhah025b_product_lim_k002": 1894, "bastankhah025b_product_lim_k004": 1894, "bastankhah025b_quadrat": 1894, "ws_quadrat": 1894, "bastankhah025b_quadratic_amb": 1894, "ws_quadratic_amb": 1894, "bastankhah025b_quadratic_amb_k002": 1894, "bastankhah025b_quadratic_amb_k004": 1894, "bastankhah025b_quadratic_amb_lim": 1894, "ws_quadratic_amb_lim": 1894, "bastankhah025b_quadratic_amb_lim_k002": 1894, "bastankhah025b_quadratic_amb_lim_k004": 1894, "bastankhah025b_quadratic_k002": 1894, "bastankhah025b_quadratic_k004": 1894, "bastankhah025b_quart": 1894, "ws_quartic": 1894, "bastankhah025b_quartic_amb": 1894, "ws_quartic_amb": 1894, "bastankhah025b_quartic_amb_k002": 1894, "bastankhah025b_quartic_amb_k004": 1894, "bastankhah025b_quartic_k002": 1894, "bastankhah025b_quartic_k004": 1894, "bastankhah025b_wmax": 1894, "ws_wmax": 1894, "bastankhah025b_wmax_k002": 1894, "bastankhah025b_wmax_k004": 1894, "bastankhah025b_wquadratic_lim": 1894, "ws_wquadratic_lim": 1894, "bastankhah025b_wquadratic_lim_k002": 1894, "bastankhah025b_wquadratic_lim_k004": 1894, "bastankhah025_cub": 1894, "bastankhah025_cubic_amb": 1894, "bastankhah025_cubic_amb_k002": 1894, "bastankhah025_cubic_amb_k004": 1894, "bastankhah025_cubic_k002": 1894, "bastankhah025_cubic_k004": 1894, "bastankhah025_linear": 1894, "bastankhah025_linear_amb": 1894, "bastankhah025_linear_amb_k002": 1894, "bastankhah025_linear_amb_k004": 1894, "bastankhah025_linear_amb_lim": 1894, "bastankhah025_linear_amb_lim_k002": 1894, "bastankhah025_linear_amb_lim_k004": 1894, "bastankhah025_linear_k004": 1894, "bastankhah025_linear_lim": 1894, "bastankhah025_linear_lim_k002": 1894, "bastankhah025_max_amb": 1894, "bastankhah025_max_amb_k002": 1894, "bastankhah025_max_amb_k004": 1894, "bastankhah025_product": 1894, "bastankhah025_product_k002": 1894, "bastankhah025_product_k004": 1894, "bastankhah025_product_lim": 1894, "bastankhah025_product_lim_k002": 1894, "bastankhah025_product_lim_k004": 1894, "bastankhah025_quadrat": 1894, "bastankhah025_quadratic_amb": 1894, "bastankhah025_quadratic_amb_k002": 1894, "bastankhah025_quadratic_amb_k004": 1894, "bastankhah025_quadratic_amb_lim": 1894, "bastankhah025_quadratic_amb_lim_k002": 1894, "bastankhah025_quadratic_amb_lim_k004": 1894, "bastankhah025_quadratic_k002": 1894, "bastankhah025_quadratic_k004": 1894, "bastankhah025_quart": 1894, "bastankhah025_quartic_amb": 1894, "bastankhah025_quartic_amb_k002": 1894, "bastankhah025_quartic_amb_k004": 1894, "bastankhah025_quartic_k002": 1894, "bastankhah025_quartic_k004": 1894, "bastankhah025_wmax": 1894, "bastankhah025_wmax_k002": 1894, "bastankhah025_wmax_k004": 1894, "bastankhah025_wquadratic_lim": 1894, "bastankhah025_wquadratic_lim_k002": 1894, "bastankhah025_wquadratic_lim_k004": 1894, "bastankhah2014b_cub": 1894, "bastankhah2014b_cubic_amb": 1894, "bastankhah2014b_cubic_amb_k002": 1894, "bastankhah2014b_cubic_amb_k004": 1894, "bastankhah2014b_cubic_k002": 1894, "bastankhah2014b_cubic_k004": 1894, "bastankhah2014b_linear": 1894, "bastankhah2014b_linear_amb": 1894, "bastankhah2014b_linear_amb_k002": 1894, "bastankhah2014b_linear_amb_k004": 1894, "bastankhah2014b_linear_amb_lim": 1894, "bastankhah2014b_linear_amb_lim_k002": 1894, "bastankhah2014b_linear_amb_lim_k004": 1894, "bastankhah2014b_linear_k002": 1894, "bastankhah2014b_linear_k004": 1894, "bastankhah2014b_linear_lim": 1894, "bastankhah2014b_linear_lim_k002": 1894, "bastankhah2014b_linear_lim_k004": 1894, "bastankhah2014b_max_amb": 1894, "bastankhah2014b_max_amb_k002": 1894, "bastankhah2014b_max_amb_k004": 1894, "bastankhah2014b_product": 1894, "bastankhah2014b_product_k002": 1894, "bastankhah2014b_product_k004": 1894, "bastankhah2014b_product_lim": 1894, "bastankhah2014b_product_lim_k002": 1894, "bastankhah2014b_product_lim_k004": 1894, "bastankhah2014b_quadrat": 1894, "bastankhah2014b_quadratic_amb": 1894, "bastankhah2014b_quadratic_amb_k002": 1894, "bastankhah2014b_quadratic_amb_k004": 1894, "bastankhah2014b_quadratic_amb_lim": 1894, "bastankhah2014b_quadratic_amb_lim_k002": 1894, "bastankhah2014b_quadratic_amb_lim_k004": 1894, "bastankhah2014b_quadratic_k002": 1894, "bastankhah2014b_quadratic_k004": 1894, "bastankhah2014b_quart": 1894, "bastankhah2014b_quartic_amb": 1894, "bastankhah2014b_quartic_amb_k002": 1894, "bastankhah2014b_quartic_amb_k004": 1894, "bastankhah2014b_quartic_k002": 1894, "bastankhah2014b_quartic_k004": 1894, "bastankhah2014b_wmax": 1894, "bastankhah2014b_wmax_k002": 1894, "bastankhah2014b_wmax_k004": 1894, "bastankhah2014b_wquadratic_lim": 1894, "bastankhah2014b_wquadratic_lim_k002": 1894, "bastankhah2014b_wquadratic_lim_k004": 1894, "bastankhah2014_cub": 1894, "bastankhah2014_cubic_amb": 1894, "bastankhah2014_cubic_amb_k002": 1894, "bastankhah2014_cubic_amb_k004": 1894, "bastankhah2014_cubic_k002": 1894, "bastankhah2014_cubic_k004": 1894, "bastankhah2014_linear": [1894, 1903], "bastankhah2014_linear_amb": 1894, "bastankhah2014_linear_amb_k002": 1894, "bastankhah2014_linear_amb_k004": 1894, "bastankhah2014_linear_amb_lim": 1894, "bastankhah2014_linear_amb_lim_k002": 1894, "bastankhah2014_linear_amb_lim_k004": 1894, "bastankhah2014_linear_k002": [1894, 1895, 1897, 1898], "bastankhah2014_linear_k004": [1894, 1901], "bastankhah2014_linear_lim": 1894, "bastankhah2014_linear_lim_k002": 1894, "bastankhah2014_linear_lim_k004": 1894, "bastankhah2014_max_amb": 1894, "bastankhah2014_max_amb_k002": 1894, "bastankhah2014_max_amb_k004": 1894, "bastankhah2014_product": 1894, "bastankhah2014_product_k002": 1894, "bastankhah2014_product_k004": 1894, "bastankhah2014_product_lim": 1894, "bastankhah2014_product_lim_k002": 1894, "bastankhah2014_product_lim_k004": 1894, "bastankhah2014_quadrat": [1894, 1902], "bastankhah2014_quadratic_amb": 1894, "bastankhah2014_quadratic_amb_k002": 1894, "bastankhah2014_quadratic_amb_k004": 1894, "bastankhah2014_quadratic_amb_lim": 1894, "bastankhah2014_quadratic_amb_lim_k002": 1894, "bastankhah2014_quadratic_amb_lim_k004": 1894, "bastankhah2014_quadratic_k002": 1894, "bastankhah2014_quadratic_k004": 1894, "bastankhah2014_quart": 1894, "bastankhah2014_quartic_amb": 1894, "bastankhah2014_quartic_amb_k002": 1894, "bastankhah2014_quartic_amb_k004": 1894, "bastankhah2014_quartic_k002": 1894, "bastankhah2014_quartic_k004": 1894, "bastankhah2014_wmax": 1894, "bastankhah2014_wmax_k002": 1894, "bastankhah2014_wmax_k004": 1894, "bastankhah2014_wquadratic_lim": 1894, "bastankhah2014_wquadratic_lim_k002": 1894, "bastankhah2014_wquadratic_lim_k004": 1894, "bastankhah2016b_cub": 1894, "bastankhah2016b_cubic_amb": 1894, "bastankhah2016b_cubic_amb_k002": 1894, "bastankhah2016b_cubic_amb_k004": 1894, "bastankhah2016b_cubic_k002": 1894, "bastankhah2016b_cubic_k004": 1894, "bastankhah2016b_linear": 1894, "bastankhah2016b_linear_amb": 1894, "bastankhah2016b_linear_amb_k002": 1894, "bastankhah2016b_linear_amb_k004": 1894, "bastankhah2016b_linear_amb_lim": 1894, "bastankhah2016b_linear_amb_lim_k002": 1894, "bastankhah2016b_linear_amb_lim_k004": 1894, "bastankhah2016b_linear_k002": 1894, "bastankhah2016b_linear_k004": 1894, "bastankhah2016b_linear_lim": 1894, "bastankhah2016b_linear_lim_k002": 1894, "bastankhah2016b_linear_lim_k004": 1894, "bastankhah2016b_max_amb": 1894, "bastankhah2016b_max_amb_k002": 1894, "bastankhah2016b_max_amb_k004": 1894, "bastankhah2016b_product": 1894, "bastankhah2016b_product_k002": 1894, "bastankhah2016b_product_k004": 1894, "bastankhah2016b_product_lim": 1894, "bastankhah2016b_product_lim_k002": 1894, "bastankhah2016b_product_lim_k004": 1894, "bastankhah2016b_quadrat": 1894, "bastankhah2016b_quadratic_amb": 1894, "bastankhah2016b_quadratic_amb_k002": 1894, "bastankhah2016b_quadratic_amb_k004": 1894, "bastankhah2016b_quadratic_amb_lim": 1894, "bastankhah2016b_quadratic_amb_lim_k002": 1894, "bastankhah2016b_quadratic_amb_lim_k004": 1894, "bastankhah2016b_quadratic_k002": 1894, "bastankhah2016b_quadratic_k004": 1894, "bastankhah2016b_quart": 1894, "bastankhah2016b_quartic_amb": 1894, "bastankhah2016b_quartic_amb_k002": 1894, "bastankhah2016b_quartic_amb_k004": 1894, "bastankhah2016b_quartic_k002": 1894, "bastankhah2016b_quartic_k004": 1894, "bastankhah2016b_wmax": 1894, "bastankhah2016b_wmax_k002": 1894, "bastankhah2016b_wmax_k004": 1894, "bastankhah2016b_wquadratic_lim": 1894, "bastankhah2016b_wquadratic_lim_k002": 1894, "bastankhah2016b_wquadratic_lim_k004": 1894, "bastankhah2016_cub": 1894, "bastankhah2016_cubic_amb": 1894, "bastankhah2016_cubic_amb_k002": 1894, "bastankhah2016_cubic_amb_k004": 1894, "bastankhah2016_cubic_k002": 1894, "bastankhah2016_cubic_k004": 1894, "bastankhah2016_linear": [1894, 1904], "bastankhah2016_linear_amb": 1894, "bastankhah2016_linear_amb_k002": 1894, "bastankhah2016_linear_amb_k004": 1894, "bastankhah2016_linear_amb_lim": 1894, "bastankhah2016_linear_amb_lim_k002": 1894, "bastankhah2016_linear_amb_lim_k004": 1894, "bastankhah2016_linear_k002": 1894, "bastankhah2016_linear_k004": 1894, "bastankhah2016_linear_lim": 1894, "bastankhah2016_linear_lim_k002": 1894, "bastankhah2016_max_amb": 1894, "bastankhah2016_max_amb_k002": 1894, "bastankhah2016_max_amb_k004": 1894, "bastankhah2016_product": 1894, "bastankhah2016_product_k002": 1894, "bastankhah2016_product_k004": 1894, "bastankhah2016_product_lim": 1894, "bastankhah2016_product_lim_k002": 1894, "bastankhah2016_product_lim_k004": 1894, "bastankhah2016_quadrat": 1894, "bastankhah2016_quadratic_amb": 1894, "bastankhah2016_quadratic_amb_k002": 1894, "bastankhah2016_quadratic_amb_k004": 1894, "bastankhah2016_quadratic_amb_lim": 1894, "bastankhah2016_quadratic_amb_lim_k002": 1894, "bastankhah2016_quadratic_amb_lim_k004": 1894, "bastankhah2016_quadratic_k002": 1894, "bastankhah2016_quadratic_k004": 1894, "bastankhah2016_quart": 1894, "bastankhah2016_quartic_amb": 1894, "bastankhah2016_quartic_amb_k002": 1894, "bastankhah2016_quartic_amb_k004": 1894, "bastankhah2016_quartic_k002": 1894, "bastankhah2016_quartic_k004": 1894, "bastankhah2016_wmax": 1894, "bastankhah2016_wmax_k002": 1894, "bastankhah2016_wmax_k004": 1894, "bastankhah2016_wquadratic_lim": 1894, "bastankhah2016_wquadratic_lim_k002": 1894, "bastankhah2016_wquadratic_lim_k004": 1894, "crespohernandez_ambti_cub": 1894, "ti_cub": 1894, "crespohernandez_ambti_linear": 1894, "ti_linear": 1894, "crespohernandez_ambti_max": 1894, "ti_max": 1894, "crespohernandez_ambti_quadrat": 1894, "crespohernandez_ambti_quart": 1894, "ti_quart": 1894, "crespohernandez_cub": 1894, "crespohernandez_cubic_k002": 1894, "crespohernandez_linear": 1894, "crespohernandez_linear_k002": 1894, "crespohernandez_max": [1894, 1902, 1903], "crespohernandez_max_k002": 1894, "crespohernandez_quadrat": 1894, "crespohernandez_quadratic_k002": 1894, "crespohernandez_quart": 1894, "crespohernandez_quartic_k002": 1894, "iecti2005_cub": 1894, "19076020221856677": 1894, "iecti2005_linear": 1894, "iecti2005_max": 1894, "iecti2005_quadrat": 1894, "iecti2005_quart": 1894, "iecti2019_cub": 1894, "iecti2019_linear": 1894, "iecti2019_max": [1894, 1904], "iecti2019_quadrat": 1894, "jensen_cub": 1894, "jensen_cubic_amb": 1894, "jensen_cubic_amb_k002": 1894, "jensen_cubic_amb_k004": 1894, "jensen_cubic_amb_k007": 1894, "jensen_cubic_amb_k0075": 1894, "075": 1894, "jensen_cubic_k002": 1894, "jensen_cubic_k004": 1894, "jensen_cubic_k007": 1894, "jensen_cubic_k0075": 1894, "jensen_linear": 1894, "jensen_linear_amb": 1894, "jensen_linear_amb_k002": 1894, "jensen_linear_amb_k004": 1894, "jensen_linear_amb_k007": 1894, "jensen_linear_amb_k0075": 1894, "jensen_linear_amb_lim": 1894, "jensen_linear_amb_lim_k002": 1894, "jensen_linear_amb_lim_k004": 1894, "jensen_linear_amb_lim_k007": 1894, "jensen_linear_amb_lim_k0075": 1894, "jensen_linear_k002": 1894, "jensen_linear_k004": 1894, "jensen_linear_k0075": 1894, "jensen_linear_lim": 1894, "jensen_linear_lim_k002": 1894, "jensen_linear_lim_k004": 1894, "jensen_linear_lim_k007": 1894, "jensen_linear_lim_k0075": 1894, "jensen_max_amb": 1894, "jensen_max_amb_k002": 1894, "jensen_max_amb_k004": 1894, "jensen_max_amb_k007": 1894, "jensen_max_amb_k0075": 1894, "jensen_product": 1894, "jensen_product_k002": 1894, "jensen_product_k004": 1894, "jensen_product_k007": 1894, "jensen_product_k0075": 1894, "jensen_product_lim": 1894, "jensen_product_lim_k002": 1894, "jensen_product_lim_k004": 1894, "jensen_product_lim_k007": 1894, "jensen_product_lim_k0075": 1894, "jensen_quadrat": 1894, "jensen_quadratic_amb": 1894, "jensen_quadratic_amb_k002": 1894, "jensen_quadratic_amb_k004": 1894, "jensen_quadratic_amb_k007": 1894, "jensen_quadratic_amb_k0075": 1894, "jensen_quadratic_amb_lim": 1894, "jensen_quadratic_amb_lim_k002": 1894, "jensen_quadratic_amb_lim_k004": 1894, "jensen_quadratic_amb_lim_k007": 1894, "jensen_quadratic_amb_lim_k0075": 1894, "jensen_quadratic_k002": 1894, "jensen_quadratic_k004": 1894, "jensen_quadratic_k007": 1894, "jensen_quadratic_k0075": 1894, "jensen_quart": 1894, "jensen_quartic_amb": 1894, "jensen_quartic_amb_k002": 1894, "jensen_quartic_amb_k004": 1894, "jensen_quartic_amb_k007": 1894, "jensen_quartic_amb_k0075": 1894, "jensen_quartic_k002": 1894, "jensen_quartic_k004": 1894, "jensen_quartic_k007": 1894, "jensen_quartic_k0075": 1894, "jensen_wmax": 1894, "jensen_wmax_k002": 1894, "jensen_wmax_k004": 1894, "jensen_wmax_k007": 1894, "jensen_wmax_k0075": 1894, "jensen_wquadratic_lim": 1894, "jensen_wquadratic_lim_k002": 1894, "jensen_wquadratic_lim_k004": 1894, "jensen_wquadratic_lim_k007": 1894, "jensen_wquadratic_lim_k0075": 1894, "turboparkb_cubic_a002": 1894, "turboparkb_cubic_a004": 1894, "turboparkb_cubic_amb_a002": 1894, "turboparkb_cubic_amb_a004": 1894, "turboparkb_linear_a002": 1894, "turboparkb_linear_a004": 1894, "turboparkb_linear_amb_a002": 1894, "turboparkb_linear_amb_a004": 1894, "turboparkb_linear_amb_lim_a002": 1894, "turboparkb_linear_amb_lim_a004": 1894, "turboparkb_linear_lim_a002": 1894, "turboparkb_linear_lim_a004": 1894, "turboparkb_max_amb_a002": 1894, "turboparkb_max_amb_a004": 1894, "turboparkb_product_a002": 1894, "turboparkb_product_a004": 1894, "turboparkb_product_lim_a002": 1894, "turboparkb_product_lim_a004": 1894, "turboparkb_quadratic_a002": 1894, "turboparkb_quadratic_a004": 1894, "turboparkb_quadratic_amb_a002": 1894, "turboparkb_quadratic_amb_a004": 1894, "turboparkb_quadratic_amb_lim_a002": 1894, "turboparkb_quadratic_amb_lim_a004": 1894, "turboparkb_quartic_a002": 1894, "turboparkb_quartic_a004": 1894, "turboparkb_quartic_amb_a002": 1894, "turboparkb_quartic_amb_a004": 1894, "turboparkb_wmax_a002": 1894, "turboparkb_wmax_a004": 1894, "turboparkb_wquadratic_lim_a002": 1894, "turboparkb_wquadratic_lim_a004": 1894, "turboparkix_cubic_a002_dx001": 1894, "turboparkix_cubic_a002_dx1": 1894, "turboparkix_cubic_a002_dx10": 1894, "turboparkix_cubic_a002_dx100": 1894, "turboparkix_cubic_a002_dx5": 1894, "turboparkix_cubic_a002_dx50": 1894, "turboparkix_cubic_a004_dx001": 1894, "turboparkix_cubic_a004_dx1": 1894, "turboparkix_cubic_a004_dx10": 1894, "turboparkix_cubic_a004_dx100": 1894, "turboparkix_cubic_a004_dx5": 1894, "turboparkix_cubic_a004_dx50": 1894, "turboparkix_cubic_amb_a002_dx001": 1894, "turboparkix_cubic_amb_a002_dx1": 1894, "turboparkix_cubic_amb_a002_dx10": 1894, "turboparkix_cubic_amb_a002_dx100": 1894, "turboparkix_cubic_amb_a002_dx5": 1894, "turboparkix_cubic_amb_a002_dx50": 1894, "turboparkix_cubic_amb_a004_dx001": 1894, "turboparkix_cubic_amb_a004_dx1": 1894, "turboparkix_cubic_amb_a004_dx10": 1894, "turboparkix_cubic_amb_a004_dx100": 1894, "turboparkix_cubic_amb_a004_dx5": 1894, "turboparkix_cubic_amb_a004_dx50": 1894, "turboparkix_linear_a002_dx001": 1894, "turboparkix_linear_a002_dx1": 1894, "turboparkix_linear_a002_dx10": 1894, "turboparkix_linear_a002_dx100": 1894, "turboparkix_linear_a002_dx5": 1894, "turboparkix_linear_a002_dx50": 1894, "turboparkix_linear_a004_dx001": 1894, "turboparkix_linear_a004_dx1": 1894, "turboparkix_linear_a004_dx10": 1894, "turboparkix_linear_a004_dx100": 1894, "turboparkix_linear_a004_dx5": 1894, "turboparkix_linear_a004_dx50": 1894, "turboparkix_linear_amb_a002_dx001": 1894, "turboparkix_linear_amb_a002_dx1": 1894, "turboparkix_linear_amb_a002_dx10": 1894, "turboparkix_linear_amb_a002_dx100": 1894, "turboparkix_linear_amb_a002_dx5": 1894, "turboparkix_linear_amb_a002_dx50": 1894, "turboparkix_linear_amb_a004_dx001": 1894, "turboparkix_linear_amb_a004_dx1": 1894, "turboparkix_linear_amb_a004_dx10": 1894, "turboparkix_linear_amb_a004_dx100": 1894, "turboparkix_linear_amb_a004_dx5": 1894, "turboparkix_linear_amb_a004_dx50": 1894, "turboparkix_linear_amb_lim_a002_dx001": 1894, "turboparkix_linear_amb_lim_a002_dx1": 1894, "turboparkix_linear_amb_lim_a002_dx10": 1894, "turboparkix_linear_amb_lim_a002_dx100": 1894, "turboparkix_linear_amb_lim_a002_dx5": 1894, "turboparkix_linear_amb_lim_a002_dx50": 1894, "turboparkix_linear_amb_lim_a004_dx001": 1894, "turboparkix_linear_amb_lim_a004_dx1": 1894, "turboparkix_linear_amb_lim_a004_dx10": 1894, "turboparkix_linear_amb_lim_a004_dx100": 1894, "turboparkix_linear_amb_lim_a004_dx5": 1894, "turboparkix_linear_amb_lim_a004_dx50": 1894, "turboparkix_linear_lim_a002_dx001": 1894, "turboparkix_linear_lim_a002_dx1": 1894, "turboparkix_linear_lim_a002_dx10": 1894, "turboparkix_linear_lim_a002_dx100": 1894, "turboparkix_linear_lim_a002_dx5": 1894, "turboparkix_linear_lim_a002_dx50": 1894, "turboparkix_linear_lim_a004_dx001": 1894, "turboparkix_linear_lim_a004_dx1": 1894, "turboparkix_linear_lim_a004_dx10": 1894, "turboparkix_linear_lim_a004_dx100": 1894, "turboparkix_linear_lim_a004_dx5": 1894, "turboparkix_linear_lim_a004_dx50": 1894, "turboparkix_max_amb_a002_dx001": 1894, "turboparkix_max_amb_a002_dx1": 1894, "turboparkix_max_amb_a002_dx10": 1894, "turboparkix_max_amb_a002_dx100": 1894, "turboparkix_max_amb_a002_dx5": 1894, "turboparkix_max_amb_a002_dx50": 1894, "turboparkix_max_amb_a004_dx001": 1894, "turboparkix_max_amb_a004_dx1": 1894, "turboparkix_max_amb_a004_dx10": 1894, "turboparkix_max_amb_a004_dx100": 1894, "turboparkix_max_amb_a004_dx5": 1894, "turboparkix_max_amb_a004_dx50": 1894, "turboparkix_product_a002_dx001": 1894, "turboparkix_product_a002_dx1": 1894, "turboparkix_product_a002_dx10": 1894, "turboparkix_product_a002_dx100": 1894, "turboparkix_product_a002_dx5": 1894, "turboparkix_product_a002_dx50": 1894, "turboparkix_product_a004_dx001": 1894, "turboparkix_product_a004_dx1": 1894, "turboparkix_product_a004_dx10": 1894, "turboparkix_product_a004_dx100": 1894, "turboparkix_product_a004_dx5": 1894, "turboparkix_product_a004_dx50": 1894, "turboparkix_product_lim_a002_dx001": 1894, "turboparkix_product_lim_a002_dx1": 1894, "turboparkix_product_lim_a002_dx10": 1894, "turboparkix_product_lim_a002_dx100": 1894, "turboparkix_product_lim_a002_dx5": 1894, "turboparkix_product_lim_a002_dx50": 1894, "turboparkix_product_lim_a004_dx001": 1894, "turboparkix_product_lim_a004_dx1": 1894, "turboparkix_product_lim_a004_dx10": 1894, "turboparkix_product_lim_a004_dx100": 1894, "turboparkix_product_lim_a004_dx5": 1894, "turboparkix_product_lim_a004_dx50": 1894, "turboparkix_quadratic_a002_dx001": 1894, "turboparkix_quadratic_a002_dx1": 1894, "turboparkix_quadratic_a002_dx10": 1894, "turboparkix_quadratic_a002_dx100": 1894, "turboparkix_quadratic_a002_dx5": 1894, "turboparkix_quadratic_a002_dx50": 1894, "turboparkix_quadratic_a004_dx001": 1894, "turboparkix_quadratic_a004_dx1": 1894, "turboparkix_quadratic_a004_dx10": 1894, "turboparkix_quadratic_a004_dx100": 1894, "turboparkix_quadratic_a004_dx5": 1894, "turboparkix_quadratic_a004_dx50": 1894, "turboparkix_quadratic_amb_a002_dx001": 1894, "turboparkix_quadratic_amb_a002_dx1": 1894, "turboparkix_quadratic_amb_a002_dx10": 1894, "turboparkix_quadratic_amb_a002_dx100": 1894, "turboparkix_quadratic_amb_a002_dx5": 1894, "turboparkix_quadratic_amb_a002_dx50": 1894, "turboparkix_quadratic_amb_a004_dx001": 1894, "turboparkix_quadratic_amb_a004_dx1": 1894, "turboparkix_quadratic_amb_a004_dx10": 1894, "turboparkix_quadratic_amb_a004_dx100": 1894, "turboparkix_quadratic_amb_a004_dx5": 1894, "turboparkix_quadratic_amb_a004_dx50": 1894, "turboparkix_quadratic_amb_lim_a002_dx001": 1894, "turboparkix_quadratic_amb_lim_a002_dx1": 1894, "turboparkix_quadratic_amb_lim_a002_dx10": 1894, "turboparkix_quadratic_amb_lim_a002_dx100": 1894, "turboparkix_quadratic_amb_lim_a002_dx5": 1894, "turboparkix_quadratic_amb_lim_a002_dx50": 1894, "turboparkix_quadratic_amb_lim_a004_dx001": 1894, "turboparkix_quadratic_amb_lim_a004_dx1": 1894, "turboparkix_quadratic_amb_lim_a004_dx10": 1894, "turboparkix_quadratic_amb_lim_a004_dx100": 1894, "turboparkix_quadratic_amb_lim_a004_dx5": 1894, "turboparkix_quadratic_amb_lim_a004_dx50": 1894, "turboparkix_quartic_a002_dx001": 1894, "turboparkix_quartic_a002_dx1": 1894, "turboparkix_quartic_a002_dx10": 1894, "turboparkix_quartic_a002_dx100": 1894, "turboparkix_quartic_a002_dx5": 1894, "turboparkix_quartic_a002_dx50": 1894, "turboparkix_quartic_a004_dx001": 1894, "turboparkix_quartic_a004_dx1": 1894, "turboparkix_quartic_a004_dx10": 1894, "turboparkix_quartic_a004_dx100": 1894, "turboparkix_quartic_a004_dx5": 1894, "turboparkix_quartic_a004_dx50": 1894, "turboparkix_quartic_amb_a002_dx001": 1894, "turboparkix_quartic_amb_a002_dx1": 1894, "turboparkix_quartic_amb_a002_dx10": 1894, "turboparkix_quartic_amb_a002_dx100": 1894, "turboparkix_quartic_amb_a002_dx5": 1894, "turboparkix_quartic_amb_a002_dx50": 1894, "turboparkix_quartic_amb_a004_dx001": 1894, "turboparkix_quartic_amb_a004_dx1": 1894, "turboparkix_quartic_amb_a004_dx10": 1894, "turboparkix_quartic_amb_a004_dx100": 1894, "turboparkix_quartic_amb_a004_dx5": 1894, "turboparkix_quartic_amb_a004_dx50": 1894, "turboparkix_wmax_a002_dx001": 1894, "turboparkix_wmax_a002_dx1": 1894, "turboparkix_wmax_a002_dx10": 1894, "turboparkix_wmax_a002_dx100": 1894, "turboparkix_wmax_a002_dx5": 1894, "turboparkix_wmax_a002_dx50": 1894, "turboparkix_wmax_a004_dx001": 1894, "turboparkix_wmax_a004_dx1": 1894, "turboparkix_wmax_a004_dx10": 1894, "turboparkix_wmax_a004_dx100": 1894, "turboparkix_wmax_a004_dx5": 1894, "turboparkix_wmax_a004_dx50": 1894, "turboparkix_wquadratic_lim_a002_dx001": 1894, "turboparkix_wquadratic_lim_a002_dx1": 1894, "turboparkix_wquadratic_lim_a002_dx10": 1894, "turboparkix_wquadratic_lim_a002_dx100": 1894, "turboparkix_wquadratic_lim_a002_dx5": 1894, "turboparkix_wquadratic_lim_a002_dx50": 1894, "turboparkix_wquadratic_lim_a004_dx001": 1894, "turboparkix_wquadratic_lim_a004_dx1": 1894, "turboparkix_wquadratic_lim_a004_dx10": 1894, "turboparkix_wquadratic_lim_a004_dx100": 1894, "turboparkix_wquadratic_lim_a004_dx5": 1894, "turboparkix_wquadratic_lim_a004_dx50": 1894, "turbopark_cubic_a002": 1894, "turbopark_cubic_a004": 1894, "turbopark_cubic_amb_a002": 1894, "turbopark_cubic_amb_a004": 1894, "turbopark_linear_a002": 1894, "turbopark_linear_a004": 1894, "turbopark_linear_amb_a002": 1894, "turbopark_linear_amb_a004": 1894, "turbopark_linear_amb_lim_a002": 1894, "turbopark_linear_amb_lim_a004": 1894, "turbopark_linear_lim_a002": 1894, "turbopark_linear_lim_a004": 1894, "turbopark_max_amb_a002": 1894, "turbopark_max_amb_a004": 1894, "turbopark_product_a002": 1894, "turbopark_product_a004": 1894, "turbopark_product_lim_a002": 1894, "turbopark_product_lim_a004": 1894, "turbopark_quadratic_a002": 1894, "turbopark_quadratic_a004": 1894, "turbopark_quadratic_amb_a002": 1894, "turbopark_quadratic_amb_a004": 1894, "turbopark_quadratic_amb_lim_a002": 1894, "turbopark_quadratic_amb_lim_a004": 1894, "turbopark_quartic_a002": 1894, "turbopark_quartic_a004": 1894, "turbopark_quartic_amb_a002": 1894, "turbopark_quartic_amb_a004": 1894, "turbopark_wmax_a002": 1894, "turbopark_wmax_a004": 1894, "turbopark_wquadratic_lim_a002": 1894, "turbopark_wquadratic_lim_a004": 1894, "ws_quadratic_lim": 1894, "my_jensen": 1894, "042": 1894, "jensenwake80": 1894, "similarli": [1894, 1897, 1904], "explor": 1895, "download": 1895, "newa": 1895, "websit": 1895, "4464": 1895, "stamp": [1895, 1899], "kinet": [1895, 1896], "variat": 1895, "neglect": 1895, "inflow": [1895, 1902], "goal": [1895, 1899], "certain": 1895, "west": [1895, 1898, 1904], "earlier": 1895, "p0": [1895, 1897, 1902, 1903], "nfarm": [1895, 1897, 1899, 1900, 1901, 1902, 1903, 1904], "1f": [1895, 1897, 1902, 1903], "2f": [1895, 1897, 1901, 1902, 1903], "340": [1895, 1898], "14377": 1895, "593022": 1895, "1533": 1895, "584614": 1895, "83636": 1895, "660154": 1895, "1034": 1895, "432767": 1895, "738764": 1895, "1069": 1895, "775436": 1895, "880119": 1895, "1133": 1895, "327951": 1895, "344888": 1895, "1388": 1895, "612517": 1895, "532676": 1895, "4041": 1895, "896723": 1895, "22320": 1895, "script": 1896, "becom": 1896, "reli": 1896, "sdata": [1897, 1904], "exce": 1897, "nor": 1897, "pmax_": 1897, "s_": 1897, "pmax_4": 1897, "6000": [1897, 1898], "pmax_2": 1897, "pmax_0": 1897, "pmax_1": 1897, "pmax_3": 1897, "set_pmax": 1897, "thought": 1897, "od": 1897, "o1": 1897, "000000": [1897, 1900, 1901, 1902, 1904], "806173": 1897, "403": 1897, "151": 1897, "106903": 1897, "997697": 1897, "651819": 1897, "129": 1897, "929624": 1897, "840554": 1897, "1771": 1897, "100000": 1897, "110762": 1897, "440": 1897, "861136": 1897, "348633": 1897, "560767": 1897, "093786": 1897, "914426": 1897, "946766": 1897, "170": [1897, 1898], "396261": 1897, "4562": 1897, "500000": 1897, "053010": 1897, "1218": 1897, "152294": 1897, "001880": 1897, "738": 1897, "445084": 1897, "522878": 1897, "578": 1897, "384285": 1897, "262615": 1897, "491": 1897, "534548": 1897, "697787": 1897, "823401": 1897, "900005": 1897, "4451": 1897, "096026": 1897, "932216": 1897, "181480": 1897, "452153": 1897, "249557": 1897, "563693": 1897, "372918": 1897, "852422": 1897, "732653": 1897, "314050": 1897, "475399": 1897, "063345": 1897, "977087": 1897, "663709": 1897, "714437": 1897, "476878": 1897, "416355": 1897, "225378": 1897, "o0": 1897, "ylorrd": 1897, "nanmax": 1897, "ylgn": 1897, "persu": 1898, "east": 1898, "wd_min": 1898, "wd_max": 1898, "191": 1898, "290": 1898, "110": 1898, "correspons": 1898, "fulfil": 1898, "nrel": [1898, 1900, 1902], "d126": [1898, 1900, 1902], "h90": [1898, 1900, 1902], "sector_rul": 1898, "rews_min": 1898, "rews_max": 1898, "5001": 1898, "benefit": 1899, "coupl": 1899, "obvious": 1899, "slower": 1899, "advantag": 1899, "parcel": 1899, "jshtml": [1899, 1901], "timeseries_3000": 1899, "230": 1899, "280": 1899, "sake": 1899, "drama": 1899, "1min": 1899, "anigen": 1899, "008": 1899, "111": 1899, "02d": 1899, "lo": 1899, "sequential_calc": 1899, "timeseries_data": [1899, 1901], "timeseries_var": [1899, 1901], "10t05": 1899, "000000000": 1899, "10t06": 1899, "10t07": 1899, "10t08": 1899, "10t09": 1899, "10t10": 1899, "10t11": 1899, "10t12": 1899, "10t13": 1899, "10t14": 1899, "10t15": 1899, "10t16": 1899, "10t17": 1899, "10t18": 1899, "10t19": 1899, "10t20": 1899, "10t21": 1899, "10t22": 1899, "10t23": 1899, "11t00": 1899, "11t01": 1899, "11t02": 1899, "11t03": 1899, "11t04": 1899, "11t05": 1899, "11t06": 1899, "11t07": 1899, "11t08": 1899, "11t09": 1899, "11t10": 1899, "11t11": 1899, "11t12": 1899, "11t13": 1899, "11t14": 1899, "11t15": 1899, "11t16": 1899, "11t17": 1899, "11t18": 1899, "11t19": 1899, "11t20": 1899, "11t21": 1899, "11t22": 1899, "11t23": 1899, "12t00": 1899, "12t01": 1899, "12t02": 1899, "12t03": 1899, "12t04": 1899, "12t05": 1899, "12t06": 1899, "477e": 1899, "6e": [1899, 1900], "summari": 1900, "skip": 1900, "ask": 1900, "519e": 1900, "2e": 1900, "2518": 1900, "600000": 1900, "790000": 1900, "633459": 1900, "1557": 1900, "076947": 1900, "803665": 1900, "176627": 1900, "1290": 1900, "332498": 1900, "808234": 1900, "955794": 1900, "1167": 1900, "325199": 1900, "812210": 1900, "821354": 1900, "1106": 1900, "880886": 1900, "818932": 1900, "15000": 1900, "916": 1900, "principl": 1901, "trajectori": 1901, "commun": 1901, "inlcud": 1901, "07t12": 1901, "446e": 1901, "631e": 1901, "157e": 1901, "078e": 1901, "039e": 1901, "020e": 1901, "098e": 1901, "549e": 1901, "275e": 1901, "373e": 1901, "186e": 1901, "593e": 1901, "farm_df": [1901, 1904], "1532": 1901, "700000": [1901, 1902], "796724": 1901, "693": 1901, "620333": 1901, "449712": 1901, "513": 1901, "555734": 1901, "gridspec_kw": 1901, "height_ratio": 1901, "anom": 1901, "panel": 1901, "013": 1901, "fun": [1901, 1902], "partialaxiwake12": 1901, "setxyhd1": 1901, "setxyhd1_t2f": 1901, "calc_yaw_centrerotor2": 1901, "calcorder1": 1901, "setambfarmresults1": 1901, "urelax13_ct": 1901, "farmwakescalculation13": 1901, "202": 1901, "timeseries_8000": 1902, "test_farm_67": 1902, "bastankhah_quadrat": 1902, "610500": 1902, "019526": 1902, "021033": 1902, "560020": 1902, "581863": 1902, "299": 1902, "145984": 1902, "4868": 1902, "1880": 1902, "222715": 1902, "490711": 1902, "4777": 1902, "186188": 1902, "750000": 1902, "642754": 1902, "4843": 1902, "705093": 1902, "486464": 1902, "2970": 1902, "914286": 1902, "536000": 1902, "turbine_result": 1902, "nresult": 1902, "3067": 1902, "723397": 1902, "2726": 1902, "544336": 1902, "613545": 1902, "545309": 1902, "808815": 1902, "873257": 1902, "2410": 1902, "957101": 1902, "482191": 1902, "675162": 1902, "2612": 1902, "853288": 1902, "522571": 1902, "750459": 1902, "590086": 1902, "534518": 1902, "783296": 1902, "2491": 1902, "421004": 1902, "498284": 1902, "705578": 1902, "2521": 1902, "999187": 1902, "504400": 1902, "714070": 1902, "2474": 1902, "595255": 1902, "494919": 1902, "690213": 1902, "2817": 1902, "661662": 1902, "563532": 1902, "847528": 1902, "2449": 1902, "294531": 1902, "489859": 1902, "687873": 1902, "2546": 1902, "109423": 1902, "509222": 1902, "728496": 1902, "884528": 1902, "119984": 1902, "888595": 1902, "411889": 1902, "824848": 1902, "092713": 1902, "677454": 1902, "682716": 1902, "455820": 1902, "303919": 1902, "171": 1902, "205": 1902, "1504": 1902, "seen": 1902, "mean_eff": [1902, 1903], "overhead": 1902, "But": 1902, "nmean": 1902, "launch": 1902, "localclust": 1902, "80862631": 1902, "tcp": 1902, "44955": 1902, "gib": 1902, "dashboard": 1902, "8787": 1902, "shut": 1902, "runtim": 1902, "localhost": 1902, "plenti": 1902, "bastankhah_linear": 1903, "203": 1903, "683": 1903, "perfectli": 1903, "fine": 1903, "port": 1904, "aim": 1904, "set_yawm": 1904, "sensit": 1904, "porteagel_linear": 1904, "frontal": 1904, "205676": 1904, "665355": 1904, "240": 1904, "corect": 1904, "174": 1890}, "objects": {"foxes.algorithms": [[0, 0, 1, "", "Downwind", "The downwind algorithm."], [9, 0, 1, "", "Iterative", "Iterative calculation of farm data."], [16, 0, 1, "", "Sequential", "A sequential calculation of states without chunking."]], "foxes.algorithms.Downwind": [[1, 1, 1, "", "__init__", "Constructor."], [2, 1, 1, "", "all_models", "Return all models"], [3, 1, 1, "", "calc_farm", "Calculate farm data."], [4, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [5, 1, 1, "", "finalize", "Finalizes the algorithm."], [6, 1, 1, "", "get_model", "Get the algorithm specific model"], [7, 1, 1, "", "init_states", "Initialize states, if needed."], [8, 1, 1, "", "initialize", "Initializes the algorithm."]], "foxes.algorithms.Iterative": [[10, 1, 1, "", "__init__", "Constructor."], [11, 1, 1, "", "calc_farm", "Calculate farm data."], [12, 1, 1, "", "get_model", "Get the algorithm specific model"], [13, 2, 1, "", "iterations", "The current iteration number"], [14, 1, 1, "", "set_urelax", "Sets under-relaxation parameters."], [15, 2, 1, "", "urelax", "Returns the under-relaxation parameters"]], "foxes.algorithms.Sequential": [[17, 1, 1, "", "__init__", "Constructor."], [18, 1, 1, "", "__iter__", "Initialize the iterator"], [19, 1, 1, "", "__next__", "Run calculation for current step, then iterate to next"], [20, 1, 1, "", "calc_farm", "Calculate farm data."], [21, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [22, 2, 1, "", "counter", "The current index counter"], [23, 2, 1, "", "cur_farm_results", "The current farm results"], [24, 2, 1, "", "cur_point_results", "The current point results"], [25, 2, 1, "", "farm_results", "The overall farm results"], [26, 2, 1, "", "fdata", "Get the current farm data"], [27, 1, 1, "", "get_model", "Get the algorithm specific model"], [28, 2, 1, "", "index", "The current index"], [29, 2, 1, "", "iterating", "Flag for running iteration"], [30, 2, 1, "", "mdata", "Get the current model data"], [31, 2, 1, "", "pdata", "Get the current point data"], [32, 2, 1, "", "point_results", "The overall point results"], [33, 2, 1, "", "size", "The total number of iteration steps"], [34, 2, 1, "", "weight", "The current weight array"]], "foxes.algorithms.downwind.models": [[35, 0, 1, "", "CalcOrder", "This model calculates the turbine evaluation order, via wake frames."], [40, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [46, 0, 1, "", "PointWakesCalculation", "This model calculates wake effects at points of interest."], [53, 0, 1, "", "SetAmbFarmResults", "This model copies farm data results to ambient results."], [57, 0, 1, "", "SetAmbPointResults", "This model copies point results to ambient results."]], "foxes.algorithms.downwind.models.CalcOrder": [[36, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [37, 1, 1, "", "initialize", "Initializes the model."], [38, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [39, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.FarmWakesCalculation": [[41, 1, 1, "", "__init__", "Constructor."], [42, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [43, 1, 1, "", "initialize", "Initializes the model."], [44, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [45, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.PointWakesCalculation": [[47, 1, 1, "", "__init__", "Constructor."], [48, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [49, 1, 1, "", "contribute_to_wake_deltas", "Contribute to wake deltas from source turbines"], [50, 1, 1, "", "initialize", "Initializes the model."], [51, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [52, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.SetAmbFarmResults": [[54, 1, 1, "", "__init__", "Constructor."], [55, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [56, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults": [[58, 1, 1, "", "__init__", "Constructor."], [59, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [60, 1, 1, "", "initialize", "Initializes the model."], [61, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.algorithms.iterative": [[62, 0, 1, "", "ConvCrit", "Abstract base class for convergence criteria"], [66, 0, 1, "", "ConvCritList", "A list of convergence criteria"], [71, 0, 1, "", "ConvVarDelta", "Requires convergence of a selection of variables."], [75, 0, 1, "", "DefaultConv", "Default convergence criteria."]], "foxes.algorithms.iterative.ConvCrit": [[63, 1, 1, "", "__init__", "Constructor."], [64, 1, 1, "", "check_converged", "Check convergence criteria."], [65, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCritList": [[67, 1, 1, "", "__init__", "Constructor."], [68, 1, 1, "", "add_crit", "Add a convergence criterion"], [69, 1, 1, "", "check_converged", "Check convergence criteria."], [70, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvVarDelta": [[72, 1, 1, "", "__init__", "Constructor."], [73, 1, 1, "", "check_converged", "Check convergence criteria."], [74, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.DefaultConv": [[76, 1, 1, "", "__init__", "Constructor."]], "foxes.algorithms.iterative.models": [[77, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [83, 0, 1, "", "URelax", "Apply under-relaxation to selected variables during iterations."]], "foxes.algorithms.iterative.models.FarmWakesCalculation": [[78, 1, 1, "", "__init__", "Constructor."], [79, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [80, 1, 1, "", "initialize", "Initializes the model."], [81, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [82, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.iterative.models.URelax": [[84, 1, 1, "", "__init__", "Constructor."], [85, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [86, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.sequential": [[87, 0, 1, "", "SequentialPlugin", "Base class for plugins that are updated with each sequential iteration"]], "foxes.algorithms.sequential.SequentialPlugin": [[88, 1, 1, "", "__init__", "Constructor."], [89, 1, 1, "", "finalize", "Finalize data based on the final iterator"], [90, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [91, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.algorithms.sequential.models": [[92, 0, 1, "", "SeqState", "A single state during sequential iteration, just serving as a structural placeholder"]], "foxes.algorithms.sequential.models.SeqState": [[93, 1, 1, "", "__init__", "Constructor."], [94, 1, 1, "", "calculate", "The main model calculation."], [95, 2, 1, "", "counter", "The current index counter"], [96, 1, 1, "", "index", "The index list"], [97, 1, 1, "", "initialize", "Initializes the model."], [98, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [99, 1, 1, "", "size", "The total number of states."], [100, 1, 1, "", "sub_models", "List of all sub-models"], [101, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.constants": [[102, 3, 1, "", "AMB_RPOINT_RESULTS", "Identified for ambient rotor point results"], [103, 4, 1, "", "DTYPE", "Default data type for floats"], [226, 3, 1, "", "FARM", "Wind farm identifier"], [227, 3, 1, "", "GW", "The unit giga watt"], [228, 4, 1, "", "ITYPE", "Default data type for int"], [278, 3, 1, "", "KAPPA", "The Van-Karman constant"], [279, 3, 1, "", "MW", "The unit mega watt"], [280, 3, 1, "", "POINT", "Point identifier"], [281, 3, 1, "", "POINTS", "Points identifier"], [282, 3, 1, "", "POP", "Population identifier"], [283, 3, 1, "", "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [284, 3, 1, "", "RPOINT", "Rotor point identifier"], [285, 3, 1, "", "RPOINTS", "Rotor points identifier"], [286, 3, 1, "", "RWEIGHTS", "Rotor point weights identifier"], [287, 3, 1, "", "STATE", "States identifier"], [288, 3, 1, "", "STATES_SEL", "Identifier for states selection"], [289, 3, 1, "", "STATE_POINT", "Identifier for state-point dimensions"], [290, 3, 1, "", "STATE_SOURCE_TURBINE", "Identifier for the source turbines per state"], [291, 3, 1, "", "STATE_TURBINE", "Identifier for state-turbine dimensions"], [292, 3, 1, "", "TMODELS", "Turbine models identifier"], [293, 3, 1, "", "TMODEL_SELS", "Selected turbine models identifier"], [294, 3, 1, "", "TNAME", "Wind turbine name identifier"], [295, 3, 1, "", "TURBINE", "Wind turbine identifier"], [296, 3, 1, "", "TW", "The unit terra watt"], [297, 3, 1, "", "VALID", "Validity identifier"], [298, 3, 1, "", "VARS", "Variables identifier"], [299, 3, 1, "", "W", "The unit watt"], [300, 3, 1, "", "XYH", "The vector (x, y, height)"], [301, 3, 1, "", "kW", "The unit kilo watt"]], "foxes.constants.DTYPE": [[104, 4, 1, "", "T", "Scalar attribute identical to the corresponding array attribute."], [105, 1, 1, "", "__abs__", "abs(self)"], [106, 1, 1, "", "__add__", "Return self+value."], [107, 1, 1, "", "__and__", "Return self&value."], [108, 1, 1, "", "__array__", "sc.__array__(dtype) return 0-dim array from scalar with specified dtype"], [109, 4, 1, "", "__array_interface__", "Array protocol: Python side"], [110, 4, 1, "", "__array_priority__", "Array priority."], [111, 4, 1, "", "__array_struct__", "Array protocol: struct"], [112, 1, 1, "", "__array_wrap__", "sc.__array_wrap__(obj) return scalar from array"], [113, 1, 1, "", "__bool__", "self != 0"], [114, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [115, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [116, 1, 1, "", "__eq__", "Return self==value."], [117, 1, 1, "", "__float__", "float(self)"], [118, 1, 1, "", "__floordiv__", "Return self//value."], [119, 1, 1, "", "__format__", "NumPy array scalar formatter"], [120, 1, 1, "", "__ge__", "Return self>=value."], [121, 1, 1, "", "__getitem__", "Return self[key]."], [122, 1, 1, "", "__gt__", "Return self>value."], [123, 1, 1, "", "__hash__", "Return hash(self)."], [124, 1, 1, "", "__int__", "int(self)"], [125, 1, 1, "", "__invert__", "~self"], [126, 1, 1, "", "__le__", "Return self<=value."], [127, 1, 1, "", "__lshift__", "Return self<<value."], [128, 1, 1, "", "__lt__", "Return self<value."], [129, 1, 1, "", "__mod__", "Return self%value."], [130, 1, 1, "", "__mul__", "Return self*value."], [131, 1, 1, "", "__ne__", "Return self!=value."], [132, 1, 1, "", "__neg__", "-self"], [133, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [134, 1, 1, "", "__or__", "Return self|value."], [135, 1, 1, "", "__pos__", "+self"], [136, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [137, 1, 1, "", "__radd__", "Return value+self."], [138, 1, 1, "", "__rand__", "Return value&self."], [139, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [140, 1, 1, "", "__reduce__", "Helper for pickle."], [141, 1, 1, "", "__repr__", "Return repr(self)."], [142, 1, 1, "", "__rfloordiv__", "Return value//self."], [143, 1, 1, "", "__rlshift__", "Return value<<self."], [144, 1, 1, "", "__rmod__", "Return value%self."], [145, 1, 1, "", "__rmul__", "Return value*self."], [146, 1, 1, "", "__ror__", "Return value|self."], [147, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [148, 1, 1, "", "__rrshift__", "Return value>>self."], [149, 1, 1, "", "__rshift__", "Return self>>value."], [150, 1, 1, "", "__rsub__", "Return value-self."], [151, 1, 1, "", "__rtruediv__", "Return value/self."], [152, 1, 1, "", "__rxor__", "Return value^self."], [153, 1, 1, "", "__sizeof__", "Size of object in memory, in bytes."], [154, 1, 1, "", "__str__", "Return str(self)."], [155, 1, 1, "", "__sub__", "Return self-value."], [156, 1, 1, "", "__truediv__", "Return self/value."], [157, 1, 1, "", "__xor__", "Return self^value."], [158, 1, 1, "", "all", "Scalar method identical to the corresponding array attribute."], [159, 1, 1, "", "any", "Scalar method identical to the corresponding array attribute."], [160, 1, 1, "", "argmax", "Scalar method identical to the corresponding array attribute."], [161, 1, 1, "", "argmin", "Scalar method identical to the corresponding array attribute."], [162, 1, 1, "", "argsort", "Scalar method identical to the corresponding array attribute."], [163, 1, 1, "", "as_integer_ratio", "Return a pair of integers, whose ratio is exactly equal to the original floating point number, and with a positive denominator. Raise OverflowError on infinities and a ValueError on NaNs."], [164, 1, 1, "", "astype", "Scalar method identical to the corresponding array attribute."], [165, 4, 1, "", "base", "Scalar attribute identical to the corresponding array attribute."], [166, 1, 1, "", "byteswap", "Scalar method identical to the corresponding array attribute."], [167, 1, 1, "", "choose", "Scalar method identical to the corresponding array attribute."], [168, 1, 1, "", "clip", "Scalar method identical to the corresponding array attribute."], [169, 1, 1, "", "compress", "Scalar method identical to the corresponding array attribute."], [170, 1, 1, "", "conj", ""], [171, 1, 1, "", "conjugate", "Scalar method identical to the corresponding array attribute."], [172, 1, 1, "", "copy", "Scalar method identical to the corresponding array attribute."], [173, 1, 1, "", "cumprod", "Scalar method identical to the corresponding array attribute."], [174, 1, 1, "", "cumsum", "Scalar method identical to the corresponding array attribute."], [175, 4, 1, "", "data", "Pointer to start of data."], [176, 1, 1, "", "diagonal", "Scalar method identical to the corresponding array attribute."], [177, 4, 1, "", "dtype", "Get array data-descriptor."], [178, 1, 1, "", "dump", "Scalar method identical to the corresponding array attribute."], [179, 1, 1, "", "dumps", "Scalar method identical to the corresponding array attribute."], [180, 1, 1, "", "fill", "Scalar method identical to the corresponding array attribute."], [181, 4, 1, "", "flags", "The integer value of flags."], [182, 4, 1, "", "flat", "A 1-D view of the scalar."], [183, 1, 1, "", "flatten", "Scalar method identical to the corresponding array attribute."], [184, 1, 1, "", "getfield", "Scalar method identical to the corresponding array attribute."], [185, 4, 1, "", "imag", "The imaginary part of the scalar."], [186, 1, 1, "", "is_integer", "Return True if the floating point number is finite with integral value, and False otherwise."], [187, 1, 1, "", "item", "Scalar method identical to the corresponding array attribute."], [188, 1, 1, "", "itemset", "Scalar method identical to the corresponding array attribute."], [189, 4, 1, "", "itemsize", "The length of one element in bytes."], [190, 1, 1, "", "max", "Scalar method identical to the corresponding array attribute."], [191, 1, 1, "", "mean", "Scalar method identical to the corresponding array attribute."], [192, 1, 1, "", "min", "Scalar method identical to the corresponding array attribute."], [193, 4, 1, "", "nbytes", "The length of the scalar in bytes."], [194, 4, 1, "", "ndim", "The number of array dimensions."], [195, 1, 1, "", "newbyteorder", "Return a new dtype with a different byte order."], [196, 1, 1, "", "nonzero", "Scalar method identical to the corresponding array attribute."], [197, 1, 1, "", "prod", "Scalar method identical to the corresponding array attribute."], [198, 1, 1, "", "ptp", "Scalar method identical to the corresponding array attribute."], [199, 1, 1, "", "put", "Scalar method identical to the corresponding array attribute."], [200, 1, 1, "", "ravel", "Scalar method identical to the corresponding array attribute."], [201, 4, 1, "", "real", "The real part of the scalar."], [202, 1, 1, "", "repeat", "Scalar method identical to the corresponding array attribute."], [203, 1, 1, "", "reshape", "Scalar method identical to the corresponding array attribute."], [204, 1, 1, "", "resize", "Scalar method identical to the corresponding array attribute."], [205, 1, 1, "", "round", "Scalar method identical to the corresponding array attribute."], [206, 1, 1, "", "searchsorted", "Scalar method identical to the corresponding array attribute."], [207, 1, 1, "", "setfield", "Scalar method identical to the corresponding array attribute."], [208, 1, 1, "", "setflags", "Scalar method identical to the corresponding array attribute."], [209, 4, 1, "", "shape", "Tuple of array dimensions."], [210, 4, 1, "", "size", "The number of elements in the gentype."], [211, 1, 1, "", "sort", "Scalar method identical to the corresponding array attribute."], [212, 1, 1, "", "squeeze", "Scalar method identical to the corresponding array attribute."], [213, 1, 1, "", "std", "Scalar method identical to the corresponding array attribute."], [214, 4, 1, "", "strides", "Tuple of bytes steps in each dimension."], [215, 1, 1, "", "sum", "Scalar method identical to the corresponding array attribute."], [216, 1, 1, "", "swapaxes", "Scalar method identical to the corresponding array attribute."], [217, 1, 1, "", "take", "Scalar method identical to the corresponding array attribute."], [218, 1, 1, "", "tobytes", ""], [219, 1, 1, "", "tofile", "Scalar method identical to the corresponding array attribute."], [220, 1, 1, "", "tolist", "Scalar method identical to the corresponding array attribute."], [221, 1, 1, "", "tostring", "Scalar method identical to the corresponding array attribute."], [222, 1, 1, "", "trace", "Scalar method identical to the corresponding array attribute."], [223, 1, 1, "", "transpose", "Scalar method identical to the corresponding array attribute."], [224, 1, 1, "", "var", "Scalar method identical to the corresponding array attribute."], [225, 1, 1, "", "view", "Scalar method identical to the corresponding array attribute."]], "foxes.constants.ITYPE": [[229, 1, 1, "", "__abs__", "abs(self)"], [230, 1, 1, "", "__add__", "Return self+value."], [231, 1, 1, "", "__and__", "Return self&value."], [232, 1, 1, "", "__bool__", "self != 0"], [233, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [234, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [235, 1, 1, "", "__eq__", "Return self==value."], [236, 1, 1, "", "__float__", "float(self)"], [237, 1, 1, "", "__floordiv__", "Return self//value."], [238, 1, 1, "", "__ge__", "Return self>=value."], [239, 1, 1, "", "__gt__", "Return self>value."], [240, 1, 1, "", "__hash__", "Return hash(self)."], [241, 1, 1, "", "__index__", "Return self converted to an integer, if self is suitable for use as an index into a list."], [242, 1, 1, "", "__int__", "int(self)"], [243, 1, 1, "", "__invert__", "~self"], [244, 1, 1, "", "__le__", "Return self<=value."], [245, 1, 1, "", "__lshift__", "Return self<<value."], [246, 1, 1, "", "__lt__", "Return self<value."], [247, 1, 1, "", "__mod__", "Return self%value."], [248, 1, 1, "", "__mul__", "Return self*value."], [249, 1, 1, "", "__ne__", "Return self!=value."], [250, 1, 1, "", "__neg__", "-self"], [251, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [252, 1, 1, "", "__or__", "Return self|value."], [253, 1, 1, "", "__pos__", "+self"], [254, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [255, 1, 1, "", "__radd__", "Return value+self."], [256, 1, 1, "", "__rand__", "Return value&self."], [257, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [258, 1, 1, "", "__repr__", "Return repr(self)."], [259, 1, 1, "", "__rfloordiv__", "Return value//self."], [260, 1, 1, "", "__rlshift__", "Return value<<self."], [261, 1, 1, "", "__rmod__", "Return value%self."], [262, 1, 1, "", "__rmul__", "Return value*self."], [263, 1, 1, "", "__ror__", "Return value|self."], [264, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [265, 1, 1, "", "__rrshift__", "Return value>>self."], [266, 1, 1, "", "__rshift__", "Return self>>value."], [267, 1, 1, "", "__rsub__", "Return value-self."], [268, 1, 1, "", "__rtruediv__", "Return value/self."], [269, 1, 1, "", "__rxor__", "Return value^self."], [270, 1, 1, "", "__str__", "Return str(self)."], [271, 1, 1, "", "__sub__", "Return self-value."], [272, 1, 1, "", "__truediv__", "Return self/value."], [273, 1, 1, "", "__xor__", "Return self^value."], [274, 1, 1, "", "bit_count", "Computes the number of 1-bits in the absolute value of the input. Analogous to the builtin int.bit_count or popcount in C++."], [275, 4, 1, "", "denominator", "denominator of value (1)"], [276, 1, 1, "", "is_integer", "Return True if the number is finite with integral value."], [277, 4, 1, "", "numerator", "numerator of value (the value itself)"]], "foxes.core": [[302, 0, 1, "", "Algorithm", "Abstract base class for algorithms."], [317, 0, 1, "", "AxialInductionModel", "Abstract base class for axial induction models"], [319, 0, 1, "", "Data", "Container for data and meta data."], [327, 0, 1, "", "DataCalcModel", "Abstract base class for models with that run calculation on xarray Dataset data."], [330, 0, 1, "", "ExtendedStates", "States extended by point data models."], [339, 0, 1, "", "FarmController", "Analyses selected turbine models and handles their call."], [349, 0, 1, "", "FarmDataModel", "Abstract base class for models that modify farm data."], [354, 0, 1, "", "FarmDataModelList", "A list of farm data models."], [361, 0, 1, "", "FarmModel", "A FarmDataModel that operates on the farm level (in contrast to a TurbineModel, which allows application to a subset of turbines)."], [362, 0, 1, "", "Model", "Base class for all models."], [375, 0, 1, "", "PartialWakesModel", "Abstract base class for partial wakes models."], [383, 0, 1, "", "PointDataModel", "Abstract base class for models that modify point based data."], [387, 0, 1, "", "PointDataModelList", "A list of point data models."], [393, 0, 1, "", "RotorModel", "Abstract base class of rotor models."], [403, 0, 1, "", "States", "Abstract base class for states."], [409, 0, 1, "", "Turbine", "An individual wind turbine."], [413, 0, 1, "", "TurbineModel", "Abstract base class for turbine models."], [416, 0, 1, "", "TurbineType", "Abstract base class for turbine type models."], [419, 0, 1, "", "VerticalProfile", "Abstract base class for vertical profiles."], [423, 0, 1, "", "WakeFrame", "Abstract base class for wake frames."], [430, 0, 1, "", "WakeModel", "Abstract base class for wake models."], [435, 0, 1, "", "WakeSuperposition", "Abstract base class for wake superposition models."], [438, 0, 1, "", "WindFarm", "The wind farm."]], "foxes.core.Algorithm": [[303, 1, 1, "", "__init__", "Constructor."], [304, 1, 1, "", "chunked", ""], [305, 1, 1, "", "del_model_data", "Remove stored model data"], [306, 1, 1, "", "finalize", "Finalizes the algorithm."], [307, 1, 1, "", "get_model_data", "Gets model data from memory"], [308, 1, 1, "", "get_models_data", "Creates xarray from model input data."], [309, 1, 1, "", "get_models_idata", "Returns idata object of models"], [310, 2, 1, "", "idata_mem", "The current idata memory"], [311, 1, 1, "", "initialize", "Initializes the algorithm."], [312, 1, 1, "", "new", "Run-time algorithm factory."], [313, 1, 1, "", "new_point_data", "Creates a point data xarray object, containing only points."], [314, 1, 1, "", "print", "Print function, based on verbosity."], [315, 1, 1, "", "store_model_data", "Store model data"], [316, 1, 1, "", "update_n_turbines", "Reset the number of turbines, according to self.farm"]], "foxes.core.AxialInductionModel": [[318, 1, 1, "", "ct2a", "Computes induction from ct"]], "foxes.core.Data": [[320, 1, 1, "", "__init__", "Constructor."], [321, 1, 1, "", "add", "Add data entry"], [322, 1, 1, "", "from_points", "Create from points"], [323, 2, 1, "", "n_points", "The number of points"], [324, 2, 1, "", "n_states", "The number of states"], [325, 2, 1, "", "n_turbines", "The number of turbines"], [326, 1, 1, "", "states_i0", "Get the state counter for first state in chunk"]], "foxes.core.DataCalcModel": [[328, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [329, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.ExtendedStates": [[331, 1, 1, "", "__init__", "Constructor."], [332, 1, 1, "", "append", "Add a model to the list"], [333, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [334, 1, 1, "", "index", "The index list"], [335, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [336, 1, 1, "", "size", "The total number of states."], [337, 1, 1, "", "sub_models", "List of all sub-models"], [338, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.FarmController": [[340, 1, 1, "", "__init__", "Constructor."], [341, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [342, 1, 1, "", "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [343, 1, 1, "", "finalize", "Finalizes the model."], [344, 1, 1, "", "initialize", "Initializes the model."], [345, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [346, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [347, 1, 1, "", "set_pars", "Set parameters for a turbine model"], [348, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmDataModel": [[350, 1, 1, "", "__init__", "Constructor."], [351, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [352, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [353, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModelList": [[355, 1, 1, "", "__init__", "Constructor."], [356, 1, 1, "", "append", "Add a model to the list"], [357, 1, 1, "", "calculate", "The main model calculation."], [358, 1, 1, "", "insert", "Insert a model into the list"], [359, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [360, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.Model": [[363, 1, 1, "", "__init__", "Constructor."], [364, 1, 1, "", "__repr__", "Return repr(self)."], [365, 1, 1, "", "data_to_store", "Adds data from mdata to the local store, intended for iterative runs."], [366, 1, 1, "", "finalize", "Finalizes the model."], [367, 1, 1, "", "from_data_or_store", "Get data from mdata or local store"], [368, 1, 1, "", "get_data", "Getter for a data entry in the model object or provided data sources"], [369, 1, 1, "", "initialize", "Initializes the model."], [370, 2, 1, "", "initialized", "Initialization flag."], [371, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [372, 2, 1, "", "model_id", "Unique id based on the model type."], [373, 1, 1, "", "sub_models", "List of all sub-models"], [374, 1, 1, "", "var", "Creates a model specific variable name."]], "foxes.core.PartialWakesModel": [[376, 1, 1, "", "__init__", "Constructor."], [377, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [378, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [379, 1, 1, "", "initialize", "Initializes the model."], [380, 1, 1, "", "new", "Run-time partial wakes factory."], [381, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [382, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.PointDataModel": [[384, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [385, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [386, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModelList": [[388, 1, 1, "", "__init__", "Constructor."], [389, 1, 1, "", "append", "Add a model to the list"], [390, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [391, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [392, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.RotorModel": [[394, 1, 1, "", "__init__", "Constructor."], [395, 1, 1, "", "calculate", "Calculate ambient rotor effective results."], [396, 1, 1, "", "design_points", "The rotor model design points."], [397, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [398, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [399, 1, 1, "", "n_rotor_points", "The number of rotor points"], [400, 1, 1, "", "new", "Run-time rotor model factory."], [401, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [402, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.core.States": [[404, 1, 1, "", "index", "The index list"], [405, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [406, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [407, 1, 1, "", "size", "The total number of states."], [408, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.Turbine": [[410, 1, 1, "", "__init__", "Constructor."], [411, 1, 1, "", "add_model", "Add a turbine model to the list."], [412, 1, 1, "", "insert_model", "Insert a turbine model into the list of models."]], "foxes.core.TurbineModel": [[414, 1, 1, "", "calculate", "The main model calculation."], [415, 1, 1, "", "new", "Run-time turbine model factory."]], "foxes.core.TurbineType": [[417, 1, 1, "", "__init__", "Constructor."], [418, 1, 1, "", "new", "Run-time turbine type factory."]], "foxes.core.VerticalProfile": [[420, 1, 1, "", "calculate", "Run the profile calculation."], [421, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."], [422, 1, 1, "", "new", "Run-time profile factory."]], "foxes.core.WakeFrame": [[424, 1, 1, "", "calc_centreline_integral", "Integrates variables along the centreline."], [425, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [426, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [427, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [428, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [429, 1, 1, "", "new", "Run-time wake frame factory."]], "foxes.core.WakeModel": [[431, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [432, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [433, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [434, 1, 1, "", "new", "Run-time wake model factory."]], "foxes.core.WakeSuperposition": [[436, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [437, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.core.WindFarm": [[439, 1, 1, "", "__init__", "Constructor."], [440, 1, 1, "", "add_turbine", "Add a wind turbine to the list."], [441, 2, 1, "", "n_turbines", "The number of turbines in the wind farm"], [442, 2, 1, "", "turbine_names", "The list of names of all turbines"]], "foxes.data": [[443, 0, 1, "", "StaticData", "A DataBook filled with static data from this directory."], [445, 5, 1, "", "parse_Pct_file_name", "Parse basic turbine data from file name"], [446, 5, 1, "", "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.StaticData": [[444, 1, 1, "", "__init__", "Constructor."]], "foxes.input.farm_layout": [[447, 5, 1, "", "add_from_csv", "Add turbines to wind farm via csv input file."], [448, 5, 1, "", "add_from_df", "Add turbines to wind farm via pandas DataFrame."], [449, 5, 1, "", "add_from_file", "Add turbines from file."], [450, 5, 1, "", "add_from_json", "Add turbimes from a json file."], [451, 5, 1, "", "add_grid", "Add a regular grid of turbines."], [452, 5, 1, "", "add_row", "Add a single row of turbines."]], "foxes.input.states": [[453, 0, 1, "", "FieldDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format."], [461, 0, 1, "", "MultiHeightStates", "States with multiple heights data per entry."], [472, 0, 1, "", "MultiHeightTimeseries", "Multi-height timeseries states data."], [474, 0, 1, "", "ScanWS", "A given list of wind speeds, all other variables are fixed."], [481, 0, 1, "", "SingleStateStates", "A single uniform state."], [489, 0, 1, "", "StatesTable", "States from a pandas.DataFrame or a pandas readable file."], [502, 0, 1, "", "Timeseries", "Timeseries states data."], [504, 5, 1, "", "create_random_abl_states", "Create random abl states."]], "foxes.input.states.FieldDataNC": [[454, 1, 1, "", "__init__", "Constructor."], [455, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [456, 1, 1, "", "index", "The index list"], [457, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [458, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [459, 1, 1, "", "size", "The total number of states."], [460, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightStates": [[462, 4, 1, "", "RDICT", ""], [463, 1, 1, "", "__init__", "Constructor."], [464, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [465, 1, 1, "", "finalize", "Finalizes the model."], [466, 1, 1, "", "index", "The index list"], [467, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [468, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [469, 1, 1, "", "reset", "Reset the states, optionally select states"], [470, 1, 1, "", "size", "The total number of states."], [471, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightTimeseries": [[473, 4, 1, "", "RDICT", ""]], "foxes.input.states.ScanWS": [[475, 1, 1, "", "__init__", "Constructor."], [476, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [477, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [478, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [479, 1, 1, "", "size", "The total number of states."], [480, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates": [[482, 1, 1, "", "__init__", "Constructor."], [483, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [484, 1, 1, "", "initialize", "Initializes the model."], [485, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [486, 1, 1, "", "size", "The total number of states."], [487, 1, 1, "", "sub_models", "List of all sub-models"], [488, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.StatesTable": [[490, 4, 1, "", "RDICT", ""], [491, 1, 1, "", "__init__", "Constructor."], [492, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [493, 1, 1, "", "finalize", "Finalizes the model."], [494, 1, 1, "", "index", "The index list"], [495, 1, 1, "", "initialize", "Initializes the model."], [496, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [497, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [498, 1, 1, "", "reset", "Reset the states, optionally select states"], [499, 1, 1, "", "size", "The total number of states."], [500, 1, 1, "", "sub_models", "List of all sub-models"], [501, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.Timeseries": [[503, 4, 1, "", "RDICT", ""]], "foxes.input.windio": [[505, 5, 1, "", "read_case", "Reads a WindIO case"]], "foxes.models.farm_controllers": [[506, 0, 1, "", "BasicFarmController", "The basic farm controller, running all turbine models in their order, without conditions."]], "foxes.models.farm_models": [[507, 0, 1, "", "Turbine2FarmModel", "Wrapper that promotes turbine models into farm models, simply by selecting all turbines."]], "foxes.models.farm_models.Turbine2FarmModel": [[508, 1, 1, "", "__init__", "Constructor."], [509, 1, 1, "", "__repr__", "Return repr(self)."], [510, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [511, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [512, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.model_book": [[513, 0, 1, "", "Dict", "A slightly enhanced dictionary."], [516, 0, 1, "", "ModelBook", "Container for all kinds of models."]], "foxes.models.model_book.Dict": [[514, 1, 1, "", "__getitem__", "x.__getitem__(y) <==> x[y]"], [515, 1, 1, "", "__init__", "Constructor."]], "foxes.models.model_book.ModelBook": [[517, 1, 1, "", "__getitem__", ""], [518, 1, 1, "", "__init__", "Constructor."], [519, 1, 1, "", "finalize", "Finalizes the model."], [520, 1, 1, "", "get", "Gets a model object."], [521, 1, 1, "", "print_toc", "Print the contents."]], "foxes.models.partial_wakes": [[522, 0, 1, "", "Mapped", "Partial wake models depending on the wake model (type)."], [529, 0, 1, "", "PartialAxiwake", "Partial wake calculation for axial wake models."], [537, 0, 1, "", "PartialDistSlicedWake", "Partial wakes for distance sliced wake models, making use of their structure."], [545, 0, 1, "", "PartialGrid", "Partial wakes on a grid rotor that may differ from the one in the algorithm."], [548, 0, 1, "", "PartialTopHat", "Partial wakes for top-hat models."], [555, 0, 1, "", "RotorPoints", "Partial wakes calculation directly by the rotor model."]], "foxes.models.partial_wakes.Mapped": [[523, 1, 1, "", "__init__", "Constructor."], [524, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [525, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [526, 1, 1, "", "initialize", "Initializes the model."], [527, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [528, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialAxiwake": [[530, 1, 1, "", "__init__", "Constructor."], [531, 1, 1, "", "__repr__", "Return repr(self)."], [532, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [533, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [534, 1, 1, "", "initialize", "Initializes the model."], [535, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [536, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialDistSlicedWake": [[538, 1, 1, "", "__init__", "Constructor."], [539, 1, 1, "", "__repr__", "Return repr(self)."], [540, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [541, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [542, 1, 1, "", "initialize", "Initializes the model."], [543, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [544, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialGrid": [[546, 1, 1, "", "__init__", "Constructor."], [547, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialTopHat": [[549, 1, 1, "", "__init__", "Constructor."], [550, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [551, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [552, 1, 1, "", "initialize", "Initializes the model."], [553, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [554, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.RotorPoints": [[556, 1, 1, "", "__init__", "Constructor."], [557, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [558, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [559, 1, 1, "", "get_wake_points", "Get the wake calculation points."], [560, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."]], "foxes.models.point_models": [[561, 0, 1, "", "SetUniformData", "Set uniform data (can be state dependent)"], [566, 0, 1, "", "TKE2TI", "Calculates TI from TKE, using TI = sqrt( 3/2 * TKE) / WS"], [569, 0, 1, "", "WakeDeltas", "This point model simply subtracts ambient results from waked results."]], "foxes.models.point_models.SetUniformData": [[562, 1, 1, "", "__init__", "Constructor."], [563, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [564, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [565, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI": [[567, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [568, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas": [[570, 1, 1, "", "__init__", "Constructor."], [571, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [572, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.rotor_models": [[573, 0, 1, "", "CentreRotor", "The centre rotor model."], [579, 0, 1, "", "GridRotor", "The weighted regular grid rotor model, composed maximally of n x n points, possibly kicking out the outside points."], [586, 0, 1, "", "LevelRotor", "The weighted regular rotor level model, composed of of n points between lower and upper blade tip. Calculates a height-dependent REWS"]], "foxes.models.rotor_models.CentreRotor": [[574, 1, 1, "", "design_points", "The rotor model design points."], [575, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [576, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [577, 1, 1, "", "n_rotor_points", "The number of rotor points"], [578, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.GridRotor": [[580, 1, 1, "", "__init__", "Constructor."], [581, 1, 1, "", "__repr__", "Return repr(self)."], [582, 1, 1, "", "design_points", "The rotor model design points."], [583, 1, 1, "", "initialize", "Initializes the model."], [584, 1, 1, "", "n_rotor_points", "The number of rotor points"], [585, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.LevelRotor": [[587, 1, 1, "", "__init__", "Constructor."], [588, 1, 1, "", "__repr__", "Return repr(self)."], [589, 1, 1, "", "design_points", "The rotor model design points."], [590, 1, 1, "", "initialize", "Initializes the model."], [591, 1, 1, "", "n_rotor_points", "The number of rotor points"], [592, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.turbine_models": [[593, 0, 1, "", "Calculator", "Calculates variables based on given functions."], [597, 0, 1, "", "LookupTable", "Calculates the data by interpolation of lookup-table data"], [602, 0, 1, "", "PowerMask", "Invokes a maximal power value."], [608, 0, 1, "", "RotorCentreCalc", "Calculates data at the rotor centre"], [614, 0, 1, "", "SectorManagement", "Changes variables based on variable range conditions."], [619, 0, 1, "", "SetFarmVars", "Set farm data variables to given data."], [626, 0, 1, "", "SetXYHD", "Sets basic turbine data, from turbine object to farm data."], [630, 0, 1, "", "TableFactors", "Multiplies variables by factors from a two dimensional table."], [635, 0, 1, "", "Thrust2Ct", "Calculates ct from thrust force data."], [639, 0, 1, "", "YAW2YAWM", "Calculates delta yaw (i.e. YAWM) from absolute yaw (i.e. YAW)"], [642, 0, 1, "", "YAWM2YAW", "Calculates absolute yaw (i.e. YAWM) from delta yaw (i.e. YAWM)"], [645, 0, 1, "", "kTI", "Calculates the wake model parameter k as a linear function of TI."]], "foxes.models.turbine_models.Calculator": [[594, 1, 1, "", "__init__", "Constructor."], [595, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [596, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable": [[598, 1, 1, "", "__init__", "Constructor."], [599, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [600, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [601, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.PowerMask": [[603, 1, 1, "", "__init__", "Constructor."], [604, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [605, 1, 1, "", "initialize", "Initializes the model."], [606, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [607, 1, 1, "", "update_P_ct", ""]], "foxes.models.turbine_models.RotorCentreCalc": [[609, 1, 1, "", "__init__", "Constructor."], [610, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [611, 1, 1, "", "initialize", "Initializes the model."], [612, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [613, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.SectorManagement": [[615, 1, 1, "", "__init__", "Constructor."], [616, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [617, 1, 1, "", "initialize", "Initializes the model."], [618, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars": [[620, 1, 1, "", "__init__", "Constructor."], [621, 1, 1, "", "add_var", "Add data for a variable."], [622, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [623, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [624, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [625, 1, 1, "", "reset", "Remove all variables."]], "foxes.models.turbine_models.SetXYHD": [[627, 1, 1, "", "__init__", "Constructor."], [628, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [629, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.TableFactors": [[631, 1, 1, "", "__init__", "Constructor."], [632, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [633, 1, 1, "", "initialize", "Initializes the model."], [634, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct": [[636, 1, 1, "", "__init__", "Constructor."], [637, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [638, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM": [[640, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [641, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW": [[643, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [644, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI": [[646, 1, 1, "", "__init__", "Constructor."], [647, 1, 1, "", "__repr__", "Return repr(self)."], [648, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [649, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types": [[650, 0, 1, "", "CpCtFile", "Calculate power and ct by interpolating from cp-ct-curve data file (or pandas DataFrame)."], [652, 0, 1, "", "CpCtFromTwo", "Calculate power and ct by interpolating cp and ct from two files (or two pandas DataFrames)."], [654, 0, 1, "", "NullType", "A turbine type that does not compute any data."], [657, 0, 1, "", "PCtFile", "Calculate power and ct by interpolating from power-ct-curve data file (or pandas DataFrame)."], [663, 0, 1, "", "PCtFromTwo", "Calculate power and ct by interpolating from power curve and ct curve data files."], [669, 0, 1, "", "WsRho2PCtFromTwo", "Calculate air density dependent power and ct values, as given by two individual files."], [675, 0, 1, "", "WsTI2PCtFromTwo", "Calculate turbulent intensity dependent power and ct values, as given by two individual files."]], "foxes.models.turbine_types.CpCtFile": [[651, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo": [[653, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.NullType": [[655, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [656, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile": [[658, 1, 1, "", "__init__", "Constructor."], [659, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [660, 1, 1, "", "finalize", "Finalizes the model."], [661, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [662, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo": [[664, 1, 1, "", "__init__", "Constructor."], [665, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [666, 1, 1, "", "finalize", "Finalizes the model."], [667, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [668, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo": [[670, 1, 1, "", "__init__", "Constructor."], [671, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [672, 1, 1, "", "finalize", "Finalizes the model."], [673, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [674, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo": [[676, 1, 1, "", "__init__", "Constructor."], [677, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [678, 1, 1, "", "finalize", "Finalizes the model."], [679, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [680, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.vertical_profiles": [[681, 0, 1, "", "ABLLogNeutralWsProfile", "The neutral ABL wind speed log profile."], [685, 0, 1, "", "ABLLogStableWsProfile", "The stable ABL wind speed log profile."], [689, 0, 1, "", "ABLLogUnstableWsProfile", "The unstable ABL wind speed log profile."], [693, 0, 1, "", "ABLLogWsProfile", "The neutral/stable/unstable ABL wind speed log profile."], [697, 0, 1, "", "DataProfile", "A profile based on numerical data."], [701, 0, 1, "", "ShearedProfile", "A wind shear profile, based on a shear exponent."], [704, 0, 1, "", "UniformProfile", "A profile with uniform values."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile": [[682, 1, 1, "", "__init__", "Constructor."], [683, 1, 1, "", "calculate", "Run the profile calculation."], [684, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile": [[686, 1, 1, "", "__init__", "Constructor."], [687, 1, 1, "", "calculate", "Run the profile calculation."], [688, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile": [[690, 1, 1, "", "__init__", "Constructor."], [691, 1, 1, "", "calculate", "Run the profile calculation."], [692, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile": [[694, 1, 1, "", "__init__", "Constructor."], [695, 1, 1, "", "calculate", "Run the profile calculation."], [696, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.DataProfile": [[698, 1, 1, "", "__init__", "Constructor"], [699, 1, 1, "", "calculate", "Run the profile calculation."], [700, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile": [[702, 1, 1, "", "calculate", "Run the profile calculation."], [703, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile": [[705, 1, 1, "", "__init__", "Constructor"], [706, 1, 1, "", "calculate", "Run the profile calculation."], [707, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.wake_frames": [[708, 0, 1, "", "FarmOrder", "Invokes turbine ordering as defined by the wind farm."], [714, 0, 1, "", "RotorWD", "Align the first axis for each rotor with the local normalized wind direction."], [719, 0, 1, "", "SeqDynamicWakes", "Dynamic wakes for the sequential algorithm."], [726, 0, 1, "", "Streamlines2D", "Streamline following wakes"], [733, 0, 1, "", "Timelines", "Dynamic wakes for spatially uniform timeseries states."], [739, 0, 1, "", "YawedWakes", "Bend the wakes for yawed turbines, based on the Bastankhah 2016 wake model"]], "foxes.models.wake_frames.FarmOrder": [[709, 1, 1, "", "__init__", "Constructor."], [710, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [711, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [712, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [713, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.RotorWD": [[715, 1, 1, "", "__init__", "Constructor."], [716, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [717, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [718, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.SeqDynamicWakes": [[720, 1, 1, "", "__init__", "Constructor."], [721, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [722, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [723, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [724, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [725, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.Streamlines2D": [[727, 1, 1, "", "__init__", "Constructor."], [728, 1, 1, "", "__repr__", "Return repr(self)."], [729, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [730, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [731, 1, 1, "", "get_streamline_data", "Gets streamline data, generating it on the fly"], [732, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.Timelines": [[734, 1, 1, "", "__init__", "Constructor."], [735, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [736, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [737, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [738, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.YawedWakes": [[740, 1, 1, "", "__init__", "Constructor."], [741, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [742, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [743, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [744, 1, 1, "", "initialize", "Initializes the model."], [745, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models": [[746, 0, 1, "", "AxisymmetricWakeModel", "Abstract base class for wake models that depend on (x, r) separately."], [749, 0, 1, "", "DistSlicedWakeModel", "Abstract base class for wake models for which the x-denpendency can be separated from the yz-dependency."], [756, 0, 1, "", "GaussianWakeModel", "Abstract base class for Gaussian wake models."], [759, 0, 1, "", "GroundMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from the ground"], [761, 0, 1, "", "TopHatWakeModel", "Abstract base class for top-hat wake models."], [768, 0, 1, "", "WakeMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from a horizontal plane, e.g. the ground"]], "foxes.models.wake_models.AxisymmetricWakeModel": [[747, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [748, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel": [[750, 1, 1, "", "__init__", "Constructor."], [751, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [752, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [753, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [754, 1, 1, "", "initialize", "Initializes the model."], [755, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.GaussianWakeModel": [[757, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [758, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."]], "foxes.models.wake_models.GroundMirror": [[760, 1, 1, "", "__init__", "Constructor."]], "foxes.models.wake_models.TopHatWakeModel": [[762, 1, 1, "", "__init__", "Constructor."], [763, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [764, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [765, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [766, 1, 1, "", "initialize", "Initializes the model."], [767, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.WakeMirror": [[769, 1, 1, "", "__init__", "Constructor."], [770, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [771, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [772, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [773, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction": [[774, 0, 1, "", "RankineHalfBody", "The Rankine half body induction wake model"], [781, 0, 1, "", "Rathmann", "The Rathmann induction wake model"], [787, 0, 1, "", "SelfSimilar", "The self-similar induction wake model from Troldborg and Meyer Forsting"], [793, 0, 1, "", "SelfSimilar2020", "The self-similar 2020 induction wake model from Troldborg and Meyer Forsting"]], "foxes.models.wake_models.induction.RankineHalfBody": [[775, 1, 1, "", "__init__", "Constructor."], [776, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [777, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [778, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [779, 1, 1, "", "initialize", "Initializes the model."], [780, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.Rathmann": [[782, 1, 1, "", "__init__", "Constructor."], [783, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [784, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [785, 1, 1, "", "initialize", "Initializes the model."], [786, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.SelfSimilar": [[788, 1, 1, "", "__init__", "Constructor."], [789, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [790, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [791, 1, 1, "", "initialize", "Initializes the model."], [792, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti": [[794, 0, 1, "", "CrespoHernandezTIWake", "The Crespo and Hernandez TI empirical correlation"], [800, 0, 1, "", "IECTIWake", "The TI wake model from IEC-64100-1-2005-8 (2005):"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake": [[795, 1, 1, "", "__init__", "Constructor."], [796, 1, 1, "", "__repr__", "Return repr(self)."], [797, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [798, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [799, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.ti.IECTIWake": [[801, 1, 1, "", "__init__", "Constructor."], [802, 1, 1, "", "__repr__", "Return repr(self)."], [803, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [804, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [805, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind": [[806, 0, 1, "", "Bastankhah2014", "The Bastankhah 2014 wake model"], [813, 0, 1, "", "Bastankhah2016", "The Bastankhah 2016 wake model"], [820, 0, 1, "", "Bastankhah2016Model", "Common calculations for the wake model and the wake frame, such that code repetitions can be avoided."], [843, 0, 1, "", "JensenWake", "The Jensen wake model."], [849, 0, 1, "", "TurbOParkWake", "The TurbOPark wake model"], [856, 0, 1, "", "TurbOParkWakeIX", "The generalized TurbOPark wake model, integrating TI over the streamline."]], "foxes.models.wake_models.wind.Bastankhah2014": [[807, 1, 1, "", "__init__", "Constructor."], [808, 1, 1, "", "__repr__", "Return repr(self)."], [809, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [810, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [811, 1, 1, "", "initialize", "Initializes the model."], [812, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016": [[814, 1, 1, "", "__init__", "Constructor."], [815, 1, 1, "", "__repr__", "Return repr(self)."], [816, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [817, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [818, 1, 1, "", "initialize", "Initializes the model."], [819, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016Model": [[821, 4, 1, "", "AMPL_FAR", ""], [822, 4, 1, "", "AMPL_NEAR", ""], [823, 4, 1, "", "CHECK", ""], [824, 4, 1, "", "DELTA_FAR", ""], [825, 4, 1, "", "DELTA_NEAR", ""], [826, 4, 1, "", "MDATA_KEY", ""], [827, 4, 1, "", "NEAR", ""], [828, 4, 1, "", "PARS", ""], [829, 4, 1, "", "R_PC", ""], [830, 4, 1, "", "R_PC_S", ""], [831, 4, 1, "", "SIGMA_Y_FAR", ""], [832, 4, 1, "", "SIGMA_Z_FAR", ""], [833, 4, 1, "", "SP_SEL", ""], [834, 4, 1, "", "X0", ""], [835, 1, 1, "", "__init__", "Constructor."], [836, 1, 1, "", "calc_data", "Calculate common model data, store it in mdata."], [837, 1, 1, "", "clean", "Clean all data"], [838, 1, 1, "", "get_data", "Return data entry"], [839, 1, 1, "", "has_data", "Check if data exists"], [840, 1, 1, "", "initialize", "Initializes the model."], [841, 2, 1, "", "pars", "Dictionary of the model parameters"], [842, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.JensenWake": [[844, 1, 1, "", "__init__", "Constructor."], [845, 1, 1, "", "__repr__", "Return repr(self)."], [846, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [847, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [848, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind.TurbOParkWake": [[850, 1, 1, "", "__init__", "Constructor."], [851, 1, 1, "", "__repr__", "Return repr(self)."], [852, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [853, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [854, 1, 1, "", "initialize", "Initializes the model."], [855, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWakeIX": [[857, 1, 1, "", "__init__", "Constructor."], [858, 1, 1, "", "__repr__", "Return repr(self)."], [859, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [860, 1, 1, "", "finalize", "Finalizes the model."], [861, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [862, 1, 1, "", "initialize", "Initializes the model."], [863, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_superpositions": [[864, 0, 1, "", "TILinear", "Linear wake superposition for TI."], [868, 0, 1, "", "TIMax", "Max wake superposition for TI."], [872, 0, 1, "", "TIPow", "Power wake superposition for TI."], [876, 0, 1, "", "TIQuadratic", "Quadratic wake superposition for TI."], [880, 0, 1, "", "WSLinear", "Linear supersposition of wind deficit results"], [885, 0, 1, "", "WSMax", "Max supersposition of wind deficit results"], [890, 0, 1, "", "WSPow", "Power supersposition of wind deficit results"], [895, 0, 1, "", "WSProduct", "Product supersposition of wind deficit results"], [900, 0, 1, "", "WSQuadratic", "Quadratic supersposition of wind deficit results"]], "foxes.models.wake_superpositions.TILinear": [[865, 1, 1, "", "__init__", "Constructor."], [866, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [867, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIMax": [[869, 1, 1, "", "__init__", "Constructor."], [870, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [871, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIPow": [[873, 1, 1, "", "__init__", "Constructor."], [874, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [875, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIQuadratic": [[877, 1, 1, "", "__init__", "Constructor."], [878, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [879, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.WSLinear": [[881, 1, 1, "", "__init__", "Constructor."], [882, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [883, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [884, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax": [[886, 1, 1, "", "__init__", "Constructor."], [887, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [888, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [889, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow": [[891, 1, 1, "", "__init__", "Constructor."], [892, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [893, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [894, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct": [[896, 1, 1, "", "__init__", "Constructor."], [897, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [898, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [899, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic": [[901, 1, 1, "", "__init__", "Constructor."], [902, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [903, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [904, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.opt.constraints": [[1487, 0, 1, "", "AreaGeometryConstraint", "Constrains turbine positions to the inside of a given area geometry."], [1508, 0, 1, "", "FarmBoundaryConstraint", "Constrains turbine positions to the inside of the wind farm boundary"], [1510, 0, 1, "", "MinDistConstraint", "Turbines must keep at least a minimal spatial distance."]], "foxes.opt.constraints.AreaGeometryConstraint": [[1488, 1, 1, "", "__init__", "Constructor."], [1489, 1, 1, "", "__str__", "Get info string"], [1490, 1, 1, "", "ana_deriv", "Calculates the analytic derivative, if possible."], [1491, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1492, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1493, 2, 1, "", "component_names", "The names of the components"], [1494, 1, 1, "", "finalize", "Finalize the object."], [1495, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1496, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1497, 1, 1, "", "initialize", "Initialize the object."], [1498, 2, 1, "", "initialized", "Flag for finished initialization"], [1499, 1, 1, "", "n_components", "Returns the number of components of the function."], [1500, 2, 1, "", "n_vars_float", "The number of float variables"], [1501, 2, 1, "", "n_vars_int", "The number of int variables"], [1502, 1, 1, "", "rename_vars_float", "Rename float variables."], [1503, 1, 1, "", "rename_vars_int", "Rename integer variables."], [1504, 2, 1, "", "var_names_float", "The names of the float variables"], [1505, 2, 1, "", "var_names_int", "The names of the integer variables"], [1506, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"], [1507, 1, 1, "", "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.FarmBoundaryConstraint": [[1509, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.constraints.MinDistConstraint": [[1511, 1, 1, "", "__init__", "Constructor."], [1512, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1513, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1514, 1, 1, "", "initialize", "Initialize the constaint."], [1515, 1, 1, "", "n_components", "Returns the number of components of the function."], [1516, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core": [[1517, 0, 1, "", "FarmConstraint", "Abstract base class for foxes wind farm optimization constraints."], [1528, 0, 1, "", "FarmObjective", "Abstract base class for foxes wind farm objective functions."], [1535, 0, 1, "", "FarmOptProblem", "Abstract base class of wind farm optimization problems."], [1579, 0, 1, "", "FarmVarsProblem", "Abstract base class for models that optimize farm variables."], [1585, 0, 1, "", "PopStates", "Helper class for vectorized opt population calculation, via artificial states of length n_pop times n_states."]], "foxes.opt.core.FarmConstraint": [[1518, 1, 1, "", "__init__", "Constructor."], [1519, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1520, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1521, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1522, 2, 1, "", "farm", "The wind farm"], [1523, 1, 1, "", "n_components", "Returns the number of components of the function."], [1524, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1525, 1, 1, "", "print_models", "Prints all model names."], [1526, 2, 1, "", "sel_turbines", "The list of selected turbines"], [1527, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core.FarmObjective": [[1529, 1, 1, "", "__init__", "Constraints."], [1530, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1531, 2, 1, "", "farm", "The wind farm"], [1532, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1533, 1, 1, "", "print_models", "Prints all model names."], [1534, 2, 1, "", "sel_turbines", "The list of selected turbines"]], "foxes.opt.core.FarmOptProblem": [[1536, 4, 1, "", "INT_INF", ""], [1537, 1, 1, "", "__init__", "Constructor."], [1538, 1, 1, "", "add_constraint", "Add a constraint to the problem."], [1539, 1, 1, "", "add_objective", "Add an objective to the problem."], [1540, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1541, 2, 1, "", "all_turbines", "Flag for all turbines optimization"], [1542, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1543, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1544, 1, 1, "", "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [1545, 1, 1, "", "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [1546, 1, 1, "", "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [1547, 2, 1, "", "constraints_tol", "Gets the tolerance values of constraints"], [1548, 2, 1, "", "counter", "The current value of the application counter"], [1549, 1, 1, "", "evaluate_individual", "Evaluate a single individual of the problem."], [1550, 1, 1, "", "evaluate_population", "Evaluate all individuals of a population."], [1551, 2, 1, "", "farm", "The wind farm"], [1552, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1553, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1554, 1, 1, "", "get_gradients", "Obtain gradients of a function that is linked to the problem."], [1555, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1556, 1, 1, "", "initial_values_int", "The initial values of the integer variables."], [1557, 1, 1, "", "initialize", "Initialize the object."], [1558, 2, 1, "", "max_values_constraints", "Gets the maximal values of constraints"], [1559, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1560, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1561, 2, 1, "", "maximize_objs", "Flags for objective maximization"], [1562, 2, 1, "", "min_values_constraints", "Gets the minimal values of constraints"], [1563, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1564, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1565, 2, 1, "", "n_constraints", "The total number of constraints, i.e., the sum of all components"], [1566, 2, 1, "", "n_objectives", "The total number of objectives, i.e., the sum of all components"], [1567, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1568, 2, 1, "", "n_vars_float", "The number of float variables"], [1569, 2, 1, "", "n_vars_int", "The number of int variables"], [1570, 1, 1, "", "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [1571, 1, 1, "", "prob_res_einsum_individual", "Calculate the einsum of problem results"], [1572, 1, 1, "", "prob_res_einsum_population", "Calculate the einsum of problem results"], [1573, 2, 1, "", "sel_turbines", "The selected turbines"], [1574, 1, 1, "", "tvar", "Gets turbine variable name"], [1575, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1576, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1577, 1, 1, "", "var_names_float", "The names of float variables."], [1578, 1, 1, "", "var_names_int", "The names of integer variables."]], "foxes.opt.core.FarmVarsProblem": [[1580, 1, 1, "", "initialize", "Initialize the object."], [1581, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1582, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1583, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1584, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."]], "foxes.opt.core.PopStates": [[1586, 1, 1, "", "__init__", "Constructor."], [1587, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [1588, 1, 1, "", "initialize", "Initializes the model."], [1589, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [1590, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [1591, 1, 1, "", "size", "The total number of states."], [1592, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.opt.objectives": [[1593, 0, 1, "", "FarmVarObjective", "Objectives based on farm variables."], [1602, 0, 1, "", "MaxFarmPower", "Maximize the mean wind farm power"], [1604, 0, 1, "", "MaxNTurbines", "Maximizes the number of turrbines."], [1610, 0, 1, "", "MinimalMaxTI", "Minimize the maximal turbine TI"]], "foxes.opt.objectives.FarmVarObjective": [[1594, 1, 1, "", "__init__", "Constructor."], [1595, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1596, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1597, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1598, 1, 1, "", "initialize", "Initialize the object."], [1599, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1600, 1, 1, "", "n_components", "Returns the number of components of the function."], [1601, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.objectives.MaxFarmPower": [[1603, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.objectives.MaxNTurbines": [[1605, 1, 1, "", "__init__", "Constructor."], [1606, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1607, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1608, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1609, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.objectives.MinimalMaxTI": [[1611, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.problems": [[1612, 0, 1, "", "OptFarmVars", "Optimize a selection of farm variables."]], "foxes.opt.problems.OptFarmVars": [[1613, 1, 1, "", "__init__", "Constructor."], [1614, 1, 1, "", "add_var", "Add a variable."], [1615, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1616, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1617, 1, 1, "", "initialize", "Initialize the object."], [1618, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1619, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1620, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1621, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1622, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1623, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1624, 1, 1, "", "var_names_float", "The names of float variables."], [1625, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout": [[1751, 0, 1, "", "FarmLayoutOptProblem", "The turbine positioning optimization problem"], [1760, 0, 1, "", "RegGridsLayoutOptProblem", "Places turbines on several regular grids and optimizes their parameters."], [1776, 0, 1, "", "RegularLayoutOptProblem", "Places turbines on a regular grid and optimizes its parameters."]], "foxes.opt.problems.layout.FarmLayoutOptProblem": [[1752, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1753, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1754, 1, 1, "", "initialize", "Initialize the object."], [1755, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1756, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1757, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1758, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1759, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.RegGridsLayoutOptProblem": [[1761, 1, 1, "", "__init__", "Constraints."], [1762, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1763, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1764, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1765, 1, 1, "", "initialize", "Initialize the object."], [1766, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1767, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1768, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1769, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1770, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1771, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1772, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1773, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1774, 1, 1, "", "var_names_float", "The names of float variables."], [1775, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.RegularLayoutOptProblem": [[1777, 4, 1, "", "ANGLE", ""], [1778, 4, 1, "", "OFFSET_X", ""], [1779, 4, 1, "", "OFFSET_Y", ""], [1780, 4, 1, "", "SPACING_X", ""], [1781, 4, 1, "", "SPACING_Y", ""], [1782, 1, 1, "", "__init__", "Constructor."], [1783, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1784, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1785, 1, 1, "", "initialize", "Initialize the object."], [1786, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1787, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1788, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1789, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1790, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts": [[1707, 0, 1, "", "GeomLayout", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes)."], [1717, 0, 1, "", "GeomLayoutGridded", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes), on a fixes background point grid."], [1727, 0, 1, "", "GeomRegGrid", "A regular grid within a boundary geometry."], [1737, 0, 1, "", "GeomRegGrids", "A regular grid within a boundary geometry."]], "foxes.opt.problems.layout.geom_layouts.GeomLayout": [[1708, 1, 1, "", "__init__", "Constructor."], [1709, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1710, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1711, 1, 1, "", "get_fig", "Return plotly figure axis."], [1712, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1713, 1, 1, "", "initialize", "Initialize the object."], [1714, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1715, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1716, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded": [[1718, 1, 1, "", "__init__", "Constructor."], [1719, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1720, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1721, 1, 1, "", "get_fig", "Return plotly figure axis."], [1722, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1723, 1, 1, "", "initialize", "Initialize the object."], [1724, 1, 1, "", "max_values_int", "The maximal values of the int variables."], [1725, 1, 1, "", "min_values_int", "The minimal values of the int variables."], [1726, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrid": [[1728, 1, 1, "", "__init__", "Constructor."], [1729, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1730, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1731, 1, 1, "", "get_fig", "Return plotly figure axis."], [1732, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1733, 1, 1, "", "initialize", "Initialize the object."], [1734, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1735, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1736, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrids": [[1738, 1, 1, "", "__init__", "Constructor."], [1739, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1740, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1741, 1, 1, "", "get_fig", "Return plotly figure axis."], [1742, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1743, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1744, 1, 1, "", "initialize", "Initialize the object."], [1745, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1746, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1747, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1748, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1749, 1, 1, "", "var_names_float", "The names of float variables."], [1750, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1626, 0, 1, "", "Boundary", "Boundary constraint for purely geometrical layouts problems."], [1631, 0, 1, "", "CFixN", "Fixed number of turbines constraint for purely geometrical layouts problems."], [1636, 0, 1, "", "CMaxN", "Maximal number of turbines constraint for purely geometrical layouts problems."], [1641, 0, 1, "", "CMinDensity", "Minimal turbine density constraint for purely geometrical layouts problems."], [1647, 0, 1, "", "CMinN", "Minimal number of turbines constraint for purely geometrical layouts problems."], [1652, 0, 1, "", "Constraint", "Abstract base class for optimization constraints."], [1657, 0, 1, "", "MinDist", "Minimal distance constraint for purely geometrical layouts problems."], [1663, 0, 1, "", "Valid", "Validity constraint for purely geometrical layouts problems."], [1668, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary": [[1627, 1, 1, "", "__init__", "Constructor."], [1628, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1629, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1630, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN": [[1632, 1, 1, "", "__init__", "Constructor."], [1633, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1634, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1635, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN": [[1637, 1, 1, "", "__init__", "Constructor."], [1638, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1639, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1640, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity": [[1642, 1, 1, "", "__init__", "Constructor."], [1643, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1644, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1645, 1, 1, "", "initialize", "Initialize the object."], [1646, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN": [[1648, 1, 1, "", "__init__", "Constructor"], [1649, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1650, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1651, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Constraint": [[1653, 1, 1, "", "__init__", "Constructor"], [1654, 1, 1, "", "check_individual", "Check if the constraints are fullfilled for the given individual."], [1655, 1, 1, "", "check_population", "Check if the constraints are fullfilled for the given population."], [1656, 1, 1, "", "get_bounds", "Returns the bounds for all components."]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist": [[1658, 1, 1, "", "__init__", "Constructor."], [1659, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1660, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1661, 1, 1, "", "initialize", "Initialize the constaint."], [1662, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid": [[1664, 1, 1, "", "__init__", "Constructor."], [1665, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1666, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1667, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1669, 0, 1, "", "MaxDensity", "Maximal turbine density objective for purely geometrical layouts problems."], [1676, 0, 1, "", "MaxGridSpacing", "Maximal grid spacing objective for purely geometrical layouts problems."], [1682, 0, 1, "", "MeMiMaDist", "Mean-min-max distance objective for purely geometrical layouts problems."], [1688, 0, 1, "", "OFixN", "Fixed number of turbines objective for purely geometrical layouts problems."], [1694, 0, 1, "", "OMaxN", "Maximal number of turbines objective for purely geometrical layouts problems."], [1700, 0, 1, "", "OMinN", "Minimal number of turbines objective for purely geometrical layouts problems."], [1703, 0, 1, "", "Objective", "Abstract base class for objective functions."], [1706, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity": [[1670, 1, 1, "", "__init__", "Constructor."], [1671, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1672, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1673, 1, 1, "", "initialize", "Initialize the object."], [1674, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1675, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing": [[1677, 1, 1, "", "__init__", "Constructor."], [1678, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1679, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1680, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1681, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist": [[1683, 1, 1, "", "__init__", "Constructor."], [1684, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1685, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1686, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1687, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN": [[1689, 1, 1, "", "__init__", "Constructor."], [1690, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1691, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1692, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1693, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN": [[1695, 1, 1, "", "__init__", "Constructor."], [1696, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1697, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1698, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1699, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN": [[1701, 1, 1, "", "__init__", "Constructor."], [1702, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.opt.problems.layout.geom_layouts.objectives.Objective": [[1704, 1, 1, "", "__init__", "Constructor"], [1705, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.output": [[905, 0, 1, "", "Animator", "Creates an animation from generators that yield lists of artists."], [910, 0, 1, "", "FarmLayoutOutput", "Plot the farm layout"], [919, 0, 1, "", "FarmResultsEval", "Evaluates farm results data."], [939, 0, 1, "", "FlowPlots2D", "Class for horizontal or vertical 2D flow plots"], [946, 0, 1, "", "Output", "Base class for foxes output."], [952, 0, 1, "", "PointCalculator", "Computes results at given points"], [955, 0, 1, "", "ResultsWriter", "Writes results farm data to file."], [959, 0, 1, "", "RosePlotOutput", "Class for rose plot creation"], [965, 0, 1, "", "SeqFlowAnimationPlugin", "Plugin for creating data for a 2D flow animation during sequential iterations"], [970, 0, 1, "", "SliceData", "Create data for horizontal or vertical 2D slices"], [978, 0, 1, "", "StateTurbineMap", "Creates heat maps with turbines on the one and states on the other axis."], [981, 0, 1, "", "StatesRosePlotOutput", "Class for rose plot creation directly from states"], [983, 0, 1, "", "TurbineTypeCurves", "Creates power and ct curves for turbine types, optionally including derating/boost."]], "foxes.output.Animator": [[906, 1, 1, "", "__init__", "Constructor."], [907, 1, 1, "", "add_generator", "Add a generator."], [908, 1, 1, "", "animate", "Create the animation"], [909, 2, 1, "", "generators", "The artist generators"]], "foxes.output.FarmLayoutOutput": [[911, 1, 1, "", "__init__", "Constructor."], [912, 1, 1, "", "get_figure", "Creates farm layout figure."], [913, 1, 1, "", "get_layout_data", "Returns wind farm layout."], [914, 1, 1, "", "get_layout_dict", "Returns wind farm layout."], [915, 1, 1, "", "write_csv", "Writes csv layout file."], [916, 1, 1, "", "write_json", "Writes xyh layout file."], [917, 1, 1, "", "write_plot", "Writes the layout plot to file."], [918, 1, 1, "", "write_xyh", "Writes xyh layout file."]], "foxes.output.FarmResultsEval": [[920, 1, 1, "", "__init__", "Constructor."], [921, 1, 1, "", "add_capacity", "Adds capacity to the farm results"], [922, 1, 1, "", "add_efficiency", "Adds efficiency to the farm results"], [923, 1, 1, "", "calc_farm_efficiency", "Calculates farm efficiency"], [924, 1, 1, "", "calc_farm_mean", "Calculates the mean over states and turbines."], [925, 1, 1, "", "calc_farm_sum", "Calculates the sum over states and turbines."], [926, 1, 1, "", "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [927, 1, 1, "", "calc_mean_farm_power", "Calculates the mean total farm power."], [928, 1, 1, "", "calc_states_mean", "Calculates the mean wrt states."], [929, 1, 1, "", "calc_states_std", "Calculates the standard deviation wrt states."], [930, 1, 1, "", "calc_states_sum", "Calculates the sum wrt states."], [931, 1, 1, "", "calc_turbine_mean", "Calculates the mean wrt turbines."], [932, 1, 1, "", "calc_turbine_sum", "Calculates the sum wrt turbines."], [933, 1, 1, "", "calc_turbine_yield", "Calculates the yield per turbine"], [934, 1, 1, "", "gen_stdata", "Generates state-turbine data, intended to be used in animations"], [935, 1, 1, "", "reduce_all", "Reduces states and turbine dimension by some operation"], [936, 1, 1, "", "reduce_states", "Reduces the states dimension by some operation"], [937, 1, 1, "", "reduce_turbines", "Reduces the turbine dimension by some operation"], [938, 1, 1, "", "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FlowPlots2D": [[940, 1, 1, "", "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [941, 1, 1, "", "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [942, 1, 1, "", "gen_states_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [943, 1, 1, "", "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [944, 1, 1, "", "get_mean_fig_xz", "Generates 2D farm flow figure in a horizontal xz-plane."], [945, 1, 1, "", "get_mean_fig_yz", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.Output": [[947, 1, 1, "", "__init__", "Constructor."], [948, 1, 1, "", "get_fpath", "Gets the total file path"], [949, 1, 1, "", "new", "Run-time output model factory."], [950, 1, 1, "", "print_models", "Prints all model names."], [951, 1, 1, "", "write", "Writes data to file via pandas."]], "foxes.output.PointCalculator": [[953, 1, 1, "", "__init__", "Constructor."], [954, 1, 1, "", "calculate", "Calculate point results"]], "foxes.output.ResultsWriter": [[956, 1, 1, "", "__init__", "Constructor."], [957, 1, 1, "", "write_csv", "Writes a csv file"], [958, 1, 1, "", "write_nc", "Writes a netCDF file"]], "foxes.output.RosePlotOutput": [[960, 1, 1, "", "__init__", "Constructor."], [961, 1, 1, "", "get_data", "Get pandas DataFrame with wind rose data."], [962, 1, 1, "", "get_data_info", "Returns default description for a variable."], [963, 1, 1, "", "get_figure", "Creates figure object"], [964, 1, 1, "", "write_figure", "Write rose plot to file"]], "foxes.output.SeqFlowAnimationPlugin": [[966, 1, 1, "", "__init__", "Constructor."], [967, 1, 1, "", "gen_images", ""], [968, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [969, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SliceData": [[971, 1, 1, "", "__init__", "Constructor."], [972, 1, 1, "", "get_mean_data_xy", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [973, 1, 1, "", "get_mean_data_xz", "Creates mean data of 2D farm flow slices in an xz-plane."], [974, 1, 1, "", "get_mean_data_yz", "Creates mean data of 2D farm flow slices in a yz-plane."], [975, 1, 1, "", "get_states_data_xy", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [976, 1, 1, "", "get_states_data_xz", "Creates states data of 2D farm flow slices in an xz-plane."], [977, 1, 1, "", "get_states_data_yz", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.StateTurbineMap": [[979, 1, 1, "", "__init__", "Constructor."], [980, 1, 1, "", "plot_map", "Plot the heat map for the selected variable."]], "foxes.output.StatesRosePlotOutput": [[982, 1, 1, "", "__init__", "Constructor."]], "foxes.output.TurbineTypeCurves": [[984, 1, 1, "", "__init__", "Constructor."], [985, 1, 1, "", "plot_curves", "Plot the power or ct curve."]], "foxes.output.flow_plots_2d": [[986, 5, 1, "", "get_fig", "Helper function that creates the flow image plot."]], "foxes.utils": [[987, 0, 1, "", "DataBook", "Container class for file paths, either directly given or as static data within a package."], [995, 0, 1, "", "PandasFileHelper", "This class helps reading and writing data to files via pandas."], [1002, 0, 1, "", "TabWindroseAxes", "A derivate of the wind rose axes that runs on stochastic data (bins with weights) instead of time series data"], [1435, 5, 1, "", "all_subclasses", "Searches all classes derived from some base class."], [1436, 5, 1, "", "cubic_roots", "Calculate real roots of polynomials of degree 3."], [1437, 5, 1, "", "delta_wd", "Calculates wd_b - wd_a."], [1438, 5, 1, "", "exec_python", "Executes strings that start with the indicator as python commands, returns one value"], [1486, 5, 1, "", "import_module", "Imports a module dynamically."], [1791, 5, 1, "", "read_shp", "Read a shape file"], [1792, 5, 1, "", "read_shp_polygons", "Reads the polygon points from a shp file."], [1808, 5, 1, "", "shp2csv", "Read shape file, write csv file"], [1809, 5, 1, "", "shp2geom2d", "Read shapefile into geom2d geometry"], [1810, 5, 1, "", "sqrt_reg", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1813, 5, 1, "", "uv2wd", "Calculate wind direction from wind vectors."], [1814, 5, 1, "", "wd2uv", "Calculate wind vectors from wind directions in degrees."], [1815, 5, 1, "", "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [1816, 5, 1, "", "wdvec2wd", "Calculate wind direction from wind direction vectors."], [1817, 5, 1, "", "write_nc", "Writes a dataset to netCFD file"]], "foxes.utils.DataBook": [[988, 1, 1, "", "__init__", "Constructor."], [989, 1, 1, "", "add_data_package", "Add static files from a package location."], [990, 1, 1, "", "add_data_package_file", "Add a static file from a package location."], [991, 1, 1, "", "add_file", "Add a file path"], [992, 1, 1, "", "add_files", "Add file paths"], [993, 1, 1, "", "get_file_path", "Get path of a file"], [994, 1, 1, "", "toc", "Get list of contents"]], "foxes.utils.PandasFileHelper": [[996, 4, 1, "", "DATA_FILE_FORMATS", ""], [997, 4, 1, "", "DEFAULT_FORMAT_DICT", ""], [998, 4, 1, "", "DEFAULT_READING_PARAMETERS", ""], [999, 4, 1, "", "DEFAULT_WRITING_PARAMETERS", ""], [1000, 1, 1, "", "read_file", "Helper for reading data according to file ending."], [1001, 1, 1, "", "write_file", "Helper for writing data according to file ending."]], "foxes.utils.TabWindroseAxes": [[1003, 0, 1, "", "ArtistList", "A sublist of Axes children based on their type."], [1010, 0, 1, "", "InvertedPolarTransform", "The inverse of the polar transform, mapping Cartesian coordinate space x and y back to theta and r."], [1045, 0, 1, "", "PolarAffine", "The affine part of the polar projection."], [1066, 0, 1, "", "PolarTransform", "The base polar transform."], [1075, 0, 1, "", "RadialLocator", "Used to locate radius ticks."], [1087, 0, 1, "", "ThetaFormatter", "Used to format the theta tick labels.  Converts the native unit of radians into degrees and adds a degree symbol."], [1097, 0, 1, "", "ThetaLocator", "Used to locate theta ticks."], [1103, 1, 1, "", "__init__", "See Axes base class for args and kwargs documentation"], [1104, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1105, 1, 1, "", "__repr__", "Return repr(self)."], [1106, 1, 1, "", "__str__", "Return str(self)."], [1107, 1, 1, "", "acorr", "Plot the autocorrelation of x."], [1108, 1, 1, "", "add_artist", "Add an .Artist to the Axes; return the artist."], [1109, 1, 1, "", "add_callback", "Add a callback function that will be called whenever one of the .Artist's properties changes."], [1110, 1, 1, "", "add_child_axes", "Add an .AxesBase to the Axes' children; return the child Axes."], [1111, 1, 1, "", "add_collection", "Add a .Collection to the Axes; return the collection."], [1112, 1, 1, "", "add_container", "Add a .Container to the Axes' containers; return the container."], [1113, 1, 1, "", "add_image", "Add an .AxesImage to the Axes; return the image."], [1114, 1, 1, "", "add_line", "Add a .Line2D to the Axes; return the line."], [1115, 1, 1, "", "add_patch", "Add a .Patch to the Axes; return the patch."], [1116, 1, 1, "", "add_table", "Add a .Table to the Axes; return the table."], [1117, 1, 1, "", "angle_spectrum", "Plot the angle spectrum."], [1118, 1, 1, "", "annotate", "Annotate the point xy with text text."], [1119, 1, 1, "", "apply_aspect", "Adjust the Axes for a specified data aspect ratio."], [1120, 1, 1, "", "arrow", "Add an arrow to the Axes."], [1121, 2, 1, "", "artists", ""], [1122, 1, 1, "", "autoscale", "Autoscale the axis view to the data (toggle)."], [1123, 1, 1, "", "autoscale_view", "Autoscale the view limits using the data limits."], [1124, 2, 1, "", "axes", "The ~.axes.Axes instance the artist resides in, or None."], [1125, 1, 1, "", "axhline", "Add a horizontal line across the Axes."], [1126, 1, 1, "", "axhspan", "Add a horizontal span (rectangle) across the Axes."], [1127, 1, 1, "", "axis", "Convenience method to get or set some axis properties."], [1128, 1, 1, "", "axline", "Add an infinitely long straight line."], [1129, 1, 1, "", "axvline", "Add a vertical line across the Axes."], [1130, 1, 1, "", "axvspan", "Add a vertical span (rectangle) across the Axes."], [1131, 1, 1, "", "bar", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1132, 1, 1, "", "bar_label", "Label a bar plot."], [1133, 1, 1, "", "barbs", "Plot a 2D field of barbs."], [1134, 1, 1, "", "barh", "Make a horizontal bar plot."], [1135, 1, 1, "", "box", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1136, 1, 1, "", "boxplot", "Draw a box and whisker plot."], [1137, 1, 1, "", "broken_barh", "Plot a horizontal sequence of rectangles."], [1138, 1, 1, "", "bxp", "Drawing function for box and whisker plots."], [1139, 1, 1, "", "can_pan", "Return whether this Axes supports the pan/zoom button functionality."], [1140, 1, 1, "", "can_zoom", "Return whether this Axes supports the zoom box button functionality."], [1141, 1, 1, "", "cla", "Clear the Axes."], [1142, 1, 1, "", "clabel", "Label a contour plot."], [1143, 1, 1, "", "clear", "Clear the current axes"], [1144, 1, 1, "", "cohere", "Plot the coherence between x and y."], [1145, 2, 1, "", "collections", ""], [1146, 1, 1, "", "contains", "Test whether the artist contains the mouse event."], [1147, 1, 1, "", "contains_point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."], [1148, 1, 1, "", "contour", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1149, 1, 1, "", "contourf", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1150, 1, 1, "", "convert_xunits", "Convert x using the unit type of the xaxis."], [1151, 1, 1, "", "convert_yunits", "Convert y using the unit type of the yaxis."], [1152, 1, 1, "", "csd", "Plot the cross-spectral density."], [1153, 1, 1, "", "drag_pan", "Called when the mouse moves during a pan operation."], [1154, 1, 1, "", "draw", "Draw the Artist (and its children) using the given renderer."], [1155, 1, 1, "", "draw_artist", "Efficiently redraw a single artist."], [1156, 1, 1, "", "end_pan", "Called when a pan operation completes (when the mouse button is up.)"], [1157, 1, 1, "", "errorbar", "Plot y versus x as lines and/or markers with attached errorbars."], [1158, 1, 1, "", "eventplot", "Plot identical parallel lines at the given positions."], [1159, 1, 1, "", "fill", "Plot filled polygons."], [1160, 1, 1, "", "fill_between", "Fill the area between two horizontal curves."], [1161, 1, 1, "", "fill_betweenx", "Fill the area between two vertical curves."], [1162, 1, 1, "", "findobj", "Find artist objects."], [1163, 1, 1, "", "format_coord", "Return a format string formatting the x, y coordinates."], [1164, 1, 1, "", "format_cursor_data", "Return a string representation of data."], [1165, 1, 1, "", "format_xdata", "Return x formatted as an x-value."], [1166, 1, 1, "", "format_ydata", "Return y formatted as a y-value."], [1167, 1, 1, "", "from_ax", "Return a WindroseAxes object for the figure fig."], [1168, 1, 1, "", "get_adjustable", "Return whether the Axes will adjust its physical dimension ('box') or its data limits ('datalim') to achieve the desired aspect ratio."], [1169, 1, 1, "", "get_agg_filter", "Return filter function to be used for agg filter."], [1170, 1, 1, "", "get_alpha", "Return the alpha value used for blending - not supported on all backends."], [1171, 1, 1, "", "get_anchor", "Get the anchor location."], [1172, 1, 1, "", "get_animated", "Return whether the artist is animated."], [1173, 1, 1, "", "get_aspect", "Return the aspect ratio of the axes scaling."], [1174, 1, 1, "", "get_autoscale_on", "Return True if each axis is autoscaled, False otherwise."], [1175, 1, 1, "", "get_autoscalex_on", "Return whether the xaxis is autoscaled."], [1176, 1, 1, "", "get_autoscaley_on", "Return whether the yaxis is autoscaled."], [1177, 1, 1, "", "get_axes_locator", "Return the axes_locator."], [1178, 1, 1, "", "get_axisbelow", "Get whether axis ticks and gridlines are above or below most artists."], [1179, 1, 1, "", "get_box_aspect", "Return the Axes box aspect, i.e. the ratio of height to width."], [1180, 1, 1, "", "get_children", "Return a list of the child .Artists of this .Artist."], [1181, 1, 1, "", "get_clip_box", "Return the clipbox."], [1182, 1, 1, "", "get_clip_on", "Return whether the artist uses clipping."], [1183, 1, 1, "", "get_clip_path", "Return the clip path."], [1184, 1, 1, "", "get_cursor_data", "Return the cursor data for a given event."], [1185, 1, 1, "", "get_data_ratio", "Return the aspect ratio of the data itself.  For a polar plot, this should always be 1.0"], [1186, 1, 1, "", "get_default_bbox_extra_artists", "Return a default list of artists that are used for the bounding box calculation."], [1187, 1, 1, "", "get_facecolor", "Get the facecolor of the Axes."], [1188, 1, 1, "", "get_fc", "Alias for get_facecolor."], [1189, 1, 1, "", "get_figure", "Return the .Figure instance the artist belongs to."], [1190, 1, 1, "", "get_frame_on", "Get whether the Axes rectangle patch is drawn."], [1191, 1, 1, "", "get_gid", "Return the group id."], [1192, 1, 1, "", "get_gridspec", "Return the .GridSpec associated with the subplot, or None."], [1193, 1, 1, "", "get_images", "Return a list of .AxesImages contained by the Axes."], [1194, 1, 1, "", "get_in_layout", "Return boolean flag, True if artist is included in layout calculations."], [1195, 1, 1, "", "get_label", "Return the label used for this artist in the legend."], [1196, 1, 1, "", "get_legend", "Return the .Legend instance, or None if no legend is defined."], [1197, 1, 1, "", "get_legend_handles_labels", "Return handles and labels for legend"], [1198, 1, 1, "", "get_lines", "Return a list of lines contained by the Axes."], [1199, 1, 1, "", "get_mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1200, 1, 1, "", "get_navigate", "Get whether the Axes responds to navigation commands."], [1201, 1, 1, "", "get_navigate_mode", "Get the navigation toolbar button status: 'PAN', 'ZOOM', or None."], [1202, 1, 1, "", "get_path_effects", ""], [1203, 1, 1, "", "get_picker", "Return the picking behavior of the artist."], [1204, 1, 1, "", "get_position", "Return the position of the Axes within the figure as a .Bbox."], [1205, 1, 1, "", "get_rasterization_zorder", "Return the zorder value below which artists will be rasterized."], [1206, 1, 1, "", "get_rasterized", "Return whether the artist is to be rasterized."], [1207, 1, 1, "", "get_renderer_cache", "[Deprecated]"], [1208, 1, 1, "", "get_rlabel_position", "The theta position of the radius labels in degrees."], [1209, 1, 1, "", "get_rmax", "Outer radial limit."], [1210, 1, 1, "", "get_rmin", "The inner radial limit."], [1211, 1, 1, "", "get_rorigin", "float"], [1212, 1, 1, "", "get_rsign", ""], [1213, 1, 1, "", "get_shared_x_axes", "Return an immutable view on the shared x-axes Grouper."], [1214, 1, 1, "", "get_shared_y_axes", "Return an immutable view on the shared y-axes Grouper."], [1215, 1, 1, "", "get_sketch_params", "Return the sketch parameters for the artist."], [1216, 1, 1, "", "get_snap", "Return the snap setting."], [1217, 1, 1, "", "get_subplotspec", "Return the .SubplotSpec associated with the subplot, or None."], [1218, 1, 1, "", "get_theta_direction", "Get the direction in which theta increases."], [1219, 1, 1, "", "get_theta_offset", "Get the offset for the location of 0 in radians."], [1220, 1, 1, "", "get_thetamax", "Return the maximum theta limit in degrees."], [1221, 1, 1, "", "get_thetamin", "Get the minimum theta limit in degrees."], [1222, 1, 1, "", "get_tightbbox", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1223, 1, 1, "", "get_title", "Get an Axes title."], [1224, 1, 1, "", "get_transform", "Return the .Transform instance used by this artist."], [1225, 1, 1, "", "get_transformed_clip_path_and_affine", "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."], [1226, 1, 1, "", "get_url", "Return the url."], [1227, 1, 1, "", "get_visible", "Return the visibility."], [1228, 1, 1, "", "get_window_extent", "Return the Axes bounding box in display space; args and kwargs are empty."], [1229, 1, 1, "", "get_xaxis", "[Discouraged] Return the XAxis instance."], [1230, 1, 1, "", "get_xaxis_text1_transform", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1231, 1, 1, "", "get_xaxis_text2_transform", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1232, 1, 1, "", "get_xaxis_transform", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."], [1233, 1, 1, "", "get_xbound", "Return the lower and upper x-axis bounds, in increasing order."], [1234, 1, 1, "", "get_xgridlines", "Return the xaxis' grid lines as a list of .Line2Ds."], [1235, 1, 1, "", "get_xlabel", "Get the xlabel text string."], [1236, 1, 1, "", "get_xlim", "Return the x-axis view limits."], [1237, 1, 1, "", "get_xmajorticklabels", "Return the xaxis' major tick labels, as a list of ~.text.Text."], [1238, 1, 1, "", "get_xminorticklabels", "Return the xaxis' minor tick labels, as a list of ~.text.Text."], [1239, 1, 1, "", "get_xscale", "Return the xaxis' scale (as a str)."], [1240, 1, 1, "", "get_xticklabels", "Get the xaxis' tick labels."], [1241, 1, 1, "", "get_xticklines", "Return the xaxis' tick lines as a list of .Line2Ds."], [1242, 1, 1, "", "get_xticks", "Return the xaxis' tick locations in data coordinates."], [1243, 1, 1, "", "get_yaxis", "[Discouraged] Return the YAxis instance."], [1244, 1, 1, "", "get_yaxis_text1_transform", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1245, 1, 1, "", "get_yaxis_text2_transform", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1246, 1, 1, "", "get_yaxis_transform", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."], [1247, 1, 1, "", "get_ybound", "Return the lower and upper y-axis bounds, in increasing order."], [1248, 1, 1, "", "get_ygridlines", "Return the yaxis' grid lines as a list of .Line2Ds."], [1249, 1, 1, "", "get_ylabel", "Get the ylabel text string."], [1250, 1, 1, "", "get_ylim", "Return the y-axis view limits."], [1251, 1, 1, "", "get_ymajorticklabels", "Return the yaxis' major tick labels, as a list of ~.text.Text."], [1252, 1, 1, "", "get_yminorticklabels", "Return the yaxis' minor tick labels, as a list of ~.text.Text."], [1253, 1, 1, "", "get_yscale", "Return the yaxis' scale (as a str)."], [1254, 1, 1, "", "get_yticklabels", "Get the yaxis' tick labels."], [1255, 1, 1, "", "get_yticklines", "Return the yaxis' tick lines as a list of .Line2Ds."], [1256, 1, 1, "", "get_yticks", "Return the yaxis' tick locations in data coordinates."], [1257, 1, 1, "", "get_zorder", "Return the artist's zorder."], [1258, 1, 1, "", "grid", "Configure the grid lines."], [1259, 1, 1, "", "has_data", "Return whether any artists have been added to the Axes."], [1260, 1, 1, "", "have_units", "Return whether units are set on any axis."], [1261, 1, 1, "", "hexbin", "Make a 2D hexagonal binning plot of points x, y."], [1262, 1, 1, "", "hist", "Compute and plot a histogram."], [1263, 1, 1, "", "hist2d", "Make a 2D histogram plot."], [1264, 1, 1, "", "hlines", "Plot horizontal lines at each y from xmin to xmax."], [1265, 2, 1, "", "images", ""], [1266, 1, 1, "", "imshow", "Display data as an image, i.e., on a 2D regular raster."], [1267, 1, 1, "", "in_axes", "Return whether the given event (in display coords) is in the Axes."], [1268, 1, 1, "", "indicate_inset", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1269, 1, 1, "", "indicate_inset_zoom", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1270, 1, 1, "", "inset_axes", "Add a child inset Axes to this existing Axes."], [1271, 1, 1, "", "invert_xaxis", "Invert the x-axis."], [1272, 1, 1, "", "invert_yaxis", "Invert the y-axis."], [1273, 1, 1, "", "is_transform_set", "Return whether the Artist has an explicitly set transform."], [1274, 1, 1, "", "label_outer", "Only show \"outer\" labels and tick labels."], [1275, 1, 1, "", "legend", "Sets the legend location and her properties."], [1276, 2, 1, "", "lines", ""], [1277, 1, 1, "", "locator_params", "Control behavior of major tick locators."], [1278, 1, 1, "", "loglog", "Make a plot with log scaling on both the x- and y-axis."], [1279, 1, 1, "", "magnitude_spectrum", "Plot the magnitude spectrum."], [1280, 1, 1, "", "margins", "Set or retrieve autoscaling margins."], [1281, 1, 1, "", "matshow", "Plot the values of a 2D matrix or array as color-coded image."], [1282, 1, 1, "", "minorticks_off", "Remove minor ticks from the Axes."], [1283, 1, 1, "", "minorticks_on", "Display minor ticks on the Axes."], [1284, 2, 1, "", "mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1285, 4, 1, "", "name", ""], [1286, 2, 1, "", "patches", ""], [1287, 1, 1, "", "pchanged", "Call all of the registered callbacks."], [1288, 1, 1, "", "pcolor", "Create a pseudocolor plot with a non-regular rectangular grid."], [1289, 1, 1, "", "pcolorfast", "Create a pseudocolor plot with a non-regular rectangular grid."], [1290, 1, 1, "", "pcolormesh", "Create a pseudocolor plot with a non-regular rectangular grid."], [1291, 1, 1, "", "phase_spectrum", "Plot the phase spectrum."], [1292, 1, 1, "", "pick", "Process a pick event."], [1293, 1, 1, "", "pickable", "Return whether the artist is pickable."], [1294, 1, 1, "", "pie", "Plot a pie chart."], [1295, 1, 1, "", "plot", "Plot y versus x as lines and/or markers."], [1296, 1, 1, "", "plot_date", "[Discouraged] Plot coercing the axis to treat floats as dates."], [1297, 1, 1, "", "properties", "Return a dictionary of all the properties of the artist."], [1298, 1, 1, "", "psd", "Plot the power spectral density."], [1299, 1, 1, "", "quiver", "Plot a 2D field of arrows."], [1300, 1, 1, "", "quiverkey", "Add a key to a quiver plot."], [1301, 1, 1, "", "redraw_in_frame", "Efficiently redraw Axes data, but not axis ticks, labels, etc."], [1302, 1, 1, "", "relim", "Recompute the data limits based on current artists."], [1303, 1, 1, "", "remove", "Remove the artist from the figure if possible."], [1304, 1, 1, "", "remove_callback", "Remove a callback based on its observer id."], [1305, 1, 1, "", "reset_position", "Reset the active position to the original position."], [1306, 1, 1, "", "scatter", "A scatter plot of y vs. x with varying marker size and/or color."], [1307, 1, 1, "", "secondary_xaxis", "Add a second x-axis to this ~.axes.Axes."], [1308, 1, 1, "", "secondary_yaxis", "Add a second y-axis to this ~.axes.Axes."], [1309, 1, 1, "", "semilogx", "Make a plot with log scaling on the x-axis."], [1310, 1, 1, "", "semilogy", "Make a plot with log scaling on the y-axis."], [1311, 1, 1, "", "set", "Set multiple properties at once."], [1312, 1, 1, "", "set_adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1313, 1, 1, "", "set_agg_filter", "Set the agg filter."], [1314, 1, 1, "", "set_alpha", "Set the alpha value used for blending - not supported on all backends."], [1315, 1, 1, "", "set_anchor", "Define the anchor location."], [1316, 1, 1, "", "set_animated", "Set whether the artist is intended to be used in an animation."], [1317, 1, 1, "", "set_aspect", "Set the aspect ratio of the axes scaling, i.e. y/x-scale."], [1318, 1, 1, "", "set_autoscale_on", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."], [1319, 1, 1, "", "set_autoscalex_on", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1320, 1, 1, "", "set_autoscaley_on", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1321, 1, 1, "", "set_axes_locator", "Set the Axes locator."], [1322, 1, 1, "", "set_axis_off", "Turn the x- and y-axis off."], [1323, 1, 1, "", "set_axis_on", "Turn the x- and y-axis on."], [1324, 1, 1, "", "set_axisbelow", "Set whether axis ticks and gridlines are above or below most artists."], [1325, 1, 1, "", "set_box_aspect", "Set the Axes box aspect, i.e. the ratio of height to width."], [1326, 1, 1, "", "set_clip_box", "Set the artist's clip .Bbox."], [1327, 1, 1, "", "set_clip_on", "Set whether the artist uses clipping."], [1328, 1, 1, "", "set_clip_path", "Set the artist's clip path."], [1329, 1, 1, "", "set_facecolor", "Set the facecolor of the Axes."], [1330, 1, 1, "", "set_fc", "Alias for set_facecolor."], [1331, 1, 1, "", "set_figure", "Set the .Figure instance the artist belongs to."], [1332, 1, 1, "", "set_frame_on", "Set whether the Axes rectangle patch is drawn."], [1333, 1, 1, "", "set_gid", "Set the (group) id for the artist."], [1334, 1, 1, "", "set_in_layout", "Set if artist is to be included in layout calculations, E.g. /tutorials/intermediate/constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."], [1335, 1, 1, "", "set_label", "Set a label that will be displayed in the legend."], [1336, 1, 1, "", "set_legend", ""], [1337, 1, 1, "", "set_mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."], [1338, 1, 1, "", "set_navigate", "Set whether the Axes responds to navigation toolbar commands."], [1339, 1, 1, "", "set_navigate_mode", "Set the navigation toolbar button status."], [1340, 1, 1, "", "set_path_effects", "Set the path effects."], [1341, 1, 1, "", "set_picker", "Define the picking behavior of the artist."], [1342, 1, 1, "", "set_position", "Set the Axes position."], [1343, 1, 1, "", "set_prop_cycle", "Set the property cycle of the Axes."], [1344, 1, 1, "", "set_radii_angle", "Set the radii labels angle"], [1345, 1, 1, "", "set_rasterization_zorder", "Set the zorder threshold for rasterization for vector graphics output."], [1346, 1, 1, "", "set_rasterized", "Force rasterized (bitmap) drawing for vector graphics output."], [1347, 1, 1, "", "set_rgrids", "Set the radial gridlines on a polar plot."], [1348, 1, 1, "", "set_rlabel_position", "Update the theta position of the radius labels."], [1349, 1, 1, "", "set_rlim", "Set the radial axis view limits."], [1350, 1, 1, "", "set_rmax", "Set the outer radial limit."], [1351, 1, 1, "", "set_rmin", "Set the inner radial limit."], [1352, 1, 1, "", "set_rorigin", "Update the radial origin."], [1353, 1, 1, "", "set_rscale", ""], [1354, 1, 1, "", "set_rticks", ""], [1355, 1, 1, "", "set_sketch_params", "Set the sketch parameters."], [1356, 1, 1, "", "set_snap", "Set the snapping behavior."], [1357, 1, 1, "", "set_subplotspec", "Set the .SubplotSpec. associated with the subplot."], [1358, 1, 1, "", "set_theta_direction", "Set the direction in which theta increases."], [1359, 1, 1, "", "set_theta_offset", "Set the offset for the location of 0 in radians."], [1360, 1, 1, "", "set_theta_zero_location", "Set the location of theta's zero."], [1361, 1, 1, "", "set_thetagrids", "Set the theta gridlines in a polar plot."], [1362, 1, 1, "", "set_thetalim", "Set the minimum and maximum theta values."], [1363, 1, 1, "", "set_thetamax", "Set the maximum theta limit in degrees."], [1364, 1, 1, "", "set_thetamin", "Set the minimum theta limit in degrees."], [1365, 1, 1, "", "set_title", "Set a title for the Axes."], [1366, 1, 1, "", "set_transform", "Set the artist transform."], [1367, 1, 1, "", "set_url", "Set the url for the artist."], [1368, 1, 1, "", "set_visible", "Set the artist's visibility."], [1369, 1, 1, "", "set_xbound", "Set the lower and upper numerical bounds of the x-axis."], [1370, 1, 1, "", "set_xlabel", "Set the label for the x-axis."], [1371, 1, 1, "", "set_xlim", "Set the x-axis view limits."], [1372, 1, 1, "", "set_xmargin", "Set padding of X data limits prior to autoscaling."], [1373, 1, 1, "", "set_xscale", "Set the xaxis' scale."], [1374, 1, 1, "", "set_xticklabels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1375, 1, 1, "", "set_xticks", "Set the xaxis' tick locations and optionally labels."], [1376, 1, 1, "", "set_ybound", "Set the lower and upper numerical bounds of the y-axis."], [1377, 1, 1, "", "set_ylabel", "Set the label for the y-axis."], [1378, 1, 1, "", "set_ylim", "Set the y-axis view limits."], [1379, 1, 1, "", "set_ymargin", "Set padding of Y data limits prior to autoscaling."], [1380, 1, 1, "", "set_yscale", "Set the yaxis' scale."], [1381, 1, 1, "", "set_yticklabels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1382, 1, 1, "", "set_yticks", "Set the yaxis' tick locations and optionally labels."], [1383, 1, 1, "", "set_zorder", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."], [1384, 1, 1, "", "sharex", "Share the x-axis with other."], [1385, 1, 1, "", "sharey", "Share the y-axis with other."], [1386, 1, 1, "", "specgram", "Plot a spectrogram."], [1387, 1, 1, "", "spy", "Plot the sparsity pattern of a 2D array."], [1388, 1, 1, "", "stackplot", "Draw a stacked area plot."], [1389, 1, 1, "", "stairs", "A stepwise constant function as a line with bounding edges or a filled plot."], [1390, 2, 1, "", "stale", "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."], [1391, 1, 1, "", "start_pan", "Called when a pan operation has started."], [1392, 1, 1, "", "stem", "Create a stem plot."], [1393, 1, 1, "", "step", "Make a step plot."], [1394, 2, 1, "", "sticky_edges", "x and y sticky edge lists for autoscaling."], [1395, 1, 1, "", "streamplot", "Draw streamlines of a vector flow."], [1396, 1, 1, "", "table", "Add a table to an ~.axes.Axes."], [1397, 2, 1, "", "tables", ""], [1398, 1, 1, "", "text", "Add text to the Axes."], [1399, 2, 1, "", "texts", ""], [1400, 1, 1, "", "tick_params", "Change the appearance of ticks, tick labels, and gridlines."], [1401, 1, 1, "", "ticklabel_format", "Configure the .ScalarFormatter used by default for linear Axes."], [1402, 1, 1, "", "tricontour", "Draw contour lines on an unstructured triangular grid."], [1403, 1, 1, "", "tricontourf", "Draw contour regions on an unstructured triangular grid."], [1404, 1, 1, "", "tripcolor", "Create a pseudocolor plot of an unstructured triangular grid."], [1405, 1, 1, "", "triplot", "Draw an unstructured triangular grid as lines and/or markers."], [1406, 1, 1, "", "twinx", "Create a twin Axes sharing the xaxis."], [1407, 1, 1, "", "twiny", "Create a twin Axes sharing the yaxis."], [1408, 1, 1, "", "update", "Update this artist's properties from the dict props."], [1409, 1, 1, "", "update_datalim", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1410, 1, 1, "", "update_from", "Copy properties from other to self."], [1411, 2, 1, "", "use_sticky_edges", "When autoscaling, whether to obey all Artist.sticky_edges."], [1412, 2, 1, "", "viewLim", ""], [1413, 1, 1, "", "violin", "Drawing function for violin plots."], [1414, 1, 1, "", "violinplot", "Make a violin plot."], [1415, 1, 1, "", "vlines", "Plot vertical lines at each x from ymin to ymax."], [1416, 1, 1, "", "xaxis_date", "Set up axis ticks and labels to treat data along the xaxis as dates."], [1417, 1, 1, "", "xaxis_inverted", "Return whether the xaxis is oriented in the \"inverse\" direction."], [1418, 1, 1, "", "xcorr", "Plot the cross correlation between x and y."], [1419, 1, 1, "", "yaxis_date", "Set up axis ticks and labels to treat data along the yaxis as dates."], [1420, 1, 1, "", "yaxis_inverted", "Return whether the yaxis is oriented in the \"inverse\" direction."], [1421, 4, 1, "", "zorder", ""]], "foxes.utils.TabWindroseAxes.ArtistList": [[1004, 1, 1, "", "__getitem__", ""], [1005, 1, 1, "", "__init__", "The Axes from which this sublist will pull the children Artists."], [1006, 1, 1, "", "__repr__", "Return repr(self)."], [1007, 1, 1, "", "__subclasshook__", "Abstract classes can override this to customize issubclass()."], [1008, 1, 1, "", "count", ""], [1009, 1, 1, "", "index", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform": [[1011, 4, 1, "", "INVALID", ""], [1012, 4, 1, "", "INVALID_AFFINE", ""], [1013, 4, 1, "", "INVALID_NON_AFFINE", ""], [1014, 1, 1, "", "__add__", "Compose two transforms together so that self is followed by other."], [1015, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1016, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1017, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1018, 1, 1, "", "__str__", "Return str(self)."], [1019, 1, 1, "", "__sub__", "Compose self with the inverse of other, cancelling identical terms if any:"], [1020, 1, 1, "", "contains_branch", "Return whether the given transform is a sub-tree of this transform."], [1021, 1, 1, "", "contains_branch_seperately", "Return whether the given branch is a sub-tree of this transform on each separate dimension."], [1022, 2, 1, "", "depth", "Return the number of transforms which have been chained together to form this Transform instance."], [1023, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1024, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1025, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1026, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1027, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1028, 1, 1, "", "invalidate", "Invalidate this TransformNode and triggers an invalidation of its ancestors.  Should be called any time the transform changes."], [1029, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1030, 4, 1, "", "is_affine", ""], [1031, 4, 1, "", "is_bbox", ""], [1032, 4, 1, "", "is_separable", "True if this transform is separable in the x- and y- dimensions."], [1033, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1034, 4, 1, "", "pass_through", "If pass_through is True, all ancestors will always be invalidated, even if 'self' is already invalid."], [1035, 1, 1, "", "set_children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."], [1036, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1037, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1038, 1, 1, "", "transform_angles", "Transform a set of angles anchored at specific locations."], [1039, 1, 1, "", "transform_bbox", "Transform the given bounding box."], [1040, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1041, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1042, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1043, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."], [1044, 1, 1, "", "transform_point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.PolarAffine": [[1046, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1047, 1, 1, "", "__eq__", "Return self==value."], [1048, 1, 1, "", "__init__", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1049, 1, 1, "", "__str__", "Return str(self)."], [1050, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1051, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1052, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1053, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1054, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1055, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1056, 4, 1, "", "is_affine", ""], [1057, 2, 1, "", "is_separable", "bool(x) -> bool"], [1058, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1059, 1, 1, "", "to_values", "Return the values of the matrix as an (a, b, c, d, e, f) tuple."], [1060, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1061, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1062, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1063, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1064, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1065, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform": [[1067, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1068, 1, 1, "", "__str__", "Return str(self)."], [1069, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1070, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1071, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1072, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1073, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1074, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.RadialLocator": [[1076, 4, 1, "", "MAXTICKS", ""], [1077, 1, 1, "", "__call__", "Return the locations of the ticks."], [1078, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1079, 4, 1, "", "axis", ""], [1080, 1, 1, "", "create_dummy_axis", ""], [1081, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1082, 1, 1, "", "raise_if_exceeds", "Log at WARNING level if locs is longer than Locator.MAXTICKS."], [1083, 1, 1, "", "set_axis", ""], [1084, 1, 1, "", "set_params", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."], [1085, 1, 1, "", "tick_values", "Return the values of the located ticks given vmin and vmax."], [1086, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaFormatter": [[1088, 1, 1, "", "__call__", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1089, 1, 1, "", "fix_minus", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."], [1090, 1, 1, "", "format_data", "Return the full string representation of the value with the position unspecified."], [1091, 1, 1, "", "format_data_short", "Return a short string version of the tick value."], [1092, 1, 1, "", "format_ticks", "Return the tick labels for all the ticks at once."], [1093, 1, 1, "", "get_offset", ""], [1094, 4, 1, "", "locs", ""], [1095, 1, 1, "", "set_axis", ""], [1096, 1, 1, "", "set_locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaLocator": [[1098, 1, 1, "", "__call__", "Return the locations of the ticks."], [1099, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1100, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1101, 1, 1, "", "set_axis", ""], [1102, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.abl.neutral": [[1422, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1423, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1424, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.sheared": [[1425, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable": [[1426, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1427, 5, 1, "", "lgz", "Calculates the log factor for wind speed profiles."], [1428, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1429, 5, 1, "", "psi", "The Psi function"], [1430, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable": [[1431, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1432, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1433, 5, 1, "", "psi", "The Psi function"], [1434, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.geom2d": [[1439, 0, 1, "", "AreaGeometry", "Abstract base class for closed 2D geometries."], [1446, 0, 1, "", "AreaIntersection", "The intersection of area geometries."], [1448, 0, 1, "", "AreaUnion", "The union of area geometries."], [1456, 0, 1, "", "Circle", "This class represents the area of a circle."], [1463, 0, 1, "", "ClosedPolygon", "This class represents a closed 2D polygon."], [1470, 0, 1, "", "HalfPlane", "This class represents a half plane in 2d."], [1478, 0, 1, "", "InvertedAreaGeometry", "Base class for inverted geometries."]], "foxes.utils.geom2d.AreaGeometry": [[1440, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1441, 1, 1, "", "inverse", "Get the inverted geometry"], [1442, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1443, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1444, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1445, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaIntersection": [[1447, 1, 1, "", "__new__", "Constructor."]], "foxes.utils.geom2d.AreaUnion": [[1449, 1, 1, "", "__init__", "Constructor."], [1450, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1451, 1, 1, "", "inverse", "Get the inverted geometry"], [1452, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1453, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1454, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1455, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle": [[1457, 1, 1, "", "__init__", "Cobnstructor."], [1458, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1459, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1460, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1461, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1462, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon": [[1464, 1, 1, "", "__init__", "Constructor."], [1465, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1466, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1467, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1468, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1469, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane": [[1471, 1, 1, "", "__init__", "Constructor."], [1472, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1473, 1, 1, "", "inverse", "Get the inverted geometry"], [1474, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1475, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1476, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1477, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry": [[1479, 1, 1, "", "__init__", "Constructor."], [1480, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1481, 1, 1, "", "inverse", "Get the inverted geometry"], [1482, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1483, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1484, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1485, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.runners": [[1793, 0, 1, "", "DaskRunner", "Class for function execution via dask"], [1800, 0, 1, "", "DefaultRunner", "Class for default function execution."], [1802, 0, 1, "", "Runner", "Abstract base class for runners."]], "foxes.utils.runners.DaskRunner": [[1794, 1, 1, "", "__init__", "Constructor."], [1795, 1, 1, "", "finalize", "Finallize the runner"], [1796, 1, 1, "", "initialize", "Initialize the runner"], [1797, 1, 1, "", "is_distributed", ""], [1798, 1, 1, "", "print", "Prints if verbosity is not zero"], [1799, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.DefaultRunner": [[1801, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.Runner": [[1803, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1804, 1, 1, "", "finalize", "Finalize the runner"], [1805, 1, 1, "", "initialize", "Initialize the runner"], [1806, 2, 1, "", "initialized", "Initialization flag"], [1807, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.two_circles": [[1811, 5, 1, "", "area", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1812, 5, 1, "", "calc_area", "Calculates the intersection of two circles."]], "foxes.variables": [[1818, 3, 1, "", "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [1819, 3, 1, "", "AMB_CT", "The ambient thrust coefficient"], [1820, 3, 1, "", "AMB_P", "The ambient power, unit depends on user choice"], [1821, 3, 1, "", "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [1822, 3, 1, "", "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [1823, 3, 1, "", "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [1824, 3, 1, "", "AMB_RHO", "The ambient air density in kg/m3"], [1825, 3, 1, "", "AMB_T", "The ambient temperature in Kelvin"], [1826, 3, 1, "", "AMB_TI", "The ambient turbulence intensity"], [1827, 3, 1, "", "AMB_WD", "The ambient wind direction in degrees"], [1828, 3, 1, "", "AMB_WS", "The ambient wind speed in m/s"], [1829, 3, 1, "", "AMB_YAW", "The ambient absolute yaw angle of  a turbine in degrees"], [1830, 3, 1, "", "AMB_YAWM", "The ambient relative yaw angle of  a turbine in degrees"], [1831, 3, 1, "", "AMB_YLD", "Ambient yield in GWh/a"], [1832, 3, 1, "", "CAP", "Capacity, equals P/P_nominal"], [1833, 3, 1, "", "CT", "The thrust coefficient"], [1834, 3, 1, "", "D", "The rotor diameter in m"], [1835, 3, 1, "", "EFF", "Efficiency, equals P/AMB_P"], [1836, 3, 1, "", "H", "The height over ground in m"], [1837, 3, 1, "", "K", "Wake growth parameter"], [1838, 3, 1, "", "KB", "KTI value for zero TI, K = KB + KTI*TI"], [1839, 3, 1, "", "KTI", "Factor between K and TI, K = KB + KTI*TI"], [1840, 3, 1, "", "MAX_P", "The maximal power, for derating/boost"], [1841, 3, 1, "", "MOL", "The Monin-Ubukhof length in m"], [1842, 3, 1, "", "ORDER", "The turbine order"], [1843, 3, 1, "", "P", "The power, unit depends on user choice"], [1844, 3, 1, "", "PA_ALPHA", "The alpha parameter of the PorteAgel wake model"], [1845, 3, 1, "", "PA_BETA", "The beta parameter of the PorteAgel wake model"], [1846, 3, 1, "", "REWS", "Rotor effective wind speed in m/s"], [1847, 3, 1, "", "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [1848, 3, 1, "", "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [1849, 3, 1, "", "RHO", "The air density in kg/m3"], [1850, 3, 1, "", "SHEAR", "The shear exponent"], [1851, 3, 1, "", "T", "The temperature in Kelvin"], [1852, 3, 1, "", "TI", "The turbulence intensity"], [1853, 3, 1, "", "TXYH", "The turbine rotor centre coordinate  vector (x, y, height)"], [1854, 3, 1, "", "WD", "The wind direction in degrees"], [1855, 3, 1, "", "WEIGHT", "The statistical weight of a state"], [1856, 3, 1, "", "WS", "The wind speed in m/s"], [1857, 3, 1, "", "X", "The x coordinate in m"], [1858, 3, 1, "", "Y", "The y coordinate in"], [1859, 3, 1, "", "YAW", "The absolute yaw angle of a turbine in degrees"], [1860, 3, 1, "", "YAWM", "The relative yaw angle of a turbine in degrees"], [1861, 3, 1, "", "YLD", "Yield in GWh/a"], [1862, 3, 1, "", "Z0", "The roughness length in m"], [1863, 3, 1, "", "amb2var", "Mapping from ambient variable to the corresponding waked variable"], [1864, 3, 1, "", "var2amb", "Mapping from variable to the corresponding ambient variable"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:data", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"attribut": [0, 9, 16, 46, 53, 57, 62, 66, 71, 77, 83, 93, 302, 319, 330, 339, 349, 354, 362, 375, 387, 393, 409, 416, 438, 453, 461, 481, 489, 507, 513, 516, 522, 529, 537, 548, 561, 569, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 645, 657, 663, 669, 675, 681, 685, 689, 693, 697, 704, 708, 714, 719, 726, 733, 739, 749, 768, 774, 781, 787, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 910, 919, 946, 952, 955, 965, 970, 978, 983, 987, 995, 1448, 1456, 1463, 1470, 1487, 1510, 1535, 1585, 1593, 1604, 1652, 1707, 1717, 1727, 1737, 1760, 1776, 1793], "public": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 506, 507, 513, 516, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 910, 919, 939, 946, 952, 955, 959, 965, 970, 978, 981, 983, 987, 995, 1002, 1003, 1010, 1045, 1066, 1075, 1087, 1097, 1439, 1446, 1448, 1456, 1463, 1470, 1478, 1487, 1508, 1510, 1517, 1528, 1535, 1579, 1585, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1793, 1800, 1802], "member": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 453, 461, 472, 474, 481, 489, 502, 506, 507, 513, 516, 522, 529, 537, 545, 548, 555, 561, 566, 569, 573, 579, 586, 593, 597, 602, 608, 614, 619, 626, 630, 635, 639, 642, 645, 650, 652, 654, 657, 663, 669, 675, 681, 685, 689, 693, 697, 701, 704, 708, 714, 719, 726, 733, 739, 746, 749, 756, 759, 761, 768, 774, 781, 787, 793, 794, 800, 806, 813, 820, 843, 849, 856, 864, 868, 872, 876, 880, 885, 890, 895, 900, 905, 910, 919, 939, 946, 952, 955, 959, 965, 970, 978, 981, 983, 987, 995, 1002, 1003, 1010, 1045, 1066, 1075, 1087, 1097, 1439, 1446, 1448, 1456, 1463, 1470, 1478, 1487, 1508, 1510, 1517, 1528, 1535, 1579, 1585, 1593, 1602, 1604, 1610, 1612, 1626, 1631, 1636, 1641, 1647, 1652, 1657, 1663, 1669, 1676, 1682, 1688, 1694, 1700, 1703, 1707, 1717, 1727, 1737, 1751, 1760, 1776, 1793, 1800, 1802], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 14, 17, 20, 21, 27, 36, 37, 38, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 59, 60, 61, 63, 64, 67, 68, 69, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 195, 303, 305, 306, 307, 308, 312, 313, 314, 315, 318, 320, 321, 322, 326, 328, 329, 331, 332, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 371, 374, 376, 377, 378, 379, 380, 381, 384, 386, 388, 389, 390, 391, 394, 395, 397, 398, 400, 401, 405, 406, 408, 410, 411, 412, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 454, 455, 457, 458, 460, 463, 464, 465, 467, 468, 469, 471, 474, 475, 476, 477, 478, 480, 482, 483, 484, 485, 488, 491, 492, 493, 495, 496, 497, 498, 501, 505, 508, 510, 511, 515, 518, 519, 520, 521, 523, 524, 525, 526, 527, 530, 532, 533, 534, 535, 538, 540, 541, 542, 543, 546, 547, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 570, 571, 572, 575, 576, 580, 583, 587, 590, 594, 595, 596, 598, 599, 600, 601, 603, 604, 605, 606, 609, 610, 611, 612, 615, 616, 617, 618, 620, 621, 622, 623, 624, 627, 628, 629, 631, 632, 633, 634, 636, 637, 638, 640, 641, 643, 644, 646, 648, 649, 651, 653, 655, 656, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 683, 686, 687, 690, 691, 694, 695, 698, 699, 702, 705, 706, 709, 710, 711, 712, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 734, 735, 736, 737, 738, 740, 741, 742, 743, 744, 747, 748, 750, 751, 752, 753, 754, 757, 758, 760, 761, 762, 763, 764, 765, 766, 769, 770, 771, 772, 775, 776, 777, 778, 779, 782, 783, 784, 785, 788, 789, 790, 791, 795, 797, 798, 799, 801, 803, 804, 805, 807, 809, 810, 811, 814, 816, 817, 818, 835, 836, 838, 839, 840, 844, 846, 847, 848, 850, 852, 853, 854, 857, 859, 860, 861, 862, 865, 866, 867, 869, 870, 871, 873, 874, 875, 877, 878, 879, 881, 882, 883, 884, 886, 887, 888, 889, 891, 892, 893, 894, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 911, 912, 915, 916, 917, 918, 920, 921, 922, 924, 925, 926, 927, 928, 930, 931, 932, 933, 934, 935, 936, 937, 938, 940, 941, 942, 943, 944, 945, 947, 948, 949, 951, 953, 954, 956, 957, 958, 960, 961, 962, 963, 964, 966, 968, 969, 971, 972, 973, 974, 975, 976, 977, 979, 980, 982, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 1000, 1001, 1003, 1005, 1010, 1016, 1036, 1037, 1038, 1040, 1045, 1048, 1060, 1061, 1062, 1066, 1067, 1073, 1107, 1109, 1117, 1118, 1119, 1120, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1142, 1144, 1146, 1148, 1149, 1152, 1153, 1154, 1157, 1158, 1159, 1160, 1161, 1162, 1184, 1204, 1222, 1223, 1232, 1240, 1242, 1246, 1254, 1256, 1258, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1270, 1275, 1277, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1300, 1302, 1306, 1307, 1308, 1309, 1310, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1329, 1331, 1332, 1333, 1334, 1335, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1355, 1356, 1360, 1361, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1386, 1387, 1388, 1389, 1391, 1392, 1393, 1395, 1396, 1398, 1400, 1401, 1402, 1403, 1404, 1405, 1408, 1409, 1413, 1414, 1415, 1416, 1418, 1419, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1440, 1444, 1445, 1447, 1449, 1450, 1454, 1455, 1457, 1458, 1461, 1462, 1464, 1465, 1468, 1469, 1471, 1472, 1476, 1477, 1479, 1480, 1484, 1485, 1486, 1488, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1502, 1503, 1509, 1511, 1512, 1513, 1514, 1518, 1519, 1520, 1521, 1529, 1530, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1546, 1549, 1550, 1552, 1553, 1554, 1557, 1570, 1571, 1572, 1574, 1575, 1576, 1580, 1581, 1582, 1583, 1584, 1586, 1587, 1588, 1589, 1590, 1592, 1594, 1595, 1596, 1597, 1598, 1602, 1603, 1605, 1606, 1607, 1610, 1611, 1613, 1614, 1617, 1622, 1623, 1627, 1628, 1629, 1632, 1633, 1634, 1637, 1638, 1639, 1642, 1643, 1644, 1645, 1648, 1649, 1650, 1653, 1654, 1655, 1658, 1659, 1660, 1661, 1664, 1665, 1666, 1668, 1670, 1671, 1672, 1673, 1677, 1678, 1679, 1683, 1684, 1685, 1689, 1690, 1691, 1695, 1696, 1697, 1701, 1704, 1706, 1708, 1709, 1710, 1711, 1713, 1718, 1719, 1720, 1721, 1723, 1728, 1729, 1730, 1731, 1733, 1738, 1739, 1740, 1741, 1744, 1752, 1754, 1757, 1758, 1761, 1762, 1765, 1770, 1771, 1772, 1773, 1782, 1783, 1785, 1788, 1789, 1791, 1792, 1794, 1799, 1801, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817], "return": [2, 3, 4, 6, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 42, 44, 45, 48, 51, 52, 55, 56, 59, 61, 64, 65, 69, 70, 73, 74, 79, 81, 82, 85, 86, 94, 95, 96, 98, 99, 100, 101, 114, 195, 233, 308, 309, 310, 313, 318, 322, 323, 324, 325, 326, 328, 329, 333, 334, 335, 336, 337, 338, 341, 345, 346, 348, 351, 352, 353, 357, 359, 360, 367, 370, 371, 372, 373, 374, 381, 382, 384, 385, 386, 390, 391, 392, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 408, 414, 420, 421, 424, 425, 426, 427, 436, 437, 441, 442, 445, 446, 455, 456, 457, 458, 459, 460, 464, 466, 467, 468, 470, 471, 476, 477, 478, 479, 480, 483, 485, 486, 487, 488, 492, 494, 496, 497, 499, 500, 501, 504, 505, 510, 511, 512, 520, 527, 528, 535, 536, 543, 544, 553, 554, 559, 560, 563, 564, 565, 567, 568, 571, 572, 574, 576, 577, 578, 582, 584, 585, 589, 591, 592, 595, 596, 599, 600, 601, 604, 606, 610, 612, 613, 616, 618, 622, 623, 624, 628, 629, 632, 634, 637, 638, 640, 641, 643, 644, 648, 649, 655, 656, 659, 661, 662, 665, 667, 668, 671, 673, 674, 677, 679, 680, 683, 684, 687, 688, 691, 692, 695, 696, 699, 700, 702, 703, 706, 707, 710, 711, 712, 713, 716, 717, 718, 721, 722, 723, 729, 730, 731, 732, 735, 736, 737, 741, 742, 743, 745, 747, 748, 751, 755, 757, 758, 763, 764, 765, 767, 773, 780, 786, 792, 797, 798, 803, 804, 809, 812, 816, 819, 838, 839, 841, 842, 846, 847, 852, 855, 859, 863, 866, 867, 870, 871, 874, 875, 878, 879, 882, 883, 884, 887, 888, 889, 892, 893, 894, 897, 898, 899, 902, 903, 904, 908, 909, 912, 913, 914, 923, 924, 925, 926, 927, 928, 930, 931, 932, 933, 935, 936, 937, 938, 943, 944, 945, 948, 954, 961, 962, 963, 964, 972, 973, 974, 975, 976, 977, 980, 985, 993, 994, 1000, 1002, 1036, 1037, 1038, 1040, 1060, 1061, 1062, 1073, 1107, 1109, 1117, 1118, 1120, 1125, 1126, 1127, 1128, 1129, 1130, 1132, 1133, 1134, 1136, 1137, 1138, 1144, 1146, 1152, 1157, 1158, 1159, 1160, 1161, 1162, 1178, 1204, 1208, 1209, 1210, 1211, 1215, 1222, 1223, 1230, 1231, 1236, 1240, 1242, 1244, 1245, 1250, 1254, 1256, 1261, 1262, 1263, 1264, 1266, 1268, 1269, 1270, 1278, 1279, 1280, 1281, 1288, 1289, 1290, 1291, 1294, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1309, 1310, 1347, 1361, 1365, 1371, 1374, 1378, 1381, 1386, 1387, 1388, 1389, 1392, 1393, 1395, 1396, 1398, 1402, 1403, 1405, 1406, 1407, 1413, 1414, 1415, 1418, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1441, 1442, 1443, 1444, 1445, 1451, 1452, 1453, 1454, 1455, 1459, 1460, 1461, 1462, 1466, 1467, 1468, 1469, 1473, 1474, 1475, 1476, 1477, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1493, 1495, 1496, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1507, 1512, 1513, 1515, 1516, 1520, 1521, 1522, 1523, 1524, 1526, 1527, 1531, 1532, 1534, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1577, 1578, 1581, 1582, 1587, 1589, 1590, 1591, 1592, 1595, 1596, 1597, 1599, 1600, 1601, 1606, 1607, 1608, 1609, 1615, 1616, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1628, 1629, 1630, 1633, 1634, 1635, 1638, 1639, 1640, 1643, 1644, 1646, 1649, 1650, 1651, 1655, 1656, 1659, 1660, 1662, 1665, 1666, 1667, 1668, 1671, 1672, 1674, 1675, 1678, 1679, 1680, 1681, 1684, 1685, 1686, 1687, 1690, 1691, 1692, 1693, 1696, 1697, 1698, 1699, 1702, 1705, 1706, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1734, 1735, 1736, 1739, 1740, 1741, 1742, 1743, 1745, 1746, 1747, 1748, 1749, 1750, 1752, 1753, 1755, 1756, 1757, 1758, 1759, 1762, 1763, 1764, 1766, 1767, 1768, 1769, 1770, 1771, 1774, 1775, 1783, 1784, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1799, 1801, 1806, 1807, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816], "exampl": [114, 186, 233, 274, 276, 1125, 1128, 1129, 1130, 1138, 1158, 1270, 1277, 1307, 1308, 1343, 1371, 1378, 1394, 1398, 1400, 1668, 1706, 1885], "note": [114, 233, 739, 774, 781, 787, 793, 794, 800, 806, 813, 820, 849, 1022, 1085, 1107, 1119, 1120, 1123, 1134, 1136, 1152, 1153, 1154, 1156, 1158, 1159, 1164, 1184, 1207, 1230, 1231, 1232, 1236, 1244, 1245, 1246, 1250, 1258, 1262, 1263, 1266, 1280, 1281, 1288, 1290, 1294, 1295, 1296, 1298, 1299, 1306, 1312, 1328, 1371, 1373, 1375, 1378, 1380, 1382, 1386, 1391, 1392, 1393, 1402, 1403, 1406, 1407, 1418, 1668, 1706], "see": [114, 233, 1109, 1117, 1118, 1119, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1136, 1152, 1160, 1161, 1164, 1168, 1171, 1178, 1179, 1184, 1203, 1222, 1228, 1233, 1236, 1247, 1250, 1261, 1262, 1263, 1264, 1266, 1271, 1272, 1279, 1281, 1287, 1288, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1299, 1304, 1306, 1312, 1315, 1317, 1324, 1325, 1337, 1342, 1343, 1347, 1349, 1361, 1369, 1370, 1371, 1376, 1377, 1378, 1386, 1392, 1415], "also": [114, 233, 1109, 1117, 1118, 1119, 1125, 1126, 1127, 1128, 1129, 1130, 1134, 1136, 1152, 1160, 1161, 1164, 1168, 1171, 1178, 1179, 1184, 1203, 1222, 1228, 1233, 1236, 1247, 1250, 1261, 1262, 1263, 1264, 1266, 1271, 1272, 1279, 1281, 1287, 1288, 1290, 1291, 1292, 1293, 1295, 1296, 1298, 1299, 1304, 1306, 1312, 1315, 1317, 1324, 1325, 1337, 1342, 1343, 1347, 1349, 1361, 1369, 1370, 1371, 1376, 1377, 1378, 1386, 1392, 1415], "yield": [934, 940, 941, 942, 986], "class": 1002, "other": [1107, 1117, 1125, 1126, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1137, 1144, 1148, 1149, 1152, 1157, 1159, 1160, 1161, 1261, 1262, 1263, 1264, 1266, 1275, 1277, 1279, 1281, 1288, 1289, 1290, 1291, 1295, 1296, 1298, 1299, 1306, 1307, 1308, 1347, 1361, 1365, 1370, 1377, 1387, 1389, 1396, 1398, 1400, 1402, 1403, 1415, 1418], "refer": [1144, 1152, 1298], "discourag": [1229, 1243, 1296, 1374, 1381], "warn": [1268, 1269, 1270, 1289, 1307, 1308, 1339, 1347, 1361, 1374, 1381], "hint": [1288, 1290], "rais": [1401, 1668, 1706], "api": 1865, "fox": [1866, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1887, 1896], "algorithm": [1866, 1867, 1868, 1869], "downwind": 1867, "model": [1867, 1868, 1869, 1875, 1883, 1889, 1890, 1894], "iter": 1868, "sequenti": [1869, 1899], "constant": 1870, "core": [1871, 1876], "data": [1872, 1891, 1895, 1902, 1903], "input": 1874, "farm_layout": 1874, "state": [1874, 1891], "windio": 1874, "farm_control": 1875, "farm_model": 1875, "partial_wak": 1875, "point_model": 1875, "rotor_model": 1875, "turbine_model": 1875, "turbine_typ": 1875, "vertical_profil": 1875, "axial_induct": 1875, "wake_fram": 1875, "wake_model": [1875, 1883], "wake_superposit": 1875, "opt": [1876, 1877, 1878], "problem": [1876, 1877, 1878], "object": [1876, 1878], "constraint": [1876, 1878], "layout": [1877, 1878, 1891, 1893], "geom_layout": [1877, 1878], "output": 1879, "flow_plots_2d": 1879, "util": [1880, 1881], "abl": [1880, 1881], "geom2d": 1880, "runner": 1880, "two_circl": 1880, "neutral": 1881, "stabl": 1881, "unstabl": 1881, "shear": 1881, "variabl": 1882, "wind": [1883, 1890, 1891, 1895, 1898, 1903], "ti": 1883, "induct": [1883, 1889], "citat": 1884, "journal": 1884, "paper": 1884, "version": 1884, "specif": 1884, "doi": 1884, "histori": 1886, "v0": 1886, "1": [1886, 1890, 1901], "0": 1886, "alpha": 1886, "2": [1886, 1889, 1899], "3": 1886, "4": 1886, "5": 1886, "6": 1886, "welcom": 1887, "licens": 1887, "content": 1887, "contribut": 1887, "acknowledg": 1887, "instal": 1888, "requir": 1888, "via": 1888, "pip": 1888, "virtual": 1888, "python": 1888, "environ": 1888, "standard": 1888, "user": 1888, "develop": 1888, "conda": 1888, "prepar": 1888, "blockag": [1889, 1890], "comparison": 1889, "static": 1891, "farm": [1890, 1891], "test_farm_67": 1891, "csv": 1891, "ambient": 1891, "wrf": 1891, "timeseri": [1891, 1902], "4464": 1891, "gz": 1891, "abl_states_6000": 1891, "timeseries_3000": 1891, "timeseries_8000": 1891, "timeseries_100": 1891, "wind_rose_bremen": 1891, "wind_rot": 1891, "nc": 1891, "power": [1891, 1897], "thrust": 1891, "curv": 1891, "dtu": 1891, "10mw": 1891, "d178d3": 1891, "h119": 1891, "iea": 1891, "15mw": 1891, "d240": 1891, "h150": 1891, "iwt": 1891, "7d5mw": 1891, "d164": 1891, "h100": 1891, "nrel": 1891, "5mw": 1891, "d126": 1891, "h90": 1891, "file": 1891, "path": 1891, "heterogen": 1892, "flow": 1892, "optim": 1893, "The": 1894, "book": 1894, "multi": 1895, "height": 1895, "overview": 1896, "how": 1896, "setup": 1896, "mask": 1897, "sector": 1898, "manag": 1898, "dynam": [1899, 1901], "wake": [1899, 1901, 1904], "propag": [1899, 1901], "singl": 1900, "row": 1900, "turbin": 1900, "spatial": 1901, "homogen": 1901, "rose": 1903, "yaw": 1904, "rotor": 1904, "test": 1905}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"API": [[1865, "api"]], "foxes.algorithms": [[1866, "foxes-algorithms"]], "Downwind algorithm": [[1867, "downwind-algorithm"]], "Downwind algorithm models": [[1867, "downwind-algorithm-models"]], "Iterative algorithm": [[1868, "iterative-algorithm"]], "Iterative algorithm models": [[1868, "iterative-algorithm-models"]], "Sequential algorithm": [[1869, "sequential-algorithm"]], "Sequential algorithm models": [[1869, "sequential-algorithm-models"]], "foxes.constants": [[1870, "foxes-constants"]], "foxes.core": [[1871, "foxes-core"]], "foxes.data": [[1872, "foxes-data"]], "foxes": [[1873, "foxes"]], "foxes.input": [[1874, "foxes-input"]], "foxes.input.farm_layout": [[1874, "foxes-input-farm-layout"]], "foxes.input.states": [[1874, "foxes-input-states"]], "foxes.input.windio": [[1874, "foxes-input-windio"]], "foxes.models": [[1875, "foxes-models"]], "foxes.models.farm_controllers": [[1875, "foxes-models-farm-controllers"]], "foxes.models.farm_models": [[1875, "foxes-models-farm-models"]], "foxes.models.partial_wakes": [[1875, "foxes-models-partial-wakes"]], "foxes.models.point_models": [[1875, "foxes-models-point-models"]], "foxes.models.rotor_models": [[1875, "foxes-models-rotor-models"]], "foxes.models.turbine_models": [[1875, "foxes-models-turbine-models"]], "foxes.models.turbine_types": [[1875, "foxes-models-turbine-types"]], "foxes.models.vertical_profiles": [[1875, "foxes-models-vertical-profiles"]], "foxes.models.axial_induction": [[1875, "foxes-models-axial-induction"]], "foxes.models.wake_frames": [[1875, "foxes-models-wake-frames"]], "foxes.models.wake_models": [[1875, "foxes-models-wake-models"], [1883, "foxes-models-wake-models"]], "foxes.models.wake_superpositions": [[1875, "foxes-models-wake-superpositions"]], "foxes.opt": [[1876, "foxes-opt"]], "foxes.opt.core": [[1876, "foxes-opt-core"]], "foxes.opt.problems": [[1876, "foxes-opt-problems"], [1877, "foxes-opt-problems"]], "foxes.opt.objectives": [[1876, "foxes-opt-objectives"]], "foxes.opt.constraints": [[1876, "foxes-opt-constraints"]], "foxes.opt.problems.layout": [[1877, "foxes-opt-problems-layout"]], "foxes.opt.problems.layout.geom_layouts": [[1877, "foxes-opt-problems-layout-geom-layouts"], [1878, "foxes-opt-problems-layout-geom-layouts"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1878, "foxes-opt-problems-layout-geom-layouts-objectives"]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1878, "foxes-opt-problems-layout-geom-layouts-constraints"]], "foxes.output": [[1879, "foxes-output"]], "foxes.output.flow_plots_2d": [[1879, "foxes-output-flow-plots-2d"]], "foxes.utils": [[1880, "foxes-utils"]], "foxes.utils.abl": [[1880, "foxes-utils-abl"]], "foxes.utils.geom2d": [[1880, "foxes-utils-geom2d"]], "foxes.utils.runners": [[1880, "foxes-utils-runners"]], "foxes.utils.two_circles": [[1880, "foxes-utils-two-circles"]], "foxes.utils.abl.neutral": [[1881, "foxes-utils-abl-neutral"]], "foxes.utils.abl.stable": [[1881, "foxes-utils-abl-stable"]], "foxes.utils.abl.unstable": [[1881, "foxes-utils-abl-unstable"]], "foxes.utils.abl.sheared": [[1881, "foxes-utils-abl-sheared"]], "foxes.variables": [[1882, "foxes-variables"]], "foxes.models.wake_models.wind": [[1883, "foxes-models-wake-models-wind"]], "foxes.models.wake_models.ti": [[1883, "foxes-models-wake-models-ti"]], "foxes.models.wake_models.induction": [[1883, "foxes-models-wake-models-induction"]], "Citation": [[1884, "citation"]], "Journal paper": [[1884, "journal-paper"]], "Version specific DOI": [[1884, "version-specific-doi"]], "History": [[1886, "history"]], "v0.1.0-alpha": [[1886, "v0-1-0-alpha"]], "v0.1.1-alpha": [[1886, "v0-1-1-alpha"]], "v0.1.2-alpha": [[1886, "v0-1-2-alpha"]], "v0.1.3-alpha": [[1886, "v0-1-3-alpha"]], "v0.1.4-alpha": [[1886, "v0-1-4-alpha"]], "v0.2.0-alpha": [[1886, "v0-2-0-alpha"]], "v0.2.1-alpha": [[1886, "v0-2-1-alpha"]], "v0.2.2-alpha": [[1886, "v0-2-2-alpha"]], "v0.2.3-alpha": [[1886, "v0-2-3-alpha"]], "v0.2.4-alpha": [[1886, "v0-2-4-alpha"]], "v0.2.5-alpha": [[1886, "v0-2-5-alpha"]], "v0.2.6-alpha": [[1886, "v0-2-6-alpha"]], "v0.3.0-alpha": [[1886, "v0-3-0-alpha"]], "v0.3.1-alpha": [[1886, "v0-3-1-alpha"]], "v0.3.2-alpha": [[1886, "v0-3-2-alpha"]], "v0.3.3-alpha": [[1886, "v0-3-3-alpha"]], "v0.3.4-alpha": [[1886, "v0-3-4-alpha"]], "v0.3.5-alpha": [[1886, "v0-3-5-alpha"]], "v0.4.0": [[1886, "v0-4-0"]], "v0.4.1": [[1886, "v0-4-1"]], "v0.4.2": [[1886, "v0-4-2"]], "v0.4.3": [[1886, "v0-4-3"]], "v0.4.4": [[1886, "v0-4-4"]], "v0.4.5": [[1886, "v0-4-5"]], "v0.5": [[1886, "v0-5"]], "v0.5.1": [[1886, "v0-5-1"]], "v0.5.2": [[1886, "v0-5-2"]], "v0.5.2.1": [[1886, "v0-5-2-1"]], "v0.6": [[1886, "v0-6"]], "Welcome to FOXES": [[1887, "welcome-to-foxes"]], "License": [[1887, "license"]], "Contents": [[1887, "contents"]], "Contributing": [[1887, "contributing"]], "Acknowledgements": [[1887, "acknowledgements"]], "Installation": [[1888, "installation"]], "Requirements": [[1888, "requirements"]], "Installation via pip": [[1888, "installation-via-pip"]], "Virtual Python environment": [[1888, "virtual-python-environment"], [1888, "id1"]], "Standard users": [[1888, "standard-users"], [1888, "id2"]], "Developers": [[1888, "developers"], [1888, "id3"]], "Installation via conda": [[1888, "installation-via-conda"]], "Preparation": [[1888, "preparation"]], "Static data": [[1891, "Static-data"]], "Wind farm layout data": [[1891, "Wind-farm-layout-data"]], "test_farm_67.csv": [[1891, "test_farm_67.csv"]], "Ambient states data": [[1891, "Ambient-states-data"]], "WRF-Timeseries-4464.csv.gz": [[1891, "WRF-Timeseries-4464.csv.gz"]], "abl_states_6000.csv.gz": [[1891, "abl_states_6000.csv.gz"]], "timeseries_3000.csv.gz": [[1891, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[1891, "timeseries_8000.csv.gz"]], "timeseries_100.csv.gz": [[1891, "timeseries_100.csv.gz"]], "wind_rose_bremen.csv": [[1891, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[1891, "wind_rotation.nc"]], "Power and thrust curves": [[1891, "Power-and-thrust-curves"]], "DTU-10MW-D178d3-H119.csv": [[1891, "DTU-10MW-D178d3-H119.csv"]], "IEA-15MW-D240-H150.csv": [[1891, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[1891, "IWT-7d5MW-D164-H100.csv"]], "NREL-5MW-D126-H90.csv": [[1891, "NREL-5MW-D126-H90.csv"]], "File paths": [[1891, "File-paths"]], "Heterogeneous flow": [[1892, "Heterogeneous-flow"]], "Layout optimization": [[1893, "Layout-optimization"]], "The model book": [[1894, "The-model-book"]], "Multi-height wind data": [[1895, "Multi-height-wind-data"]], "Overview - how to setup foxes": [[1896, "Overview---how-to-setup-foxes"]], "Power mask": [[1897, "Power-mask"]], "Wind sector management": [[1898, "Wind-sector-management"]], "Dynamic wakes 2": [[1899, "Dynamic-wakes-2"]], "Sequential wake propagation": [[1899, "Sequential-wake-propagation"]], "Single row of turbines": [[1900, "Single-row-of-turbines"]], "Dynamic wakes 1": [[1901, "Dynamic-wakes-1"]], "Spatially homogeneous wake propagation": [[1901, "Spatially-homogeneous-wake-propagation"]], "Timeseries data": [[1902, "Timeseries-data"]], "Wind rose data": [[1903, "Wind-rose-data"]], "Yawed rotor wakes": [[1904, "Yawed-rotor-wakes"]], "Testing": [[1905, "testing"]], "Examples": [[1885, "examples"], [114, "examples"], [186, "examples"], [233, "examples"], [274, "examples"], [276, "examples"], [1125, "examples"], [1128, "examples"], [1129, "examples"], [1130, "examples"], [1138, "examples"], [1158, "examples"], [1270, "examples"], [1277, "examples"], [1307, "examples"], [1308, "examples"], [1343, "examples"], [1371, "examples"], [1378, "examples"], [1394, "examples"], [1398, "examples"], [1400, "examples"], [1668, "examples"], [1706, "examples"]], "Blockage modelling 1": [[1890, "Blockage-modelling-1"]], "Wind farm blockage": [[1890, "Wind-farm-blockage"]], "Attributes": [[0, "attributes"], [9, "attributes"], [16, "attributes"], [46, "attributes"], [53, "attributes"], [57, "attributes"], [62, "attributes"], [66, "attributes"], [71, "attributes"], [77, "attributes"], [83, "attributes"], [93, "attributes"], [302, "attributes"], [319, "attributes"], [330, "attributes"], [339, "attributes"], [349, "attributes"], [354, "attributes"], [362, "attributes"], [375, "attributes"], [387, "attributes"], [393, "attributes"], [409, "attributes"], [416, "attributes"], [438, "attributes"], [453, "attributes"], [461, "attributes"], [481, "attributes"], [489, "attributes"], [507, "attributes"], [513, "attributes"], [516, "attributes"], [522, "attributes"], [529, "attributes"], [537, "attributes"], [548, "attributes"], [561, "attributes"], [569, "attributes"], [579, "attributes"], [586, "attributes"], [593, "attributes"], [597, "attributes"], [602, "attributes"], [608, "attributes"], [614, "attributes"], [619, "attributes"], [626, "attributes"], [630, "attributes"], [635, "attributes"], [645, "attributes"], [657, "attributes"], [663, "attributes"], [669, "attributes"], [675, "attributes"], [681, "attributes"], [685, "attributes"], [689, "attributes"], [693, "attributes"], [697, "attributes"], [704, "attributes"], [708, "attributes"], [714, "attributes"], [719, "attributes"], [726, "attributes"], [733, "attributes"], [739, "attributes"], [749, "attributes"], [768, "attributes"], [774, "attributes"], [781, "attributes"], [787, "attributes"], [794, "attributes"], [800, "attributes"], [806, "attributes"], [813, "attributes"], [820, "attributes"], [843, "attributes"], [849, "attributes"], [856, "attributes"], [864, "attributes"], [868, "attributes"], [872, "attributes"], [876, "attributes"], [880, "attributes"], [885, "attributes"], [890, "attributes"], [895, "attributes"], [900, "attributes"], [905, "attributes"], [910, "attributes"], [919, "attributes"], [946, "attributes"], [952, "attributes"], [955, "attributes"], [965, "attributes"], [970, "attributes"], [978, "attributes"], [983, "attributes"], [987, "attributes"], [995, "attributes"], [1448, "attributes"], [1456, "attributes"], [1463, "attributes"], [1470, "attributes"], [1487, "attributes"], [1510, "attributes"], [1535, "attributes"], [1585, "attributes"], [1593, "attributes"], [1604, "attributes"], [1652, "attributes"], [1707, "attributes"], [1717, "attributes"], [1727, "attributes"], [1737, "attributes"], [1760, "attributes"], [1776, "attributes"], [1793, "attributes"]], "Public members": [[0, "public-members"], [9, "public-members"], [16, "public-members"], [35, "public-members"], [40, "public-members"], [46, "public-members"], [53, "public-members"], [57, "public-members"], [62, "public-members"], [66, "public-members"], [71, "public-members"], [75, "public-members"], [77, "public-members"], [83, "public-members"], [87, "public-members"], [92, "public-members"], [103, "public-members"], [228, "public-members"], [302, "public-members"], [317, "public-members"], [319, "public-members"], [327, "public-members"], [330, "public-members"], [339, "public-members"], [349, "public-members"], [354, "public-members"], [361, "public-members"], [362, "public-members"], [375, "public-members"], [383, "public-members"], [387, "public-members"], [393, "public-members"], [403, "public-members"], [409, "public-members"], [413, "public-members"], [416, "public-members"], [419, "public-members"], [423, "public-members"], [430, "public-members"], [435, "public-members"], [438, "public-members"], [443, "public-members"], [453, "public-members"], [461, "public-members"], [472, "public-members"], [474, "public-members"], [481, "public-members"], [489, "public-members"], [502, "public-members"], [506, "public-members"], [507, "public-members"], [513, "public-members"], [516, "public-members"], [522, "public-members"], [529, "public-members"], [537, "public-members"], [545, "public-members"], [548, "public-members"], [555, "public-members"], [561, "public-members"], [566, "public-members"], [569, "public-members"], [573, "public-members"], [579, "public-members"], [586, "public-members"], [593, "public-members"], [597, "public-members"], [602, "public-members"], [608, "public-members"], [614, "public-members"], [619, "public-members"], [626, "public-members"], [630, "public-members"], [635, "public-members"], [639, "public-members"], [642, "public-members"], [645, "public-members"], [650, "public-members"], [652, "public-members"], [654, "public-members"], [657, "public-members"], [663, "public-members"], [669, "public-members"], [675, "public-members"], [681, "public-members"], [685, "public-members"], [689, "public-members"], [693, "public-members"], [697, "public-members"], [701, "public-members"], [704, "public-members"], [708, "public-members"], [714, "public-members"], [719, "public-members"], [726, "public-members"], [733, "public-members"], [739, "public-members"], [746, "public-members"], [749, "public-members"], [756, "public-members"], [759, "public-members"], [761, "public-members"], [768, "public-members"], [774, "public-members"], [781, "public-members"], [787, "public-members"], [793, "public-members"], [794, "public-members"], [800, "public-members"], [806, "public-members"], [813, "public-members"], [820, "public-members"], [843, "public-members"], [849, "public-members"], [856, "public-members"], [864, "public-members"], [868, "public-members"], [872, "public-members"], [876, "public-members"], [880, "public-members"], [885, "public-members"], [890, "public-members"], [895, "public-members"], [900, "public-members"], [905, "public-members"], [910, "public-members"], [919, "public-members"], [939, "public-members"], [946, "public-members"], [952, "public-members"], [955, "public-members"], [959, "public-members"], [965, "public-members"], [970, "public-members"], [978, "public-members"], [981, "public-members"], [983, "public-members"], [987, "public-members"], [995, "public-members"], [1002, "public-members"], [1003, "public-members"], [1010, "public-members"], [1045, "public-members"], [1066, "public-members"], [1075, "public-members"], [1087, "public-members"], [1097, "public-members"], [1439, "public-members"], [1446, "public-members"], [1448, "public-members"], [1456, "public-members"], [1463, "public-members"], [1470, "public-members"], [1478, "public-members"], [1487, "public-members"], [1508, "public-members"], [1510, "public-members"], [1517, "public-members"], [1528, "public-members"], [1535, "public-members"], [1579, "public-members"], [1585, "public-members"], [1593, "public-members"], [1602, "public-members"], [1604, "public-members"], [1610, "public-members"], [1612, "public-members"], [1626, "public-members"], [1631, "public-members"], [1636, "public-members"], [1641, "public-members"], [1647, "public-members"], [1652, "public-members"], [1657, "public-members"], [1663, "public-members"], [1669, "public-members"], [1676, "public-members"], [1682, "public-members"], [1688, "public-members"], [1694, "public-members"], [1700, "public-members"], [1703, "public-members"], [1707, "public-members"], [1717, "public-members"], [1727, "public-members"], [1737, "public-members"], [1751, "public-members"], [1760, "public-members"], [1776, "public-members"], [1793, "public-members"], [1800, "public-members"], [1802, "public-members"]], "Parameters": [[1, "parameters"], [2, "parameters"], [3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [17, "parameters"], [20, "parameters"], [21, "parameters"], [27, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [55, "parameters"], [56, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [72, "parameters"], [73, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [97, "parameters"], [98, "parameters"], [101, "parameters"], [195, "parameters"], [303, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [318, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [326, "parameters"], [328, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [335, "parameters"], [338, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [374, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [384, "parameters"], [386, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [394, "parameters"], [395, "parameters"], [397, "parameters"], [398, "parameters"], [400, "parameters"], [401, "parameters"], [405, "parameters"], [406, "parameters"], [408, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [417, "parameters"], [418, "parameters"], [420, "parameters"], [422, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [436, "parameters"], [437, "parameters"], [439, "parameters"], [440, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [454, "parameters"], [455, "parameters"], [457, "parameters"], [458, "parameters"], [460, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [471, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [480, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [488, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [501, "parameters"], [505, "parameters"], [508, "parameters"], [510, "parameters"], [511, "parameters"], [515, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [530, "parameters"], [532, "parameters"], [533, "parameters"], [534, "parameters"], [535, "parameters"], [538, "parameters"], [540, "parameters"], [541, "parameters"], [542, "parameters"], [543, "parameters"], [546, "parameters"], [547, "parameters"], [549, "parameters"], [550, "parameters"], [551, "parameters"], [552, "parameters"], [553, "parameters"], [556, "parameters"], [557, "parameters"], [558, "parameters"], [559, "parameters"], [560, "parameters"], [562, "parameters"], [563, "parameters"], [564, "parameters"], [565, "parameters"], [567, "parameters"], [568, "parameters"], [570, "parameters"], [571, "parameters"], [572, "parameters"], [575, "parameters"], [576, "parameters"], [580, "parameters"], [583, "parameters"], [587, "parameters"], [590, "parameters"], [594, "parameters"], [595, "parameters"], [596, "parameters"], [598, "parameters"], [599, "parameters"], [600, "parameters"], [601, "parameters"], [603, "parameters"], [604, "parameters"], [605, "parameters"], [606, "parameters"], [609, "parameters"], [610, "parameters"], [611, "parameters"], [612, "parameters"], [615, "parameters"], [616, "parameters"], [617, "parameters"], [618, "parameters"], [620, "parameters"], [621, "parameters"], [622, "parameters"], [623, "parameters"], [624, "parameters"], [627, "parameters"], [628, "parameters"], [629, "parameters"], [631, "parameters"], [632, "parameters"], [633, "parameters"], [634, "parameters"], [636, "parameters"], [637, "parameters"], [638, "parameters"], [640, "parameters"], [641, "parameters"], [643, "parameters"], [644, "parameters"], [646, "parameters"], [648, "parameters"], [649, "parameters"], [651, "parameters"], [653, "parameters"], [655, "parameters"], [656, "parameters"], [658, "parameters"], [659, "parameters"], [660, "parameters"], [661, "parameters"], [662, "parameters"], [664, "parameters"], [665, "parameters"], [666, "parameters"], [667, "parameters"], [668, "parameters"], [670, "parameters"], [671, "parameters"], [672, "parameters"], [673, "parameters"], [674, "parameters"], [676, "parameters"], [677, "parameters"], [678, "parameters"], [679, "parameters"], [680, "parameters"], [682, "parameters"], [683, "parameters"], [686, "parameters"], [687, "parameters"], [690, "parameters"], [691, "parameters"], [694, "parameters"], [695, "parameters"], [698, "parameters"], [699, "parameters"], [702, "parameters"], [705, "parameters"], [706, "parameters"], [709, "parameters"], [710, "parameters"], [711, "parameters"], [712, "parameters"], [715, "parameters"], [716, "parameters"], [717, "parameters"], [718, "parameters"], [720, "parameters"], [721, "parameters"], [722, "parameters"], [723, "parameters"], [724, "parameters"], [725, "parameters"], [727, "parameters"], [729, "parameters"], [730, "parameters"], [731, "parameters"], [732, "parameters"], [734, "parameters"], [735, "parameters"], [736, "parameters"], [737, "parameters"], [738, "parameters"], [740, "parameters"], [741, "parameters"], [742, "parameters"], [743, "parameters"], [744, "parameters"], [747, "parameters"], [748, "parameters"], [750, "parameters"], [751, "parameters"], [752, "parameters"], [753, "parameters"], [754, "parameters"], [757, "parameters"], [758, "parameters"], [760, "parameters"], [761, "parameters"], [762, "parameters"], [763, "parameters"], [764, "parameters"], [765, "parameters"], [766, "parameters"], [769, "parameters"], [770, "parameters"], [771, "parameters"], [772, "parameters"], [775, "parameters"], [776, "parameters"], [777, "parameters"], [778, "parameters"], [779, "parameters"], [782, "parameters"], [783, "parameters"], [784, "parameters"], [785, "parameters"], [788, "parameters"], [789, "parameters"], [790, "parameters"], [791, "parameters"], [795, "parameters"], [797, "parameters"], [798, "parameters"], [799, "parameters"], [801, "parameters"], [803, "parameters"], [804, "parameters"], [805, "parameters"], [807, "parameters"], [809, "parameters"], [810, "parameters"], [811, "parameters"], [814, "parameters"], [816, "parameters"], [817, "parameters"], [818, "parameters"], [835, "parameters"], [836, "parameters"], [838, "parameters"], [839, "parameters"], [840, "parameters"], [844, "parameters"], [846, "parameters"], [847, "parameters"], [848, "parameters"], [850, "parameters"], [852, "parameters"], [853, "parameters"], [854, "parameters"], [857, "parameters"], [859, "parameters"], [860, "parameters"], [861, "parameters"], [862, "parameters"], [865, "parameters"], [866, "parameters"], [867, "parameters"], [869, "parameters"], [870, "parameters"], [871, "parameters"], [873, "parameters"], [874, "parameters"], [875, "parameters"], [877, "parameters"], [878, "parameters"], [879, "parameters"], [881, "parameters"], [882, "parameters"], [883, "parameters"], [884, "parameters"], [886, "parameters"], [887, "parameters"], [888, "parameters"], [889, "parameters"], [891, "parameters"], [892, "parameters"], [893, "parameters"], [894, "parameters"], [896, "parameters"], [897, "parameters"], [898, "parameters"], [899, "parameters"], [901, "parameters"], [902, "parameters"], [903, "parameters"], [904, "parameters"], [906, "parameters"], [907, "parameters"], [908, "parameters"], [911, "parameters"], [912, "parameters"], [915, "parameters"], [916, "parameters"], [917, "parameters"], [918, "parameters"], [920, "parameters"], [921, "parameters"], [922, "parameters"], [924, "parameters"], [925, "parameters"], [926, "parameters"], [927, "parameters"], [928, "parameters"], [930, "parameters"], [931, "parameters"], [932, "parameters"], [933, "parameters"], [934, "parameters"], [935, "parameters"], [936, "parameters"], [937, "parameters"], [938, "parameters"], [940, "parameters"], [941, "parameters"], [942, "parameters"], [943, "parameters"], [944, "parameters"], [945, "parameters"], [947, "parameters"], [948, "parameters"], [949, "parameters"], [951, "parameters"], [953, "parameters"], [954, "parameters"], [956, "parameters"], [957, "parameters"], [958, "parameters"], [960, "parameters"], [961, "parameters"], [962, "parameters"], [963, "parameters"], [964, "parameters"], [966, "parameters"], [968, "parameters"], [969, "parameters"], [971, "parameters"], [972, "parameters"], [973, "parameters"], [974, "parameters"], [975, "parameters"], [976, "parameters"], [977, "parameters"], [979, "parameters"], [980, "parameters"], [982, "parameters"], [984, "parameters"], [985, "parameters"], [986, "parameters"], [987, "parameters"], [988, "parameters"], [989, "parameters"], [990, "parameters"], [991, "parameters"], [992, "parameters"], [993, "parameters"], [994, "parameters"], [1000, "parameters"], [1001, "parameters"], [1003, "parameters"], [1005, "parameters"], [1010, "parameters"], [1016, "parameters"], [1036, "parameters"], [1037, "parameters"], [1038, "parameters"], [1040, "parameters"], [1045, "parameters"], [1048, "parameters"], [1060, "parameters"], [1061, "parameters"], [1062, "parameters"], [1066, "parameters"], [1067, "parameters"], [1073, "parameters"], [1107, "parameters"], [1109, "parameters"], [1117, "parameters"], [1118, "parameters"], [1119, "parameters"], [1120, "parameters"], [1122, "parameters"], [1123, "parameters"], [1125, "parameters"], [1126, "parameters"], [1127, "parameters"], [1128, "parameters"], [1129, "parameters"], [1130, "parameters"], [1131, "parameters"], [1132, "parameters"], [1133, "parameters"], [1134, "parameters"], [1135, "parameters"], [1136, "parameters"], [1137, "parameters"], [1138, "parameters"], [1142, "parameters"], [1144, "parameters"], [1146, "parameters"], [1148, "parameters"], [1149, "parameters"], [1152, "parameters"], [1153, "parameters"], [1154, "parameters"], [1157, "parameters"], [1158, "parameters"], [1159, "parameters"], [1160, "parameters"], [1161, "parameters"], [1162, "parameters"], [1184, "parameters"], [1204, "parameters"], [1222, "parameters"], [1223, "parameters"], [1232, "parameters"], [1240, "parameters"], [1242, "parameters"], [1246, "parameters"], [1254, "parameters"], [1256, "parameters"], [1258, "parameters"], [1261, "parameters"], [1262, "parameters"], [1263, "parameters"], [1264, "parameters"], [1266, "parameters"], [1268, "parameters"], [1269, "parameters"], [1270, "parameters"], [1275, "parameters"], [1277, "parameters"], [1278, "parameters"], [1279, "parameters"], [1280, "parameters"], [1281, "parameters"], [1288, "parameters"], [1289, "parameters"], [1290, "parameters"], [1291, "parameters"], [1294, "parameters"], [1295, "parameters"], [1296, "parameters"], [1298, "parameters"], [1299, "parameters"], [1300, "parameters"], [1302, "parameters"], [1306, "parameters"], [1307, "parameters"], [1308, "parameters"], [1309, "parameters"], [1310, "parameters"], [1312, "parameters"], [1313, "parameters"], [1314, "parameters"], [1315, "parameters"], [1316, "parameters"], [1317, "parameters"], [1318, "parameters"], [1319, "parameters"], [1320, "parameters"], [1321, "parameters"], [1324, "parameters"], [1325, "parameters"], [1326, "parameters"], [1327, "parameters"], [1328, "parameters"], [1329, "parameters"], [1331, "parameters"], [1332, "parameters"], [1333, "parameters"], [1334, "parameters"], [1335, "parameters"], [1337, "parameters"], [1338, "parameters"], [1340, "parameters"], [1341, "parameters"], [1342, "parameters"], [1343, "parameters"], [1345, "parameters"], [1346, "parameters"], [1347, "parameters"], [1348, "parameters"], [1350, "parameters"], [1351, "parameters"], [1352, "parameters"], [1355, "parameters"], [1356, "parameters"], [1360, "parameters"], [1361, "parameters"], [1365, "parameters"], [1366, "parameters"], [1367, "parameters"], [1368, "parameters"], [1369, "parameters"], [1370, "parameters"], [1371, "parameters"], [1372, "parameters"], [1373, "parameters"], [1374, "parameters"], [1375, "parameters"], [1376, "parameters"], [1377, "parameters"], [1378, "parameters"], [1379, "parameters"], [1380, "parameters"], [1381, "parameters"], [1382, "parameters"], [1383, "parameters"], [1386, "parameters"], [1387, "parameters"], [1388, "parameters"], [1389, "parameters"], [1391, "parameters"], [1392, "parameters"], [1393, "parameters"], [1395, "parameters"], [1396, "parameters"], [1398, "parameters"], [1400, "parameters"], [1401, "parameters"], [1402, "parameters"], [1403, "parameters"], [1404, "parameters"], [1405, "parameters"], [1408, "parameters"], [1409, "parameters"], [1413, "parameters"], [1414, "parameters"], [1415, "parameters"], [1416, "parameters"], [1418, "parameters"], [1419, "parameters"], [1422, "parameters"], [1423, "parameters"], [1424, "parameters"], [1425, "parameters"], [1426, "parameters"], [1427, "parameters"], [1428, "parameters"], [1429, "parameters"], [1430, "parameters"], [1431, "parameters"], [1432, "parameters"], [1433, "parameters"], [1434, "parameters"], [1435, "parameters"], [1436, "parameters"], [1437, "parameters"], [1438, "parameters"], [1440, "parameters"], [1444, "parameters"], [1445, "parameters"], [1447, "parameters"], [1449, "parameters"], [1450, "parameters"], [1454, "parameters"], [1455, "parameters"], [1457, "parameters"], [1458, "parameters"], [1461, "parameters"], [1462, "parameters"], [1464, "parameters"], [1465, "parameters"], [1468, "parameters"], [1469, "parameters"], [1471, "parameters"], [1472, "parameters"], [1476, "parameters"], [1477, "parameters"], [1479, "parameters"], [1480, "parameters"], [1484, "parameters"], [1485, "parameters"], [1486, "parameters"], [1488, "parameters"], [1490, "parameters"], [1491, "parameters"], [1492, "parameters"], [1494, "parameters"], [1495, "parameters"], [1496, "parameters"], [1497, "parameters"], [1502, "parameters"], [1503, "parameters"], [1509, "parameters"], [1511, "parameters"], [1512, "parameters"], [1513, "parameters"], [1514, "parameters"], [1518, "parameters"], [1519, "parameters"], [1520, "parameters"], [1521, "parameters"], [1529, "parameters"], [1530, "parameters"], [1537, "parameters"], [1538, "parameters"], [1539, "parameters"], [1540, "parameters"], [1542, "parameters"], [1543, "parameters"], [1544, "parameters"], [1545, "parameters"], [1546, "parameters"], [1549, "parameters"], [1550, "parameters"], [1552, "parameters"], [1553, "parameters"], [1554, "parameters"], [1557, "parameters"], [1570, "parameters"], [1571, "parameters"], [1572, "parameters"], [1574, "parameters"], [1575, "parameters"], [1576, "parameters"], [1580, "parameters"], [1581, "parameters"], [1582, "parameters"], [1583, "parameters"], [1584, "parameters"], [1586, "parameters"], [1587, "parameters"], [1588, "parameters"], [1589, "parameters"], [1590, "parameters"], [1592, "parameters"], [1594, "parameters"], [1595, "parameters"], [1596, "parameters"], [1597, "parameters"], [1598, "parameters"], [1602, "parameters"], [1603, "parameters"], [1605, "parameters"], [1606, "parameters"], [1607, "parameters"], [1610, "parameters"], [1611, "parameters"], [1613, "parameters"], [1614, "parameters"], [1617, "parameters"], [1622, "parameters"], [1623, "parameters"], [1627, "parameters"], [1628, "parameters"], [1629, "parameters"], [1632, "parameters"], [1633, "parameters"], [1634, "parameters"], [1637, "parameters"], [1638, "parameters"], [1639, "parameters"], [1642, "parameters"], [1643, "parameters"], [1644, "parameters"], [1645, "parameters"], [1648, "parameters"], [1649, "parameters"], [1650, "parameters"], [1653, "parameters"], [1654, "parameters"], [1655, "parameters"], [1658, "parameters"], [1659, "parameters"], [1660, "parameters"], [1661, "parameters"], [1664, "parameters"], [1665, "parameters"], [1666, "parameters"], [1668, "parameters"], [1670, "parameters"], [1671, "parameters"], [1672, "parameters"], [1673, "parameters"], [1677, "parameters"], [1678, "parameters"], [1679, "parameters"], [1683, "parameters"], [1684, "parameters"], [1685, "parameters"], [1689, "parameters"], [1690, "parameters"], [1691, "parameters"], [1695, "parameters"], [1696, "parameters"], [1697, "parameters"], [1701, "parameters"], [1704, "parameters"], [1706, "parameters"], [1708, "parameters"], [1709, "parameters"], [1710, "parameters"], [1711, "parameters"], [1713, "parameters"], [1718, "parameters"], [1719, "parameters"], [1720, "parameters"], [1721, "parameters"], [1723, "parameters"], [1728, "parameters"], [1729, "parameters"], [1730, "parameters"], [1731, "parameters"], [1733, "parameters"], [1738, "parameters"], [1739, "parameters"], [1740, "parameters"], [1741, "parameters"], [1744, "parameters"], [1752, "parameters"], [1754, "parameters"], [1757, "parameters"], [1758, "parameters"], [1761, "parameters"], [1762, "parameters"], [1765, "parameters"], [1770, "parameters"], [1771, "parameters"], [1772, "parameters"], [1773, "parameters"], [1782, "parameters"], [1783, "parameters"], [1785, "parameters"], [1788, "parameters"], [1789, "parameters"], [1791, "parameters"], [1792, "parameters"], [1794, "parameters"], [1799, "parameters"], [1801, "parameters"], [1807, "parameters"], [1808, "parameters"], [1809, "parameters"], [1810, "parameters"], [1811, "parameters"], [1812, "parameters"], [1813, "parameters"], [1814, "parameters"], [1815, "parameters"], [1816, "parameters"], [1817, "parameters"]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [15, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [36, "returns"], [38, "returns"], [39, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [56, "returns"], [59, "returns"], [61, "returns"], [64, "returns"], [65, "returns"], [69, "returns"], [70, "returns"], [73, "returns"], [74, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [85, "returns"], [86, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [114, "returns"], [195, "returns"], [233, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [313, "returns"], [318, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [328, "returns"], [329, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [341, "returns"], [345, "returns"], [346, "returns"], [348, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [357, "returns"], [359, "returns"], [360, "returns"], [367, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [381, "returns"], [382, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [395, "returns"], [396, "returns"], [398, "returns"], [399, "returns"], [401, "returns"], [402, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [414, "returns"], [420, "returns"], [421, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [436, "returns"], [437, "returns"], [441, "returns"], [442, "returns"], [445, "returns"], [446, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [464, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [470, "returns"], [471, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [483, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [492, "returns"], [494, "returns"], [496, "returns"], [497, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [504, "returns"], [505, "returns"], [510, "returns"], [511, "returns"], [512, "returns"], [520, "returns"], [527, "returns"], [528, "returns"], [535, "returns"], [536, "returns"], [543, "returns"], [544, "returns"], [553, "returns"], [554, "returns"], [559, "returns"], [560, "returns"], [563, "returns"], [564, "returns"], [565, "returns"], [567, "returns"], [568, "returns"], [571, "returns"], [572, "returns"], [574, "returns"], [576, "returns"], [577, "returns"], [578, "returns"], [582, "returns"], [584, "returns"], [585, "returns"], [589, "returns"], [591, "returns"], [592, "returns"], [595, "returns"], [596, "returns"], [599, "returns"], [600, "returns"], [601, "returns"], [604, "returns"], [606, "returns"], [610, "returns"], [612, "returns"], [613, "returns"], [616, "returns"], [618, "returns"], [622, "returns"], [623, "returns"], [624, "returns"], [628, "returns"], [629, "returns"], [632, "returns"], [634, "returns"], [637, "returns"], [638, "returns"], [640, "returns"], [641, "returns"], [643, "returns"], [644, "returns"], [648, "returns"], [649, "returns"], [655, "returns"], [656, "returns"], [659, "returns"], [661, "returns"], [662, "returns"], [665, "returns"], [667, "returns"], [668, "returns"], [671, "returns"], [673, "returns"], [674, "returns"], [677, "returns"], [679, "returns"], [680, "returns"], [683, "returns"], [684, "returns"], [687, "returns"], [688, "returns"], [691, "returns"], [692, "returns"], [695, "returns"], [696, "returns"], [699, "returns"], [700, "returns"], [702, "returns"], [703, "returns"], [706, "returns"], [707, "returns"], [710, "returns"], [711, "returns"], [712, "returns"], [713, "returns"], [716, "returns"], [717, "returns"], [718, "returns"], [721, "returns"], [722, "returns"], [723, "returns"], [729, "returns"], [730, "returns"], [731, "returns"], [732, "returns"], [735, "returns"], [736, "returns"], [737, "returns"], [741, "returns"], [742, "returns"], [743, "returns"], [745, "returns"], [747, "returns"], [748, "returns"], [751, "returns"], [755, "returns"], [757, "returns"], [758, "returns"], [763, "returns"], [764, "returns"], [765, "returns"], [767, "returns"], [773, "returns"], [780, "returns"], [786, "returns"], [792, "returns"], [797, "returns"], [798, "returns"], [803, "returns"], [804, "returns"], [809, "returns"], [812, "returns"], [816, "returns"], [819, "returns"], [838, "returns"], [839, "returns"], [841, "returns"], [842, "returns"], [846, "returns"], [847, "returns"], [852, "returns"], [855, "returns"], [859, "returns"], [863, "returns"], [866, "returns"], [867, "returns"], [870, "returns"], [871, "returns"], [874, "returns"], [875, "returns"], [878, "returns"], [879, "returns"], [882, "returns"], [883, "returns"], [884, "returns"], [887, "returns"], [888, "returns"], [889, "returns"], [892, "returns"], [893, "returns"], [894, "returns"], [897, "returns"], [898, "returns"], [899, "returns"], [902, "returns"], [903, "returns"], [904, "returns"], [908, "returns"], [909, "returns"], [912, "returns"], [913, "returns"], [914, "returns"], [923, "returns"], [924, "returns"], [925, "returns"], [926, "returns"], [927, "returns"], [928, "returns"], [930, "returns"], [931, "returns"], [932, "returns"], [933, "returns"], [935, "returns"], [936, "returns"], [937, "returns"], [938, "returns"], [943, "returns"], [944, "returns"], [945, "returns"], [948, "returns"], [954, "returns"], [961, "returns"], [962, "returns"], [963, "returns"], [964, "returns"], [972, "returns"], [973, "returns"], [974, "returns"], [975, "returns"], [976, "returns"], [977, "returns"], [980, "returns"], [985, "returns"], [993, "returns"], [994, "returns"], [1000, "returns"], [1002, "returns"], [1002, "id1"], [1002, "id2"], [1002, "id3"], [1002, "id4"], [1002, "id5"], [1002, "id6"], [1002, "id7"], [1036, "returns"], [1037, "returns"], [1038, "returns"], [1040, "returns"], [1060, "returns"], [1061, "returns"], [1062, "returns"], [1073, "returns"], [1107, "returns"], [1109, "returns"], [1117, "returns"], [1118, "returns"], [1120, "returns"], [1125, "returns"], [1126, "returns"], [1127, "returns"], [1128, "returns"], [1129, "returns"], [1130, "returns"], [1132, "returns"], [1133, "returns"], [1134, "returns"], [1136, "returns"], [1137, "returns"], [1138, "returns"], [1144, "returns"], [1146, "returns"], [1152, "returns"], [1157, "returns"], [1158, "returns"], [1159, "returns"], [1160, "returns"], [1161, "returns"], [1162, "returns"], [1178, "returns"], [1204, "returns"], [1208, "returns"], [1209, "returns"], [1210, "returns"], [1211, "returns"], [1215, "returns"], [1222, "returns"], [1223, "returns"], [1230, "returns"], [1231, "returns"], [1236, "returns"], [1240, "returns"], [1242, "returns"], [1244, "returns"], [1245, "returns"], [1250, "returns"], [1254, "returns"], [1256, "returns"], [1261, "returns"], [1262, "returns"], [1263, "returns"], [1264, "returns"], [1266, "returns"], [1268, "returns"], [1269, "returns"], [1270, "returns"], [1278, "returns"], [1279, "returns"], [1280, "returns"], [1281, "returns"], [1288, "returns"], [1289, "returns"], [1290, "returns"], [1291, "returns"], [1294, "returns"], [1295, "returns"], [1296, "returns"], [1298, "returns"], [1299, "returns"], [1306, "returns"], [1307, "returns"], [1308, "returns"], [1309, "returns"], [1310, "returns"], [1347, "returns"], [1361, "returns"], [1365, "returns"], [1371, "returns"], [1374, "returns"], [1378, "returns"], [1381, "returns"], [1386, "returns"], [1387, "returns"], [1388, "returns"], [1389, "returns"], [1392, "returns"], [1393, "returns"], [1395, "returns"], [1396, "returns"], [1398, "returns"], [1402, "returns"], [1403, "returns"], [1405, "returns"], [1406, "returns"], [1407, "returns"], [1413, "returns"], [1414, "returns"], [1415, "returns"], [1418, "returns"], [1422, "returns"], [1423, "returns"], [1424, "returns"], [1425, "returns"], [1426, "returns"], [1427, "returns"], [1428, "returns"], [1429, "returns"], [1430, "returns"], [1431, "returns"], [1432, "returns"], [1433, "returns"], [1434, "returns"], [1435, "returns"], [1436, "returns"], [1437, "returns"], [1438, "returns"], [1441, "returns"], [1442, "returns"], [1443, "returns"], [1444, "returns"], [1445, "returns"], [1451, "returns"], [1452, "returns"], [1453, "returns"], [1454, "returns"], [1455, "returns"], [1459, "returns"], [1460, "returns"], [1461, "returns"], [1462, "returns"], [1466, "returns"], [1467, "returns"], [1468, "returns"], [1469, "returns"], [1473, "returns"], [1474, "returns"], [1475, "returns"], [1476, "returns"], [1477, "returns"], [1481, "returns"], [1482, "returns"], [1483, "returns"], [1484, "returns"], [1485, "returns"], [1486, "returns"], [1489, "returns"], [1490, "returns"], [1491, "returns"], [1492, "returns"], [1493, "returns"], [1495, "returns"], [1496, "returns"], [1498, "returns"], [1499, "returns"], [1500, "returns"], [1501, "returns"], [1504, "returns"], [1505, "returns"], [1506, "returns"], [1507, "returns"], [1512, "returns"], [1513, "returns"], [1515, "returns"], [1516, "returns"], [1520, "returns"], [1521, "returns"], [1522, "returns"], [1523, "returns"], [1524, "returns"], [1526, "returns"], [1527, "returns"], [1531, "returns"], [1532, "returns"], [1534, "returns"], [1541, "returns"], [1542, "returns"], [1543, "returns"], [1544, "returns"], [1545, "returns"], [1546, "returns"], [1547, "returns"], [1548, "returns"], [1549, "returns"], [1550, "returns"], [1551, "returns"], [1552, "returns"], [1553, "returns"], [1554, "returns"], [1555, "returns"], [1556, "returns"], [1558, "returns"], [1559, "returns"], [1560, "returns"], [1561, "returns"], [1562, "returns"], [1563, "returns"], [1564, "returns"], [1565, "returns"], [1566, "returns"], [1567, "returns"], [1568, "returns"], [1569, "returns"], [1570, "returns"], [1571, "returns"], [1572, "returns"], [1573, "returns"], [1574, "returns"], [1577, "returns"], [1578, "returns"], [1581, "returns"], [1582, "returns"], [1587, "returns"], [1589, "returns"], [1590, "returns"], [1591, "returns"], [1592, "returns"], [1595, "returns"], [1596, "returns"], [1597, "returns"], [1599, "returns"], [1600, "returns"], [1601, "returns"], [1606, "returns"], [1607, "returns"], [1608, "returns"], [1609, "returns"], [1615, "returns"], [1616, "returns"], [1618, "returns"], [1619, "returns"], [1620, "returns"], [1621, "returns"], [1622, "returns"], [1623, "returns"], [1624, "returns"], [1625, "returns"], [1628, "returns"], [1629, "returns"], [1630, "returns"], [1633, "returns"], [1634, "returns"], [1635, "returns"], [1638, "returns"], [1639, "returns"], [1640, "returns"], [1643, "returns"], [1644, "returns"], [1646, "returns"], [1649, "returns"], [1650, "returns"], [1651, "returns"], [1655, "returns"], [1656, "returns"], [1659, "returns"], [1660, "returns"], [1662, "returns"], [1665, "returns"], [1666, "returns"], [1667, "returns"], [1668, "returns"], [1671, "returns"], [1672, "returns"], [1674, "returns"], [1675, "returns"], [1678, "returns"], [1679, "returns"], [1680, "returns"], [1681, "returns"], [1684, "returns"], [1685, "returns"], [1686, "returns"], [1687, "returns"], [1690, "returns"], [1691, "returns"], [1692, "returns"], [1693, "returns"], [1696, "returns"], [1697, "returns"], [1698, "returns"], [1699, "returns"], [1702, "returns"], [1705, "returns"], [1706, "returns"], [1709, "returns"], [1710, "returns"], [1711, "returns"], [1712, "returns"], [1714, "returns"], [1715, "returns"], [1716, "returns"], [1719, "returns"], [1720, "returns"], [1721, "returns"], [1722, "returns"], [1724, "returns"], [1725, "returns"], [1726, "returns"], [1729, "returns"], [1730, "returns"], [1731, "returns"], [1732, "returns"], [1734, "returns"], [1735, "returns"], [1736, "returns"], [1739, "returns"], [1740, "returns"], [1741, "returns"], [1742, "returns"], [1743, "returns"], [1745, "returns"], [1746, "returns"], [1747, "returns"], [1748, "returns"], [1749, "returns"], [1750, "returns"], [1752, "returns"], [1753, "returns"], [1755, "returns"], [1756, "returns"], [1757, "returns"], [1758, "returns"], [1759, "returns"], [1762, "returns"], [1763, "returns"], [1764, "returns"], [1766, "returns"], [1767, "returns"], [1768, "returns"], [1769, "returns"], [1770, "returns"], [1771, "returns"], [1774, "returns"], [1775, "returns"], [1783, "returns"], [1784, "returns"], [1786, "returns"], [1787, "returns"], [1788, "returns"], [1789, "returns"], [1790, "returns"], [1791, "returns"], [1792, "returns"], [1799, "returns"], [1801, "returns"], [1806, "returns"], [1807, "returns"], [1809, "returns"], [1810, "returns"], [1811, "returns"], [1812, "returns"], [1813, "returns"], [1814, "returns"], [1815, "returns"], [1816, "returns"]], "Notes": [[114, "notes"], [233, "notes"], [739, "notes"], [774, "notes"], [781, "notes"], [787, "notes"], [793, "notes"], [794, "notes"], [800, "notes"], [806, "notes"], [813, "notes"], [820, "notes"], [849, "notes"], [1107, "notes"], [1119, "notes"], [1120, "notes"], [1123, "notes"], [1134, "notes"], [1152, "notes"], [1153, "notes"], [1154, "notes"], [1156, "notes"], [1158, "notes"], [1159, "notes"], [1207, "notes"], [1230, "notes"], [1231, "notes"], [1236, "notes"], [1244, "notes"], [1245, "notes"], [1250, "notes"], [1258, "notes"], [1262, "notes"], [1263, "notes"], [1266, "notes"], [1280, "notes"], [1281, "notes"], [1288, "notes"], [1290, "notes"], [1294, "notes"], [1295, "notes"], [1296, "notes"], [1298, "notes"], [1299, "notes"], [1306, "notes"], [1312, "notes"], [1328, "notes"], [1371, "notes"], [1373, "notes"], [1375, "notes"], [1378, "notes"], [1380, "notes"], [1382, "notes"], [1386, "notes"], [1391, "notes"], [1392, "notes"], [1403, "notes"], [1406, "notes"], [1407, "notes"], [1418, "notes"], [1668, "notes"], [1706, "notes"]], "See Also": [[114, "see-also"], [233, "see-also"], [1109, "see-also"], [1117, "see-also"], [1118, "see-also"], [1119, "see-also"], [1125, "see-also"], [1126, "see-also"], [1127, "see-also"], [1128, "see-also"], [1129, "see-also"], [1130, "see-also"], [1134, "see-also"], [1136, "see-also"], [1152, "see-also"], [1160, "see-also"], [1161, "see-also"], [1164, "see-also"], [1168, "see-also"], [1171, "see-also"], [1178, "see-also"], [1179, "see-also"], [1184, "see-also"], [1203, "see-also"], [1222, "see-also"], [1228, "see-also"], [1233, "see-also"], [1236, "see-also"], [1247, "see-also"], [1250, "see-also"], [1261, "see-also"], [1262, "see-also"], [1263, "see-also"], [1264, "see-also"], [1266, "see-also"], [1271, "see-also"], [1272, "see-also"], [1279, "see-also"], [1281, "see-also"], [1287, "see-also"], [1288, "see-also"], [1290, "see-also"], [1291, "see-also"], [1292, "see-also"], [1293, "see-also"], [1295, "see-also"], [1296, "see-also"], [1298, "see-also"], [1299, "see-also"], [1304, "see-also"], [1306, "see-also"], [1312, "see-also"], [1315, "see-also"], [1317, "see-also"], [1324, "see-also"], [1325, "see-also"], [1337, "see-also"], [1342, "see-also"], [1343, "see-also"], [1347, "see-also"], [1349, "see-also"], [1361, "see-also"], [1369, "see-also"], [1370, "see-also"], [1371, "see-also"], [1376, "see-also"], [1377, "see-also"], [1378, "see-also"], [1386, "see-also"], [1415, "see-also"]], "Yields": [[934, "yields"], [940, "yields"], [941, "yields"], [942, "yields"], [986, "yields"]], "Classes": [[1002, "classes"]], "Note": [[1022, null], [1085, null], [1136, null], [1164, null], [1184, null], [1232, null], [1246, null], [1295, null], [1393, null], [1402, null], [1402, null], [1403, null], [1403, null]], "Other Parameters": [[1107, "other-parameters"], [1117, "other-parameters"], [1125, "other-parameters"], [1126, "other-parameters"], [1128, "other-parameters"], [1129, "other-parameters"], [1130, "other-parameters"], [1131, "other-parameters"], [1133, "other-parameters"], [1134, "other-parameters"], [1135, "other-parameters"], [1136, "other-parameters"], [1137, "other-parameters"], [1144, "other-parameters"], [1148, "other-parameters"], [1149, "other-parameters"], [1152, "other-parameters"], [1157, "other-parameters"], [1159, "other-parameters"], [1160, "other-parameters"], [1161, "other-parameters"], [1261, "other-parameters"], [1262, "other-parameters"], [1263, "other-parameters"], [1264, "other-parameters"], [1266, "other-parameters"], [1275, "other-parameters"], [1277, "other-parameters"], [1279, "other-parameters"], [1281, "other-parameters"], [1288, "other-parameters"], [1289, "other-parameters"], [1290, "other-parameters"], [1291, "other-parameters"], [1295, "other-parameters"], [1296, "other-parameters"], [1298, "other-parameters"], [1299, "other-parameters"], [1306, "other-parameters"], [1307, "other-parameters"], [1308, "other-parameters"], [1347, "other-parameters"], [1361, "other-parameters"], [1365, "other-parameters"], [1370, "other-parameters"], [1377, "other-parameters"], [1387, "other-parameters"], [1389, "other-parameters"], [1396, "other-parameters"], [1398, "other-parameters"], [1400, "other-parameters"], [1402, "other-parameters"], [1403, "other-parameters"], [1415, "other-parameters"], [1418, "other-parameters"]], "References": [[1144, "references"], [1152, "references"], [1298, "references"]], "Discouraged": [[1229, null], [1243, null], [1296, null], [1374, null], [1381, null]], "Warnings": [[1268, "warnings"], [1269, "warnings"], [1270, "warnings"], [1307, "warnings"], [1308, "warnings"]], "Hint": [[1288, null], [1290, null]], "Warning": [[1289, null], [1339, null], [1347, null], [1361, null], [1374, null], [1381, null]], "See also": [[1392, null]], "Raises": [[1401, "raises"], [1668, "raises"], [1706, "raises"]], "Blockage modelling 2": [[1889, "Blockage-modelling-2"]], "Induction model comparison": [[1889, "Induction-model-comparison"]]}, "indexentries": {"pep 585": [[114, "index-0"], [233, "index-0"]], "python enhancement proposals": [[114, "index-0"], [233, "index-0"]]}, "docurls": ["_foxes/algorithms/Downwind.html", "_foxes/algorithms/Downwind.__init__.html", "_foxes/algorithms/Downwind.all_models.html", "_foxes/algorithms/Downwind.calc_farm.html", "_foxes/algorithms/Downwind.calc_points.html", "_foxes/algorithms/Downwind.finalize.html", "_foxes/algorithms/Downwind.get_model.html", "_foxes/algorithms/Downwind.init_states.html", "_foxes/algorithms/Downwind.initialize.html", "_foxes/algorithms/Iterative.html", "_foxes/algorithms/Iterative.__init__.html", "_foxes/algorithms/Iterative.calc_farm.html", "_foxes/algorithms/Iterative.get_model.html", "_foxes/algorithms/Iterative.iterations.html", "_foxes/algorithms/Iterative.set_urelax.html", "_foxes/algorithms/Iterative.urelax.html", "_foxes/algorithms/Sequential.html", "_foxes/algorithms/Sequential.__init__.html", "_foxes/algorithms/Sequential.__iter__.html", "_foxes/algorithms/Sequential.__next__.html", "_foxes/algorithms/Sequential.calc_farm.html", "_foxes/algorithms/Sequential.calc_points.html", "_foxes/algorithms/Sequential.counter.html", "_foxes/algorithms/Sequential.cur_farm_results.html", "_foxes/algorithms/Sequential.cur_point_results.html", "_foxes/algorithms/Sequential.farm_results.html", "_foxes/algorithms/Sequential.fdata.html", "_foxes/algorithms/Sequential.get_model.html", "_foxes/algorithms/Sequential.index.html", "_foxes/algorithms/Sequential.iterating.html", "_foxes/algorithms/Sequential.mdata.html", "_foxes/algorithms/Sequential.pdata.html", "_foxes/algorithms/Sequential.point_results.html", "_foxes/algorithms/Sequential.size.html", "_foxes/algorithms/Sequential.weight.html", "_foxes/algorithms/downwind/models/CalcOrder.html", "_foxes/algorithms/downwind/models/CalcOrder.calculate.html", "_foxes/algorithms/downwind/models/CalcOrder.initialize.html", "_foxes/algorithms/downwind/models/CalcOrder.output_farm_vars.html", "_foxes/algorithms/downwind/models/CalcOrder.sub_models.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.contribute_to_wake_deltas.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.output_point_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.initialize.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.output_point_vars.html", "_foxes/algorithms/iterative/ConvCrit.html", "_foxes/algorithms/iterative/ConvCrit.__init__.html", "_foxes/algorithms/iterative/ConvCrit.check_converged.html", "_foxes/algorithms/iterative/ConvCrit.get_deltas.html", "_foxes/algorithms/iterative/ConvCritList.html", "_foxes/algorithms/iterative/ConvCritList.__init__.html", "_foxes/algorithms/iterative/ConvCritList.add_crit.html", "_foxes/algorithms/iterative/ConvCritList.check_converged.html", "_foxes/algorithms/iterative/ConvCritList.get_deltas.html", "_foxes/algorithms/iterative/ConvVarDelta.html", "_foxes/algorithms/iterative/ConvVarDelta.__init__.html", "_foxes/algorithms/iterative/ConvVarDelta.check_converged.html", "_foxes/algorithms/iterative/ConvVarDelta.get_deltas.html", "_foxes/algorithms/iterative/DefaultConv.html", "_foxes/algorithms/iterative/DefaultConv.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/iterative/models/URelax.html", "_foxes/algorithms/iterative/models/URelax.__init__.html", "_foxes/algorithms/iterative/models/URelax.calculate.html", "_foxes/algorithms/iterative/models/URelax.output_farm_vars.html", "_foxes/algorithms/sequential/SequentialPlugin.html", "_foxes/algorithms/sequential/SequentialPlugin.__init__.html", "_foxes/algorithms/sequential/SequentialPlugin.finalize.html", "_foxes/algorithms/sequential/SequentialPlugin.initialize.html", "_foxes/algorithms/sequential/SequentialPlugin.update.html", "_foxes/algorithms/sequential/models/SeqState.html", "_foxes/algorithms/sequential/models/SeqState.__init__.html", "_foxes/algorithms/sequential/models/SeqState.calculate.html", "_foxes/algorithms/sequential/models/SeqState.counter.html", "_foxes/algorithms/sequential/models/SeqState.index.html", "_foxes/algorithms/sequential/models/SeqState.initialize.html", "_foxes/algorithms/sequential/models/SeqState.output_point_vars.html", "_foxes/algorithms/sequential/models/SeqState.size.html", "_foxes/algorithms/sequential/models/SeqState.sub_models.html", "_foxes/algorithms/sequential/models/SeqState.weights.html", "_foxes/constants/AMB_RPOINT_RESULTS.html", "_foxes/constants/DTYPE.html", "_foxes/constants/DTYPE.T.html", "_foxes/constants/DTYPE.__abs__.html", "_foxes/constants/DTYPE.__add__.html", "_foxes/constants/DTYPE.__and__.html", "_foxes/constants/DTYPE.__array__.html", "_foxes/constants/DTYPE.__array_interface__.html", "_foxes/constants/DTYPE.__array_priority__.html", "_foxes/constants/DTYPE.__array_struct__.html", "_foxes/constants/DTYPE.__array_wrap__.html", "_foxes/constants/DTYPE.__bool__.html", "_foxes/constants/DTYPE.__class_getitem__.html", "_foxes/constants/DTYPE.__divmod__.html", "_foxes/constants/DTYPE.__eq__.html", "_foxes/constants/DTYPE.__float__.html", "_foxes/constants/DTYPE.__floordiv__.html", "_foxes/constants/DTYPE.__format__.html", "_foxes/constants/DTYPE.__ge__.html", "_foxes/constants/DTYPE.__getitem__.html", "_foxes/constants/DTYPE.__gt__.html", "_foxes/constants/DTYPE.__hash__.html", "_foxes/constants/DTYPE.__int__.html", "_foxes/constants/DTYPE.__invert__.html", "_foxes/constants/DTYPE.__le__.html", "_foxes/constants/DTYPE.__lshift__.html", "_foxes/constants/DTYPE.__lt__.html", "_foxes/constants/DTYPE.__mod__.html", "_foxes/constants/DTYPE.__mul__.html", "_foxes/constants/DTYPE.__ne__.html", "_foxes/constants/DTYPE.__neg__.html", "_foxes/constants/DTYPE.__new__.html", "_foxes/constants/DTYPE.__or__.html", "_foxes/constants/DTYPE.__pos__.html", "_foxes/constants/DTYPE.__pow__.html", "_foxes/constants/DTYPE.__radd__.html", "_foxes/constants/DTYPE.__rand__.html", "_foxes/constants/DTYPE.__rdivmod__.html", "_foxes/constants/DTYPE.__reduce__.html", "_foxes/constants/DTYPE.__repr__.html", "_foxes/constants/DTYPE.__rfloordiv__.html", "_foxes/constants/DTYPE.__rlshift__.html", "_foxes/constants/DTYPE.__rmod__.html", "_foxes/constants/DTYPE.__rmul__.html", "_foxes/constants/DTYPE.__ror__.html", "_foxes/constants/DTYPE.__rpow__.html", "_foxes/constants/DTYPE.__rrshift__.html", "_foxes/constants/DTYPE.__rshift__.html", "_foxes/constants/DTYPE.__rsub__.html", "_foxes/constants/DTYPE.__rtruediv__.html", "_foxes/constants/DTYPE.__rxor__.html", "_foxes/constants/DTYPE.__sizeof__.html", "_foxes/constants/DTYPE.__str__.html", "_foxes/constants/DTYPE.__sub__.html", "_foxes/constants/DTYPE.__truediv__.html", "_foxes/constants/DTYPE.__xor__.html", "_foxes/constants/DTYPE.all.html", "_foxes/constants/DTYPE.any.html", "_foxes/constants/DTYPE.argmax.html", "_foxes/constants/DTYPE.argmin.html", "_foxes/constants/DTYPE.argsort.html", "_foxes/constants/DTYPE.as_integer_ratio.html", "_foxes/constants/DTYPE.astype.html", "_foxes/constants/DTYPE.base.html", "_foxes/constants/DTYPE.byteswap.html", "_foxes/constants/DTYPE.choose.html", "_foxes/constants/DTYPE.clip.html", "_foxes/constants/DTYPE.compress.html", "_foxes/constants/DTYPE.conj.html", "_foxes/constants/DTYPE.conjugate.html", "_foxes/constants/DTYPE.copy.html", "_foxes/constants/DTYPE.cumprod.html", "_foxes/constants/DTYPE.cumsum.html", "_foxes/constants/DTYPE.data.html", "_foxes/constants/DTYPE.diagonal.html", "_foxes/constants/DTYPE.dtype.html", "_foxes/constants/DTYPE.dump.html", "_foxes/constants/DTYPE.dumps.html", "_foxes/constants/DTYPE.fill.html", "_foxes/constants/DTYPE.flags.html", "_foxes/constants/DTYPE.flat.html", "_foxes/constants/DTYPE.flatten.html", "_foxes/constants/DTYPE.getfield.html", "_foxes/constants/DTYPE.imag.html", "_foxes/constants/DTYPE.is_integer.html", "_foxes/constants/DTYPE.item.html", "_foxes/constants/DTYPE.itemset.html", "_foxes/constants/DTYPE.itemsize.html", "_foxes/constants/DTYPE.max.html", "_foxes/constants/DTYPE.mean.html", "_foxes/constants/DTYPE.min.html", "_foxes/constants/DTYPE.nbytes.html", "_foxes/constants/DTYPE.ndim.html", "_foxes/constants/DTYPE.newbyteorder.html", "_foxes/constants/DTYPE.nonzero.html", "_foxes/constants/DTYPE.prod.html", "_foxes/constants/DTYPE.ptp.html", "_foxes/constants/DTYPE.put.html", "_foxes/constants/DTYPE.ravel.html", "_foxes/constants/DTYPE.real.html", "_foxes/constants/DTYPE.repeat.html", "_foxes/constants/DTYPE.reshape.html", "_foxes/constants/DTYPE.resize.html", "_foxes/constants/DTYPE.round.html", "_foxes/constants/DTYPE.searchsorted.html", "_foxes/constants/DTYPE.setfield.html", "_foxes/constants/DTYPE.setflags.html", "_foxes/constants/DTYPE.shape.html", "_foxes/constants/DTYPE.size.html", "_foxes/constants/DTYPE.sort.html", "_foxes/constants/DTYPE.squeeze.html", "_foxes/constants/DTYPE.std.html", "_foxes/constants/DTYPE.strides.html", "_foxes/constants/DTYPE.sum.html", "_foxes/constants/DTYPE.swapaxes.html", "_foxes/constants/DTYPE.take.html", "_foxes/constants/DTYPE.tobytes.html", "_foxes/constants/DTYPE.tofile.html", "_foxes/constants/DTYPE.tolist.html", "_foxes/constants/DTYPE.tostring.html", "_foxes/constants/DTYPE.trace.html", "_foxes/constants/DTYPE.transpose.html", "_foxes/constants/DTYPE.var.html", "_foxes/constants/DTYPE.view.html", "_foxes/constants/FARM.html", "_foxes/constants/GW.html", "_foxes/constants/ITYPE.html", "_foxes/constants/ITYPE.__abs__.html", "_foxes/constants/ITYPE.__add__.html", "_foxes/constants/ITYPE.__and__.html", "_foxes/constants/ITYPE.__bool__.html", "_foxes/constants/ITYPE.__class_getitem__.html", "_foxes/constants/ITYPE.__divmod__.html", "_foxes/constants/ITYPE.__eq__.html", "_foxes/constants/ITYPE.__float__.html", "_foxes/constants/ITYPE.__floordiv__.html", "_foxes/constants/ITYPE.__ge__.html", "_foxes/constants/ITYPE.__gt__.html", "_foxes/constants/ITYPE.__hash__.html", "_foxes/constants/ITYPE.__index__.html", "_foxes/constants/ITYPE.__int__.html", "_foxes/constants/ITYPE.__invert__.html", "_foxes/constants/ITYPE.__le__.html", "_foxes/constants/ITYPE.__lshift__.html", "_foxes/constants/ITYPE.__lt__.html", "_foxes/constants/ITYPE.__mod__.html", "_foxes/constants/ITYPE.__mul__.html", "_foxes/constants/ITYPE.__ne__.html", "_foxes/constants/ITYPE.__neg__.html", "_foxes/constants/ITYPE.__new__.html", "_foxes/constants/ITYPE.__or__.html", "_foxes/constants/ITYPE.__pos__.html", "_foxes/constants/ITYPE.__pow__.html", "_foxes/constants/ITYPE.__radd__.html", "_foxes/constants/ITYPE.__rand__.html", "_foxes/constants/ITYPE.__rdivmod__.html", "_foxes/constants/ITYPE.__repr__.html", "_foxes/constants/ITYPE.__rfloordiv__.html", "_foxes/constants/ITYPE.__rlshift__.html", "_foxes/constants/ITYPE.__rmod__.html", "_foxes/constants/ITYPE.__rmul__.html", "_foxes/constants/ITYPE.__ror__.html", "_foxes/constants/ITYPE.__rpow__.html", "_foxes/constants/ITYPE.__rrshift__.html", "_foxes/constants/ITYPE.__rshift__.html", "_foxes/constants/ITYPE.__rsub__.html", "_foxes/constants/ITYPE.__rtruediv__.html", "_foxes/constants/ITYPE.__rxor__.html", "_foxes/constants/ITYPE.__str__.html", "_foxes/constants/ITYPE.__sub__.html", "_foxes/constants/ITYPE.__truediv__.html", "_foxes/constants/ITYPE.__xor__.html", "_foxes/constants/ITYPE.bit_count.html", "_foxes/constants/ITYPE.denominator.html", "_foxes/constants/ITYPE.is_integer.html", "_foxes/constants/ITYPE.numerator.html", "_foxes/constants/KAPPA.html", "_foxes/constants/MW.html", "_foxes/constants/POINT.html", "_foxes/constants/POINTS.html", "_foxes/constants/POP.html", "_foxes/constants/P_UNITS.html", "_foxes/constants/RPOINT.html", "_foxes/constants/RPOINTS.html", "_foxes/constants/RWEIGHTS.html", "_foxes/constants/STATE.html", "_foxes/constants/STATES_SEL.html", "_foxes/constants/STATE_POINT.html", "_foxes/constants/STATE_SOURCE_TURBINE.html", "_foxes/constants/STATE_TURBINE.html", "_foxes/constants/TMODELS.html", "_foxes/constants/TMODEL_SELS.html", "_foxes/constants/TNAME.html", "_foxes/constants/TURBINE.html", "_foxes/constants/TW.html", "_foxes/constants/VALID.html", "_foxes/constants/VARS.html", "_foxes/constants/W.html", "_foxes/constants/XYH.html", "_foxes/constants/kW.html", "_foxes/core/Algorithm.html", "_foxes/core/Algorithm.__init__.html", "_foxes/core/Algorithm.chunked.html", "_foxes/core/Algorithm.del_model_data.html", "_foxes/core/Algorithm.finalize.html", "_foxes/core/Algorithm.get_model_data.html", "_foxes/core/Algorithm.get_models_data.html", "_foxes/core/Algorithm.get_models_idata.html", "_foxes/core/Algorithm.idata_mem.html", "_foxes/core/Algorithm.initialize.html", "_foxes/core/Algorithm.new.html", "_foxes/core/Algorithm.new_point_data.html", "_foxes/core/Algorithm.print.html", "_foxes/core/Algorithm.store_model_data.html", "_foxes/core/Algorithm.update_n_turbines.html", "_foxes/core/AxialInductionModel.html", "_foxes/core/AxialInductionModel.ct2a.html", "_foxes/core/Data.html", "_foxes/core/Data.__init__.html", "_foxes/core/Data.add.html", "_foxes/core/Data.from_points.html", "_foxes/core/Data.n_points.html", "_foxes/core/Data.n_states.html", "_foxes/core/Data.n_turbines.html", "_foxes/core/Data.states_i0.html", "_foxes/core/DataCalcModel.html", "_foxes/core/DataCalcModel.calculate.html", "_foxes/core/DataCalcModel.run_calculation.html", "_foxes/core/ExtendedStates.html", "_foxes/core/ExtendedStates.__init__.html", "_foxes/core/ExtendedStates.append.html", "_foxes/core/ExtendedStates.calculate.html", "_foxes/core/ExtendedStates.index.html", "_foxes/core/ExtendedStates.output_point_vars.html", "_foxes/core/ExtendedStates.size.html", "_foxes/core/ExtendedStates.sub_models.html", "_foxes/core/ExtendedStates.weights.html", "_foxes/core/FarmController.html", "_foxes/core/FarmController.__init__.html", "_foxes/core/FarmController.calculate.html", "_foxes/core/FarmController.collect_models.html", "_foxes/core/FarmController.finalize.html", "_foxes/core/FarmController.initialize.html", "_foxes/core/FarmController.load_data.html", "_foxes/core/FarmController.output_farm_vars.html", "_foxes/core/FarmController.set_pars.html", "_foxes/core/FarmController.sub_models.html", "_foxes/core/FarmDataModel.html", "_foxes/core/FarmDataModel.__init__.html", "_foxes/core/FarmDataModel.calculate.html", "_foxes/core/FarmDataModel.output_farm_vars.html", "_foxes/core/FarmDataModel.run_calculation.html", "_foxes/core/FarmDataModelList.html", "_foxes/core/FarmDataModelList.__init__.html", "_foxes/core/FarmDataModelList.append.html", "_foxes/core/FarmDataModelList.calculate.html", "_foxes/core/FarmDataModelList.insert.html", "_foxes/core/FarmDataModelList.output_farm_vars.html", "_foxes/core/FarmDataModelList.sub_models.html", "_foxes/core/FarmModel.html", "_foxes/core/Model.html", "_foxes/core/Model.__init__.html", "_foxes/core/Model.__repr__.html", "_foxes/core/Model.data_to_store.html", "_foxes/core/Model.finalize.html", "_foxes/core/Model.from_data_or_store.html", "_foxes/core/Model.get_data.html", "_foxes/core/Model.initialize.html", "_foxes/core/Model.initialized.html", "_foxes/core/Model.load_data.html", "_foxes/core/Model.model_id.html", "_foxes/core/Model.sub_models.html", "_foxes/core/Model.var.html", "_foxes/core/PartialWakesModel.html", "_foxes/core/PartialWakesModel.__init__.html", "_foxes/core/PartialWakesModel.contribute_to_wake_deltas.html", "_foxes/core/PartialWakesModel.evaluate_results.html", "_foxes/core/PartialWakesModel.initialize.html", "_foxes/core/PartialWakesModel.new.html", "_foxes/core/PartialWakesModel.new_wake_deltas.html", "_foxes/core/PartialWakesModel.sub_models.html", "_foxes/core/PointDataModel.html", "_foxes/core/PointDataModel.calculate.html", "_foxes/core/PointDataModel.output_point_vars.html", "_foxes/core/PointDataModel.run_calculation.html", "_foxes/core/PointDataModelList.html", "_foxes/core/PointDataModelList.__init__.html", "_foxes/core/PointDataModelList.append.html", "_foxes/core/PointDataModelList.calculate.html", "_foxes/core/PointDataModelList.output_point_vars.html", "_foxes/core/PointDataModelList.sub_models.html", "_foxes/core/RotorModel.html", "_foxes/core/RotorModel.__init__.html", "_foxes/core/RotorModel.calculate.html", "_foxes/core/RotorModel.design_points.html", "_foxes/core/RotorModel.eval_rpoint_results.html", "_foxes/core/RotorModel.get_rotor_points.html", "_foxes/core/RotorModel.n_rotor_points.html", "_foxes/core/RotorModel.new.html", "_foxes/core/RotorModel.output_farm_vars.html", "_foxes/core/RotorModel.rotor_point_weights.html", "_foxes/core/States.html", "_foxes/core/States.index.html", "_foxes/core/States.load_data.html", "_foxes/core/States.output_point_vars.html", "_foxes/core/States.size.html", "_foxes/core/States.weights.html", "_foxes/core/Turbine.html", "_foxes/core/Turbine.__init__.html", "_foxes/core/Turbine.add_model.html", "_foxes/core/Turbine.insert_model.html", "_foxes/core/TurbineModel.html", "_foxes/core/TurbineModel.calculate.html", "_foxes/core/TurbineModel.new.html", "_foxes/core/TurbineType.html", "_foxes/core/TurbineType.__init__.html", "_foxes/core/TurbineType.new.html", "_foxes/core/VerticalProfile.html", "_foxes/core/VerticalProfile.calculate.html", "_foxes/core/VerticalProfile.input_vars.html", "_foxes/core/VerticalProfile.new.html", "_foxes/core/WakeFrame.html", "_foxes/core/WakeFrame.calc_centreline_integral.html", "_foxes/core/WakeFrame.calc_order.html", "_foxes/core/WakeFrame.get_centreline_points.html", "_foxes/core/WakeFrame.get_wake_coos.html", "_foxes/core/WakeFrame.get_wake_modelling_data.html", "_foxes/core/WakeFrame.new.html", "_foxes/core/WakeModel.html", "_foxes/core/WakeModel.contribute_to_wake_deltas.html", "_foxes/core/WakeModel.finalize_wake_deltas.html", "_foxes/core/WakeModel.init_wake_deltas.html", "_foxes/core/WakeModel.new.html", "_foxes/core/WakeSuperposition.html", "_foxes/core/WakeSuperposition.calc_final_wake_delta.html", "_foxes/core/WakeSuperposition.calc_wakes_plus_wake.html", "_foxes/core/WindFarm.html", "_foxes/core/WindFarm.__init__.html", "_foxes/core/WindFarm.add_turbine.html", "_foxes/core/WindFarm.n_turbines.html", "_foxes/core/WindFarm.turbine_names.html", "_foxes/data/StaticData.html", "_foxes/data/StaticData.__init__.html", "_foxes/data/parse_Pct_file_name.html", "_foxes/data/parse_Pct_two_files.html", "_foxes/input/farm_layout/add_from_csv.html", "_foxes/input/farm_layout/add_from_df.html", "_foxes/input/farm_layout/add_from_file.html", "_foxes/input/farm_layout/add_from_json.html", "_foxes/input/farm_layout/add_grid.html", "_foxes/input/farm_layout/add_row.html", "_foxes/input/states/FieldDataNC.html", "_foxes/input/states/FieldDataNC.__init__.html", "_foxes/input/states/FieldDataNC.calculate.html", "_foxes/input/states/FieldDataNC.index.html", "_foxes/input/states/FieldDataNC.load_data.html", "_foxes/input/states/FieldDataNC.output_point_vars.html", "_foxes/input/states/FieldDataNC.size.html", "_foxes/input/states/FieldDataNC.weights.html", "_foxes/input/states/MultiHeightStates.html", "_foxes/input/states/MultiHeightStates.RDICT.html", "_foxes/input/states/MultiHeightStates.__init__.html", "_foxes/input/states/MultiHeightStates.calculate.html", "_foxes/input/states/MultiHeightStates.finalize.html", "_foxes/input/states/MultiHeightStates.index.html", "_foxes/input/states/MultiHeightStates.load_data.html", "_foxes/input/states/MultiHeightStates.output_point_vars.html", "_foxes/input/states/MultiHeightStates.reset.html", "_foxes/input/states/MultiHeightStates.size.html", "_foxes/input/states/MultiHeightStates.weights.html", "_foxes/input/states/MultiHeightTimeseries.html", "_foxes/input/states/MultiHeightTimeseries.RDICT.html", "_foxes/input/states/ScanWS.html", "_foxes/input/states/ScanWS.__init__.html", "_foxes/input/states/ScanWS.calculate.html", "_foxes/input/states/ScanWS.load_data.html", "_foxes/input/states/ScanWS.output_point_vars.html", "_foxes/input/states/ScanWS.size.html", "_foxes/input/states/ScanWS.weights.html", "_foxes/input/states/SingleStateStates.html", "_foxes/input/states/SingleStateStates.__init__.html", "_foxes/input/states/SingleStateStates.calculate.html", "_foxes/input/states/SingleStateStates.initialize.html", "_foxes/input/states/SingleStateStates.output_point_vars.html", "_foxes/input/states/SingleStateStates.size.html", "_foxes/input/states/SingleStateStates.sub_models.html", "_foxes/input/states/SingleStateStates.weights.html", "_foxes/input/states/StatesTable.html", "_foxes/input/states/StatesTable.RDICT.html", "_foxes/input/states/StatesTable.__init__.html", "_foxes/input/states/StatesTable.calculate.html", "_foxes/input/states/StatesTable.finalize.html", "_foxes/input/states/StatesTable.index.html", "_foxes/input/states/StatesTable.initialize.html", "_foxes/input/states/StatesTable.load_data.html", "_foxes/input/states/StatesTable.output_point_vars.html", "_foxes/input/states/StatesTable.reset.html", "_foxes/input/states/StatesTable.size.html", "_foxes/input/states/StatesTable.sub_models.html", "_foxes/input/states/StatesTable.weights.html", "_foxes/input/states/Timeseries.html", "_foxes/input/states/Timeseries.RDICT.html", "_foxes/input/states/create_random_abl_states.html", "_foxes/input/windio/read_case.html", "_foxes/models/farm_controllers/BasicFarmController.html", "_foxes/models/farm_models/Turbine2FarmModel.html", "_foxes/models/farm_models/Turbine2FarmModel.__init__.html", "_foxes/models/farm_models/Turbine2FarmModel.__repr__.html", "_foxes/models/farm_models/Turbine2FarmModel.calculate.html", "_foxes/models/farm_models/Turbine2FarmModel.output_farm_vars.html", "_foxes/models/farm_models/Turbine2FarmModel.sub_models.html", "_foxes/models/model_book/Dict.html", "_foxes/models/model_book/Dict.__getitem__.html", "_foxes/models/model_book/Dict.__init__.html", "_foxes/models/model_book/ModelBook.html", "_foxes/models/model_book/ModelBook.__getitem__.html", "_foxes/models/model_book/ModelBook.__init__.html", "_foxes/models/model_book/ModelBook.finalize.html", "_foxes/models/model_book/ModelBook.get.html", "_foxes/models/model_book/ModelBook.print_toc.html", "_foxes/models/partial_wakes/Mapped.html", "_foxes/models/partial_wakes/Mapped.__init__.html", "_foxes/models/partial_wakes/Mapped.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.evaluate_results.html", "_foxes/models/partial_wakes/Mapped.initialize.html", "_foxes/models/partial_wakes/Mapped.new_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.sub_models.html", "_foxes/models/partial_wakes/PartialAxiwake.html", "_foxes/models/partial_wakes/PartialAxiwake.__init__.html", "_foxes/models/partial_wakes/PartialAxiwake.__repr__.html", "_foxes/models/partial_wakes/PartialAxiwake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.evaluate_results.html", "_foxes/models/partial_wakes/PartialAxiwake.initialize.html", "_foxes/models/partial_wakes/PartialAxiwake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.sub_models.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__init__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__repr__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.evaluate_results.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.initialize.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.sub_models.html", "_foxes/models/partial_wakes/PartialGrid.html", "_foxes/models/partial_wakes/PartialGrid.__init__.html", "_foxes/models/partial_wakes/PartialGrid.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.html", "_foxes/models/partial_wakes/PartialTopHat.__init__.html", "_foxes/models/partial_wakes/PartialTopHat.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.evaluate_results.html", "_foxes/models/partial_wakes/PartialTopHat.initialize.html", "_foxes/models/partial_wakes/PartialTopHat.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.sub_models.html", "_foxes/models/partial_wakes/RotorPoints.html", "_foxes/models/partial_wakes/RotorPoints.__init__.html", "_foxes/models/partial_wakes/RotorPoints.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/RotorPoints.evaluate_results.html", "_foxes/models/partial_wakes/RotorPoints.get_wake_points.html", "_foxes/models/partial_wakes/RotorPoints.new_wake_deltas.html", "_foxes/models/point_models/SetUniformData.html", "_foxes/models/point_models/SetUniformData.__init__.html", "_foxes/models/point_models/SetUniformData.calculate.html", "_foxes/models/point_models/SetUniformData.load_data.html", "_foxes/models/point_models/SetUniformData.output_point_vars.html", "_foxes/models/point_models/TKE2TI.html", "_foxes/models/point_models/TKE2TI.calculate.html", "_foxes/models/point_models/TKE2TI.output_point_vars.html", "_foxes/models/point_models/WakeDeltas.html", "_foxes/models/point_models/WakeDeltas.__init__.html", "_foxes/models/point_models/WakeDeltas.calculate.html", "_foxes/models/point_models/WakeDeltas.output_point_vars.html", "_foxes/models/rotor_models/CentreRotor.html", "_foxes/models/rotor_models/CentreRotor.design_points.html", "_foxes/models/rotor_models/CentreRotor.eval_rpoint_results.html", "_foxes/models/rotor_models/CentreRotor.get_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.n_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.rotor_point_weights.html", "_foxes/models/rotor_models/GridRotor.html", "_foxes/models/rotor_models/GridRotor.__init__.html", "_foxes/models/rotor_models/GridRotor.__repr__.html", "_foxes/models/rotor_models/GridRotor.design_points.html", "_foxes/models/rotor_models/GridRotor.initialize.html", "_foxes/models/rotor_models/GridRotor.n_rotor_points.html", "_foxes/models/rotor_models/GridRotor.rotor_point_weights.html", "_foxes/models/rotor_models/LevelRotor.html", "_foxes/models/rotor_models/LevelRotor.__init__.html", "_foxes/models/rotor_models/LevelRotor.__repr__.html", "_foxes/models/rotor_models/LevelRotor.design_points.html", "_foxes/models/rotor_models/LevelRotor.initialize.html", "_foxes/models/rotor_models/LevelRotor.n_rotor_points.html", "_foxes/models/rotor_models/LevelRotor.rotor_point_weights.html", "_foxes/models/turbine_models/Calculator.html", "_foxes/models/turbine_models/Calculator.__init__.html", "_foxes/models/turbine_models/Calculator.calculate.html", "_foxes/models/turbine_models/Calculator.output_farm_vars.html", "_foxes/models/turbine_models/LookupTable.html", "_foxes/models/turbine_models/LookupTable.__init__.html", "_foxes/models/turbine_models/LookupTable.calculate.html", "_foxes/models/turbine_models/LookupTable.load_data.html", "_foxes/models/turbine_models/LookupTable.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.html", "_foxes/models/turbine_models/PowerMask.__init__.html", "_foxes/models/turbine_models/PowerMask.calculate.html", "_foxes/models/turbine_models/PowerMask.initialize.html", "_foxes/models/turbine_models/PowerMask.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.update_P_ct.html", "_foxes/models/turbine_models/RotorCentreCalc.html", "_foxes/models/turbine_models/RotorCentreCalc.__init__.html", "_foxes/models/turbine_models/RotorCentreCalc.calculate.html", "_foxes/models/turbine_models/RotorCentreCalc.initialize.html", "_foxes/models/turbine_models/RotorCentreCalc.output_farm_vars.html", "_foxes/models/turbine_models/RotorCentreCalc.sub_models.html", "_foxes/models/turbine_models/SectorManagement.html", "_foxes/models/turbine_models/SectorManagement.__init__.html", "_foxes/models/turbine_models/SectorManagement.calculate.html", "_foxes/models/turbine_models/SectorManagement.initialize.html", "_foxes/models/turbine_models/SectorManagement.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.html", "_foxes/models/turbine_models/SetFarmVars.__init__.html", "_foxes/models/turbine_models/SetFarmVars.add_var.html", "_foxes/models/turbine_models/SetFarmVars.calculate.html", "_foxes/models/turbine_models/SetFarmVars.load_data.html", "_foxes/models/turbine_models/SetFarmVars.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.reset.html", "_foxes/models/turbine_models/SetXYHD.html", "_foxes/models/turbine_models/SetXYHD.__init__.html", "_foxes/models/turbine_models/SetXYHD.calculate.html", "_foxes/models/turbine_models/SetXYHD.output_farm_vars.html", "_foxes/models/turbine_models/TableFactors.html", "_foxes/models/turbine_models/TableFactors.__init__.html", "_foxes/models/turbine_models/TableFactors.calculate.html", "_foxes/models/turbine_models/TableFactors.initialize.html", "_foxes/models/turbine_models/TableFactors.output_farm_vars.html", "_foxes/models/turbine_models/Thrust2Ct.html", "_foxes/models/turbine_models/Thrust2Ct.__init__.html", "_foxes/models/turbine_models/Thrust2Ct.calculate.html", "_foxes/models/turbine_models/Thrust2Ct.output_farm_vars.html", "_foxes/models/turbine_models/YAW2YAWM.html", "_foxes/models/turbine_models/YAW2YAWM.calculate.html", "_foxes/models/turbine_models/YAW2YAWM.output_farm_vars.html", "_foxes/models/turbine_models/YAWM2YAW.html", "_foxes/models/turbine_models/YAWM2YAW.calculate.html", "_foxes/models/turbine_models/YAWM2YAW.output_farm_vars.html", "_foxes/models/turbine_models/kTI.html", "_foxes/models/turbine_models/kTI.__init__.html", "_foxes/models/turbine_models/kTI.__repr__.html", "_foxes/models/turbine_models/kTI.calculate.html", "_foxes/models/turbine_models/kTI.output_farm_vars.html", "_foxes/models/turbine_types/CpCtFile.html", "_foxes/models/turbine_types/CpCtFile.__init__.html", "_foxes/models/turbine_types/CpCtFromTwo.html", "_foxes/models/turbine_types/CpCtFromTwo.__init__.html", "_foxes/models/turbine_types/NullType.html", "_foxes/models/turbine_types/NullType.calculate.html", "_foxes/models/turbine_types/NullType.output_farm_vars.html", "_foxes/models/turbine_types/PCtFile.html", "_foxes/models/turbine_types/PCtFile.__init__.html", "_foxes/models/turbine_types/PCtFile.calculate.html", "_foxes/models/turbine_types/PCtFile.finalize.html", "_foxes/models/turbine_types/PCtFile.load_data.html", "_foxes/models/turbine_types/PCtFile.output_farm_vars.html", "_foxes/models/turbine_types/PCtFromTwo.html", "_foxes/models/turbine_types/PCtFromTwo.__init__.html", "_foxes/models/turbine_types/PCtFromTwo.calculate.html", "_foxes/models/turbine_types/PCtFromTwo.finalize.html", "_foxes/models/turbine_types/PCtFromTwo.load_data.html", "_foxes/models/turbine_types/PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.output_farm_vars.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.input_vars.html", "_foxes/models/vertical_profiles/DataProfile.html", "_foxes/models/vertical_profiles/DataProfile.__init__.html", "_foxes/models/vertical_profiles/DataProfile.calculate.html", "_foxes/models/vertical_profiles/DataProfile.input_vars.html", "_foxes/models/vertical_profiles/ShearedProfile.html", "_foxes/models/vertical_profiles/ShearedProfile.calculate.html", "_foxes/models/vertical_profiles/ShearedProfile.input_vars.html", "_foxes/models/vertical_profiles/UniformProfile.html", "_foxes/models/vertical_profiles/UniformProfile.__init__.html", "_foxes/models/vertical_profiles/UniformProfile.calculate.html", "_foxes/models/vertical_profiles/UniformProfile.input_vars.html", "_foxes/models/wake_frames/FarmOrder.html", "_foxes/models/wake_frames/FarmOrder.__init__.html", "_foxes/models/wake_frames/FarmOrder.calc_order.html", "_foxes/models/wake_frames/FarmOrder.get_centreline_points.html", "_foxes/models/wake_frames/FarmOrder.get_wake_coos.html", "_foxes/models/wake_frames/FarmOrder.sub_models.html", "_foxes/models/wake_frames/RotorWD.html", "_foxes/models/wake_frames/RotorWD.__init__.html", "_foxes/models/wake_frames/RotorWD.calc_order.html", "_foxes/models/wake_frames/RotorWD.get_centreline_points.html", "_foxes/models/wake_frames/RotorWD.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.html", "_foxes/models/wake_frames/SeqDynamicWakes.__init__.html", "_foxes/models/wake_frames/SeqDynamicWakes.calc_order.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_centreline_points.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_modelling_data.html", "_foxes/models/wake_frames/SeqDynamicWakes.initialize.html", "_foxes/models/wake_frames/Streamlines2D.html", "_foxes/models/wake_frames/Streamlines2D.__init__.html", "_foxes/models/wake_frames/Streamlines2D.__repr__.html", "_foxes/models/wake_frames/Streamlines2D.calc_order.html", "_foxes/models/wake_frames/Streamlines2D.get_centreline_points.html", "_foxes/models/wake_frames/Streamlines2D.get_streamline_data.html", "_foxes/models/wake_frames/Streamlines2D.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.html", "_foxes/models/wake_frames/Timelines.__init__.html", "_foxes/models/wake_frames/Timelines.calc_order.html", "_foxes/models/wake_frames/Timelines.get_centreline_points.html", "_foxes/models/wake_frames/Timelines.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.initialize.html", "_foxes/models/wake_frames/YawedWakes.html", "_foxes/models/wake_frames/YawedWakes.__init__.html", "_foxes/models/wake_frames/YawedWakes.calc_order.html", "_foxes/models/wake_frames/YawedWakes.get_centreline_points.html", "_foxes/models/wake_frames/YawedWakes.get_wake_coos.html", "_foxes/models/wake_frames/YawedWakes.initialize.html", "_foxes/models/wake_frames/YawedWakes.sub_models.html", "_foxes/models/wake_models/AxisymmetricWakeModel.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.html", "_foxes/models/wake_models/DistSlicedWakeModel.__init__.html", "_foxes/models/wake_models/DistSlicedWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.contribute_to_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.finalize_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.initialize.html", "_foxes/models/wake_models/DistSlicedWakeModel.sub_models.html", "_foxes/models/wake_models/GaussianWakeModel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/GroundMirror.html", "_foxes/models/wake_models/GroundMirror.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.html", "_foxes/models/wake_models/TopHatWakeModel.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wake_radius.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.initialize.html", "_foxes/models/wake_models/TopHatWakeModel.sub_models.html", "_foxes/models/wake_models/WakeMirror.html", "_foxes/models/wake_models/WakeMirror.__init__.html", "_foxes/models/wake_models/WakeMirror.contribute_to_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.finalize_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.init_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.sub_models.html", "_foxes/models/wake_models/induction/RankineHalfBody.html", "_foxes/models/wake_models/induction/RankineHalfBody.__init__.html", "_foxes/models/wake_models/induction/RankineHalfBody.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.init_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.initialize.html", "_foxes/models/wake_models/induction/RankineHalfBody.sub_models.html", "_foxes/models/wake_models/induction/Rathmann.html", "_foxes/models/wake_models/induction/Rathmann.__init__.html", "_foxes/models/wake_models/induction/Rathmann.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.init_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.initialize.html", "_foxes/models/wake_models/induction/Rathmann.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar.html", "_foxes/models/wake_models/induction/SelfSimilar.__init__.html", "_foxes/models/wake_models/induction/SelfSimilar.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.init_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.initialize.html", "_foxes/models/wake_models/induction/SelfSimilar.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar2020.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__init__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__repr__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.init_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.html", "_foxes/models/wake_models/ti/IECTIWake.__init__.html", "_foxes/models/wake_models/ti/IECTIWake.__repr__.html", "_foxes/models/wake_models/ti/IECTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/IECTIWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.html", "_foxes/models/wake_models/wind/Bastankhah2014.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2014.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2014.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/Bastankhah2014.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2014.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016.html", "_foxes/models/wake_models/wind/Bastankhah2016.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2016.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/wind/Bastankhah2016.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2016.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.CHECK.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.MDATA_KEY.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.PARS.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC_S.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Y_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Z_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SP_SEL.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.X0.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.calc_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.clean.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.get_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.has_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.pars.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.sub_models.html", "_foxes/models/wake_models/wind/JensenWake.html", "_foxes/models/wake_models/wind/JensenWake.__init__.html", "_foxes/models/wake_models/wind/JensenWake.__repr__.html", "_foxes/models/wake_models/wind/JensenWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/wind/JensenWake.calc_wake_radius.html", "_foxes/models/wake_models/wind/JensenWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.html", "_foxes/models/wake_models/wind/TurbOParkWake.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWake.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWake.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWake.sub_models.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.finalize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.sub_models.html", "_foxes/models/wake_superpositions/TILinear.html", "_foxes/models/wake_superpositions/TILinear.__init__.html", "_foxes/models/wake_superpositions/TILinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TILinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIMax.html", "_foxes/models/wake_superpositions/TIMax.__init__.html", "_foxes/models/wake_superpositions/TIMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIPow.html", "_foxes/models/wake_superpositions/TIPow.__init__.html", "_foxes/models/wake_superpositions/TIPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIQuadratic.html", "_foxes/models/wake_superpositions/TIQuadratic.__init__.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.html", "_foxes/models/wake_superpositions/WSLinear.__init__.html", "_foxes/models/wake_superpositions/WSLinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMax.html", "_foxes/models/wake_superpositions/WSMax.__init__.html", "_foxes/models/wake_superpositions/WSMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSMax.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPow.html", "_foxes/models/wake_superpositions/WSPow.__init__.html", "_foxes/models/wake_superpositions/WSPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSPow.input_farm_vars.html", "_foxes/models/wake_superpositions/WSProduct.html", "_foxes/models/wake_superpositions/WSProduct.__init__.html", "_foxes/models/wake_superpositions/WSProduct.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSProduct.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSProduct.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadratic.html", "_foxes/models/wake_superpositions/WSQuadratic.__init__.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSQuadratic.input_farm_vars.html", "_foxes/output/Animator.html", "_foxes/output/Animator.__init__.html", "_foxes/output/Animator.add_generator.html", "_foxes/output/Animator.animate.html", "_foxes/output/Animator.generators.html", "_foxes/output/FarmLayoutOutput.html", "_foxes/output/FarmLayoutOutput.__init__.html", "_foxes/output/FarmLayoutOutput.get_figure.html", "_foxes/output/FarmLayoutOutput.get_layout_data.html", "_foxes/output/FarmLayoutOutput.get_layout_dict.html", "_foxes/output/FarmLayoutOutput.write_csv.html", "_foxes/output/FarmLayoutOutput.write_json.html", "_foxes/output/FarmLayoutOutput.write_plot.html", "_foxes/output/FarmLayoutOutput.write_xyh.html", "_foxes/output/FarmResultsEval.html", "_foxes/output/FarmResultsEval.__init__.html", "_foxes/output/FarmResultsEval.add_capacity.html", "_foxes/output/FarmResultsEval.add_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_mean.html", "_foxes/output/FarmResultsEval.calc_farm_sum.html", "_foxes/output/FarmResultsEval.calc_farm_yield.html", "_foxes/output/FarmResultsEval.calc_mean_farm_power.html", "_foxes/output/FarmResultsEval.calc_states_mean.html", "_foxes/output/FarmResultsEval.calc_states_std.html", "_foxes/output/FarmResultsEval.calc_states_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_mean.html", "_foxes/output/FarmResultsEval.calc_turbine_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_yield.html", "_foxes/output/FarmResultsEval.gen_stdata.html", "_foxes/output/FarmResultsEval.reduce_all.html", "_foxes/output/FarmResultsEval.reduce_states.html", "_foxes/output/FarmResultsEval.reduce_turbines.html", "_foxes/output/FarmResultsEval.weinsum.html", "_foxes/output/FlowPlots2D.html", "_foxes/output/FlowPlots2D.gen_states_fig_xy.html", "_foxes/output/FlowPlots2D.gen_states_fig_xz.html", "_foxes/output/FlowPlots2D.gen_states_fig_yz.html", "_foxes/output/FlowPlots2D.get_mean_fig_xy.html", "_foxes/output/FlowPlots2D.get_mean_fig_xz.html", "_foxes/output/FlowPlots2D.get_mean_fig_yz.html", "_foxes/output/Output.html", "_foxes/output/Output.__init__.html", "_foxes/output/Output.get_fpath.html", "_foxes/output/Output.new.html", "_foxes/output/Output.print_models.html", "_foxes/output/Output.write.html", "_foxes/output/PointCalculator.html", "_foxes/output/PointCalculator.__init__.html", "_foxes/output/PointCalculator.calculate.html", "_foxes/output/ResultsWriter.html", "_foxes/output/ResultsWriter.__init__.html", "_foxes/output/ResultsWriter.write_csv.html", "_foxes/output/ResultsWriter.write_nc.html", "_foxes/output/RosePlotOutput.html", "_foxes/output/RosePlotOutput.__init__.html", "_foxes/output/RosePlotOutput.get_data.html", "_foxes/output/RosePlotOutput.get_data_info.html", "_foxes/output/RosePlotOutput.get_figure.html", "_foxes/output/RosePlotOutput.write_figure.html", "_foxes/output/SeqFlowAnimationPlugin.html", "_foxes/output/SeqFlowAnimationPlugin.__init__.html", "_foxes/output/SeqFlowAnimationPlugin.gen_images.html", "_foxes/output/SeqFlowAnimationPlugin.initialize.html", "_foxes/output/SeqFlowAnimationPlugin.update.html", "_foxes/output/SliceData.html", "_foxes/output/SliceData.__init__.html", "_foxes/output/SliceData.get_mean_data_xy.html", "_foxes/output/SliceData.get_mean_data_xz.html", "_foxes/output/SliceData.get_mean_data_yz.html", "_foxes/output/SliceData.get_states_data_xy.html", "_foxes/output/SliceData.get_states_data_xz.html", "_foxes/output/SliceData.get_states_data_yz.html", "_foxes/output/StateTurbineMap.html", "_foxes/output/StateTurbineMap.__init__.html", "_foxes/output/StateTurbineMap.plot_map.html", "_foxes/output/StatesRosePlotOutput.html", "_foxes/output/StatesRosePlotOutput.__init__.html", "_foxes/output/TurbineTypeCurves.html", "_foxes/output/TurbineTypeCurves.__init__.html", "_foxes/output/TurbineTypeCurves.plot_curves.html", "_foxes/output/flow_plots_2d/get_fig.html", "_foxes/utils/DataBook.html", "_foxes/utils/DataBook.__init__.html", "_foxes/utils/DataBook.add_data_package.html", "_foxes/utils/DataBook.add_data_package_file.html", "_foxes/utils/DataBook.add_file.html", "_foxes/utils/DataBook.add_files.html", "_foxes/utils/DataBook.get_file_path.html", "_foxes/utils/DataBook.toc.html", "_foxes/utils/PandasFileHelper.html", "_foxes/utils/PandasFileHelper.DATA_FILE_FORMATS.html", "_foxes/utils/PandasFileHelper.DEFAULT_FORMAT_DICT.html", "_foxes/utils/PandasFileHelper.DEFAULT_READING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.DEFAULT_WRITING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.read_file.html", "_foxes/utils/PandasFileHelper.write_file.html", "_foxes/utils/TabWindroseAxes.html", "_foxes/utils/TabWindroseAxes.ArtistList.html", "_foxes/utils/TabWindroseAxes.ArtistList.__getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__init__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__repr__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__subclasshook__.html", "_foxes/utils/TabWindroseAxes.ArtistList.count.html", "_foxes/utils/TabWindroseAxes.ArtistList.index.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__add__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__array__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__sub__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.depth.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.frozen.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_matrix.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.invalidate.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_separable.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.pass_through.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.set_children.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_angles.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_point.html", "_foxes/utils/TabWindroseAxes.PolarAffine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__array__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__eq__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__init__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__str__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.frozen.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_matrix.html", "_foxes/utils/TabWindroseAxes.PolarAffine.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarAffine.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.inverted.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_separable.html", "_foxes/utils/TabWindroseAxes.PolarAffine.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.to_values.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.PolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.RadialLocator.html", "_foxes/utils/TabWindroseAxes.RadialLocator.MAXTICKS.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__call__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__init__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.create_dummy_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.RadialLocator.raise_if_exceeds.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_params.html", "_foxes/utils/TabWindroseAxes.RadialLocator.tick_values.html", "_foxes/utils/TabWindroseAxes.RadialLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.fix_minus.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data_short.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_ticks.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.get_offset.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.locs.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_locs.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__init__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.__init__.html", "_foxes/utils/TabWindroseAxes.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.__repr__.html", "_foxes/utils/TabWindroseAxes.__str__.html", "_foxes/utils/TabWindroseAxes.acorr.html", "_foxes/utils/TabWindroseAxes.add_artist.html", "_foxes/utils/TabWindroseAxes.add_callback.html", "_foxes/utils/TabWindroseAxes.add_child_axes.html", "_foxes/utils/TabWindroseAxes.add_collection.html", "_foxes/utils/TabWindroseAxes.add_container.html", "_foxes/utils/TabWindroseAxes.add_image.html", "_foxes/utils/TabWindroseAxes.add_line.html", "_foxes/utils/TabWindroseAxes.add_patch.html", "_foxes/utils/TabWindroseAxes.add_table.html", "_foxes/utils/TabWindroseAxes.angle_spectrum.html", "_foxes/utils/TabWindroseAxes.annotate.html", "_foxes/utils/TabWindroseAxes.apply_aspect.html", "_foxes/utils/TabWindroseAxes.arrow.html", "_foxes/utils/TabWindroseAxes.artists.html", "_foxes/utils/TabWindroseAxes.autoscale.html", "_foxes/utils/TabWindroseAxes.autoscale_view.html", "_foxes/utils/TabWindroseAxes.axes.html", "_foxes/utils/TabWindroseAxes.axhline.html", "_foxes/utils/TabWindroseAxes.axhspan.html", "_foxes/utils/TabWindroseAxes.axis.html", "_foxes/utils/TabWindroseAxes.axline.html", "_foxes/utils/TabWindroseAxes.axvline.html", "_foxes/utils/TabWindroseAxes.axvspan.html", "_foxes/utils/TabWindroseAxes.bar.html", "_foxes/utils/TabWindroseAxes.bar_label.html", "_foxes/utils/TabWindroseAxes.barbs.html", "_foxes/utils/TabWindroseAxes.barh.html", "_foxes/utils/TabWindroseAxes.box.html", "_foxes/utils/TabWindroseAxes.boxplot.html", "_foxes/utils/TabWindroseAxes.broken_barh.html", "_foxes/utils/TabWindroseAxes.bxp.html", "_foxes/utils/TabWindroseAxes.can_pan.html", "_foxes/utils/TabWindroseAxes.can_zoom.html", "_foxes/utils/TabWindroseAxes.cla.html", "_foxes/utils/TabWindroseAxes.clabel.html", "_foxes/utils/TabWindroseAxes.clear.html", "_foxes/utils/TabWindroseAxes.cohere.html", "_foxes/utils/TabWindroseAxes.collections.html", "_foxes/utils/TabWindroseAxes.contains.html", "_foxes/utils/TabWindroseAxes.contains_point.html", "_foxes/utils/TabWindroseAxes.contour.html", "_foxes/utils/TabWindroseAxes.contourf.html", "_foxes/utils/TabWindroseAxes.convert_xunits.html", "_foxes/utils/TabWindroseAxes.convert_yunits.html", "_foxes/utils/TabWindroseAxes.csd.html", "_foxes/utils/TabWindroseAxes.drag_pan.html", "_foxes/utils/TabWindroseAxes.draw.html", "_foxes/utils/TabWindroseAxes.draw_artist.html", "_foxes/utils/TabWindroseAxes.end_pan.html", "_foxes/utils/TabWindroseAxes.errorbar.html", "_foxes/utils/TabWindroseAxes.eventplot.html", "_foxes/utils/TabWindroseAxes.fill.html", "_foxes/utils/TabWindroseAxes.fill_between.html", "_foxes/utils/TabWindroseAxes.fill_betweenx.html", "_foxes/utils/TabWindroseAxes.findobj.html", "_foxes/utils/TabWindroseAxes.format_coord.html", "_foxes/utils/TabWindroseAxes.format_cursor_data.html", "_foxes/utils/TabWindroseAxes.format_xdata.html", "_foxes/utils/TabWindroseAxes.format_ydata.html", "_foxes/utils/TabWindroseAxes.from_ax.html", "_foxes/utils/TabWindroseAxes.get_adjustable.html", "_foxes/utils/TabWindroseAxes.get_agg_filter.html", "_foxes/utils/TabWindroseAxes.get_alpha.html", "_foxes/utils/TabWindroseAxes.get_anchor.html", "_foxes/utils/TabWindroseAxes.get_animated.html", "_foxes/utils/TabWindroseAxes.get_aspect.html", "_foxes/utils/TabWindroseAxes.get_autoscale_on.html", "_foxes/utils/TabWindroseAxes.get_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.get_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.get_axes_locator.html", "_foxes/utils/TabWindroseAxes.get_axisbelow.html", "_foxes/utils/TabWindroseAxes.get_box_aspect.html", "_foxes/utils/TabWindroseAxes.get_children.html", "_foxes/utils/TabWindroseAxes.get_clip_box.html", "_foxes/utils/TabWindroseAxes.get_clip_on.html", "_foxes/utils/TabWindroseAxes.get_clip_path.html", "_foxes/utils/TabWindroseAxes.get_cursor_data.html", "_foxes/utils/TabWindroseAxes.get_data_ratio.html", "_foxes/utils/TabWindroseAxes.get_default_bbox_extra_artists.html", "_foxes/utils/TabWindroseAxes.get_facecolor.html", "_foxes/utils/TabWindroseAxes.get_fc.html", "_foxes/utils/TabWindroseAxes.get_figure.html", "_foxes/utils/TabWindroseAxes.get_frame_on.html", "_foxes/utils/TabWindroseAxes.get_gid.html", "_foxes/utils/TabWindroseAxes.get_gridspec.html", "_foxes/utils/TabWindroseAxes.get_images.html", "_foxes/utils/TabWindroseAxes.get_in_layout.html", "_foxes/utils/TabWindroseAxes.get_label.html", "_foxes/utils/TabWindroseAxes.get_legend.html", "_foxes/utils/TabWindroseAxes.get_legend_handles_labels.html", "_foxes/utils/TabWindroseAxes.get_lines.html", "_foxes/utils/TabWindroseAxes.get_mouseover.html", "_foxes/utils/TabWindroseAxes.get_navigate.html", "_foxes/utils/TabWindroseAxes.get_navigate_mode.html", "_foxes/utils/TabWindroseAxes.get_path_effects.html", "_foxes/utils/TabWindroseAxes.get_picker.html", "_foxes/utils/TabWindroseAxes.get_position.html", "_foxes/utils/TabWindroseAxes.get_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.get_rasterized.html", "_foxes/utils/TabWindroseAxes.get_renderer_cache.html", "_foxes/utils/TabWindroseAxes.get_rlabel_position.html", "_foxes/utils/TabWindroseAxes.get_rmax.html", "_foxes/utils/TabWindroseAxes.get_rmin.html", "_foxes/utils/TabWindroseAxes.get_rorigin.html", "_foxes/utils/TabWindroseAxes.get_rsign.html", "_foxes/utils/TabWindroseAxes.get_shared_x_axes.html", "_foxes/utils/TabWindroseAxes.get_shared_y_axes.html", "_foxes/utils/TabWindroseAxes.get_sketch_params.html", "_foxes/utils/TabWindroseAxes.get_snap.html", "_foxes/utils/TabWindroseAxes.get_subplotspec.html", "_foxes/utils/TabWindroseAxes.get_theta_direction.html", "_foxes/utils/TabWindroseAxes.get_theta_offset.html", "_foxes/utils/TabWindroseAxes.get_thetamax.html", "_foxes/utils/TabWindroseAxes.get_thetamin.html", "_foxes/utils/TabWindroseAxes.get_tightbbox.html", "_foxes/utils/TabWindroseAxes.get_title.html", "_foxes/utils/TabWindroseAxes.get_transform.html", "_foxes/utils/TabWindroseAxes.get_transformed_clip_path_and_affine.html", "_foxes/utils/TabWindroseAxes.get_url.html", "_foxes/utils/TabWindroseAxes.get_visible.html", "_foxes/utils/TabWindroseAxes.get_window_extent.html", "_foxes/utils/TabWindroseAxes.get_xaxis.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_xbound.html", "_foxes/utils/TabWindroseAxes.get_xgridlines.html", "_foxes/utils/TabWindroseAxes.get_xlabel.html", "_foxes/utils/TabWindroseAxes.get_xlim.html", "_foxes/utils/TabWindroseAxes.get_xmajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xscale.html", "_foxes/utils/TabWindroseAxes.get_xticklabels.html", "_foxes/utils/TabWindroseAxes.get_xticklines.html", "_foxes/utils/TabWindroseAxes.get_xticks.html", "_foxes/utils/TabWindroseAxes.get_yaxis.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_ybound.html", "_foxes/utils/TabWindroseAxes.get_ygridlines.html", "_foxes/utils/TabWindroseAxes.get_ylabel.html", "_foxes/utils/TabWindroseAxes.get_ylim.html", "_foxes/utils/TabWindroseAxes.get_ymajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yscale.html", "_foxes/utils/TabWindroseAxes.get_yticklabels.html", "_foxes/utils/TabWindroseAxes.get_yticklines.html", "_foxes/utils/TabWindroseAxes.get_yticks.html", "_foxes/utils/TabWindroseAxes.get_zorder.html", "_foxes/utils/TabWindroseAxes.grid.html", "_foxes/utils/TabWindroseAxes.has_data.html", "_foxes/utils/TabWindroseAxes.have_units.html", "_foxes/utils/TabWindroseAxes.hexbin.html", "_foxes/utils/TabWindroseAxes.hist.html", "_foxes/utils/TabWindroseAxes.hist2d.html", "_foxes/utils/TabWindroseAxes.hlines.html", "_foxes/utils/TabWindroseAxes.images.html", "_foxes/utils/TabWindroseAxes.imshow.html", "_foxes/utils/TabWindroseAxes.in_axes.html", "_foxes/utils/TabWindroseAxes.indicate_inset.html", "_foxes/utils/TabWindroseAxes.indicate_inset_zoom.html", "_foxes/utils/TabWindroseAxes.inset_axes.html", "_foxes/utils/TabWindroseAxes.invert_xaxis.html", "_foxes/utils/TabWindroseAxes.invert_yaxis.html", "_foxes/utils/TabWindroseAxes.is_transform_set.html", "_foxes/utils/TabWindroseAxes.label_outer.html", "_foxes/utils/TabWindroseAxes.legend.html", "_foxes/utils/TabWindroseAxes.lines.html", "_foxes/utils/TabWindroseAxes.locator_params.html", "_foxes/utils/TabWindroseAxes.loglog.html", "_foxes/utils/TabWindroseAxes.magnitude_spectrum.html", "_foxes/utils/TabWindroseAxes.margins.html", "_foxes/utils/TabWindroseAxes.matshow.html", "_foxes/utils/TabWindroseAxes.minorticks_off.html", "_foxes/utils/TabWindroseAxes.minorticks_on.html", "_foxes/utils/TabWindroseAxes.mouseover.html", "_foxes/utils/TabWindroseAxes.name.html", "_foxes/utils/TabWindroseAxes.patches.html", "_foxes/utils/TabWindroseAxes.pchanged.html", "_foxes/utils/TabWindroseAxes.pcolor.html", "_foxes/utils/TabWindroseAxes.pcolorfast.html", "_foxes/utils/TabWindroseAxes.pcolormesh.html", "_foxes/utils/TabWindroseAxes.phase_spectrum.html", "_foxes/utils/TabWindroseAxes.pick.html", "_foxes/utils/TabWindroseAxes.pickable.html", "_foxes/utils/TabWindroseAxes.pie.html", "_foxes/utils/TabWindroseAxes.plot.html", "_foxes/utils/TabWindroseAxes.plot_date.html", "_foxes/utils/TabWindroseAxes.properties.html", "_foxes/utils/TabWindroseAxes.psd.html", "_foxes/utils/TabWindroseAxes.quiver.html", "_foxes/utils/TabWindroseAxes.quiverkey.html", "_foxes/utils/TabWindroseAxes.redraw_in_frame.html", "_foxes/utils/TabWindroseAxes.relim.html", "_foxes/utils/TabWindroseAxes.remove.html", "_foxes/utils/TabWindroseAxes.remove_callback.html", "_foxes/utils/TabWindroseAxes.reset_position.html", "_foxes/utils/TabWindroseAxes.scatter.html", "_foxes/utils/TabWindroseAxes.secondary_xaxis.html", "_foxes/utils/TabWindroseAxes.secondary_yaxis.html", "_foxes/utils/TabWindroseAxes.semilogx.html", "_foxes/utils/TabWindroseAxes.semilogy.html", "_foxes/utils/TabWindroseAxes.set.html", "_foxes/utils/TabWindroseAxes.set_adjustable.html", "_foxes/utils/TabWindroseAxes.set_agg_filter.html", "_foxes/utils/TabWindroseAxes.set_alpha.html", "_foxes/utils/TabWindroseAxes.set_anchor.html", "_foxes/utils/TabWindroseAxes.set_animated.html", "_foxes/utils/TabWindroseAxes.set_aspect.html", "_foxes/utils/TabWindroseAxes.set_autoscale_on.html", "_foxes/utils/TabWindroseAxes.set_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.set_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.set_axes_locator.html", "_foxes/utils/TabWindroseAxes.set_axis_off.html", "_foxes/utils/TabWindroseAxes.set_axis_on.html", "_foxes/utils/TabWindroseAxes.set_axisbelow.html", "_foxes/utils/TabWindroseAxes.set_box_aspect.html", "_foxes/utils/TabWindroseAxes.set_clip_box.html", "_foxes/utils/TabWindroseAxes.set_clip_on.html", "_foxes/utils/TabWindroseAxes.set_clip_path.html", "_foxes/utils/TabWindroseAxes.set_facecolor.html", "_foxes/utils/TabWindroseAxes.set_fc.html", "_foxes/utils/TabWindroseAxes.set_figure.html", "_foxes/utils/TabWindroseAxes.set_frame_on.html", "_foxes/utils/TabWindroseAxes.set_gid.html", "_foxes/utils/TabWindroseAxes.set_in_layout.html", "_foxes/utils/TabWindroseAxes.set_label.html", "_foxes/utils/TabWindroseAxes.set_legend.html", "_foxes/utils/TabWindroseAxes.set_mouseover.html", "_foxes/utils/TabWindroseAxes.set_navigate.html", "_foxes/utils/TabWindroseAxes.set_navigate_mode.html", "_foxes/utils/TabWindroseAxes.set_path_effects.html", "_foxes/utils/TabWindroseAxes.set_picker.html", "_foxes/utils/TabWindroseAxes.set_position.html", "_foxes/utils/TabWindroseAxes.set_prop_cycle.html", "_foxes/utils/TabWindroseAxes.set_radii_angle.html", "_foxes/utils/TabWindroseAxes.set_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.set_rasterized.html", "_foxes/utils/TabWindroseAxes.set_rgrids.html", "_foxes/utils/TabWindroseAxes.set_rlabel_position.html", "_foxes/utils/TabWindroseAxes.set_rlim.html", "_foxes/utils/TabWindroseAxes.set_rmax.html", "_foxes/utils/TabWindroseAxes.set_rmin.html", "_foxes/utils/TabWindroseAxes.set_rorigin.html", "_foxes/utils/TabWindroseAxes.set_rscale.html", "_foxes/utils/TabWindroseAxes.set_rticks.html", "_foxes/utils/TabWindroseAxes.set_sketch_params.html", "_foxes/utils/TabWindroseAxes.set_snap.html", "_foxes/utils/TabWindroseAxes.set_subplotspec.html", "_foxes/utils/TabWindroseAxes.set_theta_direction.html", "_foxes/utils/TabWindroseAxes.set_theta_offset.html", "_foxes/utils/TabWindroseAxes.set_theta_zero_location.html", "_foxes/utils/TabWindroseAxes.set_thetagrids.html", "_foxes/utils/TabWindroseAxes.set_thetalim.html", "_foxes/utils/TabWindroseAxes.set_thetamax.html", "_foxes/utils/TabWindroseAxes.set_thetamin.html", "_foxes/utils/TabWindroseAxes.set_title.html", "_foxes/utils/TabWindroseAxes.set_transform.html", "_foxes/utils/TabWindroseAxes.set_url.html", "_foxes/utils/TabWindroseAxes.set_visible.html", "_foxes/utils/TabWindroseAxes.set_xbound.html", "_foxes/utils/TabWindroseAxes.set_xlabel.html", "_foxes/utils/TabWindroseAxes.set_xlim.html", "_foxes/utils/TabWindroseAxes.set_xmargin.html", "_foxes/utils/TabWindroseAxes.set_xscale.html", "_foxes/utils/TabWindroseAxes.set_xticklabels.html", "_foxes/utils/TabWindroseAxes.set_xticks.html", "_foxes/utils/TabWindroseAxes.set_ybound.html", "_foxes/utils/TabWindroseAxes.set_ylabel.html", "_foxes/utils/TabWindroseAxes.set_ylim.html", "_foxes/utils/TabWindroseAxes.set_ymargin.html", "_foxes/utils/TabWindroseAxes.set_yscale.html", "_foxes/utils/TabWindroseAxes.set_yticklabels.html", "_foxes/utils/TabWindroseAxes.set_yticks.html", "_foxes/utils/TabWindroseAxes.set_zorder.html", "_foxes/utils/TabWindroseAxes.sharex.html", "_foxes/utils/TabWindroseAxes.sharey.html", "_foxes/utils/TabWindroseAxes.specgram.html", "_foxes/utils/TabWindroseAxes.spy.html", "_foxes/utils/TabWindroseAxes.stackplot.html", "_foxes/utils/TabWindroseAxes.stairs.html", "_foxes/utils/TabWindroseAxes.stale.html", "_foxes/utils/TabWindroseAxes.start_pan.html", "_foxes/utils/TabWindroseAxes.stem.html", "_foxes/utils/TabWindroseAxes.step.html", "_foxes/utils/TabWindroseAxes.sticky_edges.html", "_foxes/utils/TabWindroseAxes.streamplot.html", "_foxes/utils/TabWindroseAxes.table.html", "_foxes/utils/TabWindroseAxes.tables.html", "_foxes/utils/TabWindroseAxes.text.html", "_foxes/utils/TabWindroseAxes.texts.html", "_foxes/utils/TabWindroseAxes.tick_params.html", "_foxes/utils/TabWindroseAxes.ticklabel_format.html", "_foxes/utils/TabWindroseAxes.tricontour.html", "_foxes/utils/TabWindroseAxes.tricontourf.html", "_foxes/utils/TabWindroseAxes.tripcolor.html", "_foxes/utils/TabWindroseAxes.triplot.html", "_foxes/utils/TabWindroseAxes.twinx.html", "_foxes/utils/TabWindroseAxes.twiny.html", "_foxes/utils/TabWindroseAxes.update.html", "_foxes/utils/TabWindroseAxes.update_datalim.html", "_foxes/utils/TabWindroseAxes.update_from.html", "_foxes/utils/TabWindroseAxes.use_sticky_edges.html", "_foxes/utils/TabWindroseAxes.viewLim.html", "_foxes/utils/TabWindroseAxes.violin.html", "_foxes/utils/TabWindroseAxes.violinplot.html", "_foxes/utils/TabWindroseAxes.vlines.html", "_foxes/utils/TabWindroseAxes.xaxis_date.html", "_foxes/utils/TabWindroseAxes.xaxis_inverted.html", "_foxes/utils/TabWindroseAxes.xcorr.html", "_foxes/utils/TabWindroseAxes.yaxis_date.html", "_foxes/utils/TabWindroseAxes.yaxis_inverted.html", "_foxes/utils/TabWindroseAxes.zorder.html", "_foxes/utils/abl/neutral/calc_ws.html", "_foxes/utils/abl/neutral/logz.html", "_foxes/utils/abl/neutral/ustar.html", "_foxes/utils/abl/sheared/calc_ws.html", "_foxes/utils/abl/stable/calc_ws.html", "_foxes/utils/abl/stable/lgz.html", "_foxes/utils/abl/stable/logz.html", "_foxes/utils/abl/stable/psi.html", "_foxes/utils/abl/stable/ustar.html", "_foxes/utils/abl/unstable/calc_ws.html", "_foxes/utils/abl/unstable/logz.html", "_foxes/utils/abl/unstable/psi.html", "_foxes/utils/abl/unstable/ustar.html", "_foxes/utils/all_subclasses.html", "_foxes/utils/cubic_roots.html", "_foxes/utils/delta_wd.html", "_foxes/utils/exec_python.html", "_foxes/utils/geom2d/AreaGeometry.html", "_foxes/utils/geom2d/AreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/AreaGeometry.inverse.html", "_foxes/utils/geom2d/AreaGeometry.p_max.html", "_foxes/utils/geom2d/AreaGeometry.p_min.html", "_foxes/utils/geom2d/AreaGeometry.points_distance.html", "_foxes/utils/geom2d/AreaGeometry.points_inside.html", "_foxes/utils/geom2d/AreaIntersection.html", "_foxes/utils/geom2d/AreaIntersection.__new__.html", "_foxes/utils/geom2d/AreaUnion.html", "_foxes/utils/geom2d/AreaUnion.__init__.html", "_foxes/utils/geom2d/AreaUnion.add_to_figure.html", "_foxes/utils/geom2d/AreaUnion.inverse.html", "_foxes/utils/geom2d/AreaUnion.p_max.html", "_foxes/utils/geom2d/AreaUnion.p_min.html", "_foxes/utils/geom2d/AreaUnion.points_distance.html", "_foxes/utils/geom2d/AreaUnion.points_inside.html", "_foxes/utils/geom2d/Circle.html", "_foxes/utils/geom2d/Circle.__init__.html", "_foxes/utils/geom2d/Circle.add_to_figure.html", "_foxes/utils/geom2d/Circle.p_max.html", "_foxes/utils/geom2d/Circle.p_min.html", "_foxes/utils/geom2d/Circle.points_distance.html", "_foxes/utils/geom2d/Circle.points_inside.html", "_foxes/utils/geom2d/ClosedPolygon.html", "_foxes/utils/geom2d/ClosedPolygon.__init__.html", "_foxes/utils/geom2d/ClosedPolygon.add_to_figure.html", "_foxes/utils/geom2d/ClosedPolygon.p_max.html", "_foxes/utils/geom2d/ClosedPolygon.p_min.html", "_foxes/utils/geom2d/ClosedPolygon.points_distance.html", "_foxes/utils/geom2d/ClosedPolygon.points_inside.html", "_foxes/utils/geom2d/HalfPlane.html", "_foxes/utils/geom2d/HalfPlane.__init__.html", "_foxes/utils/geom2d/HalfPlane.add_to_figure.html", "_foxes/utils/geom2d/HalfPlane.inverse.html", "_foxes/utils/geom2d/HalfPlane.p_max.html", "_foxes/utils/geom2d/HalfPlane.p_min.html", "_foxes/utils/geom2d/HalfPlane.points_distance.html", "_foxes/utils/geom2d/HalfPlane.points_inside.html", "_foxes/utils/geom2d/InvertedAreaGeometry.html", "_foxes/utils/geom2d/InvertedAreaGeometry.__init__.html", "_foxes/utils/geom2d/InvertedAreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/InvertedAreaGeometry.inverse.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_max.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_min.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_distance.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_inside.html", "_foxes/utils/import_module.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__init__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__str__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.ana_deriv.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.component_names.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialized.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_components.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_int.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.html", "_foxes/utils/opt/constraints/MinDistConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_individual.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_population.html", "_foxes/utils/opt/constraints/MinDistConstraint.initialize.html", "_foxes/utils/opt/constraints/MinDistConstraint.n_components.html", "_foxes/utils/opt/constraints/MinDistConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmConstraint.html", "_foxes/utils/opt/core/FarmConstraint.__init__.html", "_foxes/utils/opt/core/FarmConstraint.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmConstraint.calc_individual.html", "_foxes/utils/opt/core/FarmConstraint.calc_population.html", "_foxes/utils/opt/core/FarmConstraint.farm.html", "_foxes/utils/opt/core/FarmConstraint.n_components.html", "_foxes/utils/opt/core/FarmConstraint.n_sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.print_models.html", "_foxes/utils/opt/core/FarmConstraint.sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmObjective.html", "_foxes/utils/opt/core/FarmObjective.__init__.html", "_foxes/utils/opt/core/FarmObjective.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmObjective.farm.html", "_foxes/utils/opt/core/FarmObjective.n_sel_turbines.html", "_foxes/utils/opt/core/FarmObjective.print_models.html", "_foxes/utils/opt/core/FarmObjective.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.html", "_foxes/utils/opt/core/FarmOptProblem.INT_INF.html", "_foxes/utils/opt/core/FarmOptProblem.__init__.html", "_foxes/utils/opt/core/FarmOptProblem.add_constraint.html", "_foxes/utils/opt/core/FarmOptProblem.add_objective.html", "_foxes/utils/opt/core/FarmOptProblem.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmOptProblem.all_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.apply_individual.html", "_foxes/utils/opt/core/FarmOptProblem.apply_population.html", "_foxes/utils/opt/core/FarmOptProblem.calc_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_individual.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_population.html", "_foxes/utils/opt/core/FarmOptProblem.constraints_tol.html", "_foxes/utils/opt/core/FarmOptProblem.counter.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_individual.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_population.html", "_foxes/utils/opt/core/FarmOptProblem.farm.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_individual.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_population.html", "_foxes/utils/opt/core/FarmOptProblem.get_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.initialize.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.maximize_objs.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.n_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.n_objectives.html", "_foxes/utils/opt/core/FarmOptProblem.n_sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_float.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_int.html", "_foxes/utils/opt/core/FarmOptProblem.parse_tvar.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_individual.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_population.html", "_foxes/utils/opt/core/FarmOptProblem.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.tvar.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_population.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_float.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_int.html", "_foxes/utils/opt/core/FarmVarsProblem.html", "_foxes/utils/opt/core/FarmVarsProblem.initialize.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_population.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_population.html", "_foxes/utils/opt/core/PopStates.html", "_foxes/utils/opt/core/PopStates.__init__.html", "_foxes/utils/opt/core/PopStates.calculate.html", "_foxes/utils/opt/core/PopStates.initialize.html", "_foxes/utils/opt/core/PopStates.load_data.html", "_foxes/utils/opt/core/PopStates.output_point_vars.html", "_foxes/utils/opt/core/PopStates.size.html", "_foxes/utils/opt/core/PopStates.weights.html", "_foxes/utils/opt/objectives/FarmVarObjective.html", "_foxes/utils/opt/objectives/FarmVarObjective.__init__.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_population.html", "_foxes/utils/opt/objectives/FarmVarObjective.finalize_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.initialize.html", "_foxes/utils/opt/objectives/FarmVarObjective.maximize.html", "_foxes/utils/opt/objectives/FarmVarObjective.n_components.html", "_foxes/utils/opt/objectives/FarmVarObjective.vardeps_float.html", "_foxes/utils/opt/objectives/MaxFarmPower.html", "_foxes/utils/opt/objectives/MaxFarmPower.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.html", "_foxes/utils/opt/objectives/MaxNTurbines.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_individual.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_population.html", "_foxes/utils/opt/objectives/MaxNTurbines.maximize.html", "_foxes/utils/opt/objectives/MaxNTurbines.n_components.html", "_foxes/utils/opt/objectives/MinimalMaxTI.html", "_foxes/utils/opt/objectives/MinimalMaxTI.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.html", "_foxes/utils/opt/problems/OptFarmVars.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.add_var.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.initialize.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_population.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_float.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.get_bounds.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintscdist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivescdist.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_int.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_int.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.ANGLE.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.var_names_float.html", "_foxes/utils/read_shp.html", "_foxes/utils/read_shp_polygons.html", "_foxes/utils/runners/DaskRunner.html", "_foxes/utils/runners/DaskRunner.__init__.html", "_foxes/utils/runners/DaskRunner.finalize.html", "_foxes/utils/runners/DaskRunner.initialize.html", "_foxes/utils/runners/DaskRunner.is_distributed.html", "_foxes/utils/runners/DaskRunner.print.html", "_foxes/utils/runners/DaskRunner.run.html", "_foxes/utils/runners/DefaultRunner.html", "_foxes/utils/runners/DefaultRunner.run.html", "_foxes/utils/runners/Runner.html", "_foxes/utils/runners/Runner.__init__.html", "_foxes/utils/runners/Runner.finalize.html", "_foxes/utils/runners/Runner.initialize.html", "_foxes/utils/runners/Runner.initialized.html", "_foxes/utils/runners/Runner.run.html", "_foxes/utils/shp2csv.html", "_foxes/utils/shp2geom2d.html", "_foxes/utils/sqrt_reg.html", "_foxes/utils/two_circles/area.html", "_foxes/utils/two_circles/calc_area.html", "_foxes/utils/uv2wd.html", "_foxes/utils/wd2uv.html", "_foxes/utils/wd2wdvec.html", "_foxes/utils/wdvec2wd.html", "_foxes/utils/write_nc.html", "_foxes/variables/AMB_CAP.html", "_foxes/variables/AMB_CT.html", "_foxes/variables/AMB_P.html", "_foxes/variables/AMB_REWS.html", "_foxes/variables/AMB_REWS2.html", "_foxes/variables/AMB_REWS3.html", "_foxes/variables/AMB_RHO.html", "_foxes/variables/AMB_T.html", "_foxes/variables/AMB_TI.html", "_foxes/variables/AMB_WD.html", "_foxes/variables/AMB_WS.html", "_foxes/variables/AMB_YAW.html", "_foxes/variables/AMB_YAWM.html", "_foxes/variables/AMB_YLD.html", "_foxes/variables/CAP.html", "_foxes/variables/CT.html", "_foxes/variables/D.html", "_foxes/variables/EFF.html", "_foxes/variables/H.html", "_foxes/variables/K.html", "_foxes/variables/KB.html", "_foxes/variables/KTI.html", "_foxes/variables/MAX_P.html", "_foxes/variables/MOL.html", "_foxes/variables/ORDER.html", "_foxes/variables/P.html", "_foxes/variables/PA_ALPHA.html", "_foxes/variables/PA_BETA.html", "_foxes/variables/REWS.html", "_foxes/variables/REWS2.html", "_foxes/variables/REWS3.html", "_foxes/variables/RHO.html", "_foxes/variables/SHEAR.html", "_foxes/variables/T.html", "_foxes/variables/TI.html", "_foxes/variables/TXYH.html", "_foxes/variables/WD.html", "_foxes/variables/WEIGHT.html", "_foxes/variables/WS.html", "_foxes/variables/X.html", "_foxes/variables/Y.html", "_foxes/variables/YAW.html", "_foxes/variables/YAWM.html", "_foxes/variables/YLD.html", "_foxes/variables/Z0.html", "_foxes/variables/amb2var.html", "_foxes/variables/var2amb.html", "api.html", "api_algorithms.html", "api_algorithms_downwind.html", "api_algorithms_iterative.html", "api_algorithms_sequential.html", "api_constants.html", "api_core.html", "api_data.html", "api_foxes.html", "api_input.html", "api_models.html", "api_opt.html", "api_opt_problems.html", "api_opt_problems_geom.html", "api_output.html", "api_utils.html", "api_utils_abl.html", "api_variables.html", "api_wake_models.html", "citation.html", "examples.html", "history.html", "index.html", "installation.html", "notebooks/blockage_comparison.html", "notebooks/blockage_farm.html", "notebooks/data.html", "notebooks/heterogeneous.html", "notebooks/layout_opt.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/overview.html", "notebooks/power_mask.html", "notebooks/sector_man.html", "notebooks/sequential.html", "notebooks/single_row.html", "notebooks/timelines.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html", "testing.html"]})