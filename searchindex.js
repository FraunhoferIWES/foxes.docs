Search.setIndex({"titles": ["foxes.algorithms.Downwind", "foxes.algorithms.Downwind.__init__", "foxes.algorithms.Downwind.all_models", "foxes.algorithms.Downwind.calc_farm", "foxes.algorithms.Downwind.calc_points", "foxes.algorithms.Downwind.finalize", "foxes.algorithms.Downwind.get_model", "foxes.algorithms.Downwind.init_states", "foxes.algorithms.Downwind.initialize", "foxes.algorithms.Iterative", "foxes.algorithms.Iterative.__init__", "foxes.algorithms.Iterative.calc_farm", "foxes.algorithms.Iterative.get_model", "foxes.algorithms.Iterative.iterations", "foxes.algorithms.Iterative.set_urelax", "foxes.algorithms.Iterative.urelax", "foxes.algorithms.Sequential", "foxes.algorithms.Sequential.__init__", "foxes.algorithms.Sequential.__iter__", "foxes.algorithms.Sequential.__next__", "foxes.algorithms.Sequential.calc_farm", "foxes.algorithms.Sequential.calc_points", "foxes.algorithms.Sequential.counter", "foxes.algorithms.Sequential.cur_farm_results", "foxes.algorithms.Sequential.cur_point_results", "foxes.algorithms.Sequential.farm_results", "foxes.algorithms.Sequential.fdata", "foxes.algorithms.Sequential.get_model", "foxes.algorithms.Sequential.index", "foxes.algorithms.Sequential.iterating", "foxes.algorithms.Sequential.mdata", "foxes.algorithms.Sequential.pdata", "foxes.algorithms.Sequential.point_results", "foxes.algorithms.Sequential.size", "foxes.algorithms.Sequential.weight", "foxes.algorithms.downwind.models.CalcOrder", "foxes.algorithms.downwind.models.CalcOrder.calculate", "foxes.algorithms.downwind.models.CalcOrder.initialize", "foxes.algorithms.downwind.models.CalcOrder.output_farm_vars", "foxes.algorithms.downwind.models.CalcOrder.sub_models", "foxes.algorithms.downwind.models.FarmWakesCalculation", "foxes.algorithms.downwind.models.FarmWakesCalculation.__init__", "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate", "foxes.algorithms.downwind.models.FarmWakesCalculation.initialize", "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.downwind.models.FarmWakesCalculation.sub_models", "foxes.algorithms.downwind.models.PointWakesCalculation", "foxes.algorithms.downwind.models.PointWakesCalculation.__init__", "foxes.algorithms.downwind.models.PointWakesCalculation.calculate", "foxes.algorithms.downwind.models.PointWakesCalculation.contribute_to_wake_deltas", "foxes.algorithms.downwind.models.PointWakesCalculation.initialize", "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars", "foxes.algorithms.downwind.models.PointWakesCalculation.sub_models", "foxes.algorithms.downwind.models.SetAmbFarmResults", "foxes.algorithms.downwind.models.SetAmbFarmResults.__init__", "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate", "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbPointResults", "foxes.algorithms.downwind.models.SetAmbPointResults.__init__", "foxes.algorithms.downwind.models.SetAmbPointResults.calculate", "foxes.algorithms.downwind.models.SetAmbPointResults.initialize", "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars", "foxes.algorithms.iterative.ConvCrit", "foxes.algorithms.iterative.ConvCrit.__init__", "foxes.algorithms.iterative.ConvCrit.check_converged", "foxes.algorithms.iterative.ConvCrit.get_deltas", "foxes.algorithms.iterative.ConvCritList", "foxes.algorithms.iterative.ConvCritList.__init__", "foxes.algorithms.iterative.ConvCritList.add_crit", "foxes.algorithms.iterative.ConvCritList.check_converged", "foxes.algorithms.iterative.ConvCritList.get_deltas", "foxes.algorithms.iterative.ConvVarDelta", "foxes.algorithms.iterative.ConvVarDelta.__init__", "foxes.algorithms.iterative.ConvVarDelta.check_converged", "foxes.algorithms.iterative.ConvVarDelta.get_deltas", "foxes.algorithms.iterative.DefaultConv", "foxes.algorithms.iterative.DefaultConv.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation", "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate", "foxes.algorithms.iterative.models.FarmWakesCalculation.initialize", "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.iterative.models.FarmWakesCalculation.sub_models", "foxes.algorithms.iterative.models.URelax", "foxes.algorithms.iterative.models.URelax.__init__", "foxes.algorithms.iterative.models.URelax.calculate", "foxes.algorithms.iterative.models.URelax.output_farm_vars", "foxes.algorithms.sequential.SequentialPlugin", "foxes.algorithms.sequential.SequentialPlugin.__init__", "foxes.algorithms.sequential.SequentialPlugin.finalize", "foxes.algorithms.sequential.SequentialPlugin.initialize", "foxes.algorithms.sequential.SequentialPlugin.update", "foxes.algorithms.sequential.models.SeqState", "foxes.algorithms.sequential.models.SeqState.__init__", "foxes.algorithms.sequential.models.SeqState.calculate", "foxes.algorithms.sequential.models.SeqState.counter", "foxes.algorithms.sequential.models.SeqState.index", "foxes.algorithms.sequential.models.SeqState.initialize", "foxes.algorithms.sequential.models.SeqState.output_point_vars", "foxes.algorithms.sequential.models.SeqState.size", "foxes.algorithms.sequential.models.SeqState.sub_models", "foxes.algorithms.sequential.models.SeqState.weights", "foxes.constants.AMB_RPOINT_RESULTS", "foxes.constants.DTYPE", "foxes.constants.DTYPE.T", "foxes.constants.DTYPE.__abs__", "foxes.constants.DTYPE.__add__", "foxes.constants.DTYPE.__and__", "foxes.constants.DTYPE.__array__", "foxes.constants.DTYPE.__array_interface__", "foxes.constants.DTYPE.__array_priority__", "foxes.constants.DTYPE.__array_struct__", "foxes.constants.DTYPE.__array_wrap__", "foxes.constants.DTYPE.__bool__", "foxes.constants.DTYPE.__class_getitem__", "foxes.constants.DTYPE.__divmod__", "foxes.constants.DTYPE.__eq__", "foxes.constants.DTYPE.__float__", "foxes.constants.DTYPE.__floordiv__", "foxes.constants.DTYPE.__format__", "foxes.constants.DTYPE.__ge__", "foxes.constants.DTYPE.__getitem__", "foxes.constants.DTYPE.__gt__", "foxes.constants.DTYPE.__hash__", "foxes.constants.DTYPE.__int__", "foxes.constants.DTYPE.__invert__", "foxes.constants.DTYPE.__le__", "foxes.constants.DTYPE.__lshift__", "foxes.constants.DTYPE.__lt__", "foxes.constants.DTYPE.__mod__", "foxes.constants.DTYPE.__mul__", "foxes.constants.DTYPE.__ne__", "foxes.constants.DTYPE.__neg__", "foxes.constants.DTYPE.__new__", "foxes.constants.DTYPE.__or__", "foxes.constants.DTYPE.__pos__", "foxes.constants.DTYPE.__pow__", "foxes.constants.DTYPE.__radd__", "foxes.constants.DTYPE.__rand__", "foxes.constants.DTYPE.__rdivmod__", "foxes.constants.DTYPE.__reduce__", "foxes.constants.DTYPE.__repr__", "foxes.constants.DTYPE.__rfloordiv__", "foxes.constants.DTYPE.__rlshift__", "foxes.constants.DTYPE.__rmod__", "foxes.constants.DTYPE.__rmul__", "foxes.constants.DTYPE.__ror__", "foxes.constants.DTYPE.__rpow__", "foxes.constants.DTYPE.__rrshift__", "foxes.constants.DTYPE.__rshift__", "foxes.constants.DTYPE.__rsub__", "foxes.constants.DTYPE.__rtruediv__", "foxes.constants.DTYPE.__rxor__", "foxes.constants.DTYPE.__sizeof__", "foxes.constants.DTYPE.__str__", "foxes.constants.DTYPE.__sub__", "foxes.constants.DTYPE.__truediv__", "foxes.constants.DTYPE.__xor__", "foxes.constants.DTYPE.all", "foxes.constants.DTYPE.any", "foxes.constants.DTYPE.argmax", "foxes.constants.DTYPE.argmin", "foxes.constants.DTYPE.argsort", "foxes.constants.DTYPE.as_integer_ratio", "foxes.constants.DTYPE.astype", "foxes.constants.DTYPE.base", "foxes.constants.DTYPE.byteswap", "foxes.constants.DTYPE.choose", "foxes.constants.DTYPE.clip", "foxes.constants.DTYPE.compress", "foxes.constants.DTYPE.conj", "foxes.constants.DTYPE.conjugate", "foxes.constants.DTYPE.copy", "foxes.constants.DTYPE.cumprod", "foxes.constants.DTYPE.cumsum", "foxes.constants.DTYPE.data", "foxes.constants.DTYPE.diagonal", "foxes.constants.DTYPE.dtype", "foxes.constants.DTYPE.dump", "foxes.constants.DTYPE.dumps", "foxes.constants.DTYPE.fill", "foxes.constants.DTYPE.flags", "foxes.constants.DTYPE.flat", "foxes.constants.DTYPE.flatten", "foxes.constants.DTYPE.getfield", "foxes.constants.DTYPE.imag", "foxes.constants.DTYPE.is_integer", "foxes.constants.DTYPE.item", "foxes.constants.DTYPE.itemset", "foxes.constants.DTYPE.itemsize", "foxes.constants.DTYPE.max", "foxes.constants.DTYPE.mean", "foxes.constants.DTYPE.min", "foxes.constants.DTYPE.nbytes", "foxes.constants.DTYPE.ndim", "foxes.constants.DTYPE.newbyteorder", "foxes.constants.DTYPE.nonzero", "foxes.constants.DTYPE.prod", "foxes.constants.DTYPE.ptp", "foxes.constants.DTYPE.put", "foxes.constants.DTYPE.ravel", "foxes.constants.DTYPE.real", "foxes.constants.DTYPE.repeat", "foxes.constants.DTYPE.reshape", "foxes.constants.DTYPE.resize", "foxes.constants.DTYPE.round", "foxes.constants.DTYPE.searchsorted", "foxes.constants.DTYPE.setfield", "foxes.constants.DTYPE.setflags", "foxes.constants.DTYPE.shape", "foxes.constants.DTYPE.size", "foxes.constants.DTYPE.sort", "foxes.constants.DTYPE.squeeze", "foxes.constants.DTYPE.std", "foxes.constants.DTYPE.strides", "foxes.constants.DTYPE.sum", "foxes.constants.DTYPE.swapaxes", "foxes.constants.DTYPE.take", "foxes.constants.DTYPE.tobytes", "foxes.constants.DTYPE.tofile", "foxes.constants.DTYPE.tolist", "foxes.constants.DTYPE.tostring", "foxes.constants.DTYPE.trace", "foxes.constants.DTYPE.transpose", "foxes.constants.DTYPE.var", "foxes.constants.DTYPE.view", "foxes.constants.FARM", "foxes.constants.GW", "foxes.constants.ITYPE", "foxes.constants.ITYPE.__abs__", "foxes.constants.ITYPE.__add__", "foxes.constants.ITYPE.__and__", "foxes.constants.ITYPE.__bool__", "foxes.constants.ITYPE.__class_getitem__", "foxes.constants.ITYPE.__divmod__", "foxes.constants.ITYPE.__eq__", "foxes.constants.ITYPE.__float__", "foxes.constants.ITYPE.__floordiv__", "foxes.constants.ITYPE.__ge__", "foxes.constants.ITYPE.__gt__", "foxes.constants.ITYPE.__hash__", "foxes.constants.ITYPE.__index__", "foxes.constants.ITYPE.__int__", "foxes.constants.ITYPE.__invert__", "foxes.constants.ITYPE.__le__", "foxes.constants.ITYPE.__lshift__", "foxes.constants.ITYPE.__lt__", "foxes.constants.ITYPE.__mod__", "foxes.constants.ITYPE.__mul__", "foxes.constants.ITYPE.__ne__", "foxes.constants.ITYPE.__neg__", "foxes.constants.ITYPE.__new__", "foxes.constants.ITYPE.__or__", "foxes.constants.ITYPE.__pos__", "foxes.constants.ITYPE.__pow__", "foxes.constants.ITYPE.__radd__", "foxes.constants.ITYPE.__rand__", "foxes.constants.ITYPE.__rdivmod__", "foxes.constants.ITYPE.__repr__", "foxes.constants.ITYPE.__rfloordiv__", "foxes.constants.ITYPE.__rlshift__", "foxes.constants.ITYPE.__rmod__", "foxes.constants.ITYPE.__rmul__", "foxes.constants.ITYPE.__ror__", "foxes.constants.ITYPE.__rpow__", "foxes.constants.ITYPE.__rrshift__", "foxes.constants.ITYPE.__rshift__", "foxes.constants.ITYPE.__rsub__", "foxes.constants.ITYPE.__rtruediv__", "foxes.constants.ITYPE.__rxor__", "foxes.constants.ITYPE.__str__", "foxes.constants.ITYPE.__sub__", "foxes.constants.ITYPE.__truediv__", "foxes.constants.ITYPE.__xor__", "foxes.constants.ITYPE.bit_count", "foxes.constants.ITYPE.denominator", "foxes.constants.ITYPE.is_integer", "foxes.constants.ITYPE.numerator", "foxes.constants.KAPPA", "foxes.constants.MW", "foxes.constants.POINT", "foxes.constants.POINTS", "foxes.constants.POP", "foxes.constants.P_UNITS", "foxes.constants.RPOINT", "foxes.constants.RPOINTS", "foxes.constants.RWEIGHTS", "foxes.constants.STATE", "foxes.constants.STATES_SEL", "foxes.constants.STATE_POINT", "foxes.constants.STATE_SOURCE_TURBINE", "foxes.constants.STATE_TURBINE", "foxes.constants.TMODELS", "foxes.constants.TMODEL_SELS", "foxes.constants.TNAME", "foxes.constants.TURBINE", "foxes.constants.TW", "foxes.constants.VALID", "foxes.constants.VARS", "foxes.constants.W", "foxes.constants.XYH", "foxes.constants.kW", "foxes.core.Algorithm", "foxes.core.Algorithm.__init__", "foxes.core.Algorithm.chunked", "foxes.core.Algorithm.del_model_data", "foxes.core.Algorithm.finalize", "foxes.core.Algorithm.get_model_data", "foxes.core.Algorithm.get_models_data", "foxes.core.Algorithm.get_models_idata", "foxes.core.Algorithm.idata_mem", "foxes.core.Algorithm.initialize", "foxes.core.Algorithm.new", "foxes.core.Algorithm.new_point_data", "foxes.core.Algorithm.print", "foxes.core.Algorithm.store_model_data", "foxes.core.Algorithm.update_n_turbines", "foxes.core.AxialInductionModel", "foxes.core.AxialInductionModel.ct2a", "foxes.core.Data", "foxes.core.Data.__init__", "foxes.core.Data.add", "foxes.core.Data.from_points", "foxes.core.Data.n_points", "foxes.core.Data.n_states", "foxes.core.Data.n_turbines", "foxes.core.Data.states_i0", "foxes.core.DataCalcModel", "foxes.core.DataCalcModel.calculate", "foxes.core.DataCalcModel.run_calculation", "foxes.core.ExtendedStates", "foxes.core.ExtendedStates.__init__", "foxes.core.ExtendedStates.append", "foxes.core.ExtendedStates.calculate", "foxes.core.ExtendedStates.index", "foxes.core.ExtendedStates.output_point_vars", "foxes.core.ExtendedStates.size", "foxes.core.ExtendedStates.sub_models", "foxes.core.ExtendedStates.weights", "foxes.core.FarmController", "foxes.core.FarmController.__init__", "foxes.core.FarmController.calculate", "foxes.core.FarmController.collect_models", "foxes.core.FarmController.finalize", "foxes.core.FarmController.initialize", "foxes.core.FarmController.load_data", "foxes.core.FarmController.output_farm_vars", "foxes.core.FarmController.set_pars", "foxes.core.FarmController.sub_models", "foxes.core.FarmDataModel", "foxes.core.FarmDataModel.__init__", "foxes.core.FarmDataModel.calculate", "foxes.core.FarmDataModel.output_farm_vars", "foxes.core.FarmDataModel.run_calculation", "foxes.core.FarmDataModelList", "foxes.core.FarmDataModelList.__init__", "foxes.core.FarmDataModelList.append", "foxes.core.FarmDataModelList.calculate", "foxes.core.FarmDataModelList.insert", "foxes.core.FarmDataModelList.output_farm_vars", "foxes.core.FarmDataModelList.sub_models", "foxes.core.FarmModel", "foxes.core.Model", "foxes.core.Model.__init__", "foxes.core.Model.__repr__", "foxes.core.Model.data_to_store", "foxes.core.Model.finalize", "foxes.core.Model.from_data_or_store", "foxes.core.Model.get_data", "foxes.core.Model.initialize", "foxes.core.Model.initialized", "foxes.core.Model.load_data", "foxes.core.Model.model_id", "foxes.core.Model.sub_models", "foxes.core.Model.var", "foxes.core.PartialWakesModel", "foxes.core.PartialWakesModel.__init__", "foxes.core.PartialWakesModel.contribute_to_wake_deltas", "foxes.core.PartialWakesModel.evaluate_results", "foxes.core.PartialWakesModel.initialize", "foxes.core.PartialWakesModel.new", "foxes.core.PartialWakesModel.new_wake_deltas", "foxes.core.PartialWakesModel.sub_models", "foxes.core.PointDataModel", "foxes.core.PointDataModel.calculate", "foxes.core.PointDataModel.output_point_vars", "foxes.core.PointDataModel.run_calculation", "foxes.core.PointDataModelList", "foxes.core.PointDataModelList.__init__", "foxes.core.PointDataModelList.append", "foxes.core.PointDataModelList.calculate", "foxes.core.PointDataModelList.output_point_vars", "foxes.core.PointDataModelList.sub_models", "foxes.core.RotorModel", "foxes.core.RotorModel.__init__", "foxes.core.RotorModel.calculate", "foxes.core.RotorModel.design_points", "foxes.core.RotorModel.eval_rpoint_results", "foxes.core.RotorModel.get_rotor_points", "foxes.core.RotorModel.n_rotor_points", "foxes.core.RotorModel.new", "foxes.core.RotorModel.output_farm_vars", "foxes.core.RotorModel.rotor_point_weights", "foxes.core.States", "foxes.core.States.index", "foxes.core.States.load_data", "foxes.core.States.output_point_vars", "foxes.core.States.size", "foxes.core.States.weights", "foxes.core.Turbine", "foxes.core.Turbine.__init__", "foxes.core.Turbine.add_model", "foxes.core.Turbine.insert_model", "foxes.core.TurbineModel", "foxes.core.TurbineModel.calculate", "foxes.core.TurbineModel.new", "foxes.core.TurbineType", "foxes.core.TurbineType.__init__", "foxes.core.TurbineType.new", "foxes.core.VerticalProfile", "foxes.core.VerticalProfile.calculate", "foxes.core.VerticalProfile.input_vars", "foxes.core.VerticalProfile.new", "foxes.core.WakeFrame", "foxes.core.WakeFrame.calc_centreline_integral", "foxes.core.WakeFrame.calc_order", "foxes.core.WakeFrame.get_centreline_points", "foxes.core.WakeFrame.get_wake_coos", "foxes.core.WakeFrame.get_wake_modelling_data", "foxes.core.WakeFrame.new", "foxes.core.WakeModel", "foxes.core.WakeModel.contribute_to_wake_deltas", "foxes.core.WakeModel.finalize_wake_deltas", "foxes.core.WakeModel.init_wake_deltas", "foxes.core.WakeModel.new", "foxes.core.WakeSuperposition", "foxes.core.WakeSuperposition.calc_final_wake_delta", "foxes.core.WakeSuperposition.calc_wakes_plus_wake", "foxes.core.WindFarm", "foxes.core.WindFarm.__init__", "foxes.core.WindFarm.add_turbine", "foxes.core.WindFarm.n_turbines", "foxes.core.WindFarm.turbine_names", "foxes.data.StaticData", "foxes.data.StaticData.__init__", "foxes.data.parse_Pct_file_name", "foxes.data.parse_Pct_two_files", "foxes.input.farm_layout.add_from_csv", "foxes.input.farm_layout.add_from_df", "foxes.input.farm_layout.add_from_file", "foxes.input.farm_layout.add_from_json", "foxes.input.farm_layout.add_grid", "foxes.input.farm_layout.add_random", "foxes.input.farm_layout.add_row", "foxes.input.states.FieldDataNC", "foxes.input.states.FieldDataNC.__init__", "foxes.input.states.FieldDataNC.calculate", "foxes.input.states.FieldDataNC.index", "foxes.input.states.FieldDataNC.load_data", "foxes.input.states.FieldDataNC.output_point_vars", "foxes.input.states.FieldDataNC.size", "foxes.input.states.FieldDataNC.weights", "foxes.input.states.MultiHeightStates", "foxes.input.states.MultiHeightStates.RDICT", "foxes.input.states.MultiHeightStates.__init__", "foxes.input.states.MultiHeightStates.calculate", "foxes.input.states.MultiHeightStates.finalize", "foxes.input.states.MultiHeightStates.index", "foxes.input.states.MultiHeightStates.load_data", "foxes.input.states.MultiHeightStates.output_point_vars", "foxes.input.states.MultiHeightStates.reset", "foxes.input.states.MultiHeightStates.size", "foxes.input.states.MultiHeightStates.weights", "foxes.input.states.MultiHeightTimeseries", "foxes.input.states.MultiHeightTimeseries.RDICT", "foxes.input.states.ScanWS", "foxes.input.states.ScanWS.__init__", "foxes.input.states.ScanWS.calculate", "foxes.input.states.ScanWS.load_data", "foxes.input.states.ScanWS.output_point_vars", "foxes.input.states.ScanWS.size", "foxes.input.states.ScanWS.weights", "foxes.input.states.SingleStateStates", "foxes.input.states.SingleStateStates.__init__", "foxes.input.states.SingleStateStates.calculate", "foxes.input.states.SingleStateStates.initialize", "foxes.input.states.SingleStateStates.output_point_vars", "foxes.input.states.SingleStateStates.size", "foxes.input.states.SingleStateStates.sub_models", "foxes.input.states.SingleStateStates.weights", "foxes.input.states.StatesTable", "foxes.input.states.StatesTable.RDICT", "foxes.input.states.StatesTable.__init__", "foxes.input.states.StatesTable.calculate", "foxes.input.states.StatesTable.finalize", "foxes.input.states.StatesTable.index", "foxes.input.states.StatesTable.initialize", "foxes.input.states.StatesTable.load_data", "foxes.input.states.StatesTable.output_point_vars", "foxes.input.states.StatesTable.reset", "foxes.input.states.StatesTable.size", "foxes.input.states.StatesTable.sub_models", "foxes.input.states.StatesTable.weights", "foxes.input.states.TabStates", "foxes.input.states.TabStates.__init__", "foxes.input.states.TabStates.load_data", "foxes.input.states.Timeseries", "foxes.input.states.Timeseries.RDICT", "foxes.input.states.create.create_random_abl_states", "foxes.input.states.create.random_timseries_data", "foxes.input.states.create.write_random_abl_states", "foxes.input.windio.read_case", "foxes.models.axial_induction_models.BetzAxialInduction", "foxes.models.axial_induction_models.BetzAxialInduction.__init__", "foxes.models.axial_induction_models.BetzAxialInduction.ct2a", "foxes.models.axial_induction_models.MadsenAxialInduction", "foxes.models.axial_induction_models.MadsenAxialInduction.__init__", "foxes.models.axial_induction_models.MadsenAxialInduction.ct2a", "foxes.models.farm_controllers.BasicFarmController", "foxes.models.farm_models.Turbine2FarmModel", "foxes.models.farm_models.Turbine2FarmModel.__init__", "foxes.models.farm_models.Turbine2FarmModel.__repr__", "foxes.models.farm_models.Turbine2FarmModel.calculate", "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars", "foxes.models.farm_models.Turbine2FarmModel.sub_models", "foxes.models.model_book.Dict", "foxes.models.model_book.Dict.__getitem__", "foxes.models.model_book.Dict.__init__", "foxes.models.model_book.ModelBook", "foxes.models.model_book.ModelBook.__getitem__", "foxes.models.model_book.ModelBook.__init__", "foxes.models.model_book.ModelBook.finalize", "foxes.models.model_book.ModelBook.get", "foxes.models.model_book.ModelBook.print_toc", "foxes.models.partial_wakes.Mapped", "foxes.models.partial_wakes.Mapped.__init__", "foxes.models.partial_wakes.Mapped.contribute_to_wake_deltas", "foxes.models.partial_wakes.Mapped.evaluate_results", "foxes.models.partial_wakes.Mapped.initialize", "foxes.models.partial_wakes.Mapped.new_wake_deltas", "foxes.models.partial_wakes.Mapped.sub_models", "foxes.models.partial_wakes.PartialAxiwake", "foxes.models.partial_wakes.PartialAxiwake.__init__", "foxes.models.partial_wakes.PartialAxiwake.__repr__", "foxes.models.partial_wakes.PartialAxiwake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.evaluate_results", "foxes.models.partial_wakes.PartialAxiwake.initialize", "foxes.models.partial_wakes.PartialAxiwake.new_wake_deltas", "foxes.models.partial_wakes.PartialAxiwake.sub_models", "foxes.models.partial_wakes.PartialCentre", "foxes.models.partial_wakes.PartialCentre.evaluate_results", "foxes.models.partial_wakes.PartialCentre.get_wake_points", "foxes.models.partial_wakes.PartialDistSlicedWake", "foxes.models.partial_wakes.PartialDistSlicedWake.__init__", "foxes.models.partial_wakes.PartialDistSlicedWake.__repr__", "foxes.models.partial_wakes.PartialDistSlicedWake.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.evaluate_results", "foxes.models.partial_wakes.PartialDistSlicedWake.initialize", "foxes.models.partial_wakes.PartialDistSlicedWake.new_wake_deltas", "foxes.models.partial_wakes.PartialDistSlicedWake.sub_models", "foxes.models.partial_wakes.PartialGrid", "foxes.models.partial_wakes.PartialGrid.__init__", "foxes.models.partial_wakes.PartialGrid.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat", "foxes.models.partial_wakes.PartialTopHat.__init__", "foxes.models.partial_wakes.PartialTopHat.contribute_to_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.evaluate_results", "foxes.models.partial_wakes.PartialTopHat.initialize", "foxes.models.partial_wakes.PartialTopHat.new_wake_deltas", "foxes.models.partial_wakes.PartialTopHat.sub_models", "foxes.models.partial_wakes.RotorPoints", "foxes.models.partial_wakes.RotorPoints.__init__", "foxes.models.partial_wakes.RotorPoints.contribute_to_wake_deltas", "foxes.models.partial_wakes.RotorPoints.evaluate_results", "foxes.models.partial_wakes.RotorPoints.get_wake_points", "foxes.models.partial_wakes.RotorPoints.new_wake_deltas", "foxes.models.point_models.SetUniformData", "foxes.models.point_models.SetUniformData.__init__", "foxes.models.point_models.SetUniformData.calculate", "foxes.models.point_models.SetUniformData.load_data", "foxes.models.point_models.SetUniformData.output_point_vars", "foxes.models.point_models.TKE2TI", "foxes.models.point_models.TKE2TI.calculate", "foxes.models.point_models.TKE2TI.output_point_vars", "foxes.models.point_models.WakeDeltas", "foxes.models.point_models.WakeDeltas.__init__", "foxes.models.point_models.WakeDeltas.calculate", "foxes.models.point_models.WakeDeltas.output_point_vars", "foxes.models.rotor_models.CentreRotor", "foxes.models.rotor_models.CentreRotor.design_points", "foxes.models.rotor_models.CentreRotor.eval_rpoint_results", "foxes.models.rotor_models.CentreRotor.get_rotor_points", "foxes.models.rotor_models.CentreRotor.n_rotor_points", "foxes.models.rotor_models.CentreRotor.rotor_point_weights", "foxes.models.rotor_models.GridRotor", "foxes.models.rotor_models.GridRotor.__init__", "foxes.models.rotor_models.GridRotor.__repr__", "foxes.models.rotor_models.GridRotor.design_points", "foxes.models.rotor_models.GridRotor.initialize", "foxes.models.rotor_models.GridRotor.n_rotor_points", "foxes.models.rotor_models.GridRotor.rotor_point_weights", "foxes.models.rotor_models.LevelRotor", "foxes.models.rotor_models.LevelRotor.__init__", "foxes.models.rotor_models.LevelRotor.__repr__", "foxes.models.rotor_models.LevelRotor.design_points", "foxes.models.rotor_models.LevelRotor.initialize", "foxes.models.rotor_models.LevelRotor.n_rotor_points", "foxes.models.rotor_models.LevelRotor.rotor_point_weights", "foxes.models.turbine_models.Calculator", "foxes.models.turbine_models.Calculator.__init__", "foxes.models.turbine_models.Calculator.calculate", "foxes.models.turbine_models.Calculator.output_farm_vars", "foxes.models.turbine_models.LookupTable", "foxes.models.turbine_models.LookupTable.__init__", "foxes.models.turbine_models.LookupTable.calculate", "foxes.models.turbine_models.LookupTable.load_data", "foxes.models.turbine_models.LookupTable.output_farm_vars", "foxes.models.turbine_models.PowerMask", "foxes.models.turbine_models.PowerMask.__init__", "foxes.models.turbine_models.PowerMask.calculate", "foxes.models.turbine_models.PowerMask.initialize", "foxes.models.turbine_models.PowerMask.output_farm_vars", "foxes.models.turbine_models.PowerMask.update_P_ct", "foxes.models.turbine_models.RotorCentreCalc", "foxes.models.turbine_models.RotorCentreCalc.__init__", "foxes.models.turbine_models.RotorCentreCalc.calculate", "foxes.models.turbine_models.RotorCentreCalc.initialize", "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars", "foxes.models.turbine_models.RotorCentreCalc.sub_models", "foxes.models.turbine_models.SectorManagement", "foxes.models.turbine_models.SectorManagement.__init__", "foxes.models.turbine_models.SectorManagement.calculate", "foxes.models.turbine_models.SectorManagement.initialize", "foxes.models.turbine_models.SectorManagement.output_farm_vars", "foxes.models.turbine_models.SetFarmVars", "foxes.models.turbine_models.SetFarmVars.__init__", "foxes.models.turbine_models.SetFarmVars.add_var", "foxes.models.turbine_models.SetFarmVars.calculate", "foxes.models.turbine_models.SetFarmVars.load_data", "foxes.models.turbine_models.SetFarmVars.output_farm_vars", "foxes.models.turbine_models.SetFarmVars.reset", "foxes.models.turbine_models.SetXYHD", "foxes.models.turbine_models.SetXYHD.__init__", "foxes.models.turbine_models.SetXYHD.calculate", "foxes.models.turbine_models.SetXYHD.output_farm_vars", "foxes.models.turbine_models.TableFactors", "foxes.models.turbine_models.TableFactors.__init__", "foxes.models.turbine_models.TableFactors.calculate", "foxes.models.turbine_models.TableFactors.initialize", "foxes.models.turbine_models.TableFactors.output_farm_vars", "foxes.models.turbine_models.Thrust2Ct", "foxes.models.turbine_models.Thrust2Ct.__init__", "foxes.models.turbine_models.Thrust2Ct.calculate", "foxes.models.turbine_models.Thrust2Ct.output_farm_vars", "foxes.models.turbine_models.YAW2YAWM", "foxes.models.turbine_models.YAW2YAWM.calculate", "foxes.models.turbine_models.YAW2YAWM.output_farm_vars", "foxes.models.turbine_models.YAWM2YAW", "foxes.models.turbine_models.YAWM2YAW.calculate", "foxes.models.turbine_models.YAWM2YAW.output_farm_vars", "foxes.models.turbine_models.kTI", "foxes.models.turbine_models.kTI.__init__", "foxes.models.turbine_models.kTI.__repr__", "foxes.models.turbine_models.kTI.calculate", "foxes.models.turbine_models.kTI.output_farm_vars", "foxes.models.turbine_types.CpCtFile", "foxes.models.turbine_types.CpCtFile.__init__", "foxes.models.turbine_types.CpCtFromTwo", "foxes.models.turbine_types.CpCtFromTwo.__init__", "foxes.models.turbine_types.NullType", "foxes.models.turbine_types.NullType.calculate", "foxes.models.turbine_types.NullType.output_farm_vars", "foxes.models.turbine_types.PCtFile", "foxes.models.turbine_types.PCtFile.__init__", "foxes.models.turbine_types.PCtFile.calculate", "foxes.models.turbine_types.PCtFile.finalize", "foxes.models.turbine_types.PCtFile.load_data", "foxes.models.turbine_types.PCtFile.output_farm_vars", "foxes.models.turbine_types.PCtFromTwo", "foxes.models.turbine_types.PCtFromTwo.__init__", "foxes.models.turbine_types.PCtFromTwo.calculate", "foxes.models.turbine_types.PCtFromTwo.finalize", "foxes.models.turbine_types.PCtFromTwo.load_data", "foxes.models.turbine_types.PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsRho2PCtFromTwo", "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate", "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize", "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data", "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsTI2PCtFromTwo", "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__", "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate", "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize", "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data", "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogStableWsProfile", "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogStableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogWsProfile", "foxes.models.vertical_profiles.ABLLogWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogWsProfile.input_vars", "foxes.models.vertical_profiles.DataProfile", "foxes.models.vertical_profiles.DataProfile.__init__", "foxes.models.vertical_profiles.DataProfile.calculate", "foxes.models.vertical_profiles.DataProfile.input_vars", "foxes.models.vertical_profiles.ShearedProfile", "foxes.models.vertical_profiles.ShearedProfile.calculate", "foxes.models.vertical_profiles.ShearedProfile.input_vars", "foxes.models.vertical_profiles.UniformProfile", "foxes.models.vertical_profiles.UniformProfile.__init__", "foxes.models.vertical_profiles.UniformProfile.calculate", "foxes.models.vertical_profiles.UniformProfile.input_vars", "foxes.models.wake_frames.FarmOrder", "foxes.models.wake_frames.FarmOrder.__init__", "foxes.models.wake_frames.FarmOrder.calc_order", "foxes.models.wake_frames.FarmOrder.get_centreline_points", "foxes.models.wake_frames.FarmOrder.get_wake_coos", "foxes.models.wake_frames.FarmOrder.sub_models", "foxes.models.wake_frames.RotorWD", "foxes.models.wake_frames.RotorWD.__init__", "foxes.models.wake_frames.RotorWD.calc_order", "foxes.models.wake_frames.RotorWD.get_centreline_points", "foxes.models.wake_frames.RotorWD.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes", "foxes.models.wake_frames.SeqDynamicWakes.__init__", "foxes.models.wake_frames.SeqDynamicWakes.calc_order", "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data", "foxes.models.wake_frames.SeqDynamicWakes.initialize", "foxes.models.wake_frames.Streamlines2D", "foxes.models.wake_frames.Streamlines2D.__init__", "foxes.models.wake_frames.Streamlines2D.__repr__", "foxes.models.wake_frames.Streamlines2D.calc_order", "foxes.models.wake_frames.Streamlines2D.get_centreline_points", "foxes.models.wake_frames.Streamlines2D.get_streamline_data", "foxes.models.wake_frames.Streamlines2D.get_wake_coos", "foxes.models.wake_frames.Timelines", "foxes.models.wake_frames.Timelines.__init__", "foxes.models.wake_frames.Timelines.calc_order", "foxes.models.wake_frames.Timelines.get_centreline_points", "foxes.models.wake_frames.Timelines.get_wake_coos", "foxes.models.wake_frames.Timelines.initialize", "foxes.models.wake_frames.YawedWakes", "foxes.models.wake_frames.YawedWakes.__init__", "foxes.models.wake_frames.YawedWakes.calc_order", "foxes.models.wake_frames.YawedWakes.get_centreline_points", "foxes.models.wake_frames.YawedWakes.get_wake_coos", "foxes.models.wake_frames.YawedWakes.initialize", "foxes.models.wake_frames.YawedWakes.sub_models", "foxes.models.wake_models.AxisymmetricWakeModel", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel", "foxes.models.wake_models.DistSlicedWakeModel.__init__", "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_spsel_x_yz", "foxes.models.wake_models.DistSlicedWakeModel.contribute_to_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.initialize", "foxes.models.wake_models.DistSlicedWakeModel.sub_models", "foxes.models.wake_models.GaussianWakeModel", "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma_spsel", "foxes.models.wake_models.GaussianWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.GroundMirror", "foxes.models.wake_models.GroundMirror.__init__", "foxes.models.wake_models.TopHatWakeModel", "foxes.models.wake_models.TopHatWakeModel.__init__", "foxes.models.wake_models.TopHatWakeModel.calc_centreline_wake_deltas", "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius", "foxes.models.wake_models.TopHatWakeModel.calc_wakes_spsel_x_r", "foxes.models.wake_models.TopHatWakeModel.initialize", "foxes.models.wake_models.TopHatWakeModel.sub_models", "foxes.models.wake_models.WakeMirror", "foxes.models.wake_models.WakeMirror.__init__", "foxes.models.wake_models.WakeMirror.contribute_to_wake_deltas", "foxes.models.wake_models.WakeMirror.finalize_wake_deltas", "foxes.models.wake_models.WakeMirror.init_wake_deltas", "foxes.models.wake_models.WakeMirror.sub_models", "foxes.models.wake_models.induction.RankineHalfBody", "foxes.models.wake_models.induction.RankineHalfBody.__init__", "foxes.models.wake_models.induction.RankineHalfBody.contribute_to_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.init_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.initialize", "foxes.models.wake_models.induction.RankineHalfBody.sub_models", "foxes.models.wake_models.induction.Rathmann", "foxes.models.wake_models.induction.Rathmann.__init__", "foxes.models.wake_models.induction.Rathmann.contribute_to_wake_deltas", "foxes.models.wake_models.induction.Rathmann.init_wake_deltas", "foxes.models.wake_models.induction.Rathmann.initialize", "foxes.models.wake_models.induction.Rathmann.sub_models", "foxes.models.wake_models.induction.SelfSimilar", "foxes.models.wake_models.induction.SelfSimilar.__init__", "foxes.models.wake_models.induction.SelfSimilar.contribute_to_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.init_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.initialize", "foxes.models.wake_models.induction.SelfSimilar.sub_models", "foxes.models.wake_models.induction.SelfSimilar2020", "foxes.models.wake_models.ti.CrespoHernandezTIWake", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__repr__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius", "foxes.models.wake_models.ti.CrespoHernandezTIWake.init_wake_deltas", "foxes.models.wake_models.ti.IECTIWake", "foxes.models.wake_models.ti.IECTIWake.__init__", "foxes.models.wake_models.ti.IECTIWake.__repr__", "foxes.models.wake_models.ti.IECTIWake.calc_centreline_wake_deltas", "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius", "foxes.models.wake_models.ti.IECTIWake.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014", "foxes.models.wake_models.wind.Bastankhah2014.__init__", "foxes.models.wake_models.wind.Bastankhah2014.__repr__", "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.Bastankhah2014.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2014.initialize", "foxes.models.wake_models.wind.Bastankhah2014.sub_models", "foxes.models.wake_models.wind.Bastankhah2016", "foxes.models.wake_models.wind.Bastankhah2016.__init__", "foxes.models.wake_models.wind.Bastankhah2016.__repr__", "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_spsel_x_yz", "foxes.models.wake_models.wind.Bastankhah2016.init_wake_deltas", "foxes.models.wake_models.wind.Bastankhah2016.initialize", "foxes.models.wake_models.wind.Bastankhah2016.sub_models", "foxes.models.wake_models.wind.Bastankhah2016Model", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.CHECK", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.MDATA_KEY", "foxes.models.wake_models.wind.Bastankhah2016Model.NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.PARS", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC_S", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Y_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Z_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SP_SEL", "foxes.models.wake_models.wind.Bastankhah2016Model.X0", "foxes.models.wake_models.wind.Bastankhah2016Model.__init__", "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data", "foxes.models.wake_models.wind.Bastankhah2016Model.clean", "foxes.models.wake_models.wind.Bastankhah2016Model.get_data", "foxes.models.wake_models.wind.Bastankhah2016Model.has_data", "foxes.models.wake_models.wind.Bastankhah2016Model.initialize", "foxes.models.wake_models.wind.Bastankhah2016Model.pars", "foxes.models.wake_models.wind.Bastankhah2016Model.sub_models", "foxes.models.wake_models.wind.JensenWake", "foxes.models.wake_models.wind.JensenWake.__init__", "foxes.models.wake_models.wind.JensenWake.__repr__", "foxes.models.wake_models.wind.JensenWake.calc_centreline_wake_deltas", "foxes.models.wake_models.wind.JensenWake.calc_wake_radius", "foxes.models.wake_models.wind.JensenWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake", "foxes.models.wake_models.wind.TurbOParkWake.__init__", "foxes.models.wake_models.wind.TurbOParkWake.__repr__", "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWake.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWake.initialize", "foxes.models.wake_models.wind.TurbOParkWake.sub_models", "foxes.models.wake_models.wind.TurbOParkWakeIX", "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__", "foxes.models.wake_models.wind.TurbOParkWakeIX.__repr__", "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma_spsel", "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize", "foxes.models.wake_models.wind.TurbOParkWakeIX.init_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize", "foxes.models.wake_models.wind.TurbOParkWakeIX.sub_models", "foxes.models.wake_superpositions.TILinear", "foxes.models.wake_superpositions.TILinear.__init__", "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta", "foxes.models.wake_superpositions.TILinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIMax", "foxes.models.wake_superpositions.TIMax.__init__", "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta", "foxes.models.wake_superpositions.TIMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIPow", "foxes.models.wake_superpositions.TIPow.__init__", "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta", "foxes.models.wake_superpositions.TIPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.TIQuadratic", "foxes.models.wake_superpositions.TIQuadratic.__init__", "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.TIQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear", "foxes.models.wake_superpositions.WSLinear.__init__", "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSLinear.input_farm_vars", "foxes.models.wake_superpositions.WSMax", "foxes.models.wake_superpositions.WSMax.__init__", "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMax.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSMax.input_farm_vars", "foxes.models.wake_superpositions.WSPow", "foxes.models.wake_superpositions.WSPow.__init__", "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPow.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSPow.input_farm_vars", "foxes.models.wake_superpositions.WSProduct", "foxes.models.wake_superpositions.WSProduct.__init__", "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta", "foxes.models.wake_superpositions.WSProduct.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSProduct.input_farm_vars", "foxes.models.wake_superpositions.WSQuadratic", "foxes.models.wake_superpositions.WSQuadratic.__init__", "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadratic.calc_wakes_plus_wake", "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars", "foxes.output.Animator", "foxes.output.Animator.__init__", "foxes.output.Animator.add_generator", "foxes.output.Animator.animate", "foxes.output.Animator.generators", "foxes.output.FarmLayoutOutput", "foxes.output.FarmLayoutOutput.__init__", "foxes.output.FarmLayoutOutput.get_figure", "foxes.output.FarmLayoutOutput.get_layout_data", "foxes.output.FarmLayoutOutput.get_layout_dict", "foxes.output.FarmLayoutOutput.write_csv", "foxes.output.FarmLayoutOutput.write_json", "foxes.output.FarmLayoutOutput.write_plot", "foxes.output.FarmLayoutOutput.write_xyh", "foxes.output.FarmResultsEval", "foxes.output.FarmResultsEval.__init__", "foxes.output.FarmResultsEval.add_capacity", "foxes.output.FarmResultsEval.add_efficiency", "foxes.output.FarmResultsEval.calc_farm_efficiency", "foxes.output.FarmResultsEval.calc_farm_mean", "foxes.output.FarmResultsEval.calc_farm_sum", "foxes.output.FarmResultsEval.calc_farm_yield", "foxes.output.FarmResultsEval.calc_mean_farm_power", "foxes.output.FarmResultsEval.calc_states_mean", "foxes.output.FarmResultsEval.calc_states_std", "foxes.output.FarmResultsEval.calc_states_sum", "foxes.output.FarmResultsEval.calc_turbine_mean", "foxes.output.FarmResultsEval.calc_turbine_sum", "foxes.output.FarmResultsEval.calc_turbine_yield", "foxes.output.FarmResultsEval.gen_stdata", "foxes.output.FarmResultsEval.reduce_all", "foxes.output.FarmResultsEval.reduce_states", "foxes.output.FarmResultsEval.reduce_turbines", "foxes.output.FarmResultsEval.weinsum", "foxes.output.FlowPlots2D", "foxes.output.FlowPlots2D.gen_states_fig_xy", "foxes.output.FlowPlots2D.gen_states_fig_xz", "foxes.output.FlowPlots2D.gen_states_fig_yz", "foxes.output.FlowPlots2D.get_mean_fig_xy", "foxes.output.FlowPlots2D.get_mean_fig_xz", "foxes.output.FlowPlots2D.get_mean_fig_yz", "foxes.output.Output", "foxes.output.Output.__init__", "foxes.output.Output.get_fpath", "foxes.output.Output.new", "foxes.output.Output.print_models", "foxes.output.Output.write", "foxes.output.PointCalculator", "foxes.output.PointCalculator.__init__", "foxes.output.PointCalculator.calculate", "foxes.output.ResultsWriter", "foxes.output.ResultsWriter.__init__", "foxes.output.ResultsWriter.write_csv", "foxes.output.ResultsWriter.write_nc", "foxes.output.RosePlotOutput", "foxes.output.RosePlotOutput.__init__", "foxes.output.RosePlotOutput.get_data", "foxes.output.RosePlotOutput.get_data_info", "foxes.output.RosePlotOutput.get_figure", "foxes.output.RosePlotOutput.write_figure", "foxes.output.SeqFlowAnimationPlugin", "foxes.output.SeqFlowAnimationPlugin.__init__", "foxes.output.SeqFlowAnimationPlugin.gen_images", "foxes.output.SeqFlowAnimationPlugin.initialize", "foxes.output.SeqFlowAnimationPlugin.update", "foxes.output.SliceData", "foxes.output.SliceData.__init__", "foxes.output.SliceData.get_mean_data_xy", "foxes.output.SliceData.get_mean_data_xz", "foxes.output.SliceData.get_mean_data_yz", "foxes.output.SliceData.get_states_data_xy", "foxes.output.SliceData.get_states_data_xz", "foxes.output.SliceData.get_states_data_yz", "foxes.output.StateTurbineMap", "foxes.output.StateTurbineMap.__init__", "foxes.output.StateTurbineMap.plot_map", "foxes.output.StatesRosePlotOutput", "foxes.output.StatesRosePlotOutput.__init__", "foxes.output.TurbineTypeCurves", "foxes.output.TurbineTypeCurves.__init__", "foxes.output.TurbineTypeCurves.plot_curves", "foxes.output.flow_plots_2d.get_fig", "foxes.utils.DataBook", "foxes.utils.DataBook.__init__", "foxes.utils.DataBook.add_data_package", "foxes.utils.DataBook.add_data_package_file", "foxes.utils.DataBook.add_file", "foxes.utils.DataBook.add_files", "foxes.utils.DataBook.get_file_path", "foxes.utils.DataBook.toc", "foxes.utils.PandasFileHelper", "foxes.utils.PandasFileHelper.DATA_FILE_FORMATS", "foxes.utils.PandasFileHelper.DEFAULT_FORMAT_DICT", "foxes.utils.PandasFileHelper.DEFAULT_READING_PARAMETERS", "foxes.utils.PandasFileHelper.DEFAULT_WRITING_PARAMETERS", "foxes.utils.PandasFileHelper.read_file", "foxes.utils.PandasFileHelper.write_file", "foxes.utils.TabWindroseAxes", "foxes.utils.TabWindroseAxes.ArtistList", "foxes.utils.TabWindroseAxes.ArtistList.__getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__init__", "foxes.utils.TabWindroseAxes.ArtistList.__repr__", "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__", "foxes.utils.TabWindroseAxes.ArtistList.count", "foxes.utils.TabWindroseAxes.ArtistList.index", "foxes.utils.TabWindroseAxes.InvertedPolarTransform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init_subclass__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__str__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.depth", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.frozen", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_matrix", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.input_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.invalidate", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.inverted", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_separable", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.output_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.pass_through", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point", "foxes.utils.TabWindroseAxes.PolarAffine", "foxes.utils.TabWindroseAxes.PolarAffine.__array__", "foxes.utils.TabWindroseAxes.PolarAffine.__eq__", "foxes.utils.TabWindroseAxes.PolarAffine.__init__", "foxes.utils.TabWindroseAxes.PolarAffine.__str__", "foxes.utils.TabWindroseAxes.PolarAffine.frozen", "foxes.utils.TabWindroseAxes.PolarAffine.get_affine", "foxes.utils.TabWindroseAxes.PolarAffine.get_matrix", "foxes.utils.TabWindroseAxes.PolarAffine.has_inverse", "foxes.utils.TabWindroseAxes.PolarAffine.input_dims", "foxes.utils.TabWindroseAxes.PolarAffine.inverted", "foxes.utils.TabWindroseAxes.PolarAffine.is_affine", "foxes.utils.TabWindroseAxes.PolarAffine.is_separable", "foxes.utils.TabWindroseAxes.PolarAffine.output_dims", "foxes.utils.TabWindroseAxes.PolarAffine.to_values", "foxes.utils.TabWindroseAxes.PolarAffine.transform", "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform", "foxes.utils.TabWindroseAxes.PolarTransform.__init__", "foxes.utils.TabWindroseAxes.PolarTransform.__str__", "foxes.utils.TabWindroseAxes.PolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.PolarTransform.input_dims", "foxes.utils.TabWindroseAxes.PolarTransform.inverted", "foxes.utils.TabWindroseAxes.PolarTransform.output_dims", "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.RadialLocator", "foxes.utils.TabWindroseAxes.RadialLocator.MAXTICKS", "foxes.utils.TabWindroseAxes.RadialLocator.__call__", "foxes.utils.TabWindroseAxes.RadialLocator.__init__", "foxes.utils.TabWindroseAxes.RadialLocator.axis", "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis", "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular", "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds", "foxes.utils.TabWindroseAxes.RadialLocator.set_axis", "foxes.utils.TabWindroseAxes.RadialLocator.set_params", "foxes.utils.TabWindroseAxes.RadialLocator.tick_values", "foxes.utils.TabWindroseAxes.RadialLocator.view_limits", "foxes.utils.TabWindroseAxes.ThetaFormatter", "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__", "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks", "foxes.utils.TabWindroseAxes.ThetaFormatter.get_offset", "foxes.utils.TabWindroseAxes.ThetaFormatter.locs", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs", "foxes.utils.TabWindroseAxes.ThetaLocator", "foxes.utils.TabWindroseAxes.ThetaLocator.__call__", "foxes.utils.TabWindroseAxes.ThetaLocator.__init__", "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular", "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis", "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits", "foxes.utils.TabWindroseAxes.__init__", "foxes.utils.TabWindroseAxes.__init_subclass__", "foxes.utils.TabWindroseAxes.__repr__", "foxes.utils.TabWindroseAxes.__str__", "foxes.utils.TabWindroseAxes.acorr", "foxes.utils.TabWindroseAxes.add_artist", "foxes.utils.TabWindroseAxes.add_callback", "foxes.utils.TabWindroseAxes.add_child_axes", "foxes.utils.TabWindroseAxes.add_collection", "foxes.utils.TabWindroseAxes.add_container", "foxes.utils.TabWindroseAxes.add_image", "foxes.utils.TabWindroseAxes.add_line", "foxes.utils.TabWindroseAxes.add_patch", "foxes.utils.TabWindroseAxes.add_table", "foxes.utils.TabWindroseAxes.angle_spectrum", "foxes.utils.TabWindroseAxes.annotate", "foxes.utils.TabWindroseAxes.apply_aspect", "foxes.utils.TabWindroseAxes.arrow", "foxes.utils.TabWindroseAxes.artists", "foxes.utils.TabWindroseAxes.autoscale", "foxes.utils.TabWindroseAxes.autoscale_view", "foxes.utils.TabWindroseAxes.axes", "foxes.utils.TabWindroseAxes.axhline", "foxes.utils.TabWindroseAxes.axhspan", "foxes.utils.TabWindroseAxes.axis", "foxes.utils.TabWindroseAxes.axline", "foxes.utils.TabWindroseAxes.axvline", "foxes.utils.TabWindroseAxes.axvspan", "foxes.utils.TabWindroseAxes.bar", "foxes.utils.TabWindroseAxes.bar_label", "foxes.utils.TabWindroseAxes.barbs", "foxes.utils.TabWindroseAxes.barh", "foxes.utils.TabWindroseAxes.box", "foxes.utils.TabWindroseAxes.boxplot", "foxes.utils.TabWindroseAxes.broken_barh", "foxes.utils.TabWindroseAxes.bxp", "foxes.utils.TabWindroseAxes.can_pan", "foxes.utils.TabWindroseAxes.can_zoom", "foxes.utils.TabWindroseAxes.cla", "foxes.utils.TabWindroseAxes.clabel", "foxes.utils.TabWindroseAxes.clear", "foxes.utils.TabWindroseAxes.cohere", "foxes.utils.TabWindroseAxes.collections", "foxes.utils.TabWindroseAxes.contains", "foxes.utils.TabWindroseAxes.contains_point", "foxes.utils.TabWindroseAxes.contour", "foxes.utils.TabWindroseAxes.contourf", "foxes.utils.TabWindroseAxes.convert_xunits", "foxes.utils.TabWindroseAxes.convert_yunits", "foxes.utils.TabWindroseAxes.csd", "foxes.utils.TabWindroseAxes.drag_pan", "foxes.utils.TabWindroseAxes.draw", "foxes.utils.TabWindroseAxes.draw_artist", "foxes.utils.TabWindroseAxes.end_pan", "foxes.utils.TabWindroseAxes.errorbar", "foxes.utils.TabWindroseAxes.eventplot", "foxes.utils.TabWindroseAxes.fill", "foxes.utils.TabWindroseAxes.fill_between", "foxes.utils.TabWindroseAxes.fill_betweenx", "foxes.utils.TabWindroseAxes.findobj", "foxes.utils.TabWindroseAxes.format_coord", "foxes.utils.TabWindroseAxes.format_cursor_data", "foxes.utils.TabWindroseAxes.format_xdata", "foxes.utils.TabWindroseAxes.format_ydata", "foxes.utils.TabWindroseAxes.from_ax", "foxes.utils.TabWindroseAxes.get_adjustable", "foxes.utils.TabWindroseAxes.get_agg_filter", "foxes.utils.TabWindroseAxes.get_alpha", "foxes.utils.TabWindroseAxes.get_anchor", "foxes.utils.TabWindroseAxes.get_animated", "foxes.utils.TabWindroseAxes.get_aspect", "foxes.utils.TabWindroseAxes.get_autoscale_on", "foxes.utils.TabWindroseAxes.get_autoscalex_on", "foxes.utils.TabWindroseAxes.get_autoscaley_on", "foxes.utils.TabWindroseAxes.get_axes_locator", "foxes.utils.TabWindroseAxes.get_axisbelow", "foxes.utils.TabWindroseAxes.get_box_aspect", "foxes.utils.TabWindroseAxes.get_children", "foxes.utils.TabWindroseAxes.get_clip_box", "foxes.utils.TabWindroseAxes.get_clip_on", "foxes.utils.TabWindroseAxes.get_clip_path", "foxes.utils.TabWindroseAxes.get_cursor_data", "foxes.utils.TabWindroseAxes.get_data_ratio", "foxes.utils.TabWindroseAxes.get_default_bbox_extra_artists", "foxes.utils.TabWindroseAxes.get_facecolor", "foxes.utils.TabWindroseAxes.get_fc", "foxes.utils.TabWindroseAxes.get_figure", "foxes.utils.TabWindroseAxes.get_frame_on", "foxes.utils.TabWindroseAxes.get_gid", "foxes.utils.TabWindroseAxes.get_gridspec", "foxes.utils.TabWindroseAxes.get_images", "foxes.utils.TabWindroseAxes.get_in_layout", "foxes.utils.TabWindroseAxes.get_label", "foxes.utils.TabWindroseAxes.get_legend", "foxes.utils.TabWindroseAxes.get_legend_handles_labels", "foxes.utils.TabWindroseAxes.get_lines", "foxes.utils.TabWindroseAxes.get_mouseover", "foxes.utils.TabWindroseAxes.get_navigate", "foxes.utils.TabWindroseAxes.get_navigate_mode", "foxes.utils.TabWindroseAxes.get_path_effects", "foxes.utils.TabWindroseAxes.get_picker", "foxes.utils.TabWindroseAxes.get_position", "foxes.utils.TabWindroseAxes.get_rasterization_zorder", "foxes.utils.TabWindroseAxes.get_rasterized", "foxes.utils.TabWindroseAxes.get_renderer_cache", "foxes.utils.TabWindroseAxes.get_rlabel_position", "foxes.utils.TabWindroseAxes.get_rmax", "foxes.utils.TabWindroseAxes.get_rmin", "foxes.utils.TabWindroseAxes.get_rorigin", "foxes.utils.TabWindroseAxes.get_rsign", "foxes.utils.TabWindroseAxes.get_shared_x_axes", "foxes.utils.TabWindroseAxes.get_shared_y_axes", "foxes.utils.TabWindroseAxes.get_sketch_params", "foxes.utils.TabWindroseAxes.get_snap", "foxes.utils.TabWindroseAxes.get_subplotspec", "foxes.utils.TabWindroseAxes.get_theta_direction", "foxes.utils.TabWindroseAxes.get_theta_offset", "foxes.utils.TabWindroseAxes.get_thetamax", "foxes.utils.TabWindroseAxes.get_thetamin", "foxes.utils.TabWindroseAxes.get_tightbbox", "foxes.utils.TabWindroseAxes.get_title", "foxes.utils.TabWindroseAxes.get_transform", "foxes.utils.TabWindroseAxes.get_transformed_clip_path_and_affine", "foxes.utils.TabWindroseAxes.get_url", "foxes.utils.TabWindroseAxes.get_visible", "foxes.utils.TabWindroseAxes.get_window_extent", "foxes.utils.TabWindroseAxes.get_xaxis", "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_xaxis_transform", "foxes.utils.TabWindroseAxes.get_xbound", "foxes.utils.TabWindroseAxes.get_xgridlines", "foxes.utils.TabWindroseAxes.get_xlabel", "foxes.utils.TabWindroseAxes.get_xlim", "foxes.utils.TabWindroseAxes.get_xmajorticklabels", "foxes.utils.TabWindroseAxes.get_xminorticklabels", "foxes.utils.TabWindroseAxes.get_xscale", "foxes.utils.TabWindroseAxes.get_xticklabels", "foxes.utils.TabWindroseAxes.get_xticklines", "foxes.utils.TabWindroseAxes.get_xticks", "foxes.utils.TabWindroseAxes.get_yaxis", "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_yaxis_transform", "foxes.utils.TabWindroseAxes.get_ybound", "foxes.utils.TabWindroseAxes.get_ygridlines", "foxes.utils.TabWindroseAxes.get_ylabel", "foxes.utils.TabWindroseAxes.get_ylim", "foxes.utils.TabWindroseAxes.get_ymajorticklabels", "foxes.utils.TabWindroseAxes.get_yminorticklabels", "foxes.utils.TabWindroseAxes.get_yscale", "foxes.utils.TabWindroseAxes.get_yticklabels", "foxes.utils.TabWindroseAxes.get_yticklines", "foxes.utils.TabWindroseAxes.get_yticks", "foxes.utils.TabWindroseAxes.get_zorder", "foxes.utils.TabWindroseAxes.grid", "foxes.utils.TabWindroseAxes.has_data", "foxes.utils.TabWindroseAxes.have_units", "foxes.utils.TabWindroseAxes.hexbin", "foxes.utils.TabWindroseAxes.hist", "foxes.utils.TabWindroseAxes.hist2d", "foxes.utils.TabWindroseAxes.hlines", "foxes.utils.TabWindroseAxes.images", "foxes.utils.TabWindroseAxes.imshow", "foxes.utils.TabWindroseAxes.in_axes", "foxes.utils.TabWindroseAxes.indicate_inset", "foxes.utils.TabWindroseAxes.indicate_inset_zoom", "foxes.utils.TabWindroseAxes.inset_axes", "foxes.utils.TabWindroseAxes.invert_xaxis", "foxes.utils.TabWindroseAxes.invert_yaxis", "foxes.utils.TabWindroseAxes.is_transform_set", "foxes.utils.TabWindroseAxes.label_outer", "foxes.utils.TabWindroseAxes.legend", "foxes.utils.TabWindroseAxes.lines", "foxes.utils.TabWindroseAxes.locator_params", "foxes.utils.TabWindroseAxes.loglog", "foxes.utils.TabWindroseAxes.magnitude_spectrum", "foxes.utils.TabWindroseAxes.margins", "foxes.utils.TabWindroseAxes.matshow", "foxes.utils.TabWindroseAxes.minorticks_off", "foxes.utils.TabWindroseAxes.minorticks_on", "foxes.utils.TabWindroseAxes.mouseover", "foxes.utils.TabWindroseAxes.name", "foxes.utils.TabWindroseAxes.patches", "foxes.utils.TabWindroseAxes.pchanged", "foxes.utils.TabWindroseAxes.pcolor", "foxes.utils.TabWindroseAxes.pcolorfast", "foxes.utils.TabWindroseAxes.pcolormesh", "foxes.utils.TabWindroseAxes.phase_spectrum", "foxes.utils.TabWindroseAxes.pick", "foxes.utils.TabWindroseAxes.pickable", "foxes.utils.TabWindroseAxes.pie", "foxes.utils.TabWindroseAxes.plot", "foxes.utils.TabWindroseAxes.plot_date", "foxes.utils.TabWindroseAxes.properties", "foxes.utils.TabWindroseAxes.psd", "foxes.utils.TabWindroseAxes.quiver", "foxes.utils.TabWindroseAxes.quiverkey", "foxes.utils.TabWindroseAxes.redraw_in_frame", "foxes.utils.TabWindroseAxes.relim", "foxes.utils.TabWindroseAxes.remove", "foxes.utils.TabWindroseAxes.remove_callback", "foxes.utils.TabWindroseAxes.reset_position", "foxes.utils.TabWindroseAxes.scatter", "foxes.utils.TabWindroseAxes.secondary_xaxis", "foxes.utils.TabWindroseAxes.secondary_yaxis", "foxes.utils.TabWindroseAxes.semilogx", "foxes.utils.TabWindroseAxes.semilogy", "foxes.utils.TabWindroseAxes.set", "foxes.utils.TabWindroseAxes.set_adjustable", "foxes.utils.TabWindroseAxes.set_agg_filter", "foxes.utils.TabWindroseAxes.set_alpha", "foxes.utils.TabWindroseAxes.set_anchor", "foxes.utils.TabWindroseAxes.set_animated", "foxes.utils.TabWindroseAxes.set_aspect", "foxes.utils.TabWindroseAxes.set_autoscale_on", "foxes.utils.TabWindroseAxes.set_autoscalex_on", "foxes.utils.TabWindroseAxes.set_autoscaley_on", "foxes.utils.TabWindroseAxes.set_axes_locator", "foxes.utils.TabWindroseAxes.set_axis_off", "foxes.utils.TabWindroseAxes.set_axis_on", "foxes.utils.TabWindroseAxes.set_axisbelow", "foxes.utils.TabWindroseAxes.set_box_aspect", "foxes.utils.TabWindroseAxes.set_clip_box", "foxes.utils.TabWindroseAxes.set_clip_on", "foxes.utils.TabWindroseAxes.set_clip_path", "foxes.utils.TabWindroseAxes.set_facecolor", "foxes.utils.TabWindroseAxes.set_fc", "foxes.utils.TabWindroseAxes.set_figure", "foxes.utils.TabWindroseAxes.set_frame_on", "foxes.utils.TabWindroseAxes.set_gid", "foxes.utils.TabWindroseAxes.set_in_layout", "foxes.utils.TabWindroseAxes.set_label", "foxes.utils.TabWindroseAxes.set_legend", "foxes.utils.TabWindroseAxes.set_mouseover", "foxes.utils.TabWindroseAxes.set_navigate", "foxes.utils.TabWindroseAxes.set_navigate_mode", "foxes.utils.TabWindroseAxes.set_path_effects", "foxes.utils.TabWindroseAxes.set_picker", "foxes.utils.TabWindroseAxes.set_position", "foxes.utils.TabWindroseAxes.set_prop_cycle", "foxes.utils.TabWindroseAxes.set_radii_angle", "foxes.utils.TabWindroseAxes.set_rasterization_zorder", "foxes.utils.TabWindroseAxes.set_rasterized", "foxes.utils.TabWindroseAxes.set_rgrids", "foxes.utils.TabWindroseAxes.set_rlabel_position", "foxes.utils.TabWindroseAxes.set_rlim", "foxes.utils.TabWindroseAxes.set_rmax", "foxes.utils.TabWindroseAxes.set_rmin", "foxes.utils.TabWindroseAxes.set_rorigin", "foxes.utils.TabWindroseAxes.set_rscale", "foxes.utils.TabWindroseAxes.set_rticks", "foxes.utils.TabWindroseAxes.set_sketch_params", "foxes.utils.TabWindroseAxes.set_snap", "foxes.utils.TabWindroseAxes.set_subplotspec", "foxes.utils.TabWindroseAxes.set_theta_direction", "foxes.utils.TabWindroseAxes.set_theta_offset", "foxes.utils.TabWindroseAxes.set_theta_zero_location", "foxes.utils.TabWindroseAxes.set_thetagrids", "foxes.utils.TabWindroseAxes.set_thetalim", "foxes.utils.TabWindroseAxes.set_thetamax", "foxes.utils.TabWindroseAxes.set_thetamin", "foxes.utils.TabWindroseAxes.set_title", "foxes.utils.TabWindroseAxes.set_transform", "foxes.utils.TabWindroseAxes.set_url", "foxes.utils.TabWindroseAxes.set_visible", "foxes.utils.TabWindroseAxes.set_xbound", "foxes.utils.TabWindroseAxes.set_xlabel", "foxes.utils.TabWindroseAxes.set_xlim", "foxes.utils.TabWindroseAxes.set_xmargin", "foxes.utils.TabWindroseAxes.set_xscale", "foxes.utils.TabWindroseAxes.set_xticklabels", "foxes.utils.TabWindroseAxes.set_xticks", "foxes.utils.TabWindroseAxes.set_ybound", "foxes.utils.TabWindroseAxes.set_ylabel", "foxes.utils.TabWindroseAxes.set_ylim", "foxes.utils.TabWindroseAxes.set_ymargin", "foxes.utils.TabWindroseAxes.set_yscale", "foxes.utils.TabWindroseAxes.set_yticklabels", "foxes.utils.TabWindroseAxes.set_yticks", "foxes.utils.TabWindroseAxes.set_zorder", "foxes.utils.TabWindroseAxes.sharex", "foxes.utils.TabWindroseAxes.sharey", "foxes.utils.TabWindroseAxes.specgram", "foxes.utils.TabWindroseAxes.spy", "foxes.utils.TabWindroseAxes.stackplot", "foxes.utils.TabWindroseAxes.stairs", "foxes.utils.TabWindroseAxes.stale", "foxes.utils.TabWindroseAxes.start_pan", "foxes.utils.TabWindroseAxes.stem", "foxes.utils.TabWindroseAxes.step", "foxes.utils.TabWindroseAxes.sticky_edges", "foxes.utils.TabWindroseAxes.streamplot", "foxes.utils.TabWindroseAxes.table", "foxes.utils.TabWindroseAxes.tables", "foxes.utils.TabWindroseAxes.text", "foxes.utils.TabWindroseAxes.texts", "foxes.utils.TabWindroseAxes.tick_params", "foxes.utils.TabWindroseAxes.ticklabel_format", "foxes.utils.TabWindroseAxes.tricontour", "foxes.utils.TabWindroseAxes.tricontourf", "foxes.utils.TabWindroseAxes.tripcolor", "foxes.utils.TabWindroseAxes.triplot", "foxes.utils.TabWindroseAxes.twinx", "foxes.utils.TabWindroseAxes.twiny", "foxes.utils.TabWindroseAxes.update", "foxes.utils.TabWindroseAxes.update_datalim", "foxes.utils.TabWindroseAxes.update_from", "foxes.utils.TabWindroseAxes.use_sticky_edges", "foxes.utils.TabWindroseAxes.viewLim", "foxes.utils.TabWindroseAxes.violin", "foxes.utils.TabWindroseAxes.violinplot", "foxes.utils.TabWindroseAxes.vlines", "foxes.utils.TabWindroseAxes.xaxis_date", "foxes.utils.TabWindroseAxes.xaxis_inverted", "foxes.utils.TabWindroseAxes.xcorr", "foxes.utils.TabWindroseAxes.yaxis_date", "foxes.utils.TabWindroseAxes.yaxis_inverted", "foxes.utils.TabWindroseAxes.zorder", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.lgz", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.logz", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.all_subclasses", "foxes.utils.cubic_roots", "foxes.utils.delta_wd", "foxes.utils.exec_python", "foxes.utils.geom2d.AreaGeometry", "foxes.utils.geom2d.AreaGeometry.add_to_figure", "foxes.utils.geom2d.AreaGeometry.inverse", "foxes.utils.geom2d.AreaGeometry.p_max", "foxes.utils.geom2d.AreaGeometry.p_min", "foxes.utils.geom2d.AreaGeometry.points_distance", "foxes.utils.geom2d.AreaGeometry.points_inside", "foxes.utils.geom2d.AreaIntersection", "foxes.utils.geom2d.AreaIntersection.__new__", "foxes.utils.geom2d.AreaUnion", "foxes.utils.geom2d.AreaUnion.__init__", "foxes.utils.geom2d.AreaUnion.add_to_figure", "foxes.utils.geom2d.AreaUnion.inverse", "foxes.utils.geom2d.AreaUnion.p_max", "foxes.utils.geom2d.AreaUnion.p_min", "foxes.utils.geom2d.AreaUnion.points_distance", "foxes.utils.geom2d.AreaUnion.points_inside", "foxes.utils.geom2d.Circle", "foxes.utils.geom2d.Circle.__init__", "foxes.utils.geom2d.Circle.add_to_figure", "foxes.utils.geom2d.Circle.p_max", "foxes.utils.geom2d.Circle.p_min", "foxes.utils.geom2d.Circle.points_distance", "foxes.utils.geom2d.Circle.points_inside", "foxes.utils.geom2d.ClosedPolygon", "foxes.utils.geom2d.ClosedPolygon.__init__", "foxes.utils.geom2d.ClosedPolygon.add_to_figure", "foxes.utils.geom2d.ClosedPolygon.p_max", "foxes.utils.geom2d.ClosedPolygon.p_min", "foxes.utils.geom2d.ClosedPolygon.points_distance", "foxes.utils.geom2d.ClosedPolygon.points_inside", "foxes.utils.geom2d.HalfPlane", "foxes.utils.geom2d.HalfPlane.__init__", "foxes.utils.geom2d.HalfPlane.add_to_figure", "foxes.utils.geom2d.HalfPlane.inverse", "foxes.utils.geom2d.HalfPlane.p_max", "foxes.utils.geom2d.HalfPlane.p_min", "foxes.utils.geom2d.HalfPlane.points_distance", "foxes.utils.geom2d.HalfPlane.points_inside", "foxes.utils.geom2d.InvertedAreaGeometry", "foxes.utils.geom2d.InvertedAreaGeometry.__init__", "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure", "foxes.utils.geom2d.InvertedAreaGeometry.inverse", "foxes.utils.geom2d.InvertedAreaGeometry.p_max", "foxes.utils.geom2d.InvertedAreaGeometry.p_min", "foxes.utils.geom2d.InvertedAreaGeometry.points_distance", "foxes.utils.geom2d.InvertedAreaGeometry.points_inside", "foxes.utils.import_module", "foxes.opt.constraints.AreaGeometryConstraint", "foxes.opt.constraints.AreaGeometryConstraint.__init__", "foxes.opt.constraints.AreaGeometryConstraint.__str__", "foxes.opt.constraints.AreaGeometryConstraint.ana_deriv", "foxes.opt.constraints.AreaGeometryConstraint.calc_individual", "foxes.opt.constraints.AreaGeometryConstraint.calc_population", "foxes.opt.constraints.AreaGeometryConstraint.component_names", "foxes.opt.constraints.AreaGeometryConstraint.finalize", "foxes.opt.constraints.AreaGeometryConstraint.finalize_individual", "foxes.opt.constraints.AreaGeometryConstraint.finalize_population", "foxes.opt.constraints.AreaGeometryConstraint.initialize", "foxes.opt.constraints.AreaGeometryConstraint.initialized", "foxes.opt.constraints.AreaGeometryConstraint.n_components", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.n_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_float", "foxes.opt.constraints.AreaGeometryConstraint.rename_vars_int", "foxes.opt.constraints.AreaGeometryConstraint.var_names_float", "foxes.opt.constraints.AreaGeometryConstraint.var_names_int", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_float", "foxes.opt.constraints.AreaGeometryConstraint.vardeps_int", "foxes.opt.constraints.FarmBoundaryConstraint", "foxes.opt.constraints.FarmBoundaryConstraint.__init__", "foxes.opt.constraints.MinDistConstraint", "foxes.opt.constraints.MinDistConstraint.__init__", "foxes.opt.constraints.MinDistConstraint.calc_individual", "foxes.opt.constraints.MinDistConstraint.calc_population", "foxes.opt.constraints.MinDistConstraint.initialize", "foxes.opt.constraints.MinDistConstraint.n_components", "foxes.opt.constraints.MinDistConstraint.vardeps_float", "foxes.opt.core.FarmConstraint", "foxes.opt.core.FarmConstraint.__init__", "foxes.opt.core.FarmConstraint.add_to_layout_figure", "foxes.opt.core.FarmConstraint.calc_individual", "foxes.opt.core.FarmConstraint.calc_population", "foxes.opt.core.FarmConstraint.farm", "foxes.opt.core.FarmConstraint.n_components", "foxes.opt.core.FarmConstraint.n_sel_turbines", "foxes.opt.core.FarmConstraint.print_models", "foxes.opt.core.FarmConstraint.sel_turbines", "foxes.opt.core.FarmConstraint.vardeps_float", "foxes.opt.core.FarmObjective", "foxes.opt.core.FarmObjective.__init__", "foxes.opt.core.FarmObjective.add_to_layout_figure", "foxes.opt.core.FarmObjective.farm", "foxes.opt.core.FarmObjective.n_sel_turbines", "foxes.opt.core.FarmObjective.print_models", "foxes.opt.core.FarmObjective.sel_turbines", "foxes.opt.core.FarmOptProblem", "foxes.opt.core.FarmOptProblem.INT_INF", "foxes.opt.core.FarmOptProblem.__init__", "foxes.opt.core.FarmOptProblem.add_constraint", "foxes.opt.core.FarmOptProblem.add_objective", "foxes.opt.core.FarmOptProblem.add_to_layout_figure", "foxes.opt.core.FarmOptProblem.all_turbines", "foxes.opt.core.FarmOptProblem.apply_individual", "foxes.opt.core.FarmOptProblem.apply_population", "foxes.opt.core.FarmOptProblem.calc_gradients", "foxes.opt.core.FarmOptProblem.check_constraints_individual", "foxes.opt.core.FarmOptProblem.check_constraints_population", "foxes.opt.core.FarmOptProblem.constraints_tol", "foxes.opt.core.FarmOptProblem.counter", "foxes.opt.core.FarmOptProblem.evaluate_individual", "foxes.opt.core.FarmOptProblem.evaluate_population", "foxes.opt.core.FarmOptProblem.farm", "foxes.opt.core.FarmOptProblem.finalize_individual", "foxes.opt.core.FarmOptProblem.finalize_population", "foxes.opt.core.FarmOptProblem.get_gradients", "foxes.opt.core.FarmOptProblem.initial_values_float", "foxes.opt.core.FarmOptProblem.initial_values_int", "foxes.opt.core.FarmOptProblem.initialize", "foxes.opt.core.FarmOptProblem.max_values_constraints", "foxes.opt.core.FarmOptProblem.max_values_float", "foxes.opt.core.FarmOptProblem.max_values_int", "foxes.opt.core.FarmOptProblem.maximize_objs", "foxes.opt.core.FarmOptProblem.min_values_constraints", "foxes.opt.core.FarmOptProblem.min_values_float", "foxes.opt.core.FarmOptProblem.min_values_int", "foxes.opt.core.FarmOptProblem.n_constraints", "foxes.opt.core.FarmOptProblem.n_objectives", "foxes.opt.core.FarmOptProblem.n_sel_turbines", "foxes.opt.core.FarmOptProblem.n_vars_float", "foxes.opt.core.FarmOptProblem.n_vars_int", "foxes.opt.core.FarmOptProblem.parse_tvar", "foxes.opt.core.FarmOptProblem.prob_res_einsum_individual", "foxes.opt.core.FarmOptProblem.prob_res_einsum_population", "foxes.opt.core.FarmOptProblem.sel_turbines", "foxes.opt.core.FarmOptProblem.tvar", "foxes.opt.core.FarmOptProblem.update_problem_individual", "foxes.opt.core.FarmOptProblem.update_problem_population", "foxes.opt.core.FarmOptProblem.var_names_float", "foxes.opt.core.FarmOptProblem.var_names_int", "foxes.opt.core.FarmVarsProblem", "foxes.opt.core.FarmVarsProblem.initialize", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_individual", "foxes.opt.core.FarmVarsProblem.opt2farm_vars_population", "foxes.opt.core.FarmVarsProblem.update_problem_individual", "foxes.opt.core.FarmVarsProblem.update_problem_population", "foxes.opt.core.PopStates", "foxes.opt.core.PopStates.__init__", "foxes.opt.core.PopStates.calculate", "foxes.opt.core.PopStates.initialize", "foxes.opt.core.PopStates.load_data", "foxes.opt.core.PopStates.output_point_vars", "foxes.opt.core.PopStates.size", "foxes.opt.core.PopStates.weights", "foxes.opt.objectives.FarmVarObjective", "foxes.opt.objectives.FarmVarObjective.__init__", "foxes.opt.objectives.FarmVarObjective.calc_individual", "foxes.opt.objectives.FarmVarObjective.calc_population", "foxes.opt.objectives.FarmVarObjective.finalize_individual", "foxes.opt.objectives.FarmVarObjective.initialize", "foxes.opt.objectives.FarmVarObjective.maximize", "foxes.opt.objectives.FarmVarObjective.n_components", "foxes.opt.objectives.FarmVarObjective.vardeps_float", "foxes.opt.objectives.MaxFarmPower", "foxes.opt.objectives.MaxFarmPower.__init__", "foxes.opt.objectives.MaxNTurbines", "foxes.opt.objectives.MaxNTurbines.__init__", "foxes.opt.objectives.MaxNTurbines.calc_individual", "foxes.opt.objectives.MaxNTurbines.calc_population", "foxes.opt.objectives.MaxNTurbines.maximize", "foxes.opt.objectives.MaxNTurbines.n_components", "foxes.opt.objectives.MinimalMaxTI", "foxes.opt.objectives.MinimalMaxTI.__init__", "foxes.opt.problems.OptFarmVars", "foxes.opt.problems.OptFarmVars.__init__", "foxes.opt.problems.OptFarmVars.add_var", "foxes.opt.problems.OptFarmVars.initial_values_float", "foxes.opt.problems.OptFarmVars.initial_values_int", "foxes.opt.problems.OptFarmVars.initialize", "foxes.opt.problems.OptFarmVars.max_values_float", "foxes.opt.problems.OptFarmVars.max_values_int", "foxes.opt.problems.OptFarmVars.min_values_float", "foxes.opt.problems.OptFarmVars.min_values_int", "foxes.opt.problems.OptFarmVars.opt2farm_vars_individual", "foxes.opt.problems.OptFarmVars.opt2farm_vars_population", "foxes.opt.problems.OptFarmVars.var_names_float", "foxes.opt.problems.OptFarmVars.var_names_int", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.check_population", "foxes.opt.problems.layout.geom_layouts.constraints.Constraint.get_bounds", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialize", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.Valid", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.__init__", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_individual", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_population", "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_components", "foxes.opt.problems.layout.geom_layouts.constraints.cdist", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_individual", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_population", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_components", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.Objective", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.__init__", "foxes.opt.problems.layout.geom_layouts.objectives.Objective.maximize", "foxes.opt.problems.layout.geom_layouts.objectives.cdist", "foxes.opt.problems.layout.geom_layouts.GeomLayout", "foxes.opt.problems.layout.geom_layouts.GeomLayout.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayout.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayout.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayout.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomLayout.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.__init__", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.initialize", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded.var_names_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrid.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.__init__", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_individual", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.apply_population", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.get_fig", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initial_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.initialize", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.max_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.min_values_int", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_float", "foxes.opt.problems.layout.geom_layouts.GeomRegGrids.var_names_int", "foxes.opt.problems.layout.FarmLayoutOptProblem", "foxes.opt.problems.layout.FarmLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.initialize", "foxes.opt.problems.layout.FarmLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.FarmLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.FarmLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initial_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.max_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.min_values_int", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_individual", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.update_problem_population", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_float", "foxes.opt.problems.layout.RegGridsLayoutOptProblem.var_names_int", "foxes.opt.problems.layout.RegularLayoutOptProblem", "foxes.opt.problems.layout.RegularLayoutOptProblem.ANGLE", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.OFFSET_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_X", "foxes.opt.problems.layout.RegularLayoutOptProblem.SPACING_Y", "foxes.opt.problems.layout.RegularLayoutOptProblem.__init__", "foxes.opt.problems.layout.RegularLayoutOptProblem.finalize_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.initial_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.initialize", "foxes.opt.problems.layout.RegularLayoutOptProblem.max_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.min_values_float", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_individual", "foxes.opt.problems.layout.RegularLayoutOptProblem.opt2farm_vars_population", "foxes.opt.problems.layout.RegularLayoutOptProblem.var_names_float", "foxes.utils.random_xy_square", "foxes.utils.read_shp", "foxes.utils.read_shp_polygons", "foxes.utils.read_tab_file", "foxes.utils.runners.DaskRunner", "foxes.utils.runners.DaskRunner.__init__", "foxes.utils.runners.DaskRunner.finalize", "foxes.utils.runners.DaskRunner.initialize", "foxes.utils.runners.DaskRunner.is_distributed", "foxes.utils.runners.DaskRunner.print", "foxes.utils.runners.DaskRunner.run", "foxes.utils.runners.DefaultRunner", "foxes.utils.runners.DefaultRunner.run", "foxes.utils.runners.Runner", "foxes.utils.runners.Runner.__init__", "foxes.utils.runners.Runner.finalize", "foxes.utils.runners.Runner.initialize", "foxes.utils.runners.Runner.initialized", "foxes.utils.runners.Runner.run", "foxes.utils.shp2csv", "foxes.utils.shp2geom2d", "foxes.utils.sqrt_reg", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.uv2wd", "foxes.utils.wd2uv", "foxes.utils.wd2wdvec", "foxes.utils.wdvec2wd", "foxes.utils.write_nc", "foxes.variables.AMB_CAP", "foxes.variables.AMB_CT", "foxes.variables.AMB_P", "foxes.variables.AMB_REWS", "foxes.variables.AMB_REWS2", "foxes.variables.AMB_REWS3", "foxes.variables.AMB_RHO", "foxes.variables.AMB_T", "foxes.variables.AMB_TI", "foxes.variables.AMB_WD", "foxes.variables.AMB_WS", "foxes.variables.AMB_YAW", "foxes.variables.AMB_YAWM", "foxes.variables.AMB_YLD", "foxes.variables.CAP", "foxes.variables.CT", "foxes.variables.D", "foxes.variables.EFF", "foxes.variables.H", "foxes.variables.K", "foxes.variables.KB", "foxes.variables.KTI", "foxes.variables.MAX_P", "foxes.variables.MOL", "foxes.variables.ORDER", "foxes.variables.P", "foxes.variables.PA_ALPHA", "foxes.variables.PA_BETA", "foxes.variables.REWS", "foxes.variables.REWS2", "foxes.variables.REWS3", "foxes.variables.RHO", "foxes.variables.SHEAR", "foxes.variables.T", "foxes.variables.TI", "foxes.variables.TXYH", "foxes.variables.WD", "foxes.variables.WEIGHT", "foxes.variables.WS", "foxes.variables.X", "foxes.variables.Y", "foxes.variables.YAW", "foxes.variables.YAWM", "foxes.variables.YLD", "foxes.variables.Z0", "foxes.variables.amb2var", "foxes.variables.var2amb", "API", "foxes.algorithms", "Downwind algorithm", "Iterative algorithm", "Sequential algorithm", "foxes.constants", "foxes.core", "foxes.data", "foxes", "foxes.input", "foxes.models", "foxes.opt", "foxes.opt.problems", "foxes.opt.problems.layout.geom_layouts", "foxes.output", "foxes.utils", "foxes.utils.abl.neutral", "foxes.variables", "foxes.models.wake_models", "Citation", "Examples", "History", "Welcome to FOXES", "Installation", "Blockage modelling 2", "Blockage modelling 1", "Static data", "Heterogeneous flow", "Layout optimization", "The model book", "Multi-height wind data", "Overview - how to setup foxes", "Power mask", "Wind sector management", "Dynamic wakes 2", "Single row of turbines", "Dynamic wakes 1", "Timeseries data", "Wind rose data", "Yawed rotor wakes", "Testing"], "terms": {"class": [0, 9, 11, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 302, 312, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 380, 383, 387, 393, 400, 403, 409, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 435, 438, 443, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 525, 528, 532, 534, 535, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 666, 667, 668, 669, 672, 673, 678, 679, 684, 685, 690, 691, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 816, 821, 828, 835, 858, 859, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 925, 934, 954, 961, 964, 967, 968, 970, 971, 974, 980, 985, 986, 993, 996, 998, 1002, 1010, 1018, 1022, 1025, 1032, 1060, 1072, 1081, 1090, 1099, 1102, 1104, 1112, 1118, 1119, 1177, 1245, 1246, 1247, 1259, 1260, 1261, 1285, 1321, 1388, 1395, 1411, 1450, 1453, 1454, 1461, 1463, 1471, 1478, 1485, 1493, 1502, 1523, 1525, 1532, 1543, 1550, 1559, 1569, 1594, 1595, 1600, 1608, 1617, 1619, 1625, 1627, 1632, 1641, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1662, 1667, 1672, 1673, 1678, 1679, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1769, 1775, 1780, 1791, 1800, 1810, 1817, 1819, 1882, 1884, 1885, 1886, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1900, 1903, 1908, 1911, 1916, 1918, 1921], "fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1884, 1885, 1886, 1901, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 326, 328, 329, 333, 335, 338, 341, 342, 343, 344, 345, 346, 351, 352, 353, 357, 359, 365, 366, 367, 368, 369, 371, 376, 377, 378, 379, 381, 384, 386, 390, 391, 395, 397, 398, 401, 405, 406, 408, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 456, 458, 459, 461, 465, 466, 468, 469, 472, 477, 478, 479, 481, 484, 485, 486, 489, 493, 494, 496, 497, 498, 502, 505, 511, 522, 523, 531, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 550, 551, 552, 553, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 578, 579, 580, 582, 583, 586, 587, 590, 591, 598, 605, 610, 611, 614, 615, 616, 619, 620, 621, 625, 626, 627, 631, 632, 633, 637, 638, 639, 643, 644, 647, 648, 649, 652, 653, 655, 656, 658, 659, 663, 664, 670, 671, 674, 675, 676, 677, 680, 681, 682, 683, 686, 687, 688, 689, 692, 693, 694, 695, 723, 725, 726, 727, 731, 732, 733, 734, 736, 737, 738, 739, 740, 744, 745, 746, 747, 750, 751, 752, 753, 756, 757, 758, 759, 762, 763, 766, 767, 768, 769, 772, 773, 778, 779, 780, 781, 785, 786, 787, 791, 792, 793, 794, 798, 799, 800, 804, 805, 806, 812, 813, 814, 818, 819, 820, 824, 825, 826, 831, 832, 833, 851, 855, 861, 862, 863, 867, 868, 869, 874, 875, 876, 877, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 917, 918, 919, 936, 948, 967, 968, 980, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 1022, 1304, 1314, 1550, 1552, 1602, 1603, 1604, 1605, 1607, 1776, 1797, 1882, 1888, 1892, 1896, 1903, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "downwind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 16, 17, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 1883, 1885, 1886, 1903, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "core": [0, 1, 2, 4, 6, 12, 16, 17, 21, 26, 27, 30, 31, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 82, 83, 85, 86, 92, 93, 94, 97, 98, 100, 101, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 450, 451, 453, 454, 456, 458, 459, 461, 462, 465, 466, 468, 469, 472, 475, 477, 478, 479, 481, 482, 483, 484, 485, 486, 488, 489, 490, 492, 493, 494, 496, 497, 498, 502, 505, 511, 512, 515, 518, 519, 520, 522, 523, 524, 528, 531, 534, 535, 536, 537, 538, 539, 540, 541, 542, 544, 545, 546, 547, 548, 550, 551, 552, 553, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 591, 594, 598, 601, 605, 608, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 623, 625, 626, 627, 628, 629, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 700, 704, 708, 712, 716, 719, 723, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 812, 813, 814, 818, 819, 820, 821, 822, 824, 825, 826, 827, 831, 832, 833, 834, 835, 850, 851, 853, 854, 855, 857, 861, 862, 863, 864, 865, 867, 868, 869, 870, 871, 872, 874, 875, 876, 877, 878, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 936, 948, 996, 1502, 1525, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1619, 1627, 1667, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1776, 1791, 1797, 1882, 1884, 1885, 1886, 1890, 1891, 1892, 1894, 1895, 1900, 1903], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 21, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 290, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 850, 851, 852, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1182, 1230, 1281, 1290, 1370, 1437, 1438, 1439, 1440, 1441, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1514, 1521, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1540, 1543, 1544, 1545, 1548, 1550, 1552, 1555, 1557, 1558, 1572, 1585, 1589, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1900, 1901, 1903, 1904, 1905, 1906, 1921], "The": [0, 1, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 181, 185, 189, 193, 194, 195, 201, 210, 227, 228, 278, 279, 296, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 365, 366, 367, 368, 369, 371, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 517, 518, 519, 520, 522, 523, 525, 527, 528, 531, 532, 535, 536, 537, 538, 539, 541, 542, 544, 545, 546, 547, 550, 551, 552, 553, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 627, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 641, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 772, 773, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 824, 825, 826, 828, 829, 831, 832, 833, 835, 850, 851, 853, 854, 855, 858, 859, 861, 862, 863, 864, 865, 867, 868, 869, 871, 872, 874, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1020, 1025, 1032, 1038, 1042, 1044, 1048, 1051, 1052, 1053, 1055, 1059, 1060, 1063, 1065, 1069, 1070, 1072, 1073, 1075, 1076, 1077, 1081, 1085, 1086, 1087, 1088, 1097, 1119, 1122, 1124, 1132, 1133, 1135, 1137, 1138, 1139, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1179, 1194, 1199, 1218, 1223, 1225, 1230, 1237, 1238, 1244, 1245, 1246, 1247, 1251, 1257, 1258, 1259, 1260, 1261, 1265, 1271, 1273, 1276, 1277, 1278, 1281, 1283, 1285, 1290, 1292, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1321, 1322, 1323, 1324, 1325, 1330, 1332, 1343, 1357, 1358, 1360, 1362, 1363, 1370, 1376, 1380, 1384, 1385, 1386, 1388, 1389, 1390, 1391, 1392, 1393, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1426, 1428, 1429, 1431, 1432, 1433, 1434, 1435, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1549, 1550, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1624, 1625, 1626, 1627, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1690, 1691, 1692, 1693, 1694, 1696, 1697, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1711, 1712, 1714, 1715, 1716, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1816, 1818, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1836, 1837, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1850, 1851, 1853, 1857, 1858, 1859, 1860, 1861, 1862, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1879, 1882, 1884, 1887, 1888, 1890, 1892, 1894, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922], "turbin": [0, 1, 3, 4, 9, 11, 16, 20, 21, 35, 46, 48, 49, 290, 291, 292, 293, 294, 295, 302, 316, 319, 325, 339, 340, 341, 342, 347, 361, 368, 375, 377, 378, 395, 397, 409, 410, 411, 412, 413, 414, 415, 416, 418, 423, 424, 425, 426, 427, 428, 431, 437, 438, 440, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 518, 519, 520, 522, 528, 530, 534, 536, 537, 541, 544, 545, 549, 550, 552, 555, 556, 560, 562, 563, 565, 566, 570, 572, 573, 590, 608, 609, 610, 612, 614, 617, 619, 623, 625, 629, 630, 631, 634, 637, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 678, 680, 684, 686, 690, 692, 723, 725, 726, 727, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 744, 745, 747, 748, 750, 751, 752, 754, 756, 757, 758, 762, 763, 766, 767, 772, 773, 774, 778, 779, 780, 783, 785, 789, 791, 798, 802, 804, 808, 809, 812, 813, 818, 819, 821, 824, 828, 831, 835, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 927, 932, 934, 936, 939, 940, 941, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 969, 972, 973, 974, 976, 978, 987, 988, 989, 993, 996, 998, 1000, 1502, 1503, 1523, 1525, 1526, 1532, 1533, 1539, 1541, 1543, 1544, 1547, 1549, 1550, 1552, 1556, 1582, 1585, 1588, 1589, 1594, 1608, 1609, 1617, 1618, 1619, 1625, 1626, 1627, 1629, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1662, 1673, 1684, 1703, 1704, 1709, 1715, 1722, 1723, 1732, 1733, 1742, 1743, 1766, 1775, 1791, 1797, 1846, 1847, 1859, 1870, 1876, 1877, 1883, 1884, 1885, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "ar": [0, 35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 87, 92, 98, 195, 302, 327, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 394, 396, 397, 401, 403, 406, 413, 416, 423, 431, 432, 433, 435, 447, 452, 454, 459, 462, 469, 473, 475, 479, 482, 486, 490, 498, 503, 506, 518, 519, 523, 534, 535, 541, 542, 552, 553, 561, 564, 571, 576, 580, 581, 583, 584, 587, 588, 589, 590, 594, 595, 597, 601, 602, 604, 608, 609, 611, 612, 616, 617, 621, 623, 624, 627, 629, 630, 633, 634, 639, 641, 644, 645, 646, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 677, 678, 683, 684, 689, 690, 695, 767, 768, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 814, 820, 825, 832, 863, 868, 876, 895, 899, 900, 904, 905, 909, 910, 914, 915, 919, 932, 950, 951, 952, 966, 972, 973, 1017, 1053, 1060, 1072, 1081, 1090, 1112, 1118, 1122, 1124, 1133, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1153, 1154, 1157, 1161, 1167, 1172, 1173, 1175, 1176, 1179, 1193, 1201, 1218, 1237, 1238, 1243, 1257, 1271, 1273, 1275, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1285, 1289, 1292, 1293, 1295, 1296, 1303, 1304, 1305, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1321, 1324, 1325, 1326, 1327, 1330, 1332, 1339, 1340, 1357, 1358, 1360, 1362, 1376, 1377, 1380, 1386, 1388, 1389, 1390, 1393, 1395, 1396, 1397, 1398, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1430, 1433, 1454, 1460, 1461, 1463, 1470, 1471, 1477, 1478, 1484, 1485, 1492, 1493, 1500, 1502, 1523, 1525, 1532, 1550, 1556, 1559, 1560, 1561, 1569, 1594, 1600, 1605, 1627, 1629, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1670, 1671, 1672, 1678, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1828, 1886, 1891, 1892, 1894, 1895, 1897, 1900, 1902, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920, 1921, 1922], "evalu": [0, 16, 35, 46, 47, 62, 65, 66, 70, 71, 74, 75, 368, 377, 378, 381, 393, 397, 420, 423, 425, 427, 428, 431, 432, 433, 436, 437, 536, 537, 539, 541, 542, 544, 545, 547, 550, 552, 555, 556, 558, 562, 565, 566, 568, 572, 573, 575, 588, 590, 594, 601, 698, 702, 706, 710, 714, 717, 721, 723, 725, 727, 729, 731, 733, 734, 736, 738, 739, 741, 744, 747, 748, 750, 752, 754, 756, 758, 761, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 934, 996, 1428, 1429, 1437, 1438, 1440, 1441, 1442, 1443, 1446, 1447, 1453, 1550, 1564, 1565, 1594, 1627, 1722, 1723, 1732, 1742, 1752, 1766, 1775, 1791, 1827, 1884, 1885, 1886, 1892, 1894, 1895, 1896, 1901, 1903, 1904, 1913, 1915, 1916, 1917, 1918, 1919], "onc": [0, 541, 1017, 1102, 1107, 1326, 1905, 1909, 1910, 1916, 1917, 1918, 1921], "order": [0, 35, 103, 195, 228, 368, 423, 425, 518, 684, 690, 723, 725, 729, 731, 734, 736, 741, 744, 748, 750, 754, 756, 1017, 1146, 1150, 1163, 1164, 1248, 1262, 1277, 1283, 1284, 1384, 1386, 1389, 1391, 1393, 1396, 1416, 1417, 1418, 1559, 1569, 1859, 1883, 1884, 1892, 1899, 1903, 1907, 1910, 1914, 1915, 1916, 1917, 1918], "i": [0, 9, 16, 22, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 95, 103, 114, 163, 186, 195, 228, 233, 241, 276, 302, 317, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 368, 371, 375, 383, 384, 386, 387, 390, 393, 396, 397, 403, 405, 409, 413, 414, 416, 419, 423, 425, 428, 430, 435, 447, 449, 454, 456, 458, 462, 465, 468, 473, 475, 477, 478, 482, 484, 490, 493, 497, 503, 505, 506, 508, 510, 512, 515, 518, 519, 522, 534, 535, 541, 542, 549, 552, 553, 560, 561, 563, 564, 570, 571, 576, 577, 578, 579, 581, 582, 584, 586, 588, 589, 590, 594, 595, 597, 601, 604, 608, 609, 610, 612, 614, 615, 617, 619, 623, 625, 629, 631, 634, 637, 638, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 673, 674, 676, 678, 679, 680, 682, 684, 686, 688, 690, 691, 692, 694, 696, 700, 704, 708, 712, 716, 719, 723, 725, 729, 731, 734, 736, 739, 741, 744, 748, 750, 754, 756, 761, 762, 763, 764, 766, 771, 772, 773, 774, 776, 778, 780, 783, 789, 796, 802, 808, 809, 812, 815, 816, 818, 821, 824, 828, 831, 835, 858, 861, 864, 867, 871, 874, 879, 883, 887, 891, 895, 900, 905, 910, 915, 941, 961, 971, 995, 1000, 1017, 1018, 1020, 1022, 1024, 1025, 1029, 1031, 1032, 1034, 1035, 1036, 1037, 1047, 1049, 1052, 1053, 1055, 1057, 1058, 1059, 1060, 1063, 1072, 1076, 1077, 1079, 1080, 1081, 1082, 1088, 1089, 1090, 1096, 1097, 1102, 1104, 1111, 1112, 1115, 1119, 1122, 1123, 1124, 1125, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1159, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1187, 1188, 1189, 1190, 1191, 1194, 1199, 1205, 1209, 1211, 1212, 1214, 1221, 1230, 1237, 1244, 1245, 1246, 1247, 1258, 1259, 1260, 1261, 1273, 1276, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1288, 1290, 1292, 1293, 1294, 1295, 1296, 1298, 1299, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1321, 1322, 1323, 1324, 1325, 1327, 1330, 1331, 1332, 1333, 1334, 1335, 1340, 1341, 1343, 1347, 1349, 1352, 1354, 1356, 1357, 1358, 1360, 1361, 1362, 1370, 1371, 1375, 1376, 1377, 1380, 1384, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1426, 1428, 1429, 1430, 1432, 1433, 1435, 1453, 1459, 1460, 1469, 1470, 1476, 1477, 1483, 1484, 1491, 1492, 1499, 1500, 1550, 1569, 1580, 1581, 1590, 1591, 1594, 1598, 1599, 1600, 1602, 1604, 1608, 1627, 1683, 1719, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1787, 1788, 1791, 1810, 1815, 1886, 1892, 1893, 1899, 1900, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "calcul": [0, 3, 4, 9, 11, 16, 17, 19, 20, 21, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 64, 69, 73, 77, 79, 80, 81, 83, 85, 86, 92, 94, 97, 98, 101, 302, 319, 320, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 351, 352, 353, 354, 357, 359, 361, 366, 369, 371, 377, 378, 379, 381, 383, 384, 386, 387, 390, 391, 393, 394, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 420, 421, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 454, 456, 458, 459, 461, 462, 465, 466, 468, 469, 472, 473, 475, 477, 478, 479, 481, 482, 484, 485, 486, 489, 490, 493, 494, 496, 497, 498, 502, 503, 505, 506, 518, 519, 522, 523, 531, 536, 537, 538, 539, 541, 544, 545, 546, 547, 549, 550, 551, 555, 556, 557, 558, 562, 565, 566, 567, 568, 570, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 591, 594, 595, 598, 601, 602, 605, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 623, 624, 625, 626, 627, 629, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 667, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 714, 715, 716, 717, 718, 719, 721, 722, 723, 725, 726, 727, 729, 731, 732, 733, 734, 736, 737, 738, 740, 741, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 778, 779, 780, 781, 783, 785, 786, 787, 789, 791, 792, 793, 794, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 824, 825, 826, 828, 831, 832, 833, 835, 851, 855, 858, 861, 862, 863, 864, 867, 868, 869, 871, 874, 875, 876, 877, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 925, 926, 934, 936, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 953, 967, 968, 969, 974, 975, 985, 986, 997, 1017, 1132, 1135, 1151, 1159, 1167, 1175, 1176, 1201, 1209, 1278, 1294, 1306, 1313, 1349, 1401, 1403, 1416, 1417, 1418, 1419, 1420, 1429, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1451, 1452, 1454, 1459, 1461, 1463, 1469, 1471, 1476, 1478, 1483, 1485, 1491, 1493, 1499, 1502, 1505, 1506, 1507, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1559, 1569, 1586, 1587, 1590, 1591, 1594, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1608, 1610, 1611, 1617, 1619, 1621, 1622, 1625, 1627, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1683, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1787, 1788, 1791, 1828, 1829, 1830, 1831, 1832, 1833, 1839, 1840, 1864, 1865, 1882, 1883, 1884, 1885, 1886, 1888, 1892, 1893, 1896, 1897, 1898, 1899, 1900, 1903, 1904, 1907, 1909, 1910, 1911, 1912, 1913, 1914, 1917, 1918, 1919, 1920, 1921], "provid": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 961, 995, 1000, 1133, 1149, 1151, 1174, 1199, 1277, 1279, 1281, 1295, 1304, 1309, 1310, 1343, 1356, 1370, 1390, 1397, 1403, 1407, 1408, 1419, 1430, 1600, 1604, 1890, 1892, 1903, 1908, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1919], "turbineord": 0, "object": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 153, 195, 228, 251, 302, 308, 309, 313, 317, 322, 327, 330, 339, 345, 349, 354, 361, 362, 365, 367, 368, 371, 372, 375, 377, 378, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 511, 512, 515, 518, 519, 528, 532, 534, 536, 537, 541, 544, 545, 549, 550, 552, 555, 556, 560, 562, 563, 565, 566, 570, 572, 573, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 921, 927, 949, 955, 956, 957, 958, 959, 960, 974, 978, 996, 1001, 1017, 1035, 1122, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1182, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1293, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1324, 1325, 1326, 1350, 1358, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1417, 1418, 1419, 1420, 1429, 1430, 1433, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1502, 1509, 1512, 1523, 1525, 1532, 1543, 1544, 1550, 1553, 1554, 1559, 1564, 1565, 1567, 1568, 1569, 1572, 1576, 1581, 1586, 1587, 1594, 1595, 1600, 1604, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1632, 1641, 1646, 1651, 1656, 1660, 1662, 1667, 1672, 1678, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1728, 1732, 1738, 1742, 1748, 1752, 1759, 1766, 1767, 1769, 1775, 1777, 1780, 1791, 1798, 1800, 1826, 1888, 1890, 1892, 1894, 1908, 1909, 1910, 1911, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "state": [0, 1, 2, 3, 4, 7, 9, 11, 16, 17, 20, 21, 48, 49, 92, 93, 96, 99, 101, 287, 288, 289, 290, 291, 302, 303, 313, 319, 324, 326, 330, 331, 334, 336, 338, 341, 368, 377, 378, 393, 395, 397, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 424, 426, 427, 428, 431, 437, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 536, 537, 544, 545, 550, 555, 556, 562, 565, 566, 572, 573, 576, 577, 588, 590, 608, 609, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 726, 727, 732, 733, 737, 738, 739, 745, 747, 748, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 925, 926, 927, 934, 939, 940, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 969, 972, 985, 987, 988, 989, 990, 991, 992, 993, 996, 997, 1001, 1017, 1025, 1038, 1060, 1065, 1081, 1137, 1405, 1597, 1600, 1601, 1606, 1607, 1609, 1618, 1626, 1629, 1638, 1773, 1786, 1804, 1872, 1883, 1886, 1887, 1888, 1892, 1893, 1896, 1899, 1903, 1904, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "ambient": [0, 1, 3, 4, 16, 17, 20, 21, 53, 57, 102, 378, 393, 394, 395, 397, 403, 432, 436, 454, 537, 545, 550, 556, 566, 573, 584, 585, 588, 590, 594, 595, 601, 602, 768, 786, 792, 809, 810, 879, 880, 881, 883, 884, 885, 887, 888, 889, 891, 892, 893, 895, 896, 897, 900, 901, 902, 905, 906, 907, 912, 915, 916, 917, 934, 936, 942, 948, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1880, 1881, 1884, 1887, 1891, 1892, 1899, 1903, 1904, 1906, 1907, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920], "wake_model": [0, 1, 46, 47, 375, 376, 424, 528, 534, 535, 541, 542, 549, 552, 553, 560, 561, 563, 564, 570, 571, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "list": [0, 1, 2, 9, 16, 17, 35, 38, 39, 40, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 61, 66, 67, 71, 72, 77, 81, 82, 83, 86, 92, 96, 98, 100, 228, 241, 302, 317, 319, 320, 327, 329, 330, 331, 332, 334, 335, 337, 339, 346, 348, 349, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 373, 375, 376, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 401, 403, 404, 406, 409, 410, 411, 412, 413, 416, 419, 421, 423, 424, 430, 435, 438, 440, 442, 443, 447, 451, 453, 454, 455, 457, 459, 462, 464, 467, 469, 470, 473, 475, 479, 482, 486, 488, 490, 492, 495, 498, 499, 501, 503, 506, 512, 515, 518, 519, 523, 524, 533, 534, 535, 540, 541, 542, 548, 549, 552, 553, 559, 560, 561, 563, 564, 569, 570, 571, 576, 577, 580, 581, 583, 584, 585, 587, 588, 594, 595, 601, 602, 608, 609, 611, 612, 613, 616, 617, 621, 623, 627, 628, 629, 630, 633, 634, 639, 641, 644, 645, 646, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 677, 678, 683, 684, 689, 690, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 718, 719, 722, 723, 728, 729, 734, 741, 748, 754, 760, 761, 764, 770, 771, 774, 776, 782, 783, 784, 788, 789, 795, 796, 801, 802, 807, 808, 809, 815, 821, 827, 828, 834, 835, 857, 858, 864, 870, 871, 878, 879, 883, 887, 891, 895, 899, 900, 904, 905, 909, 910, 914, 915, 919, 920, 922, 924, 936, 939, 940, 943, 945, 946, 947, 949, 969, 972, 973, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1000, 1002, 1004, 1007, 1009, 1010, 1017, 1018, 1020, 1059, 1132, 1140, 1143, 1144, 1147, 1148, 1149, 1151, 1152, 1153, 1157, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1195, 1201, 1208, 1213, 1237, 1249, 1252, 1253, 1255, 1256, 1263, 1266, 1267, 1269, 1270, 1273, 1276, 1277, 1278, 1279, 1281, 1293, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1324, 1325, 1358, 1362, 1376, 1380, 1389, 1390, 1396, 1397, 1402, 1403, 1407, 1408, 1409, 1411, 1417, 1418, 1424, 1428, 1429, 1430, 1450, 1453, 1462, 1463, 1464, 1502, 1503, 1505, 1506, 1507, 1508, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1532, 1533, 1535, 1536, 1541, 1543, 1544, 1549, 1552, 1559, 1569, 1586, 1587, 1588, 1592, 1593, 1595, 1600, 1605, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1621, 1622, 1625, 1626, 1629, 1639, 1640, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1674, 1675, 1680, 1681, 1683, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1719, 1721, 1731, 1741, 1751, 1764, 1765, 1774, 1789, 1790, 1805, 1808, 1882, 1885, 1886, 1888, 1890, 1891, 1896, 1903, 1906, 1907, 1908, 1911, 1914], "wakemodel": [0, 46, 47, 49, 375, 376, 424, 430, 431, 432, 433, 434, 528, 535, 542, 553, 561, 564, 571, 764, 783, 784, 789, 796, 802, 1888, 1900], "wake": [0, 1, 3, 4, 20, 21, 35, 40, 46, 47, 48, 49, 77, 368, 375, 376, 377, 378, 380, 381, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 528, 534, 535, 536, 537, 539, 541, 542, 544, 545, 547, 549, 550, 551, 552, 553, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 570, 571, 572, 573, 574, 575, 584, 660, 723, 724, 726, 727, 729, 732, 733, 734, 737, 738, 739, 741, 745, 747, 748, 749, 751, 752, 754, 755, 757, 758, 761, 762, 763, 764, 765, 766, 767, 768, 771, 772, 773, 774, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 810, 812, 813, 814, 815, 816, 818, 819, 820, 821, 822, 824, 825, 828, 829, 831, 832, 835, 850, 851, 854, 858, 859, 861, 862, 863, 864, 865, 867, 868, 871, 872, 874, 876, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 900, 901, 902, 903, 905, 906, 907, 908, 910, 911, 912, 913, 915, 916, 917, 918, 1453, 1722, 1732, 1854, 1861, 1862, 1880, 1884, 1885, 1888, 1892, 1894, 1895, 1899, 1900, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1913, 1914, 1917, 1919, 1920], "model": [0, 1, 2, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 30, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 292, 293, 302, 303, 305, 307, 308, 309, 310, 315, 317, 319, 327, 328, 329, 330, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 447, 454, 456, 458, 459, 462, 465, 466, 468, 469, 473, 475, 477, 478, 479, 482, 484, 485, 486, 488, 490, 493, 494, 496, 497, 498, 501, 503, 505, 506, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 925, 934, 954, 961, 964, 965, 967, 970, 974, 985, 993, 996, 998, 999, 1000, 1502, 1523, 1525, 1532, 1540, 1543, 1548, 1594, 1595, 1600, 1602, 1603, 1604, 1605, 1608, 1617, 1619, 1625, 1629, 1861, 1862, 1882, 1887, 1888, 1893, 1897, 1899, 1902, 1903, 1904, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "appli": [0, 1, 49, 83, 431, 432, 433, 436, 437, 767, 768, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 814, 820, 825, 832, 863, 868, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 941, 1017, 1025, 1051, 1052, 1055, 1056, 1057, 1058, 1060, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1088, 1089, 1122, 1132, 1143, 1148, 1149, 1152, 1159, 1167, 1173, 1240, 1273, 1276, 1281, 1294, 1306, 1309, 1310, 1313, 1327, 1330, 1332, 1333, 1375, 1388, 1395, 1401, 1403, 1415, 1426, 1433, 1550, 1557, 1558, 1594, 1627, 1629, 1683, 1721, 1722, 1724, 1725, 1732, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1766, 1775, 1791, 1884, 1885, 1892, 1903, 1906, 1907, 1910, 1916, 1918, 1921], "all": [0, 1, 2, 3, 4, 9, 16, 20, 21, 35, 36, 39, 40, 42, 45, 46, 48, 52, 53, 55, 57, 59, 77, 79, 82, 83, 85, 92, 94, 100, 101, 103, 158, 195, 228, 302, 317, 327, 328, 330, 333, 337, 338, 339, 341, 345, 348, 349, 351, 354, 357, 360, 361, 362, 371, 373, 375, 376, 382, 383, 384, 387, 390, 392, 393, 397, 403, 405, 408, 413, 414, 416, 419, 423, 425, 430, 435, 436, 438, 442, 454, 455, 456, 458, 461, 462, 465, 468, 472, 473, 475, 477, 478, 481, 482, 484, 488, 489, 490, 493, 497, 501, 502, 503, 505, 506, 512, 515, 518, 519, 522, 524, 528, 534, 540, 541, 548, 549, 551, 552, 559, 560, 563, 569, 570, 574, 576, 578, 579, 581, 582, 584, 586, 588, 590, 594, 601, 608, 609, 610, 612, 614, 615, 617, 619, 623, 625, 628, 629, 631, 634, 637, 638, 640, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 700, 704, 708, 712, 716, 719, 723, 725, 728, 729, 731, 734, 736, 741, 744, 748, 750, 754, 756, 760, 761, 764, 770, 771, 774, 776, 782, 783, 788, 789, 795, 796, 801, 802, 807, 808, 809, 815, 821, 827, 828, 834, 835, 852, 857, 858, 864, 870, 871, 878, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 925, 927, 934, 953, 954, 961, 965, 967, 969, 970, 972, 973, 974, 976, 978, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1017, 1025, 1049, 1060, 1081, 1090, 1102, 1107, 1111, 1122, 1133, 1137, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1163, 1164, 1172, 1173, 1175, 1176, 1177, 1185, 1237, 1276, 1277, 1278, 1279, 1281, 1292, 1293, 1295, 1302, 1303, 1304, 1305, 1309, 1310, 1312, 1314, 1321, 1324, 1325, 1327, 1329, 1330, 1332, 1339, 1360, 1361, 1390, 1397, 1403, 1404, 1407, 1410, 1411, 1415, 1416, 1417, 1418, 1419, 1420, 1426, 1430, 1433, 1450, 1453, 1502, 1505, 1506, 1507, 1521, 1522, 1523, 1525, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1542, 1543, 1548, 1550, 1552, 1556, 1559, 1565, 1569, 1580, 1581, 1594, 1600, 1602, 1604, 1607, 1608, 1609, 1610, 1611, 1616, 1617, 1618, 1619, 1621, 1622, 1625, 1626, 1627, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1671, 1672, 1674, 1675, 1678, 1680, 1681, 1683, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1808, 1829, 1882, 1888, 1890, 1891, 1892, 1897, 1901, 1903, 1905, 1906, 1908, 1909, 1910, 1911, 1912, 1913, 1916, 1917, 1918, 1920], "rotor_model": [0, 1, 528, 541, 542, 552, 553, 561, 563, 564, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "rotormodel": [0, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 528, 541, 542, 552, 553, 561, 563, 564, 588, 594, 601, 1888, 1892], "rotor": [0, 1, 102, 284, 285, 286, 339, 341, 349, 350, 375, 393, 395, 396, 397, 398, 399, 400, 402, 409, 410, 416, 417, 447, 528, 541, 542, 549, 551, 552, 553, 560, 561, 563, 564, 570, 574, 588, 589, 590, 591, 592, 593, 594, 597, 599, 600, 601, 602, 604, 606, 607, 623, 624, 635, 641, 642, 729, 796, 797, 802, 803, 910, 925, 926, 927, 955, 956, 957, 1001, 1502, 1503, 1629, 1642, 1838, 1839, 1840, 1851, 1863, 1864, 1865, 1870, 1887, 1888, 1892, 1899, 1902, 1903, 1904, 1906, 1907, 1910, 1913, 1916, 1918, 1919], "wake_fram": [0, 1, 375, 376, 528, 535, 541, 542, 549, 553, 560, 561, 563, 564, 570, 571, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "wakefram": [0, 375, 376, 423, 424, 425, 426, 427, 428, 429, 528, 535, 542, 553, 561, 564, 571, 723, 724, 729, 734, 741, 748, 754, 755, 1888, 1892], "frame": [0, 1, 35, 375, 376, 396, 423, 424, 426, 427, 429, 431, 462, 528, 535, 542, 553, 561, 564, 571, 576, 577, 589, 597, 604, 723, 724, 726, 727, 729, 732, 733, 734, 737, 738, 741, 745, 747, 748, 751, 752, 754, 755, 757, 758, 767, 785, 791, 798, 804, 835, 1283, 1309, 1807, 1884, 1888, 1892, 1900, 1903, 1907, 1909, 1913, 1916, 1918, 1921], "partial_wakes_model": [0, 1, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "partialwakesmodel": [0, 375, 376, 377, 378, 379, 380, 381, 382, 534, 541, 552, 563, 570, 1888, 1892], "partial": [0, 1, 375, 380, 528, 534, 535, 541, 549, 552, 560, 563, 570, 761, 764, 1309, 1888, 1892, 1900, 1903, 1906, 1907, 1913, 1916, 1918], "farm_control": [0, 1, 518, 528, 1911], "farmcontrol": [0, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 518, 528, 1888, 1892], "farm": [0, 1, 3, 4, 9, 11, 16, 17, 20, 21, 23, 25, 26, 36, 40, 42, 48, 49, 53, 55, 59, 64, 69, 73, 77, 79, 85, 91, 94, 226, 302, 303, 316, 333, 339, 341, 342, 349, 351, 354, 357, 361, 368, 375, 377, 378, 381, 384, 390, 393, 395, 397, 398, 409, 410, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 438, 439, 441, 447, 448, 449, 450, 451, 452, 453, 456, 465, 477, 484, 493, 511, 518, 519, 522, 528, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 551, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 574, 575, 578, 582, 586, 590, 591, 608, 609, 610, 614, 619, 625, 631, 634, 637, 641, 643, 647, 652, 655, 658, 661, 663, 670, 674, 680, 686, 692, 723, 725, 726, 727, 731, 732, 733, 736, 737, 738, 739, 744, 745, 746, 747, 750, 751, 752, 754, 755, 756, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 810, 812, 813, 814, 818, 819, 820, 821, 822, 824, 825, 828, 829, 831, 832, 851, 858, 859, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 925, 926, 927, 928, 929, 934, 935, 936, 937, 938, 941, 942, 954, 955, 956, 957, 958, 959, 960, 967, 968, 970, 971, 974, 975, 976, 978, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 1502, 1523, 1525, 1532, 1537, 1543, 1546, 1550, 1566, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1602, 1608, 1617, 1619, 1625, 1627, 1629, 1637, 1638, 1722, 1732, 1742, 1752, 1766, 1772, 1773, 1775, 1785, 1786, 1787, 1788, 1791, 1803, 1804, 1882, 1883, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1896, 1901, 1902, 1903, 1904, 1906, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "control": [0, 1, 518, 528, 1017, 1132, 1146, 1151, 1159, 1167, 1172, 1175, 1176, 1273, 1281, 1292, 1293, 1294, 1303, 1304, 1306, 1309, 1310, 1311, 1313, 1324, 1325, 1339, 1358, 1380, 1385, 1389, 1392, 1396, 1410, 1411, 1417, 1418, 1892, 1907, 1916, 1918], "n_state": [0, 4, 16, 17, 21, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 313, 319, 322, 324, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 397, 398, 408, 409, 410, 411, 412, 414, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 456, 461, 465, 472, 477, 481, 484, 489, 493, 502, 508, 510, 522, 536, 537, 544, 545, 550, 551, 555, 556, 562, 565, 566, 572, 573, 574, 578, 582, 586, 590, 591, 608, 609, 610, 614, 619, 625, 631, 636, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 725, 726, 727, 731, 732, 733, 736, 737, 738, 739, 744, 745, 746, 747, 750, 751, 752, 756, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 854, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 969, 1001, 1550, 1552, 1594, 1596, 1597, 1600, 1602, 1607, 1627, 1637, 1638, 1766, 1772, 1773, 1775, 1785, 1786, 1791, 1803, 1804, 1891, 1893, 1907, 1916, 1917, 1918], "int": [0, 1, 9, 10, 13, 22, 28, 33, 37, 43, 50, 60, 64, 69, 73, 80, 95, 97, 99, 103, 124, 228, 242, 274, 302, 303, 314, 323, 324, 325, 326, 336, 343, 344, 345, 358, 366, 369, 371, 372, 377, 378, 379, 395, 397, 399, 405, 407, 409, 410, 412, 440, 441, 447, 449, 450, 451, 452, 453, 455, 458, 460, 462, 464, 466, 468, 470, 471, 478, 480, 485, 487, 490, 492, 494, 496, 497, 499, 500, 505, 508, 509, 510, 531, 536, 537, 538, 541, 542, 544, 545, 546, 550, 553, 555, 556, 557, 561, 562, 565, 566, 567, 572, 573, 579, 590, 592, 594, 595, 598, 599, 601, 602, 605, 606, 615, 620, 626, 632, 638, 648, 675, 676, 681, 682, 687, 688, 693, 694, 713, 740, 753, 759, 769, 781, 794, 800, 806, 826, 833, 855, 869, 875, 877, 923, 925, 926, 927, 932, 936, 937, 948, 949, 955, 956, 957, 958, 959, 960, 969, 972, 973, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1001, 1072, 1122, 1124, 1132, 1140, 1143, 1144, 1151, 1159, 1167, 1172, 1179, 1273, 1276, 1277, 1278, 1281, 1290, 1294, 1304, 1305, 1306, 1310, 1311, 1313, 1401, 1402, 1416, 1417, 1418, 1429, 1433, 1453, 1502, 1503, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1514, 1515, 1516, 1522, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1532, 1533, 1535, 1536, 1538, 1539, 1541, 1543, 1544, 1547, 1549, 1550, 1552, 1553, 1554, 1559, 1560, 1561, 1563, 1567, 1568, 1569, 1571, 1572, 1575, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1588, 1589, 1594, 1595, 1597, 1600, 1601, 1603, 1604, 1606, 1608, 1610, 1611, 1612, 1613, 1615, 1617, 1619, 1621, 1622, 1624, 1625, 1627, 1629, 1631, 1632, 1634, 1636, 1638, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1658, 1659, 1660, 1661, 1662, 1664, 1665, 1666, 1667, 1669, 1670, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1680, 1681, 1682, 1684, 1686, 1687, 1688, 1690, 1691, 1693, 1694, 1696, 1697, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1711, 1712, 1714, 1715, 1718, 1719, 1722, 1723, 1728, 1732, 1733, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1748, 1752, 1753, 1758, 1759, 1761, 1763, 1765, 1766, 1767, 1769, 1773, 1775, 1776, 1777, 1779, 1780, 1782, 1784, 1786, 1790, 1791, 1798, 1800, 1804, 1806, 1808, 1810, 1811, 1825, 1830, 1831, 1832, 1833, 1834, 1887, 1908], "number": [0, 9, 10, 13, 16, 33, 92, 99, 103, 114, 163, 186, 194, 210, 228, 233, 274, 276, 302, 316, 319, 323, 324, 325, 330, 336, 393, 399, 403, 407, 438, 441, 452, 453, 454, 460, 462, 471, 473, 475, 480, 482, 487, 490, 500, 503, 506, 508, 509, 510, 541, 542, 588, 592, 594, 595, 599, 601, 602, 606, 645, 829, 927, 932, 955, 956, 957, 958, 959, 960, 976, 978, 979, 1001, 1018, 1023, 1025, 1037, 1042, 1048, 1060, 1069, 1073, 1081, 1085, 1087, 1097, 1122, 1132, 1146, 1148, 1150, 1151, 1159, 1163, 1164, 1167, 1276, 1277, 1278, 1281, 1285, 1292, 1293, 1294, 1296, 1303, 1305, 1306, 1313, 1314, 1321, 1324, 1325, 1326, 1356, 1363, 1386, 1389, 1396, 1401, 1403, 1410, 1411, 1416, 1417, 1418, 1419, 1429, 1433, 1502, 1514, 1515, 1516, 1523, 1525, 1530, 1532, 1538, 1543, 1550, 1580, 1581, 1583, 1584, 1594, 1597, 1600, 1606, 1608, 1615, 1617, 1619, 1624, 1625, 1627, 1638, 1641, 1642, 1645, 1646, 1647, 1650, 1651, 1652, 1655, 1656, 1661, 1662, 1666, 1667, 1672, 1673, 1677, 1678, 1682, 1683, 1684, 1690, 1691, 1696, 1697, 1702, 1703, 1704, 1708, 1709, 1714, 1715, 1718, 1719, 1721, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1766, 1773, 1775, 1776, 1786, 1791, 1804, 1806, 1811, 1893, 1895, 1901, 1910, 1911, 1913], "classmethod": [0, 6, 9, 12, 16, 27, 302, 312, 319, 322, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 534, 541, 549, 552, 560, 563, 570, 588, 594, 601, 608, 612, 617, 622, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 925, 934, 954, 961, 964, 965, 967, 970, 974, 977, 985, 993, 996, 998, 1010, 1015, 1016, 1017, 1018, 1022, 1025, 1032, 1060, 1081, 1119, 1453, 1502, 1523, 1525, 1532, 1540, 1543, 1548, 1550, 1585, 1589, 1594, 1608, 1617, 1619, 1625, 1627, 1766, 1775, 1791, 1810, 1814], "get_model": [0, 6, 9, 12, 16, 27], "name": [0, 1, 3, 4, 6, 9, 12, 16, 17, 20, 21, 27, 35, 38, 39, 40, 44, 45, 46, 49, 51, 52, 53, 56, 57, 61, 62, 63, 66, 67, 71, 72, 77, 81, 83, 86, 92, 98, 100, 294, 302, 310, 312, 317, 319, 320, 321, 322, 327, 330, 335, 337, 339, 340, 346, 347, 348, 349, 352, 354, 359, 360, 361, 362, 365, 367, 374, 375, 380, 381, 382, 383, 385, 387, 391, 392, 393, 395, 400, 401, 403, 406, 409, 410, 413, 415, 416, 417, 418, 419, 421, 422, 423, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 445, 446, 447, 450, 451, 453, 454, 455, 459, 462, 464, 469, 473, 475, 479, 482, 483, 486, 488, 490, 492, 498, 501, 503, 504, 506, 508, 509, 510, 512, 515, 518, 519, 523, 524, 525, 527, 528, 532, 533, 534, 535, 539, 540, 541, 547, 549, 552, 558, 559, 560, 563, 568, 569, 570, 575, 576, 577, 580, 581, 583, 584, 587, 588, 594, 595, 601, 602, 608, 611, 612, 613, 616, 617, 621, 623, 624, 627, 628, 629, 630, 633, 634, 636, 639, 641, 644, 645, 649, 650, 651, 653, 654, 656, 657, 659, 660, 661, 664, 665, 666, 667, 668, 669, 671, 672, 673, 677, 678, 679, 683, 684, 685, 689, 690, 691, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 718, 719, 722, 723, 728, 729, 734, 741, 748, 754, 755, 760, 761, 762, 763, 764, 765, 766, 767, 768, 770, 771, 773, 774, 776, 777, 778, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 810, 812, 814, 815, 816, 818, 820, 821, 822, 825, 828, 829, 831, 832, 834, 835, 858, 859, 861, 863, 864, 865, 868, 871, 872, 876, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 925, 927, 934, 949, 950, 951, 952, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 970, 972, 973, 974, 976, 977, 978, 979, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1000, 1001, 1002, 1005, 1008, 1017, 1018, 1020, 1097, 1153, 1172, 1174, 1276, 1278, 1281, 1285, 1300, 1303, 1304, 1305, 1310, 1321, 1408, 1417, 1418, 1453, 1501, 1502, 1503, 1508, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1532, 1533, 1540, 1543, 1544, 1548, 1550, 1552, 1585, 1589, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1605, 1608, 1609, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1629, 1637, 1638, 1639, 1640, 1641, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1662, 1663, 1667, 1672, 1673, 1678, 1679, 1684, 1685, 1691, 1692, 1697, 1698, 1703, 1704, 1709, 1710, 1715, 1716, 1718, 1719, 1722, 1731, 1732, 1741, 1742, 1751, 1752, 1764, 1765, 1766, 1772, 1773, 1774, 1775, 1776, 1785, 1786, 1789, 1790, 1791, 1797, 1803, 1804, 1805, 1808, 1887, 1889, 1890, 1897, 1903, 1905, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1919], "get": [0, 6, 9, 12, 16, 26, 27, 30, 31, 35, 40, 46, 53, 57, 62, 65, 66, 70, 71, 74, 75, 77, 83, 92, 103, 177, 228, 302, 307, 317, 319, 326, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 426, 430, 435, 443, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 528, 532, 534, 541, 549, 551, 552, 560, 563, 570, 574, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 726, 729, 732, 734, 737, 741, 745, 746, 748, 751, 754, 757, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 925, 934, 954, 961, 963, 967, 970, 974, 976, 985, 993, 996, 998, 1002, 1008, 1009, 1017, 1025, 1030, 1031, 1039, 1040, 1060, 1061, 1066, 1067, 1081, 1082, 1096, 1100, 1115, 1142, 1159, 1167, 1186, 1193, 1202, 1205, 1215, 1216, 1233, 1234, 1236, 1237, 1238, 1247, 1250, 1255, 1261, 1264, 1269, 1276, 1277, 1313, 1314, 1362, 1376, 1389, 1396, 1401, 1417, 1418, 1454, 1456, 1461, 1463, 1466, 1471, 1478, 1485, 1488, 1493, 1496, 1502, 1504, 1521, 1522, 1523, 1525, 1531, 1532, 1542, 1543, 1550, 1562, 1573, 1577, 1589, 1594, 1600, 1608, 1616, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1903, 1906, 1907, 1908], "specif": [0, 6, 9, 12, 16, 27, 35, 40, 46, 53, 57, 77, 83, 92, 195, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1018, 1025, 1053, 1060, 1081, 1161, 1278, 1295, 1327, 1410, 1600, 1884, 1885, 1886, 1897, 1904, 1919], "mbook": [0, 1, 16, 17, 302, 303, 511, 996, 997, 998, 999, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "constructor": [0, 1, 9, 10, 16, 17, 35, 40, 41, 46, 47, 53, 54, 57, 58, 62, 63, 66, 67, 71, 72, 75, 76, 77, 78, 83, 84, 87, 88, 92, 93, 302, 303, 312, 317, 319, 320, 327, 330, 331, 339, 340, 349, 350, 354, 355, 361, 362, 363, 375, 376, 383, 387, 388, 393, 394, 400, 403, 409, 410, 413, 415, 416, 417, 418, 419, 423, 429, 430, 434, 435, 438, 439, 443, 444, 454, 455, 462, 464, 473, 475, 476, 482, 483, 490, 492, 503, 504, 506, 512, 513, 515, 516, 518, 519, 520, 525, 527, 528, 530, 534, 535, 541, 542, 549, 552, 553, 560, 561, 563, 564, 570, 571, 576, 577, 581, 584, 585, 588, 594, 595, 601, 602, 608, 609, 612, 613, 617, 618, 623, 624, 629, 630, 634, 635, 641, 642, 645, 646, 650, 651, 654, 657, 660, 661, 665, 666, 667, 668, 669, 672, 673, 678, 679, 684, 685, 690, 691, 696, 697, 700, 701, 704, 705, 708, 709, 712, 713, 716, 719, 720, 723, 724, 729, 730, 734, 735, 741, 742, 748, 749, 754, 755, 761, 764, 765, 771, 774, 775, 776, 777, 783, 784, 789, 790, 796, 797, 802, 803, 808, 809, 810, 815, 816, 821, 822, 828, 829, 835, 850, 858, 859, 864, 865, 871, 872, 879, 880, 883, 884, 887, 888, 891, 892, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 920, 921, 925, 926, 934, 935, 954, 961, 962, 964, 967, 968, 970, 971, 974, 975, 980, 981, 985, 986, 993, 994, 996, 997, 998, 999, 1002, 1003, 1025, 1050, 1060, 1081, 1278, 1281, 1303, 1305, 1461, 1462, 1463, 1464, 1478, 1479, 1485, 1486, 1493, 1494, 1502, 1503, 1523, 1524, 1525, 1526, 1532, 1533, 1550, 1552, 1594, 1600, 1601, 1608, 1609, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1628, 1641, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1662, 1663, 1667, 1668, 1672, 1673, 1678, 1679, 1684, 1685, 1691, 1692, 1697, 1698, 1703, 1704, 1709, 1710, 1715, 1716, 1718, 1719, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1766, 1791, 1797, 1810, 1811, 1911, 1919], "init_st": [0, 7, 9, 16], "initi": [0, 7, 8, 9, 16, 18, 35, 37, 40, 43, 46, 50, 53, 57, 60, 77, 80, 83, 87, 90, 92, 97, 302, 311, 317, 320, 322, 327, 329, 330, 339, 344, 347, 349, 354, 361, 362, 369, 370, 375, 379, 381, 383, 387, 393, 403, 413, 416, 419, 423, 430, 433, 435, 454, 455, 462, 473, 475, 482, 485, 490, 496, 503, 506, 512, 515, 518, 519, 534, 538, 539, 541, 546, 547, 549, 552, 557, 558, 560, 563, 567, 568, 570, 575, 576, 581, 584, 588, 594, 598, 601, 605, 608, 612, 617, 620, 623, 626, 629, 632, 634, 641, 645, 648, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 740, 741, 748, 753, 754, 759, 761, 764, 769, 771, 774, 776, 781, 783, 787, 789, 793, 794, 796, 799, 800, 802, 805, 806, 808, 809, 814, 815, 820, 821, 825, 826, 828, 832, 833, 835, 855, 858, 863, 864, 868, 869, 871, 876, 877, 879, 883, 887, 891, 895, 900, 905, 910, 915, 980, 983, 1090, 1093, 1112, 1114, 1138, 1142, 1315, 1453, 1502, 1512, 1513, 1523, 1525, 1529, 1532, 1543, 1550, 1570, 1571, 1572, 1594, 1595, 1600, 1603, 1608, 1613, 1617, 1619, 1625, 1627, 1629, 1630, 1631, 1632, 1641, 1646, 1651, 1656, 1660, 1662, 1667, 1672, 1676, 1678, 1684, 1688, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1727, 1728, 1732, 1737, 1738, 1742, 1747, 1748, 1752, 1757, 1758, 1759, 1766, 1768, 1769, 1775, 1778, 1779, 1780, 1791, 1799, 1800, 1806, 1810, 1813, 1817, 1819, 1820, 1822, 1823, 1903, 1907, 1910, 1912, 1916, 1918], "need": [0, 7, 9, 16, 368, 419, 421, 428, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 718, 719, 722, 739, 895, 899, 900, 904, 905, 909, 910, 914, 915, 919, 1017, 1090, 1096, 1111, 1112, 1115, 1134, 1147, 1148, 1153, 1245, 1246, 1247, 1259, 1260, 1261, 1274, 1303, 1304, 1305, 1311, 1390, 1397, 1403, 1405, 1408, 1409, 1416, 1417, 1418, 1903, 1907, 1910, 1912, 1914, 1915, 1920], "all_model": [0, 2, 9, 16], "with_stat": [0, 2, 9, 16], "true": [0, 2, 3, 4, 9, 11, 16, 29, 64, 69, 73, 103, 186, 228, 276, 368, 370, 397, 424, 443, 450, 455, 503, 504, 508, 510, 590, 594, 595, 601, 602, 641, 642, 854, 872, 949, 955, 956, 957, 958, 959, 960, 1002, 1008, 1017, 1022, 1025, 1031, 1035, 1041, 1047, 1049, 1060, 1068, 1071, 1072, 1081, 1082, 1084, 1122, 1126, 1133, 1135, 1137, 1138, 1142, 1146, 1148, 1149, 1150, 1151, 1153, 1159, 1163, 1164, 1167, 1172, 1175, 1176, 1177, 1189, 1209, 1219, 1237, 1257, 1271, 1273, 1276, 1277, 1281, 1283, 1284, 1285, 1288, 1290, 1292, 1295, 1303, 1305, 1309, 1310, 1311, 1313, 1318, 1321, 1327, 1330, 1331, 1332, 1339, 1356, 1364, 1371, 1386, 1389, 1390, 1393, 1396, 1397, 1401, 1404, 1407, 1410, 1415, 1416, 1417, 1418, 1424, 1426, 1428, 1429, 1433, 1453, 1459, 1460, 1469, 1470, 1471, 1473, 1476, 1477, 1478, 1480, 1483, 1484, 1485, 1487, 1491, 1492, 1499, 1500, 1513, 1556, 1619, 1620, 1726, 1736, 1746, 1756, 1808, 1809, 1811, 1897, 1906, 1907, 1909, 1910, 1912, 1914, 1916, 1918, 1919, 1920], "return": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 106, 107, 108, 112, 115, 116, 118, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 163, 186, 228, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 521, 534, 541, 543, 549, 552, 554, 560, 563, 570, 576, 581, 584, 588, 594, 596, 601, 603, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 662, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 739, 741, 743, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 811, 815, 817, 821, 823, 828, 830, 835, 858, 860, 864, 866, 871, 873, 879, 883, 887, 891, 895, 900, 905, 910, 915, 925, 944, 949, 955, 956, 957, 974, 996, 1001, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1029, 1033, 1034, 1035, 1036, 1037, 1038, 1044, 1056, 1057, 1058, 1059, 1060, 1062, 1064, 1065, 1070, 1072, 1074, 1078, 1079, 1080, 1081, 1083, 1086, 1089, 1090, 1092, 1096, 1097, 1100, 1102, 1103, 1105, 1106, 1107, 1112, 1113, 1115, 1120, 1121, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1154, 1155, 1162, 1165, 1166, 1169, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1187, 1188, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1204, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1218, 1220, 1221, 1228, 1229, 1231, 1232, 1235, 1239, 1240, 1241, 1242, 1243, 1244, 1248, 1249, 1252, 1253, 1254, 1256, 1258, 1262, 1263, 1266, 1267, 1268, 1270, 1272, 1273, 1274, 1275, 1282, 1288, 1299, 1308, 1312, 1315, 1326, 1328, 1356, 1432, 1435, 1454, 1461, 1463, 1471, 1478, 1485, 1493, 1502, 1523, 1525, 1532, 1543, 1600, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1897, 1903, 1917], "calc_farm": [0, 3, 9, 11, 16, 20, 1550, 1552, 1903, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "calc_paramet": [0, 3, 4, 20, 21], "persist": [0, 3, 20, 1362, 1376, 1389, 1396], "final": [0, 3, 4, 5, 9, 11, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 87, 89, 92, 302, 306, 317, 327, 330, 339, 343, 347, 349, 354, 361, 362, 366, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 432, 435, 436, 454, 462, 466, 473, 475, 482, 490, 494, 503, 506, 512, 515, 518, 519, 528, 531, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 675, 678, 681, 684, 687, 690, 693, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 768, 771, 774, 776, 783, 786, 789, 792, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 875, 879, 881, 883, 885, 887, 889, 891, 893, 895, 896, 897, 900, 901, 902, 905, 906, 907, 910, 911, 912, 915, 916, 917, 980, 1502, 1509, 1510, 1511, 1523, 1525, 1532, 1543, 1550, 1567, 1568, 1594, 1600, 1608, 1612, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798, 1810, 1812, 1817, 1819, 1821, 1903, 1906, 1910, 1915, 1918, 1920], "data": [0, 1, 3, 4, 9, 11, 16, 20, 21, 26, 30, 31, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 97, 103, 175, 177, 195, 228, 302, 303, 305, 307, 308, 313, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 339, 341, 345, 349, 351, 353, 354, 357, 361, 362, 365, 367, 368, 369, 371, 375, 377, 378, 381, 383, 384, 386, 387, 390, 393, 395, 397, 398, 403, 405, 409, 413, 414, 416, 419, 420, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 458, 462, 464, 465, 468, 473, 475, 477, 478, 482, 483, 484, 490, 492, 493, 497, 503, 504, 505, 506, 508, 509, 512, 515, 518, 519, 522, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 551, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 584, 586, 588, 590, 591, 594, 601, 608, 610, 612, 613, 614, 615, 617, 619, 622, 623, 625, 629, 630, 631, 634, 636, 637, 638, 641, 642, 643, 645, 646, 647, 650, 652, 654, 655, 657, 658, 660, 661, 663, 665, 666, 667, 668, 669, 670, 672, 673, 674, 676, 678, 679, 680, 682, 684, 685, 686, 688, 690, 691, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 713, 714, 716, 717, 719, 721, 723, 725, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 739, 741, 744, 745, 746, 747, 748, 749, 750, 751, 752, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 778, 779, 780, 781, 783, 785, 786, 787, 789, 791, 792, 793, 794, 796, 798, 799, 800, 802, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 818, 819, 820, 821, 822, 824, 825, 826, 828, 829, 831, 832, 833, 835, 851, 852, 853, 854, 855, 858, 859, 861, 862, 863, 864, 867, 868, 869, 871, 874, 876, 877, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 900, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 925, 926, 934, 939, 940, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 954, 958, 959, 960, 961, 966, 967, 970, 971, 972, 973, 974, 976, 978, 979, 980, 983, 984, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1001, 1002, 1003, 1009, 1010, 1015, 1016, 1017, 1036, 1060, 1063, 1081, 1096, 1115, 1122, 1132, 1133, 1134, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1179, 1183, 1199, 1200, 1245, 1246, 1247, 1251, 1257, 1259, 1260, 1261, 1265, 1271, 1273, 1276, 1277, 1278, 1279, 1281, 1285, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1321, 1322, 1323, 1324, 1325, 1327, 1332, 1340, 1356, 1358, 1386, 1387, 1393, 1394, 1401, 1402, 1403, 1404, 1407, 1408, 1409, 1410, 1413, 1417, 1418, 1424, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1439, 1445, 1449, 1502, 1510, 1511, 1523, 1525, 1532, 1543, 1550, 1567, 1568, 1590, 1591, 1594, 1598, 1599, 1600, 1602, 1604, 1608, 1612, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1787, 1788, 1791, 1798, 1807, 1809, 1882, 1884, 1885, 1887, 1888, 1890, 1891, 1892, 1896, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1907, 1909, 1910, 1913, 1914, 1915, 1916, 1917, 1918, 1921], "calc_point": [0, 4, 9, 16, 21, 969, 987, 988, 989, 990, 991, 992, 1903, 1906, 1907, 1917], "farm_result": [0, 3, 4, 9, 11, 16, 20, 21, 25, 925, 926, 934, 935, 954, 967, 968, 970, 971, 985, 986, 993, 994, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "point": [0, 1, 4, 9, 14, 16, 17, 21, 24, 31, 32, 46, 48, 49, 57, 59, 91, 94, 102, 103, 163, 186, 280, 281, 284, 285, 286, 289, 302, 313, 319, 322, 323, 330, 331, 333, 368, 377, 378, 381, 383, 384, 387, 390, 393, 395, 396, 397, 398, 399, 402, 423, 426, 427, 428, 431, 432, 433, 436, 437, 451, 453, 456, 465, 477, 484, 493, 528, 536, 537, 539, 541, 542, 544, 545, 547, 549, 550, 551, 555, 556, 558, 562, 565, 566, 568, 570, 572, 573, 574, 575, 578, 582, 584, 586, 588, 589, 590, 591, 592, 593, 594, 595, 597, 599, 600, 601, 602, 604, 606, 607, 723, 726, 727, 729, 732, 733, 734, 735, 737, 738, 739, 741, 742, 745, 747, 748, 749, 751, 752, 754, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 955, 956, 957, 958, 959, 960, 967, 968, 969, 974, 975, 976, 978, 984, 985, 986, 996, 997, 1017, 1025, 1034, 1053, 1059, 1060, 1076, 1077, 1081, 1096, 1115, 1122, 1132, 1133, 1140, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1159, 1161, 1162, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1245, 1246, 1259, 1260, 1273, 1276, 1277, 1281, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1356, 1380, 1385, 1392, 1401, 1402, 1410, 1415, 1417, 1418, 1419, 1420, 1424, 1429, 1433, 1454, 1457, 1458, 1459, 1460, 1461, 1463, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1493, 1497, 1498, 1499, 1500, 1550, 1552, 1602, 1683, 1721, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1776, 1808, 1828, 1829, 1883, 1884, 1887, 1888, 1892, 1895, 1896, 1897, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1916, 1917, 1918, 1919, 1920], "point_model": [0, 4, 9, 21, 330, 331, 528, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 1911], "none": [0, 1, 4, 9, 10, 16, 17, 35, 40, 46, 47, 48, 53, 57, 62, 63, 64, 66, 67, 69, 71, 72, 73, 77, 78, 83, 87, 91, 92, 96, 103, 136, 147, 228, 254, 264, 302, 303, 308, 313, 317, 319, 326, 327, 329, 330, 334, 339, 341, 349, 354, 361, 362, 367, 368, 375, 376, 378, 383, 387, 390, 393, 395, 397, 403, 404, 409, 410, 411, 412, 413, 416, 417, 419, 423, 424, 428, 430, 435, 438, 439, 447, 449, 451, 452, 453, 454, 455, 457, 462, 464, 467, 470, 473, 475, 476, 482, 483, 490, 492, 495, 499, 503, 506, 509, 512, 515, 518, 519, 525, 527, 528, 530, 532, 533, 534, 535, 537, 541, 542, 545, 549, 550, 552, 553, 556, 560, 561, 563, 564, 566, 570, 571, 573, 576, 581, 584, 588, 590, 594, 601, 608, 612, 617, 623, 629, 630, 634, 641, 645, 650, 654, 657, 660, 661, 665, 667, 669, 672, 673, 678, 679, 684, 685, 690, 691, 696, 700, 704, 708, 712, 713, 716, 719, 723, 729, 734, 735, 739, 741, 748, 749, 754, 755, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 821, 822, 828, 829, 858, 859, 864, 871, 879, 883, 887, 891, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 920, 921, 925, 926, 927, 930, 931, 932, 933, 934, 936, 941, 948, 949, 954, 955, 956, 957, 958, 959, 960, 961, 962, 969, 970, 971, 972, 973, 974, 976, 978, 980, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 997, 998, 1000, 1001, 1002, 1003, 1008, 1017, 1018, 1020, 1025, 1031, 1081, 1082, 1090, 1093, 1094, 1102, 1103, 1112, 1122, 1123, 1132, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1163, 1164, 1167, 1168, 1172, 1173, 1174, 1175, 1176, 1177, 1180, 1181, 1182, 1194, 1199, 1207, 1211, 1212, 1216, 1230, 1232, 1237, 1243, 1255, 1269, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1290, 1292, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1329, 1332, 1340, 1343, 1356, 1358, 1360, 1362, 1364, 1370, 1371, 1376, 1380, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1396, 1397, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1416, 1417, 1418, 1419, 1428, 1429, 1430, 1431, 1433, 1434, 1451, 1453, 1471, 1473, 1478, 1480, 1485, 1487, 1501, 1502, 1503, 1505, 1506, 1507, 1523, 1525, 1526, 1527, 1528, 1532, 1533, 1535, 1536, 1543, 1544, 1550, 1552, 1553, 1554, 1559, 1569, 1594, 1600, 1608, 1609, 1610, 1611, 1617, 1618, 1619, 1621, 1622, 1625, 1626, 1627, 1629, 1641, 1642, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1721, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1766, 1775, 1776, 1791, 1806, 1808, 1810, 1811, 1897, 1906, 1907, 1909, 1911, 1912, 1916, 1917, 1918, 1921], "given": [0, 4, 9, 16, 21, 195, 409, 410, 423, 426, 475, 532, 608, 634, 661, 684, 690, 723, 726, 729, 732, 734, 737, 741, 745, 748, 751, 754, 755, 757, 809, 810, 821, 822, 828, 829, 858, 859, 934, 936, 941, 948, 953, 967, 1002, 1008, 1017, 1025, 1035, 1036, 1051, 1052, 1054, 1059, 1060, 1075, 1076, 1081, 1090, 1100, 1112, 1122, 1132, 1133, 1143, 1147, 1148, 1149, 1151, 1152, 1157, 1159, 1167, 1169, 1172, 1173, 1174, 1175, 1176, 1199, 1276, 1277, 1278, 1279, 1281, 1282, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1343, 1358, 1360, 1390, 1397, 1401, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1417, 1418, 1419, 1420, 1424, 1428, 1429, 1430, 1433, 1437, 1440, 1441, 1446, 1501, 1502, 1510, 1511, 1523, 1525, 1532, 1543, 1550, 1560, 1561, 1567, 1568, 1594, 1608, 1612, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1670, 1672, 1678, 1683, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1721, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798, 1810, 1816, 1817, 1818, 1819, 1824, 1891, 1892, 1893, 1896, 1897, 1898, 1903, 1915], "set": [0, 4, 9, 14, 16, 21, 92, 93, 327, 339, 347, 409, 410, 416, 508, 510, 518, 576, 634, 641, 927, 1017, 1025, 1050, 1053, 1060, 1081, 1096, 1102, 1111, 1115, 1123, 1132, 1134, 1137, 1138, 1141, 1142, 1145, 1146, 1148, 1149, 1150, 1151, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1183, 1230, 1231, 1273, 1275, 1276, 1277, 1278, 1281, 1283, 1284, 1288, 1290, 1292, 1294, 1295, 1296, 1303, 1305, 1306, 1307, 1309, 1310, 1311, 1313, 1314, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1354, 1355, 1357, 1358, 1359, 1360, 1361, 1362, 1364, 1365, 1366, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1413, 1415, 1416, 1417, 1418, 1421, 1422, 1424, 1426, 1428, 1429, 1431, 1434, 1453, 1834, 1892, 1903, 1905, 1906, 1907, 1908, 1914, 1915, 1919, 1920, 1921], "clear_mem": [0, 5, 9, 16, 302, 306, 1918], "fals": [0, 3, 4, 5, 9, 16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 97, 103, 186, 302, 306, 315, 317, 319, 326, 327, 330, 339, 349, 350, 354, 361, 362, 367, 368, 369, 375, 383, 387, 393, 395, 397, 403, 413, 416, 419, 423, 430, 435, 447, 454, 455, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 585, 588, 590, 594, 601, 608, 612, 617, 623, 629, 634, 635, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 697, 700, 701, 704, 705, 708, 709, 712, 716, 719, 723, 729, 734, 741, 748, 754, 759, 761, 764, 769, 771, 774, 776, 781, 783, 789, 794, 796, 797, 800, 802, 803, 806, 808, 809, 810, 815, 821, 826, 828, 833, 835, 855, 858, 864, 869, 871, 877, 879, 883, 887, 891, 895, 896, 900, 901, 905, 906, 910, 915, 916, 925, 926, 927, 934, 936, 942, 948, 955, 956, 957, 958, 959, 960, 967, 969, 970, 972, 973, 974, 976, 978, 979, 987, 988, 989, 990, 991, 992, 996, 1001, 1017, 1022, 1025, 1045, 1046, 1047, 1049, 1053, 1060, 1072, 1081, 1122, 1133, 1135, 1137, 1138, 1142, 1148, 1149, 1151, 1153, 1167, 1169, 1172, 1175, 1176, 1189, 1201, 1219, 1237, 1255, 1256, 1257, 1269, 1270, 1271, 1276, 1277, 1278, 1281, 1283, 1284, 1285, 1295, 1303, 1304, 1305, 1309, 1311, 1313, 1317, 1321, 1327, 1330, 1332, 1339, 1342, 1364, 1371, 1386, 1389, 1390, 1393, 1396, 1397, 1404, 1407, 1410, 1415, 1416, 1426, 1428, 1429, 1433, 1453, 1454, 1455, 1459, 1461, 1463, 1465, 1469, 1471, 1476, 1478, 1483, 1485, 1491, 1493, 1495, 1499, 1503, 1550, 1559, 1564, 1565, 1569, 1594, 1600, 1627, 1629, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1808, 1826, 1897, 1903, 1909], "print": [0, 9, 16, 302, 314, 528, 533, 925, 927, 934, 954, 961, 965, 967, 970, 974, 985, 993, 996, 998, 1100, 1296, 1453, 1502, 1523, 1525, 1532, 1540, 1543, 1548, 1608, 1617, 1619, 1625, 1810, 1815, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "arg": [0, 9, 10, 16, 17, 20, 302, 312, 314, 393, 400, 413, 415, 416, 418, 423, 429, 430, 434, 448, 449, 503, 504, 525, 527, 528, 532, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 697, 700, 701, 704, 705, 708, 709, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 775, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 925, 934, 944, 954, 961, 964, 967, 969, 970, 974, 985, 993, 996, 998, 1017, 1025, 1030, 1060, 1061, 1081, 1118, 1142, 1146, 1148, 1150, 1163, 1164, 1174, 1182, 1243, 1290, 1293, 1303, 1304, 1305, 1310, 1314, 1324, 1325, 1358, 1368, 1369, 1377, 1395, 1403, 1407, 1408, 1417, 1418, 1419, 1420, 1627, 1628, 1667, 1668, 1810, 1815, 1816, 1817, 1818, 1819, 1824, 1826, 1891, 1897, 1907], "vlim": [0, 9, 16, 302, 314], "1": [0, 1, 9, 16, 83, 84, 103, 114, 163, 182, 186, 228, 233, 274, 275, 276, 283, 302, 314, 396, 397, 438, 440, 447, 449, 450, 451, 452, 453, 455, 508, 510, 512, 513, 515, 589, 590, 597, 604, 665, 666, 668, 673, 679, 684, 685, 691, 802, 808, 809, 815, 864, 865, 920, 923, 925, 927, 934, 936, 937, 972, 973, 978, 1000, 1017, 1025, 1028, 1034, 1060, 1081, 1100, 1122, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1146, 1148, 1151, 1153, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1200, 1233, 1276, 1277, 1278, 1281, 1285, 1290, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1314, 1315, 1321, 1322, 1323, 1329, 1330, 1332, 1339, 1341, 1358, 1373, 1380, 1387, 1394, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1417, 1418, 1419, 1428, 1429, 1433, 1451, 1453, 1510, 1511, 1550, 1567, 1572, 1594, 1595, 1609, 1612, 1627, 1632, 1656, 1657, 1683, 1684, 1685, 1697, 1698, 1721, 1722, 1728, 1732, 1738, 1742, 1748, 1752, 1759, 1766, 1767, 1769, 1775, 1776, 1777, 1780, 1791, 1798, 1800, 1806, 1811, 1825, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1887, 1897, 1900, 1902, 1904, 1906, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "kwarg": [0, 3, 4, 9, 10, 11, 16, 17, 20, 21, 103, 133, 228, 251, 302, 312, 314, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 448, 449, 503, 504, 510, 525, 527, 528, 532, 534, 541, 549, 552, 553, 560, 561, 563, 570, 588, 594, 601, 608, 609, 612, 613, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 697, 700, 701, 704, 705, 708, 709, 712, 716, 719, 723, 729, 734, 741, 748, 754, 755, 761, 764, 771, 774, 775, 776, 783, 789, 796, 802, 808, 809, 810, 815, 816, 821, 828, 829, 858, 859, 864, 871, 920, 923, 925, 927, 932, 934, 941, 954, 955, 956, 957, 958, 959, 960, 961, 964, 966, 967, 968, 969, 970, 971, 972, 973, 974, 978, 979, 985, 986, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 1000, 1010, 1015, 1016, 1017, 1025, 1030, 1060, 1061, 1081, 1090, 1095, 1099, 1102, 1112, 1118, 1119, 1122, 1132, 1133, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1152, 1157, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1182, 1243, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1285, 1290, 1292, 1293, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1358, 1359, 1362, 1364, 1368, 1369, 1376, 1377, 1380, 1385, 1388, 1389, 1390, 1392, 1395, 1396, 1397, 1401, 1402, 1403, 1404, 1408, 1411, 1413, 1415, 1417, 1418, 1419, 1420, 1430, 1433, 1502, 1503, 1523, 1524, 1525, 1526, 1532, 1533, 1534, 1543, 1544, 1545, 1550, 1552, 1555, 1594, 1595, 1608, 1609, 1617, 1618, 1619, 1620, 1625, 1626, 1627, 1628, 1632, 1642, 1646, 1647, 1651, 1652, 1657, 1662, 1663, 1667, 1668, 1673, 1678, 1679, 1683, 1721, 1766, 1769, 1775, 1776, 1780, 1791, 1797, 1800, 1807, 1808, 1810, 1815, 1816, 1817, 1818, 1819, 1824, 1826, 1834, 1897], "function": [0, 9, 16, 36, 42, 48, 55, 59, 79, 85, 94, 302, 314, 327, 328, 329, 333, 341, 351, 353, 354, 357, 377, 378, 384, 386, 387, 390, 397, 414, 425, 456, 462, 464, 465, 470, 477, 484, 490, 492, 493, 499, 522, 536, 537, 544, 545, 550, 555, 556, 562, 565, 566, 572, 573, 578, 582, 586, 590, 608, 609, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 660, 663, 670, 674, 680, 686, 692, 725, 731, 736, 744, 750, 756, 961, 962, 966, 978, 987, 988, 989, 990, 991, 992, 1001, 1017, 1059, 1090, 1099, 1112, 1122, 1124, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1154, 1155, 1159, 1167, 1172, 1175, 1176, 1177, 1180, 1181, 1184, 1244, 1258, 1273, 1276, 1281, 1283, 1294, 1296, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1326, 1328, 1354, 1356, 1358, 1364, 1401, 1402, 1404, 1407, 1411, 1413, 1428, 1433, 1441, 1444, 1446, 1448, 1451, 1453, 1502, 1514, 1521, 1522, 1523, 1525, 1530, 1531, 1532, 1538, 1542, 1543, 1544, 1550, 1559, 1564, 1565, 1567, 1568, 1569, 1580, 1581, 1590, 1591, 1594, 1598, 1599, 1602, 1608, 1609, 1615, 1616, 1617, 1618, 1619, 1620, 1624, 1625, 1626, 1627, 1641, 1645, 1646, 1650, 1651, 1655, 1656, 1661, 1662, 1666, 1667, 1672, 1677, 1678, 1682, 1683, 1684, 1690, 1691, 1696, 1697, 1702, 1703, 1708, 1709, 1714, 1715, 1718, 1719, 1721, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1787, 1788, 1791, 1798, 1810, 1816, 1817, 1818, 1819, 1824, 1827, 1828, 1882, 1888, 1889, 1890, 1891, 1892, 1893, 1896, 1897, 1898, 1903, 1906, 1908, 1910, 1911, 1916, 1920], "base": [0, 9, 11, 16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 62, 77, 79, 83, 85, 87, 89, 90, 91, 92, 94, 103, 165, 228, 302, 314, 317, 327, 328, 330, 331, 333, 339, 341, 342, 349, 351, 354, 357, 361, 362, 372, 375, 383, 384, 387, 390, 393, 403, 413, 414, 416, 419, 423, 425, 430, 435, 447, 451, 453, 454, 456, 462, 465, 473, 475, 477, 482, 484, 490, 493, 503, 506, 512, 515, 518, 519, 522, 528, 534, 541, 549, 552, 560, 563, 570, 576, 578, 581, 582, 584, 586, 588, 594, 601, 608, 610, 612, 614, 617, 619, 623, 625, 629, 631, 634, 637, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 678, 680, 684, 686, 690, 692, 696, 700, 704, 708, 712, 716, 719, 723, 725, 729, 731, 734, 736, 741, 744, 748, 750, 754, 756, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 816, 821, 828, 835, 858, 859, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 961, 968, 971, 980, 983, 984, 986, 1002, 1017, 1018, 1081, 1090, 1093, 1112, 1114, 1118, 1133, 1135, 1148, 1149, 1151, 1276, 1277, 1284, 1293, 1296, 1314, 1317, 1319, 1324, 1325, 1360, 1361, 1417, 1418, 1439, 1445, 1449, 1450, 1454, 1493, 1532, 1543, 1550, 1559, 1594, 1600, 1602, 1608, 1642, 1647, 1652, 1657, 1667, 1673, 1679, 1718, 1819, 1882, 1885, 1886, 1888, 1892, 1893, 1896, 1897, 1898, 1900, 1903, 1905, 1906, 1912, 1913, 1915, 1916, 1918, 1919, 1920, 1921], "verbos": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 92, 97, 302, 303, 314, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 438, 440, 447, 449, 450, 451, 452, 453, 454, 455, 458, 462, 466, 468, 470, 473, 475, 478, 482, 485, 490, 494, 496, 497, 499, 503, 505, 506, 510, 512, 515, 518, 519, 528, 531, 534, 538, 541, 546, 549, 552, 557, 560, 563, 567, 570, 576, 579, 581, 584, 588, 594, 598, 601, 605, 608, 612, 615, 617, 620, 623, 626, 629, 632, 634, 638, 641, 645, 648, 650, 654, 657, 660, 665, 667, 669, 672, 675, 676, 678, 681, 682, 684, 687, 688, 690, 693, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 740, 741, 748, 753, 754, 759, 761, 764, 769, 771, 774, 776, 781, 783, 789, 794, 796, 800, 802, 806, 808, 809, 815, 821, 826, 828, 833, 835, 855, 858, 864, 869, 871, 875, 877, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 923, 934, 936, 937, 972, 973, 987, 988, 989, 990, 991, 992, 1502, 1509, 1510, 1511, 1512, 1523, 1525, 1529, 1532, 1543, 1550, 1553, 1554, 1559, 1560, 1561, 1567, 1568, 1569, 1572, 1594, 1595, 1600, 1603, 1604, 1608, 1612, 1613, 1617, 1619, 1625, 1627, 1632, 1641, 1646, 1651, 1656, 1660, 1662, 1667, 1669, 1670, 1672, 1676, 1678, 1684, 1688, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1728, 1732, 1738, 1742, 1748, 1752, 1759, 1766, 1767, 1769, 1775, 1777, 1780, 1791, 1798, 1800, 1806, 1810, 1811, 1815, 1825, 1834, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "chunk": [0, 1, 3, 4, 9, 16, 17, 20, 21, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 303, 304, 317, 319, 326, 327, 328, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 371, 375, 383, 384, 387, 390, 393, 403, 405, 413, 414, 416, 419, 423, 425, 430, 435, 454, 456, 458, 462, 465, 468, 473, 475, 477, 478, 482, 484, 490, 493, 497, 503, 505, 506, 512, 515, 518, 519, 522, 534, 541, 549, 552, 560, 563, 570, 576, 578, 579, 581, 582, 584, 586, 588, 594, 601, 608, 610, 612, 614, 615, 617, 619, 623, 625, 629, 631, 634, 637, 638, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 700, 704, 708, 712, 716, 719, 723, 725, 729, 731, 734, 736, 741, 744, 748, 750, 754, 756, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600, 1602, 1604, 1883, 1886, 1903, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "d": [0, 9, 16, 26, 30, 31, 103, 182, 228, 302, 304, 409, 410, 416, 417, 445, 446, 669, 809, 810, 925, 926, 1060, 1074, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1321, 1401, 1402, 1453, 1502, 1503, 1525, 1526, 1641, 1642, 1683, 1721, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1828, 1829, 1834, 1851, 1897, 1899, 1906, 1907, 1910, 1916, 1918], "properti": [0, 9, 13, 15, 16, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 40, 46, 53, 57, 77, 83, 92, 95, 302, 310, 317, 319, 323, 324, 325, 327, 330, 339, 349, 354, 361, 362, 370, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 438, 441, 442, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 856, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 924, 1017, 1018, 1020, 1025, 1037, 1060, 1072, 1081, 1122, 1124, 1132, 1133, 1135, 1136, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1152, 1153, 1159, 1160, 1167, 1172, 1173, 1174, 1175, 1176, 1273, 1276, 1277, 1279, 1280, 1281, 1283, 1290, 1291, 1293, 1294, 1299, 1301, 1302, 1303, 1305, 1306, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1326, 1340, 1356, 1358, 1362, 1376, 1380, 1385, 1389, 1390, 1392, 1396, 1397, 1402, 1403, 1404, 1405, 1407, 1409, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1423, 1425, 1426, 1427, 1430, 1433, 1453, 1502, 1508, 1513, 1515, 1516, 1519, 1520, 1523, 1525, 1532, 1537, 1539, 1541, 1543, 1546, 1547, 1549, 1550, 1556, 1562, 1563, 1566, 1573, 1576, 1577, 1580, 1581, 1582, 1583, 1584, 1588, 1594, 1600, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1810, 1817, 1819, 1823], "idata_mem": [0, 9, 16, 302, 310], "current": [0, 9, 13, 16, 19, 22, 23, 24, 26, 28, 29, 30, 31, 34, 64, 69, 73, 87, 90, 91, 92, 95, 195, 302, 310, 980, 983, 984, 1017, 1158, 1172, 1199, 1251, 1257, 1265, 1271, 1278, 1295, 1303, 1305, 1309, 1317, 1321, 1327, 1358, 1362, 1371, 1376, 1389, 1396, 1408, 1411, 1415, 1416, 1424, 1550, 1563, 1594, 1627, 1766, 1775, 1791, 1892, 1913, 1915], "idata": [0, 5, 9, 16, 302, 306, 308, 309, 310, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604, 1903], "memori": [0, 3, 4, 5, 9, 16, 20, 21, 103, 153, 228, 302, 306, 307, 310, 345, 371, 405, 454, 455, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1097, 1604, 1683, 1721, 1903, 1919], "store_model_data": [0, 9, 16, 302, 315], "forc": [0, 3, 4, 9, 16, 20, 21, 53, 83, 92, 97, 195, 302, 315, 317, 327, 330, 349, 354, 361, 362, 369, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 512, 515, 519, 576, 581, 584, 588, 608, 612, 634, 641, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 741, 754, 759, 761, 764, 769, 771, 774, 776, 781, 783, 789, 794, 796, 800, 802, 806, 808, 809, 815, 821, 826, 828, 833, 835, 855, 858, 864, 869, 871, 877, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1017, 1132, 1142, 1151, 1159, 1167, 1294, 1295, 1306, 1313, 1361, 1401, 1410, 1419, 1426, 1892, 1905], "store": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 305, 315, 317, 320, 322, 327, 330, 339, 340, 345, 349, 354, 361, 362, 365, 367, 371, 375, 383, 387, 393, 395, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 851, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1025, 1038, 1060, 1065, 1081, 1309, 1407, 1600, 1604, 1683, 1721, 1906, 1907, 1911], "get_model_data": [0, 9, 16, 302, 307], "from": [0, 9, 16, 35, 40, 46, 47, 49, 53, 57, 77, 83, 92, 103, 108, 112, 114, 195, 228, 233, 302, 307, 308, 317, 318, 319, 322, 327, 330, 331, 339, 349, 354, 361, 362, 365, 367, 368, 375, 376, 377, 383, 387, 393, 395, 398, 403, 413, 416, 419, 423, 424, 428, 430, 435, 443, 444, 445, 446, 449, 450, 454, 455, 462, 464, 473, 475, 482, 490, 492, 503, 506, 508, 510, 512, 514, 515, 517, 518, 519, 534, 535, 536, 541, 542, 544, 549, 552, 553, 555, 560, 561, 562, 563, 564, 565, 570, 571, 572, 576, 577, 581, 584, 588, 591, 594, 601, 608, 612, 613, 617, 623, 629, 630, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 724, 729, 734, 735, 739, 741, 748, 749, 754, 755, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 821, 828, 835, 858, 864, 865, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 925, 926, 966, 969, 976, 978, 987, 988, 989, 990, 991, 992, 996, 1000, 1002, 1003, 1004, 1005, 1017, 1018, 1020, 1025, 1031, 1050, 1060, 1063, 1081, 1090, 1097, 1101, 1112, 1117, 1122, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1277, 1279, 1281, 1283, 1284, 1294, 1297, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1321, 1323, 1326, 1328, 1331, 1341, 1375, 1380, 1385, 1386, 1392, 1393, 1401, 1402, 1403, 1407, 1408, 1411, 1413, 1417, 1418, 1419, 1421, 1422, 1423, 1425, 1430, 1433, 1450, 1453, 1501, 1550, 1553, 1554, 1585, 1594, 1600, 1627, 1683, 1721, 1766, 1775, 1791, 1808, 1830, 1831, 1832, 1833, 1839, 1840, 1864, 1865, 1880, 1881, 1889, 1890, 1891, 1892, 1896, 1897, 1899, 1900, 1903, 1905, 1906, 1907, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "del_model_data": [0, 9, 16, 302, 305], "remov": [0, 9, 16, 302, 305, 634, 640, 1017, 1060, 1063, 1124, 1146, 1150, 1159, 1163, 1164, 1167, 1297, 1313, 1314, 1318, 1319, 1343, 1401, 1417, 1418, 1903, 1905, 1914], "update_n_turbin": [0, 9, 16, 302, 316], "reset": [0, 9, 16, 302, 316, 462, 470, 473, 490, 499, 503, 506, 634, 640, 1017, 1320, 1358, 1415, 1912, 1914, 1916], "accord": [0, 9, 16, 302, 316, 375, 378, 449, 534, 537, 541, 545, 549, 550, 552, 556, 560, 563, 566, 570, 573, 601, 602, 708, 1010, 1015, 1016, 1151, 1153, 1281, 1911, 1915], "self": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 105, 106, 107, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 302, 316, 317, 327, 330, 339, 345, 349, 354, 361, 362, 364, 368, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 521, 534, 541, 543, 549, 552, 554, 560, 563, 570, 576, 579, 581, 584, 588, 594, 595, 596, 601, 603, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 662, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 743, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 811, 815, 817, 821, 823, 828, 830, 835, 858, 860, 864, 866, 871, 873, 879, 883, 887, 891, 895, 900, 905, 910, 915, 932, 1017, 1018, 1021, 1025, 1029, 1033, 1034, 1044, 1049, 1060, 1062, 1064, 1070, 1081, 1083, 1086, 1090, 1093, 1112, 1114, 1120, 1121, 1177, 1425, 1575, 1579, 1600, 1604, 1634, 1636, 1726, 1736, 1746, 1756, 1761, 1763, 1782, 1784, 1817, 1819, 1820, 1900], "get_models_idata": [0, 9, 16, 302, 309], "get_models_data": [0, 9, 16, 302, 308], "creat": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 133, 228, 251, 302, 308, 313, 317, 319, 322, 327, 330, 339, 345, 349, 354, 361, 362, 371, 374, 375, 377, 378, 381, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 508, 509, 510, 512, 515, 518, 519, 532, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 575, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 923, 925, 927, 954, 974, 978, 980, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1001, 1017, 1123, 1132, 1135, 1151, 1152, 1153, 1159, 1167, 1175, 1176, 1277, 1281, 1285, 1294, 1303, 1304, 1305, 1306, 1311, 1313, 1341, 1358, 1362, 1376, 1389, 1396, 1401, 1407, 1411, 1413, 1417, 1418, 1419, 1420, 1421, 1422, 1428, 1429, 1431, 1434, 1600, 1604, 1629, 1806, 1896, 1897, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "xarrai": [0, 3, 4, 9, 11, 16, 17, 20, 21, 23, 24, 25, 32, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 91, 92, 302, 308, 313, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 455, 462, 473, 475, 482, 490, 503, 504, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 613, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 925, 926, 934, 935, 967, 968, 969, 971, 975, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 1453, 1600, 1809, 1834, 1888, 1903, 1907, 1910, 1916, 1917, 1918], "input": [0, 9, 16, 228, 274, 302, 308, 328, 329, 353, 386, 419, 420, 421, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 608, 609, 612, 613, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 721, 722, 899, 904, 909, 914, 919, 1025, 1042, 1051, 1052, 1055, 1060, 1069, 1075, 1076, 1077, 1081, 1085, 1088, 1122, 1132, 1151, 1277, 1278, 1281, 1294, 1295, 1304, 1306, 1321, 1322, 1323, 1330, 1429, 1433, 1453, 1683, 1721, 1825, 1882, 1892, 1899, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "new_point_data": [0, 9, 16, 302, 313], "states_indic": [0, 9, 16, 302, 313], "contain": [0, 9, 16, 302, 313, 319, 320, 322, 528, 1002, 1004, 1005, 1017, 1036, 1096, 1115, 1127, 1132, 1133, 1147, 1149, 1153, 1161, 1165, 1166, 1167, 1172, 1175, 1176, 1177, 1208, 1213, 1257, 1271, 1276, 1277, 1294, 1306, 1313, 1371, 1401, 1407, 1410, 1428, 1429, 1569, 1808, 1888, 1891, 1892, 1893, 1897, 1909, 1910, 1911, 1913, 1914, 1917, 1919], "onli": [0, 9, 16, 114, 233, 302, 313, 424, 447, 541, 549, 723, 771, 772, 776, 779, 796, 797, 802, 803, 809, 813, 815, 819, 821, 824, 858, 862, 864, 867, 871, 872, 874, 976, 978, 1017, 1025, 1052, 1055, 1059, 1060, 1063, 1072, 1076, 1077, 1081, 1088, 1122, 1123, 1138, 1143, 1148, 1151, 1167, 1172, 1173, 1175, 1176, 1177, 1199, 1237, 1276, 1277, 1281, 1289, 1295, 1304, 1305, 1309, 1310, 1313, 1314, 1321, 1343, 1362, 1371, 1376, 1389, 1390, 1396, 1397, 1401, 1402, 1408, 1410, 1416, 1417, 1418, 1419, 1421, 1422, 1429, 1433, 1451, 1559, 1683, 1721, 1892, 1903, 1905, 1906, 1907, 1908, 1910, 1911, 1917, 1918, 1919, 1921], "new": [0, 9, 16, 103, 114, 133, 186, 195, 228, 233, 251, 276, 302, 312, 375, 380, 381, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 437, 534, 539, 541, 547, 549, 552, 558, 560, 563, 568, 570, 575, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 882, 886, 890, 894, 898, 903, 908, 913, 918, 925, 934, 954, 961, 964, 967, 970, 974, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1025, 1056, 1057, 1058, 1060, 1078, 1079, 1080, 1081, 1089, 1147, 1168, 1171, 1172, 1245, 1246, 1247, 1259, 1260, 1261, 1309, 1322, 1323, 1357, 1386, 1393, 1406, 1421, 1422, 1453, 1517, 1518, 1550, 1557, 1558, 1594, 1627, 1722, 1724, 1725, 1732, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1766, 1775, 1791, 1903, 1905, 1910, 1911], "algo_typ": [0, 9, 16, 302, 312], "run": [0, 1, 9, 16, 19, 29, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 312, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 365, 375, 380, 383, 387, 393, 400, 403, 413, 415, 416, 418, 419, 420, 422, 423, 429, 430, 434, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 635, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 717, 719, 721, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 899, 900, 904, 905, 909, 910, 914, 915, 919, 925, 934, 954, 961, 964, 967, 970, 974, 985, 993, 996, 998, 1017, 1097, 1550, 1552, 1590, 1591, 1598, 1599, 1600, 1776, 1787, 1788, 1810, 1811, 1816, 1817, 1818, 1819, 1824, 1888, 1892, 1893, 1897, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1922], "time": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 455, 509, 534, 541, 549, 552, 560, 563, 570, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 925, 934, 948, 954, 961, 964, 967, 970, 974, 985, 993, 996, 998, 1017, 1025, 1043, 1060, 1081, 1132, 1151, 1159, 1167, 1173, 1174, 1281, 1294, 1295, 1306, 1310, 1311, 1313, 1314, 1332, 1387, 1394, 1401, 1600, 1683, 1721, 1893, 1897, 1903, 1905, 1908, 1909, 1912, 1913, 1914, 1916, 1918, 1919, 1920], "factori": [0, 9, 16, 302, 312, 375, 380, 393, 400, 413, 415, 416, 418, 419, 422, 423, 429, 430, 434, 534, 541, 549, 552, 560, 563, 570, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 925, 934, 954, 961, 964, 967, 970, 974, 985, 993, 996, 998], "__repr__": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 521, 534, 541, 543, 549, 552, 554, 560, 563, 570, 576, 581, 584, 588, 594, 596, 601, 603, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 662, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 743, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 811, 815, 817, 821, 823, 828, 830, 835, 858, 860, 864, 866, 871, 873, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1017, 1018, 1021, 1120, 1600], "repr": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 141, 228, 258, 302, 317, 327, 330, 339, 349, 354, 361, 362, 364, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 521, 534, 541, 543, 549, 552, 554, 560, 563, 570, 576, 581, 584, 588, 594, 596, 601, 603, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 662, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 743, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 811, 815, 817, 821, 823, 828, 830, 835, 858, 860, 864, 866, 871, 873, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1017, 1018, 1021, 1120, 1453, 1600], "model_id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "uniqu": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "id": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 447, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1017, 1035, 1124, 1206, 1319, 1348, 1453, 1600, 1904], "type": [0, 9, 16, 35, 40, 46, 53, 57, 71, 72, 77, 83, 92, 103, 114, 133, 195, 228, 233, 251, 302, 317, 327, 330, 339, 349, 354, 361, 362, 372, 375, 383, 387, 393, 403, 409, 410, 413, 416, 418, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 528, 530, 532, 533, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 998, 1000, 1017, 1018, 1020, 1090, 1093, 1100, 1112, 1114, 1133, 1147, 1165, 1166, 1168, 1171, 1173, 1277, 1285, 1292, 1304, 1388, 1395, 1402, 1406, 1453, 1600, 1629, 1683, 1721, 1817, 1819, 1820, 1887, 1888, 1892, 1896, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1921], "var": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 103, 224, 228, 298, 302, 317, 327, 329, 330, 339, 349, 354, 361, 362, 374, 375, 378, 383, 387, 393, 403, 413, 416, 419, 421, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 537, 541, 545, 549, 550, 552, 556, 560, 563, 566, 570, 573, 576, 581, 584, 585, 588, 594, 601, 608, 612, 617, 623, 624, 629, 634, 636, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 718, 719, 722, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 934, 939, 940, 943, 944, 945, 946, 947, 953, 954, 955, 956, 957, 958, 959, 960, 974, 976, 978, 979, 996, 1001, 1017, 1146, 1150, 1163, 1164, 1453, 1502, 1505, 1523, 1525, 1532, 1543, 1550, 1569, 1585, 1589, 1594, 1595, 1596, 1597, 1600, 1608, 1617, 1619, 1625, 1627, 1637, 1638, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1683, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1721, 1766, 1772, 1773, 1775, 1785, 1786, 1791, 1803, 1804, 1887, 1906, 1907, 1916], "v": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 374, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1017, 1148, 1310, 1311, 1314, 1321, 1410, 1600, 1683, 1721, 1830, 1831], "variabl": [0, 3, 4, 9, 11, 14, 16, 20, 21, 35, 36, 38, 40, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 71, 72, 77, 79, 81, 83, 84, 85, 86, 92, 94, 98, 298, 302, 317, 327, 328, 329, 330, 333, 335, 339, 341, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 368, 374, 375, 381, 383, 384, 385, 386, 387, 390, 391, 393, 394, 395, 397, 401, 403, 406, 413, 414, 416, 419, 421, 423, 424, 428, 430, 431, 432, 433, 435, 436, 437, 454, 455, 456, 459, 462, 464, 465, 469, 473, 475, 477, 479, 482, 483, 484, 486, 490, 492, 493, 498, 503, 506, 508, 509, 510, 512, 515, 518, 519, 522, 523, 534, 539, 541, 547, 549, 552, 558, 560, 563, 568, 570, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 594, 595, 601, 602, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 623, 624, 625, 627, 629, 630, 631, 633, 634, 636, 637, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 667, 669, 670, 671, 672, 673, 674, 677, 678, 679, 680, 683, 684, 685, 686, 689, 690, 691, 692, 695, 696, 699, 700, 703, 704, 707, 708, 711, 712, 713, 715, 716, 718, 719, 720, 722, 723, 729, 730, 734, 739, 741, 748, 754, 755, 761, 762, 763, 764, 765, 766, 767, 768, 771, 773, 774, 776, 777, 778, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 810, 812, 814, 815, 816, 818, 820, 821, 822, 825, 828, 829, 831, 832, 835, 858, 859, 861, 863, 864, 865, 868, 871, 872, 876, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 927, 934, 939, 940, 943, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 966, 969, 970, 972, 973, 974, 976, 977, 978, 979, 985, 987, 988, 989, 990, 991, 992, 993, 995, 996, 998, 1000, 1001, 1146, 1150, 1163, 1164, 1357, 1502, 1505, 1506, 1507, 1510, 1511, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1525, 1527, 1528, 1531, 1532, 1535, 1536, 1542, 1543, 1550, 1553, 1554, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1574, 1575, 1578, 1579, 1583, 1584, 1585, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1602, 1605, 1608, 1609, 1610, 1611, 1612, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1626, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1683, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1721, 1722, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1734, 1735, 1737, 1739, 1740, 1741, 1742, 1744, 1745, 1747, 1749, 1750, 1751, 1752, 1754, 1755, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1885, 1887, 1891, 1892, 1893, 1894, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "flag": [0, 2, 3, 4, 9, 11, 16, 17, 20, 21, 29, 35, 40, 46, 53, 57, 64, 69, 73, 77, 83, 92, 103, 181, 228, 302, 317, 327, 330, 339, 341, 349, 350, 354, 361, 362, 370, 375, 383, 387, 393, 403, 413, 416, 419, 423, 424, 430, 435, 450, 454, 455, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 595, 601, 602, 608, 612, 617, 623, 629, 634, 635, 641, 642, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 697, 700, 701, 704, 705, 708, 709, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 821, 828, 835, 858, 864, 871, 872, 879, 883, 887, 891, 895, 896, 900, 901, 905, 906, 910, 915, 916, 925, 926, 927, 936, 942, 948, 949, 955, 956, 957, 958, 959, 960, 969, 972, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1001, 1008, 1017, 1148, 1209, 1459, 1469, 1476, 1483, 1491, 1499, 1502, 1513, 1523, 1525, 1532, 1543, 1550, 1556, 1559, 1564, 1565, 1569, 1576, 1594, 1600, 1608, 1614, 1617, 1619, 1623, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1689, 1691, 1695, 1697, 1701, 1703, 1707, 1709, 1713, 1715, 1717, 1718, 1720, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1810, 1811, 1817, 1819, 1823, 1905, 1910], "sub_model": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 488, 490, 501, 503, 506, 512, 515, 518, 519, 524, 534, 540, 541, 548, 549, 552, 559, 560, 563, 569, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 628, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 728, 729, 734, 741, 748, 754, 760, 761, 764, 770, 771, 774, 776, 782, 783, 788, 789, 795, 796, 801, 802, 807, 808, 809, 815, 821, 827, 828, 834, 835, 857, 858, 864, 870, 871, 878, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600, 1903], "sub": [0, 9, 16, 35, 39, 40, 45, 46, 52, 53, 57, 77, 82, 83, 92, 100, 195, 302, 317, 327, 330, 337, 339, 348, 349, 354, 360, 361, 362, 373, 375, 382, 383, 387, 392, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 488, 490, 501, 503, 506, 512, 515, 518, 519, 524, 534, 540, 541, 548, 549, 552, 559, 560, 563, 569, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 628, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 728, 729, 734, 741, 748, 754, 760, 761, 764, 770, 771, 774, 776, 782, 783, 788, 789, 795, 796, 801, 802, 807, 808, 809, 815, 821, 827, 828, 834, 835, 857, 858, 864, 870, 871, 878, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1025, 1035, 1036, 1060, 1081, 1293, 1324, 1325, 1595, 1600, 1629, 1893, 1903, 1910], "load_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600, 1604, 1903], "algo": [0, 9, 16, 35, 36, 37, 38, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 66, 69, 71, 73, 75, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 302, 317, 319, 326, 327, 328, 329, 330, 333, 335, 338, 339, 341, 342, 343, 344, 345, 346, 349, 351, 352, 353, 354, 357, 359, 361, 362, 365, 366, 367, 368, 369, 371, 375, 377, 378, 379, 381, 383, 384, 385, 386, 387, 390, 391, 393, 395, 397, 398, 401, 403, 405, 406, 408, 413, 414, 416, 419, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 454, 456, 458, 459, 461, 462, 465, 466, 468, 469, 470, 472, 473, 475, 477, 478, 479, 481, 482, 484, 485, 486, 489, 490, 493, 494, 496, 497, 498, 499, 502, 503, 505, 506, 511, 512, 515, 518, 519, 522, 523, 528, 531, 534, 536, 537, 538, 539, 541, 544, 545, 546, 547, 549, 550, 551, 552, 555, 556, 557, 558, 560, 562, 563, 565, 566, 567, 568, 570, 572, 573, 574, 575, 576, 578, 579, 580, 581, 582, 583, 584, 586, 587, 588, 590, 591, 594, 598, 601, 605, 608, 610, 611, 612, 614, 615, 616, 617, 619, 620, 621, 623, 625, 626, 627, 629, 631, 632, 633, 634, 637, 638, 639, 641, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 656, 657, 658, 659, 660, 663, 664, 665, 667, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 681, 682, 683, 684, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 700, 704, 708, 712, 716, 719, 723, 725, 726, 727, 729, 731, 732, 733, 734, 736, 737, 738, 739, 740, 741, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 772, 773, 774, 776, 778, 779, 780, 781, 783, 785, 786, 787, 789, 791, 792, 793, 794, 796, 798, 799, 800, 802, 804, 805, 806, 808, 809, 812, 813, 814, 815, 818, 819, 820, 821, 824, 825, 826, 828, 831, 832, 833, 835, 851, 855, 858, 861, 862, 863, 864, 867, 868, 869, 871, 874, 875, 876, 877, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 934, 936, 948, 954, 967, 968, 969, 980, 983, 984, 985, 986, 1550, 1552, 1590, 1591, 1594, 1598, 1599, 1600, 1602, 1603, 1604, 1605, 1607, 1627, 1766, 1775, 1776, 1787, 1788, 1791, 1797, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "0": [0, 1, 9, 16, 35, 37, 40, 43, 46, 50, 53, 57, 60, 62, 64, 66, 69, 71, 73, 75, 77, 80, 83, 84, 92, 97, 103, 108, 113, 163, 186, 228, 232, 278, 283, 302, 303, 317, 327, 330, 339, 343, 344, 345, 349, 354, 361, 362, 366, 369, 371, 375, 379, 383, 387, 393, 396, 403, 405, 413, 416, 419, 423, 430, 435, 440, 447, 449, 450, 451, 452, 453, 454, 458, 462, 463, 466, 468, 470, 473, 474, 475, 478, 482, 485, 490, 491, 494, 496, 497, 499, 503, 505, 506, 507, 508, 510, 512, 515, 516, 518, 519, 528, 531, 534, 538, 541, 546, 549, 552, 557, 560, 563, 567, 570, 576, 579, 581, 584, 588, 589, 594, 597, 598, 601, 604, 605, 608, 612, 615, 617, 618, 620, 623, 626, 629, 630, 632, 634, 638, 641, 645, 648, 650, 654, 657, 660, 665, 667, 669, 672, 673, 675, 676, 678, 679, 681, 682, 684, 685, 687, 688, 690, 691, 693, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 740, 741, 742, 748, 749, 753, 754, 759, 761, 764, 769, 771, 774, 776, 781, 783, 789, 794, 796, 800, 802, 806, 808, 809, 810, 815, 821, 822, 826, 828, 829, 833, 835, 850, 855, 858, 864, 865, 869, 871, 872, 875, 877, 879, 883, 887, 891, 895, 900, 905, 910, 915, 923, 927, 936, 937, 954, 956, 957, 959, 960, 967, 969, 972, 973, 978, 987, 988, 989, 990, 991, 992, 1000, 1017, 1060, 1122, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1149, 1151, 1153, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1200, 1234, 1276, 1277, 1278, 1281, 1283, 1284, 1285, 1290, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1314, 1315, 1321, 1322, 1323, 1326, 1329, 1330, 1339, 1341, 1370, 1374, 1375, 1377, 1380, 1386, 1387, 1393, 1394, 1401, 1402, 1404, 1407, 1409, 1410, 1413, 1415, 1416, 1417, 1418, 1419, 1428, 1429, 1433, 1436, 1437, 1439, 1441, 1445, 1446, 1449, 1451, 1453, 1502, 1509, 1510, 1511, 1512, 1523, 1525, 1529, 1532, 1543, 1550, 1553, 1554, 1559, 1560, 1561, 1567, 1568, 1569, 1572, 1594, 1595, 1600, 1603, 1604, 1608, 1609, 1612, 1613, 1617, 1619, 1625, 1627, 1632, 1641, 1646, 1651, 1656, 1660, 1662, 1667, 1669, 1670, 1672, 1676, 1678, 1683, 1684, 1688, 1691, 1697, 1698, 1703, 1709, 1715, 1718, 1721, 1722, 1728, 1732, 1738, 1742, 1748, 1752, 1759, 1766, 1767, 1769, 1775, 1777, 1780, 1791, 1798, 1800, 1806, 1810, 1811, 1825, 1827, 1831, 1832, 1834, 1887, 1897, 1898, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "load": [0, 3, 4, 9, 16, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 455, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600, 1604, 1903, 1904, 1909, 1910], "subject": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 345, 349, 354, 361, 362, 371, 375, 383, 387, 393, 403, 405, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1556, 1600, 1604], "get_data": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 853, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 974, 976, 996, 1600], "target": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600, 1915], "lookup": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 613, 617, 618, 623, 629, 634, 641, 645, 650, 651, 654, 657, 660, 665, 667, 669, 672, 673, 678, 679, 684, 685, 690, 691, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 948, 1600, 1892, 1903], "smfp": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "mdata": [0, 9, 16, 30, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 302, 317, 327, 330, 333, 339, 341, 345, 349, 351, 354, 357, 361, 362, 365, 367, 368, 371, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 405, 413, 414, 416, 419, 423, 424, 425, 426, 427, 430, 431, 432, 433, 435, 436, 437, 454, 456, 458, 462, 465, 468, 473, 475, 477, 478, 482, 484, 490, 493, 497, 503, 505, 506, 512, 515, 518, 519, 522, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 551, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 574, 575, 576, 578, 579, 581, 582, 584, 586, 588, 590, 591, 594, 601, 608, 610, 612, 614, 615, 617, 619, 623, 625, 629, 631, 634, 637, 638, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 700, 704, 708, 712, 716, 719, 723, 725, 726, 727, 729, 731, 732, 733, 734, 736, 737, 738, 741, 744, 745, 746, 747, 748, 750, 751, 752, 754, 756, 757, 758, 761, 762, 763, 764, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 812, 813, 814, 815, 818, 819, 820, 821, 824, 825, 828, 831, 832, 835, 851, 852, 853, 854, 858, 861, 862, 863, 864, 867, 868, 871, 874, 876, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 900, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 1600, 1602, 1604], "getter": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "entri": [0, 9, 14, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 308, 309, 315, 317, 319, 321, 327, 330, 339, 345, 349, 354, 361, 362, 368, 371, 375, 383, 387, 393, 403, 405, 409, 413, 416, 419, 423, 430, 435, 454, 458, 462, 468, 473, 475, 478, 482, 490, 497, 503, 505, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 579, 581, 584, 588, 594, 601, 608, 612, 615, 617, 623, 629, 634, 638, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 676, 678, 682, 684, 688, 690, 694, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 853, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 966, 1016, 1149, 1151, 1290, 1318, 1600, 1604, 1683, 1721, 1891, 1903, 1908, 1915], "data_to_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "add": [0, 9, 16, 35, 40, 46, 53, 57, 66, 68, 77, 83, 92, 302, 317, 319, 321, 327, 330, 332, 339, 349, 354, 356, 361, 362, 365, 375, 383, 387, 389, 393, 402, 403, 409, 411, 413, 416, 419, 423, 430, 433, 435, 437, 438, 440, 443, 447, 448, 449, 450, 451, 452, 453, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 593, 594, 600, 601, 607, 608, 612, 617, 623, 629, 634, 636, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 787, 789, 793, 796, 799, 802, 805, 808, 809, 814, 815, 820, 821, 825, 828, 832, 835, 858, 863, 864, 868, 871, 876, 879, 882, 883, 886, 887, 890, 891, 894, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 920, 922, 927, 934, 936, 937, 955, 956, 957, 958, 959, 960, 978, 1001, 1002, 1004, 1005, 1006, 1007, 1017, 1025, 1031, 1102, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1149, 1157, 1172, 1245, 1246, 1259, 1260, 1283, 1284, 1285, 1314, 1315, 1322, 1323, 1411, 1413, 1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495, 1502, 1523, 1525, 1532, 1534, 1543, 1545, 1550, 1553, 1554, 1555, 1594, 1600, 1608, 1617, 1619, 1625, 1627, 1629, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1809, 1891, 1900, 1903, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919], "local": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 810, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1416, 1453, 1600, 1892, 1904, 1905, 1908, 1910, 1913, 1916, 1919], "intend": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 934, 949, 1017, 1097, 1168, 1171, 1179, 1199, 1331, 1406, 1600], "iter": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 33, 35, 40, 46, 53, 57, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 365, 368, 375, 383, 387, 393, 403, 413, 416, 419, 423, 428, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 739, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 980, 983, 984, 1310, 1358, 1417, 1453, 1600, 1883, 1886, 1896, 1903, 1906, 1907, 1916, 1918], "from_data_or_stor": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "ret_dim": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "safe": [0, 9, 16, 35, 40, 46, 53, 57, 77, 83, 92, 302, 317, 327, 330, 339, 349, 354, 361, 362, 367, 375, 383, 387, 393, 403, 413, 416, 419, 423, 430, 435, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1600], "centr": [1, 396, 452, 549, 588, 589, 597, 604, 623, 734, 735, 741, 742, 748, 749, 776, 778, 809, 812, 815, 818, 858, 861, 1146, 1150, 1163, 1164, 1471, 1472, 1485, 1486, 1828, 1829, 1870, 1892, 1897, 1899, 1903, 1906, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "rotor_wd": [1, 1906, 1907, 1910, 1911, 1912, 1914, 1915, 1919, 1920], "auto": [1, 510, 1017, 1122, 1142, 1188, 1277, 1281, 1303, 1305, 1310, 1314, 1326, 1332, 1364, 1371, 1386, 1393, 1402, 1433, 1834, 1906, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "basic_ctrl": [1, 1907, 1911, 1916, 1918], "10000": [1, 17, 741, 742, 1151, 1906, 1907], "1000": [1, 283, 302, 303, 617, 618, 948, 1090, 1091, 1112, 1151, 1276, 1277, 1413, 1809, 1887, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "wake_mirror": [1, 1907], "dbook": [1, 302, 303, 449, 1908], "modelbook": [1, 17, 302, 303, 511, 528, 529, 530, 531, 532, 533, 996, 998, 999, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "book": [1, 17, 302, 303, 409, 410, 444, 449, 511, 764, 765, 777, 810, 816, 822, 829, 859, 865, 872, 996, 998, 999, 1000, 1002, 1003, 1413, 1902, 1903, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1917, 1918, 1919, 1920], "windfarm": [1, 17, 302, 303, 438, 439, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 511, 925, 926, 1502, 1525, 1537, 1546, 1566, 1888, 1890, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "wind": [1, 17, 71, 72, 226, 294, 295, 302, 303, 339, 342, 403, 409, 410, 438, 439, 440, 441, 447, 448, 449, 450, 451, 452, 453, 462, 475, 476, 482, 483, 511, 518, 617, 618, 650, 651, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 696, 700, 704, 708, 716, 723, 729, 730, 754, 789, 796, 802, 808, 809, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 925, 926, 928, 929, 942, 974, 976, 978, 979, 987, 988, 989, 990, 991, 992, 996, 1000, 1017, 1146, 1148, 1150, 1163, 1164, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1452, 1502, 1523, 1525, 1532, 1537, 1543, 1546, 1550, 1566, 1594, 1608, 1617, 1619, 1625, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1830, 1831, 1832, 1833, 1838, 1839, 1840, 1844, 1845, 1863, 1864, 1865, 1871, 1873, 1882, 1887, 1888, 1890, 1891, 1892, 1893, 1894, 1897, 1898, 1899, 1902, 1903, 1904, 1906, 1909, 1910, 1911, 1913, 1914, 1916, 1917, 1918, 1919, 1921], "str": [1, 3, 4, 6, 12, 14, 16, 17, 20, 21, 27, 36, 38, 42, 44, 46, 48, 49, 51, 53, 55, 56, 57, 59, 61, 62, 63, 67, 71, 72, 79, 81, 85, 86, 94, 98, 103, 154, 195, 228, 270, 283, 312, 319, 320, 321, 322, 328, 329, 333, 335, 339, 341, 346, 347, 351, 352, 353, 357, 359, 362, 365, 367, 368, 374, 378, 380, 381, 384, 385, 386, 390, 391, 393, 394, 395, 397, 400, 401, 406, 409, 410, 414, 415, 416, 417, 418, 421, 422, 424, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 442, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 459, 462, 464, 465, 469, 477, 479, 482, 483, 484, 486, 490, 492, 493, 498, 501, 504, 508, 509, 510, 511, 522, 523, 525, 527, 528, 530, 532, 533, 534, 535, 537, 539, 545, 547, 550, 556, 558, 566, 568, 573, 575, 576, 577, 578, 580, 582, 583, 584, 585, 586, 587, 590, 595, 602, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 621, 625, 627, 629, 630, 631, 633, 634, 636, 637, 639, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 663, 664, 666, 668, 670, 671, 672, 673, 674, 677, 678, 679, 680, 683, 684, 685, 686, 689, 690, 691, 692, 695, 699, 703, 707, 711, 713, 715, 718, 722, 729, 730, 739, 754, 755, 762, 763, 764, 765, 766, 767, 768, 773, 776, 777, 778, 780, 785, 786, 787, 789, 790, 791, 792, 793, 796, 797, 798, 799, 802, 803, 804, 805, 809, 810, 812, 814, 815, 816, 818, 820, 821, 822, 825, 828, 829, 831, 832, 835, 850, 853, 858, 859, 861, 863, 864, 865, 868, 871, 872, 876, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 897, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 917, 918, 919, 927, 930, 931, 932, 933, 939, 940, 943, 945, 946, 947, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 962, 963, 966, 969, 972, 973, 976, 977, 978, 979, 980, 981, 987, 988, 989, 990, 991, 992, 995, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1015, 1016, 1017, 1018, 1020, 1025, 1033, 1060, 1064, 1081, 1083, 1121, 1122, 1132, 1133, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1159, 1167, 1168, 1172, 1173, 1175, 1176, 1238, 1254, 1268, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1290, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1326, 1330, 1332, 1348, 1350, 1358, 1362, 1375, 1376, 1380, 1382, 1385, 1389, 1390, 1392, 1396, 1397, 1402, 1403, 1407, 1408, 1410, 1411, 1413, 1415, 1417, 1418, 1429, 1430, 1431, 1433, 1434, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1501, 1503, 1504, 1508, 1517, 1518, 1519, 1520, 1524, 1525, 1526, 1533, 1544, 1552, 1553, 1554, 1569, 1585, 1589, 1592, 1593, 1595, 1602, 1605, 1608, 1609, 1617, 1618, 1620, 1625, 1626, 1629, 1639, 1640, 1642, 1647, 1652, 1657, 1673, 1679, 1683, 1685, 1692, 1698, 1704, 1710, 1716, 1719, 1721, 1726, 1731, 1736, 1741, 1746, 1751, 1756, 1764, 1765, 1774, 1776, 1789, 1790, 1797, 1805, 1807, 1808, 1809, 1810, 1811, 1825, 1826, 1834, 1887, 1903, 1911], "Will": 1, "look": [1, 764, 765, 777, 810, 816, 822, 829, 859, 865, 872, 948, 1309, 1314, 1907, 1908, 1910, 1913, 1915, 1920], "up": [1, 764, 765, 777, 810, 816, 822, 829, 859, 865, 872, 948, 1017, 1096, 1115, 1153, 1171, 1175, 1176, 1281, 1305, 1331, 1389, 1396, 1431, 1434, 1903, 1906, 1907], "dict": [1, 3, 4, 10, 11, 14, 15, 16, 17, 20, 21, 36, 42, 46, 47, 48, 49, 55, 59, 65, 70, 71, 72, 74, 79, 83, 84, 85, 94, 302, 303, 308, 309, 310, 312, 314, 315, 319, 320, 322, 328, 329, 333, 339, 340, 341, 345, 347, 351, 353, 357, 371, 378, 381, 384, 386, 390, 395, 397, 400, 405, 414, 415, 418, 420, 424, 429, 431, 432, 433, 434, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 462, 464, 465, 468, 477, 478, 482, 483, 484, 490, 492, 493, 497, 504, 505, 508, 509, 510, 511, 522, 525, 526, 527, 528, 532, 534, 535, 537, 539, 545, 547, 550, 553, 556, 558, 561, 566, 568, 573, 575, 576, 577, 578, 579, 582, 586, 590, 609, 610, 612, 613, 614, 615, 619, 623, 624, 625, 630, 631, 637, 638, 643, 646, 647, 652, 655, 658, 663, 666, 668, 670, 672, 673, 674, 676, 678, 679, 680, 682, 684, 685, 686, 688, 690, 691, 692, 694, 697, 698, 701, 702, 705, 706, 709, 710, 712, 713, 714, 717, 721, 734, 735, 741, 742, 748, 749, 754, 755, 762, 763, 764, 765, 766, 767, 768, 773, 775, 777, 778, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 810, 812, 814, 816, 818, 820, 822, 825, 828, 829, 831, 832, 856, 859, 861, 863, 865, 868, 871, 872, 876, 923, 927, 929, 939, 940, 941, 950, 951, 952, 955, 956, 957, 958, 959, 960, 964, 966, 968, 969, 971, 972, 973, 978, 979, 980, 981, 986, 987, 988, 989, 990, 991, 992, 995, 1000, 1001, 1002, 1010, 1015, 1016, 1017, 1132, 1133, 1135, 1140, 1143, 1144, 1148, 1149, 1151, 1153, 1159, 1161, 1167, 1172, 1273, 1294, 1306, 1309, 1310, 1311, 1313, 1315, 1380, 1389, 1396, 1402, 1413, 1423, 1428, 1429, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1503, 1517, 1518, 1524, 1526, 1533, 1544, 1550, 1552, 1553, 1554, 1595, 1596, 1597, 1602, 1604, 1608, 1609, 1617, 1618, 1620, 1625, 1626, 1628, 1632, 1637, 1638, 1642, 1647, 1652, 1657, 1673, 1679, 1683, 1721, 1726, 1736, 1746, 1756, 1769, 1772, 1773, 1776, 1780, 1785, 1786, 1797, 1800, 1803, 1804, 1807, 1808, 1810, 1811, 1816, 1818, 1824, 1825, 1826, 1834, 1888, 1897, 1909, 1910, 1915, 1916, 1918], "choic": [1, 302, 303, 409, 417, 927, 950, 951, 952, 1283, 1284, 1314, 1390, 1397, 1629, 1810, 1811, 1837, 1860, 1899, 1910, 1913, 1916, 1917, 1918, 1919, 1920, 1921], "parallel": [1, 35, 40, 46, 53, 57, 77, 83, 92, 302, 303, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 1017, 1173, 1600, 1683, 1721, 1811, 1903, 1904, 1910, 1913, 1919, 1920], "dask": [1, 3, 4, 20, 21, 302, 303, 327, 1810, 1811, 1897, 1903, 1904, 1907, 1918, 1919], "e": [1, 302, 303, 327, 368, 508, 510, 576, 577, 617, 618, 654, 657, 783, 864, 966, 978, 1016, 1017, 1034, 1036, 1060, 1074, 1081, 1118, 1123, 1132, 1133, 1138, 1141, 1142, 1143, 1145, 1147, 1149, 1151, 1152, 1172, 1173, 1174, 1175, 1176, 1177, 1194, 1209, 1237, 1273, 1276, 1277, 1278, 1281, 1283, 1285, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1310, 1314, 1315, 1318, 1321, 1322, 1323, 1326, 1330, 1332, 1339, 1340, 1349, 1356, 1358, 1375, 1389, 1390, 1396, 1397, 1401, 1403, 1407, 1408, 1410, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1453, 1550, 1580, 1581, 1594, 1627, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1808, 1826, 1890, 1892, 1900, 1903, 1904, 1905, 1906, 1909, 1910, 1911, 1912, 1913, 1916, 1921, 1922], "g": [1, 302, 303, 368, 617, 618, 783, 789, 864, 966, 978, 1016, 1017, 1036, 1060, 1081, 1123, 1133, 1138, 1141, 1143, 1145, 1147, 1149, 1151, 1152, 1172, 1174, 1177, 1209, 1273, 1276, 1277, 1281, 1293, 1295, 1310, 1314, 1315, 1318, 1332, 1339, 1349, 1356, 1358, 1389, 1390, 1396, 1397, 1407, 1408, 1413, 1415, 1416, 1683, 1721, 1808, 1826, 1890, 1892, 1900, 1903, 1904, 1906, 1907, 1909, 1912, 1917, 1921], "switch": [1, 3, 4, 20, 21, 395, 955, 956, 957, 958, 959, 960, 1001, 1608, 1609, 1618, 1626, 1903, 1907, 1910, 1915], "mirror": [1, 774, 783, 1900, 1903, 1906, 1907], "kei": [1, 3, 4, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 121, 228, 283, 310, 319, 320, 322, 328, 333, 341, 351, 357, 368, 378, 381, 384, 390, 395, 397, 414, 428, 431, 432, 433, 456, 465, 477, 482, 483, 484, 490, 492, 493, 508, 509, 510, 522, 525, 526, 528, 529, 534, 535, 537, 539, 545, 547, 550, 556, 558, 566, 568, 573, 575, 578, 582, 586, 590, 610, 614, 619, 623, 624, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 739, 762, 763, 764, 765, 766, 767, 768, 773, 777, 778, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 810, 812, 814, 816, 818, 820, 822, 825, 829, 831, 832, 835, 853, 859, 861, 863, 865, 868, 872, 876, 950, 951, 952, 966, 972, 973, 1002, 1009, 1010, 1014, 1017, 1018, 1019, 1133, 1151, 1153, 1168, 1314, 1315, 1358, 1428, 1429, 1517, 1518, 1553, 1554, 1595, 1596, 1597, 1602, 1608, 1629, 1637, 1638, 1772, 1773, 1785, 1786, 1803, 1804, 1808, 1887, 1911], "valu": [1, 3, 4, 14, 16, 17, 20, 21, 36, 42, 48, 49, 55, 59, 71, 72, 79, 85, 94, 103, 106, 107, 115, 116, 118, 120, 122, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 181, 186, 195, 228, 230, 231, 234, 235, 237, 238, 239, 244, 245, 246, 247, 248, 249, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 283, 310, 318, 328, 329, 333, 341, 351, 357, 378, 381, 384, 390, 395, 397, 414, 423, 426, 431, 432, 433, 454, 455, 456, 462, 464, 465, 475, 476, 477, 482, 483, 484, 490, 492, 493, 508, 509, 510, 512, 513, 514, 515, 517, 522, 528, 534, 535, 537, 539, 545, 547, 550, 556, 558, 566, 568, 573, 575, 578, 582, 584, 585, 586, 590, 610, 613, 614, 617, 619, 623, 624, 625, 631, 637, 643, 647, 652, 655, 658, 661, 663, 670, 674, 680, 684, 686, 690, 692, 708, 712, 713, 719, 720, 723, 726, 729, 732, 734, 735, 737, 741, 745, 748, 749, 751, 754, 757, 761, 762, 763, 764, 765, 766, 767, 768, 772, 773, 777, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 810, 812, 813, 814, 816, 818, 819, 820, 822, 824, 825, 829, 831, 832, 851, 854, 859, 861, 862, 863, 865, 867, 868, 872, 874, 876, 936, 941, 948, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 972, 973, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1000, 1001, 1002, 1017, 1018, 1023, 1024, 1025, 1044, 1051, 1052, 1055, 1057, 1058, 1060, 1062, 1070, 1074, 1075, 1076, 1077, 1079, 1080, 1081, 1086, 1088, 1089, 1090, 1096, 1100, 1102, 1103, 1105, 1106, 1107, 1112, 1115, 1122, 1124, 1132, 1133, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1161, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1179, 1180, 1181, 1185, 1199, 1218, 1220, 1251, 1265, 1273, 1276, 1277, 1278, 1281, 1283, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1324, 1325, 1326, 1328, 1329, 1332, 1339, 1358, 1360, 1363, 1371, 1375, 1377, 1385, 1386, 1388, 1392, 1393, 1395, 1398, 1401, 1402, 1404, 1407, 1408, 1409, 1410, 1411, 1413, 1416, 1417, 1418, 1419, 1428, 1429, 1433, 1441, 1444, 1446, 1448, 1453, 1502, 1505, 1506, 1507, 1510, 1511, 1517, 1518, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1553, 1554, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1577, 1578, 1579, 1590, 1591, 1594, 1595, 1596, 1597, 1598, 1599, 1602, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1627, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1670, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1737, 1739, 1740, 1742, 1744, 1745, 1747, 1749, 1750, 1752, 1754, 1755, 1757, 1758, 1760, 1761, 1762, 1763, 1766, 1767, 1768, 1770, 1771, 1772, 1773, 1775, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1791, 1798, 1799, 1801, 1802, 1803, 1804, 1808, 1816, 1818, 1824, 1827, 1855, 1887, 1892, 1897, 1899, 1903, 1906, 1907, 1909, 1914, 1915, 1921], "height": [1, 300, 409, 410, 416, 417, 419, 420, 447, 454, 455, 462, 464, 473, 601, 602, 641, 642, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 717, 719, 721, 783, 784, 1017, 1148, 1149, 1173, 1194, 1283, 1285, 1314, 1326, 1332, 1340, 1357, 1404, 1411, 1417, 1418, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1853, 1870, 1891, 1892, 1898, 1899, 1902, 1903, 1904, 1907, 1908, 1909, 1913, 1916, 1917], "databook": [1, 302, 303, 443, 444, 449, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1889, 1897], "option": [1, 3, 4, 10, 11, 17, 20, 21, 47, 48, 62, 63, 67, 72, 78, 91, 195, 303, 308, 309, 312, 313, 314, 326, 328, 329, 331, 341, 353, 357, 367, 368, 375, 376, 378, 386, 390, 395, 397, 400, 409, 410, 411, 412, 415, 417, 418, 424, 428, 429, 434, 438, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 462, 464, 470, 473, 476, 483, 490, 492, 499, 503, 504, 506, 508, 509, 510, 522, 527, 530, 532, 533, 535, 537, 542, 545, 550, 553, 556, 561, 564, 566, 571, 573, 590, 595, 602, 609, 613, 630, 646, 661, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 697, 701, 705, 709, 713, 734, 735, 739, 748, 749, 755, 775, 810, 816, 821, 822, 829, 858, 859, 872, 921, 923, 926, 927, 936, 941, 948, 949, 955, 956, 957, 958, 959, 960, 961, 962, 964, 968, 969, 971, 972, 973, 976, 978, 979, 981, 984, 985, 986, 987, 988, 989, 990, 991, 992, 995, 996, 998, 1000, 1001, 1002, 1003, 1015, 1016, 1017, 1018, 1020, 1024, 1025, 1031, 1081, 1082, 1122, 1132, 1133, 1142, 1143, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1292, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1324, 1325, 1332, 1343, 1362, 1370, 1376, 1386, 1389, 1390, 1393, 1396, 1397, 1401, 1403, 1404, 1407, 1408, 1410, 1411, 1417, 1418, 1419, 1420, 1428, 1429, 1430, 1433, 1455, 1459, 1465, 1469, 1473, 1476, 1480, 1483, 1487, 1491, 1495, 1499, 1501, 1503, 1506, 1507, 1524, 1526, 1527, 1528, 1533, 1535, 1536, 1544, 1552, 1553, 1554, 1559, 1564, 1565, 1569, 1595, 1609, 1610, 1611, 1617, 1618, 1620, 1621, 1622, 1625, 1626, 1628, 1629, 1632, 1642, 1643, 1644, 1647, 1648, 1649, 1652, 1653, 1654, 1657, 1658, 1659, 1664, 1665, 1673, 1674, 1675, 1679, 1680, 1681, 1683, 1685, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1719, 1721, 1723, 1726, 1733, 1736, 1743, 1746, 1753, 1756, 1769, 1776, 1780, 1797, 1800, 1806, 1807, 1808, 1810, 1811, 1826, 1834, 1896, 1903, 1905, 1910, 1912, 1913, 1915, 1919, 1920], "default": [1, 46, 47, 48, 75, 96, 103, 195, 228, 302, 303, 308, 309, 334, 404, 424, 449, 457, 462, 467, 490, 495, 530, 535, 541, 542, 552, 553, 561, 563, 564, 571, 613, 661, 755, 829, 930, 931, 932, 933, 936, 948, 974, 977, 996, 1010, 1017, 1032, 1053, 1096, 1106, 1112, 1115, 1118, 1119, 1122, 1132, 1133, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1179, 1199, 1201, 1237, 1238, 1257, 1271, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1290, 1292, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1321, 1324, 1325, 1327, 1330, 1332, 1339, 1341, 1356, 1357, 1370, 1375, 1380, 1385, 1386, 1388, 1389, 1390, 1392, 1393, 1395, 1396, 1397, 1401, 1402, 1404, 1407, 1408, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1424, 1426, 1428, 1429, 1430, 1431, 1433, 1434, 1569, 1683, 1719, 1721, 1808, 1817, 1834, 1885, 1887, 1897, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1917, 1918, 1919, 1921], "level": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 361, 366, 369, 371, 379, 405, 447, 449, 450, 451, 452, 453, 455, 458, 466, 468, 470, 478, 485, 494, 496, 497, 499, 505, 510, 531, 538, 546, 557, 567, 579, 598, 601, 602, 605, 615, 620, 626, 632, 638, 648, 675, 676, 681, 682, 687, 688, 693, 694, 740, 753, 759, 769, 781, 794, 800, 806, 826, 833, 855, 869, 875, 877, 923, 934, 936, 937, 941, 955, 956, 957, 958, 959, 960, 972, 973, 987, 988, 989, 990, 991, 992, 1001, 1017, 1090, 1097, 1112, 1146, 1150, 1157, 1163, 1164, 1283, 1385, 1392, 1398, 1408, 1417, 1418, 1509, 1510, 1511, 1512, 1529, 1553, 1554, 1559, 1560, 1561, 1567, 1568, 1569, 1572, 1595, 1603, 1604, 1612, 1613, 1627, 1629, 1632, 1660, 1669, 1670, 1676, 1688, 1728, 1738, 1748, 1759, 1767, 1769, 1777, 1780, 1798, 1800, 1806, 1810, 1811, 1825, 1834, 1882, 1888, 1890, 1892, 1903, 1907, 1916], "mean": [1, 103, 191, 228, 302, 303, 343, 435, 452, 927, 934, 939, 942, 943, 946, 950, 951, 952, 954, 969, 976, 978, 985, 987, 988, 989, 1135, 1143, 1151, 1153, 1159, 1167, 1172, 1276, 1281, 1313, 1401, 1404, 1419, 1428, 1429, 1608, 1609, 1617, 1618, 1626, 1683, 1697, 1698, 1721, 1806, 1893, 1895, 1897, 1903, 1907, 1910, 1912, 1919, 1920], "silent": [1, 37, 43, 50, 60, 64, 69, 73, 80, 97, 302, 303, 343, 344, 345, 366, 369, 371, 379, 405, 440, 447, 449, 450, 451, 452, 453, 458, 468, 470, 478, 485, 496, 497, 499, 505, 510, 531, 538, 546, 557, 567, 579, 598, 605, 615, 620, 626, 632, 638, 648, 676, 682, 688, 694, 740, 753, 759, 769, 781, 794, 800, 806, 826, 833, 855, 869, 875, 877, 923, 936, 937, 972, 973, 987, 988, 989, 990, 991, 992, 1407, 1509, 1510, 1511, 1512, 1529, 1553, 1554, 1559, 1560, 1561, 1567, 1568, 1569, 1572, 1595, 1603, 1604, 1612, 1613, 1632, 1660, 1669, 1670, 1676, 1688, 1728, 1738, 1748, 1759, 1767, 1769, 1777, 1780, 1798, 1800, 1806, 1810, 1811, 1825, 1834], "bool": [2, 3, 4, 5, 11, 16, 17, 20, 21, 29, 64, 69, 73, 97, 103, 186, 228, 276, 306, 315, 326, 339, 341, 349, 350, 367, 368, 369, 370, 395, 397, 411, 412, 414, 424, 437, 447, 450, 454, 455, 504, 508, 510, 584, 585, 590, 594, 595, 601, 602, 610, 614, 619, 625, 631, 635, 637, 641, 642, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 696, 697, 700, 701, 704, 705, 708, 709, 759, 762, 763, 766, 769, 772, 773, 778, 780, 781, 794, 796, 797, 800, 802, 803, 806, 809, 810, 812, 818, 824, 826, 831, 833, 854, 855, 861, 867, 869, 871, 872, 874, 877, 882, 886, 890, 894, 895, 896, 898, 900, 901, 903, 905, 906, 908, 913, 915, 916, 918, 925, 926, 927, 936, 942, 948, 949, 955, 956, 957, 958, 959, 960, 969, 972, 973, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1001, 1008, 1025, 1031, 1053, 1060, 1072, 1081, 1082, 1122, 1132, 1133, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1161, 1163, 1164, 1167, 1172, 1175, 1176, 1177, 1193, 1219, 1237, 1255, 1257, 1269, 1271, 1273, 1276, 1277, 1278, 1281, 1283, 1285, 1292, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1317, 1321, 1326, 1327, 1330, 1331, 1332, 1333, 1334, 1335, 1339, 1342, 1347, 1349, 1352, 1353, 1356, 1361, 1371, 1383, 1386, 1389, 1390, 1393, 1396, 1397, 1401, 1402, 1404, 1407, 1411, 1413, 1415, 1416, 1417, 1418, 1424, 1428, 1429, 1433, 1453, 1455, 1459, 1465, 1469, 1473, 1476, 1480, 1483, 1487, 1491, 1495, 1499, 1502, 1503, 1513, 1521, 1522, 1531, 1542, 1556, 1559, 1564, 1565, 1569, 1608, 1609, 1614, 1616, 1618, 1619, 1620, 1623, 1626, 1629, 1689, 1695, 1701, 1707, 1713, 1717, 1720, 1722, 1723, 1726, 1736, 1746, 1756, 1808, 1809, 1810, 1811, 1823, 1826, 1907, 1916, 1918], "includ": [2, 48, 330, 998, 1004, 1017, 1054, 1123, 1148, 1167, 1177, 1209, 1237, 1243, 1277, 1281, 1304, 1305, 1313, 1349, 1362, 1376, 1385, 1389, 1392, 1396, 1416, 1418, 1424, 1426, 1896, 1903, 1905, 1908, 1910, 1920, 1921], "mdl": [2, 1501], "chunked_result": [3, 4, 20, 21], "after": [3, 4, 11, 20, 21, 331, 397, 435, 436, 447, 590, 617, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 987, 988, 989, 990, 991, 992, 1025, 1031, 1060, 1081, 1138, 1148, 1281, 1288, 1292, 1295, 1311, 1390, 1397, 1417, 1418, 1910, 1914], "instead": [3, 4, 20, 21, 326, 367, 447, 454, 455, 462, 464, 490, 492, 809, 810, 895, 896, 900, 901, 905, 906, 915, 916, 972, 973, 976, 978, 1017, 1097, 1135, 1148, 1159, 1167, 1222, 1244, 1258, 1277, 1303, 1310, 1313, 1314, 1321, 1362, 1376, 1387, 1389, 1394, 1396, 1401, 1407, 1408, 1417, 1418, 1419, 1550, 1559, 1594, 1627, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1897, 1903, 1905, 1912, 1918, 1920, 1921], "result": [3, 4, 9, 11, 16, 20, 21, 23, 24, 25, 32, 36, 42, 48, 53, 55, 57, 59, 62, 64, 66, 69, 71, 73, 75, 79, 85, 91, 94, 102, 195, 328, 329, 333, 341, 351, 353, 357, 378, 384, 386, 390, 393, 395, 397, 414, 420, 424, 432, 435, 436, 456, 465, 477, 484, 493, 522, 537, 541, 545, 550, 556, 566, 573, 578, 582, 584, 585, 586, 588, 590, 594, 601, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 698, 702, 706, 710, 714, 717, 721, 723, 768, 776, 778, 786, 792, 809, 812, 815, 818, 858, 861, 881, 885, 887, 888, 889, 893, 895, 897, 900, 902, 905, 906, 907, 910, 912, 915, 917, 925, 926, 927, 934, 935, 936, 937, 939, 940, 941, 943, 945, 946, 947, 948, 950, 951, 952, 953, 967, 968, 969, 970, 971, 974, 975, 976, 978, 984, 985, 986, 993, 994, 997, 1034, 1133, 1135, 1146, 1149, 1150, 1151, 1153, 1159, 1163, 1164, 1167, 1175, 1176, 1177, 1281, 1285, 1310, 1313, 1314, 1327, 1342, 1371, 1387, 1394, 1401, 1402, 1411, 1506, 1507, 1510, 1511, 1527, 1528, 1535, 1536, 1550, 1557, 1558, 1560, 1561, 1564, 1565, 1567, 1568, 1586, 1587, 1594, 1602, 1610, 1611, 1612, 1621, 1622, 1627, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1669, 1670, 1674, 1675, 1680, 1681, 1683, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1721, 1722, 1724, 1725, 1732, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1766, 1767, 1775, 1777, 1791, 1798, 1816, 1818, 1824, 1827, 1883, 1884, 1887, 1892, 1896, 1899, 1903, 1906, 1907, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "addit": [3, 4, 17, 20, 21, 312, 329, 353, 386, 400, 415, 418, 424, 429, 434, 447, 448, 452, 454, 455, 482, 483, 504, 511, 553, 561, 609, 613, 666, 668, 673, 679, 685, 691, 697, 701, 705, 709, 712, 713, 755, 775, 810, 816, 829, 859, 871, 872, 955, 956, 957, 958, 959, 960, 964, 968, 969, 971, 972, 973, 978, 979, 980, 981, 986, 987, 988, 989, 990, 991, 992, 995, 1000, 1122, 1133, 1199, 1278, 1281, 1293, 1295, 1304, 1310, 1315, 1324, 1325, 1356, 1401, 1402, 1408, 1433, 1503, 1524, 1526, 1533, 1544, 1550, 1552, 1595, 1609, 1617, 1618, 1620, 1625, 1626, 1632, 1769, 1776, 1780, 1797, 1800, 1807, 1808, 1825, 1834, 1903, 1907, 1915, 1919, 1920], "run_calcul": [3, 4, 20, 21, 35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 1600], "dataset": [3, 4, 9, 11, 17, 20, 21, 23, 24, 25, 32, 64, 69, 73, 91, 308, 313, 327, 329, 353, 386, 454, 455, 504, 925, 926, 934, 935, 967, 968, 969, 971, 975, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 997, 1017, 1149, 1151, 1153, 1277, 1310, 1428, 1429, 1809, 1834, 1888, 1897, 1903, 1907, 1910, 1916, 1917, 1918], "have": [3, 4, 11, 20, 21, 397, 590, 608, 609, 969, 1017, 1025, 1037, 1060, 1081, 1122, 1124, 1148, 1152, 1165, 1166, 1173, 1237, 1274, 1276, 1279, 1281, 1303, 1304, 1305, 1310, 1314, 1320, 1321, 1322, 1323, 1331, 1357, 1358, 1377, 1401, 1403, 1410, 1411, 1417, 1418, 1430, 1433, 1683, 1721, 1829, 1892, 1903, 1905, 1907, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1920], "dimens": [3, 4, 11, 20, 21, 103, 194, 209, 214, 228, 289, 291, 313, 319, 320, 321, 322, 329, 367, 368, 397, 590, 934, 950, 951, 952, 969, 1017, 1025, 1036, 1042, 1047, 1048, 1060, 1069, 1073, 1081, 1085, 1087, 1142, 1148, 1149, 1183, 1278, 1281, 1303, 1304, 1305, 1314, 1327, 1340, 1415, 1832, 1887, 1892, 1907, 1908, 1910, 1916, 1917, 1918, 1921], "persist_mdata": [4, 21], "persist_pdata": 4, "numpi": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 114, 119, 228, 233, 313, 318, 319, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 453, 456, 461, 465, 472, 477, 481, 484, 489, 493, 502, 514, 517, 522, 536, 537, 544, 545, 550, 551, 555, 556, 562, 565, 566, 572, 573, 574, 578, 582, 586, 589, 590, 591, 593, 597, 600, 604, 607, 608, 609, 610, 614, 619, 625, 631, 636, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 698, 702, 706, 710, 712, 713, 714, 717, 721, 725, 726, 727, 731, 732, 733, 736, 737, 738, 739, 744, 745, 746, 747, 750, 751, 752, 756, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 853, 854, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 928, 958, 959, 960, 969, 987, 988, 989, 990, 991, 992, 996, 1001, 1051, 1052, 1055, 1075, 1076, 1077, 1088, 1122, 1132, 1148, 1152, 1159, 1167, 1175, 1176, 1257, 1271, 1276, 1277, 1294, 1303, 1306, 1310, 1311, 1313, 1314, 1322, 1323, 1401, 1433, 1451, 1452, 1453, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1497, 1498, 1499, 1500, 1505, 1521, 1522, 1531, 1542, 1550, 1552, 1559, 1562, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1586, 1587, 1596, 1597, 1602, 1607, 1616, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1683, 1721, 1726, 1727, 1729, 1730, 1736, 1737, 1739, 1740, 1746, 1747, 1749, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1768, 1770, 1771, 1772, 1773, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1801, 1802, 1803, 1804, 1806, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1887, 1906, 1907, 1909, 1910, 1914, 1916, 1917, 1918, 1921], "ndarrai": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 313, 318, 321, 322, 328, 333, 338, 339, 341, 351, 357, 367, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 453, 456, 461, 465, 472, 477, 481, 484, 489, 493, 502, 514, 517, 522, 536, 537, 544, 545, 550, 551, 555, 556, 562, 565, 566, 572, 573, 574, 578, 582, 586, 589, 590, 591, 593, 597, 600, 604, 607, 608, 609, 610, 614, 619, 625, 631, 636, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 698, 702, 706, 710, 712, 713, 714, 717, 721, 725, 726, 727, 731, 732, 733, 736, 737, 738, 739, 744, 745, 746, 747, 750, 751, 752, 756, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 853, 854, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 928, 953, 958, 959, 960, 969, 987, 988, 989, 990, 991, 992, 996, 1001, 1122, 1132, 1148, 1152, 1159, 1167, 1175, 1176, 1276, 1277, 1294, 1303, 1306, 1313, 1314, 1401, 1433, 1451, 1452, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1497, 1498, 1499, 1500, 1505, 1521, 1522, 1531, 1542, 1550, 1552, 1559, 1562, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1586, 1587, 1596, 1597, 1602, 1607, 1616, 1629, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1683, 1721, 1726, 1727, 1729, 1730, 1736, 1737, 1739, 1740, 1746, 1747, 1749, 1750, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1768, 1770, 1771, 1772, 1773, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1799, 1801, 1802, 1803, 1804, 1806, 1808, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1906, 1907, 1918, 1921], "interest": [4, 16, 17, 21, 46, 1000, 1237, 1884, 1892, 1906, 1913, 1917, 1918], "shape": [4, 16, 17, 21, 34, 36, 42, 48, 49, 55, 59, 79, 85, 94, 101, 103, 209, 228, 313, 322, 333, 338, 339, 341, 351, 357, 368, 377, 378, 384, 390, 395, 396, 397, 398, 402, 408, 409, 410, 411, 412, 414, 420, 424, 425, 426, 427, 428, 431, 432, 433, 436, 437, 451, 453, 456, 461, 465, 472, 477, 481, 484, 489, 493, 502, 522, 536, 537, 544, 545, 550, 551, 555, 556, 562, 565, 566, 572, 573, 574, 578, 582, 586, 589, 590, 591, 593, 597, 600, 604, 607, 608, 609, 610, 614, 619, 625, 631, 636, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 698, 702, 706, 710, 712, 714, 717, 721, 725, 726, 727, 731, 732, 733, 736, 737, 738, 739, 744, 745, 746, 747, 750, 751, 752, 756, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 854, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 928, 958, 959, 960, 969, 996, 1001, 1051, 1052, 1055, 1075, 1076, 1077, 1088, 1135, 1149, 1151, 1172, 1277, 1278, 1281, 1303, 1304, 1305, 1310, 1314, 1321, 1370, 1403, 1407, 1410, 1451, 1452, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1497, 1498, 1499, 1500, 1505, 1506, 1507, 1510, 1511, 1521, 1522, 1527, 1528, 1531, 1535, 1536, 1542, 1550, 1552, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1565, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1590, 1591, 1596, 1597, 1598, 1599, 1602, 1607, 1610, 1611, 1612, 1614, 1616, 1621, 1622, 1623, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1669, 1670, 1671, 1674, 1675, 1680, 1681, 1686, 1687, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1706, 1707, 1711, 1712, 1713, 1717, 1720, 1724, 1725, 1726, 1727, 1729, 1730, 1734, 1735, 1736, 1737, 1739, 1740, 1744, 1745, 1746, 1747, 1749, 1750, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1767, 1768, 1770, 1771, 1772, 1773, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1798, 1799, 1801, 1802, 1803, 1804, 1806, 1807, 1808, 1825, 1829, 1830, 1831, 1832, 1833, 1897, 1903, 1906, 1907, 1916, 1917, 1921], "n_point": [4, 16, 17, 21, 48, 49, 59, 94, 313, 319, 322, 323, 333, 378, 384, 390, 396, 424, 426, 427, 431, 432, 433, 436, 437, 456, 465, 477, 484, 493, 537, 545, 550, 551, 556, 566, 573, 574, 578, 582, 586, 589, 597, 604, 726, 727, 732, 733, 737, 738, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 768, 772, 773, 778, 779, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 813, 814, 818, 819, 820, 824, 825, 831, 832, 851, 854, 861, 862, 863, 867, 868, 874, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918, 969, 1459, 1460, 1469, 1470, 1476, 1477, 1479, 1483, 1484, 1491, 1492, 1499, 1500, 1550, 1552, 1602, 1726, 1736, 1746, 1756, 1808, 1907, 1917], "3": [4, 16, 17, 21, 114, 186, 233, 313, 322, 395, 396, 398, 426, 427, 431, 551, 574, 581, 589, 591, 597, 604, 726, 727, 732, 733, 737, 738, 745, 747, 751, 752, 757, 758, 767, 785, 791, 798, 804, 928, 969, 996, 1001, 1018, 1025, 1026, 1060, 1081, 1100, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1222, 1230, 1273, 1276, 1277, 1281, 1283, 1284, 1285, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1322, 1323, 1326, 1358, 1402, 1407, 1411, 1413, 1451, 1453, 1550, 1552, 1683, 1721, 1892, 1897, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "pointdatamodel": [4, 21, 46, 57, 331, 332, 383, 384, 385, 386, 387, 388, 389, 403, 528, 576, 581, 584, 1884, 1888, 1892], "execut": [4, 21, 36, 42, 48, 55, 59, 79, 85, 94, 328, 331, 333, 341, 351, 357, 384, 390, 414, 425, 456, 465, 477, 484, 493, 522, 578, 582, 586, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 725, 731, 736, 744, 750, 756, 1295, 1453, 1602, 1810, 1817, 1892, 1897, 1905], "persist_fdata": [4, 21], "point_result": [4, 16, 21, 32, 969, 1906, 1907, 1917], "clear": [5, 306, 1017, 1143, 1156, 1158, 1913], "max_it": [9, 10], "maxim": [9, 10, 512, 513, 594, 595, 617, 741, 742, 748, 749, 829, 955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1000, 1001, 1428, 1429, 1454, 1457, 1461, 1463, 1467, 1471, 1474, 1478, 1481, 1485, 1489, 1493, 1497, 1543, 1550, 1573, 1574, 1575, 1576, 1594, 1608, 1609, 1614, 1617, 1618, 1619, 1623, 1625, 1626, 1627, 1633, 1634, 1651, 1652, 1684, 1689, 1691, 1695, 1697, 1701, 1703, 1707, 1709, 1713, 1715, 1717, 1718, 1720, 1722, 1729, 1732, 1739, 1742, 1743, 1749, 1752, 1753, 1760, 1761, 1766, 1770, 1775, 1776, 1781, 1782, 1791, 1801, 1806, 1857, 1892, 1893, 1895, 1899, 1903, 1910, 1914], "conv_crit": [9, 10, 1907], "convcrit": [9, 10, 62, 63, 64, 65, 66, 67, 68, 71, 1885], "converg": [9, 10, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 75, 1883, 1885, 1903, 1907, 1918], "criteria": [9, 10, 62, 63, 64, 66, 67, 69, 71, 72, 73, 75, 1885, 1907], "prev_farm_result": 9, "previou": [9, 64, 69, 73, 368, 428, 435, 437, 739, 879, 882, 883, 886, 887, 890, 891, 894, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918, 1138, 1295, 1385, 1392, 1903, 1907, 1918], "set_urelax": [9, 14, 1907], "entry_point": [9, 14], "urel": [9, 14, 83, 84], "under": [9, 14, 15, 77, 78, 83, 84, 339, 340, 345, 354, 371, 387, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1277, 1314, 1404, 1417, 1418, 1604, 1885, 1900, 1903, 1904, 1907, 1908, 1909, 1911, 1914, 1921], "relax": [9, 14, 15, 77, 78, 83, 84, 1885, 1903, 1907], "paramet": [9, 15, 16, 46, 327, 339, 354, 387, 454, 462, 490, 518, 519, 534, 660, 672, 678, 684, 690, 712, 734, 741, 748, 754, 809, 815, 821, 828, 835, 856, 858, 864, 871, 980, 1010, 1017, 1230, 1550, 1775, 1791, 1854, 1861, 1862, 1891, 1892, 1894, 1899, 1903, 1907, 1910, 1913, 1917, 1919, 1920], "urelax": [9, 15, 77, 78, 83, 84, 85, 86, 1885], "tupl": [10, 17, 103, 209, 214, 228, 312, 314, 319, 320, 321, 322, 328, 329, 353, 367, 386, 400, 415, 418, 429, 434, 448, 449, 504, 508, 509, 510, 527, 532, 534, 535, 697, 701, 705, 709, 772, 775, 824, 867, 874, 927, 949, 953, 955, 956, 957, 958, 959, 960, 964, 969, 978, 987, 988, 989, 990, 991, 992, 995, 1000, 1001, 1018, 1020, 1060, 1074, 1132, 1133, 1140, 1143, 1144, 1146, 1148, 1150, 1152, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1230, 1273, 1276, 1277, 1283, 1284, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1322, 1323, 1326, 1343, 1362, 1376, 1386, 1393, 1402, 1407, 1410, 1424, 1453, 1628, 1816, 1818, 1824, 1826], "argument": [10, 11, 17, 314, 329, 353, 386, 511, 527, 532, 609, 697, 701, 705, 709, 923, 927, 934, 953, 969, 978, 995, 1000, 1024, 1072, 1132, 1137, 1140, 1143, 1144, 1147, 1148, 1149, 1152, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1278, 1283, 1284, 1285, 1290, 1292, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1370, 1380, 1386, 1388, 1393, 1395, 1401, 1402, 1403, 1407, 1408, 1413, 1415, 1417, 1418, 1419, 1628, 1683, 1721, 1726, 1736, 1746, 1756, 1810, 1811, 1816, 1818, 1824, 1826, 1903, 1908, 1914, 1919, 1920], "keyword": [10, 314, 1132, 1140, 1143, 1144, 1147, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1278, 1283, 1284, 1285, 1292, 1294, 1295, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1380, 1386, 1388, 1393, 1395, 1401, 1402, 1403, 1407, 1408, 1413, 1415, 1417, 1418, 1419, 1628, 1816, 1818, 1824, 1826], "first": [14, 64, 69, 73, 319, 326, 330, 368, 446, 509, 684, 690, 729, 976, 978, 1017, 1018, 1024, 1137, 1147, 1149, 1151, 1153, 1172, 1175, 1176, 1277, 1278, 1281, 1285, 1289, 1296, 1304, 1305, 1386, 1393, 1398, 1401, 1407, 1410, 1417, 1418, 1419, 1420, 1892, 1905, 1906, 1907, 1910, 1912, 1919, 1920, 1921], "pre_rotor": [14, 35, 339, 341, 349, 350, 361, 413, 518, 634, 635, 654, 657, 1595, 1629], "post_rotor": [14, 1595], "pre_wak": [14, 1907], "last": [14, 934, 953, 1034, 1153, 1173, 1277, 1289, 1303, 1305, 1401, 1451, 1905], "urlx": 15, "util": [15, 365, 367, 438, 443, 528, 980, 981, 985, 986, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1882, 1889, 1903, 1907, 1910, 1916, 1918, 1919, 1920], "sequenti": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 734, 980, 983, 984, 1327, 1883, 1896, 1902, 1903], "A": [16, 66, 92, 103, 114, 182, 228, 233, 313, 354, 357, 361, 387, 390, 443, 444, 475, 482, 525, 669, 712, 716, 719, 774, 783, 789, 802, 808, 809, 821, 864, 865, 871, 872, 922, 948, 1002, 1003, 1017, 1018, 1020, 1029, 1034, 1036, 1122, 1132, 1133, 1147, 1148, 1149, 1151, 1152, 1153, 1155, 1157, 1159, 1167, 1172, 1173, 1175, 1176, 1177, 1230, 1276, 1278, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1315, 1321, 1322, 1323, 1328, 1356, 1377, 1380, 1389, 1396, 1401, 1403, 1404, 1407, 1408, 1409, 1411, 1413, 1417, 1418, 1428, 1429, 1433, 1683, 1721, 1722, 1732, 1742, 1752, 1827, 1885, 1886, 1888, 1889, 1891, 1892, 1895, 1897, 1900, 1907, 1908, 1909, 1911], "without": [16, 339, 518, 789, 796, 802, 808, 953, 1096, 1115, 1172, 1174, 1310, 1311, 1401, 1886, 1892, 1903, 1907, 1910, 1914, 1916, 1917, 1918], "thi": [16, 35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 85, 94, 114, 233, 328, 329, 333, 341, 349, 350, 351, 353, 357, 378, 384, 386, 390, 395, 397, 414, 425, 430, 431, 443, 456, 465, 477, 484, 493, 522, 534, 537, 545, 550, 556, 566, 573, 578, 582, 584, 586, 590, 610, 614, 617, 619, 625, 631, 635, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 708, 723, 725, 731, 736, 744, 750, 756, 761, 764, 767, 771, 774, 776, 783, 785, 789, 791, 796, 798, 802, 804, 808, 809, 815, 821, 828, 829, 858, 864, 871, 910, 934, 961, 987, 988, 989, 990, 991, 992, 1010, 1017, 1018, 1020, 1022, 1025, 1030, 1031, 1032, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1050, 1051, 1052, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1096, 1097, 1099, 1101, 1102, 1104, 1111, 1112, 1115, 1117, 1119, 1122, 1124, 1125, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1143, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1159, 1163, 1164, 1167, 1168, 1169, 1171, 1172, 1173, 1175, 1176, 1177, 1179, 1180, 1181, 1188, 1195, 1199, 1200, 1210, 1214, 1239, 1243, 1244, 1245, 1246, 1247, 1258, 1259, 1260, 1261, 1273, 1274, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1285, 1288, 1290, 1293, 1294, 1296, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1320, 1321, 1322, 1323, 1324, 1325, 1331, 1332, 1337, 1338, 1339, 1340, 1343, 1352, 1354, 1356, 1358, 1360, 1361, 1362, 1364, 1370, 1375, 1376, 1384, 1385, 1387, 1389, 1391, 1392, 1394, 1396, 1399, 1400, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1426, 1428, 1429, 1430, 1433, 1451, 1471, 1478, 1485, 1502, 1503, 1569, 1590, 1591, 1598, 1599, 1602, 1629, 1683, 1721, 1722, 1732, 1742, 1752, 1775, 1787, 1788, 1884, 1885, 1886, 1889, 1891, 1892, 1893, 1897, 1903, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "us": [16, 228, 241, 319, 329, 354, 387, 435, 447, 534, 552, 581, 617, 696, 697, 700, 701, 704, 705, 708, 709, 723, 761, 764, 809, 810, 829, 835, 850, 927, 934, 949, 972, 973, 1017, 1018, 1020, 1022, 1025, 1031, 1035, 1036, 1038, 1060, 1063, 1065, 1081, 1082, 1090, 1102, 1112, 1122, 1123, 1124, 1132, 1133, 1135, 1138, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1153, 1159, 1163, 1164, 1165, 1166, 1167, 1169, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1181, 1184, 1185, 1197, 1199, 1201, 1210, 1222, 1237, 1239, 1243, 1244, 1245, 1246, 1247, 1258, 1259, 1260, 1261, 1273, 1274, 1276, 1277, 1278, 1281, 1292, 1293, 1294, 1295, 1296, 1298, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1324, 1325, 1327, 1329, 1331, 1342, 1343, 1358, 1362, 1370, 1376, 1380, 1387, 1388, 1389, 1390, 1394, 1395, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1421, 1422, 1428, 1429, 1431, 1433, 1434, 1453, 1502, 1503, 1505, 1550, 1574, 1575, 1578, 1579, 1590, 1591, 1594, 1598, 1599, 1627, 1633, 1634, 1635, 1636, 1683, 1719, 1721, 1729, 1730, 1749, 1750, 1760, 1761, 1762, 1763, 1766, 1770, 1771, 1775, 1781, 1782, 1783, 1784, 1787, 1788, 1791, 1801, 1802, 1886, 1891, 1892, 1893, 1903, 1905, 1906, 1907, 1910, 1911, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "simul": [16, 802, 808, 1886, 1903, 1904, 1908, 1913, 1916], "environ": [16, 1886, 1903], "do": [16, 368, 1090, 1099, 1111, 1112, 1199, 1281, 1304, 1305, 1314, 1371, 1377, 1401, 1417, 1418, 1683, 1721, 1886, 1892, 1903, 1910, 1912, 1916, 1918, 1919, 1920], "support": [16, 1010, 1017, 1024, 1090, 1099, 1112, 1133, 1147, 1148, 1152, 1154, 1155, 1163, 1164, 1174, 1185, 1277, 1281, 1290, 1292, 1293, 1304, 1305, 1310, 1314, 1317, 1318, 1324, 1325, 1326, 1329, 1343, 1360, 1361, 1364, 1371, 1385, 1388, 1392, 1395, 1401, 1402, 1418, 1453, 1683, 1721, 1886, 1903, 1904, 1905, 1913], "multi": [16, 473, 764, 1886, 1891, 1902, 1903, 1904], "comput": [16, 36, 42, 48, 55, 59, 79, 85, 94, 228, 274, 317, 318, 328, 333, 341, 351, 357, 375, 384, 390, 414, 423, 425, 428, 435, 456, 465, 477, 484, 493, 512, 514, 515, 517, 522, 578, 582, 586, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 669, 670, 674, 680, 686, 692, 723, 725, 729, 731, 734, 736, 739, 741, 744, 748, 750, 754, 756, 828, 967, 996, 1017, 1034, 1053, 1111, 1132, 1146, 1150, 1151, 1163, 1164, 1167, 1277, 1294, 1306, 1313, 1401, 1409, 1424, 1602, 1683, 1721, 1883, 1886, 1892, 1896, 1903, 1913, 1918, 1921], "like": [16, 452, 1017, 1053, 1122, 1133, 1138, 1141, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1157, 1163, 1164, 1172, 1173, 1174, 1175, 1176, 1179, 1199, 1276, 1277, 1278, 1279, 1281, 1296, 1303, 1304, 1305, 1309, 1310, 1311, 1314, 1321, 1324, 1325, 1356, 1364, 1386, 1393, 1402, 1403, 1404, 1407, 1408, 1417, 1418, 1419, 1424, 1428, 1429, 1430, 1433, 1886, 1908, 1913, 1915], "fmu": [16, 1886], "calc_par": [16, 17, 35, 40, 46, 53, 57, 77, 83, 92, 329, 330, 339, 347, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 1600], "states0": [16, 428, 739], "origin": [16, 92, 93, 103, 163, 437, 783, 784, 882, 886, 890, 894, 898, 903, 908, 913, 918, 987, 988, 989, 990, 991, 992, 1017, 1060, 1151, 1173, 1219, 1281, 1296, 1320, 1330, 1357, 1358, 1367, 1401, 1402, 1417, 1418, 1421, 1422, 1453, 1494, 1597, 1600, 1601, 1638, 1683, 1721, 1773, 1786, 1804, 1904, 1918], "plugin": [16, 17, 87, 980, 1886, 1896, 1916], "sequentialiterplugin": [16, 17], "updat": [16, 17, 87, 91, 375, 378, 437, 534, 537, 541, 545, 549, 550, 552, 556, 560, 563, 566, 570, 573, 617, 882, 886, 890, 894, 898, 903, 908, 913, 918, 980, 984, 1017, 1025, 1034, 1038, 1044, 1060, 1065, 1070, 1081, 1086, 1123, 1134, 1138, 1274, 1318, 1363, 1367, 1415, 1423, 1424, 1550, 1590, 1591, 1594, 1598, 1599, 1627, 1766, 1775, 1787, 1788, 1791, 1886, 1903, 1910, 1916, 1921], "everi": [16, 17, 601, 602, 1112, 1175, 1176, 1276, 1290, 1310, 1408, 1905, 1916], "__iter__": [16, 18], "__next__": [16, 19], "step": [16, 19, 33, 103, 214, 228, 424, 451, 453, 509, 594, 595, 601, 602, 741, 742, 871, 872, 948, 1000, 1017, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1175, 1176, 1273, 1277, 1294, 1306, 1310, 1311, 1313, 1402, 1404, 1408, 1903, 1907, 1908, 1909, 1911, 1912, 1913, 1916, 1918, 1920], "next": [16, 19, 1017, 1148, 1321, 1333, 1453, 1906, 1907, 1910, 1912, 1914, 1916, 1917, 1919, 1920], "size": [16, 33, 92, 99, 103, 153, 210, 228, 319, 330, 336, 397, 403, 407, 424, 454, 460, 462, 471, 473, 475, 480, 482, 487, 490, 500, 503, 506, 590, 741, 742, 871, 872, 927, 932, 1000, 1017, 1133, 1148, 1149, 1152, 1172, 1175, 1176, 1237, 1276, 1281, 1290, 1303, 1304, 1309, 1310, 1314, 1315, 1321, 1332, 1403, 1410, 1413, 1415, 1600, 1601, 1606, 1903, 1909, 1910, 1919], "total": [16, 33, 92, 99, 330, 336, 403, 407, 435, 441, 454, 460, 462, 471, 473, 475, 480, 482, 487, 490, 500, 503, 506, 925, 934, 942, 954, 961, 963, 967, 970, 974, 985, 993, 996, 998, 1133, 1135, 1173, 1277, 1550, 1580, 1581, 1594, 1600, 1606, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1903, 1910], "counter": [16, 22, 92, 95, 319, 326, 1001, 1314, 1375, 1550, 1563, 1594, 1627, 1766, 1775, 1791], "index": [16, 22, 28, 48, 49, 92, 95, 96, 228, 241, 326, 329, 330, 334, 354, 358, 368, 377, 378, 403, 404, 409, 410, 412, 424, 426, 427, 428, 431, 437, 447, 454, 457, 462, 464, 467, 470, 473, 475, 482, 490, 492, 495, 499, 503, 506, 509, 536, 537, 544, 545, 550, 555, 556, 562, 565, 566, 572, 573, 630, 726, 727, 732, 733, 737, 738, 739, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 925, 926, 927, 955, 956, 957, 958, 959, 960, 969, 987, 988, 989, 1001, 1018, 1024, 1122, 1132, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1285, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1429, 1430, 1433, 1505, 1550, 1585, 1589, 1594, 1600, 1627, 1766, 1775, 1791, 1828, 1903, 1908, 1914, 1915, 1916, 1919, 1921], "weight": [16, 34, 92, 101, 286, 330, 338, 393, 395, 397, 402, 403, 408, 454, 455, 461, 462, 472, 473, 475, 481, 482, 489, 490, 502, 503, 506, 508, 510, 541, 563, 588, 590, 593, 594, 595, 600, 601, 602, 607, 934, 953, 969, 987, 988, 989, 1017, 1277, 1278, 1281, 1315, 1403, 1413, 1586, 1587, 1600, 1607, 1683, 1698, 1721, 1872, 1887, 1892, 1897, 1899, 1903, 1907, 1908, 1910, 1915, 1916, 1917, 1918, 1920], "arrai": [16, 34, 36, 42, 48, 55, 59, 79, 85, 94, 103, 104, 108, 109, 110, 111, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 328, 333, 341, 351, 357, 368, 384, 390, 409, 410, 414, 425, 452, 456, 465, 477, 484, 493, 522, 578, 582, 586, 608, 609, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 725, 731, 736, 744, 750, 756, 953, 1017, 1025, 1030, 1051, 1052, 1053, 1055, 1060, 1061, 1075, 1076, 1077, 1081, 1088, 1122, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1179, 1257, 1271, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1294, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1417, 1418, 1419, 1424, 1428, 1429, 1430, 1433, 1451, 1452, 1505, 1506, 1507, 1510, 1511, 1527, 1528, 1535, 1536, 1557, 1558, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1590, 1591, 1598, 1599, 1602, 1610, 1611, 1612, 1614, 1621, 1622, 1623, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1669, 1670, 1671, 1674, 1675, 1680, 1681, 1683, 1686, 1687, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1706, 1707, 1711, 1712, 1713, 1717, 1720, 1721, 1724, 1725, 1726, 1734, 1735, 1736, 1744, 1745, 1746, 1754, 1755, 1756, 1767, 1777, 1787, 1788, 1798, 1808, 1830, 1831, 1832, 1833, 1903, 1907, 1909, 1910, 1916, 1918, 1921], "fdata": [16, 26, 35, 36, 40, 42, 46, 48, 49, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 330, 333, 339, 341, 349, 351, 354, 357, 361, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 393, 395, 397, 398, 403, 413, 414, 416, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 435, 436, 437, 454, 456, 462, 465, 473, 475, 477, 482, 484, 490, 493, 503, 506, 518, 519, 522, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 551, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 574, 575, 576, 578, 581, 582, 584, 586, 588, 590, 591, 594, 601, 608, 610, 612, 614, 617, 619, 623, 625, 629, 631, 634, 637, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 678, 680, 684, 686, 690, 692, 723, 725, 726, 727, 729, 731, 732, 733, 734, 736, 737, 738, 739, 741, 744, 745, 746, 747, 748, 750, 751, 752, 754, 756, 757, 758, 761, 762, 763, 764, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 812, 813, 814, 815, 818, 819, 820, 821, 824, 825, 828, 831, 832, 835, 851, 858, 861, 862, 863, 864, 867, 868, 871, 874, 876, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 900, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 1600, 1602], "pdata": [16, 31, 46, 48, 49, 57, 59, 92, 94, 319, 322, 330, 333, 365, 367, 368, 375, 377, 378, 381, 383, 384, 387, 390, 403, 423, 427, 428, 430, 431, 432, 433, 435, 436, 437, 454, 456, 462, 465, 473, 475, 477, 482, 484, 490, 493, 503, 506, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 575, 576, 578, 581, 582, 584, 586, 723, 727, 729, 733, 734, 738, 739, 741, 747, 748, 752, 754, 758, 761, 762, 763, 764, 766, 767, 768, 771, 772, 773, 774, 776, 778, 779, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 812, 813, 814, 815, 818, 819, 820, 821, 824, 825, 828, 831, 832, 835, 851, 858, 861, 862, 863, 864, 867, 868, 871, 874, 876, 879, 881, 882, 883, 885, 886, 887, 889, 890, 891, 893, 894, 895, 897, 898, 900, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 1600, 1602], "overal": [16, 25, 32, 1916], "cur_farm_result": [16, 23], "cur_point_result": [16, 24], "indx": 28, "itr": 29, "": [33, 35, 40, 46, 53, 57, 77, 83, 92, 103, 195, 228, 308, 309, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 368, 383, 386, 387, 393, 403, 413, 416, 454, 455, 462, 473, 475, 482, 490, 503, 506, 518, 519, 552, 553, 561, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 953, 987, 988, 989, 990, 991, 992, 1001, 1017, 1025, 1030, 1060, 1061, 1081, 1102, 1104, 1118, 1122, 1124, 1132, 1133, 1148, 1149, 1151, 1152, 1153, 1159, 1167, 1172, 1173, 1175, 1176, 1179, 1195, 1208, 1249, 1256, 1263, 1270, 1272, 1276, 1277, 1278, 1279, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1321, 1326, 1330, 1332, 1341, 1343, 1350, 1358, 1375, 1383, 1389, 1396, 1401, 1403, 1404, 1407, 1410, 1413, 1419, 1423, 1428, 1429, 1430, 1433, 1451, 1453, 1552, 1559, 1569, 1600, 1776, 1797, 1838, 1839, 1840, 1845, 1863, 1864, 1865, 1873, 1897, 1899, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "w": [34, 283, 299, 368, 417, 462, 482, 483, 581, 665, 666, 668, 672, 673, 678, 679, 684, 690, 1001, 1010, 1012, 1014, 1118, 1151, 1310, 1315, 1330, 1375, 1437, 1440, 1441, 1446, 1683, 1721, 1831, 1832, 1873, 1880, 1881, 1887, 1892, 1897, 1899, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "n_turbin": [34, 36, 42, 55, 79, 85, 101, 319, 325, 338, 339, 341, 351, 357, 395, 397, 398, 408, 414, 425, 438, 441, 452, 453, 461, 472, 481, 489, 502, 522, 590, 591, 608, 609, 610, 614, 619, 625, 631, 636, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 725, 731, 736, 744, 746, 750, 756, 928, 1607, 1641, 1642, 1672, 1673, 1722, 1723, 1732, 1733, 1742, 1743, 1891, 1906, 1907, 1910, 1912, 1914, 1915, 1916, 1917, 1918], "calcord": [35, 36, 37, 38, 39, 1884, 1907, 1916, 1918], "farmdatamodel": [35, 40, 53, 77, 83, 339, 349, 350, 351, 352, 353, 354, 355, 356, 358, 361, 393, 413, 1884, 1885, 1888], "via": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 447, 448, 454, 455, 462, 464, 470, 473, 475, 482, 490, 492, 499, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 925, 934, 954, 961, 966, 967, 970, 974, 985, 993, 996, 998, 1010, 1102, 1104, 1138, 1148, 1281, 1314, 1417, 1418, 1419, 1559, 1569, 1600, 1810, 1884, 1890, 1891, 1893, 1897, 1903, 1904, 1910, 1913, 1914, 1919, 1921], "output_farm_var": [35, 38, 40, 44, 53, 56, 77, 81, 83, 86, 339, 346, 349, 352, 354, 359, 361, 393, 401, 413, 416, 518, 519, 523, 588, 594, 601, 608, 611, 612, 616, 617, 621, 623, 627, 629, 633, 634, 639, 641, 644, 645, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 677, 678, 683, 684, 689, 690, 695], "which": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 302, 330, 335, 339, 346, 349, 352, 354, 359, 361, 378, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 423, 431, 432, 433, 436, 437, 454, 459, 462, 464, 469, 473, 475, 479, 482, 486, 490, 498, 503, 506, 518, 519, 523, 537, 545, 550, 556, 566, 573, 576, 580, 581, 583, 584, 587, 588, 594, 601, 608, 611, 612, 616, 617, 621, 623, 627, 629, 630, 633, 634, 639, 641, 644, 645, 646, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 673, 677, 678, 679, 683, 684, 689, 690, 691, 695, 723, 724, 754, 755, 762, 763, 764, 766, 767, 768, 772, 773, 778, 780, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 812, 814, 818, 820, 824, 825, 831, 832, 861, 863, 867, 868, 874, 876, 881, 882, 885, 886, 887, 888, 889, 890, 893, 894, 895, 897, 898, 899, 900, 902, 903, 904, 905, 906, 907, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 927, 930, 931, 932, 933, 949, 969, 978, 987, 988, 989, 996, 1001, 1017, 1018, 1020, 1025, 1035, 1037, 1050, 1060, 1081, 1090, 1122, 1123, 1132, 1135, 1137, 1138, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1159, 1161, 1167, 1172, 1173, 1175, 1176, 1177, 1179, 1220, 1230, 1233, 1237, 1238, 1245, 1246, 1247, 1251, 1255, 1259, 1260, 1261, 1265, 1269, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1292, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1320, 1321, 1324, 1325, 1326, 1327, 1328, 1332, 1342, 1343, 1356, 1357, 1358, 1360, 1370, 1371, 1373, 1380, 1386, 1393, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1415, 1417, 1418, 1419, 1426, 1428, 1429, 1430, 1433, 1559, 1569, 1600, 1605, 1608, 1609, 1618, 1626, 1629, 1683, 1721, 1830, 1833, 1888, 1892, 1900, 1904, 1907, 1909, 1910, 1913, 1916, 1917, 1918, 1919, 1920, 1921], "being": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 383, 385, 387, 391, 393, 401, 403, 406, 413, 416, 431, 432, 454, 459, 462, 469, 473, 475, 479, 482, 486, 490, 498, 503, 506, 518, 519, 523, 576, 580, 581, 583, 584, 587, 588, 594, 601, 608, 611, 612, 616, 617, 621, 623, 627, 629, 633, 634, 639, 641, 644, 645, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 677, 678, 683, 684, 689, 690, 695, 767, 768, 785, 786, 791, 792, 798, 804, 1133, 1135, 1140, 1144, 1175, 1176, 1201, 1322, 1323, 1399, 1400, 1569, 1600, 1605, 1683, 1721, 1903, 1906], "modifi": [35, 38, 40, 44, 46, 49, 51, 53, 56, 57, 61, 77, 81, 83, 86, 92, 98, 330, 335, 339, 346, 349, 352, 354, 359, 361, 375, 377, 378, 383, 385, 387, 391, 393, 397, 401, 403, 406, 413, 416, 431, 432, 454, 459, 462, 469, 473, 475, 479, 482, 486, 490, 498, 503, 506, 518, 519, 523, 534, 536, 537, 541, 544, 545, 549, 550, 552, 555, 556, 560, 562, 563, 565, 566, 570, 572, 573, 576, 580, 581, 583, 584, 587, 588, 590, 594, 601, 608, 611, 612, 616, 617, 621, 623, 627, 629, 633, 634, 639, 641, 644, 645, 649, 650, 653, 654, 656, 657, 659, 660, 664, 665, 667, 669, 671, 672, 677, 678, 683, 684, 689, 690, 695, 767, 768, 785, 786, 791, 792, 798, 804, 961, 962, 1134, 1295, 1358, 1362, 1371, 1376, 1384, 1389, 1391, 1396, 1409, 1417, 1418, 1600, 1605, 1888, 1907], "main": [35, 36, 40, 42, 46, 48, 53, 55, 57, 59, 77, 79, 83, 85, 92, 94, 327, 328, 330, 333, 339, 341, 349, 351, 354, 357, 361, 383, 384, 387, 390, 403, 413, 414, 416, 454, 456, 462, 465, 473, 475, 477, 482, 484, 490, 493, 503, 506, 518, 519, 522, 576, 578, 581, 582, 584, 586, 608, 610, 612, 614, 617, 619, 623, 625, 629, 631, 634, 637, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 678, 680, 684, 686, 690, 692, 1151, 1153, 1305, 1322, 1600, 1602, 1905, 1908], "out_var": [35, 40, 46, 53, 57, 77, 83, 92, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 609, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 1600], "start": [35, 40, 46, 53, 57, 77, 83, 92, 103, 175, 228, 327, 329, 330, 331, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 444, 447, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 723, 724, 754, 755, 976, 978, 1002, 1003, 1017, 1024, 1034, 1053, 1133, 1135, 1148, 1172, 1309, 1314, 1406, 1410, 1453, 1600, 1827, 1897, 1903, 1906, 1908, 1914, 1917, 1921], "apply_ufunc": [35, 40, 46, 53, 57, 77, 83, 92, 319, 320, 327, 329, 330, 339, 349, 353, 354, 361, 383, 386, 387, 393, 403, 413, 416, 454, 462, 473, 475, 482, 490, 503, 506, 518, 519, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 1600], "singl": [36, 42, 48, 55, 59, 79, 85, 92, 94, 319, 328, 333, 341, 351, 357, 384, 390, 414, 425, 453, 456, 465, 477, 482, 484, 493, 503, 522, 578, 582, 586, 588, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 725, 731, 736, 744, 750, 756, 972, 976, 978, 1017, 1059, 1133, 1148, 1149, 1152, 1170, 1173, 1276, 1277, 1295, 1310, 1321, 1343, 1358, 1401, 1417, 1418, 1502, 1506, 1523, 1525, 1527, 1532, 1535, 1543, 1550, 1564, 1594, 1602, 1608, 1610, 1617, 1619, 1621, 1625, 1627, 1641, 1643, 1646, 1648, 1651, 1653, 1656, 1658, 1662, 1664, 1667, 1672, 1674, 1678, 1680, 1684, 1686, 1691, 1693, 1697, 1699, 1703, 1705, 1709, 1711, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1883, 1884, 1886, 1891, 1902, 1903, 1904, 1906, 1907, 1908, 1912, 1913, 1918], "should": [36, 42, 48, 55, 59, 79, 85, 94, 328, 333, 341, 345, 351, 357, 371, 384, 390, 405, 414, 425, 454, 455, 456, 458, 465, 468, 477, 478, 484, 493, 497, 505, 522, 534, 578, 579, 582, 586, 610, 614, 615, 619, 625, 631, 637, 638, 643, 647, 652, 655, 658, 663, 670, 674, 676, 680, 682, 686, 688, 692, 694, 725, 731, 736, 744, 750, 756, 910, 1017, 1022, 1025, 1043, 1044, 1050, 1060, 1070, 1081, 1086, 1101, 1117, 1140, 1143, 1144, 1147, 1148, 1157, 1159, 1167, 1173, 1175, 1176, 1200, 1244, 1258, 1274, 1303, 1305, 1311, 1313, 1321, 1389, 1390, 1396, 1397, 1401, 1404, 1407, 1408, 1410, 1429, 1602, 1604, 1683, 1721, 1829, 1834, 1905, 1907, 1909, 1910, 1914, 1915, 1919, 1920, 1921], "output": [36, 38, 42, 44, 48, 51, 55, 56, 57, 59, 61, 79, 81, 85, 86, 94, 98, 328, 329, 333, 335, 341, 346, 351, 352, 353, 357, 359, 368, 384, 385, 386, 390, 391, 401, 406, 414, 440, 454, 455, 456, 459, 462, 464, 465, 469, 477, 479, 482, 483, 484, 486, 490, 492, 493, 498, 522, 523, 578, 580, 582, 583, 586, 587, 608, 609, 610, 611, 612, 613, 614, 616, 619, 621, 625, 627, 631, 633, 637, 639, 643, 644, 647, 649, 652, 653, 655, 656, 658, 659, 663, 664, 670, 671, 674, 677, 680, 683, 686, 689, 692, 695, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1017, 1025, 1048, 1051, 1052, 1055, 1060, 1073, 1075, 1076, 1077, 1081, 1087, 1088, 1257, 1271, 1281, 1304, 1360, 1361, 1405, 1602, 1605, 1683, 1721, 1825, 1834, 1882, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "output_var": [38, 44, 51, 56, 61, 81, 86, 98, 335, 346, 352, 359, 385, 391, 401, 406, 454, 455, 459, 462, 464, 469, 473, 479, 486, 490, 492, 498, 506, 523, 576, 577, 580, 583, 587, 611, 612, 613, 616, 621, 627, 633, 639, 644, 645, 646, 649, 653, 656, 659, 664, 671, 677, 683, 689, 695, 1605, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "smdl": [39, 45, 52, 82, 100, 337, 348, 360, 373, 382, 392, 488, 501, 524, 540, 548, 559, 569, 628, 728, 760, 770, 782, 788, 795, 801, 807, 827, 834, 857, 870, 878], "farmwakescalcul": [40, 41, 42, 43, 44, 45, 77, 78, 79, 80, 81, 82, 1884, 1885, 1907, 1916, 1918], "effect": [40, 46, 77, 375, 393, 395, 563, 588, 594, 601, 789, 796, 802, 808, 1017, 1025, 1031, 1081, 1082, 1148, 1169, 1273, 1277, 1278, 1314, 1318, 1355, 1361, 1390, 1397, 1838, 1839, 1840, 1863, 1864, 1865, 1884, 1885, 1892, 1894, 1895, 1899, 1903, 1906, 1907, 1913, 1914, 1915, 1920, 1921], "pointwakescalcul": [46, 47, 48, 49, 50, 51, 52, 1884], "pvar": [46, 57], "emodel": [46, 47], "pointdatamodellist": [46, 47, 330, 387, 388, 389, 390, 391, 392, 1888], "extra": [46, 47, 987, 988, 989, 990, 991, 992, 1134, 1332, 1402, 1413, 1683, 1721], "emodels_cpar": [46, 47], "output_point_var": [46, 51, 57, 61, 92, 98, 330, 335, 383, 385, 387, 391, 403, 406, 454, 459, 462, 469, 473, 475, 479, 482, 486, 490, 498, 503, 506, 576, 580, 581, 583, 584, 587, 1600, 1605], "contribute_to_wake_delta": [46, 49, 375, 377, 378, 430, 431, 534, 536, 537, 541, 544, 545, 549, 550, 552, 555, 556, 560, 562, 563, 565, 566, 570, 572, 573, 761, 764, 767, 771, 774, 776, 783, 785, 789, 791, 796, 798, 802, 804, 808, 809, 815, 821, 828, 858, 864, 871], "contribut": [46, 49, 375, 377, 430, 431, 435, 436, 534, 536, 541, 544, 549, 552, 555, 560, 562, 563, 565, 570, 572, 761, 764, 767, 771, 774, 776, 783, 785, 789, 791, 796, 798, 802, 804, 808, 809, 815, 821, 828, 858, 864, 871, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 1277, 1907], "delta": [46, 49, 62, 65, 66, 70, 71, 74, 75, 375, 377, 378, 381, 430, 431, 432, 433, 435, 436, 437, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 575, 584, 585, 654, 657, 734, 735, 748, 749, 761, 762, 763, 764, 766, 767, 768, 771, 773, 774, 776, 778, 780, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 812, 814, 815, 818, 820, 821, 825, 828, 831, 832, 858, 861, 863, 864, 868, 871, 876, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 897, 898, 900, 902, 903, 905, 907, 908, 910, 912, 913, 915, 917, 918, 927, 948, 1452, 1657, 1685, 1892, 1903, 1907, 1913, 1916, 1918], "states_source_turbin": [46, 48, 49, 368, 377, 423, 424, 426, 427, 428, 431, 437, 536, 544, 555, 562, 565, 572, 723, 726, 727, 729, 732, 733, 734, 737, 738, 739, 741, 745, 747, 748, 751, 752, 754, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 835, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918], "For": [48, 49, 327, 368, 377, 378, 409, 410, 424, 426, 427, 428, 431, 437, 508, 510, 536, 537, 544, 545, 550, 555, 556, 562, 565, 566, 572, 573, 617, 726, 727, 732, 733, 737, 738, 739, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 809, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 1000, 1017, 1035, 1037, 1053, 1054, 1090, 1133, 1134, 1137, 1146, 1150, 1151, 1152, 1154, 1163, 1164, 1167, 1172, 1173, 1174, 1183, 1200, 1219, 1243, 1276, 1277, 1278, 1281, 1292, 1303, 1304, 1305, 1309, 1311, 1313, 1314, 1321, 1322, 1323, 1327, 1339, 1341, 1343, 1356, 1358, 1362, 1371, 1376, 1386, 1387, 1389, 1393, 1394, 1396, 1402, 1407, 1408, 1409, 1410, 1411, 1413, 1415, 1417, 1418, 1419, 1421, 1422, 1683, 1721, 1905, 1907, 1908, 1910, 1912, 1913, 1914, 1916, 1917, 1918, 1919, 1921, 1922], "each": [48, 49, 87, 103, 214, 228, 327, 339, 357, 368, 377, 378, 390, 409, 410, 424, 426, 427, 428, 431, 437, 508, 510, 536, 537, 544, 545, 550, 555, 556, 562, 565, 566, 572, 573, 684, 690, 726, 727, 729, 732, 733, 737, 738, 739, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 936, 955, 958, 959, 960, 1000, 1017, 1025, 1036, 1053, 1060, 1081, 1133, 1134, 1146, 1149, 1150, 1151, 1152, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1189, 1273, 1276, 1277, 1278, 1279, 1284, 1295, 1303, 1305, 1307, 1309, 1310, 1313, 1314, 1327, 1333, 1362, 1376, 1387, 1389, 1394, 1396, 1401, 1403, 1407, 1410, 1411, 1419, 1428, 1429, 1430, 1543, 1608, 1614, 1617, 1619, 1623, 1625, 1683, 1684, 1689, 1691, 1695, 1697, 1701, 1703, 1707, 1709, 1713, 1715, 1717, 1718, 1720, 1721, 1809, 1886, 1892, 1906, 1907, 1908, 1910, 1913, 1914, 1917, 1918, 1919, 1920, 1921], "one": [48, 49, 103, 189, 228, 354, 357, 368, 377, 378, 387, 390, 395, 397, 402, 424, 426, 427, 428, 431, 437, 534, 535, 536, 537, 541, 542, 544, 545, 550, 552, 553, 555, 556, 560, 561, 562, 563, 564, 565, 566, 571, 572, 573, 590, 593, 594, 595, 600, 607, 726, 727, 732, 733, 737, 738, 739, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 993, 1000, 1017, 1034, 1124, 1132, 1133, 1135, 1143, 1146, 1148, 1149, 1150, 1151, 1159, 1163, 1164, 1167, 1173, 1175, 1176, 1238, 1276, 1277, 1278, 1281, 1292, 1294, 1303, 1304, 1305, 1306, 1310, 1313, 1321, 1356, 1358, 1375, 1380, 1401, 1403, 1409, 1410, 1411, 1417, 1418, 1419, 1421, 1422, 1451, 1453, 1683, 1721, 1829, 1892, 1896, 1897, 1903, 1907, 1908, 1912, 1920, 1921], "caus": [48, 49, 368, 377, 424, 426, 427, 428, 431, 437, 536, 544, 555, 562, 565, 572, 726, 727, 732, 733, 737, 738, 739, 745, 747, 751, 752, 757, 758, 762, 763, 766, 767, 772, 773, 778, 779, 780, 785, 791, 798, 804, 812, 813, 818, 819, 824, 831, 851, 854, 861, 862, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 1044, 1070, 1086, 1097, 1149, 1303, 1903, 1907], "wmodel": [49, 783, 784], "wdelta": [49, 437, 762, 763, 766, 773, 780, 831, 882, 886, 890, 894, 898, 903, 908, 913, 918], "ob": [49, 431, 432, 767, 768, 785, 786, 791, 792, 798, 804], "fly": [49, 431, 432, 433, 741, 746, 767, 768, 785, 786, 787, 791, 792, 793, 798, 799, 804, 805, 814, 820, 825, 832, 863, 868, 876, 1417, 1418, 1419, 1420], "setambfarmresult": [53, 54, 55, 56, 1884, 1907, 1916, 1918], "copi": [53, 57, 103, 172, 228, 397, 590, 1017, 1025, 1038, 1044, 1060, 1065, 1070, 1081, 1086, 1425, 1884], "setambpointresult": [57, 58, 59, 60, 61, 1884], "treat": [57, 953, 1017, 1044, 1070, 1086, 1277, 1311, 1407, 1431, 1434, 1916], "abstract": [62, 64, 65, 302, 317, 318, 327, 328, 349, 351, 352, 361, 375, 377, 378, 381, 383, 384, 385, 393, 396, 399, 402, 403, 407, 408, 413, 414, 416, 419, 420, 421, 423, 425, 427, 430, 431, 433, 435, 436, 437, 761, 762, 764, 766, 771, 772, 776, 778, 779, 1018, 1022, 1454, 1457, 1458, 1459, 1460, 1461, 1532, 1538, 1543, 1550, 1594, 1596, 1597, 1667, 1718, 1720, 1819, 1824, 1882, 1885, 1888, 1893, 1897, 1900, 1903], "check_converg": [62, 64, 66, 69, 71, 73, 75], "prev_result": [62, 64, 66, 69, 71, 73, 75], "check": [62, 64, 66, 69, 71, 73, 75, 835, 838, 854, 1008, 1177, 1304, 1408, 1502, 1523, 1525, 1532, 1550, 1560, 1561, 1594, 1619, 1620, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1670, 1672, 1678, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1828, 1903, 1907, 1910, 1918, 1919], "get_delta": [62, 65, 66, 70, 71, 74, 75], "most": [62, 65, 66, 70, 71, 74, 75, 1017, 1148, 1151, 1159, 1167, 1179, 1193, 1199, 1277, 1303, 1304, 1305, 1310, 1313, 1332, 1339, 1389, 1396, 1401, 1408, 1410, 1417, 1418, 1421, 1422, 1907, 1921], "recent": [62, 65, 66, 70, 71, 74, 75], "convcritlist": [66, 67, 68, 69, 70, 1885], "crit": [66, 67, 68], "add_crit": [66, 68], "criterion": [66, 68, 1177], "convvardelta": [71, 72, 73, 74, 75, 1885], "requir": [71, 302, 326, 329, 423, 428, 534, 723, 729, 734, 739, 741, 748, 754, 1017, 1054, 1134, 1153, 1183, 1277, 1281, 1327, 1330, 1332, 1428, 1885, 1903, 1904, 1908, 1909, 1910, 1911, 1913, 1916, 1919, 1921, 1922], "select": [71, 83, 288, 293, 312, 329, 339, 341, 375, 376, 380, 400, 409, 410, 411, 412, 413, 414, 415, 418, 422, 429, 434, 437, 455, 462, 464, 470, 473, 490, 492, 499, 503, 506, 519, 533, 608, 609, 610, 614, 619, 625, 631, 637, 643, 647, 652, 655, 658, 663, 670, 674, 680, 686, 692, 762, 763, 766, 772, 773, 778, 780, 812, 818, 824, 831, 861, 867, 874, 882, 886, 890, 894, 898, 903, 908, 913, 918, 964, 987, 988, 989, 990, 991, 992, 993, 995, 1090, 1101, 1112, 1117, 1255, 1269, 1502, 1503, 1505, 1506, 1507, 1523, 1525, 1526, 1527, 1528, 1532, 1533, 1535, 1536, 1539, 1541, 1543, 1544, 1547, 1549, 1550, 1552, 1559, 1569, 1582, 1588, 1594, 1608, 1610, 1611, 1617, 1619, 1621, 1622, 1625, 1627, 1629, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1674, 1675, 1680, 1681, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1766, 1775, 1791, 1882, 1885, 1887, 1888, 1890, 1892, 1894, 1903, 1906, 1909, 1910, 1911, 1912, 1913, 1917, 1919], "limit": [71, 72, 314, 829, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 1017, 1018, 1020, 1025, 1031, 1060, 1063, 1081, 1082, 1096, 1115, 1134, 1135, 1138, 1141, 1142, 1145, 1146, 1147, 1150, 1151, 1153, 1163, 1164, 1172, 1183, 1224, 1225, 1235, 1236, 1251, 1257, 1265, 1271, 1276, 1278, 1284, 1295, 1304, 1310, 1317, 1318, 1327, 1364, 1365, 1366, 1377, 1378, 1379, 1386, 1387, 1390, 1393, 1394, 1397, 1409, 1416, 1424, 1426, 1428, 1429, 1903], "float": [71, 72, 103, 117, 163, 186, 228, 236, 318, 409, 410, 416, 417, 424, 452, 462, 464, 475, 476, 482, 483, 512, 513, 514, 515, 516, 517, 617, 618, 661, 666, 668, 672, 673, 678, 679, 685, 690, 691, 712, 713, 719, 720, 734, 735, 741, 742, 748, 749, 754, 755, 783, 784, 809, 810, 815, 816, 821, 822, 828, 829, 835, 850, 858, 859, 864, 865, 871, 872, 887, 888, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 925, 926, 927, 936, 938, 941, 942, 948, 955, 956, 957, 958, 959, 960, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1000, 1001, 1017, 1034, 1053, 1096, 1115, 1132, 1133, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1163, 1164, 1167, 1168, 1172, 1173, 1175, 1176, 1179, 1188, 1223, 1224, 1225, 1226, 1251, 1265, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1290, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1326, 1328, 1330, 1332, 1340, 1356, 1360, 1362, 1365, 1366, 1367, 1370, 1375, 1376, 1380, 1384, 1385, 1386, 1387, 1390, 1391, 1392, 1393, 1394, 1397, 1398, 1401, 1402, 1404, 1406, 1407, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1429, 1430, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1453, 1471, 1472, 1502, 1503, 1505, 1506, 1507, 1510, 1511, 1515, 1517, 1519, 1521, 1523, 1525, 1526, 1527, 1528, 1531, 1532, 1535, 1536, 1542, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1574, 1578, 1583, 1590, 1591, 1592, 1594, 1596, 1597, 1598, 1599, 1608, 1609, 1610, 1611, 1612, 1616, 1617, 1618, 1619, 1621, 1622, 1625, 1626, 1627, 1629, 1630, 1633, 1635, 1637, 1638, 1639, 1641, 1642, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1657, 1658, 1659, 1662, 1663, 1664, 1665, 1667, 1668, 1672, 1673, 1674, 1675, 1678, 1680, 1681, 1683, 1684, 1685, 1686, 1687, 1691, 1693, 1694, 1697, 1698, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1742, 1743, 1744, 1745, 1747, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1757, 1760, 1762, 1764, 1766, 1767, 1768, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1781, 1783, 1785, 1786, 1787, 1788, 1789, 1791, 1797, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1827, 1828, 1831, 1832, 1887, 1908, 1910], "wd_var": [71, 72, 974, 976, 978, 996], "direct": [71, 72, 403, 475, 476, 482, 483, 594, 595, 601, 602, 729, 730, 956, 957, 959, 960, 976, 978, 979, 987, 988, 989, 990, 991, 992, 1017, 1135, 1138, 1146, 1148, 1150, 1163, 1164, 1167, 1173, 1233, 1245, 1246, 1247, 1257, 1259, 1260, 1261, 1271, 1276, 1277, 1281, 1309, 1314, 1330, 1332, 1373, 1375, 1386, 1393, 1404, 1408, 1410, 1415, 1432, 1435, 1452, 1485, 1486, 1830, 1831, 1832, 1833, 1844, 1871, 1883, 1884, 1890, 1892, 1897, 1899, 1903, 1906, 1907, 1908, 1909, 1912, 1913, 1915, 1917, 1919, 1920, 1921], "unit": [71, 72, 227, 279, 283, 296, 299, 301, 416, 417, 617, 618, 809, 810, 941, 948, 1017, 1102, 1122, 1132, 1141, 1145, 1159, 1165, 1166, 1167, 1273, 1275, 1281, 1283, 1285, 1290, 1294, 1306, 1313, 1314, 1315, 1332, 1340, 1401, 1411, 1417, 1418, 1433, 1525, 1526, 1683, 1721, 1837, 1860, 1887, 1899, 1908], "deg": [71, 72, 1908], "defaultconv": [75, 76, 1885, 1907, 1918], "dure": [83, 92, 319, 320, 329, 345, 371, 405, 454, 455, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 980, 1017, 1096, 1115, 1168, 1604, 1885, 1886, 1896, 1903, 1910, 1911, 1918, 1919], "factor": [83, 84, 283, 515, 617, 618, 645, 646, 809, 810, 821, 822, 864, 865, 871, 872, 1230, 1281, 1322, 1323, 1370, 1410, 1429, 1438, 1442, 1443, 1447, 1608, 1609, 1618, 1626, 1657, 1685, 1806, 1856, 1887, 1892, 1898, 1899, 1903, 1921], "bewteen": [83, 84], "sequentialplugin": [87, 88, 89, 90, 91, 980, 1886, 1896], "sequeti": [87, 89, 90, 91, 983, 984], "intial": [87, 90, 980, 983], "fre": [87, 91, 925, 980, 984], "pre": [87, 91, 339, 341, 796, 797, 802, 803, 980, 984, 1017, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1175, 1176, 1273, 1277, 1294, 1306, 1310, 1311, 1313, 1402, 1408, 1905, 1914, 1918], "latest": [91, 984, 1550, 1590, 1591, 1594, 1598, 1599, 1627, 1766, 1775, 1787, 1788, 1791, 1905], "seqstat": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 1886, 1916], "just": [92, 1142, 1199, 1283, 1293, 1296, 1310, 1324, 1325, 1358, 1408, 1419, 1886, 1903, 1914], "serv": [92, 368, 428, 739, 1886, 1908], "structur": [92, 552, 684, 690, 1310, 1453, 1886, 1892, 1903, 1912, 1919], "placehold": [92, 1886], "statist": [92, 101, 330, 338, 403, 408, 454, 461, 462, 472, 473, 475, 481, 482, 489, 490, 502, 503, 506, 1149, 1151, 1172, 1600, 1607, 1872, 1899, 1908, 1920], "indic": [96, 313, 334, 395, 397, 404, 451, 453, 457, 467, 495, 590, 927, 955, 956, 957, 972, 973, 987, 988, 989, 990, 991, 992, 1001, 1017, 1102, 1103, 1151, 1172, 1173, 1283, 1284, 1296, 1322, 1323, 1356, 1453, 1559, 1588, 1897, 1903], "array_lik": [96, 313, 319, 320, 329, 334, 404, 409, 410, 451, 457, 467, 476, 495, 508, 510, 1683, 1721], "label": [96, 334, 404, 409, 410, 457, 467, 495, 955, 956, 957, 958, 959, 960, 1000, 1001, 1017, 1102, 1107, 1111, 1118, 1132, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1157, 1159, 1167, 1172, 1174, 1175, 1176, 1210, 1212, 1223, 1243, 1245, 1246, 1247, 1252, 1253, 1255, 1259, 1260, 1261, 1266, 1267, 1269, 1273, 1276, 1277, 1279, 1283, 1289, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1326, 1337, 1338, 1350, 1358, 1359, 1362, 1363, 1376, 1380, 1385, 1389, 1390, 1392, 1396, 1397, 1402, 1403, 1407, 1408, 1411, 1413, 1415, 1430, 1431, 1434, 1906, 1907, 1908, 1915, 1919], "integ": [96, 103, 163, 181, 228, 241, 334, 404, 457, 467, 495, 1018, 1023, 1024, 1025, 1042, 1048, 1060, 1069, 1073, 1081, 1085, 1087, 1146, 1148, 1150, 1163, 1164, 1276, 1277, 1281, 1296, 1314, 1371, 1502, 1505, 1506, 1507, 1510, 1511, 1518, 1520, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1571, 1575, 1579, 1590, 1591, 1593, 1594, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1627, 1634, 1636, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1722, 1724, 1725, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1761, 1763, 1766, 1767, 1772, 1773, 1775, 1777, 1782, 1784, 1785, 1786, 1787, 1788, 1791, 1798, 1803, 1804], "overwrit": [97, 315, 369, 409, 410, 759, 769, 781, 794, 800, 806, 826, 833, 855, 869, 877], "exist": [97, 315, 369, 630, 759, 769, 781, 794, 800, 806, 826, 833, 835, 854, 855, 869, 877, 1008, 1017, 1124, 1285, 1305, 1311, 1358, 1417, 1418, 1671, 1913, 1917, 1921], "constant": [102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 1017, 1175, 1176, 1403, 1404, 1429, 1437, 1439, 1441, 1445, 1446, 1449, 1882, 1899, 1903, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "amb_rpoint_result": [102, 1887], "amb_rpoint_r": [102, 1887], "identifi": [102, 226, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 368, 1035, 1036, 1428, 1429, 1882, 1887, 1903, 1918], "dtype": [103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 1277, 1887, 1910], "__hash__": [103, 123, 228, 240], "hash": [103, 123, 228, 240, 1453], "__str__": [103, 154, 228, 270, 1017, 1025, 1033, 1060, 1064, 1081, 1083, 1121, 1502, 1504, 1523, 1525, 1532, 1543, 1550, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "__lt__": [103, 128, 228, 246], "__le__": [103, 126, 228, 244], "__eq__": [103, 116, 228, 235, 1060, 1062], "__ne__": [103, 131, 228, 249], "__gt__": [103, 122, 228, 239], "__ge__": [103, 120, 228, 238], "__add__": [103, 106, 228, 230, 1025, 1029, 1060, 1081], "__radd__": [103, 137, 228, 255], "__sub__": [103, 155, 228, 271, 1025, 1034, 1060, 1081], "__rsub__": [103, 150, 228, 267], "__mul__": [103, 130, 228, 248], "__rmul__": [103, 145, 228, 262], "__mod__": [103, 129, 228, 247], "__rmod__": [103, 144, 228, 261], "__divmod__": [103, 115, 228, 234], "divmod": [103, 115, 139, 228, 234, 257, 1453], "__rdivmod__": [103, 139, 228, 257], "__pow__": [103, 136, 228, 254], "mod": [103, 136, 147, 228, 254, 264], "pow": [103, 136, 147, 228, 254, 264, 887, 888, 905, 906, 1453], "__rpow__": [103, 147, 228, 264], "__neg__": [103, 132, 228, 250], "__pos__": [103, 135, 228, 253], "__abs__": [103, 105, 228, 229], "ab": [103, 105, 228, 229, 1453], "__bool__": [103, 113, 228, 232], "__int__": [103, 124, 228, 242], "__float__": [103, 117, 228, 236], "__floordiv__": [103, 118, 228, 237], "__rfloordiv__": [103, 142, 228, 259], "__truediv__": [103, 156, 228, 272], "__rtruediv__": [103, 151, 228, 268], "see": [103, 104, 133, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 251, 1017, 1034, 1054, 1090, 1093, 1112, 1114, 1118, 1125, 1137, 1138, 1148, 1153, 1159, 1161, 1172, 1173, 1174, 1219, 1231, 1285, 1290, 1292, 1293, 1304, 1309, 1318, 1322, 1323, 1324, 1325, 1331, 1360, 1361, 1380, 1388, 1395, 1402, 1408, 1410, 1411, 1415, 1417, 1418, 1419, 1420, 1421, 1422, 1453, 1683, 1721, 1817, 1819, 1820, 1903, 1905, 1907, 1910, 1912, 1913, 1920], "help": [103, 133, 228, 251, 1010, 1090, 1093, 1112, 1114, 1453, 1817, 1819, 1820, 1897], "accur": [103, 133, 228, 251, 1090, 1093, 1112, 1114, 1817, 1819, 1820], "signatur": [103, 133, 228, 251, 1090, 1093, 1112, 1114, 1122, 1124, 1133, 1142, 1148, 1177, 1276, 1293, 1303, 1304, 1305, 1310, 1314, 1324, 1325, 1358, 1377, 1407, 1408, 1417, 1418, 1419, 1420, 1433, 1817, 1819, 1820], "as_integer_ratio": [103, 163], "pair": [103, 163, 1017, 1151, 1162, 1290, 1330, 1416, 1683, 1721], "whose": [103, 163, 1135, 1893, 1908], "ratio": [103, 163, 1017, 1134, 1135, 1148, 1183, 1188, 1194, 1200, 1281, 1309, 1327, 1332, 1340, 1402], "exactli": [103, 163, 308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1034, 1281, 1403, 1604], "equal": [103, 163, 1034, 1035, 1132, 1142, 1151, 1159, 1167, 1277, 1281, 1294, 1296, 1303, 1305, 1306, 1309, 1311, 1313, 1326, 1332, 1340, 1401, 1402, 1410, 1835, 1849, 1852, 1899], "posit": [103, 163, 409, 410, 412, 1001, 1017, 1081, 1090, 1102, 1103, 1105, 1106, 1133, 1134, 1140, 1144, 1147, 1148, 1149, 1151, 1152, 1153, 1172, 1173, 1174, 1175, 1176, 1219, 1223, 1238, 1276, 1283, 1293, 1295, 1314, 1315, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1330, 1332, 1343, 1357, 1362, 1363, 1371, 1380, 1385, 1386, 1389, 1390, 1392, 1393, 1396, 1397, 1404, 1407, 1408, 1411, 1413, 1417, 1418, 1419, 1421, 1422, 1428, 1429, 1502, 1523, 1766, 1806, 1893, 1894, 1897, 1903, 1914], "denomin": [103, 163, 228, 275], "rais": [103, 163, 454, 1008, 1018, 1024, 1090, 1097, 1099, 1112, 1122, 1132, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1311, 1313, 1314, 1321, 1358, 1377, 1401, 1403, 1404, 1407, 1410, 1429, 1430, 1433], "overflowerror": [103, 163, 1453], "infin": [103, 163], "valueerror": [103, 163, 1018, 1024, 1303, 1305, 1309, 1358, 1377, 1453, 1683, 1721], "nan": [103, 163, 368, 454, 455, 508, 510, 953, 1278, 1321, 1417, 1418, 1451, 1505, 1903, 1914], "is_integ": [103, 186, 228, 276], "finit": [103, 186, 228, 276, 1358, 1417, 1418], "integr": [103, 186, 228, 276, 423, 424, 594, 595, 601, 602, 723, 729, 734, 741, 748, 754, 871, 872, 1159, 1167, 1276, 1277, 1313, 1401, 1410, 1900, 1903], "otherwis": [103, 186, 1008, 1017, 1018, 1020, 1022, 1072, 1096, 1115, 1122, 1151, 1153, 1189, 1219, 1276, 1295, 1303, 1321, 1327, 1389, 1396, 1401, 1402, 1424, 1426, 1428, 1429, 1433, 1719, 1912], "item": [103, 114, 187, 228, 233, 1907], "parametr": [103, 114, 228, 233], "wrapper": [103, 114, 228, 233, 519, 774, 783, 1293, 1304, 1324, 1325, 1408, 1892, 1900, 1903], "around": [103, 114, 228, 233, 1096, 1115, 1151, 1293, 1324, 1325, 1377, 1403, 1408, 1413, 1903, 1906, 1907], "__invert__": [103, 125, 228, 243], "__lshift__": [103, 127, 228, 245], "__rlshift__": [103, 143, 228, 260], "__rshift__": [103, 149, 228, 266], "__rrshift__": [103, 148, 228, 265], "__and__": [103, 107, 228, 231], "__rand__": [103, 138, 228, 256], "__xor__": [103, 157, 228, 273], "__rxor__": [103, 152, 228, 269], "__or__": [103, 134, 228, 252], "__ror__": [103, 146, 228, 263], "__getitem__": [103, 121, 228, 319, 525, 526, 528, 529, 1018, 1019], "tolist": [103, 220, 228], "scalar": [103, 104, 108, 112, 119, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 182, 183, 184, 185, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 368, 576, 577, 1132, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1153, 1159, 1167, 1172, 1175, 1176, 1179, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1326, 1329, 1402, 1411, 1413, 1417, 1418, 1428, 1429, 1430, 1683, 1721], "method": [103, 114, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 233, 449, 613, 879, 880, 883, 884, 887, 888, 891, 892, 1015, 1016, 1017, 1025, 1032, 1036, 1044, 1059, 1060, 1070, 1081, 1086, 1096, 1097, 1101, 1102, 1104, 1111, 1115, 1117, 1119, 1123, 1137, 1142, 1149, 1151, 1167, 1169, 1179, 1199, 1273, 1276, 1277, 1278, 1281, 1283, 1284, 1285, 1292, 1295, 1303, 1304, 1305, 1309, 1311, 1313, 1314, 1321, 1322, 1323, 1343, 1384, 1389, 1391, 1396, 1402, 1403, 1407, 1408, 1417, 1418, 1429], "ident": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1017, 1025, 1034, 1060, 1081, 1173, 1310, 1321, 1402, 1909, 1921], "correspond": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 326, 377, 536, 544, 555, 562, 565, 572, 617, 1025, 1041, 1044, 1060, 1068, 1070, 1081, 1084, 1086, 1132, 1151, 1159, 1167, 1172, 1173, 1276, 1294, 1303, 1305, 1306, 1309, 1311, 1313, 1343, 1401, 1409, 1416, 1428, 1429, 1830, 1833, 1880, 1881, 1899, 1905, 1907, 1910, 1911, 1912, 1915], "attribut": [103, 104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 1180, 1181, 1237, 1244, 1258, 1276, 1356, 1357, 1409, 1410, 1908], "itemset": [103, 188, 228], "tobyt": [103, 218, 228], "tofil": [103, 219, 228], "tostr": [103, 221, 228], "byteswap": [103, 166, 228], "astyp": [103, 164, 228], "getfield": [103, 184, 228], "setfield": [103, 207, 228], "resiz": [103, 204, 228, 1281], "__array__": [103, 108, 228, 1025, 1030, 1060, 1061, 1081], "sc": [103, 108, 112, 228], "dim": [103, 108, 228, 319, 320, 321, 322, 367, 368], "specifi": [103, 108, 228, 375, 377, 534, 536, 541, 544, 549, 552, 555, 560, 562, 563, 565, 570, 572, 630, 1017, 1018, 1020, 1025, 1031, 1081, 1082, 1123, 1133, 1134, 1137, 1143, 1146, 1148, 1150, 1151, 1159, 1163, 1164, 1167, 1174, 1194, 1276, 1277, 1278, 1295, 1303, 1304, 1305, 1309, 1310, 1313, 1314, 1321, 1322, 1323, 1332, 1375, 1401, 1403, 1407, 1408, 1411, 1413, 1417, 1418, 1419, 1420, 1426, 1429, 1719, 1892, 1903, 1910, 1919], "__array_wrap__": [103, 112, 228], "obj": [103, 112, 228, 1310, 1564, 1565, 1567, 1568, 1767, 1777, 1798], "__sizeof__": [103, 153, 228], "byte": [103, 153, 189, 193, 195, 214, 228, 1453], "__reduce__": [103, 140, 228], "helper": [103, 140, 228, 961, 1001, 1010, 1015, 1016, 1102, 1104, 1311, 1600, 1882, 1893, 1897], "pickl": [103, 140, 228], "dump": [103, 178, 179, 228], "fill": [103, 180, 228, 375, 378, 381, 443, 454, 534, 537, 539, 541, 545, 547, 549, 550, 552, 556, 558, 560, 563, 566, 568, 570, 573, 575, 978, 1017, 1135, 1141, 1142, 1145, 1148, 1149, 1164, 1174, 1175, 1176, 1276, 1277, 1281, 1283, 1303, 1305, 1310, 1314, 1321, 1332, 1404, 1407, 1417, 1418, 1428, 1429, 1455, 1465, 1473, 1480, 1487, 1495, 1889], "transpos": [103, 223, 228, 1277], "take": [103, 217, 228, 308, 309, 376, 887, 888, 905, 906, 969, 987, 988, 989, 1025, 1031, 1081, 1082, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1277, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1326, 1328, 1377, 1390, 1397, 1401, 1402, 1404, 1411, 1413, 1417, 1419, 1429], "put": [103, 199, 228, 1148, 1322, 1323, 1413, 1415], "repeat": [103, 202, 228, 1149, 1403, 1417, 1418, 1629], "choos": [103, 167, 228, 1159, 1167, 1276, 1303, 1305, 1313, 1401, 1417, 1418, 1683, 1721, 1905, 1906, 1907, 1912, 1914, 1920], "sort": [103, 211, 228, 1401, 1453], "argsort": [103, 162, 228], "searchsort": [103, 206, 228], "argmax": [103, 160, 228], "argmin": [103, 161, 228], "reshap": [103, 203, 228], "squeez": [103, 212, 228], "view": [103, 182, 225, 228, 1017, 1060, 1063, 1096, 1112, 1115, 1134, 1137, 1138, 1228, 1229, 1251, 1265, 1310, 1364, 1386, 1390, 1393, 1397, 1409, 1426], "swapax": [103, 216, 228], "max": [103, 190, 228, 508, 509, 510, 630, 883, 900, 927, 950, 951, 952, 987, 988, 989, 990, 991, 992, 1060, 1146, 1150, 1163, 1164, 1277, 1417, 1418, 1428, 1453, 1608, 1609, 1618, 1626, 1627, 1629, 1671, 1697, 1698, 1892, 1895, 1903, 1915], "min": [103, 192, 228, 508, 509, 510, 630, 927, 950, 951, 952, 987, 988, 989, 990, 991, 992, 1060, 1146, 1150, 1163, 1164, 1277, 1417, 1418, 1428, 1453, 1608, 1609, 1618, 1626, 1627, 1629, 1671, 1697, 1698, 1895, 1903, 1915, 1916, 1918], "ptp": [103, 198, 228], "trace": [103, 222, 228, 1918], "diagon": [103, 176, 228], "clip": [103, 168, 228, 1017, 1133, 1153, 1175, 1176, 1197, 1198, 1240, 1257, 1271, 1281, 1293, 1324, 1325, 1341, 1342, 1343, 1387, 1394], "conj": [103, 170, 228], "conjug": [103, 171, 228, 1433], "nonzero": [103, 196, 228], "std": [103, 213, 228], "sum": [103, 215, 228, 927, 934, 940, 945, 947, 950, 951, 952, 953, 1276, 1277, 1281, 1309, 1403, 1453, 1550, 1580, 1581, 1586, 1587, 1594, 1608, 1609, 1618, 1626, 1627, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1903, 1919], "cumsum": [103, 174, 228], "prod": [103, 197, 228], "cumprod": [103, 173, 228], "ani": [103, 114, 159, 195, 228, 233, 377, 378, 381, 536, 537, 539, 544, 545, 547, 550, 555, 556, 558, 562, 565, 566, 568, 572, 573, 575, 669, 923, 1017, 1018, 1020, 1025, 1034, 1043, 1050, 1060, 1063, 1081, 1090, 1096, 1099, 1112, 1115, 1124, 1133, 1138, 1147, 1148, 1161, 1163, 1164, 1168, 1172, 1173, 1273, 1274, 1275, 1278, 1281, 1295, 1310, 1314, 1315, 1321, 1402, 1413, 1415, 1452, 1453, 1506, 1507, 1510, 1511, 1527, 1528, 1535, 1536, 1557, 1558, 1567, 1568, 1610, 1611, 1612, 1621, 1622, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1674, 1675, 1680, 1681, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1724, 1725, 1734, 1735, 1744, 1745, 1754, 1755, 1767, 1777, 1798, 1806, 1816, 1818, 1824, 1830, 1831, 1832, 1833, 1892, 1905, 1909, 1913, 1916, 1918, 1919, 1921], "compress": [103, 169, 228, 1834], "flatten": [103, 183, 228, 1321], "ravel": [103, 200, 228, 1906, 1907], "round": [103, 205, 228, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1371, 1402, 1453, 1834], "__format__": [103, 119, 228], "formatt": [103, 119, 228, 1017, 1102, 1111, 1179, 1180, 1181, 1311, 1390, 1397, 1416], "setflag": [103, 208, 228], "newbyteord": [103, 195, 228], "new_ord": [103, 195, 228], "differ": [103, 195, 228, 534, 552, 560, 1034, 1090, 1133, 1146, 1148, 1149, 1150, 1159, 1163, 1164, 1167, 1173, 1245, 1246, 1247, 1259, 1260, 1261, 1277, 1281, 1293, 1303, 1304, 1305, 1310, 1313, 1377, 1388, 1395, 1401, 1410, 1892, 1900, 1903, 1906, 1908, 1909, 1915], "ndim": [103, 194, 228], "stride": [103, 214, 228], "pointer": [103, 175, 228], "items": [103, 189, 228], "length": [103, 189, 193, 228, 451, 508, 510, 534, 535, 741, 742, 748, 749, 1017, 1051, 1052, 1053, 1055, 1059, 1075, 1076, 1077, 1088, 1122, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1230, 1273, 1276, 1277, 1279, 1283, 1290, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1321, 1326, 1358, 1370, 1401, 1402, 1403, 1410, 1411, 1413, 1415, 1419, 1430, 1433, 1437, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1600, 1858, 1879, 1893, 1899, 1903, 1908], "element": [103, 189, 210, 228, 515, 594, 595, 601, 602, 1132, 1152, 1159, 1167, 1230, 1243, 1245, 1246, 1247, 1259, 1260, 1261, 1277, 1294, 1305, 1306, 1310, 1313, 1314, 1403, 1411, 1417, 1418, 1683, 1721], "gentyp": [103, 210, 228], "nbyte": [103, 193, 228], "descriptor": [103, 177, 228], "real": [103, 201, 228, 1132, 1159, 1167, 1294, 1306, 1313, 1401, 1451, 1897], "part": [103, 185, 201, 228, 345, 371, 405, 458, 468, 478, 497, 505, 533, 541, 579, 615, 638, 676, 682, 688, 694, 1017, 1025, 1039, 1040, 1052, 1055, 1057, 1058, 1060, 1063, 1066, 1067, 1076, 1077, 1079, 1080, 1081, 1088, 1089, 1148, 1240, 1310, 1314, 1604, 1908, 1910, 1912, 1913, 1915], "imag": [103, 185, 228, 927, 949, 955, 956, 957, 958, 959, 960, 1001, 1017, 1128, 1132, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1278, 1280, 1281, 1283, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1326, 1328, 1371, 1401, 1402, 1411, 1413, 1417, 1418, 1426, 1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495, 1916], "imaginari": [103, 185, 228], "flat": [103, 182, 228, 1303, 1304, 1305, 1419], "t": [103, 104, 228, 447, 650, 651, 734, 735, 748, 749, 953, 1010, 1012, 1017, 1034, 1149, 1281, 1321, 1381, 1401, 1419, 1683, 1721, 1868, 1880, 1881, 1899, 1916, 1918], "__array_interface__": [103, 109, 228], "protocol": [103, 109, 111, 228], "python": [103, 109, 114, 228, 233, 1453, 1683, 1721, 1897, 1903, 1904, 1913, 1916], "side": [103, 109, 228, 953, 1132, 1149, 1159, 1167, 1175, 1176, 1277, 1289, 1294, 1306, 1313, 1401, 1418, 1906, 1916], "__array_struct__": [103, 111, 228], "struct": [103, 111, 228], "__array_priority__": [103, 110, 228], "prioriti": [103, 110, 228], "pleas": [104, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 176, 178, 179, 180, 183, 184, 187, 188, 190, 191, 192, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 1143, 1390, 1397, 1901, 1904, 1922], "version": [114, 186, 233, 276, 1102, 1106, 1125, 1132, 1147, 1159, 1167, 1172, 1222, 1294, 1304, 1306, 1309, 1313, 1401, 1683, 1721, 1903, 1904, 1905], "22": [114, 186, 233, 276, 1146, 1150, 1163, 1164, 1907, 1908, 1910, 1914, 1918, 1919], "alia": [114, 233, 1017, 1172, 1203, 1303, 1305, 1345], "genericalia": [114, 233], "import": [114, 233, 1034, 1501, 1683, 1721, 1897, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "np": [114, 163, 186, 233, 274, 276, 321, 322, 368, 948, 953, 1122, 1148, 1277, 1310, 1314, 1377, 1410, 1433, 1451, 1453, 1505, 1506, 1507, 1510, 1511, 1527, 1528, 1535, 1536, 1557, 1558, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1590, 1591, 1598, 1599, 1610, 1611, 1612, 1614, 1621, 1622, 1623, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1669, 1670, 1671, 1674, 1675, 1680, 1681, 1683, 1686, 1687, 1689, 1693, 1694, 1695, 1699, 1700, 1701, 1705, 1706, 1707, 1711, 1712, 1713, 1717, 1720, 1721, 1724, 1725, 1734, 1735, 1744, 1745, 1754, 1755, 1767, 1777, 1787, 1788, 1798, 1808, 1906, 1907, 1909, 1910, 1914, 1916, 1917, 1918, 1921], "signedinteg": [114, 228, 233, 1887], "avail": [114, 233, 1153, 1194, 1238, 1276, 1278, 1281, 1303, 1304, 1305, 1310, 1321, 1330, 1380, 1402, 1417, 1418, 1428, 1429, 1892, 1900, 1902, 1903, 1905, 1908, 1919], "9": [114, 233, 1172, 1310, 1683, 1721, 1903, 1905, 1907, 1908, 1910, 1911, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "later": [114, 233, 1034, 1124, 1910, 1914, 1916, 1918, 1919], "pep": [114, 233], "585": [114, 233], "hint": [114, 233, 1501, 1897], "gener": [114, 233, 723, 741, 746, 871, 920, 922, 924, 934, 949, 954, 955, 956, 957, 958, 959, 960, 1018, 1020, 1034, 1052, 1055, 1059, 1076, 1077, 1088, 1148, 1276, 1277, 1278, 1281, 1296, 1303, 1304, 1305, 1309, 1314, 1321, 1356, 1390, 1397, 1401, 1402, 1410, 1417, 1418, 1511, 1568, 1894, 1896, 1900, 1903, 1906, 1907, 1908, 1910], "standard": [114, 233, 934, 944, 1017, 1148, 1163, 1164, 1174, 1277, 1303, 1305, 1408, 1683, 1721, 1903, 1917], "collect": [114, 233, 302, 949, 955, 956, 957, 958, 959, 960, 1001, 1017, 1018, 1126, 1152, 1160, 1173, 1276, 1278, 1279, 1303, 1305, 1314, 1317, 1318, 1321, 1356, 1407, 1428, 1429, 1430, 1683, 1721, 1913, 1917], "doubl": [163, 186, 1903], "10": [163, 515, 754, 802, 808, 809, 821, 828, 835, 864, 871, 1017, 1122, 1148, 1167, 1172, 1276, 1278, 1285, 1293, 1313, 1324, 1325, 1401, 1416, 1433, 1453, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "25": [163, 810, 864, 865, 871, 872, 1140, 1144, 1145, 1903, 1907, 1908, 1910, 1914, 1917], "4": [163, 746, 809, 1100, 1140, 1143, 1144, 1172, 1276, 1277, 1281, 1283, 1284, 1292, 1304, 1305, 1310, 1314, 1410, 1683, 1721, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "2": [186, 276, 409, 410, 451, 453, 508, 510, 534, 535, 581, 762, 763, 766, 773, 779, 780, 802, 808, 813, 819, 821, 822, 831, 862, 864, 871, 927, 1017, 1025, 1027, 1042, 1048, 1053, 1060, 1069, 1073, 1081, 1085, 1087, 1100, 1122, 1132, 1133, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1273, 1276, 1277, 1278, 1285, 1293, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1332, 1339, 1358, 1377, 1387, 1394, 1401, 1402, 1409, 1415, 1428, 1429, 1433, 1451, 1453, 1457, 1458, 1459, 1460, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1479, 1481, 1482, 1483, 1484, 1485, 1486, 1489, 1490, 1491, 1492, 1497, 1498, 1499, 1500, 1683, 1721, 1726, 1736, 1746, 1756, 1806, 1808, 1828, 1829, 1892, 1902, 1904, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "chang": [195, 629, 630, 1017, 1025, 1038, 1043, 1060, 1065, 1081, 1101, 1117, 1124, 1138, 1142, 1172, 1273, 1283, 1284, 1285, 1292, 1293, 1295, 1302, 1310, 1314, 1320, 1321, 1322, 1323, 1324, 1325, 1327, 1340, 1357, 1384, 1386, 1391, 1393, 1408, 1410, 1413, 1415, 1417, 1418, 1426, 1892, 1903, 1904, 1905, 1908, 1912], "also": [195, 423, 927, 1025, 1031, 1081, 1082, 1122, 1137, 1148, 1152, 1153, 1159, 1172, 1173, 1292, 1304, 1309, 1322, 1323, 1331, 1343, 1360, 1361, 1380, 1388, 1389, 1395, 1396, 1402, 1403, 1404, 1410, 1411, 1415, 1417, 1429, 1433, 1827, 1897, 1903, 1904, 1907, 1908, 1910, 1913, 1914, 1915, 1919, 1921], "made": [195, 1018, 1281], "field": [195, 910, 934, 953, 987, 988, 989, 990, 991, 992, 1017, 1148, 1314, 1907, 1909, 1913, 1917, 1920, 1921], "code": [195, 302, 835, 1017, 1133, 1172, 1296, 1310, 1411, 1900, 1903, 1904, 1905], "can": [195, 416, 552, 576, 764, 835, 1017, 1018, 1022, 1025, 1034, 1050, 1060, 1081, 1124, 1132, 1133, 1135, 1137, 1141, 1142, 1143, 1145, 1147, 1148, 1149, 1152, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1177, 1199, 1237, 1276, 1277, 1278, 1281, 1283, 1284, 1292, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1321, 1322, 1323, 1324, 1325, 1327, 1342, 1356, 1362, 1376, 1377, 1388, 1389, 1390, 1395, 1396, 1397, 1401, 1402, 1403, 1408, 1409, 1410, 1411, 1413, 1417, 1418, 1419, 1420, 1424, 1429, 1559, 1629, 1683, 1721, 1890, 1891, 1892, 1893, 1900, 1901, 1903, 1905, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "follow": [195, 462, 741, 815, 1025, 1029, 1060, 1081, 1122, 1132, 1133, 1151, 1153, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1230, 1276, 1277, 1278, 1279, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1330, 1356, 1377, 1386, 1393, 1401, 1402, 1403, 1410, 1417, 1418, 1428, 1429, 1430, 1433, 1683, 1721, 1892, 1902, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1914, 1915, 1918, 1919, 1920, 1921], "swap": 195, "opposit": [195, 1148, 1421, 1422, 1906], "endian": 195, "littl": 195, "big": [195, 1172], "nativ": [195, 1017, 1102, 1133, 1281], "ignor": [195, 1124, 1276, 1277, 1278, 1281, 1303, 1304, 1305, 1309, 1321, 1360, 1361, 1407, 1408, 1417, 1418, 1424], "abov": [195, 988, 989, 991, 992, 1017, 1133, 1148, 1151, 1172, 1175, 1176, 1193, 1238, 1285, 1296, 1314, 1315, 1339, 1370, 1380, 1388, 1395, 1402, 1417, 1418, 1904, 1905, 1906, 1910, 1914, 1915, 1919, 1921], "new_dtyp": 195, "gw": [227, 283, 417, 1887, 1904], "giga": [227, 1887], "watt": [227, 279, 283, 296, 299, 301, 948, 1887], "ityp": [228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 1887], "__index__": [228, 241], "convert": [228, 241, 1017, 1102, 1165, 1166, 1179, 1199, 1311, 1323, 1343, 1350, 1410, 1683, 1721, 1808, 1917], "an": [228, 241, 368, 409, 594, 595, 696, 697, 700, 701, 704, 705, 708, 709, 723, 815, 920, 954, 955, 956, 957, 958, 959, 960, 978, 985, 988, 991, 1001, 1017, 1018, 1020, 1025, 1036, 1043, 1044, 1060, 1070, 1074, 1081, 1086, 1096, 1097, 1102, 1103, 1115, 1122, 1123, 1125, 1128, 1132, 1133, 1135, 1138, 1140, 1143, 1144, 1147, 1148, 1149, 1151, 1152, 1159, 1161, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1176, 1179, 1180, 1199, 1219, 1228, 1229, 1238, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1288, 1290, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1330, 1331, 1341, 1356, 1361, 1362, 1370, 1375, 1376, 1377, 1386, 1389, 1390, 1393, 1396, 1397, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1429, 1430, 1433, 1451, 1550, 1554, 1594, 1627, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1883, 1888, 1890, 1891, 1896, 1903, 1907, 1909, 1915, 1916, 1919, 1921], "suitabl": [228, 241, 1143, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "bit_count": [228, 274], "bit": [228, 274, 1910], "absolut": [228, 274, 654, 657, 1377, 1846, 1876, 1892, 1899, 1903, 1921], "analog": [228, 274, 1148], "builtin": [228, 274, 1072, 1453], "popcount": [228, 274], "c": [228, 274, 1017, 1018, 1022, 1029, 1060, 1074, 1122, 1132, 1140, 1142, 1143, 1144, 1148, 1157, 1159, 1167, 1172, 1273, 1276, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1326, 1330, 1332, 1358, 1402, 1413, 1416, 1419, 1433, 1453, 1683, 1721, 1905, 1921], "numer": [228, 277, 712, 802, 808, 1017, 1148, 1149, 1309, 1311, 1314, 1321, 1384, 1391, 1413, 1416, 1417, 1418, 1502, 1523, 1525, 1532, 1539, 1543, 1547, 1550, 1582, 1594, 1608, 1617, 1619, 1625, 1627, 1766, 1775, 1791, 1892], "itself": [228, 277, 1017, 1165, 1166, 1167, 1200, 1313, 1315], "int64": [274, 276, 1907, 1910, 1916, 1917], "127": [274, 1919], "7": [274, 1018, 1147, 1148, 1172, 1285, 1309, 1683, 1721, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "uint32": 276, "5": [276, 515, 809, 864, 865, 1017, 1060, 1133, 1135, 1140, 1141, 1144, 1145, 1146, 1148, 1150, 1151, 1153, 1163, 1164, 1281, 1283, 1285, 1310, 1314, 1326, 1330, 1339, 1387, 1394, 1413, 1415, 1417, 1418, 1428, 1429, 1683, 1721, 1834, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "kappa": [278, 1437, 1439, 1441, 1445, 1446, 1449, 1887, 1898], "41": [278, 1437, 1439, 1441, 1445, 1446, 1449, 1887, 1898, 1907, 1910], "van": [278, 1437, 1439, 1441, 1445, 1446, 1449, 1887], "karman": [278, 1437, 1439, 1441, 1445, 1446, 1449, 1887], "mw": [279, 283, 417, 445, 446, 1887, 1908, 1912, 1914, 1919, 1920], "mega": [279, 1887], "pop": [282, 1559, 1569, 1597, 1638, 1773, 1786, 1804, 1887], "popul": [282, 1502, 1507, 1511, 1523, 1525, 1528, 1532, 1536, 1543, 1550, 1558, 1559, 1561, 1565, 1568, 1569, 1594, 1600, 1601, 1608, 1611, 1617, 1619, 1622, 1625, 1627, 1641, 1644, 1646, 1649, 1651, 1654, 1656, 1659, 1662, 1665, 1667, 1670, 1672, 1675, 1678, 1681, 1684, 1687, 1691, 1694, 1697, 1700, 1703, 1706, 1709, 1712, 1715, 1718, 1722, 1725, 1732, 1735, 1742, 1745, 1752, 1755, 1766, 1775, 1791, 1887, 1893, 1908, 1910], "p_unit": [283, 416, 417, 669, 1887, 1903], "1000000000": [283, 1887], "1000000": [283, 1887], "tw": [283, 296, 1887], "1000000000000": [283, 1887], "kw": [283, 301, 416, 417, 617, 618, 669, 948, 1887], "power": [283, 416, 417, 530, 617, 618, 665, 667, 672, 673, 678, 679, 684, 685, 690, 691, 887, 888, 905, 906, 934, 936, 941, 942, 948, 998, 1000, 1017, 1143, 1159, 1167, 1276, 1278, 1294, 1313, 1401, 1617, 1837, 1857, 1860, 1887, 1892, 1893, 1896, 1899, 1902, 1903, 1904, 1910, 1912, 1913, 1915, 1919, 1920, 1921], "rel": [283, 1053, 1133, 1149, 1237, 1277, 1283, 1285, 1309, 1314, 1322, 1323, 1330, 1847, 1877, 1887, 1899], "rpoint": [284, 285, 393, 395, 551, 574, 588, 594, 601, 1887], "rotor_point": [284, 285, 1887, 1911], "rweight": [286, 1887], "rotor_weight": [286, 1887], "states_sel": [288, 409, 411, 412, 462, 464, 470, 473, 490, 492, 499, 503, 506, 987, 988, 989, 990, 991, 992, 1887, 1916], "state_point": [289, 368, 1887], "state_source_turbin": [290, 1887], "per": [290, 395, 397, 462, 590, 594, 595, 601, 602, 761, 934, 943, 945, 946, 947, 948, 951, 952, 1132, 1149, 1151, 1159, 1167, 1277, 1294, 1306, 1313, 1314, 1401, 1411, 1775, 1811, 1887, 1891, 1915], "state_turbin": [291, 368, 1887], "tmodel": [292, 1887, 1907, 1916, 1918], "tmodel_sel": [293, 1887, 1907, 1916, 1918], "tname": [294, 1887, 1907, 1910, 1915, 1916, 1917], "terra": [296, 1887], "valid": [297, 515, 672, 673, 678, 679, 690, 691, 1018, 1020, 1133, 1140, 1143, 1144, 1172, 1173, 1273, 1309, 1310, 1358, 1380, 1415, 1619, 1620, 1678, 1679, 1680, 1681, 1682, 1722, 1723, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1887, 1892, 1895, 1904, 1919], "xyh": [300, 925, 931, 933, 1899, 1916], "vector": [300, 451, 453, 955, 956, 957, 958, 959, 960, 1017, 1122, 1132, 1148, 1151, 1153, 1159, 1167, 1294, 1303, 1305, 1306, 1313, 1314, 1315, 1360, 1361, 1401, 1410, 1428, 1429, 1433, 1485, 1486, 1559, 1569, 1600, 1683, 1721, 1830, 1831, 1832, 1833, 1870, 1893, 1897, 1899, 1904, 1910, 1918, 1919, 1920], "x": [300, 319, 396, 423, 424, 426, 447, 451, 452, 454, 455, 525, 526, 541, 589, 594, 597, 604, 641, 642, 723, 726, 729, 732, 734, 737, 741, 745, 746, 748, 751, 754, 757, 761, 762, 763, 764, 766, 771, 772, 773, 776, 778, 779, 780, 809, 812, 813, 815, 818, 819, 821, 824, 831, 835, 851, 854, 858, 861, 862, 864, 867, 871, 874, 927, 928, 954, 955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1000, 1001, 1017, 1025, 1029, 1044, 1047, 1051, 1052, 1055, 1060, 1070, 1072, 1075, 1076, 1077, 1081, 1086, 1088, 1102, 1103, 1122, 1132, 1133, 1135, 1137, 1138, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1159, 1165, 1167, 1168, 1172, 1174, 1175, 1176, 1178, 1180, 1188, 1228, 1237, 1245, 1246, 1247, 1248, 1251, 1259, 1260, 1261, 1273, 1276, 1277, 1278, 1281, 1283, 1286, 1289, 1292, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1327, 1330, 1332, 1337, 1338, 1358, 1384, 1385, 1386, 1387, 1389, 1396, 1399, 1401, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1430, 1432, 1433, 1435, 1451, 1454, 1455, 1457, 1458, 1461, 1463, 1465, 1467, 1468, 1471, 1473, 1474, 1475, 1478, 1480, 1481, 1482, 1485, 1487, 1489, 1490, 1493, 1495, 1497, 1498, 1683, 1721, 1827, 1832, 1833, 1870, 1874, 1892, 1897, 1899, 1900, 1904, 1906, 1907, 1908, 1909, 1910, 1912, 1916, 1917, 1918, 1919, 1920, 1921], "y": [300, 319, 396, 447, 451, 452, 454, 455, 525, 526, 589, 597, 604, 641, 642, 746, 927, 928, 954, 955, 957, 958, 960, 987, 988, 989, 990, 991, 992, 1000, 1001, 1017, 1025, 1047, 1060, 1063, 1081, 1122, 1133, 1135, 1137, 1138, 1140, 1141, 1143, 1145, 1148, 1149, 1152, 1159, 1166, 1167, 1168, 1172, 1174, 1175, 1176, 1178, 1181, 1188, 1229, 1237, 1245, 1246, 1247, 1259, 1260, 1261, 1262, 1265, 1273, 1276, 1278, 1279, 1281, 1283, 1287, 1289, 1292, 1293, 1295, 1303, 1304, 1305, 1310, 1311, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1327, 1330, 1332, 1337, 1338, 1380, 1389, 1391, 1392, 1393, 1394, 1396, 1400, 1403, 1404, 1406, 1407, 1408, 1409, 1410, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1424, 1432, 1433, 1435, 1454, 1455, 1457, 1458, 1461, 1463, 1465, 1467, 1468, 1471, 1473, 1474, 1475, 1478, 1480, 1481, 1482, 1485, 1487, 1489, 1490, 1493, 1495, 1497, 1498, 1683, 1721, 1832, 1833, 1870, 1875, 1899, 1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919], "kilo": [301, 1887], "meant": [302, 1245, 1246, 1247, 1259, 1260, 1261], "call": [302, 327, 329, 339, 353, 354, 386, 387, 617, 1017, 1025, 1032, 1043, 1050, 1060, 1081, 1090, 1096, 1097, 1099, 1100, 1111, 1112, 1115, 1119, 1124, 1132, 1134, 1138, 1142, 1147, 1148, 1159, 1167, 1168, 1171, 1172, 1173, 1179, 1199, 1237, 1273, 1276, 1278, 1281, 1288, 1292, 1293, 1294, 1295, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1321, 1324, 1325, 1331, 1333, 1350, 1358, 1375, 1401, 1402, 1403, 1406, 1407, 1408, 1417, 1418, 1419, 1420, 1421, 1422, 1426, 1550, 1559, 1590, 1591, 1594, 1598, 1599, 1627, 1683, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1787, 1788, 1791, 1888, 1892, 1903, 1905, 1907, 1913, 1914, 1917, 1918, 1921], "top": [302, 563, 776, 1017, 1132, 1133, 1140, 1143, 1144, 1148, 1149, 1159, 1167, 1172, 1245, 1246, 1259, 1260, 1265, 1273, 1277, 1281, 1289, 1294, 1296, 1306, 1310, 1311, 1313, 1322, 1323, 1326, 1330, 1364, 1380, 1392, 1393, 1402, 1413, 1415, 1418, 1421, 1422, 1428, 1429, 1432, 1435, 1882, 1890, 1892, 1900, 1907, 1921], "ha": [308, 309, 315, 345, 370, 371, 405, 458, 468, 478, 497, 505, 533, 579, 615, 638, 676, 682, 688, 694, 1017, 1025, 1041, 1060, 1068, 1081, 1084, 1123, 1138, 1143, 1147, 1148, 1151, 1153, 1169, 1175, 1176, 1179, 1276, 1277, 1278, 1281, 1283, 1288, 1295, 1303, 1304, 1305, 1307, 1314, 1322, 1323, 1361, 1403, 1406, 1408, 1413, 1428, 1429, 1513, 1604, 1775, 1831, 1832, 1883, 1885, 1903, 1904, 1906, 1909, 1912, 1914, 1915, 1916, 1918, 1919], "two": [308, 309, 315, 345, 371, 405, 451, 458, 468, 478, 497, 505, 579, 615, 638, 645, 667, 676, 682, 684, 688, 690, 694, 1017, 1025, 1029, 1034, 1037, 1060, 1072, 1081, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1174, 1175, 1176, 1273, 1276, 1278, 1281, 1283, 1284, 1285, 1294, 1295, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1326, 1328, 1357, 1371, 1401, 1402, 1411, 1413, 1451, 1604, 1683, 1721, 1806, 1828, 1829, 1892, 1896, 1897, 1903, 1909, 1910, 1913, 1914, 1915, 1916, 1919, 1921], "data_var": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "name_str": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "dim_tupl": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "data_ndarrai": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "coord": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1017, 1168, 1282, 1406, 1413, 1428, 1604, 1683, 1721], "dim_name_str": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "dim_arrai": [308, 309, 315, 345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1604], "deriv": [312, 380, 400, 415, 418, 422, 429, 434, 802, 808, 964, 1017, 1450, 1502, 1505, 1523, 1525, 1532, 1543, 1559, 1569, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1897, 1903, 1906], "axialinductionmodel": [317, 318, 512, 515, 528, 776, 777, 789, 790, 796, 797, 802, 803, 821, 822, 835, 850, 864, 865, 871, 872, 1888, 1892, 1903], "axial": [317, 512, 541, 1888, 1892, 1903, 1906], "induct": [317, 318, 512, 514, 515, 517, 528, 776, 777, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 821, 822, 835, 850, 864, 865, 871, 872, 1888, 1892, 1902, 1903, 1907], "ct2a": [317, 318, 512, 514, 515, 517, 1892], "ct": [317, 318, 512, 513, 514, 515, 517, 530, 617, 650, 651, 665, 667, 668, 672, 673, 678, 679, 684, 685, 690, 691, 778, 779, 809, 810, 812, 813, 818, 819, 829, 861, 862, 998, 1000, 1010, 1012, 1850, 1880, 1881, 1892, 1896, 1899, 1903, 1907, 1908, 1914, 1916, 1917, 1918, 1921], "model_book": [319, 525, 526, 527, 528, 529, 530, 531, 532, 533, 1888, 1897], "meta": [319, 1888, 1907, 1918], "usual": [319, 1173, 1281, 1295, 1357, 1409, 1913], "same": [319, 320, 322, 420, 698, 702, 706, 710, 714, 717, 721, 941, 1060, 1112, 1133, 1142, 1148, 1149, 1152, 1154, 1172, 1173, 1276, 1277, 1279, 1281, 1285, 1303, 1304, 1305, 1310, 1314, 1321, 1332, 1357, 1358, 1370, 1403, 1408, 1410, 1411, 1417, 1418, 1419, 1430, 1452, 1453, 1629, 1683, 1721, 1829, 1903, 1906, 1919, 1921], "subset": [319, 320, 322, 329, 361, 455, 462, 464, 470, 490, 492, 499, 528, 533, 1157, 1172, 1888, 1892, 1903, 1911], "loop_dim": [319, 320, 327, 329], "loop": [319, 320, 329, 1451, 1903, 1906, 1916, 1918], "states_i0": [319, 326], "from_point": [319, 322], "datacalcmodel": [327, 328, 329, 349, 383, 1888, 1903], "thei": [327, 395, 409, 410, 423, 433, 787, 793, 799, 805, 814, 820, 825, 832, 863, 868, 876, 1122, 1138, 1148, 1151, 1167, 1172, 1175, 1176, 1199, 1293, 1295, 1303, 1305, 1310, 1314, 1321, 1324, 1325, 1360, 1386, 1393, 1410, 1417, 1418, 1433, 1809, 1892, 1900, 1903, 1908, 1909, 1910, 1911, 1913, 1919], "depend": [327, 397, 534, 541, 576, 577, 590, 601, 673, 679, 684, 685, 690, 691, 761, 764, 771, 772, 776, 779, 809, 813, 815, 819, 821, 824, 858, 862, 864, 867, 871, 874, 1025, 1050, 1051, 1052, 1055, 1060, 1075, 1076, 1077, 1081, 1088, 1090, 1133, 1134, 1194, 1281, 1292, 1293, 1304, 1311, 1314, 1315, 1324, 1325, 1388, 1389, 1395, 1396, 1402, 1407, 1408, 1502, 1521, 1522, 1523, 1525, 1531, 1532, 1542, 1543, 1608, 1609, 1616, 1617, 1618, 1619, 1625, 1626, 1629, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1719, 1837, 1860, 1892, 1899, 1900, 1903, 1905, 1909, 1912, 1913, 1919, 1921, 1922], "individu": [327, 409, 416, 684, 690, 789, 796, 802, 808, 1148, 1149, 1151, 1161, 1277, 1281, 1295, 1304, 1407, 1413, 1502, 1506, 1507, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1560, 1564, 1565, 1594, 1608, 1610, 1611, 1617, 1619, 1621, 1622, 1625, 1627, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1669, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1888, 1890, 1892, 1907, 1910, 1913, 1916], "out_core_var": 329, "initial_result": 329, "sel": [329, 455, 1627, 1629], "isel": [329, 455], "typic": [329, 353, 386, 403, 1146, 1150, 1163, 1164, 1281, 1314, 1341, 1402, 1409, 1569], "fc": [329, 368, 1017, 1132, 1135, 1141, 1145, 1148, 1149, 1152, 1159, 1167, 1175, 1176, 1276, 1283, 1294, 1303, 1305, 1306, 1313, 1314, 1326, 1401, 1619, 1620, 1906, 1907, 1909, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "extendedst": [330, 331, 332, 333, 334, 335, 336, 337, 338, 1888, 1903], "extend": [330, 515, 1017, 1032, 1119, 1151, 1153, 1175, 1176, 1303, 1305, 1408, 1417, 1418, 1424, 1428, 1429, 1885, 1886, 1888, 1892, 1901, 1904], "pmodel": 330, "append": [330, 332, 354, 356, 387, 389, 1916], "analys": [339, 1888], "handl": [339, 1017, 1081, 1134, 1183, 1186, 1194, 1212, 1305, 1327, 1330, 1340, 1888, 1903], "turbine_typ": [339, 528, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 998, 1000, 1906, 1907, 1908, 1911, 1915, 1917, 1919], "turbinetyp": [339, 416, 417, 418, 528, 669, 672, 673, 678, 679, 684, 685, 690, 691, 1888, 1892], "turbine_model_nam": 339, "found": [339, 367, 532, 755, 829, 1008, 1304, 1403, 1891, 1893, 1901, 1911, 1917, 1919], "turbine_model_sel": 339, "n_model": 339, "pre_rotor_model": 339, "farmdatamodellist": [339, 354, 355, 356, 357, 358, 359, 360, 1888], "post_rotor_model": 339, "par": [339, 340, 518, 835, 843, 856, 980, 981, 1001], "respecitv": 339, "set_par": [339, 347, 518], "model_nam": [339, 347, 518], "init_par": [339, 347, 518], "final_par": [339, 347, 518], "collect_model": [339, 342, 518], "analyz": [339, 342, 518, 1453], "gather": [339, 342, 518], "st_sel": [339, 341, 413, 414, 416, 518, 608, 609, 610, 612, 614, 617, 619, 623, 625, 629, 631, 634, 637, 641, 643, 645, 647, 650, 652, 654, 655, 657, 658, 660, 663, 665, 667, 669, 670, 672, 674, 678, 680, 684, 686, 690, 692], "respect": [340, 451, 601, 602, 1142, 1279, 1295, 1305, 1311, 1315, 1384, 1386, 1388, 1391, 1393, 1395, 1410, 1411, 1415, 1430, 1683, 1721, 1903, 1908, 1919, 1920, 1921], "post": [341, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1175, 1176, 1273, 1294, 1306, 1310, 1311, 1313, 1402, 1408, 1904, 1907, 1913, 1916, 1918], "Such": [345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1175, 1176, 1604, 1908], "reason": [345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 1034, 1133, 1293, 1305, 1311, 1314, 1324, 1325, 1343, 1604], "here": [345, 371, 405, 458, 468, 478, 497, 505, 579, 615, 638, 676, 682, 688, 694, 754, 755, 809, 810, 821, 822, 828, 829, 858, 859, 1149, 1293, 1295, 1310, 1314, 1324, 1325, 1388, 1395, 1408, 1604, 1890, 1891, 1893, 1903, 1904, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1917, 1919, 1920, 1921], "automat": [345, 371, 393, 394, 395, 405, 458, 468, 478, 497, 505, 579, 595, 602, 615, 638, 676, 682, 688, 694, 927, 948, 987, 988, 989, 990, 991, 992, 1081, 1100, 1134, 1138, 1142, 1147, 1151, 1153, 1277, 1283, 1284, 1292, 1293, 1324, 1325, 1380, 1417, 1418, 1419, 1428, 1429, 1604, 1683, 1721, 1903, 1919], "befor": [349, 350, 432, 447, 635, 768, 786, 792, 987, 988, 989, 990, 991, 992, 1081, 1082, 1097, 1111, 1134, 1159, 1167, 1172, 1276, 1278, 1281, 1294, 1295, 1303, 1304, 1305, 1311, 1313, 1321, 1386, 1387, 1389, 1394, 1396, 1401, 1415, 1417, 1418, 1590, 1591, 1598, 1599, 1619, 1620, 1629, 1787, 1788, 1906, 1907, 1910, 1916], "By": [354, 387, 1133, 1172, 1175, 1176, 1276, 1278, 1281, 1303, 1304, 1305, 1309, 1310, 1321, 1388, 1395, 1413, 1417, 1418, 1569, 1907, 1921], "togeth": [354, 387, 1025, 1029, 1037, 1060, 1081, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418, 1921], "common": [354, 387, 754, 828, 835, 851, 1036, 1054, 1281, 1332, 1408, 1683, 1721, 1900], "insert": [354, 358, 409, 412, 1056, 1078, 1831, 1832], "farmmodel": [361, 519, 528, 1888, 1892], "oper": [361, 436, 881, 885, 889, 893, 897, 902, 907, 912, 917, 934, 950, 951, 952, 1017, 1137, 1168, 1171, 1292, 1362, 1376, 1389, 1396, 1406, 1888, 1914], "contrast": [361, 1371, 1451, 1888], "turbinemodel": [361, 411, 412, 413, 414, 415, 416, 519, 520, 528, 608, 609, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 1888, 1892], "allow": [361, 508, 510, 1132, 1133, 1159, 1167, 1294, 1303, 1305, 1306, 1313, 1358, 1401, 1410, 1888, 1903, 1910, 1918], "applic": [361, 1409, 1506, 1507, 1510, 1511, 1527, 1528, 1535, 1536, 1550, 1557, 1558, 1563, 1567, 1568, 1594, 1610, 1611, 1612, 1621, 1622, 1627, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1674, 1675, 1680, 1681, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712, 1724, 1725, 1734, 1735, 1744, 1745, 1754, 1755, 1766, 1767, 1775, 1777, 1791, 1798, 1888, 1903, 1904, 1910, 1916], "abc": [362, 1017, 1018, 1022, 1888], "error": [367, 368, 443, 454, 815, 1002, 1008, 1149, 1172, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1386, 1393, 1417, 1418, 1919], "upcast": 368, "accept_non": 368, "accept_nan": 368, "combin": [368, 879, 880, 883, 884, 887, 888, 891, 892, 1310, 1321, 1903, 1906, 1907, 1916, 1921], "m": [368, 455, 462, 684, 690, 741, 742, 954, 955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1281, 1283, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1328, 1387, 1393, 1394, 1402, 1403, 1411, 1413, 1416, 1525, 1526, 1683, 1721, 1838, 1839, 1840, 1845, 1851, 1853, 1858, 1863, 1864, 1865, 1873, 1874, 1879, 1899, 1905, 1906, 1907, 1908, 1909, 1912, 1917, 1918, 1919, 1920], "f": [368, 608, 609, 961, 962, 1017, 1060, 1074, 1132, 1159, 1167, 1294, 1306, 1313, 1362, 1376, 1401, 1451, 1683, 1721, 1906, 1907, 1912, 1914, 1916, 1918, 1919, 1920, 1921], "p": [368, 617, 672, 673, 679, 685, 691, 966, 1000, 1010, 1012, 1017, 1130, 1281, 1304, 1310, 1453, 1683, 1721, 1849, 1852, 1860, 1880, 1881, 1899, 1903, 1904, 1907, 1908, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "data_prio": 368, "search": [368, 454, 455, 462, 464, 528, 533, 661, 754, 755, 809, 810, 821, 822, 828, 829, 858, 859, 1450, 1897, 1903, 1911, 1912, 1917, 1919], "throw": 368, "been": [370, 1017, 1025, 1037, 1060, 1081, 1123, 1138, 1148, 1274, 1277, 1281, 1288, 1314, 1320, 1513, 1883, 1885, 1903, 1904, 1916], "quantiti": [375, 393, 1148, 1314, 1913], "new_wake_delta": [375, 377, 378, 381, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 575], "zero": [375, 381, 534, 539, 541, 547, 549, 552, 558, 560, 563, 568, 570, 575, 661, 762, 763, 766, 772, 773, 778, 780, 812, 818, 824, 831, 861, 867, 874, 976, 978, 1017, 1137, 1138, 1159, 1167, 1296, 1313, 1375, 1401, 1402, 1403, 1453, 1683, 1721, 1810, 1815, 1827, 1855, 1897, 1899, 1906, 1907, 1917], "evaluate_result": [375, 378, 534, 537, 541, 545, 549, 550, 552, 556, 560, 563, 566, 570, 573], "pwake_typ": [375, 380, 534, 541, 549, 552, 560, 563, 570], "wake_delta": [377, 378, 381, 430, 431, 432, 433, 436, 437, 534, 536, 537, 539, 541, 544, 545, 547, 549, 550, 552, 555, 556, 558, 560, 562, 563, 565, 566, 568, 570, 572, 573, 575, 761, 764, 767, 768, 771, 774, 776, 783, 785, 786, 787, 789, 791, 792, 793, 796, 798, 799, 802, 804, 805, 808, 809, 814, 815, 820, 821, 825, 828, 832, 858, 863, 864, 868, 871, 876, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 902, 903, 907, 908, 912, 913, 917, 918], "states_turbin": [378, 395, 397, 537, 545, 550, 556, 566, 573, 590], "amb_r": [378, 537, 545, 550, 556, 566, 573], "place": [378, 537, 545, 550, 556, 566, 573, 955, 956, 957, 958, 959, 960, 1133, 1147, 1175, 1176, 1245, 1246, 1247, 1259, 1260, 1261, 1281, 1290, 1295, 1296, 1309, 1402, 1407, 1408, 1409, 1411, 1413, 1417, 1418, 1629, 1775, 1791, 1894, 1909, 1910, 1914], "calc_var": [393, 394, 588, 594, 595, 601, 602, 623, 624], "Their": [393, 394, 595, 602, 1149, 1281], "ad": [393, 394, 433, 435, 436, 595, 602, 613, 787, 793, 799, 805, 814, 820, 825, 832, 863, 868, 876, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917, 934, 953, 1017, 1122, 1133, 1138, 1173, 1274, 1295, 1310, 1318, 1341, 1356, 1358, 1387, 1394, 1409, 1418, 1433, 1569, 1629, 1891, 1903, 1905, 1907, 1910, 1911, 1915, 1916, 1917, 1919, 1920, 1921], "n_rotor_point": [393, 399, 588, 592, 594, 599, 601, 606], "rotor_point_weight": [393, 402, 588, 593, 594, 600, 601, 607], "design_point": [393, 396, 588, 589, 594, 597, 601, 604], "design": [393, 396, 398, 588, 589, 591, 594, 597, 601, 604, 978, 1081, 1159, 1167, 1304, 1313, 1390, 1397, 1401], "get_rotor_point": [393, 398, 588, 591, 594, 601], "eval_rpoint_result": [393, 397, 588, 590, 594, 601], "rpoint_result": [393, 397, 588, 590, 594, 601], "rmodel_typ": [393, 400, 588, 594, 601], "store_rpoint": 395, "store_rweight": 395, "store_amb_r": 395, "n_rpoint": [395, 397, 398, 399, 402, 590, 591, 592, 593, 599, 600, 606, 607], "reult": 395, "come": [395, 1148, 1284, 1410, 1908, 1915, 1919], "formul": [396, 589, 597, 604, 1915], "plane": [396, 589, 597, 604, 783, 954, 955, 956, 957, 958, 959, 960, 985, 987, 988, 989, 990, 991, 992, 1001, 1314, 1485, 1897, 1900, 1903, 1906, 1916], "z": [396, 589, 597, 604, 712, 713, 746, 956, 957, 959, 960, 987, 988, 989, 990, 991, 992, 1017, 1137, 1199, 1292, 1296, 1360, 1389, 1396, 1402, 1417, 1418, 1907], "coordin": [396, 423, 424, 426, 427, 431, 452, 454, 455, 589, 597, 604, 723, 726, 727, 729, 732, 733, 734, 737, 738, 741, 745, 747, 748, 751, 752, 754, 757, 758, 767, 785, 791, 798, 804, 925, 926, 987, 988, 989, 990, 991, 992, 1017, 1025, 1031, 1081, 1082, 1118, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1162, 1168, 1172, 1175, 1176, 1178, 1237, 1245, 1246, 1247, 1251, 1257, 1259, 1260, 1261, 1265, 1271, 1276, 1281, 1283, 1285, 1303, 1304, 1305, 1309, 1310, 1311, 1314, 1315, 1330, 1332, 1357, 1386, 1393, 1406, 1410, 1413, 1428, 1608, 1683, 1721, 1726, 1736, 1746, 1756, 1806, 1808, 1870, 1874, 1875, 1899, 1907, 1908, 1909, 1910, 1913, 1916, 1917, 1918], "radiu": [396, 589, 597, 604, 776, 779, 809, 813, 815, 819, 858, 862, 1017, 1060, 1063, 1081, 1090, 1148, 1161, 1223, 1281, 1309, 1362, 1363, 1471, 1472, 1502, 1503, 1806, 1828, 1829], "n_rotor_axi": [396, 589, 597, 604], "n_rotor_sid": [396, 589, 597, 604], "n_rotor_up": [396, 589, 597, 604], "dpoint": [396, 589, 597, 604], "copy_to_ambi": [397, 590], "either": [397, 462, 464, 490, 492, 576, 577, 590, 645, 646, 980, 981, 1001, 1002, 1134, 1137, 1143, 1148, 1149, 1152, 1153, 1188, 1201, 1277, 1281, 1303, 1315, 1321, 1327, 1330, 1417, 1418, 1419, 1420, 1424, 1428, 1429, 1525, 1526, 1629, 1897, 1899, 1915, 1918], "In": [397, 590, 1018, 1034, 1052, 1055, 1056, 1076, 1077, 1078, 1088, 1112, 1133, 1134, 1138, 1148, 1151, 1172, 1276, 1277, 1278, 1281, 1296, 1303, 1304, 1305, 1310, 1314, 1321, 1371, 1389, 1390, 1396, 1397, 1402, 1417, 1418, 1419, 1451, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "latter": [397, 541, 590, 1305, 1808, 1903, 1910, 1914, 1915, 1919, 1921], "case": [397, 454, 511, 590, 948, 976, 978, 995, 1000, 1008, 1035, 1037, 1056, 1078, 1097, 1112, 1133, 1134, 1138, 1142, 1146, 1148, 1150, 1151, 1163, 1164, 1172, 1179, 1199, 1251, 1265, 1276, 1277, 1278, 1281, 1303, 1304, 1305, 1310, 1314, 1315, 1321, 1327, 1332, 1343, 1386, 1389, 1390, 1393, 1396, 1397, 1402, 1403, 1408, 1409, 1417, 1418, 1419, 1501, 1891, 1903, 1907, 1910, 1914, 1915, 1916, 1917, 1918, 1919, 1921], "expect": [397, 445, 446, 590, 630, 645, 1151, 1276, 1277, 1281, 1409, 1909, 1912], "els": [397, 590, 976, 978, 1180, 1181], "If": [397, 532, 590, 661, 754, 755, 809, 810, 821, 822, 828, 829, 858, 859, 972, 973, 976, 978, 1018, 1020, 1022, 1025, 1031, 1034, 1049, 1060, 1081, 1082, 1096, 1115, 1122, 1123, 1132, 1133, 1134, 1135, 1137, 1138, 1142, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1163, 1164, 1165, 1166, 1167, 1172, 1173, 1174, 1175, 1176, 1219, 1237, 1273, 1276, 1277, 1278, 1279, 1281, 1285, 1293, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1327, 1330, 1331, 1332, 1343, 1356, 1358, 1360, 1361, 1370, 1371, 1380, 1384, 1385, 1387, 1389, 1390, 1391, 1392, 1394, 1396, 1397, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1416, 1417, 1418, 1419, 1420, 1424, 1428, 1429, 1430, 1433, 1451, 1595, 1683, 1719, 1721, 1808, 1914, 1919], "describ": [403, 1133, 1151, 1175, 1176, 1218, 1295, 1310, 1370, 1891, 1905, 1908, 1909, 1917], "meteorolog": [403, 1913], "speed": [403, 462, 475, 476, 482, 483, 617, 618, 650, 651, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 696, 700, 704, 708, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 1000, 1146, 1148, 1150, 1163, 1164, 1298, 1304, 1305, 1331, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1831, 1832, 1838, 1839, 1840, 1845, 1863, 1864, 1865, 1873, 1891, 1892, 1898, 1899, 1906, 1907, 1908, 1909, 1910, 1912, 1913, 1915, 1917, 1919, 1920, 1921], "turbul": [403, 690, 809, 864, 865, 1843, 1869, 1892, 1899, 1900, 1903, 1909, 1912, 1913, 1919, 1920, 1921], "intens": [403, 690, 1843, 1869, 1892, 1899, 1900, 1903, 1909, 1913, 1919, 1920, 1921], "air": [403, 475, 476, 482, 483, 666, 668, 672, 673, 678, 679, 684, 690, 691, 1000, 1841, 1866, 1892, 1899, 1903, 1909, 1912], "densiti": [403, 475, 476, 482, 483, 666, 668, 684, 1000, 1017, 1151, 1159, 1167, 1276, 1277, 1278, 1294, 1313, 1401, 1410, 1428, 1429, 1656, 1657, 1684, 1841, 1866, 1892, 1895, 1899, 1903, 1909, 1912], "mere": 409, "defin": [409, 723, 1017, 1100, 1133, 1134, 1143, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1174, 1175, 1176, 1211, 1273, 1276, 1277, 1278, 1281, 1303, 1304, 1305, 1310, 1313, 1314, 1320, 1321, 1330, 1332, 1340, 1356, 1358, 1371, 1401, 1407, 1408, 1411, 1417, 1418, 1419, 1420, 1429, 1433, 1683, 1721, 1722, 1732, 1892, 1895, 1899, 1903, 1906, 1910, 1913, 1914, 1915, 1918, 1921], "basic": [409, 445, 446, 518, 541, 641, 1310, 1889, 1890, 1892, 1910, 1912, 1916], "xy": [409, 410, 954, 955, 958, 985, 987, 990, 1017, 1025, 1055, 1133, 1135, 1141, 1145, 1149, 1159, 1167, 1283, 1310, 1314, 1424, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1806, 1897, 1903, 1907, 1909, 1916, 1921], "ground": [409, 410, 774, 783, 1853, 1899, 1900, 1903, 1907], "appear": [409, 410, 815, 1017, 1151, 1310, 1380, 1385, 1389, 1392, 1396, 1415, 1910, 1912, 1914, 1919, 1921], "mstates_sel": 409, "boolean": [409, 410, 608, 609, 1017, 1209, 1290, 1356, 1410, 1560, 1561, 1576, 1669, 1670, 1683, 1721, 1726, 1736, 1746, 1756], "diamet": [409, 410, 416, 417, 447, 601, 602, 641, 642, 809, 925, 926, 927, 1314, 1642, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1851, 1892, 1899, 1903, 1906, 1910, 1913], "h": [409, 410, 416, 417, 445, 446, 455, 509, 669, 928, 1212, 1278, 1310, 1853, 1899, 1906, 1907, 1908, 1909, 1912, 1916, 1917, 1918], "hub": [409, 410, 416, 417, 447, 1892, 1903, 1912, 1913, 1916, 1917], "turbine_model": [409, 410, 447, 519, 520, 528, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "add_model": [409, 411], "insert_model": [409, 412], "models_state_sel": 410, "tmodel_typ": [413, 415, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660], "overwritten": 416, "p_nomin": [416, 417, 669, 948, 1835, 1849, 1899, 1903], "nomin": [416, 417, 936, 1148, 1914], "ttype_typ": [416, 418, 665, 667, 669, 672, 678, 684, 690], "verticalprofil": [419, 420, 421, 422, 482, 483, 490, 492, 696, 697, 700, 701, 704, 705, 708, 709, 712, 716, 719, 1888, 1892], "vertic": [419, 601, 602, 954, 956, 957, 985, 1017, 1122, 1141, 1143, 1144, 1145, 1149, 1151, 1152, 1153, 1172, 1173, 1176, 1245, 1246, 1259, 1260, 1276, 1277, 1279, 1281, 1290, 1303, 1310, 1371, 1380, 1404, 1407, 1411, 1413, 1428, 1429, 1430, 1433, 1888, 1892, 1896, 1903, 1912, 1921], "profil": [419, 420, 421, 422, 482, 483, 492, 696, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 864, 1438, 1442, 1443, 1447, 1888, 1892, 1898, 1903, 1906, 1907, 1908, 1912], "input_var": [419, 421, 612, 613, 696, 699, 700, 703, 704, 707, 708, 711, 712, 715, 716, 718, 719, 722, 899, 904, 909, 914, 919], "profile_typ": [419, 422, 696, 700, 704, 708, 712, 716, 719], "translat": [423, 1594, 1596, 1597, 1627, 1637, 1638, 1766, 1772, 1773, 1775, 1785, 1786, 1791, 1803, 1804, 1913, 1921], "global": [423, 1453, 1908], "respons": [423, 1892, 1913, 1915], "calc_ord": [423, 425, 723, 725, 729, 731, 734, 736, 741, 744, 748, 750, 754, 756], "get_wake_coo": [423, 427, 723, 727, 729, 733, 734, 738, 741, 747, 748, 752, 754, 758], "get_wake_modelling_data": [423, 428, 723, 729, 734, 739, 741, 748, 754], "get_centreline_point": [423, 426, 723, 726, 729, 732, 734, 737, 741, 745, 748, 751, 754, 757], "along": [423, 424, 426, 594, 595, 601, 602, 723, 726, 729, 732, 734, 737, 741, 745, 748, 751, 754, 757, 1017, 1081, 1135, 1154, 1230, 1276, 1278, 1281, 1303, 1305, 1309, 1370, 1401, 1404, 1410, 1431, 1434, 1892, 1903, 1906, 1907, 1913, 1917, 1921], "centrelin": [423, 424, 426, 723, 726, 729, 732, 734, 737, 741, 745, 748, 751, 754, 757, 871, 872, 1903, 1906, 1913], "calc_centreline_integr": [423, 424, 723, 729, 734, 741, 748, 754], "wframe_typ": [423, 429, 723, 729, 734, 741, 748, 754], "dx": [424, 871, 872, 1017, 1135, 1911], "self_wak": [424, 871, 872], "ipar": [424, 464, 646, 871, 872], "upper": [424, 601, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 1017, 1133, 1141, 1145, 1149, 1151, 1153, 1172, 1248, 1262, 1277, 1281, 1284, 1290, 1296, 1315, 1384, 1391, 1402, 1409, 1413, 1417, 1418, 1671, 1892, 1918], "bound": [424, 454, 1017, 1025, 1054, 1060, 1063, 1081, 1133, 1149, 1201, 1237, 1243, 1248, 1262, 1276, 1281, 1283, 1285, 1292, 1384, 1385, 1391, 1392, 1404, 1411, 1424, 1502, 1523, 1525, 1532, 1641, 1646, 1651, 1656, 1662, 1667, 1671, 1672, 1678, 1903], "consid": [424, 871, 872, 1151, 1278, 1559, 1569, 1903, 1919], "interpol": [424, 454, 455, 464, 612, 613, 646, 665, 667, 672, 678, 684, 685, 690, 691, 712, 713, 734, 735, 741, 742, 748, 749, 1017, 1175, 1176, 1281, 1296, 1305, 1371, 1892, 1903], "n_var": [424, 1569], "wake_coo": [427, 431, 727, 733, 738, 747, 752, 758, 767, 785, 791, 798, 804], "creation": [428, 530, 739, 974, 996, 1882, 1891, 1896, 1903, 1916, 1920], "init_wake_delta": [430, 433, 761, 764, 771, 774, 776, 783, 787, 789, 793, 796, 799, 802, 805, 808, 809, 814, 815, 820, 821, 825, 828, 832, 858, 863, 864, 868, 871, 876], "storag": [430, 433, 761, 764, 771, 774, 776, 783, 787, 789, 793, 796, 799, 802, 805, 808, 809, 814, 815, 820, 821, 825, 828, 832, 858, 863, 864, 868, 871, 876, 1906], "finalize_wake_delta": [430, 432, 761, 764, 768, 771, 774, 776, 783, 786, 789, 792, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871], "amb_result": [430, 432, 436, 761, 764, 768, 771, 774, 776, 783, 786, 789, 792, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871, 881, 885, 889, 893, 897, 902, 907, 912, 917], "wmodel_typ": [430, 434, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 858, 864, 871], "afterward": [432, 768, 786, 792], "wakesuperposit": [435, 436, 437, 528, 764, 879, 883, 887, 891, 895, 900, 905, 910, 915, 1888, 1892], "superposit": [435, 528, 761, 764, 765, 771, 776, 777, 789, 796, 802, 808, 809, 810, 815, 816, 821, 822, 828, 829, 858, 859, 864, 865, 871, 872, 879, 883, 887, 891, 1888, 1892, 1903, 1911, 1913, 1920], "note": [435, 966, 1034, 1133, 1172, 1175, 1176, 1304, 1318, 1375, 1376, 1411, 1775, 1892, 1905, 1908, 1909, 1910, 1912, 1915, 1917, 1920, 1921], "matter": [435, 1914], "other": [435, 475, 993, 1017, 1025, 1029, 1034, 1035, 1050, 1060, 1062, 1081, 1090, 1118, 1157, 1173, 1243, 1283, 1284, 1285, 1309, 1390, 1397, 1399, 1400, 1403, 1407, 1419, 1420, 1425, 1453, 1550, 1590, 1591, 1594, 1598, 1599, 1627, 1766, 1775, 1787, 1788, 1791, 1891, 1896, 1903, 1905, 1909, 1911, 1913, 1914, 1915, 1921], "calc_wakes_plus_wak": [435, 437, 879, 882, 883, 886, 887, 890, 891, 894, 895, 898, 900, 903, 905, 908, 910, 913, 915, 918], "calc_final_wake_delta": [435, 436, 879, 881, 883, 885, 887, 889, 891, 893, 895, 897, 900, 902, 905, 907, 910, 912, 915, 917], "final_wake_delta": [436, 881, 885, 889, 893, 897, 902, 907, 912, 917], "simpl": [436, 802, 808, 881, 885, 889, 893, 897, 902, 907, 912, 917, 1133, 1137, 1314, 1403, 1409, 1903, 1909, 1914, 1917, 1921], "plu": [436, 881, 885, 889, 893, 897, 902, 907, 912, 917, 1277, 1310, 1358, 1808, 1826, 1916], "sel_sp": [437, 882, 886, 890, 894, 898, 903, 908, 913, 918], "wake_model_result": [437, 882, 886, 890, 894, 898, 903, 908, 913, 918], "n_sel_sp": [437, 882, 886, 890, 894, 898, 903, 908, 913, 918], "boundari": [438, 439, 927, 1303, 1304, 1305, 1321, 1411, 1417, 1418, 1454, 1455, 1459, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1483, 1485, 1487, 1491, 1493, 1495, 1499, 1502, 1503, 1523, 1524, 1641, 1642, 1643, 1644, 1645, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1893, 1895, 1907, 1908, 1910], "geom2d": [438, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1826, 1910], "areageometri": [438, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1471, 1478, 1485, 1493, 1494, 1502, 1503, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1826, 1897], "wind_farm": [438, 439], "add_turbin": [438, 440, 447, 452, 1907, 1921], "turbine_nam": [438, 442, 970, 972, 973], "staticdata": [443, 444, 1889, 1908], "static": [443, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 1002, 1004, 1005, 1017, 1102, 1104, 1182, 1461, 1462, 1882, 1889, 1897, 1903, 1904, 1907, 1909, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1920], "directori": [443, 961, 962, 1889], "add_data_packag": [443, 1002, 1004], "context": [443, 1002, 1004, 1005, 1006, 1007, 1008, 1009, 1017, 1161, 1199, 1214, 1299, 1352, 1907, 1910, 1916, 1918], "packag": [443, 1002, 1004, 1005, 1151, 1453, 1501, 1882, 1890, 1891, 1892, 1893, 1897, 1900, 1903, 1904, 1905, 1908, 1910, 1911, 1913, 1917, 1921], "file_sfx": [443, 1002, 1004], "file": [443, 445, 446, 447, 448, 449, 450, 454, 455, 462, 464, 490, 492, 503, 504, 510, 511, 530, 576, 577, 613, 629, 630, 645, 646, 665, 666, 667, 668, 672, 673, 678, 679, 684, 685, 690, 691, 815, 925, 930, 931, 932, 933, 934, 954, 961, 962, 963, 966, 967, 969, 970, 972, 973, 974, 979, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1002, 1004, 1005, 1006, 1007, 1008, 1010, 1015, 1016, 1305, 1807, 1808, 1809, 1825, 1834, 1889, 1890, 1891, 1892, 1896, 1897, 1903, 1904, 1905, 1909, 1910, 1912, 1915, 1917, 1918, 1919, 1920], "locat": [443, 588, 949, 1002, 1004, 1005, 1017, 1025, 1053, 1060, 1081, 1090, 1092, 1097, 1099, 1100, 1101, 1102, 1103, 1111, 1112, 1113, 1117, 1138, 1148, 1151, 1153, 1172, 1186, 1234, 1245, 1246, 1247, 1257, 1259, 1260, 1261, 1271, 1277, 1281, 1290, 1292, 1293, 1311, 1314, 1315, 1322, 1323, 1324, 1325, 1330, 1336, 1374, 1375, 1380, 1389, 1390, 1396, 1397, 1407, 1413, 1417, 1418, 1831, 1832, 1905, 1908, 1915, 1921], "add_data_package_fil": [443, 1002, 1005], "file_nam": [443, 445, 925, 934, 954, 961, 966, 967, 970, 974, 979, 985, 993, 996, 998, 1002, 1005, 1008, 1889, 1890], "add_fil": [443, 1002, 1006, 1007], "file_path": [443, 449, 450, 510, 925, 930, 931, 932, 933, 970, 972, 973, 1002, 1006, 1007, 1010, 1015, 1016, 1891], "path": [443, 445, 446, 449, 450, 462, 464, 490, 492, 510, 511, 530, 629, 630, 645, 646, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 925, 934, 954, 961, 963, 967, 969, 970, 972, 973, 974, 979, 985, 993, 996, 998, 1002, 1006, 1007, 1008, 1015, 1016, 1017, 1025, 1056, 1057, 1058, 1060, 1078, 1079, 1080, 1081, 1089, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1198, 1240, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1343, 1355, 1371, 1402, 1404, 1411, 1413, 1478, 1807, 1808, 1809, 1825, 1834, 1897, 1904, 1907, 1916, 1918, 1919], "get_file_path": [443, 1002, 1008, 1908], "check_raw": [443, 1002, 1008], "toc": [443, 1002, 1009, 1908], "content": [443, 528, 533, 1002, 1009, 1919], "data_book": [444, 1002, 1003], "parse_pct_file_nam": [445, 1889, 1890], "pars": [445, 446, 454, 455, 1310, 1550, 1585, 1594, 1627, 1766, 1775, 1791, 1889, 1890], "format": [445, 446, 454, 455, 462, 929, 966, 987, 988, 989, 990, 991, 992, 1010, 1016, 1017, 1102, 1103, 1147, 1163, 1164, 1172, 1178, 1179, 1180, 1181, 1290, 1296, 1309, 1310, 1311, 1321, 1362, 1376, 1390, 1397, 1407, 1408, 1416, 1453, 1891, 1908, 1909], "csv": [445, 446, 447, 448, 462, 925, 930, 970, 972, 973, 1010, 1011, 1013, 1014, 1825, 1891, 1897, 1903, 1907, 1910, 1912, 1915, 1916, 1917, 1918, 1919, 1920], "pathlib": [445, 446, 961, 963, 1002, 1008, 1413, 1908], "parsed_data": [445, 446], "parse_pct_two_fil": [446, 1889, 1890], "file_name_a": [446, 1889, 1890], "file_name_b": [446, 1889, 1890], "second": [446, 1017, 1149, 1172, 1175, 1176, 1277, 1278, 1285, 1310, 1322, 1323, 1839, 1864, 1899], "farm_layout": [447, 448, 449, 450, 451, 452, 453, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "add_from_csv": [447, 448, 1891], "data_sourc": [447, 448, 454, 455, 462, 464, 473, 490, 492, 503, 504, 506, 576, 577, 612, 613, 629, 630, 645, 646, 665, 666, 672, 673, 712, 713, 1891, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1918, 1919, 1920, 1921], "col_index": 447, "col_nam": 447, "col_x": 447, "col_i": 447, "col_h": 447, "col_d": 447, "col_id": 447, "cols_models_pr": 447, "cols_models_post": 447, "turbine_base_nam": 447, "turbine_id": 447, "turbine_base_name_count_shift": 447, "turbine_paramet": [447, 450, 451, 452, 453], "panda": [447, 448, 462, 464, 470, 490, 492, 499, 508, 509, 510, 576, 577, 612, 613, 629, 630, 645, 646, 665, 666, 667, 668, 672, 673, 678, 679, 684, 685, 690, 691, 713, 925, 934, 941, 943, 945, 946, 947, 948, 951, 952, 954, 961, 966, 967, 970, 971, 974, 976, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1010, 1015, 1016, 1310, 1453, 1891, 1892, 1897, 1903, 1906, 1914, 1915, 1917, 1919, 1921], "datafram": [447, 448, 462, 464, 490, 492, 508, 509, 510, 576, 577, 612, 613, 629, 630, 645, 646, 665, 666, 667, 668, 672, 673, 678, 679, 684, 685, 690, 691, 713, 941, 943, 945, 946, 947, 948, 951, 952, 966, 970, 971, 974, 976, 978, 979, 987, 988, 989, 990, 991, 992, 996, 1015, 1016, 1310, 1891, 1892, 1903, 1914, 1915, 1917, 1919, 1921], "column": [447, 462, 464, 490, 492, 508, 510, 576, 577, 612, 613, 630, 645, 646, 666, 668, 672, 673, 678, 679, 684, 690, 713, 966, 972, 973, 1010, 1016, 1148, 1151, 1153, 1277, 1281, 1289, 1296, 1303, 1304, 1305, 1310, 1314, 1401, 1410, 1411, 1428, 1429, 1451, 1683, 1721, 1808, 1908, 1912, 1914, 1915, 1918, 1919], "enter": [447, 1276], "forward": [447, 449, 450, 451, 452, 453, 522, 927, 932, 966, 987, 988, 989, 990, 991, 992, 1015, 1016, 1137, 1277, 1293, 1310, 1314, 1324, 1325, 1410, 1420], "add_from_df": [448, 1891, 1903], "add_from_fil": [449, 1891, 1908, 1919], "infer": [449, 450, 1419, 1917], "suffix": [449, 454, 455], "add_from_json": [450, 1891], "set_farm_nam": 450, "turbim": [450, 1891], "json": [450, 929, 1891], "add_grid": [451, 1891, 1907, 1909, 1916, 1918, 1920], "xy_bas": [451, 453, 1891, 1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1920], "step_vector": [451, 1891, 1907, 1909, 1916, 1918, 1920], "regular": [451, 454, 594, 601, 1017, 1276, 1281, 1296, 1303, 1304, 1305, 1331, 1413, 1742, 1752, 1775, 1791, 1827, 1891, 1892, 1894, 1895, 1897, 1903, 1907, 1916, 1918, 1920], "grid": [451, 454, 515, 552, 560, 594, 987, 988, 989, 990, 991, 992, 1001, 1017, 1143, 1148, 1247, 1249, 1261, 1263, 1273, 1303, 1304, 1305, 1314, 1337, 1338, 1371, 1410, 1417, 1418, 1419, 1420, 1657, 1685, 1691, 1732, 1733, 1742, 1752, 1753, 1775, 1776, 1791, 1891, 1892, 1894, 1895, 1903, 1907, 1909, 1920], "add_random": [452, 1891, 1903], "min_dist": [452, 1525, 1526, 1672, 1673, 1684, 1685, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1775, 1776, 1806, 1891, 1897, 1910], "seed": [452, 509, 1370, 1806, 1910], "lie": [452, 1891], "randomli": [452, 1891, 1908], "within": [452, 630, 1002, 1017, 1132, 1134, 1161, 1219, 1276, 1294, 1295, 1306, 1321, 1329, 1330, 1356, 1411, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1806, 1828, 1891, 1893, 1895, 1897, 1903, 1905, 1906, 1910, 1913, 1916], "squar": [452, 1135, 1142, 1172, 1179, 1281, 1309, 1310, 1332, 1402, 1403, 1683, 1721, 1806, 1891, 1897], "minim": [452, 955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1000, 1001, 1403, 1454, 1458, 1461, 1463, 1468, 1471, 1475, 1478, 1482, 1485, 1490, 1493, 1498, 1525, 1526, 1550, 1577, 1578, 1579, 1594, 1608, 1609, 1618, 1625, 1626, 1627, 1635, 1636, 1656, 1657, 1662, 1672, 1673, 1685, 1715, 1722, 1723, 1730, 1732, 1733, 1740, 1742, 1743, 1750, 1752, 1753, 1762, 1763, 1766, 1771, 1775, 1776, 1783, 1784, 1791, 1797, 1802, 1806, 1893, 1895, 1903, 1910], "distanc": [452, 552, 809, 810, 1132, 1147, 1148, 1151, 1153, 1159, 1167, 1294, 1306, 1309, 1313, 1315, 1401, 1415, 1454, 1455, 1459, 1461, 1463, 1465, 1469, 1471, 1473, 1476, 1478, 1480, 1483, 1485, 1487, 1491, 1493, 1495, 1499, 1525, 1526, 1672, 1673, 1683, 1685, 1697, 1698, 1721, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1776, 1806, 1828, 1829, 1892, 1893, 1895, 1897, 1903, 1906, 1910, 1921], "between": [452, 601, 1017, 1053, 1132, 1133, 1140, 1144, 1146, 1148, 1150, 1151, 1153, 1159, 1163, 1164, 1167, 1173, 1174, 1175, 1176, 1245, 1246, 1259, 1260, 1276, 1277, 1281, 1284, 1290, 1294, 1303, 1304, 1305, 1306, 1309, 1313, 1315, 1321, 1371, 1401, 1404, 1408, 1415, 1417, 1418, 1433, 1673, 1683, 1721, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1776, 1806, 1828, 1829, 1856, 1892, 1899, 1907, 1909, 1910, 1912, 1916], "random": [452, 508, 509, 510, 1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1230, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1370, 1402, 1411, 1413, 1806, 1891, 1897, 1903, 1908], "add_row": [453, 1891, 1906, 1910, 1912, 1914, 1915, 1917], "xy_step": [453, 1891, 1906, 1910, 1912, 1914, 1915, 1917], "row": [453, 645, 646, 972, 1148, 1149, 1172, 1173, 1281, 1289, 1296, 1303, 1304, 1305, 1314, 1321, 1401, 1410, 1411, 1683, 1721, 1752, 1753, 1775, 1776, 1891, 1902, 1904, 1906, 1907, 1912, 1914, 1918, 1919], "fielddatanc": [454, 455, 456, 457, 458, 459, 460, 461, 1891, 1903, 1909], "heterogen": [454, 1891, 1902, 1904, 1912], "horizont": [454, 783, 954, 955, 958, 959, 960, 985, 987, 990, 1017, 1053, 1122, 1140, 1141, 1143, 1145, 1149, 1151, 1152, 1153, 1172, 1173, 1175, 1245, 1246, 1259, 1260, 1276, 1277, 1279, 1281, 1310, 1314, 1404, 1407, 1411, 1413, 1428, 1429, 1430, 1433, 1891, 1896, 1900, 1903, 1908, 1909, 1912, 1916, 1917], "netcdf": [454, 969, 970, 973, 1891, 1909], "pattern": [454, 455, 1017, 1309, 1402, 1418, 1903, 1914], "end": [454, 455, 953, 1004, 1010, 1015, 1016, 1034, 1133, 1135, 1147, 1148, 1151, 1153, 1179, 1199, 1279, 1295, 1387, 1389, 1394, 1396, 1430], "nc": [454, 455, 1010, 1011, 1013, 1014, 1834, 1903, 1909], "One": [454, 455, 1133, 1386, 1393, 1909], "mani": [454, 455, 1035, 1148, 1149, 1903, 1904], "ovar": [454, 462, 490, 576, 645], "var2ncvar": [454, 455, 1909], "map": [454, 455, 462, 464, 490, 492, 508, 510, 534, 535, 536, 537, 538, 539, 540, 576, 577, 612, 613, 630, 966, 987, 988, 989, 990, 991, 992, 993, 995, 1017, 1025, 1060, 1081, 1151, 1153, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418, 1428, 1429, 1453, 1517, 1518, 1553, 1554, 1719, 1880, 1881, 1892, 1896, 1899, 1903, 1907, 1911, 1912, 1915, 1916, 1918], "fixed_var": [454, 455, 462, 464, 490, 492, 506, 1908, 1909, 1910, 1912, 1914, 1915, 1918, 1919, 1920, 1921], "uniform": [454, 455, 462, 464, 482, 490, 492, 509, 576, 577, 661, 719, 748, 1148, 1304, 1314, 1627, 1629, 1891, 1892, 1903, 1906, 1907, 1908, 1917, 1919, 1921], "read": [454, 455, 462, 464, 490, 492, 511, 577, 613, 630, 646, 666, 668, 672, 673, 678, 679, 684, 685, 690, 691, 1010, 1015, 1807, 1808, 1809, 1825, 1826, 1882, 1889, 1891, 1897, 1903, 1907, 1909, 1916, 1918, 1919], "states_coord": [454, 455, 1909], "x_coord": [454, 455, 1909], "y_coord": [454, 455, 1909], "h_coord": [454, 455, 1909], "pre_load": [454, 455, 1909], "weight_ncvar": [454, 455], "bounds_error": [454, 1909], "exceed": [454, 508, 510, 1411], "fill_valu": 454, "time_format": [454, 455, 1909], "datetim": [454, 455, 1311, 1431, 1434], "string": [454, 455, 533, 964, 978, 1017, 1102, 1105, 1106, 1122, 1132, 1133, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1178, 1179, 1199, 1238, 1250, 1264, 1273, 1276, 1277, 1278, 1279, 1281, 1290, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1350, 1362, 1376, 1389, 1396, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1415, 1417, 1418, 1429, 1430, 1433, 1453, 1502, 1504, 1523, 1525, 1532, 1543, 1550, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1683, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1897], "interp_nan": [454, 455], "linearli": [454, 455, 789, 796, 802, 808, 1410], "interpn_par": [454, 455], "scipi": [454, 455, 464, 646, 684, 685, 690, 691, 1132, 1159, 1167, 1294, 1306, 1313, 1401, 1402, 1683, 1721], "interpn": [454, 455, 646, 684, 685, 690, 691], "utmx": [455, 1909], "utmi": [455, 1909], "d_": 455, "xr": [455, 1453], "multiheightst": [462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 1891, 1903], "multipl": [462, 761, 1017, 1034, 1148, 1173, 1174, 1175, 1176, 1277, 1281, 1310, 1314, 1326, 1358, 1413, 1419, 1891, 1892, 1903, 1904, 1915], "taken": [462, 1276, 1303, 1315, 1417, 1418, 1917], "exampl": [462, 1000, 1135, 1149, 1172, 1174, 1281, 1295, 1309, 1310, 1362, 1371, 1376, 1377, 1387, 1394, 1426, 1453, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "50": [462, 508, 510, 1148, 1276, 1453, 1907, 1908, 1910, 1911, 1912, 1915, 1916, 1920], "60": [462, 1910, 1916], "100": [462, 622, 1017, 1151, 1276, 1429, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "var2col": [462, 464, 490, 492, 506, 508, 510, 576, 577, 1908, 1910, 1912, 1915, 1916, 1918, 1919, 1920], "fix": [462, 464, 475, 490, 492, 1081, 1138, 1143, 1281, 1320, 1330, 1340, 1357, 1389, 1396, 1402, 1416, 1646, 1703, 1732, 1891, 1895, 1903, 1907], "pd_read_par": [462, 464, 492, 577, 713], "slice": [462, 464, 470, 490, 492, 499, 552, 954, 985, 987, 988, 989, 990, 991, 992, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1309, 1310, 1311, 1313, 1402, 1453, 1892, 1896, 1903, 1917], "rang": [462, 464, 470, 490, 492, 499, 509, 629, 630, 1017, 1090, 1096, 1101, 1112, 1115, 1117, 1132, 1151, 1153, 1159, 1167, 1172, 1276, 1277, 1278, 1281, 1285, 1294, 1295, 1303, 1304, 1305, 1306, 1310, 1313, 1321, 1329, 1377, 1387, 1394, 1401, 1413, 1416, 1417, 1418, 1428, 1429, 1453, 1892, 1903, 1906, 1914, 1915, 1916, 1921], "states_loc": [462, 464, 470, 473, 490, 492, 499, 503, 506, 1912], "loc": [462, 464, 470, 490, 492, 499, 1017, 1090, 1097, 1100, 1102, 1109, 1111, 1112, 1238, 1290, 1375, 1380, 1385, 1389, 1392, 1396, 1407, 1411, 1914, 1915], "rdict": [462, 463, 473, 474, 490, 491, 503, 506, 507], "index_col": [462, 463, 473, 474, 490, 491, 503, 506, 507], "interp1d": 464, "multiheighttimeseri": [473, 474, 1891, 1903, 1908, 1912], "timeseri": [473, 506, 507, 509, 734, 735, 748, 749, 948, 1891, 1892, 1902, 1903, 1904, 1912, 1916, 1918], "parse_d": [473, 474, 506, 507], "scanw": [475, 476, 477, 478, 479, 480, 481, 1891], "wd": [475, 476, 482, 483, 630, 729, 730, 746, 1001, 1010, 1012, 1830, 1831, 1832, 1833, 1871, 1880, 1881, 1897, 1899, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "ti": [475, 476, 482, 483, 581, 660, 661, 690, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 871, 872, 879, 883, 887, 891, 1000, 1010, 1012, 1625, 1855, 1856, 1869, 1880, 1881, 1892, 1893, 1899, 1903, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "rho": [475, 476, 482, 483, 665, 666, 668, 672, 673, 678, 679, 690, 691, 1000, 1010, 1012, 1866, 1880, 1881, 1899, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "ws_list": [475, 476], "singlestatest": [482, 483, 484, 485, 486, 487, 488, 489, 1891, 1903, 1906, 1907, 1917], "profdict": [482, 490], "profdata": [482, 483], "statest": [490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 1891, 1908, 1910, 1914, 1915, 1920, 1921], "readabl": [490, 1891, 1915, 1919], "rpar": [490, 672], "tabstat": [503, 504, 505, 1891, 1903], "tab": [503, 504, 1017, 1131, 1809, 1891, 1897, 1903, 1908], "normal": [503, 504, 508, 510, 584, 585, 729, 927, 1022, 1025, 1038, 1060, 1065, 1081, 1148, 1151, 1152, 1159, 1175, 1176, 1276, 1277, 1278, 1281, 1303, 1304, 1305, 1309, 1314, 1315, 1321, 1410, 1413, 1417, 1418, 1432, 1435, 1683, 1721, 1809, 1892, 1897, 1908, 1914, 1920], "its": [504, 515, 1017, 1025, 1038, 1043, 1044, 1060, 1063, 1065, 1070, 1081, 1086, 1135, 1137, 1151, 1169, 1174, 1177, 1183, 1240, 1276, 1277, 1278, 1281, 1283, 1285, 1303, 1304, 1305, 1319, 1321, 1322, 1323, 1332, 1356, 1410, 1417, 1418, 1424, 1426, 1429, 1683, 1721, 1791, 1894, 1904, 1913, 1917], "create_random_abl_st": [508, 1891], "cols_minmax": [508, 510], "mol_abs_rang": [508, 510], "5000": [508, 510, 1386, 1393, 1910, 1914, 1916, 1918, 1919], "abl": [508, 510, 696, 700, 704, 708, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1891, 1892, 1903], "mol": [508, 510, 708, 1444, 1445, 1448, 1449, 1858, 1898, 1899, 1907, 1908], "neutral": [508, 510, 696, 708, 1437, 1438, 1439, 1892, 1897], "stratif": [508, 510], "random_timseries_data": [509, 1891, 1903], "n_time": [509, 1891], "data_rang": 509, "start_tim": 509, "2000": [509, 1453, 1907, 1910, 1915], "01": [509, 821, 1827, 1897, 1907, 1908, 1910, 1911, 1912, 1916, 1918, 1919], "00": [509, 1907, 1908, 1910, 1912, 1916, 1918, 1919], "freq": [509, 1132, 1159, 1167, 1294, 1306, 1313, 1401], "inam": [509, 1825], "stamp": [509, 1912, 1916], "seri": [509, 948, 1017, 1172, 1403, 1897, 1903, 1913, 1916, 1919], "period": [509, 630, 1322], "frequenc": [509, 1132, 1159, 1167, 1294, 1306, 1313, 1322, 1401, 1809], "sdata": [509, 1914, 1921], "write_random_abl_st": 510, "digit": 510, "write": [510, 925, 930, 931, 932, 933, 934, 954, 961, 966, 967, 970, 972, 973, 974, 979, 985, 987, 988, 989, 990, 991, 992, 993, 996, 998, 1010, 1016, 1825, 1834, 1896, 1897, 1903], "written": [510, 576, 577, 969, 972, 973, 1904], "to_csv": [510, 1825], "windio": [511, 1903], "read_cas": [511, 1891], "case_yaml": [511, 1891], "site_par": [511, 1891], "farm_par": 511, "ana_par": 511, "yaml": [511, 1891, 1903], "read_sit": 511, "read_farm": 511, "read_analys": 511, "axial_induction_model": [512, 513, 514, 515, 516, 517, 1892], "betzaxialinduct": [512, 513, 514, 1892, 1903, 1911], "classic": [512, 1407, 1892, 1903], "1d": [512, 1132, 1140, 1143, 1144, 1146, 1148, 1150, 1151, 1159, 1163, 1164, 1167, 1172, 1173, 1273, 1278, 1294, 1304, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1402, 1408, 1410, 1892, 1906], "momentum": [512, 515, 1892], "theori": [512, 1892], "ct_max": [512, 513, 829], "madsenaxialinduct": [515, 516, 517, 1892, 1903, 1911], "through": [515, 1143, 1147, 1309, 1403, 1407, 1892, 1903, 1904], "polynomi": [515, 1451, 1892, 1897, 1903], "fit": [515, 1147, 1281, 1402, 1892], "high": [515, 1385, 1392, 1892, 1915], "refer": [515, 754, 789, 796, 802, 808, 809, 815, 821, 828, 835, 864, 1137, 1141, 1145, 1151, 1172, 1292, 1408, 1439, 1440, 1445, 1449, 1683, 1721, 1898, 1903, 1906, 1908, 1921], "helg": 515, "aagaard": 515, "madsen": [515, 789, 790, 796, 797, 802, 803, 808, 822, 835, 850, 865, 872, 1903, 1907, 1911, 1916, 1918], "torben": 515, "juul": 515, "larsen": [515, 1151], "georg": 515, "raimund": 515, "pirrung": 515, "ang": 515, "li": [515, 1305], "frederik": 515, "zahl": 515, "implement": [515, 815, 1032, 1119, 1179, 1199, 1305, 1327, 1906, 1910, 1913], "blade": [515, 601, 1892], "polar": [515, 1017, 1025, 1060, 1081, 1133, 1154, 1155, 1172, 1200, 1285, 1362, 1376], "aeroelast": 515, "impact": 515, "http": [515, 754, 789, 796, 802, 808, 809, 815, 821, 828, 835, 864, 871, 910, 1148, 1151, 1403, 1451, 1828, 1901, 1903, 1904, 1905, 1919, 1922], "doi": [515, 754, 802, 808, 809, 821, 828, 835, 1904], "org": [515, 754, 809, 821, 828, 835, 864, 871, 910, 1148, 1151, 1453, 1901], "5194": 515, "we": [515, 802, 808, 809, 1034, 1322, 1323, 1327, 1683, 1721, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "2020": [515, 802, 808, 1900, 1906], "k1": [515, 516], "coeffici": [515, 516, 1148, 1451, 1586, 1587, 1836, 1850, 1899, 1913, 1914], "k2": [515, 516], "k3": [515, 516], "246": [515, 516], "0586": [515, 516], "0883": [515, 516], "basicfarmcontrol": [518, 1892, 1907, 1911, 1916, 1918], "condit": [518, 629, 754, 828, 835, 1281, 1502, 1503, 1828, 1892, 1903, 1906, 1907, 1910, 1913, 1915, 1917, 1921], "farm_model": [519, 520, 521, 522, 523, 524, 528, 1911], "turbine2farmmodel": [519, 520, 521, 522, 523, 524, 1892, 1911], "promot": [519, 1892], "simpli": [519, 584, 1100, 1148, 1175, 1176, 1295, 1375, 1892, 1905, 1907, 1908, 1911, 1915, 1920], "init": [522, 1004, 1005, 1595, 1627, 1629, 1632, 1769, 1780, 1800], "slightli": [525, 1154, 1305, 1314, 1897, 1915], "enhanc": [525, 1897], "dictionari": [525, 527, 835, 856, 966, 1016, 1017, 1148, 1149, 1151, 1153, 1161, 1312, 1315, 1356, 1380, 1389, 1396, 1413, 1428, 1429, 1897], "pass": [527, 1122, 1132, 1133, 1142, 1143, 1147, 1148, 1149, 1159, 1167, 1172, 1173, 1175, 1176, 1276, 1277, 1278, 1281, 1283, 1284, 1285, 1292, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1314, 1358, 1385, 1386, 1390, 1392, 1393, 1397, 1399, 1400, 1401, 1402, 1403, 1404, 1417, 1418, 1419, 1420, 1433, 1683, 1721, 1920], "kind": [528, 1245, 1246, 1247, 1259, 1260, 1261, 1909, 1921], "partial_wak": [528, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 1911], "partialwakemodel": 528, "wake_superposit": [528, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 1911], "induction_model": [528, 1906], "base_class": 528, "pct_file": [528, 530], "print_toc": [528, 533, 1911], "model_typ": [528, 532, 925, 934, 954, 961, 964, 967, 970, 974, 985, 993, 996, 998], "class_nam": [528, 532], "curv": [530, 665, 666, 668, 672, 678, 679, 684, 685, 690, 691, 998, 1000, 1017, 1056, 1078, 1174, 1175, 1176, 1404, 1892, 1896, 1903, 1904, 1907, 1914], "dynam": [532, 734, 748, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418, 1501, 1892, 1897, 1902, 1904], "optin": [532, 552, 1808], "mclass": 532, "more": [534, 1059, 1132, 1133, 1148, 1151, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1278, 1281, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1313, 1314, 1321, 1339, 1358, 1401, 1403, 1408, 1417, 1418, 1419, 1453, 1683, 1721, 1903, 1906, 1907, 1915, 1916, 1919], "than": [534, 910, 1034, 1090, 1097, 1112, 1135, 1151, 1173, 1251, 1265, 1276, 1277, 1278, 1281, 1303, 1305, 1314, 1326, 1330, 1377, 1386, 1387, 1393, 1394, 1401, 1417, 1418, 1906, 1916, 1919], "invok": [534, 617, 723, 789, 796, 802, 808, 1022, 1892, 1903, 1904, 1905, 1907, 1910, 1919, 1920, 1921], "wname2pwak": [534, 535], "wtype2pwak": [534, 535], "ones": [535, 542, 553, 561, 564, 571, 1314, 1451], "partialaxiwak": [541, 542, 543, 544, 545, 546, 547, 548, 761, 1892, 1907, 1911, 1916, 1918], "idea": [541, 910, 1903, 1914], "radial": [541, 542, 762, 773, 779, 780, 813, 819, 862, 1017, 1025, 1031, 1060, 1063, 1081, 1082, 1154, 1224, 1225, 1362, 1364, 1365, 1366, 1367, 1906], "n": [541, 542, 552, 553, 560, 561, 594, 595, 601, 602, 864, 955, 956, 957, 958, 959, 960, 1001, 1051, 1052, 1053, 1055, 1075, 1076, 1077, 1088, 1118, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1277, 1278, 1281, 1283, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1321, 1326, 1328, 1330, 1375, 1401, 1402, 1403, 1411, 1413, 1416, 1417, 1418, 1428, 1429, 1433, 1453, 1485, 1486, 1515, 1516, 1583, 1584, 1646, 1647, 1651, 1652, 1662, 1663, 1683, 1703, 1704, 1721, 1806, 1892, 1897, 1903, 1905, 1907, 1908, 1911, 1916, 1917, 1918, 1919, 1921], "radii": [541, 778, 779, 812, 813, 818, 819, 861, 862, 1017, 1359, 1362, 1828, 1897], "cover": [541, 1151, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "disc": [541, 563, 1502, 1503, 1903, 1913], "overlap": [541, 563, 594, 595, 1159, 1167, 1172, 1283, 1284, 1313, 1401], "circl": [541, 563, 1060, 1112, 1142, 1146, 1148, 1150, 1163, 1164, 1310, 1358, 1377, 1407, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1722, 1723, 1726, 1732, 1733, 1736, 1742, 1743, 1746, 1752, 1753, 1756, 1828, 1829, 1897, 1910], "area": [541, 594, 595, 1017, 1133, 1175, 1176, 1277, 1305, 1309, 1314, 1330, 1403, 1404, 1418, 1428, 1429, 1455, 1461, 1463, 1465, 1471, 1473, 1480, 1487, 1495, 1502, 1503, 1808, 1828, 1829, 1893, 1897, 1903, 1906, 1910], "partialcentr": [549, 550, 551, 1892, 1903, 1911], "rotorpoint": [549, 570, 571, 572, 573, 574, 575, 1892, 1906, 1907, 1911], "get_wake_point": [549, 551, 570, 574], "partialdistslicedwak": [552, 553, 554, 555, 556, 557, 558, 559, 560, 764, 1892, 1911], "make": [552, 1017, 1053, 1142, 1149, 1153, 1172, 1276, 1278, 1285, 1293, 1303, 1305, 1309, 1314, 1322, 1323, 1324, 1325, 1401, 1408, 1410, 1415, 1419, 1429, 1828, 1892, 1893, 1905, 1910, 1919], "done": [552, 1154, 1276, 1327, 1513, 1916, 1918], "grotor": 552, "gridrotor": [552, 553, 561, 594, 595, 596, 597, 598, 599, 600, 1892, 1907, 1911], "partialgrid": [560, 561, 562, 1892, 1911], "mai": [560, 617, 1018, 1032, 1034, 1056, 1078, 1090, 1102, 1104, 1119, 1124, 1134, 1135, 1142, 1147, 1148, 1151, 1172, 1173, 1175, 1176, 1245, 1246, 1247, 1251, 1257, 1259, 1260, 1261, 1265, 1271, 1274, 1277, 1281, 1283, 1284, 1285, 1298, 1303, 1304, 1305, 1310, 1311, 1314, 1320, 1321, 1322, 1323, 1327, 1330, 1356, 1375, 1386, 1388, 1389, 1393, 1395, 1396, 1407, 1410, 1417, 1418, 1892, 1909, 1916, 1921], "partialtophat": [563, 564, 565, 566, 567, 568, 569, 1892, 1911], "hat": [563, 776, 1892, 1900, 1921], "directli": [570, 996, 1002, 1148, 1175, 1176, 1244, 1258, 1276, 1292, 1311, 1314, 1322, 1323, 1429, 1550, 1559, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1890, 1892, 1896, 1897, 1900, 1906, 1915], "setuniformdata": [576, 577, 578, 579, 580, 1892, 1903], "both": [576, 577, 771, 772, 821, 824, 864, 867, 871, 874, 1017, 1059, 1133, 1137, 1147, 1153, 1154, 1175, 1176, 1255, 1269, 1273, 1276, 1292, 1293, 1295, 1305, 1310, 1322, 1323, 1327, 1357, 1371, 1386, 1393, 1402, 1408, 1410, 1415, 1416, 1417, 1418, 1421, 1422, 1775, 1903, 1906, 1914, 1919, 1920], "assum": [576, 577, 1151, 1153, 1273, 1403, 1408, 1419, 1719, 1828, 1918], "Or": [576, 577], "independ": [576, 577, 1106, 1149, 1173, 1277, 1327, 1340, 1421, 1422, 1912], "tke2ti": [581, 582, 583, 1892, 1903, 1911], "tke": [581, 1892, 1903, 1908, 1912, 1913], "sqrt": [581, 1276, 1277, 1314, 1683, 1721, 1827, 1892, 1897, 1903], "wakedelta": [584, 585, 586, 587, 1892], "subtract": [584, 1081, 1082, 1892, 1910], "divid": [584, 585, 987, 988, 989, 990, 991, 992, 1167, 1276, 1277, 1313, 1410], "centrerotor": [588, 589, 590, 591, 592, 593, 1892, 1911, 1916, 1918], "compos": [594, 601, 1025, 1029, 1034, 1060, 1081, 1892], "possibli": [594, 1096, 1115, 1892], "kick": [594, 1892], "out": [594, 1034, 1097, 1281, 1305, 1314, 1415, 1417, 1418, 1453, 1683, 1721, 1809, 1827, 1892, 1907, 1915, 1916, 1918, 1921], "outsid": [594, 1133, 1278, 1309, 1342, 1415, 1416, 1417, 1418, 1892, 1909], "reduc": [594, 595, 601, 602, 934, 950, 951, 952, 987, 988, 989, 990, 991, 992, 1276, 1292, 1298, 1314, 1903], "reduct": [594, 595, 1906], "actual": [594, 595, 1132, 1159, 1167, 1175, 1176, 1274, 1281, 1294, 1306, 1313, 1330, 1357, 1401, 1409, 1550, 1559, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1903, 1905, 1912, 1914, 1917], "repres": [594, 595, 645, 684, 690, 928, 1035, 1146, 1150, 1151, 1153, 1163, 1164, 1173, 1281, 1293, 1310, 1311, 1314, 1324, 1325, 1380, 1386, 1393, 1408, 1410, 1428, 1429, 1453, 1471, 1478, 1485, 1892, 1897, 1908, 1920, 1921], "circ": [594, 595], "recalcul": [594, 595], "accordingli": [594, 595, 1276, 1314], "nint": [594, 595, 601, 602], "200": [594, 595, 601, 602, 1907, 1908, 1910, 1912, 1921], "levelrotor": [601, 602, 603, 604, 605, 606, 607, 1892, 1903, 1911], "lower": [601, 895, 896, 900, 901, 905, 906, 910, 911, 915, 916, 949, 1017, 1133, 1141, 1145, 1149, 1151, 1153, 1172, 1248, 1262, 1276, 1277, 1281, 1283, 1284, 1285, 1290, 1315, 1332, 1384, 1391, 1398, 1402, 1404, 1410, 1413, 1417, 1418, 1671, 1892, 1903, 1918], "tip": [601, 1148, 1149, 1314, 1892], "rew": [601, 1010, 1012, 1863, 1880, 1881, 1892, 1899, 1903, 1907, 1909, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "in_var": [608, 609], "vairabl": [608, 609], "func": [608, 609, 1017, 1124, 1322, 1323, 1550, 1559, 1569, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1810, 1816, 1817, 1818, 1819, 1824], "in0": [608, 609], "in1": [608, 609], "stsel": [608, 609], "out0": [608, 609], "ou1": [608, 609], "where": [608, 609, 928, 1017, 1025, 1035, 1038, 1053, 1060, 1065, 1081, 1124, 1133, 1146, 1148, 1150, 1151, 1159, 1163, 1164, 1167, 1172, 1173, 1175, 1176, 1277, 1279, 1310, 1313, 1321, 1330, 1332, 1377, 1401, 1403, 1408, 1409, 1416, 1430, 1433, 1683, 1721, 1827, 1831, 1832, 1910, 1912, 1913, 1915, 1921], "inx": [608, 609], "outi": [608, 609], "lookupt": [612, 613, 614, 615, 616, 1892, 1903], "tabl": [612, 613, 645, 1017, 1131, 1146, 1150, 1163, 1164, 1314, 1411, 1412, 1892, 1903, 1914, 1915], "varmap": [612, 613, 1502, 1517, 1518, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "pd_file_read_par": [613, 630, 646, 666, 673], "xr_interp_arg": 613, "powermask": [617, 618, 619, 620, 621, 622, 1892, 1903, 1911, 1914], "derat": [617, 998, 1857, 1896, 1899, 1903, 1914, 1915], "below": [617, 988, 989, 991, 992, 1017, 1034, 1133, 1146, 1148, 1150, 1151, 1163, 1164, 1172, 1193, 1220, 1283, 1285, 1295, 1303, 1305, 1310, 1314, 1315, 1339, 1360, 1413, 1417, 1418, 1903, 1905, 1906], "rate": [617, 1281], "higher": [617, 1285, 1903], "boost": [617, 998, 1857, 1896, 1899, 1903, 1914, 1915], "introduc": [617, 1900, 1903], "so": [617, 1025, 1029, 1060, 1081, 1111, 1133, 1148, 1149, 1172, 1173, 1199, 1273, 1277, 1281, 1283, 1284, 1309, 1314, 1322, 1323, 1340, 1371, 1377, 1386, 1390, 1393, 1397, 1402, 1417, 1418, 1451, 1903, 1913, 1914, 1916, 1917, 1918], "wise": [617, 645, 646, 1683, 1721, 1903, 1916], "var_ws_p": [617, 618, 673, 679, 685, 691], "factor_p": [617, 618, 622], "rews3": [617, 618, 622, 673, 679, 685, 691, 1010, 1012, 1865, 1880, 1881, 1899, 1907, 1916, 1918], "update_p_ct": [617, 622], "max_p": [617, 622, 1857, 1899, 1914, 1915], "rated_p": [617, 622], "var_w": 622, "p_lim": 622, "rotorcentrecalc": [623, 624, 625, 626, 627, 628, 1892, 1903, 1911], "sectormanag": [629, 630, 631, 632, 633, 1892, 1903, 1915], "range_var": [629, 630, 1915], "target_var": [629, 630, 1915], "col_tind": 630, "col_tnam": [630, 1915], "colmap": [630, 1915], "var_period": 630, "amb_wd": [630, 974, 976, 978, 996, 1010, 1012, 1844, 1880, 1881, 1899, 1907, 1916, 1917, 1918], "360": [630, 1146, 1150, 1163, 1164], "setfarmvar": [634, 635, 636, 637, 638, 639, 640, 1892, 1903, 1914, 1921], "add_var": [634, 636, 1627, 1629, 1914, 1921], "setxyhd": [641, 642, 643, 644, 1892, 1907, 1916, 1918], "set_xi": [641, 642], "set_h": [641, 642], "set_d": [641, 642], "tablefactor": [645, 646, 647, 648, 649, 1892, 1903], "multipli": [645, 646, 809, 810, 821, 822, 864, 865, 871, 872, 1892, 1903], "dimension": [645, 1148, 1278, 1310, 1683, 1721, 1892, 1896, 1903], "col_var": [645, 646, 712, 713], "row_var": [645, 646], "onto": [645, 646], "thrust2ct": [650, 651, 652, 653, 1892, 1903, 1911], "thrust": [650, 651, 1836, 1850, 1892, 1899, 1903, 1904, 1907, 1913, 1914, 1921], "thrust_var": [650, 651], "wsct": [650, 672, 678, 684, 690], "var_ws_ct": [650, 651, 673, 679, 685, 691], "rews2": [650, 651, 673, 679, 685, 691, 1010, 1012, 1864, 1880, 1881, 1899, 1907, 1916, 1918], "yaw2yawm": [654, 655, 656, 1892, 1903, 1911, 1921], "yaw": [654, 657, 673, 679, 685, 691, 754, 828, 835, 1010, 1012, 1846, 1847, 1876, 1877, 1880, 1881, 1892, 1899, 1902, 1903, 1904, 1907, 1910, 1911, 1916, 1917, 1918], "yawm": [654, 657, 754, 828, 851, 1877, 1880, 1881, 1892, 1899, 1921], "yawm2yaw": [657, 658, 659, 1892, 1903, 1911, 1921], "kti": [660, 661, 662, 663, 664, 1855, 1856, 1892, 1899, 1903, 1911, 1919], "k": [660, 661, 754, 755, 809, 810, 815, 816, 821, 822, 828, 829, 851, 858, 859, 1146, 1150, 1163, 1164, 1172, 1310, 1433, 1854, 1855, 1856, 1892, 1899, 1903, 1907, 1911, 1916, 1918, 1919, 1920], "linear": [660, 879, 880, 883, 884, 887, 888, 891, 892, 895, 1017, 1143, 1159, 1163, 1167, 1276, 1278, 1281, 1292, 1294, 1303, 1304, 1305, 1313, 1321, 1388, 1395, 1401, 1416, 1417, 1418, 1892, 1920], "ti_var": [660, 661, 871, 872], "k_var": [660, 661, 754, 755, 809, 810, 815, 816, 821, 822, 828, 829, 858, 859], "kb": [660, 661, 1855, 1856, 1899, 1903], "ti_val": [660, 661], "cpctfile": [665, 666, 1892, 1903], "pctfile": [665, 666, 672, 673, 674, 675, 676, 677, 1892, 1907, 1908, 1911, 1915, 1916, 1917, 1918, 1919], "cp": [665, 666, 667, 668, 1892, 1903], "col_w": [665, 666, 672, 673, 678], "col_cp": [665, 666, 668], "225": [665, 666, 668, 684, 1000, 1906, 1907, 1908, 1909, 1910, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "paramer": 666, "cpctfromtwo": [667, 668, 1892, 1903], "pctfromtwo": [667, 668, 678, 679, 680, 681, 682, 683, 1892], "data_source_cp": [667, 668], "data_source_ct": [667, 668, 678, 679, 684, 685, 690, 691], "col_ws_cp_fil": 668, "pd_file_read_pars_cp": 668, "pd_file_read_pars_ct": [668, 679, 685, 691], "nulltyp": [669, 670, 671, 1892, 1903, 1911], "doe": [669, 1032, 1044, 1070, 1081, 1086, 1119, 1133, 1138, 1148, 1155, 1165, 1166, 1237, 1243, 1304, 1314, 1361, 1403, 1417, 1418, 1419, 1426, 1722, 1732, 1742, 1752, 1892, 1912, 1914, 1916, 1918], "col_p": [672, 673, 678, 679], "col_ct": [672, 673, 678, 679], "densitii": [672, 673, 678, 679, 690, 691], "correct": [672, 673, 678, 679, 690, 691, 723, 809, 810, 815, 910, 1102, 1104, 1167, 1237, 1278, 1281, 1283, 1284, 1313, 1375, 1892, 1903, 1913, 1914, 1917], "wsp": [672, 678, 684, 690], "p_ct": [673, 679, 684, 685, 691], "p_p": [673, 679, 685, 691, 1921], "88": [673, 679, 685, 691, 1908, 1910, 1918, 1919, 1921], "expon": [673, 679, 685, 691, 716, 1276, 1440, 1867, 1892, 1899, 1903, 1921], "source_p": [678, 684, 690], "source_ct": [678, 684, 690], "rpars_p": [678, 684, 690], "rpars_ct": [678, 684, 690], "data_source_p": [678, 679, 684, 685, 690, 691], "col_ws_p_fil": [678, 679], "col_ws_ct_fil": 679, "pd_file_read_pars_p": [679, 685, 691], "wsrho2pctfromtwo": [684, 685, 686, 687, 688, 689, 1892], "950": [684, 1910], "975": 684, "275": 684, "subsequ": [684, 690, 1907, 1913, 1916], "neccessarili": [684, 690, 1892, 1919], "ipars_p": [684, 690], "ipars_ct": [684, 690], "interpn_pars_p": [685, 691], "interpn_pars_ct": [685, 691], "wsti2pctfromtwo": [690, 691, 692, 693, 694, 695, 1892, 1903], "05": [690, 1000, 1025, 1053, 1060, 1081, 1290, 1667, 1668, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1918, 1920, 1921], "06": [690, 1907, 1908, 1910, 1912, 1916, 1918, 1919], "07": [690, 835, 850, 1907, 1908, 1909, 1911, 1916, 1918], "vertical_profil": [696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722], "abllogneutralwsprofil": [696, 697, 698, 699, 1892], "log": [696, 700, 704, 708, 1017, 1060, 1081, 1090, 1097, 1112, 1149, 1276, 1277, 1278, 1281, 1293, 1303, 1304, 1305, 1321, 1324, 1325, 1388, 1390, 1395, 1397, 1417, 1418, 1438, 1442, 1443, 1447, 1892, 1898], "ustar_input": [696, 697, 700, 701, 704, 705, 708, 709], "ustar": [696, 697, 700, 701, 704, 705, 708, 709, 1437, 1439, 1441, 1445, 1446, 1449, 1898, 1903], "abllogstablewsprofil": [700, 701, 702, 703, 1892, 1907], "stabl": [700, 708, 1441, 1442, 1443, 1444, 1445, 1892, 1897, 1905, 1907], "abllogunstablewsprofil": [704, 705, 706, 707, 1892], "unstabl": [704, 708, 1446, 1447, 1448, 1449, 1892, 1897], "abllogwsprofil": [708, 709, 710, 711, 1892, 1908], "pick": [708, 1017, 1161, 1218, 1307, 1308, 1356, 1421, 1422, 1907], "dataprofil": [712, 713, 714, 715, 1892, 1903], "data_z": 712, "n_z": 712, "data_v": 712, "interp_par": [712, 713], "col_z": [712, 713], "read_csv": 713, "shearedprofil": [716, 717, 718, 1892, 1903], "shear": [716, 1440, 1867, 1892, 1897, 1899, 1903], "uniformprofil": [719, 720, 721, 722, 1892], "farmord": [723, 724, 725, 726, 727, 728, 1892, 1911], "warn": [723, 1018, 1020, 1090, 1097, 1099, 1112, 1303, 1305, 1310, 1314, 1361, 1453], "test": [723, 1017, 1161, 1356, 1454, 1460, 1461, 1463, 1470, 1471, 1477, 1478, 1484, 1485, 1492, 1493, 1500, 1903, 1908], "purpos": [723, 1305, 1908, 1910, 1917], "give": [723, 1132, 1148, 1151, 1159, 1167, 1172, 1188, 1277, 1294, 1306, 1310, 1313, 1314, 1315, 1401, 1417, 1418, 1903, 1906, 1919], "when": [723, 1017, 1025, 1032, 1034, 1038, 1060, 1065, 1072, 1081, 1097, 1102, 1104, 1119, 1123, 1132, 1133, 1134, 1138, 1147, 1148, 1149, 1151, 1159, 1167, 1168, 1171, 1172, 1199, 1214, 1276, 1277, 1278, 1281, 1292, 1294, 1295, 1299, 1302, 1303, 1304, 1305, 1306, 1309, 1310, 1313, 1321, 1330, 1334, 1335, 1342, 1352, 1399, 1400, 1401, 1404, 1406, 1409, 1410, 1417, 1418, 1426, 1903, 1907, 1908, 1909, 1910, 1914, 1916, 1919], "base_fram": [723, 724, 754, 755], "rotorwd1": [723, 724], "rotorwd": [723, 724, 729, 730, 731, 732, 733, 754, 755, 1892, 1907, 1911], "align": [729, 1017, 1146, 1147, 1149, 1150, 1163, 1164, 1245, 1246, 1259, 1260, 1276, 1277, 1371, 1411, 1421, 1422, 1892], "axi": [729, 927, 955, 956, 957, 958, 959, 960, 977, 978, 988, 989, 991, 992, 993, 995, 1000, 1001, 1017, 1025, 1031, 1053, 1081, 1082, 1090, 1094, 1098, 1100, 1102, 1110, 1112, 1116, 1137, 1138, 1140, 1141, 1142, 1144, 1145, 1147, 1149, 1172, 1189, 1193, 1237, 1243, 1245, 1246, 1247, 1248, 1251, 1257, 1259, 1260, 1261, 1262, 1265, 1271, 1273, 1275, 1276, 1277, 1278, 1281, 1284, 1286, 1287, 1292, 1293, 1295, 1309, 1311, 1314, 1315, 1316, 1322, 1323, 1324, 1325, 1333, 1337, 1338, 1339, 1362, 1364, 1376, 1377, 1384, 1385, 1386, 1388, 1390, 1391, 1392, 1393, 1395, 1397, 1399, 1400, 1401, 1404, 1413, 1415, 1416, 1417, 1418, 1421, 1422, 1431, 1432, 1434, 1435, 1455, 1465, 1473, 1480, 1487, 1495, 1534, 1545, 1555, 1683, 1721, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1830, 1831, 1832, 1833, 1892, 1896, 1897, 1917, 1921], "var_wd": [729, 730], "seqdynamicwak": [734, 735, 736, 737, 738, 739, 740, 1911, 1916], "cl_ipar": [734, 735, 741, 742, 748, 749], "line": [734, 735, 741, 742, 748, 749, 776, 778, 809, 812, 815, 818, 858, 861, 955, 956, 957, 1001, 1017, 1056, 1078, 1122, 1129, 1132, 1140, 1142, 1143, 1144, 1148, 1149, 1151, 1153, 1157, 1163, 1164, 1167, 1172, 1173, 1193, 1213, 1230, 1249, 1256, 1263, 1270, 1273, 1277, 1279, 1283, 1284, 1290, 1291, 1294, 1303, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1326, 1337, 1338, 1339, 1356, 1362, 1370, 1371, 1376, 1401, 1404, 1407, 1408, 1410, 1411, 1415, 1417, 1418, 1420, 1428, 1429, 1430, 1433, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1903, 1905, 1906, 1907, 1917], "dt_min": [734, 735, 748, 749, 1918], "minut": [734, 735, 748, 749, 1908, 1912, 1918], "streamlines2d": [741, 742, 743, 744, 745, 746, 747, 1892, 1903, 1911], "streamlin": [741, 742, 746, 871, 1017, 1410, 1892, 1900, 1903, 1909, 1913], "max_length": [741, 742], "get_streamline_data": [741, 746], "n_step": 746, "timelin": [748, 749, 750, 751, 752, 753, 1892, 1903, 1911, 1918], "spatial": [748, 1525, 1683, 1721, 1892, 1893, 1902, 1903, 1908, 1916], "max_wake_length": [748, 749], "20000": [748, 749], "yawedwak": [754, 755, 756, 757, 758, 759, 760, 1892, 1903, 1911], "bend": [754, 1892, 1903, 1921], "bastankhah": [754, 821, 828, 835, 1892, 1900, 1903, 1921], "2016": [754, 828, 835, 1892, 1900, 1903], "experiment": [754, 828, 835, 1283, 1284, 1285, 1304, 1322, 1323], "theoret": [754, 828, 835], "studi": [754, 828, 835, 1904], "majid": [754, 821, 828, 835], "fernando": [754, 821, 828, 835], "port\u00e9": [754, 821, 828, 835], "agel": [754, 821, 828, 835, 1921], "1017": [754, 828, 835], "jfm": [754, 828, 835], "595": [754, 828, 835], "bastankhah2016model": [754, 755, 828, 829, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 1900], "model_par": [754, 828], "growth": [754, 755, 809, 810, 815, 816, 821, 822, 828, 829, 858, 859, 864, 865, 871, 872, 1806, 1854, 1899, 1903, 1920], "misalign": [754, 828, 1921], "axisymmetricwakemodel": [761, 762, 763, 771, 776, 1900], "distslicedwakemodel": [761, 764, 765, 766, 767, 768, 769, 770, 828, 1900], "r": [761, 762, 771, 772, 773, 776, 779, 780, 796, 802, 808, 809, 813, 815, 819, 821, 824, 858, 862, 864, 867, 871, 874, 1017, 1025, 1081, 1090, 1133, 1140, 1143, 1144, 1151, 1174, 1178, 1273, 1281, 1310, 1415, 1900, 1906, 1916], "separ": [761, 764, 1025, 1036, 1047, 1060, 1081, 1133, 1149, 1172, 1179, 1310, 1416, 1900, 1903, 1913], "abil": [761, 764], "calc_wakes_spsel_x_r": [761, 762, 771, 773, 776, 780, 809, 815, 821, 858, 864, 871], "calc_wakes_spsel_x_yz": [761, 763, 764, 766, 771, 776, 809, 815, 821, 828, 831, 858, 864, 871], "n_r_per_x": [762, 773, 779, 780, 813, 819, 862], "n_sp_sel": [762, 763, 766, 772, 773, 778, 780, 812, 818, 824, 831, 861, 867, 874], "sp_sel": [762, 763, 766, 772, 773, 778, 780, 812, 818, 824, 831, 835, 848, 861, 867, 874], "non": [762, 763, 766, 772, 773, 778, 780, 812, 818, 824, 831, 861, 867, 874, 1001, 1017, 1025, 1052, 1055, 1058, 1060, 1076, 1077, 1080, 1081, 1088, 1089, 1143, 1151, 1153, 1240, 1281, 1293, 1303, 1304, 1305, 1321, 1324, 1325, 1390, 1397, 1402, 1597, 1638, 1671, 1683, 1721, 1773, 1786, 1804, 1827, 1897, 1903, 1904, 1905], "yz": [763, 764, 766, 831, 954, 957, 960, 980, 981, 985, 989, 992, 1900, 1903], "n_yz_per_x": [763, 766, 831], "denpend": [764, 1900], "superp": 764, "gaussianwakemodel": [771, 772, 773, 821, 864, 871, 1900], "gaussian": [771, 864, 1151, 1281, 1429, 1900], "calc_amplitude_sigma_spsel": [771, 772, 821, 824, 864, 867, 871, 874], "amplitud": [771, 772, 821, 824, 864, 867, 871, 874, 1230, 1294, 1370, 1401], "sigma": [771, 772, 821, 824, 864, 867, 871, 874, 1903], "amsi": [772, 824, 867, 874], "groundmirror": [774, 775, 1900], "wakemirror": [774, 775, 783, 784, 785, 786, 787, 788, 1900, 1903], "reflect": [774, 783, 784, 1132, 1159, 1167, 1294, 1306, 1313, 1401, 1900, 1903, 1907, 1913, 1916, 1918, 1921], "tophatwakemodel": [776, 777, 778, 779, 780, 781, 782, 809, 815, 858, 1900], "betz": [776, 777, 1903, 1911], "calc_wake_radiu": [776, 779, 809, 813, 815, 819, 858, 862], "calc_centreline_wake_delta": [776, 778, 809, 812, 815, 818, 858, 861], "wake_r": [778, 779, 812, 813, 818, 819, 861, 862], "cl_del": [778, 812, 818, 861], "varlu": [778, 812, 818, 861], "rankinehalfbodi": [789, 790, 791, 792, 793, 794, 795, 1900, 1903, 1907, 1911], "rankin": [789, 1900, 1903, 1906, 1907], "half": [789, 976, 978, 1135, 1140, 1144, 1148, 1175, 1176, 1277, 1314, 1408, 1410, 1428, 1429, 1485, 1897, 1900, 1903, 1906, 1907], "bodi": [789, 1151, 1153, 1428, 1429, 1900, 1903, 1906, 1907], "superpos": [789, 796, 802, 808], "b": [789, 1017, 1029, 1034, 1060, 1074, 1122, 1151, 1174, 1281, 1310, 1331, 1333, 1334, 1335, 1339, 1342, 1347, 1353, 1354, 1383, 1433, 1683, 1721, 1904, 1906], "gribben": [789, 1906], "hawk": [789, 1906], "potenti": [789, 1277, 1906], "flow": [789, 954, 955, 956, 957, 958, 959, 960, 980, 985, 987, 988, 989, 990, 991, 992, 1001, 1017, 1410, 1896, 1902, 1903, 1904, 1906, 1907, 1912, 1913, 1916, 1917, 1918], "blockag": [789, 796, 802, 808, 1900, 1902, 1903, 1904], "techinc": 789, "paper": [789, 1904], "frazer": 789, "nash": 789, "consult": 789, "2019": [789, 815, 816, 1906], "www": [789, 796, 802, 808, 1453], "fnc": 789, "co": [789, 1081, 1921], "uk": 789, "media": 789, "o5eosxa": 789, "pdf": [789, 815, 864, 871, 910, 1281, 1304, 1418], "rathmann": [796, 797, 798, 799, 800, 801, 1900, 1903, 1906, 1911], "forst": [796, 802, 808, 1900, 1906], "alexand": [796, 802, 808, 1906], "meyer": [796, 802, 808, 1900, 1906], "et": [796, 802, 808, 1906], "al": [796, 802, 808, 1906], "On": [796, 802, 808, 1281, 1916], "accuraci": [796, 802, 808], "predict": [796, 802, 808], "renew": [796, 802, 808], "energi": [796, 802, 808, 1904, 1912, 1913], "2023": [796, 802, 808, 1901, 1908, 1918], "sciencedirect": [796, 802, 808], "com": [796, 802, 808, 1403, 1451, 1453, 1828, 1903, 1904, 1905, 1922], "scienc": [796, 802, 808], "articl": [796, 802, 808, 864, 871, 1901], "pii": [796, 802, 808], "s0960148123007620": [796, 802, 808], "pre_rotor_onli": [796, 797, 802, 803, 808], "region": [796, 797, 802, 803, 829, 835, 850, 1017, 1174, 1175, 1176, 1417, 1418, 1903, 1906, 1907], "selfsimilar": [802, 803, 804, 805, 806, 807, 808, 1900, 1903, 1906, 1911], "similar": [802, 808, 1142, 1175, 1176, 1278, 1303, 1304, 1305, 1311, 1401, 1900, 1906, 1909], "troldborg": [802, 808, 1900, 1906], "niel": [802, 808, 1906], "raul": [802, 808, 1906], "zone": [802, 808, 1311, 1808, 1826, 1907], "20": [802, 808, 1172, 1294, 1401, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1918, 1919, 1920], "12": [802, 808, 1172, 1310, 1413, 1907, 1908, 1910, 1914, 1915, 1916, 1917, 1918, 1920, 1921], "2017": [802, 808, 1906, 1908, 1919], "2011": [802, 808], "onlinelibrari": [802, 808], "wilei": [802, 808, 1159, 1167, 1313], "full": [802, 808, 1102, 1105, 1122, 1132, 1135, 1140, 1143, 1144, 1148, 1151, 1153, 1159, 1167, 1172, 1273, 1281, 1294, 1306, 1309, 1310, 1311, 1313, 1377, 1402, 1408, 1433, 1453, 1502, 1503, 1903, 1908, 1912], "1002": [802, 808], "2137": [802, 808], "selfsimilar2020": [808, 1900, 1903, 1906, 1907, 1911], "crespohernandeztiwak": [809, 810, 811, 812, 813, 814, 1900, 1903, 1911], "crespo": [809, 1900], "hernandez": [809, 1900], "empir": [809, 1900], "correl": [809, 1017, 1122, 1433, 1683, 1721, 1900], "characterist": 809, "j": [809, 821, 864, 1151, 1303, 1305, 1683, 1721], "1016": [809, 821], "0167": 809, "6105": 809, "95": [809, 1151, 1907, 1908, 1910, 1918, 1920], "00033": 809, "eqn": 809, "17": [809, 1908, 1910, 1914, 1920], "15": [809, 1151, 1153, 1172, 1285, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1918, 1919, 1920], "1088": [809, 864, 871], "1742": [809, 864, 871], "6596": [809, 864, 871], "625": 809, "012039": 809, "a_near": [809, 810], "a_far": [809, 810], "e1": [809, 810], "e2": [809, 810], "e3": [809, 810], "use_ambti": [809, 810], "sbeta_factor": [809, 810, 821, 822, 864, 865, 871, 872, 1903, 1910], "sbeta": [809, 810, 821, 822, 864, 865, 871, 872, 1903], "near_wake_d": [809, 810], "362": 810, "73": [810, 1907, 1910, 1918], "83": [810, 1683, 1721, 1910, 1918, 1919], "0325": 810, "32": [810, 1910, 1918, 1919], "iectiwak": [815, 816, 817, 818, 819, 820, 1900, 1911], "iec": [815, 1900], "64100": [815, 1900], "2005": [815, 1900], "8": [815, 865, 910, 925, 927, 932, 978, 1017, 1149, 1285, 1310, 1387, 1394, 1453, 1900, 1901, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "orbit": 815, "dtu": [815, 1907, 1916, 1918], "dk": 815, "3750291": 815, "2009_31": 815, "v2": 815, "volluk": 815, "document": [815, 1017, 1118, 1151, 1157, 1278, 1281, 1385, 1392, 1683, 1721, 1893, 1903], "frandsen": [815, 864, 865, 1903], "opening_angl": [815, 816], "open": [815, 816, 1146, 1277, 1411, 1453, 1901, 1903], "angl": [815, 816, 851, 1017, 1025, 1053, 1060, 1081, 1132, 1149, 1283, 1294, 1306, 1309, 1314, 1315, 1359, 1362, 1376, 1377, 1401, 1791, 1792, 1846, 1847, 1876, 1877, 1899, 1909, 1921], "21": [815, 816, 1908, 1910, 1914, 1919], "6": [815, 816, 1146, 1150, 1163, 1164, 1172, 1222, 1309, 1310, 1407, 1415, 1683, 1721, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "iec_typ": [815, 816], "bastankhah2014": [821, 822, 823, 824, 825, 826, 827, 1900, 1903, 1907, 1910, 1911, 1916, 1918], "2014": [821, 1900], "analyt": [821, 1502, 1505, 1523, 1525, 1532, 1543, 1559, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "renen": 821, "002": 821, "bastankhah2016": [828, 829, 830, 831, 832, 833, 834, 1900, 1903, 1907, 1911], "beyond": [829, 1151, 1153], "9999": 829, "alpha": [829, 835, 850, 1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1185, 1273, 1276, 1278, 1281, 1283, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1326, 1329, 1402, 1410, 1411, 1413, 1417, 1418, 1419, 1861, 1899, 1907, 1910, 1916], "determin": [829, 835, 850, 948, 1018, 1020, 1122, 1133, 1151, 1175, 1176, 1273, 1274, 1276, 1281, 1310, 1314, 1321, 1356, 1357, 1380, 1402, 1413, 1417, 1418, 1433, 1903, 1913], "onset": [829, 835, 850], "far": [829, 835, 850, 1140, 1903], "beta": [829, 835, 850, 1862, 1899, 1903], "repetit": [835, 1900], "avoid": [835, 1034, 1090, 1096, 1112, 1115, 1172, 1327, 1380, 1683, 1721, 1900, 1907, 1921], "mdata_kei": [835, 841], "x0": [835, 849, 1277, 1283, 1285, 1417, 1418, 1827, 1897], "NEAR": [835, 842], "r_pc": [835, 844], "r_pc_": [835, 845], "ampl_near": [835, 837], "delta_near": [835, 840], "ampl_far": [835, 836], "sigma_y_far": [835, 846], "sigma_z_far": [835, 847], "delta_far": [835, 839], "58": [835, 850, 1908, 1910, 1914, 1918], "calc_data": [835, 851], "has_data": [835, 854, 1017, 1274], "clean": [835, 852], "gamma": [851, 1278, 1921], "radiant": [851, 1921], "jensenwak": [858, 859, 860, 861, 862, 863, 1900, 1911], "jensen": [858, 1683, 1721, 1900, 1911], "turboparkwak": [864, 865, 866, 867, 868, 869, 870, 1900, 1903, 1911], "turbopark": [864, 871, 1900, 1903], "optim": [864, 1503, 1510, 1524, 1526, 1532, 1533, 1544, 1550, 1552, 1556, 1567, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1609, 1612, 1617, 1618, 1620, 1625, 1626, 1627, 1637, 1638, 1642, 1647, 1652, 1657, 1667, 1673, 1679, 1683, 1685, 1692, 1698, 1704, 1710, 1716, 1719, 1721, 1722, 1732, 1742, 1752, 1766, 1767, 1772, 1773, 1775, 1777, 1785, 1786, 1787, 1788, 1791, 1798, 1803, 1804, 1882, 1888, 1893, 1894, 1895, 1901, 1902, 1903, 1904], "park": 864, "pedersen": 864, "svensson": 864, "l": [864, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1212, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "poulsen": 864, "nygaard": 864, "iopscienc": [864, 871], "iop": [864, 871], "2265": [864, 871], "022063": [864, 871], "c1": [864, 865, 1697, 1698], "c2": [864, 865, 1407, 1697, 1698], "turboparkwakeix": [871, 872, 873, 874, 875, 876, 877, 878, 1900, 1911], "over": [871, 934, 939, 940, 969, 976, 978, 1017, 1147, 1149, 1152, 1159, 1167, 1172, 1214, 1277, 1299, 1307, 1313, 1327, 1352, 1356, 1358, 1401, 1411, 1417, 1418, 1419, 1451, 1683, 1721, 1853, 1899, 1900, 1903, 1910, 1916, 1920], "own": [871, 872, 1278, 1917], "tilinear": [879, 880, 881, 882, 1892, 1911], "superp_to_amb": [879, 880, 883, 884, 887, 888, 891, 892], "quadrat": [879, 880, 883, 884, 887, 888, 891, 892, 915, 1892], "timax": [883, 884, 885, 886, 1892, 1911], "tipow": [887, 888, 889, 890, 1892, 1911], "tiquadrat": [891, 892, 893, 894, 1892, 1903, 1911], "wslinear": [895, 896, 897, 898, 899, 1892, 1903, 1911], "supersposit": [895, 900, 905, 910, 915, 1892], "deficit": [895, 896, 900, 901, 905, 906, 910, 915, 916, 1892, 1900, 1903, 1906, 1907, 1910, 1913, 1919, 1920, 1921], "scale_amb": [895, 896, 900, 901, 905, 906, 915, 916], "scale": [895, 896, 900, 901, 905, 906, 915, 916, 1017, 1060, 1063, 1081, 1090, 1101, 1112, 1117, 1132, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1188, 1230, 1254, 1268, 1273, 1276, 1277, 1278, 1281, 1283, 1293, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1326, 1332, 1370, 1388, 1395, 1401, 1402, 1410, 1411, 1413, 1417, 1418, 1608, 1609, 1618, 1626, 1697, 1698, 1906, 1907, 1909, 1916, 1918], "lim_low": [895, 896, 900, 901, 905, 906, 910, 911, 915, 916], "lim_high": [895, 896, 900, 901, 905, 906, 910, 911, 915, 916], "input_farm_var": [895, 899, 900, 904, 905, 909, 910, 914, 915, 919], "wsmax": [900, 901, 902, 903, 904, 1892, 1911], "wspow": [905, 906, 907, 908, 909, 1892, 1911], "wsproduct": [910, 911, 912, 913, 914, 1892, 1911], "product": [910, 1167, 1683, 1721, 1892], "dimensionless": 910, "rescal": 910, "rather": [910, 1034, 1173, 1277, 1314], "equival": [910, 1052, 1055, 1057, 1058, 1076, 1077, 1079, 1080, 1088, 1089, 1167, 1212, 1276, 1285, 1310, 1386, 1393, 1399, 1400, 1913, 1919, 1921], "arxiv": 910, "2010": 910, "03873": 910, "equat": [910, 1903], "wsquadrat": [915, 916, 917, 918, 919, 1892, 1911], "anim": [920, 921, 922, 923, 924, 934, 949, 955, 956, 957, 958, 959, 960, 980, 1001, 1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1187, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1331, 1402, 1411, 1413, 1896, 1903, 1916, 1918], "yield": [920, 922, 924, 934, 941, 948, 1277, 1310, 1370, 1848, 1878, 1896, 1899, 1901, 1903, 1904, 1912, 1913, 1919, 1920], "artist": [920, 922, 924, 949, 1017, 1018, 1020, 1122, 1123, 1124, 1132, 1133, 1136, 1138, 1139, 1140, 1143, 1144, 1151, 1153, 1159, 1161, 1165, 1166, 1167, 1169, 1170, 1172, 1177, 1179, 1187, 1193, 1195, 1197, 1199, 1201, 1204, 1209, 1210, 1214, 1218, 1220, 1221, 1230, 1237, 1239, 1272, 1273, 1274, 1277, 1281, 1284, 1288, 1294, 1295, 1299, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1317, 1318, 1331, 1339, 1341, 1342, 1343, 1346, 1348, 1349, 1352, 1356, 1358, 1360, 1361, 1381, 1382, 1383, 1398, 1402, 1403, 1405, 1409, 1410, 1421, 1422, 1423, 1426, 1433, 1896, 1903], "fig": [920, 921, 922, 924, 927, 934, 949, 955, 956, 957, 958, 959, 960, 978, 1001, 1017, 1182, 1209, 1237, 1285, 1346, 1349, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "pyplot": [920, 921, 923, 927, 978, 995, 1000, 1163, 1164, 1281, 1290, 1304, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1534, 1545, 1555, 1726, 1736, 1746, 1756, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "figur": [920, 921, 925, 927, 949, 954, 955, 956, 957, 958, 959, 960, 974, 978, 996, 1001, 1017, 1132, 1133, 1134, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1182, 1194, 1204, 1209, 1219, 1222, 1237, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1318, 1326, 1331, 1340, 1346, 1349, 1357, 1362, 1376, 1389, 1396, 1402, 1411, 1413, 1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495, 1502, 1523, 1525, 1532, 1534, 1543, 1545, 1550, 1555, 1594, 1608, 1617, 1619, 1625, 1627, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1766, 1775, 1791, 1903, 1906, 1907, 1910, 1912, 1917, 1919], "add_gener": [920, 922, 1916, 1918], "gen": [920, 922, 924], "verbostii": 923, "artistanim": 923, "farmlayoutoutput": [925, 926, 927, 928, 929, 930, 931, 932, 933, 1896, 1903, 1907, 1908, 1910, 1912, 1915, 1916, 1919, 1920], "plot": [925, 927, 930, 931, 932, 933, 954, 955, 956, 957, 958, 959, 960, 974, 978, 979, 980, 981, 993, 995, 996, 998, 1000, 1001, 1017, 1122, 1132, 1133, 1140, 1142, 1143, 1144, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1199, 1200, 1276, 1277, 1278, 1279, 1281, 1283, 1285, 1292, 1293, 1294, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1324, 1325, 1358, 1362, 1376, 1386, 1393, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1417, 1419, 1420, 1426, 1428, 1429, 1430, 1433, 1455, 1465, 1473, 1480, 1487, 1495, 1726, 1736, 1746, 1756, 1896, 1903, 1906, 1907, 1909, 1910, 1914, 1915, 1917, 1919, 1920, 1921], "layout": [925, 927, 928, 929, 930, 931, 932, 933, 1017, 1209, 1349, 1403, 1502, 1523, 1525, 1532, 1534, 1543, 1545, 1550, 1555, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1888, 1893, 1896, 1902, 1903, 1904, 1916, 1918, 1919], "from_r": [925, 926], "results_st": [925, 926], "from_result": [925, 926], "get_layout_data": [925, 928], "get_layout_dict": [925, 929], "get_figur": [925, 927, 932, 974, 978, 979, 996, 1017, 1204, 1907, 1908, 1910, 1912, 1915, 1916, 1919, 1920], "color_bi": [925, 927, 1912, 1919, 1920], "fontsiz": [925, 927, 932, 1380, 1389, 1396, 1411, 1413], "figsiz": [925, 927, 934, 949, 955, 956, 957, 958, 959, 960, 978, 993, 995, 1000, 1001, 1017, 1182, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1920], "annot": [925, 927, 1017, 1133, 1135, 1147, 1912, 1916, 1919, 1920], "write_plot": [925, 932], "write_xyh": [925, 933], "write_csv": [925, 930, 970, 972], "write_json": [925, 931], "get_fpath": [925, 934, 954, 961, 963, 967, 970, 974, 985, 993, 996, 998], "fname": [925, 934, 954, 961, 962, 963, 967, 970, 974, 985, 993, 996, 998, 1017, 1209, 1349, 1807, 1808, 1809, 1897], "format_col2var": [925, 934, 954, 961, 966, 967, 970, 974, 985, 993, 996, 998], "format_dict": [925, 934, 954, 961, 966, 967, 970, 974, 985, 993, 996, 998, 1010, 1016], "print_model": [925, 934, 954, 961, 965, 967, 970, 974, 985, 993, 996, 998, 1502, 1523, 1525, 1532, 1540, 1543, 1548, 1608, 1617, 1619, 1625], "titl": [927, 955, 956, 957, 958, 959, 960, 977, 978, 993, 995, 998, 1000, 1001, 1017, 1237, 1238, 1326, 1380, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1901, 1903, 1906, 1907, 1908, 1912, 1914, 1915, 1916, 1918, 1919, 1920], "ax": [927, 934, 949, 955, 956, 957, 958, 959, 960, 993, 995, 1000, 1001, 1017, 1018, 1020, 1036, 1060, 1081, 1090, 1093, 1096, 1102, 1104, 1115, 1118, 1122, 1123, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1149, 1150, 1154, 1155, 1156, 1158, 1162, 1163, 1164, 1165, 1166, 1172, 1174, 1182, 1183, 1186, 1188, 1194, 1202, 1205, 1208, 1212, 1213, 1215, 1219, 1222, 1228, 1229, 1237, 1238, 1243, 1244, 1251, 1258, 1265, 1274, 1277, 1278, 1279, 1281, 1282, 1283, 1284, 1285, 1290, 1292, 1293, 1295, 1296, 1297, 1298, 1303, 1304, 1305, 1309, 1310, 1311, 1314, 1315, 1316, 1318, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1340, 1341, 1342, 1344, 1347, 1353, 1357, 1358, 1364, 1380, 1385, 1389, 1390, 1392, 1396, 1397, 1399, 1400, 1401, 1402, 1403, 1408, 1410, 1411, 1413, 1415, 1416, 1419, 1420, 1421, 1422, 1424, 1430, 1433, 1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495, 1502, 1523, 1525, 1532, 1534, 1543, 1545, 1550, 1555, 1594, 1608, 1617, 1619, 1625, 1627, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1766, 1775, 1791, 1897, 1906, 1907, 1908, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920], "normalize_d": 927, "ret_im": [927, 949, 955, 956, 957, 958, 959, 960, 1001, 1916, 1918], "barg": [927, 1726, 1736, 1746, 1756], "anno_delx": [927, 1916], "anno_d": [927, 1916], "scatter": [927, 949, 1017, 1310, 1321, 1903], "color": [927, 955, 956, 957, 958, 959, 960, 1001, 1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1152, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1175, 1176, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1294, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1326, 1344, 1345, 1358, 1380, 1402, 1403, 1407, 1408, 1410, 1411, 1413, 1415, 1417, 1418, 1419, 1430, 1455, 1465, 1473, 1480, 1487, 1495, 1903, 1919], "mean_rew": [927, 1912, 1919, 1920], "etc": [927, 1017, 1132, 1143, 1146, 1150, 1159, 1163, 1164, 1167, 1237, 1276, 1278, 1281, 1294, 1303, 1304, 1305, 1306, 1313, 1314, 1316, 1321, 1330, 1332, 1401, 1410, 1417, 1418, 1903, 1910, 1912], "wrt": [927, 934, 943, 944, 945, 946, 947, 1454, 1459, 1461, 1463, 1469, 1471, 1476, 1478, 1483, 1485, 1491, 1493, 1499, 1559, 1569], "plt": [927, 949, 955, 956, 957, 958, 959, 960, 995, 1000, 1001, 1277, 1285, 1310, 1453, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "No": [927, 1149, 1172, 1276, 1303, 1305, 1321, 1907], "matplotlib": [927, 949, 955, 956, 957, 958, 959, 960, 978, 1001, 1017, 1018, 1020, 1025, 1031, 1054, 1060, 1063, 1081, 1082, 1090, 1097, 1102, 1112, 1122, 1132, 1133, 1134, 1138, 1140, 1141, 1142, 1144, 1145, 1146, 1148, 1150, 1151, 1153, 1159, 1161, 1163, 1164, 1167, 1172, 1174, 1179, 1183, 1186, 1194, 1199, 1237, 1243, 1245, 1246, 1247, 1255, 1259, 1260, 1261, 1269, 1273, 1276, 1277, 1278, 1279, 1281, 1285, 1290, 1294, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1326, 1327, 1330, 1331, 1332, 1340, 1343, 1357, 1358, 1362, 1376, 1380, 1385, 1388, 1392, 1395, 1401, 1402, 1404, 1410, 1411, 1413, 1417, 1418, 1420, 1421, 1422, 1429, 1430, 1433, 1453, 1455, 1465, 1473, 1478, 1480, 1487, 1495, 1534, 1545, 1555, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "im": [927, 949, 955, 956, 957, 958, 959, 960, 1001, 1401], "pathcollect": [927, 949, 1321], "farmresultsev": [934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 1896, 1903, 1912, 1914, 1918, 1919, 1920], "farm_calc": 934, "weinsum": [934, 953], "rh": [934, 953], "einstein": [934, 953, 1903], "reduce_st": [934, 951, 1919], "vars_op": [934, 951, 952], "some": [934, 950, 951, 952, 1017, 1034, 1056, 1078, 1096, 1102, 1104, 1111, 1115, 1142, 1175, 1176, 1281, 1304, 1314, 1356, 1390, 1397, 1408, 1450, 1683, 1721, 1897, 1907, 1910, 1913, 1914, 1916, 1921], "reduce_turbin": [934, 952], "reduce_al": [934, 950], "states_op": [934, 950], "turbines_op": [934, 950], "calc_states_mean": [934, 943], "calc_states_sum": [934, 945], "calc_states_std": [934, 944], "deviat": [934, 944, 1310], "calc_turbine_mean": [934, 946], "calc_turbine_sum": [934, 947], "calc_farm_mean": [934, 939], "calc_farm_sum": [934, 940], "calc_mean_farm_pow": [934, 942, 1912, 1914, 1919, 1920], "calc_turbine_yield": [934, 941, 948, 1919], "annual": [934, 948, 1912, 1919, 1920], "add_capac": [934, 936, 1919], "p_nom": [934, 936], "capac": [934, 936, 1835, 1849, 1899, 1903, 1919], "calc_farm_yield": [934, 941, 1912, 1920], "turbine_yield": [934, 941], "power_uncert": [934, 941], "p75": [934, 941, 1903], "p90": [934, 941, 1903], "add_effici": [934, 937, 1919, 1920], "effici": [934, 937, 938, 1017, 1159, 1167, 1170, 1313, 1316, 1343, 1401, 1683, 1721, 1852, 1899, 1903, 1912, 1914, 1919, 1920], "calc_farm_effici": [934, 938, 1912, 1919, 1920], "gen_stdata": [934, 949, 1918], "eff": [938, 1010, 1012, 1852, 1899, 1919], "fulli": [939, 940, 950, 1081, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1904], "contract": [939, 940, 950, 1608, 1609, 1618, 1626], "uncertainti": 941, "trigger": [941, 1025, 1043, 1060, 1081, 1302, 1453], "farm_yield": 941, "_type_": 944, "_description_": 944, "hour": 948, "delta_t": 948, "p_unit_w": 948, "retur": 948, "durat": 948, "datetime64": [948, 1311, 1916, 1918], "gwh": [948, 1848, 1878, 1899, 1912, 1919, 1920], "legloc": [949, 1918], "right": [949, 953, 1017, 1060, 1132, 1133, 1135, 1140, 1143, 1144, 1148, 1159, 1167, 1172, 1175, 1176, 1238, 1245, 1246, 1251, 1259, 1260, 1273, 1277, 1281, 1284, 1289, 1290, 1294, 1306, 1310, 1311, 1313, 1314, 1315, 1322, 1323, 1330, 1332, 1380, 1385, 1386, 1401, 1402, 1408, 1411, 1413, 1415, 1421, 1432, 1435, 1453, 1906], "legend": [949, 977, 978, 1017, 1210, 1211, 1212, 1277, 1285, 1290, 1309, 1310, 1318, 1326, 1350, 1407, 1906, 1907], "It": [953, 1022, 1032, 1034, 1044, 1070, 1086, 1119, 1122, 1124, 1132, 1133, 1137, 1143, 1159, 1167, 1276, 1278, 1281, 1294, 1303, 1304, 1305, 1306, 1310, 1313, 1321, 1384, 1391, 1401, 1403, 1408, 1417, 1418, 1419, 1433, 1904, 1905, 1909, 1912, 1914, 1915], "about": [953, 1148, 1153, 1314, 1321, 1428, 1429, 1453, 1910, 1914], "hand": [953, 1034, 1903], "einsum": [953, 1550, 1586, 1587, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "express": [953, 1671], "convent": [953, 1281, 1303, 1305, 1402, 1451, 1683, 1721], "mention": [953, 1388, 1395, 1908, 1912], "obligatori": 953, "flowplots2d": [954, 955, 956, 957, 958, 959, 960, 1896, 1903, 1906, 1907, 1909, 1910, 1912, 1917, 1918, 1920, 1921], "slicedata": [954, 955, 956, 957, 958, 959, 960, 985, 986, 987, 988, 989, 990, 991, 992, 1896, 1903], "2d": [954, 955, 956, 957, 958, 959, 960, 980, 985, 987, 988, 989, 990, 991, 992, 1017, 1148, 1151, 1173, 1276, 1277, 1278, 1281, 1296, 1303, 1304, 1305, 1310, 1314, 1321, 1401, 1402, 1410, 1411, 1424, 1454, 1478, 1485, 1896, 1897, 1903, 1906, 1920], "get_mean_fig_xi": [954, 958, 1910, 1920], "xlabel": [954, 955, 956, 958, 959, 1001, 1017, 1237, 1250, 1310, 1326, 1385], "ylabel": [954, 955, 957, 958, 960, 1001, 1017, 1237, 1264, 1310, 1326, 1392], "get_mean_fig_xz": [954, 959], "x_direct": [954, 956, 957, 959, 960, 988, 989, 991, 992, 1912], "270": [954, 956, 957, 959, 960, 988, 989, 991, 992, 1903, 1906, 1907, 1908, 1912, 1914, 1917, 1921], "xz": [954, 956, 959, 980, 981, 985, 988, 991, 1903], "get_mean_fig_yz": [954, 960], "gen_states_fig_xi": [954, 955, 1906, 1907, 1909, 1917, 1918, 1921], "gen_states_fig_xz": [954, 956, 1907, 1912], "gen_states_fig_yz": [954, 957, 1921], "runner": [954, 980, 981, 985, 986, 1550, 1552, 1594, 1766, 1776, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1903, 1907, 1910, 1916, 1918, 1919, 1920], "get_mean_data_xi": [954, 958, 985, 987], "resolut": [954, 985, 987, 988, 989, 990, 991, 992, 1132, 1159, 1167, 1294, 1306, 1313, 1401, 1906, 1907, 1909, 1910, 1912, 1916, 1917, 1918, 1920, 1921], "get_mean_data_xz": [954, 959, 985, 988], "get_mean_data_yz": [954, 960, 985, 989], "get_states_data_xi": [954, 955, 985, 990], "get_states_data_xz": [954, 956, 985, 991], "get_states_data_yz": [954, 957, 985, 992], "vlabel": [955, 956, 957, 958, 959, 960, 1001], "add_bar": [955, 956, 957, 958, 959, 960, 1001], "cmap": [955, 956, 957, 958, 959, 960, 1001, 1017, 1146, 1148, 1150, 1152, 1163, 1164, 1175, 1176, 1276, 1278, 1281, 1303, 1304, 1305, 1314, 1321, 1401, 1402, 1410, 1417, 1418, 1419, 1914], "vmin": [955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1001, 1017, 1090, 1096, 1100, 1101, 1112, 1117, 1148, 1152, 1175, 1176, 1276, 1278, 1281, 1303, 1304, 1305, 1314, 1321, 1401, 1417, 1418, 1419, 1906, 1907, 1914, 1916, 1918], "vmax": [955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1001, 1090, 1096, 1100, 1101, 1112, 1117, 1148, 1152, 1175, 1176, 1276, 1278, 1281, 1303, 1304, 1305, 1314, 1321, 1401, 1417, 1418, 1419, 1906, 1907, 1914, 1916, 1918], "quiver_n": [955, 956, 957, 958, 959, 960, 1907, 1909, 1916, 1918], "quiver_par": [955, 956, 957, 958, 959, 960, 1907, 1909, 1916, 1918], "ret_stat": [955, 956, 957, 958, 959, 960, 987, 988, 989, 990, 991, 992, 1001], "rotor_color": [955, 956, 957], "contourf": [955, 956, 957, 958, 959, 960, 1001, 1017, 1164], "pure": [955, 956, 957, 958, 959, 960, 1641, 1646, 1651, 1656, 1662, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1722, 1732, 1894, 1895, 1903], "bar": [955, 956, 957, 958, 959, 960, 978, 1001, 1017, 1146, 1147, 1149, 1150, 1172, 1199, 1276, 1277, 1683, 1721, 1726, 1736, 1746, 1756, 1810, 1811, 1920], "colormap": [955, 956, 957, 958, 959, 960, 1132, 1146, 1148, 1150, 1152, 1163, 1164, 1175, 1176, 1276, 1278, 1281, 1294, 1303, 1304, 1305, 1306, 1313, 1314, 1321, 1401, 1410, 1417, 1418], "th": [955, 956, 957, 958, 959, 960, 1683, 1721, 1903], "quiver": [955, 956, 957, 958, 959, 960, 1001, 1017, 1148, 1314, 1315], "usag": [955, 956, 957, 958, 959, 960, 1001, 1149, 1172, 1903], "orient": [955, 956, 957, 980, 981, 1017, 1173, 1277, 1303, 1305, 1314, 1322, 1323, 1404, 1407, 1417, 1418, 1432, 1435, 1915, 1916], "si": [955, 956, 957, 958, 959, 960, 1001, 1916, 1918], "quadmesh": [955, 956, 957, 958, 959, 960, 1001, 1278, 1304, 1305], "quadcontourset": [955, 956, 957, 958, 959, 960, 1001], "zlabel": [956, 957, 959, 960], "north": [956, 957, 959, 960, 988, 989, 991, 992, 1146, 1150, 1163, 1164, 1915], "ech": [956, 957], "ret_data": [958, 959, 960, 974, 978, 979, 996], "n_x": [958, 959, 960, 1001, 1276], "n_y": [958, 959, 960, 1001, 1276], "job": 961, "handi": 961, "out_dir": [961, 962], "out_fname_fun": [961, 962], "fpath": [963, 1834], "underli": [966, 1502, 1503, 1506, 1523, 1524, 1525, 1526, 1527, 1532, 1533, 1535, 1543, 1544, 1608, 1609, 1610, 1617, 1618, 1619, 1620, 1621, 1625, 1626, 1641, 1642, 1643, 1646, 1647, 1648, 1651, 1652, 1653, 1656, 1657, 1658, 1662, 1664, 1667, 1672, 1673, 1674, 1678, 1679, 1680, 1684, 1685, 1686, 1691, 1692, 1693, 1697, 1698, 1699, 1703, 1704, 1705, 1709, 1710, 1711, 1715, 1716, 1718, 1719], "fv": [966, 1000, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "4f": [966, 1010, 1012, 1016], "pointcalcul": [967, 968, 969, 1896, 1903], "states_mean": [967, 969], "weight_turbin": [967, 969, 987, 988, 989], "to_fil": [969, 987, 988, 989, 990, 991, 992], "write_var": 969, "write_par": [969, 987, 988, 989, 990, 991, 992], "write_nc": [969, 970, 973, 1834], "resultswrit": [970, 971, 972, 973, 1896, 1903], "state_turbine_t": 972, "roseplotoutput": [974, 975, 976, 977, 978, 979, 996, 1896, 1903, 1915], "rose": [974, 976, 978, 979, 996, 1017, 1146, 1150, 1163, 1164, 1896, 1897, 1902, 1903, 1904, 1908, 1910, 1915, 1919], "get_data_info": [974, 977, 996], "dname": [974, 977, 996], "descript": [974, 977, 996, 1133, 1134, 1137, 1142, 1183, 1186, 1194, 1277, 1281, 1303, 1304, 1305, 1310, 1327, 1330, 1332, 1340, 1408, 1410, 1882, 1883, 1891, 1892, 1893, 1900], "sector": [974, 976, 978, 979, 996, 1017, 1146, 1150, 1163, 1164, 1809, 1902, 1903, 1904, 1913, 1919], "var_bin": [974, 976, 978, 979, 996], "write_figur": [974, 979, 996], "start0": [976, 978], "bin": [976, 978, 979, 1017, 1146, 1150, 1163, 1164, 1276, 1277, 1278, 1401, 1453, 1897, 1903, 1905, 1908, 1919, 1920], "seper": [976, 978, 979], "relev": [976, 978, 1175, 1176, 1281, 1402, 1417, 1418, 1892, 1900, 1907], "degre": [976, 978, 1017, 1053, 1102, 1112, 1223, 1235, 1236, 1309, 1314, 1315, 1323, 1326, 1362, 1363, 1375, 1376, 1377, 1378, 1379, 1451, 1831, 1832, 1844, 1846, 1847, 1871, 1876, 1877, 1897, 1899, 1903, 1906, 1907, 1921], "minu": [976, 978, 1102, 1104], "width": [976, 978, 1017, 1133, 1135, 1148, 1149, 1151, 1153, 1163, 1164, 1173, 1194, 1277, 1283, 1285, 1309, 1314, 1326, 1332, 1340, 1357, 1371, 1401, 1410, 1411, 1415, 1417, 1428, 1429, 1903], "pd": [976, 978, 979, 1453, 1906, 1914, 1915, 1921], "long": [977, 1017, 1081, 1106, 1143, 1314, 1322, 1323, 1903], "text": [977, 1017, 1133, 1147, 1238, 1245, 1246, 1250, 1252, 1253, 1255, 1259, 1260, 1264, 1266, 1267, 1269, 1290, 1309, 1315, 1321, 1362, 1376, 1380, 1385, 1389, 1390, 1392, 1396, 1397, 1411, 1413, 1414, 1453], "rect": [978, 1017, 1182, 1283, 1285, 1915], "contour": [978, 1001, 1017, 1157, 1163, 1417, 1418, 1903], "newli": [978, 1421, 1422], "rectangl": [978, 1017, 1140, 1141, 1144, 1145, 1149, 1152, 1205, 1276, 1283, 1284, 1332, 1339, 1343, 1347, 1413, 1909], "tabwindroseax": [978, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1897, 1903], "seqflowanimationplugin": [980, 981, 982, 983, 984, 1896, 1916], "yx": [980, 981], "gen_imag": [980, 982, 1916], "data_format": [987, 988, 989, 990, 991, 992], "xmin": [987, 988, 990, 991, 1017, 1140, 1141, 1142, 1145, 1152, 1276, 1278, 1279, 1304, 1386, 1401, 1409, 1411, 1907, 1909, 1910, 1912, 1916, 1921], "ymin": [987, 989, 990, 992, 1017, 1141, 1142, 1144, 1145, 1152, 1276, 1278, 1304, 1393, 1409, 1411, 1430, 1907, 1909, 1910, 1916, 1921], "xmax": [987, 988, 990, 991, 1017, 1140, 1141, 1142, 1145, 1276, 1278, 1279, 1304, 1386, 1401, 1409, 1907, 1909, 1910, 1912, 1916, 1918, 1921], "ymax": [987, 989, 990, 992, 1017, 1141, 1142, 1144, 1145, 1276, 1278, 1304, 1393, 1409, 1430, 1907, 1909, 1910, 1916, 1918, 1921], "xspace": [987, 988, 990, 991, 1907], "500": [987, 988, 989, 990, 991, 992, 1697, 1698, 1806, 1897, 1907, 1908, 1909, 1910, 1911, 1912, 1915, 1918, 1920], "yspace": [987, 989, 990, 992, 1907], "normalize_x": [987, 988, 989, 990, 991, 992], "normalize_i": [987, 988, 989, 990, 991, 992], "normalize_z": [987, 988, 989, 990, 991, 992], "normalize_v": [987, 988, 989, 990, 991, 992], "label_map": [987, 988, 989, 990, 991, 992], "states_isel": [987, 988, 989, 990, 991, 992], "ret_grid": [987, 988, 989, 990, 991, 992], "space": [987, 988, 989, 990, 991, 992, 1017, 1025, 1081, 1134, 1146, 1148, 1194, 1243, 1277, 1290, 1311, 1314, 1330, 1332, 1340, 1385, 1392, 1410, 1428, 1429, 1657, 1683, 1685, 1691, 1721, 1732, 1733, 1775, 1791, 1797, 1895, 1903], "grid_data": [987, 988, 989, 990, 991, 992], "x_po": [987, 988, 989, 990, 991, 992, 1001], "y_po": [987, 988, 989, 990, 991, 992, 1001], "z_po": [987, 988, 989, 990, 991, 992], "g_pt": [987, 988, 989, 990, 991, 992], "zmin": [988, 989, 991, 992, 1907, 1912, 1921], "zmax": [988, 989, 991, 992, 1907, 1912, 1921], "zspace": [988, 989, 991, 992], "stateturbinemap": [993, 994, 995, 1896, 1903, 1914], "heat": [993, 995, 1896, 1903], "plot_map": [993, 995, 1914], "subplot": [995, 1000, 1017, 1207, 1232, 1285, 1289, 1292, 1372, 1906, 1907, 1908, 1910, 1914, 1916, 1917, 1918, 1919, 1920], "pcolormesh": [995, 1017, 1278, 1303, 1304, 1305], "statesroseplotoutput": [996, 997, 1896, 1903, 1908, 1910, 1912, 1915, 1919, 1920], "ws_var": [996, 997], "amb_rew": [996, 997, 1010, 1012, 1838, 1880, 1881, 1899, 1907, 1909, 1910, 1914, 1916, 1917, 1918, 1919], "turbinetypecurv": [998, 999, 1000, 1896, 1903, 1908, 1914], "plot_curv": [998, 1000, 1908, 1914], "p_max": [998, 1000, 1454, 1457, 1461, 1463, 1467, 1471, 1474, 1478, 1481, 1485, 1489, 1493, 1497, 1910, 1914], "x_label": 1000, "y_label": 1000, "ws_min": [1000, 1915], "ws_max": [1000, 1911, 1915], "30": [1000, 1907, 1908, 1910, 1918, 1919, 1920, 1921], "ws_step": 1000, "pmax_arg": 1000, "mask": [1000, 1148, 1277, 1293, 1303, 1305, 1314, 1321, 1324, 1325, 1417, 1418, 1419, 1420, 1902, 1903, 1904, 1915], "labl": 1000, "flow_plots_2d": [1001, 1903, 1906], "get_fig": [1001, 1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756], "quiv": 1001, "invert_axi": 1001, "show_rotor_dict": 1001, "x_y": 1001, "invert": [1001, 1017, 1025, 1034, 1044, 1060, 1070, 1081, 1086, 1172, 1251, 1265, 1286, 1287, 1314, 1454, 1456, 1461, 1463, 1466, 1471, 1478, 1485, 1488, 1493, 1496, 1897], "dbase": 1002, "must": [1004, 1005, 1018, 1020, 1025, 1031, 1042, 1048, 1060, 1069, 1073, 1081, 1082, 1085, 1087, 1122, 1124, 1132, 1133, 1148, 1149, 1157, 1159, 1167, 1172, 1173, 1199, 1276, 1277, 1281, 1294, 1295, 1303, 1305, 1306, 1310, 1313, 1314, 1322, 1323, 1329, 1343, 1358, 1389, 1396, 1401, 1407, 1410, 1411, 1417, 1418, 1419, 1433, 1525, 1806, 1893, 1909], "py": [1005, 1453], "file_man": 1005, "keyerror": [1008, 1453], "pandasfilehelp": [1010, 1011, 1012, 1013, 1014, 1015, 1016, 1897], "default_reading_paramet": [1010, 1013], "default_writing_paramet": [1010, 1014], "data_file_format": [1010, 1011], "export": 1010, "default_format_dict": [1010, 1012], "bz2": [1010, 1011, 1013, 1014], "gz": [1010, 1011, 1013, 1014, 1903, 1912, 1916, 1918, 1919, 1920], "zip": [1010, 1011, 1013, 1014, 1453], "h5": [1010, 1011, 1013, 1014], "mode": [1010, 1014, 1017, 1122, 1146, 1150, 1163, 1164, 1401, 1407, 1433, 1916], "amb_cap": [1010, 1012, 1835, 1880, 1881, 1899, 1919], "5f": [1010, 1012], "amb_ct": [1010, 1012, 1836, 1880, 1881, 1899, 1907, 1910, 1916, 1917, 1918], "6f": [1010, 1012], "amb_p": [1010, 1012, 1835, 1837, 1852, 1880, 1881, 1899, 1907, 1909, 1910, 1914, 1916, 1917, 1918, 1919], "3f": [1010, 1012], "amb_rews2": [1010, 1012, 1839, 1880, 1881, 1899, 1907, 1910, 1916, 1917, 1918], "amb_rews3": [1010, 1012, 1840, 1880, 1881, 1899, 1907, 1910, 1916, 1917, 1918], "amb_rho": [1010, 1012, 1841, 1880, 1881, 1899, 1907, 1910, 1916, 1917, 1918], "amb_t": [1010, 1012, 1842, 1880, 1881, 1899], "amb_ti": [1010, 1012, 1843, 1880, 1881, 1899, 1907, 1911, 1916, 1917, 1918], "amb_w": [1010, 1012, 1845, 1880, 1881, 1899, 1908, 1910, 1912, 1915, 1917, 1919, 1920], "amb_yaw": [1010, 1012, 1846, 1880, 1881, 1899, 1907, 1916, 1918], "amb_yld": [1010, 1012, 1848, 1880, 1881, 1899, 1919], "cap": [1010, 1012, 1149, 1151, 1153, 1172, 1413, 1849, 1880, 1881, 1899, 1919], "yld": [1010, 1012, 1878, 1880, 1881, 1899, 1919], "read_fil": [1010, 1015, 1807, 1825], "write_fil": [1010, 1016], "windros": [1017, 1146, 1150, 1163, 1164, 1300, 1897, 1903], "windroseax": [1017, 1182, 1897, 1903], "stochast": [1017, 1897], "from_ax": [1017, 1182], "her": [1017, 1290], "adjust": [1017, 1090, 1096, 1112, 1115, 1134, 1142, 1147, 1151, 1153, 1183, 1281, 1285, 1326, 1327, 1332, 1340, 1402], "unset": [1017, 1326], "agg_filt": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1402, 1411, 1413], "set_radii_angl": [1017, 1359], "set_legend": [1017, 1351], "pyplot_argu": [1017, 1351], "draw": [1017, 1133, 1135, 1140, 1143, 1144, 1145, 1146, 1149, 1150, 1151, 1153, 1163, 1164, 1169, 1172, 1237, 1245, 1246, 1247, 1259, 1260, 1261, 1273, 1276, 1277, 1283, 1284, 1290, 1298, 1305, 1309, 1330, 1331, 1333, 1334, 1335, 1361, 1403, 1407, 1410, 1411, 1415, 1417, 1418, 1420, 1428, 1726, 1736, 1746, 1756], "segment": [1017, 1053, 1056, 1078, 1081, 1132, 1147, 1159, 1163, 1164, 1167, 1294, 1306, 1313, 1371, 1401], "center": [1017, 1132, 1133, 1146, 1147, 1148, 1149, 1150, 1159, 1163, 1164, 1167, 1173, 1238, 1245, 1246, 1259, 1260, 1276, 1277, 1281, 1294, 1303, 1305, 1306, 1309, 1313, 1330, 1332, 1371, 1380, 1385, 1392, 1401, 1411, 1413, 1417, 1418, 1428, 1429], "pylab": [1017, 1163, 1164], "command": [1017, 1163, 1164, 1215, 1353, 1358, 1361, 1453, 1455, 1465, 1473, 1480, 1487, 1495, 1897, 1905], "box": [1017, 1025, 1054, 1060, 1081, 1133, 1134, 1142, 1146, 1150, 1151, 1153, 1155, 1183, 1194, 1201, 1237, 1243, 1281, 1283, 1284, 1326, 1327, 1332, 1340, 1343, 1385, 1392, 1411, 1413, 1415], "proport": [1017, 1150, 1683, 1721], "get_xaxis_transform": [1017, 1247], "transform": [1017, 1025, 1029, 1030, 1031, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1073, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1084, 1085, 1086, 1087, 1088, 1089, 1123, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1239, 1240, 1245, 1246, 1247, 1259, 1260, 1261, 1273, 1276, 1283, 1285, 1288, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1322, 1323, 1326, 1343, 1357, 1381, 1402, 1410, 1411, 1413], "tick": [1017, 1090, 1092, 1097, 1100, 1102, 1103, 1106, 1107, 1111, 1112, 1113, 1149, 1151, 1153, 1193, 1243, 1247, 1252, 1253, 1255, 1256, 1257, 1261, 1266, 1267, 1269, 1270, 1271, 1289, 1292, 1293, 1295, 1296, 1297, 1298, 1311, 1316, 1337, 1338, 1339, 1362, 1376, 1385, 1389, 1390, 1392, 1396, 1397, 1415, 1416, 1421, 1422, 1428, 1429, 1431, 1434], "gridlin": [1017, 1193, 1247, 1261, 1339, 1362, 1376, 1415], "get_xaxis_text1_transform": [1017, 1245], "pad": [1017, 1132, 1147, 1159, 1167, 1245, 1246, 1259, 1260, 1294, 1295, 1306, 1313, 1380, 1387, 1394, 1401, 1415], "pad_point": [1017, 1245, 1246, 1259, 1260], "valign": [1017, 1245, 1246, 1259, 1260], "bottom": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1245, 1246, 1259, 1260, 1265, 1273, 1276, 1277, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1322, 1323, 1326, 1328, 1330, 1332, 1357, 1364, 1392, 1393, 1402, 1404, 1407, 1409, 1411, 1413, 1415, 1428, 1429, 1432, 1435], "baselin": [1017, 1149, 1245, 1246, 1259, 1260, 1380, 1389, 1396, 1403, 1404, 1407, 1413], "center_baselin": [1017, 1245, 1246, 1259, 1260, 1413], "halign": [1017, 1245, 1246, 1259, 1260], "left": [1017, 1060, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1238, 1245, 1246, 1251, 1259, 1260, 1273, 1276, 1277, 1281, 1283, 1284, 1285, 1290, 1294, 1296, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1322, 1323, 1326, 1328, 1330, 1332, 1357, 1380, 1385, 1386, 1392, 1393, 1401, 1402, 1408, 1411, 1413, 1415, 1416, 1417, 1418, 1432, 1435, 1918], "get_xaxis_text2_transform": [1017, 1246], "secondari": [1017, 1246, 1322, 1323], "get_yaxis_transform": [1017, 1261], "get_yaxis_text1_transform": [1017, 1259], "get_yaxis_text2_transform": [1017, 1260], "secondart": [1017, 1260], "render": [1017, 1133, 1151, 1153, 1169, 1237, 1243, 1278, 1281, 1304, 1305, 1326, 1332, 1336, 1416, 1428, 1429, 1910], "children": [1017, 1018, 1020, 1025, 1038, 1050, 1060, 1065, 1081, 1125, 1169, 1237], "set_thetamax": [1017, 1378], "thetamax": [1017, 1326, 1377, 1378], "maximum": [1017, 1037, 1060, 1151, 1235, 1292, 1377, 1378, 1410, 1417, 1418, 1428, 1429, 1683, 1721, 1903, 1906, 1920], "theta": [1017, 1025, 1081, 1102, 1112, 1118, 1133, 1178, 1223, 1233, 1235, 1236, 1363, 1373, 1375, 1376, 1377, 1378, 1379], "get_thetamax": [1017, 1235], "set_thetamin": [1017, 1379], "thetamin": [1017, 1326, 1377, 1379], "minimum": [1017, 1025, 1031, 1060, 1081, 1082, 1132, 1151, 1159, 1167, 1236, 1294, 1306, 1313, 1314, 1377, 1379, 1401, 1410, 1417, 1418, 1428, 1429, 1906], "get_thetamin": [1017, 1236], "set_thetalim": [1017, 1377], "set_theta_offset": [1017, 1374, 1375], "offset": [1017, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1234, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1326, 1328, 1374, 1375, 1380, 1401, 1402, 1411, 1413, 1416, 1903], "radian": [1017, 1025, 1053, 1060, 1081, 1102, 1132, 1234, 1306, 1323, 1374, 1375, 1376, 1377], "get_theta_offset": [1017, 1234], "set_theta_zero_loc": [1017, 1375], "set_theta_direct": [1017, 1373], "increas": [1017, 1132, 1159, 1167, 1233, 1248, 1262, 1294, 1306, 1313, 1314, 1373, 1401, 1407, 1408, 1410, 1417, 1418, 1432, 1435, 1900], "get_theta_direct": [1017, 1233], "set_rmax": [1017, 1365], "rmax": [1017, 1326, 1364, 1365], "outer": [1017, 1224, 1289, 1304, 1365, 1411, 1417, 1418, 1903, 1916], "get_rmax": [1017, 1224], "set_rmin": [1017, 1366], "rmin": [1017, 1326, 1364, 1366], "inner": [1017, 1225, 1366, 1411], "get_rmin": [1017, 1225], "set_rorigin": [1017, 1367], "rorigin": [1017, 1326, 1367], "get_rorigin": [1017, 1226], "get_rsign": [1017, 1227], "set_rlim": [1017, 1364], "emit": [1017, 1097, 1142, 1364, 1386, 1393], "get_rlabel_posit": [1017, 1223], "set_rlabel_posit": [1017, 1363], "set_yscal": [1017, 1293, 1325, 1395], "yaxi": [1017, 1166, 1181, 1191, 1258, 1263, 1266, 1267, 1268, 1269, 1270, 1271, 1311, 1323, 1335, 1392, 1395, 1396, 1397, 1422, 1434, 1435], "set_rscal": [1017, 1368], "set_rtick": [1017, 1369], "set_thetagrid": [1017, 1362, 1376], "fmt": [1017, 1147, 1172, 1293, 1309, 1310, 1311, 1324, 1325, 1362, 1376, 1408], "set_rgrid": [1017, 1362, 1376], "format_coord": [1017, 1178], "get_data_ratio": [1017, 1200], "aspect": [1017, 1134, 1135, 1183, 1186, 1188, 1194, 1200, 1281, 1296, 1309, 1320, 1326, 1327, 1330, 1332, 1340, 1357, 1402], "alwai": [1017, 1025, 1034, 1049, 1052, 1055, 1060, 1076, 1077, 1081, 1088, 1133, 1141, 1143, 1145, 1200, 1277, 1305, 1309, 1321, 1375, 1389, 1396, 1919], "can_zoom": [1017, 1155], "whether": [1017, 1025, 1035, 1036, 1053, 1060, 1081, 1133, 1138, 1142, 1148, 1151, 1153, 1154, 1155, 1159, 1161, 1162, 1167, 1183, 1187, 1190, 1191, 1193, 1197, 1205, 1214, 1215, 1221, 1255, 1269, 1273, 1274, 1275, 1281, 1282, 1285, 1288, 1290, 1299, 1303, 1304, 1305, 1308, 1313, 1317, 1321, 1331, 1333, 1334, 1335, 1339, 1342, 1347, 1352, 1353, 1356, 1386, 1393, 1401, 1402, 1404, 1405, 1415, 1416, 1424, 1426, 1432, 1435], "zoom": [1017, 1154, 1155, 1216, 1314, 1362, 1376, 1389, 1396], "button": [1017, 1154, 1155, 1168, 1171, 1216, 1354, 1406], "can_pan": [1017, 1154], "pan": [1017, 1154, 1168, 1171, 1216, 1362, 1376, 1389, 1396, 1406], "start_pan": [1017, 1406], "end_pan": [1017, 1171], "complet": [1017, 1171, 1276, 1278, 1281, 1303, 1304, 1305, 1314, 1321, 1417, 1418, 1903, 1907, 1908, 1911, 1912, 1915, 1918, 1919, 1920], "mous": [1017, 1161, 1168, 1171, 1199, 1214, 1299, 1352, 1356, 1406], "drag_pan": [1017, 1168], "move": [1017, 1168, 1199, 1214, 1299, 1352, 1371, 1389, 1396, 1903, 1910, 1916], "get_titl": [1017, 1238], "set_titl": [1017, 1380, 1906, 1907], "fontdict": [1017, 1380, 1385, 1389, 1392, 1396, 1413], "get_legend_handles_label": [1017, 1212], "legend_handler_map": [1017, 1212], "inset_ax": [1017, 1125, 1283, 1284, 1285], "zorder": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1159, 1167, 1172, 1175, 1176, 1220, 1272, 1273, 1276, 1283, 1285, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1339, 1360, 1398, 1402, 1410, 1411, 1413, 1415, 1436, 1910], "child": [1017, 1125, 1195, 1285, 1307], "inset": [1017, 1283, 1284, 1285], "indicate_inset": [1017, 1283, 1284], "connect": [1017, 1133, 1172, 1175, 1176, 1283, 1284, 1310, 1314], "indicate_inset_zoom": [1017, 1284], "connector": [1017, 1283, 1284], "secondary_xaxi": [1017, 1322], "secondary_yaxi": [1017, 1323], "xytext": [1017, 1133, 1135], "xycoord": [1017, 1133], "axhlin": [1017, 1122, 1140, 1143, 1279, 1433], "across": [1017, 1140, 1141, 1144, 1145, 1279, 1410, 1430], "axvlin": [1017, 1143, 1144, 1430], "axlin": [1017, 1140, 1143, 1144], "xy1": [1017, 1143], "xy2": [1017, 1143], "slope": [1017, 1140, 1143, 1144, 1403], "infinit": [1017, 1143, 1906], "straight": [1017, 1143, 1281, 1310, 1907], "axhspan": [1017, 1140, 1141, 1145], "span": [1017, 1112, 1140, 1141, 1144, 1145, 1151, 1153], "axvspan": [1017, 1141, 1144, 1145], "hline": [1017, 1140, 1279, 1310, 1430], "linestyl": [1017, 1122, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1279, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1358, 1402, 1407, 1408, 1417, 1430, 1433, 1906, 1907], "solid": [1017, 1173, 1279, 1303, 1305, 1310, 1407, 1417, 1430], "vline": [1017, 1122, 1144, 1279, 1310, 1430, 1433], "eventplot": [1017, 1173], "lineoffset": [1017, 1173], "scalex": [1017, 1138, 1310], "scalei": [1017, 1138, 1310], "versu": [1017, 1172, 1310], "marker": [1017, 1122, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1321, 1339, 1358, 1402, 1407, 1408, 1420, 1433], "plot_dat": [1017, 1311], "o": [1017, 1122, 1135, 1141, 1145, 1148, 1149, 1151, 1152, 1175, 1176, 1276, 1283, 1303, 1305, 1310, 1311, 1314, 1358, 1407, 1433, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1917, 1918, 1919, 1920, 1921], "tz": [1017, 1311, 1431, 1434], "xdate": [1017, 1311], "ydate": [1017, 1311], "discourag": [1017, 1358, 1417, 1418, 1419], "coerc": [1017, 1311], "date": [1017, 1097, 1173, 1311, 1431, 1434, 1908], "loglog": [1017, 1143, 1293], "semilogx": [1017, 1324], "semilogi": [1017, 1325], "acorr": [1017, 1122], "autocorrel": [1017, 1122], "xcorr": [1017, 1433], "norm": [1017, 1122, 1148, 1152, 1175, 1176, 1276, 1278, 1281, 1303, 1304, 1305, 1314, 1321, 1410, 1417, 1418, 1419, 1433, 1683, 1721], "detrend": [1017, 1122, 1159, 1167, 1313, 1401, 1433], "detrend_non": [1017, 1122, 1159, 1167, 1313, 1401, 1433], "cross": [1017, 1122, 1159, 1167, 1175, 1176, 1358, 1409, 1433, 1918, 1921], "barh": [1017, 1147, 1149, 1277], "bar_label": [1017, 1147], "broken_barh": [1017, 1152], "xrang": [1017, 1140, 1152], "yrang": [1017, 1144, 1145, 1152], "sequenc": [1017, 1018, 1059, 1132, 1140, 1143, 1144, 1146, 1148, 1149, 1150, 1151, 1152, 1153, 1159, 1163, 1164, 1167, 1172, 1173, 1174, 1273, 1276, 1277, 1293, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1389, 1396, 1401, 1402, 1403, 1408, 1417, 1418, 1429], "stem": [1017, 1135, 1407, 1913], "linefmt": [1017, 1407], "markerfmt": [1017, 1407], "basefmt": [1017, 1407], "pie": [1017, 1309], "explod": [1017, 1309], "autopct": [1017, 1309], "chart": [1017, 1277, 1309, 1310], "errorbar": [1017, 1147, 1149, 1172], "yerr": [1017, 1149, 1172], "xerr": [1017, 1149, 1172], "ecolor": [1017, 1149, 1172], "attach": [1017, 1133, 1149, 1172, 1276], "boxplot": [1017, 1151, 1153], "notch": [1017, 1151, 1153], "sym": [1017, 1151, 1403], "vert": [1017, 1148, 1151, 1152, 1153, 1175, 1176, 1276, 1303, 1314, 1428, 1429], "whi": [1017, 1151], "whisker": [1017, 1151, 1153], "bxp": [1017, 1153], "bxpstat": [1017, 1153], "vari": [1017, 1310, 1321, 1410, 1903, 1906, 1908, 1912], "hexbin": [1017, 1276, 1277, 1278], "gridsiz": [1017, 1276], "xscale": [1017, 1276, 1326], "hexagon": [1017, 1276, 1277, 1278, 1314], "arrow": [1017, 1133, 1135, 1148, 1172, 1314, 1315, 1410], "dy": [1017, 1135], "quiverkei": [1017, 1314, 1315], "q": [1017, 1315, 1683, 1721], "u": [1017, 1102, 1104, 1148, 1314, 1315, 1410, 1683, 1721, 1830, 1831, 1910], "barb": [1017, 1148], "polygon": [1017, 1141, 1145, 1148, 1174, 1175, 1176, 1277, 1305, 1314, 1478, 1479, 1808, 1897, 1910], "fill_between": [1017, 1174, 1175, 1176, 1403], "y1": [1017, 1175, 1310, 1403, 1417, 1418], "y2": [1017, 1174, 1175, 1293, 1310, 1324, 1325, 1403, 1408], "fill_betweenx": [1017, 1175, 1176], "x1": [1017, 1176, 1277, 1310, 1417, 1418], "x2": [1017, 1174, 1176, 1293, 1310, 1324, 1325, 1408], "imshow": [1017, 1278, 1281, 1296, 1303, 1305, 1401, 1402, 1410, 1417, 1418], "displai": [1017, 1133, 1147, 1168, 1199, 1243, 1276, 1277, 1278, 1281, 1282, 1296, 1298, 1332, 1350, 1362, 1376, 1389, 1396, 1406, 1919, 1920], "raster": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1220, 1221, 1273, 1276, 1281, 1283, 1294, 1296, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1360, 1361, 1402, 1411, 1413], "pcolor": [1017, 1295, 1303, 1304, 1305, 1419], "shade": [1017, 1303, 1304, 1305, 1419], "pseudocolor": [1017, 1281, 1303, 1304, 1305, 1419], "rectangular": [1017, 1151, 1276, 1277, 1303, 1304, 1305, 1413], "pcolorfast": [1017, 1304], "clabel": [1017, 1157], "hist": [1017, 1277, 1278], "histogram": [1017, 1276, 1277, 1278, 1409, 1903], "stair": [1017, 1277, 1404, 1408], "edg": [1017, 1060, 1133, 1146, 1147, 1149, 1150, 1151, 1172, 1175, 1176, 1238, 1276, 1277, 1278, 1290, 1303, 1304, 1305, 1314, 1315, 1321, 1332, 1380, 1404, 1408, 1409, 1411, 1417, 1418, 1420], "stepwis": [1017, 1404], "hist2d": [1017, 1276, 1277, 1278], "psd": [1017, 1167, 1294, 1313, 1401], "nfft": [1017, 1132, 1159, 1167, 1294, 1306, 1313, 1401], "window": [1017, 1132, 1159, 1167, 1199, 1294, 1306, 1313, 1401, 1903], "spectral": [1017, 1159, 1167, 1294, 1313, 1401], "csd": [1017, 1167, 1313], "magnitude_spectrum": [1017, 1132, 1294, 1306, 1313, 1401], "magnitud": [1017, 1132, 1148, 1294, 1306, 1313, 1401, 1416], "spectrum": [1017, 1132, 1159, 1167, 1294, 1306, 1313, 1401], "angle_spectrum": [1017, 1132, 1294, 1306, 1401], "pad_to": [1017, 1132, 1159, 1167, 1294, 1306, 1313, 1401], "phase_spectrum": [1017, 1132, 1294, 1306, 1401], "phase": [1017, 1132, 1294, 1306, 1401], "coher": [1017, 1159], "256": [1017, 1159, 1167, 1313, 1401, 1914], "specgram": [1017, 1132, 1294, 1306, 1313, 1401], "spectrogram": [1017, 1401], "spy": [1017, 1402], "precis": [1017, 1175, 1176, 1402, 1683, 1721], "markers": [1017, 1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1321, 1402], "sparsiti": [1017, 1402], "matshow": [1017, 1281, 1296], "matrix": [1017, 1025, 1030, 1040, 1060, 1061, 1067, 1074, 1081, 1281, 1296, 1303, 1305, 1683, 1721], "violinplot": [1017, 1151, 1428, 1429], "violin": [1017, 1428, 1429], "vpstat": [1017, 1428], "celltext": [1017, 1411], "cellcolour": [1017, 1411], "cellloc": [1017, 1411], "stackplot": [1017, 1403], "stack": [1017, 1147, 1149, 1277, 1403], "streamplot": [1017, 1410], "linewidth": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1358, 1402, 1410, 1417], "tricontour": [1017, 1417], "unstructur": [1017, 1417, 1418, 1419, 1420], "triangular": [1017, 1135, 1417, 1418, 1419, 1420], "tricontourf": [1017, 1418], "tripcolor": [1017, 1419], "triplot": [1017, 1420], "__init_subclass__": [1017, 1025, 1032, 1060, 1081, 1119], "subclass": [1017, 1025, 1032, 1042, 1048, 1060, 1069, 1072, 1073, 1081, 1085, 1087, 1101, 1117, 1119, 1133, 1161, 1169, 1177, 1179, 1199, 1237, 1276, 1278, 1281, 1285, 1303, 1304, 1305, 1321, 1322, 1323, 1417, 1418], "get_subplotspec": [1017, 1232], "subplotspec": [1017, 1232, 1326, 1372], "associ": [1017, 1025, 1031, 1081, 1082, 1100, 1124, 1148, 1179, 1207, 1232, 1277, 1281, 1372, 1909], "set_subplotspec": [1017, 1372], "get_gridspec": [1017, 1207], "gridspec": [1017, 1207], "get_window_ext": [1017, 1237, 1243], "empti": [1017, 1148, 1151, 1243, 1310], "set_figur": [1017, 1346], "instanc": [1017, 1018, 1020, 1025, 1037, 1060, 1072, 1081, 1100, 1138, 1139, 1146, 1147, 1150, 1151, 1153, 1157, 1163, 1164, 1172, 1177, 1204, 1211, 1239, 1244, 1258, 1276, 1278, 1281, 1285, 1303, 1304, 1305, 1309, 1311, 1317, 1321, 1341, 1346, 1362, 1376, 1380, 1389, 1396, 1402, 1403, 1413, 1417, 1418, 1421, 1422, 1428, 1429, 1909, 1918], "belong": [1017, 1204, 1346], "viewlim": [1017, 1427], "get_posit": [1017, 1134, 1219], "bbox": [1017, 1025, 1054, 1060, 1081, 1132, 1133, 1134, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1219, 1237, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1330, 1336, 1341, 1357, 1402, 1411, 1413, 1424], "set_posit": [1017, 1219, 1320, 1357], "po": [1017, 1102, 1103, 1357], "reset_posit": [1017, 1320], "activ": [1017, 1219, 1309, 1320, 1330, 1357, 1905], "set_axes_loc": [1017, 1336], "get_axes_loc": [1017, 1192], "axes_loc": [1017, 1192, 1326], "sharex": [1017, 1399, 1906, 1907], "share": [1017, 1172, 1228, 1229, 1327, 1330, 1332, 1399, 1400, 1421, 1422], "sharei": [1017, 1400, 1906, 1907], "cla": [1017, 1156], "patch": [1017, 1130, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1151, 1152, 1153, 1159, 1162, 1167, 1172, 1174, 1175, 1176, 1205, 1273, 1276, 1277, 1283, 1284, 1294, 1301, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1326, 1339, 1343, 1347, 1356, 1402, 1404, 1410, 1411, 1413], "get_facecolor": [1017, 1202, 1203], "facecolor": [1017, 1135, 1141, 1145, 1148, 1149, 1152, 1175, 1176, 1202, 1276, 1283, 1303, 1305, 1314, 1321, 1326, 1344, 1413, 1419], "set_facecolor": [1017, 1344, 1345], "set_prop_cycl": [1017, 1358], "cycl": [1017, 1132, 1152, 1159, 1167, 1174, 1294, 1306, 1309, 1310, 1313, 1321, 1358, 1401, 1403, 1407, 1417, 1418], "get_aspect": [1017, 1188], "set_aspect": [1017, 1134, 1142, 1183, 1186, 1194, 1281, 1309, 1327, 1330, 1332, 1340, 1357, 1402], "anchor": [1017, 1025, 1053, 1060, 1081, 1142, 1148, 1186, 1314, 1326, 1330, 1332, 1413], "get_adjust": [1017, 1134, 1183], "physic": [1017, 1183, 1327, 1340], "datalim": [1017, 1123, 1142, 1183, 1274, 1326, 1327, 1332, 1340, 1424], "achiev": [1017, 1134, 1142, 1149, 1183, 1304, 1327, 1332, 1916], "desir": [1017, 1183, 1295, 1318, 1919, 1921], "set_adjust": [1017, 1134, 1183, 1327, 1332, 1340], "how": [1017, 1134, 1148, 1151, 1183, 1314, 1327, 1332, 1902, 1903, 1904, 1907, 1914, 1919, 1920], "get_box_aspect": [1017, 1194], "set_box_aspect": [1017, 1194, 1340], "get_anchor": [1017, 1134, 1186], "set_anchor": [1017, 1134, 1186, 1330, 1332], "apply_aspect": [1017, 1134], "conveni": [1017, 1137, 1142, 1296, 1310, 1358, 1905, 1917], "get_legend": [1017, 1211], "get_imag": [1017, 1208], "axesimag": [1017, 1128, 1199, 1208, 1281, 1296, 1304, 1401, 1402], "get_lin": [1017, 1213], "get_xaxi": [1017, 1244], "xaxi": [1017, 1165, 1180, 1190, 1244, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1311, 1322, 1334, 1385, 1388, 1389, 1390, 1421, 1431, 1432], "get_yaxi": [1017, 1258], "get_xgridlin": [1017, 1249], "line2d": [1017, 1122, 1129, 1132, 1140, 1143, 1144, 1151, 1153, 1159, 1167, 1172, 1177, 1249, 1256, 1263, 1270, 1273, 1293, 1294, 1306, 1310, 1311, 1313, 1324, 1325, 1362, 1376, 1402, 1407, 1408, 1415, 1420, 1433], "get_xticklin": [1017, 1256], "minor": [1017, 1253, 1255, 1256, 1257, 1267, 1269, 1270, 1271, 1273, 1293, 1297, 1298, 1324, 1325, 1389, 1390, 1396, 1397, 1415], "get_ygridlin": [1017, 1263], "get_yticklin": [1017, 1270], "add_artist": [1017, 1123], "add_child_ax": [1017, 1125], "axesbas": [1017, 1125], "add_collect": [1017, 1126], "autolim": [1017, 1126, 1318], "add_imag": [1017, 1128], "add_lin": [1017, 1129], "add_patch": [1017, 1130], "add_tabl": [1017, 1131, 1411], "add_contain": [1017, 1127], "relim": [1017, 1138, 1317, 1318], "visible_onli": [1017, 1317], "recomput": [1017, 1317], "update_datalim": [1017, 1123, 1424], "updatex": [1017, 1424], "updatei": [1017, 1424], "in_ax": [1017, 1282], "mouseev": [1017, 1161, 1199, 1282, 1307, 1356], "event": [1017, 1132, 1140, 1143, 1144, 1159, 1161, 1167, 1172, 1173, 1199, 1273, 1282, 1294, 1306, 1307, 1310, 1311, 1313, 1356, 1402, 1421, 1422], "get_autoscalex_on": [1017, 1190, 1384], "autosc": [1017, 1096, 1115, 1123, 1137, 1138, 1142, 1189, 1190, 1191, 1277, 1292, 1295, 1314, 1333, 1334, 1335, 1384, 1386, 1387, 1391, 1393, 1394, 1409, 1426], "get_autoscaley_on": [1017, 1191, 1391], "set_autoscalex_on": [1017, 1334], "autoscale_view": [1017, 1137, 1138, 1292, 1295, 1310, 1333, 1334, 1335, 1426], "set_autoscaley_on": [1017, 1335], "get_autoscale_on": [1017, 1189], "set_autoscale_on": [1017, 1333], "use_sticky_edg": [1017, 1295, 1426], "obei": [1017, 1426], "sticky_edg": [1017, 1409, 1426], "set_xmargin": [1017, 1387], "prior": [1017, 1138, 1387, 1394], "set_ymargin": [1017, 1394], "margin": [1017, 1137, 1138, 1276, 1295, 1387, 1394, 1409, 1426], "tight": [1017, 1137, 1138, 1142, 1209, 1237, 1292, 1295, 1349], "retriev": [1017, 1295], "set_rasterization_zord": [1017, 1360], "threshold": [1017, 1360], "graphic": [1017, 1305, 1360, 1361], "get_rasterization_zord": [1017, 1220], "autoscal": [1017, 1137, 1138, 1421, 1422, 1426], "enabl": [1017, 1102, 1104, 1137, 1151, 1153, 1356, 1361, 1417, 1418, 1904], "toggl": [1017, 1137, 1273, 1428, 1429], "draw_artist": [1017, 1170, 1331], "redraw": [1017, 1170, 1316], "redraw_in_fram": [1017, 1316], "get_renderer_cach": [1017, 1222], "deprec": [1017, 1018, 1020, 1222, 1303, 1305, 1311, 1407], "get_frame_on": [1017, 1205], "drawn": [1017, 1133, 1134, 1135, 1148, 1151, 1152, 1172, 1205, 1273, 1276, 1277, 1283, 1284, 1305, 1309, 1310, 1314, 1321, 1327, 1332, 1347, 1357, 1398, 1404, 1405, 1410, 1411, 1417, 1418, 1420], "set_frame_on": [1017, 1347], "get_axisbelow": [1017, 1193, 1339], "set_axisbelow": [1017, 1193, 1273, 1339], "visibl": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1169, 1172, 1175, 1176, 1201, 1242, 1257, 1271, 1273, 1276, 1283, 1284, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1318, 1326, 1342, 1383, 1389, 1390, 1396, 1397, 1402, 1411, 1413, 1907], "major": [1017, 1138, 1180, 1181, 1252, 1255, 1257, 1266, 1269, 1271, 1273, 1292, 1389, 1390, 1396, 1397, 1415, 1416], "configur": [1017, 1273, 1411, 1416], "ticklabel_format": [1017, 1416], "style": [1017, 1122, 1132, 1133, 1138, 1140, 1143, 1144, 1147, 1149, 1151, 1159, 1167, 1172, 1173, 1273, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1321, 1358, 1402, 1407, 1408, 1410, 1413, 1415, 1416, 1433, 1903], "scilimit": [1017, 1416], "scalarformatt": [1017, 1362, 1416], "locator_param": [1017, 1292], "behavior": [1017, 1137, 1143, 1148, 1151, 1218, 1292, 1314, 1356, 1371, 1407], "tick_param": [1017, 1390, 1397, 1415], "set_axis_off": [1017, 1337], "turn": [1017, 1137, 1142, 1298, 1337, 1338, 1386, 1393], "off": [1017, 1132, 1135, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1149, 1159, 1167, 1172, 1173, 1273, 1283, 1294, 1298, 1306, 1310, 1311, 1313, 1337, 1356, 1386, 1393, 1402, 1907, 1910, 1915], "set_axis_on": [1017, 1338], "get_xlabel": [1017, 1250], "set_xlabel": [1017, 1385, 1906, 1907, 1917], "labelpad": [1017, 1385, 1392], "invert_xaxi": [1017, 1248, 1251, 1286, 1384, 1386], "xaxis_invert": [1017, 1248, 1251, 1286, 1384, 1386, 1432], "invers": [1017, 1025, 1034, 1041, 1044, 1060, 1068, 1070, 1081, 1084, 1086, 1314, 1322, 1323, 1384, 1391, 1432, 1435, 1454, 1456, 1461, 1463, 1466, 1471, 1478, 1485, 1488, 1493, 1496, 1683, 1721, 1921], "get_xbound": [1017, 1248, 1251, 1286, 1384, 1386], "set_xbound": [1017, 1248, 1251, 1286, 1384, 1386], "get_xlim": [1017, 1248, 1251, 1286, 1384, 1386], "set_xlim": [1017, 1138, 1141, 1142, 1172, 1248, 1251, 1286, 1384, 1386], "get_xscal": [1017, 1254], "set_xscal": [1017, 1293, 1324, 1388], "get_xtick": [1017, 1257], "set_xtick": [1017, 1389, 1390], "get_xmajorticklabel": [1017, 1252], "get_xminorticklabel": [1017, 1253], "get_xticklabel": [1017, 1255], "set_xticklabel": [1017, 1389], "get_ylabel": [1017, 1264], "set_ylabel": [1017, 1392, 1906, 1907, 1917], "invert_yaxi": [1017, 1262, 1265, 1287, 1391, 1393], "yaxis_invert": [1017, 1262, 1265, 1287, 1391, 1393, 1435], "get_ybound": [1017, 1262, 1265, 1287, 1391, 1393], "set_ybound": [1017, 1262, 1265, 1287, 1391, 1393], "get_ylim": [1017, 1262, 1265, 1287, 1391, 1393], "set_ylim": [1017, 1142, 1145, 1172, 1262, 1265, 1287, 1364, 1391, 1393], "get_yscal": [1017, 1268], "get_ytick": [1017, 1271], "set_ytick": [1017, 1396, 1397], "get_ymajorticklabel": [1017, 1266], "get_yminorticklabel": [1017, 1267], "get_yticklabel": [1017, 1269], "set_yticklabel": [1017, 1396], "xaxis_d": [1017, 1431], "yaxis_d": [1017, 1434], "format_xdata": [1017, 1180], "format_ydata": [1017, 1181], "minorticks_on": [1017, 1298], "minorticks_off": [1017, 1297, 1298], "get_navig": [1017, 1215], "respond": [1017, 1215, 1353], "navig": [1017, 1215, 1216, 1326, 1353, 1354], "set_navig": [1017, 1353], "toolbar": [1017, 1216, 1353, 1354], "get_navigate_mod": [1017, 1216], "statu": [1017, 1199, 1216, 1354, 1919], "set_navigate_mod": [1017, 1354], "get_children": [1017, 1195], "contains_point": [1017, 1162], "pixel": [1017, 1133, 1162, 1237, 1276, 1281, 1303, 1304, 1305, 1310, 1314, 1360, 1361, 1370, 1371, 1402, 1417, 1418], "insid": [1017, 1162, 1290, 1309, 1415, 1454, 1460, 1461, 1463, 1470, 1471, 1477, 1478, 1484, 1485, 1486, 1492, 1493, 1500, 1502, 1503, 1523, 1893, 1909], "get_default_bbox_extra_artist": [1017, 1201], "get_tightbbox": [1017, 1237, 1243], "call_axes_loc": [1017, 1237], "decor": [1017, 1237, 1380], "twinx": [1017, 1421], "twin": [1017, 1327, 1421, 1422], "twini": [1017, 1422], "get_shared_x_ax": [1017, 1228], "immut": [1017, 1018, 1228, 1229], "grouper": [1017, 1228, 1229], "get_shared_y_ax": [1017, 1229], "label_out": [1017, 1289], "show": [1017, 1122, 1142, 1146, 1148, 1150, 1151, 1153, 1163, 1164, 1173, 1273, 1289, 1296, 1322, 1433, 1810, 1811, 1903, 1906, 1907, 1908, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1919, 1920, 1921], "get_fc": [1017, 1203], "set_fc": [1017, 1345], "possibl": [1017, 1142, 1147, 1218, 1276, 1277, 1303, 1305, 1318, 1321, 1332, 1339, 1362, 1371, 1376, 1377, 1389, 1396, 1417, 1418, 1419, 1502, 1505, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1683, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1721, 1915], "have_unit": [1017, 1275], "convert_xunit": [1017, 1165], "convert_yunit": [1017, 1166], "resid": [1017, 1139], "stale": [1017, 1405], "re": [1017, 1405, 1914, 1918], "match": [1017, 1148, 1151, 1153, 1173, 1177, 1277, 1281, 1295, 1314, 1321, 1389, 1396, 1405, 1410, 1419, 1428, 1429, 1683, 1721], "intern": [1017, 1276, 1302, 1304, 1305, 1314, 1405, 1417, 1418, 1893, 1904], "add_callback": [1017, 1124, 1302, 1319], "callback": [1017, 1124, 1302, 1319], "whenev": [1017, 1124, 1905, 1916], "remove_callback": [1017, 1124, 1302, 1319], "oid": [1017, 1319], "observ": [1017, 1124, 1142, 1148, 1319, 1386, 1393, 1683, 1721, 1907], "pchang": [1017, 1302], "regist": [1017, 1276, 1278, 1281, 1302, 1303, 1304, 1305, 1321, 1388, 1395, 1417, 1418], "is_transform_set": [1017, 1288], "explicitli": [1017, 1194, 1278, 1281, 1288, 1314, 1331, 1358, 1389, 1390, 1396, 1397, 1402, 1415, 1417, 1418, 1903], "set_transform": [1017, 1288, 1381], "get_transform": [1017, 1123, 1239], "pickabl": [1017, 1218, 1307, 1308], "process": [1017, 1307, 1811, 1913], "set_pick": [1017, 1218, 1307, 1308, 1356], "picker": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1307, 1310, 1311, 1313, 1314, 1326, 1356, 1402, 1411, 1413], "get_pick": [1017, 1218, 1307, 1308], "get_url": [1017, 1241], "url": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1241, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1382, 1402, 1411, 1413, 1901], "set_url": [1017, 1281, 1382], "get_gid": [1017, 1206], "group": [1017, 1173, 1174, 1206, 1310, 1348, 1415, 1419], "set_gid": [1017, 1348], "gid": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1348, 1402, 1411, 1413], "get_snap": [1017, 1231], "snap": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1231, 1273, 1276, 1283, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1371, 1402, 1411, 1413], "set_snap": [1017, 1231, 1371], "get_sketch_param": [1017, 1230], "sketch": [1017, 1230, 1370], "set_sketch_param": [1017, 1370], "set_path_effect": [1017, 1355], "path_effect": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1355, 1402, 1411, 1413], "get_path_effect": [1017, 1217], "set_clip_box": [1017, 1341], "clipbox": [1017, 1196, 1341], "set_clip_path": [1017, 1343], "get_alpha": [1017, 1185], "blend": [1017, 1036, 1173, 1185, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1329, 1417, 1418], "backend": [1017, 1185, 1281, 1304, 1329, 1370, 1371, 1418], "get_vis": [1017, 1169, 1242], "get_anim": [1017, 1187], "get_in_layout": [1017, 1209], "get_clip_on": [1017, 1197], "get_clip_box": [1017, 1196], "get_clip_path": [1017, 1198], "get_transformed_clip_path_and_affin": [1017, 1240], "affin": [1017, 1025, 1030, 1039, 1040, 1052, 1055, 1057, 1058, 1060, 1061, 1066, 1067, 1076, 1077, 1079, 1080, 1081, 1088, 1089, 1240], "remain": [1017, 1147, 1175, 1176, 1240, 1277, 1292, 1295, 1402, 1415], "set_clip_on": [1017, 1342], "get_raster": [1017, 1221], "set_raster": [1017, 1361], "bitmap": [1017, 1361], "get_agg_filt": [1017, 1184], "filter": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1177, 1184, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1328, 1370, 1401, 1402, 1411, 1413, 1453], "agg": [1017, 1184, 1304, 1328, 1371, 1418], "set_agg_filt": [1017, 1328], "filter_func": [1017, 1328], "set_alpha": [1017, 1329], "set_vis": [1017, 1383], "set_anim": [1017, 1331], "set_in_layout": [1017, 1201, 1237, 1349], "in_layout": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1349, 1402, 1411, 1413], "tutori": [1017, 1209, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1331, 1349, 1417, 1418], "intermedi": [1017, 1209, 1281, 1304, 1349], "constrainedlayout_guid": [1017, 1209, 1349], "tight_layout": [1017, 1209, 1349, 1907], "savefig": [1017, 1209, 1349], "bbox_inch": [1017, 1209, 1349], "get_label": [1017, 1210], "set_label": [1017, 1350], "get_zord": [1017, 1272], "set_zord": [1017, 1273, 1398], "sticki": [1017, 1295, 1409], "update_from": [1017, 1425], "prop": [1017, 1290, 1356, 1423], "findobj": [1017, 1177], "include_self": [1017, 1177], "find": [1017, 1177, 1683, 1721, 1882, 1889, 1903], "get_cursor_data": [1017, 1179, 1199, 1352], "cursor": [1017, 1199, 1214, 1299, 1352], "format_cursor_data": [1017, 1179, 1199], "represent": [1017, 1102, 1105, 1179, 1199, 1281], "get_mouseov": [1017, 1214], "queri": [1017, 1214, 1299, 1352], "custom": [1017, 1018, 1022, 1148, 1159, 1167, 1214, 1285, 1299, 1311, 1313, 1352, 1388, 1395, 1401], "inform": [1017, 1097, 1148, 1199, 1214, 1299, 1321, 1339, 1352, 1453, 1913, 1917, 1919], "set_mouseov": [1017, 1352], "mouseov": [1017, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1299, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1352, 1402, 1411, 1413], "polartransform": [1017, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089], "polaraffin": [1017, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080], "affine2dbas": [1017, 1060], "project": [1017, 1060, 1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1168, 1171, 1172, 1175, 1176, 1245, 1246, 1247, 1259, 1260, 1261, 1273, 1276, 1283, 1285, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1376, 1402, 1406, 1904], "invertedpolartransform": [1017, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059], "cartesian": [1017, 1025, 1031, 1081, 1082], "back": [1017, 1025, 1097, 1135, 1180, 1181, 1314, 1417, 1909], "thetaformatt": [1017, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1376], "ticker": [1017, 1090, 1102, 1112, 1292, 1311, 1362, 1376, 1389, 1390, 1396, 1397, 1417, 1418, 1421, 1422], "symbol": [1017, 1102, 1104, 1151, 1172, 1314], "radialloc": [1017, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101], "thetaloc": [1017, 1112, 1113, 1114, 1115, 1116, 1117], "artistlist": [1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024], "sublist": [1017, 1018, 1020], "were": [1018, 1173, 1230, 1428, 1569, 1903, 1913, 1920, 1921], "futur": [1018, 1172, 1311, 1358, 1410], "replac": [1018, 1102, 1104, 1390, 1397, 1903, 1905], "alreadi": [1018, 1025, 1049, 1060, 1081, 1277, 1311, 1358, 1399, 1400, 1417, 1418, 1419, 1420, 1912, 1917], "prop_nam": [1018, 1020], "valid_typ": [1018, 1020], "invalid_typ": [1018, 1020], "pull": [1018, 1020, 1904], "access": [1018, 1020, 1244, 1258, 1310, 1890], "unspecifi": [1018, 1020, 1102, 1103, 1105, 1403], "unless": [1018, 1020, 1122, 1132, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1179, 1194, 1276, 1277, 1278, 1279, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1311, 1313, 1314, 1321, 1357, 1401, 1403, 1404, 1407, 1410, 1415, 1417, 1429, 1430, 1433], "never": [1018, 1020], "exclud": [1018, 1020, 1175, 1176, 1201, 1277, 1317, 1331, 1903], "present": [1018, 1024, 1148, 1317, 1386, 1402, 1914], "count": [1018, 1023, 1135, 1173, 1276, 1277, 1278, 1619, 1620, 1903], "occurr": [1018, 1023, 1146, 1150, 1163, 1164], "__subclasshook__": [1018, 1022], "overrid": [1018, 1022, 1101, 1117, 1148, 1199, 1255, 1269, 1315, 1411, 1413, 1417, 1418], "issubclass": [1018, 1022, 1453], "earli": 1022, "abcmeta": 1022, "__subclasscheck__": 1022, "notimpl": [1022, 1453], "outcom": 1022, "cach": [1022, 1054], "stop": 1024, "recommend": [1024, 1151, 1153, 1408, 1905, 1909], "input_dim": [1025, 1042, 1051, 1052, 1055, 1059, 1060, 1069, 1075, 1076, 1077, 1081, 1085, 1088], "overridden": [1025, 1032, 1042, 1048, 1060, 1069, 1073, 1081, 1085, 1087, 1119, 1151, 1168, 1169, 1171, 1179, 1199, 1245, 1246, 1247, 1259, 1260, 1261, 1406], "output_dim": [1025, 1048, 1051, 1052, 1055, 1059, 1060, 1073, 1075, 1076, 1077, 1081, 1087, 1088], "use_rmin": [1025, 1031, 1081, 1082], "transform_non_affin": [1025, 1052, 1055, 1060, 1076, 1077, 1081, 1088], "has_invers": [1025, 1041, 1060, 1068, 1081, 1084], "is_separ": [1025, 1047, 1060, 1072, 1081], "depth": [1025, 1037, 1060, 1081, 1328, 1393], "chain": [1025, 1037, 1060, 1081, 1276, 1904], "form": [1025, 1037, 1060, 1081, 1133, 1173, 1277, 1303, 1305, 1358, 1910, 1919], "contains_branch": [1025, 1035, 1060, 1081], "tree": [1025, 1035, 1036, 1060, 1081], "contains_branch_seper": [1025, 1036, 1060, 1081], "other_transform": [1025, 1036, 1060, 1081], "branch": [1025, 1036, 1060, 1081, 1904, 1905], "cancel": [1025, 1034, 1060, 1081], "term": [1025, 1034, 1060, 1081, 1903, 1906], "interfac": [1025, 1030, 1060, 1061, 1081, 1358, 1891, 1903, 1910], "transform_affin": [1025, 1052, 1055, 1060, 1076, 1077, 1081, 1088], "transform_bbox": [1025, 1054, 1060, 1081], "get_affin": [1025, 1039, 1060, 1066, 1081], "get_matrix": [1025, 1040, 1060, 1067, 1081], "transform_point": [1025, 1059, 1060, 1081], "transform_path": [1025, 1056, 1057, 1058, 1060, 1078, 1079, 1080, 1081, 1089], "transform_path_affin": [1025, 1057, 1058, 1060, 1079, 1080, 1081, 1089], "transform_path_non_affin": [1025, 1057, 1058, 1060, 1079, 1080, 1081, 1089], "transform_angl": [1025, 1053, 1060, 1081], "pt": [1025, 1053, 1060, 1081], "pushoff": [1025, 1053, 1060, 1081], "1e": [1025, 1053, 1060, 1081, 1667, 1668, 1907, 1910], "invalid_non_affin": [1025, 1028, 1060, 1081], "invalid_affin": [1025, 1027, 1060, 1081], "invalid": [1025, 1026, 1043, 1049, 1050, 1060, 1081, 1293, 1295, 1324, 1325, 1358], "is_affin": [1025, 1045, 1060, 1071, 1081], "is_bbox": [1025, 1046, 1060, 1081], "pass_through": [1025, 1049, 1060, 1081], "ancestor": [1025, 1043, 1049, 1060, 1081], "even": [1025, 1034, 1049, 1060, 1081, 1173, 1277, 1318, 1402, 1426, 1921], "transformnod": [1025, 1043, 1060, 1081], "set_children": [1025, 1050, 1060, 1081], "let": [1025, 1050, 1060, 1081, 1907, 1909, 1910, 1912, 1914, 1915, 1918, 1919, 1920, 1921], "system": [1025, 1050, 1060, 1081, 1133, 1315, 1413, 1903, 1905, 1908, 1913, 1917, 1919], "know": [1025, 1050, 1060, 1081, 1111, 1408, 1419], "frozen": [1025, 1034, 1038, 1060, 1065, 1081], "node": [1025, 1038, 1060, 1065, 1081, 1174, 1175, 1176, 1310, 1314, 1420], "previous": [1025, 1038, 1060, 1065, 1081, 1112, 1278, 1295, 1343, 1569, 1903], "known": [1025, 1038, 1060, 1065, 1081], "deepcopi": [1025, 1038, 1060, 1065, 1081], "might": [1025, 1038, 1060, 1065, 1081, 1292, 1386, 1393, 1913], "_apply_theta_transform": [1031, 1082], "noth": [1032, 1090, 1099, 1112, 1119, 1303], "regard": 1034, "likewis": [1034, 1278], "naiv": 1034, "inaccuraci": 1034, "guarante": [1034, 1362, 1376, 1389, 1396], "wherea": 1034, "small": [1034, 1148, 1292, 1293, 1314, 1324, 1325, 1413, 1903, 1907, 1908], "epsilon": [1034, 1356], "mutat": 1034, "won": 1034, "anymor": 1034, "routin": 1035, "therefor": [1035, 1273, 1417, 1418], "situat": [1035, 1173], "whole": [1035, 1141, 1145, 1149, 1151, 1550, 1558, 1594, 1627, 1722, 1725, 1732, 1735, 1742, 1745, 1752, 1755, 1766, 1775, 1791, 1903], "x_isdata": 1036, "y_isdata": 1036, "tran": 1036, "transdata": [1036, 1123, 1285], "special": [1037, 1305, 1327], "composit": 1037, "hold": [1044, 1070, 1086], "temporari": [1044, 1070, 1086], "op": [1052, 1055, 1076, 1077, 1088], "measur": [1053, 1159, 1167, 1313, 1314], "smarter": 1054, "transformedbbox": [1054, 1341], "began": [1056, 1078], "kept": [1059, 1281, 1289, 1402, 1903], "backcompat": 1059, "capabl": [1059, 1903, 1904], "rest": 1060, "compon": [1060, 1148, 1151, 1153, 1314, 1428, 1429, 1502, 1505, 1506, 1507, 1508, 1510, 1511, 1514, 1521, 1522, 1523, 1525, 1527, 1528, 1530, 1531, 1532, 1535, 1536, 1538, 1542, 1543, 1550, 1559, 1569, 1580, 1581, 1594, 1608, 1610, 1611, 1612, 1614, 1615, 1616, 1617, 1619, 1621, 1622, 1623, 1624, 1625, 1627, 1641, 1643, 1644, 1645, 1646, 1648, 1649, 1650, 1651, 1653, 1654, 1655, 1656, 1658, 1659, 1661, 1662, 1664, 1665, 1666, 1667, 1671, 1672, 1674, 1675, 1677, 1678, 1680, 1681, 1682, 1683, 1684, 1686, 1687, 1689, 1690, 1691, 1693, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1705, 1706, 1707, 1708, 1709, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1830, 1831, 1833, 1910], "x_": 1060, "frac": [1060, 1159, 1683, 1721], "r_": 1060, "scale_transform": [1060, 1063, 1082], "bboxbas": [1060, 1063, 1237], "to_valu": [1060, 1074], "cannot": [1072, 1175, 1176, 1295, 1310, 1399, 1400, 1409, 1505], "sin": 1081, "screen": [1081, 1133, 1143, 1314], "circular": [1081, 1142], "arc": 1081, "_interpolation_step": 1081, "tr": [1081, 1088], "ensur": [1090, 1199, 1281, 1402, 1421, 1422, 1426, 1502, 1503, 1906, 1907], "strictli": [1090, 1410], "task": [1090, 1910], "deleg": 1090, "set_axi": [1090, 1098, 1102, 1110, 1112, 1116], "__call__": [1090, 1092, 1097, 1102, 1103, 1112, 1113], "nonsingular": [1090, 1096, 1112, 1115], "singular": [1090, 1096, 1112, 1115, 1277, 1303, 1305], "view_limit": [1090, 1101, 1112, 1117], "maxtick": [1090, 1091, 1097, 1112], "tick_valu": [1090, 1100, 1112], "set_param": [1090, 1099, 1112, 1292], "raise_if_exce": [1090, 1097, 1112], "longer": [1090, 1097, 1112, 1172, 1314, 1903], "create_dummy_axi": [1090, 1095, 1102, 1112], "v0": [1096, 1112, 1115], "v1": [1096, 1112, 1115], "inf": [1096, 1115, 1321, 1417, 1418, 1574, 1578, 1633, 1635, 1671, 1729, 1730, 1749, 1750, 1760, 1762, 1770, 1771, 1781, 1783, 1801, 1802], "slop": [1096, 1115], "expand": [1096, 1115, 1138, 1148, 1230, 1303, 1305, 1314, 1370, 1387, 1390, 1394, 1397, 1413], "interv": [1096, 1115, 1151, 1153, 1175, 1176, 1295, 1387, 1394, 1408, 1418, 1429, 1916], "appropri": [1096, 1115, 1303, 1305], "modif": [1096, 1115], "immedi": 1097, "user": [1097, 1133, 1179, 1199, 1281, 1283, 1284, 1322, 1323, 1354, 1356, 1429, 1683, 1721, 1837, 1860, 1882, 1891, 1899, 1903, 1913], "huge": 1097, "strang": 1097, "would": [1097, 1133, 1148, 1152, 1174, 1296, 1322, 1323, 1341, 1371, 1426, 1683, 1721, 1907, 1916], "except": [1097, 1112, 1122, 1132, 1140, 1144, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1401, 1402, 1403, 1404, 1407, 1410, 1418, 1429, 1430, 1433, 1453, 1683, 1721], "To": [1100, 1132, 1135, 1149, 1159, 1167, 1172, 1276, 1293, 1294, 1295, 1304, 1306, 1309, 1313, 1314, 1321, 1401, 1421, 1422, 1683, 1721], "behaviour": [1101, 1117, 1918], "format_tick": [1102, 1107], "format_data": [1102, 1105], "format_data_short": [1102, 1106], "short": [1102, 1106, 1358, 1903, 1908], "get_offset": [1102, 1108, 1276], "set_loc": [1102, 1111], "fix_minu": [1102, 1104], "want": [1102, 1104, 1133, 1148, 1273, 1292, 1310, 1314, 1321, 1322, 1323, 1356, 1389, 1396, 1417, 1418, 1921], "hyphen": [1102, 1104], "proper": [1102, 1104, 1281], "unicod": [1102, 1104], "2212": [1102, 1104], "typograph": [1102, 1104, 1321], "perform": [1102, 1104, 1122, 1132, 1137, 1151, 1154, 1159, 1167, 1294, 1298, 1306, 1313, 1320, 1401, 1407, 1409, 1433, 1904], "rc": [1102, 1104, 1138, 1149, 1172, 1173, 1276, 1277, 1278, 1279, 1281, 1303, 1304, 1305, 1310, 1311, 1315, 1321, 1380, 1385, 1392, 1401, 1402, 1416, 1417, 1418, 1430, 1431, 1434], "unicode_minu": [1102, 1104], "becaus": [1111, 1147, 1281, 1292, 1321, 1389, 1396, 1417, 1418, 1419, 1906], "work": [1112, 1277, 1303, 1305, 1311, 1321, 1362, 1376, 1389, 1396, 1402, 1417, 1418, 1451, 1903, 1905, 1909, 1918, 1920], "entir": [1112, 1428, 1429], "45": [1112, 1314, 1907, 1910], "theta_label": 1118, "callabl": [1122, 1124, 1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1147, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1326, 1328, 1336, 1356, 1401, 1402, 1411, 1413, 1429, 1433, 1453, 1683, 1721], "mlab": [1122, 1159, 1167, 1313, 1401, 1429, 1433], "normalis": [1122, 1433], "usevlin": [1122, 1433], "addition": [1122, 1142, 1281, 1293, 1303, 1305, 1310, 1324, 1325, 1364, 1388, 1395, 1433, 1564, 1565], "maxlag": [1122, 1433], "lag": [1122, 1433], "len": [1122, 1148, 1151, 1167, 1309, 1310, 1313, 1314, 1404, 1407, 1433, 1453], "linecollect": [1122, 1172, 1173, 1279, 1407, 1410, 1428, 1429, 1430, 1433], "accept": [1122, 1132, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1294, 1303, 1304, 1305, 1306, 1309, 1311, 1313, 1314, 1315, 1321, 1322, 1323, 1343, 1388, 1395, 1401, 1403, 1404, 1407, 1408, 1410, 1417, 1418, 1429, 1430, 1433, 1903, 1906], "interpret": [1122, 1132, 1133, 1147, 1148, 1149, 1151, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1294, 1295, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1356, 1401, 1403, 1404, 1407, 1410, 1417, 1418, 1429, 1430, 1433], "dedic": [1123, 1417, 1418], "necessari": [1123, 1237, 1310, 1311, 1390, 1397, 1417, 1905, 1918], "manual": [1123, 1912], "def": [1124, 1133, 1177, 1276], "lowlevel": 1125, "wrap": [1132, 1296, 1306, 1377, 1413], "signal": [1132, 1159, 1167, 1174, 1294, 1306, 1313, 1401, 1903, 1918], "sampl": [1132, 1159, 1167, 1278, 1294, 1306, 1313, 1401, 1910], "fourier": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "window_han": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "window_non": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "blackman": [1132, 1159, 1167, 1281, 1294, 1306, 1313, 1401], "ham": [1132, 1159, 1167, 1281, 1294, 1306, 1313, 1401, 1683, 1721], "bartlett": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "get_window": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "onesid": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "twosid": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "complex": [1132, 1159, 1167, 1294, 1304, 1306, 1313, 1401, 1433, 1453, 1904, 1919], "while": [1132, 1154, 1159, 1167, 1199, 1294, 1305, 1306, 1313, 1401, 1408, 1421, 1422, 1905, 1907], "fft": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "resolv": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "peak": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "detail": [1132, 1133, 1134, 1159, 1161, 1167, 1172, 1231, 1278, 1281, 1293, 1294, 1303, 1305, 1306, 1311, 1313, 1324, 1325, 1332, 1357, 1401, 1402, 1403, 1408, 1410, 1910, 1913, 1919], "extent": [1132, 1152, 1159, 1167, 1237, 1276, 1281, 1294, 1306, 1313, 1401, 1417, 1418], "acquir": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "downsampl": [1132, 1159, 1167, 1281, 1294, 1306, 1313, 1401], "baseband": [1132, 1159, 1167, 1294, 1306, 1313, 1401], "dpi": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1328, 1402, 1411, 1413], "corner": [1132, 1133, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1281, 1283, 1284, 1285, 1294, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1315, 1326, 1328, 1332, 1402, 1411, 1413, 1417, 1418, 1683, 1721, 1909], "antialias": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1281, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402, 1417, 1418], "aa": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "clip_box": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1402, 1411, 1413], "clip_on": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1326, 1402, 1411, 1413], "clip_path": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1402, 1411, 1413], "dash_capstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "capstyl": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "butt": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "dash_joinstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "joinstyl": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "miter": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "bevel": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "dash": [1132, 1140, 1143, 1144, 1148, 1152, 1159, 1167, 1172, 1173, 1175, 1176, 1273, 1276, 1279, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402, 1407, 1417, 1430], "ink": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1173, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "drawstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402, 1408], "mid": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1175, 1176, 1273, 1277, 1294, 1306, 1310, 1311, 1313, 1314, 1402, 1408], "fillstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "gapcolor": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "seq": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1149, 1159, 1167, 1172, 1273, 1283, 1294, 1306, 1310, 1311, 1313, 1402], "lw": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1358, 1402], "markerstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1321, 1402], "markeredgecolor": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "mec": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "markeredgewidth": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "mew": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "markerfacecolor": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "mfc": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "markerfacecoloralt": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "mfcalt": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "markeveri": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "abstractpatheffect": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1355, 1402, 1411, 1413], "pickradiu": [1132, 1140, 1143, 1144, 1148, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1402], "unknown": [1132, 1135, 1140, 1143, 1144, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1402, 1413], "sketch_param": [1132, 1135, 1140, 1141, 1143, 1144, 1145, 1148, 1149, 1152, 1159, 1167, 1172, 1175, 1176, 1273, 1276, 1283, 1294, 1303, 1305, 1306, 1310, 1311, 1313, 1314, 1326, 1402, 1411, 1413], "solid_capstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "solid_joinstyl": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "xdata": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "ydata": [1132, 1140, 1143, 1144, 1159, 1167, 1172, 1273, 1294, 1306, 1310, 1311, 1313, 1402], "unwrap": [1132, 1294, 1306, 1401], "textcoord": 1133, "arrowprop": [1133, 1135], "annotation_clip": 1133, "simplest": 1133, "anoth": [1133, 1305, 1399, 1400, 1410, 1829, 1916, 1920, 1921], "fraction": [1133, 1135, 1277, 1290, 1309], "subfigur": 1133, "parent": [1133, 1285, 1322, 1323, 1908], "who": [1133, 1421, 1422], "usabl": 1133, "rendererbas": [1133, 1169, 1237], "xcoord": 1133, "ycoord": 1133, "guid": [1133, 1285], "well": [1133, 1159, 1167, 1172, 1293, 1313, 1321, 1324, 1325, 1343, 1401, 1408, 1904, 1908, 1910, 1921], "fancyarrowpatch": [1133, 1410], "histor": [1133, 1311], "wai": [1133, 1148, 1175, 1176, 1296, 1304, 1310, 1332, 1408, 1410, 1417, 1418, 1909], "fanci": 1133, "arrowstyl": [1133, 1135, 1410], "headwidth": [1133, 1314], "head": [1133, 1135, 1314, 1315, 1407], "headlength": [1133, 1314], "shrink": 1133, "exact": [1133, 1417, 1418], "connectionstyl": 1133, "relpo": 1133, "patcha": 1133, "patchb": 1133, "shrinka": 1133, "shrinkb": 1133, "mutation_scal": 1133, "mutation_aspect": 1133, "pathpatch": 1133, "former": [1134, 1310], "affect": [1134, 1135, 1303, 1314, 1337, 1338, 1416, 1903, 1914], "further": [1134, 1138, 1142, 1148, 1281, 1304, 1332, 1362, 1376, 1389, 1396, 1402, 1919], "you": [1134, 1147, 1148, 1159, 1167, 1173, 1174, 1175, 1176, 1179, 1199, 1244, 1258, 1273, 1298, 1303, 1304, 1305, 1310, 1311, 1313, 1314, 1321, 1331, 1356, 1361, 1362, 1376, 1389, 1390, 1396, 1397, 1401, 1402, 1408, 1413, 1417, 1418, 1419, 1451, 1683, 1721, 1905, 1911, 1912, 1913, 1917, 1919, 1921], "yourself": [1134, 1179, 1199, 1390, 1397, 1451, 1908], "001": [1135, 1910], "tail": [1135, 1314, 1315], "length_includes_head": 1135, "head_width": 1135, "head_length": 1135, "overhang": 1135, "swept": [1135, 1314], "neg": [1135, 1149, 1387, 1394, 1417, 1827, 1897], "greater": [1135, 1151, 1251, 1265, 1303, 1305, 1326, 1386, 1387, 1393, 1394, 1806], "head_starts_at_zero": 1135, "edgecolor": [1135, 1141, 1145, 1146, 1148, 1149, 1150, 1152, 1175, 1176, 1276, 1283, 1303, 1305, 1314, 1321, 1914], "ec": [1135, 1141, 1145, 1148, 1149, 1152, 1175, 1176, 1276, 1283, 1303, 1305, 1314], "hatch": [1135, 1141, 1145, 1148, 1149, 1152, 1175, 1176, 1276, 1283, 1303, 1305, 1309, 1314, 1418], "fancyarrow": 1135, "produc": [1135, 1151, 1153, 1281, 1304, 1305, 1407, 1827, 1897, 1903, 1906, 1914, 1919], "leav": [1137, 1305, 1386, 1393, 1410, 1905], "unchang": [1137, 1386, 1393, 1415, 1416], "3d": [1137, 1292], "three": [1137, 1153, 1238, 1281, 1292, 1380, 1419, 1908, 1921], "Then": [1137, 1905], "regardless": [1137, 1141, 1143, 1145, 1303, 1375, 1384, 1391], "unlik": [1138, 1159, 1167, 1313, 1401], "autolimit_mod": 1138, "round_numb": 1138, "expans": [1138, 1390, 1397, 1409], "reus": 1138, "behav": [1138, 1364], "preserv": [1138, 1295], "preexist": 1138, "revers": [1138, 1277, 1386, 1393, 1453], "altern": [1138, 1276, 1277, 1303, 1305, 1310, 1385, 1392, 1413, 1419, 1905], "arbitrari": [1140, 1144, 1199, 1304, 1314, 1390, 1397, 1913], "thick": [1140, 1143, 1144, 1172], "red": [1140, 1143, 1144, 1146, 1150, 1163, 1164, 1172, 1174, 1310, 1358, 1413, 1415, 1417, 1418], "middl": [1140, 1141, 1144, 1145, 1148, 1314, 1315, 1332], "75": [1140, 1144, 1907, 1908, 1909, 1910, 1912, 1919], "close": [1141, 1145, 1175, 1176, 1404, 1410, 1411, 1418, 1454, 1478, 1897, 1906, 1909, 1916, 1918], "xlim": [1142, 1326, 1386], "ylim": [1142, 1326, 1393], "explicit": [1142, 1148, 1276, 1278, 1281, 1303, 1304, 1305, 1310, 1314, 1321, 1417, 1418, 1501, 1810, 1811, 1903, 1909], "disabl": [1142, 1340, 1356], "larg": [1142, 1277, 1303, 1305, 1413, 1415], "enough": 1142, "notifi": [1142, 1386, 1393, 1417, 1418], "thu": [1143, 1281, 1305], "exponenti": 1143, "decai": 1143, "semilog": 1143, "law": [1143, 1278], "howev": [1143, 1148, 1173, 1199, 1277, 1304, 1305, 1311, 1408, 1409, 1417, 1418, 1419, 1906, 1912, 1921], "undefin": 1143, "transax": [1143, 1283, 1285, 1341, 1413], "green": [1145, 1172, 1310, 1358, 1408], "transluc": [1145, 1415], "55": [1145, 1907, 1908, 1910, 1919], "blow": [1146, 1150, 1163, 1164], "nsector": [1146, 1150, 1163, 1164], "16": [1146, 1150, 1163, 1164, 1370, 1908, 1910, 1912, 1914, 1915, 1918, 1919, 1920], "cardin": [1146, 1150, 1163, 1164, 1330, 1332], "blowto": [1146, 1150, 1163, 1164], "pi": [1146, 1150, 1163, 1164, 1377], "rotat": [1146, 1148, 1150, 1163, 1164, 1309, 1314, 1413, 1415, 1906, 1908], "pollut": [1146, 1150, 1163, 1164], "black": [1146, 1149, 1150, 1152, 1163, 1164, 1310, 1371, 1413, 1903], "rgb": [1146, 1150, 1163, 1164, 1281, 1304, 1305, 1321], "cm": [1146, 1150, 1163, 1164], "calm_limit": [1146, 1150, 1163, 1164], "calm": [1146, 1150, 1163, 1164], "label_typ": 1147, "barcontain": [1147, 1149, 1277], "unnam": 1147, "preced": [1147, 1149, 1309, 1310, 1321, 1419], "galleri": [1147, 1149, 1172, 1281, 1303, 1305, 1309, 1322, 1323, 1339, 1360, 1361], "lines_bars_and_mark": [1147, 1149], "bar_label_demo": 1147, "horizontalalign": [1147, 1380, 1385, 1389, 1392, 1396, 1413], "verticalalign": [1147, 1380, 1389, 1396, 1413], "va": [1147, 1413], "tradition": 1148, "meteorologi": 1148, "technic": [1148, 1310, 1343], "As": [1148, 1179, 1199, 1314, 1417, 1418, 1903, 1905, 1907, 1921], "oppos": 1148, "quantit": 1148, "slant": 1148, "triangl": [1148, 1314, 1417, 1418, 1419, 1420], "variou": [1148, 1310, 1362, 1376, 1389, 1396], "increment": 1148, "schemat": 1148, "largest": [1148, 1276], "those": [1148, 1151, 1153, 1303, 1305, 1310, 1321, 1401, 1408, 1421, 1422, 1683, 1721, 1913], "smallest": [1148, 1459, 1469, 1476, 1483, 1491, 1499], "There": [1148, 1281, 1304, 1305, 1310, 1362, 1376, 1389, 1396], "cours": 1148, "ever": 1148, "easili": [1148, 1917], "distinguish": 1148, "shown": [1148, 1151, 1153, 1296, 1314, 1330, 1903, 1906, 1908], "65": [1148, 1907, 1908, 1910, 1918, 1919], "en": [1148, 1151], "wikipedia": [1148, 1151], "wiki": [1148, 1151], "wind_barb": 1148, "pivot": [1148, 1314], "meshgrid": [1148, 1314, 1410], "shaft": [1148, 1314], "barbcolor": 1148, "against": [1148, 1409, 1831, 1832], "shift": [1148, 1277], "awai": 1148, "flagcolor": 1148, "featur": [1148, 1305, 1408, 1903, 1915], "wish": [1148, 1173, 1321, 1910, 1919, 1920, 1921], "These": [1148, 1172, 1281, 1295, 1304, 1310, 1327, 1357, 1358, 1388, 1390, 1395, 1397, 1411, 1828, 1892, 1909, 1910, 1912, 1918, 1921], "twice": [1148, 1332], "emptybarb": 1148, "low": 1148, "fill_empti": 1148, "transpar": [1148, 1173, 1276, 1281, 1283, 1303, 1304, 1305, 1321, 1415, 1417, 1418], "alloc": [1148, 1357], "nearest": [1148, 1281, 1296, 1303, 1305, 1371, 1459, 1469, 1476, 1483, 1491, 1499], "truncat": 1148, "lowest": [1148, 1151, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "barb_incr": 1148, "flip_barb": 1148, "toward": [1148, 1277], "pressur": 1148, "northern": 1148, "hemispher": 1148, "flip": [1148, 1151, 1386, 1393], "polycollect": [1148, 1152, 1175, 1176, 1276, 1303, 1305, 1314, 1403, 1428, 1429], "clim": [1148, 1152, 1175, 1176, 1276, 1303, 1305, 1314], "rgba": [1148, 1152, 1175, 1176, 1276, 1281, 1303, 1304, 1305, 1314, 1321], "face": [1148, 1149, 1152, 1175, 1176, 1276, 1303, 1305, 1310, 1314, 1315, 1321, 1419], "thereof": [1148, 1152, 1175, 1176, 1276, 1303, 1305, 1314], "offset_transform": [1148, 1152, 1175, 1176, 1276, 1303, 1305, 1314], "transoffset": [1148, 1152, 1175, 1176, 1276, 1303, 1305, 1314], "verts_and_cod": [1148, 1152, 1175, 1176, 1276, 1303, 1314], "ment": 1149, "don": [1149, 1321, 1419], "tick_label": 1149, "de": 1149, "duplic": 1149, "best": [1149, 1309, 1909, 1910, 1915], "symmetr": [1149, 1172, 1377, 1403], "errorbar_featur": [1149, 1172], "capsiz": [1149, 1172], "error_kw": 1149, "horizontal_barchart_distribut": 1149, "patch_artist": [1151, 1153], "bootstrap": 1151, "usermedian": 1151, "conf_interv": 1151, "meanlin": [1151, 1153], "showmean": [1151, 1153, 1428, 1429], "showcap": [1151, 1153], "showbox": [1151, 1153], "showflier": [1151, 1153], "boxprop": [1151, 1153], "flierprop": [1151, 1153], "medianprop": [1151, 1153], "meanprop": [1151, 1153], "capprop": [1151, 1153], "whiskerprop": [1151, 1153], "manage_tick": [1151, 1153], "autorang": 1151, "capwidth": [1151, 1153], "quartil": [1151, 1153], "q1": [1151, 1153], "third": [1151, 1153, 1310, 1840, 1865, 1899, 1903], "q3": [1151, 1153], "median": [1151, 1153, 1428, 1429], "5x": 1151, "inter": 1151, "iqr": 1151, "flier": [1151, 1153], "past": [1151, 1153], "box_plot": 1151, "5iqr": 1151, "confid": [1151, 1153], "ci": [1151, 1153], "less": [1151, 1277, 1278, 1314, 1903], "distinct": 1151, "consist": [1151, 1310, 1903, 1907, 1908, 1914, 1915, 1917, 1920], "visual": [1151, 1281, 1402, 1907, 1910, 1912, 1914, 1915, 1917, 1918, 1919], "hide": 1151, "datum": 1151, "highest": [1151, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "tukei": 1151, "definit": [1151, 1175, 1176, 1834], "percentil": 1151, "particular": [1151, 1296, 1314, 1321, 1327, 1904, 1919], "outlier": [1151, 1153, 1277, 1278], "asymptot": 1151, "approxim": [1151, 1276, 1903, 1912], "mcgill": 1151, "1978": 1151, "kendal": 1151, "stuart": 1151, "1967": 1151, "extrem": [1151, 1153, 1919], "smaller": [1151, 1277, 1281, 1290, 1305, 1314, 1330, 1401], "distribut": [1151, 1277, 1428, 1429, 1903, 1908, 1910, 1919], "25th": 1151, "75th": 1151, "try": [1151, 1153, 1361], "Not": [1151, 1153], "shownotch": [1151, 1153], "That": [1151, 1153], "central": 1151, "arithmet": 1151, "estim": [1151, 1428, 1429], "probabl": [1151, 1277, 1309, 1410, 1683, 1721], "xwidth": 1152, "yheight": 1152, "blue": [1152, 1174, 1310, 1358], "interleav": 1152, "stat": [1153, 1428], "med": 1153, "whislo": 1153, "whishi": 1153, "cilo": 1153, "cihi": 1153, "mislead": 1154, "azimuth": 1154, "contourset": [1157, 1417, 1418], "contourlabel": 1157, "noverlap": [1159, 1167, 1313, 1401], "scale_by_freq": [1159, 1167, 1313, 1401], "c_": 1159, "p_": [1159, 1167, 1313, 1921], "xx": [1159, 1313, 1413], "yy": 1159, "block": [1159, 1167, 1313, 1401, 1683, 1721, 1910], "NOT": [1159, 1167, 1313, 1401], "incorrect": [1159, 1167, 1313, 1401], "ing": [1159, 1167, 1313, 1401], "trend": [1159, 1167, 1313, 1401], "matlab": [1159, 1167, 1313, 1401, 1407], "modul": [1159, 1167, 1313, 1401, 1451, 1453, 1501, 1897, 1903], "detrend_mean": [1159, 1167, 1313, 1401], "detrend_linear": [1159, 1167, 1313, 1401], "hz": [1159, 1167, 1313, 1401], "compat": [1159, 1167, 1172, 1313, 1358, 1401, 1410], "cxy": 1159, "bendat": [1159, 1167, 1313], "piersol": [1159, 1167, 1313], "analysi": [1159, 1167, 1313, 1904], "procedur": [1159, 1167, 1313], "john": [1159, 1167, 1313], "son": [1159, 1167, 1313], "1986": [1159, 1167, 1313], "backend_bas": [1161, 1199], "linspac": [1163, 1164, 1453, 1906, 1907, 1917], "return_lin": [1167, 1313], "welch": [1167, 1313], "averag": [1167, 1276, 1313, 1314, 1913], "periodogram": [1167, 1313, 1401], "loss": [1167, 1313], "due": [1167, 1175, 1176, 1303, 1305, 1313, 1332, 1892, 1903, 1907, 1915], "pxy": 1167, "log_": [1167, 1276, 1313], "decibel": [1167, 1313], "though": [1167, 1313, 1906, 1921], "mousebutton": [1168, 1406], "press": [1168, 1406], "elinewidth": 1172, "barsabov": 1172, "lolim": 1172, "uplim": 1172, "xlolim": 1172, "xuplim": 1172, "erroreveri": 1172, "capthick": 1172, "insensit": 1172, "sensibl": 1172, "backward": [1172, 1410, 1918], "ride": 1172, "releas": [1172, 1903, 1905], "caret": 1172, "lim": [1172, 1907, 1918], "tricki": 1172, "upward": [1172, 1281], "errorbarcontain": 1172, "plotlin": 1172, "caplin": 1172, "barlinecol": 1172, "rand": 1172, "alias": [1172, 1281, 1358, 1364], "linelength": 1173, "commonli": [1173, 1276, 1310], "neurosci": 1173, "neural": 1173, "spike": 1173, "dot": [1173, 1279, 1310, 1314, 1407, 1417, 1430, 1683, 1721], "discret": [1173, 1276], "arriv": 1173, "peopl": 1173, "busi": 1173, "dai": [1173, 1919], "month": [1173, 1912], "hurrican": 1173, "year": [1173, 1386, 1901], "centuri": 1173, "practic": 1173, "arrang": [1173, 1277, 1683, 1721], "orthogon": [1173, 1485], "stretch": [1173, 1281, 1413], "opaqu": [1173, 1276, 1281, 1303, 1304, 1305, 1321, 1415, 1417, 1418], "dashdot": [1173, 1279, 1417, 1430], "onoffseq": 1173, "eventcollect": 1173, "legal": [1174, 1403], "section": [1175, 1176, 1303, 1305, 1310, 1401, 1911, 1913, 1917, 1919, 1921], "impli": [1175, 1176, 1910], "isol": [1175, 1176], "unfil": [1175, 1176, 1277], "adjac": [1175, 1176, 1303, 1305, 1371], "semant": [1175, 1176, 1277], "often": [1175, 1176, 1908, 1913], "intersect": [1175, 1176, 1314, 1461, 1828, 1829, 1897], "occur": [1175, 1176, 1281, 1408], "continu": [1175, 1176, 1408, 1410, 1921], "constantli": [1175, 1176, 1408], "recurs": 1177, "isinst": [1177, 1453], "comma": 1179, "enclos": 1179, "bracket": [1179, 1903], "colorbar": [1179, 1417, 1418, 1903], "fmt_xdata": 1180, "fall": [1180, 1181, 1417, 1918], "fmt_ydata": 1181, "chosen": [1194, 1276, 1283, 1284, 1293, 1310, 1324, 1325, 1340, 1903], "explan": [1219, 1303, 1417, 1418, 1419], "sinc": [1222, 1281, 1402, 1407, 1903, 1914, 1918], "canva": [1222, 1237, 1281], "get_render": [1222, 1237], "wiggl": [1230, 1370, 1403], "perpendicular": [1230, 1370, 1407], "shrunken": [1230, 1370], "clockwis": [1233, 1309, 1314, 1315, 1373, 1375], "counterclockwis": [1233, 1309, 1373], "bbox_extra_artist": 1237, "for_layout_onli": 1237, "_axes_loc": 1237, "caller": 1237, "tightbbox": 1237, "compar": [1237, 1304, 1903, 1906, 1914, 1915], "spine": [1237, 1243], "flush": [1238, 1380], "ticklabel": [1243, 1255, 1269, 1337, 1338, 1389, 1396], "primarili": [1245, 1246, 1247, 1259, 1260, 1261], "tick1": [1247, 1261], "tick2": [1247, 1261], "henc": [1257, 1271, 1417, 1418, 1906, 1913, 1914, 1915, 1919], "suppli": [1273, 1276, 1278, 1281, 1303, 1304, 1305, 1321, 1322, 1323, 1356, 1417, 1418, 1683, 1721], "compris": 1273, "anyth": [1274, 1281, 1910], "yscale": [1276, 1326], "reduce_c_funct": 1276, "mincnt": 1276, "accumul": [1276, 1277], "nx": [1276, 1278], "ny": [1276, 1278], "zig": 1276, "zag": 1276, "illustr": 1276, "logarithm": [1276, 1278, 1293, 1324, 1325], "lognorm": [1276, 1278], "log10": [1276, 1294, 1401], "cell": [1276, 1304, 1410, 1411], "assign": [1276, 1310, 1403, 1409, 1417, 1418], "mx2": 1276, "get_arrai": 1276, "hbar": 1276, "vbar": 1276, "colormapnorm": [1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "symlog": [1276, 1278, 1281, 1303, 1304, 1305, 1321, 1388, 1395, 1417, 1418], "logit": [1276, 1278, 1281, 1303, 1304, 1305, 1321, 1388, 1395, 1417, 1418], "get_scale_nam": [1276, 1278, 1281, 1303, 1304, 1305, 1321, 1417, 1418], "instanti": [1276, 1278, 1281, 1285, 1303, 1304, 1305, 1321, 1417, 1418], "sometim": [1276, 1310, 1403], "lead": [1276, 1281, 1342], "unsightli": 1276, "unpaint": 1276, "outlin": [1276, 1304], "aggreg": 1276, "amax": 1276, "cumul": 1277, "histtyp": 1277, "rwidth": 1277, "n0": 1277, "n1": 1277, "patches0": 1277, "patches1": 1277, "unequ": [1277, 1903], "righthand": 1277, "word": [1277, 1281], "strategi": 1277, "histogram_bin_edg": 1277, "fd": 1277, "doan": 1277, "scott": [1277, 1429], "stone": 1277, "rice": 1277, "sturg": 1277, "raw": [1277, 1281], "diff": [1277, 1698], "datapoint": 1277, "amount": [1277, 1401], "barstack": 1277, "stepfil": 1277, "tradit": 1277, "lineplot": 1277, "nbin": [1277, 1292], "data1": 1277, "data2": 1277, "significantli": [1277, 1407], "acceler": 1277, "cmin": [1278, 1428, 1429], "cmax": [1278, 1428, 1429], "x_edg": 1278, "y_edg": 1278, "leftmost": 1278, "rightmost": 1278, "talli": 1278, "w_i": 1278, "weigh": 1278, "x_i": [1278, 1683, 1721], "y_i": 1278, "upon": 1278, "bi": 1278, "xedg": 1278, "yedg": 1278, "accomplish": 1278, "powernorm": 1278, "begin": [1279, 1403, 1430, 1910], "interpolation_stag": 1281, "filternorm": 1281, "filterrad": 1281, "resampl": 1281, "grayscal": 1281, "grai": 1281, "255": [1281, 1304, 1305], "artifact": [1281, 1303], "images_contours_and_field": [1281, 1303, 1305], "image_antialias": 1281, "pil": 1281, "particularli": [1281, 1402], "shortcut": [1281, 1310, 1358, 1402, 1417, 1418, 1882], "bilinear": 1281, "bicub": 1281, "spline16": 1281, "spline36": 1281, "han": 1281, "hermit": 1281, "kaiser": 1281, "quadric": 1281, "catrom": 1281, "bessel": 1281, "mitchel": 1281, "lanczo": 1281, "svg": [1281, 1304, 1418], "down": [1281, 1314, 1903, 1906, 1919], "upsampl": 1281, "viewer": 1281, "least": [1281, 1411, 1525, 1683, 1721, 1893], "act": [1281, 1314], "anti": [1281, 1315], "happen": 1281, "interpolation_method": 1281, "overview": [1281, 1902, 1903, 1904, 1917], "discuss": [1281, 1303, 1305], "antigrain": 1281, "carri": 1281, "matric": [1281, 1402], "downward": 1281, "imshow_ext": 1281, "numcol": 1281, "numrow": 1281, "doesn": 1281, "rule": [1281, 1608, 1609, 1618, 1626, 1903, 1915, 1921], "graph": 1281, "larger": [1281, 1303, 1305, 1314, 1377], "coincid": [1281, 1409, 1426], "channel": [1281, 1905], "unassoci": 1281, "disregard": 1281, "opac": 1281, "premultipli": 1281, "adopt": 1281, "99": [1283, 1907, 1908, 1910, 1915, 1918, 1919], "api": [1283, 1284, 1285, 1322, 1323, 1354, 1903, 1904, 1907, 1919], "y0": [1283, 1285, 1417, 1418], "mark": [1283, 1295, 1421, 1422, 1428, 1429, 1912], "rectangle_patch": [1283, 1284], "connector_lin": [1283, 1284], "connectionpatch": [1283, 1284], "four": [1283, 1284, 1683, 1721, 1903, 1906, 1909], "lower_left": 1283, "upper_left": 1283, "lower_right": 1283, "upper_right": 1283, "deem": [1283, 1284], "aitoff": 1285, "hammer": 1285, "lambert": 1285, "mollweid": 1285, "rectilinear": [1285, 1371], "axes_class": 1285, "incompat": 1285, "axisartist_us": 1285, "axin1": 1285, "axin2": 1285, "decimal_plac": 1290, "decim": [1290, 1416], "isax": 1290, "fontproperti": [1290, 1315, 1413], "font": [1290, 1413, 1415], "borderpad": 1290, "whitespac": 1290, "border": [1290, 1309, 1401], "shadow": [1290, 1309], "behind": [1290, 1906], "labelspac": 1290, "005": [1290, 1314], "handlelenght": 1290, "handletextsep": 1290, "02": [1290, 1806, 1907, 1908, 1910, 1911, 1916, 1918], "borderaxespad": 1290, "involv": [1292, 1722, 1732, 1742, 1752, 1903], "maxnloc": [1292, 1417, 1418], "fmt2": [1293, 1310, 1324, 1325, 1408], "thin": [1293, 1324, 1325, 1408], "concept": [1293, 1324, 1325, 1408, 1903, 1906, 1918], "nonposit": [1293, 1324, 1325], "decad": [1293, 1324, 1325, 1390, 1397], "veri": [1293, 1303, 1324, 1325, 1908, 1909, 1910, 1919], "db": [1294, 1401], "spec": [1294, 1310, 1401, 1415], "typeerror": [1295, 1453], "xmargin": [1295, 1326], "ymargin": [1295, 1326], "alter": 1295, "assumpt": [1295, 1912], "them": [1298, 1310, 1409, 1415, 1451, 1683, 1721, 1909, 1920], "problem": [1298, 1502, 1503, 1506, 1507, 1510, 1511, 1523, 1524, 1525, 1526, 1527, 1528, 1532, 1533, 1535, 1536, 1543, 1544, 1550, 1552, 1553, 1554, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1586, 1587, 1594, 1608, 1609, 1610, 1611, 1612, 1617, 1618, 1619, 1620, 1621, 1622, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1888, 1903, 1910, 1919], "quadrilater": [1303, 1304, 1305], "slow": [1303, 1903, 1906], "much": [1303, 1305, 1916], "faster": [1303, 1304, 1305, 1321, 1919], "quad": [1303, 1305], "drop": [1303, 1305, 1903], "halfwai": [1303, 1305], "pcolormesh_grid": [1303, 1305], "force_edgecolor": [1303, 1305], "mesh": [1303, 1304, 1305], "elimin": 1303, "artifici": [1303, 1600, 1893, 1916], "stroke": 1303, "prefer": [1303, 1305, 1321, 1905], "equidist": [1303, 1305], "surround": 1303, "nrow": [1303, 1305], "ncolumn": [1303, 1305], "fastest": 1304, "lack": 1304, "position": [1304, 1417, 1418, 1419], "monoton": 1304, "fast": [1304, 1451, 1904], "slowest": 1304, "compact": 1304, "pcolorimag": 1304, "gouraud": [1305, 1419], "smooth": [1305, 1827], "cari": 1305, "misc": [1305, 1339, 1360, 1361], "rasterization_demo": [1305, 1360, 1361], "almost": 1305, "slight": [1305, 1310], "irrespect": [1305, 1903], "fire": [1307, 1356], "pctdistanc": 1309, "labeldist": 1309, "startangl": 1309, "counterclock": 1309, "wedgeprop": 1309, "textprop": 1309, "rotatelabel": 1309, "wedg": 1309, "shapes_and_collect": 1309, "hatch_style_refer": 1309, "pct": 1309, "still": [1309, 1339], "beneath": 1309, "conflict": [1309, 1310], "autotext": 1309, "notat": [1310, 1416], "bo": 1310, "ditto": 1310, "pluss": 1310, "mix": [1310, 1775, 1907], "go": 1310, "could": [1310, 1683, 1721, 1903, 1913, 1915, 1917, 1920], "col": 1310, "syntax": [1310, 1683, 1721], "prop_cycl": [1310, 1321, 1326], "ro": 1310, "abbrevi": [1310, 1332], "quickli": 1310, "ambigu": 1310, "issu": [1310, 1361, 1903, 1904], "suppress": 1310, "adapt": 1310, "bubbl": 1310, "charact": [1310, 1407], "triangle_down": 1310, "triangle_up": 1310, "triangle_left": 1310, "triangle_right": 1310, "tri_down": 1310, "tri_up": 1310, "tri_left": 1310, "tri_right": 1310, "octagon": 1310, "pentagon": 1310, "star": 1310, "hexagon1": 1310, "hexagon2": 1310, "diamond": [1310, 1314], "thin_diamond": 1310, "_": 1310, "letter": [1310, 1808, 1826], "cyan": 1310, "magenta": 1310, "yellow": 1310, "white": [1310, 1914], "cn": 1310, "hex": [1310, 1453], "008000": 1310, "plain": [1311, 1416], "timezon": [1311, 1431, 1434], "axis_d": 1311, "resort": 1311, "tzinfo": [1311, 1431, 1434], "date2num": 1311, "num": 1311, "num2dat": 1311, "drang": 1311, "autodateloc": 1311, "dateloc": 1311, "autodateformatt": 1311, "dateformatt": 1311, "mathrm": 1313, "pxx": 1313, "scale_unit": [1314, 1909], "headaxislength": 1314, "uv": [1314, 1830, 1831, 1897], "gradient": [1314, 1550, 1559, 1569, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "correspondingli": 1314, "synonym": [1314, 1683, 1721], "inch": [1314, 1315], "summar": [1314, 1903], "minshaft": 1314, "terribl": 1314, "minlength": [1314, 1410], "guidelin": 1314, "proportion": 1314, "headaxi": 1314, "protrud": 1314, "broken": 1314, "labelpo": 1315, "somewher": [1315, 1914], "labelsep": 1315, "labelcolor": [1315, 1415], "font_manag": [1315, 1413], "famili": [1315, 1413], "variant": [1315, 1413], "At": [1317, 1411, 1908], "invis": [1317, 1421, 1422], "until": [1318, 1410, 1426, 1883, 1885, 1903], "redrawn": 1318, "figurecanvasbas": 1318, "draw_idl": 1318, "wa": [1318, 1371, 1915, 1918], "undo": [1320, 1912], "satisfi": 1320, "constraint": [1320, 1332, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1543, 1544, 1550, 1553, 1559, 1560, 1561, 1562, 1564, 1565, 1567, 1568, 1569, 1573, 1577, 1580, 1594, 1627, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1685, 1692, 1698, 1704, 1710, 1716, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1776, 1777, 1791, 1798, 1888, 1894, 1910], "plotnonfinit": 1321, "72": [1321, 1907, 1908, 1909, 1910, 1918], "rcparam": [1321, 1380, 1389, 1396, 1413, 1916, 1918], "indistinguish": 1321, "shorthand": [1321, 1330], "nonfinit": 1321, "bad": 1321, "set_bad": 1321, "scatterplot": 1321, "unmask": 1321, "fundament": 1321, "lambda": [1322, 1323, 1683, 1721, 1916, 1918], "reciproc": [1322, 1323], "subplots_axes_and_figur": [1322, 1323], "secondary_axi": [1322, 1323], "convers": [1322, 1323], "_secondary_ax": [1322, 1323], "secondaryaxi": [1322, 1323], "miscellan": [1322, 1323, 1413], "xtick": [1324, 1326], "ytick": [1325, 1326], "autoscale_on": 1326, "autoscalex_on": 1326, "autoscaley_on": 1326, "axisbelow": 1326, "box_aspect": 1326, "frame_on": 1326, "radii_angl": 1326, "rasterization_zord": 1326, "rgrid": 1326, "rlabel_posit": 1326, "rlim": 1326, "rscale": 1326, "rtick": 1326, "theta_direct": 1326, "theta_offset": 1326, "theta_zero_loc": 1326, "thetagrid": 1326, "thetalim": 1326, "xbound": 1326, "xticklabel": 1326, "ybound": 1326, "yticklabel": 1326, "sw": [1326, 1330, 1332, 1375], "se": [1326, 1330, 1332, 1375], "ne": [1326, 1330, 1375], "navigate_mod": 1326, "impos": 1327, "restrict": 1327, "partli": 1327, "inclus": 1329, "southwest": 1330, "diagram": 1330, "nw": [1330, 1375], "approach": [1331, 1913], "blit": 1331, "advanc": 1331, "meet": 1332, "zorder_demo": 1339, "confus": 1340, "unexpect": [1342, 1389, 1396], "transformedpath": 1343, "toolcursorposit": 1352, "navigationtoolbar2": 1352, "toler": [1356, 1550, 1562, 1594, 1627, 1663, 1667, 1668, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "hit": [1356, 1918, 1921], "pickev": 1356, "from_bound": 1357, "from_ext": 1357, "cycler": 1358, "label2": [1358, 1389, 1396], "values2": 1358, "simultan": 1358, "Its": 1358, "favor": 1358, "rcsetup": 1358, "unvalid": 1358, "deactiv": [1360, 1905], "angular": [1362, 1363], "formatstrformatt": [1362, 1376], "delet": [1362, 1376, 1389, 1396], "immin": [1362, 1376, 1389, 1396], "risk": [1362, 1376, 1389, 1396], "lost": [1362, 1376, 1389, 1396], "set_tick_param": [1362, 1376, 1389, 1396], "polarax": [1362, 1376], "get_gridlin": [1362, 1376], "get_ticklabel": [1362, 1376], "128": [1370, 1401], "pgf": 1370, "rng": 1370, "clearer": 1371, "1px": 1371, "grei": 1371, "realli": [1371, 1919], "wide": 1371, "macosx": 1371, "vertex": 1371, "anticlockwis": 1373, "minval": 1377, "maxval": 1377, "titles": [1380, 1389, 1396], "fontweight": [1380, 1389, 1396, 1413], "titleweight": [1380, 1389, 1396], "titlecolor": 1380, "titleloc": 1380, "titlei": 1380, "titlepad": 1380, "honor": [1384, 1391], "labelloc": [1385, 1392], "decreas": [1386, 1393], "right_lim": 1386, "suppos": [1386, 1393], "ago": 1386, "your": [1387, 1394, 1904, 1905, 1917], "scalebas": [1388, 1395], "linearscal": [1388, 1395], "logscal": [1388, 1395], "symmetricallogscal": [1388, 1395], "logitscal": [1388, 1395], "funcscal": [1388, 1395], "register_scal": [1388, 1395], "ll": [1389, 1396], "set_": [1389, 1396], "fixedloc": [1389, 1390, 1396, 1397], "free": [1389, 1396], "label1": [1389, 1396], "set_major_formatt": [1390, 1397], "mandatori": [1390, 1397], "intent": [1390, 1397], "prevent": [1390, 1397, 1903], "surpris": [1390, 1397], "top_lim": 1393, "ocean": 1393, "surfac": 1393, "construct": [1399, 1400, 1419, 1904], "xextent": 1401, "split": 1401, "what": 1401, "success": [1401, 1910], "midpoint": 1401, "spars": [1402, 1903], "spmatrix": 1402, "unstack": 1403, "y3": 1403, "y4": 1403, "weighted_wiggl": 1403, "themeriv": 1403, "account": [1403, 1411, 1907], "layer": [1403, 1907, 1908], "streamgraph": 1403, "leebyron": 1403, "val": [1404, 1428], "steppatch": 1404, "use_line_collect": 1407, "c0": 1407, "c3": [1407, 1697, 1698], "old": [1407, 1517, 1518], "stemcontain": 1407, "markerlin": 1407, "stemlin": 1407, "inspir": 1407, "uniformli": 1408, "rare": 1408, "stick": 1409, "moreov": 1409, "bump": 1409, "arrows": 1410, "start_point": 1410, "maxlength": 1410, "integration_direct": 1410, "broken_streamlin": 1410, "evenli": 1410, "x_1d": 1410, "y_1d": 1410, "veloc": [1410, 1437, 1439, 1441, 1445, 1446, 1449, 1898], "domain": [1410, 1909], "30x30": 1410, "travers": 1410, "density_x": 1410, "density_i": 1410, "With": [1410, 1916], "nx2": [1410, 1424], "termin": [1410, 1910], "too": 1410, "streamplotset": 1410, "patchcollect": 1410, "colwidth": 1411, "rowlabel": 1411, "rowcolour": 1411, "rowloc": 1411, "collabel": 1411, "colcolour": 1411, "colloc": 1411, "header": 1411, "finer": 1411, "grain": 1411, "break": 1411, "background": [1411, 1413, 1732, 1733, 1895, 1903, 1909, 1910, 1913], "ncol": 1411, "substr": 1411, "brtl": 1411, "visible_edg": 1411, "backgroundcolor": 1413, "fancybboxpatch": 1413, "fontfamili": 1413, "fontnam": 1413, "serif": 1413, "san": 1413, "cursiv": 1413, "fantasi": 1413, "monospac": 1413, "font_properti": 1413, "medium": 1413, "fontstretch": 1413, "ultra": 1413, "condens": 1413, "semi": [1413, 1906], "fontstyl": 1413, "ital": 1413, "obliqu": 1413, "fontvari": 1413, "ultralight": 1413, "light": 1413, "roman": 1413, "semibold": 1413, "demibold": 1413, "demi": 1413, "bold": 1413, "heavi": 1413, "linespac": 1413, "math_fontfamili": 1413, "multialign": 1413, "ma": 1413, "parse_math": 1413, "rotation_mod": 1413, "transform_rotates_text": 1413, "usetex": 1413, "get_tick_param": 1415, "inout": 1415, "labels": 1415, "labelbottom": 1415, "labeltop": 1415, "labelleft": 1415, "labelright": 1415, "labelrot": 1415, "grid_color": 1415, "grid_alpha": 1415, "grid_linewidth": 1415, "grid_linestyl": 1415, "useoffset": 1416, "uselocal": 1416, "usemathtext": 1416, "sci": 1416, "scientif": 1416, "english": 1416, "use_local": 1416, "mathtext": 1416, "use_mathtext": 1416, "attributeerror": [1416, 1453], "triangul": [1417, 1418, 1419, 1420], "neither": [1417, 1418, 1419, 1420, 1912, 1914], "clariti": [1417, 1418, 1419], "mutual": [1417, 1418, 1419, 1420], "exclus": [1417, 1418, 1419, 1420], "set_mask": [1417, 1418], "tri": [1417, 1418], "nice": [1417, 1418, 1910], "tricontourset": [1417, 1418], "ascend": [1417, 1418], "shorter": [1417, 1418], "set_und": [1417, 1418], "set_ov": [1417, 1418], "xunit": [1417, 1418], "yunit": [1417, 1418], "conversioninterfac": [1417, 1418], "monochrom": 1417, "negative_linestyl": 1417, "crosshatch": 1418, "postscript": 1418, "z1": 1418, "z2": 1418, "sens": 1419, "other_paramet": [1419, 1420], "inherit": [1421, 1422], "linearloc": [1421, 1422], "xydata": 1424, "union": [1424, 1463, 1897], "showextrema": [1428, 1429], "showmedian": [1428, 1429], "quantil": [1428, 1429], "kernel": [1428, 1429], "extrema": [1428, 1429], "cmean": [1428, 1429], "cbar": [1428, 1429], "cmedian": [1428, 1429], "cquantil": [1428, 1429], "bw_method": 1429, "stand": 1429, "bandwidth": 1429, "silverman": 1429, "kde": 1429, "gaussiankd": 1429, "sum_n": 1433, "cdot": [1433, 1683, 1721], "calc_w": [1437, 1440, 1441, 1446, 1898], "z0": [1437, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1879, 1898, 1899, 1907, 1908], "rough": [1437, 1438, 1439, 1441, 1442, 1443, 1445, 1446, 1447, 1449, 1879, 1899], "friction": [1437, 1439, 1441, 1445, 1446, 1449, 1898], "logz": [1438, 1443, 1447, 1898], "lz": [1438, 1442, 1443, 1447], "ws_ref": [1439, 1445, 1449, 1898], "h_ref": [1439, 1445, 1449, 1898], "height0": [1440, 1898], "ws0": [1440, 1898], "psi": [1441, 1444, 1446, 1448, 1898], "lgz": [1442, 1898], "monin": [1444, 1445, 1448, 1449, 1858, 1899, 1908], "obukhov": [1444, 1445, 1448, 1449, 1908], "all_subclass": [1450, 1897], "cl": [1450, 1461, 1462, 1897], "cubic_root": [1451, 1897, 1903], "a0": [1451, 1897], "a1": [1451, 1897], "a2": [1451, 1897], "a3": [1451, 1897], "root": [1451, 1897], "spare": 1451, "github": [1451, 1902, 1903, 1904, 1905, 1922], "opencv": 1451, "blob": 1451, "master": 1451, "calib3d": 1451, "src": 1451, "polynom_solv": 1451, "cpp": 1451, "n_a0": 1451, "delta_wd": [1452, 1897], "wd_a": [1452, 1897], "wd_b": [1452, 1897], "exec_python": [1453, 1897], "newlin": [1453, 1897], "__builtins__": 1453, "arithmeticerror": 1453, "assertionerror": 1453, "baseexcept": 1453, "blockingioerror": 1453, "brokenpipeerror": 1453, "buffererror": 1453, "byteswarn": 1453, "childprocesserror": 1453, "connectionabortederror": 1453, "connectionerror": 1453, "connectionrefusederror": 1453, "connectionreseterror": 1453, "deprecationwarn": 1453, "eoferror": 1453, "ellipsi": 1453, "environmenterror": 1453, "oserror": 1453, "fileexistserror": 1453, "filenotfounderror": 1453, "floatingpointerror": 1453, "futurewarn": 1453, "generatorexit": 1453, "ioerror": 1453, "importerror": 1453, "importwarn": 1453, "indentationerror": 1453, "indexerror": 1453, "interruptederror": 1453, "isadirectoryerror": 1453, "keyboardinterrupt": 1453, "lookuperror": 1453, "memoryerror": 1453, "modulenotfounderror": 1453, "nameerror": 1453, "notadirectoryerror": 1453, "notimplementederror": 1453, "pendingdeprecationwarn": 1453, "permissionerror": 1453, "processlookuperror": 1453, "recursionerror": 1453, "referenceerror": 1453, "resourcewarn": 1453, "runtimeerror": 1453, "runtimewarn": 1453, "stopasynciter": 1453, "stopiter": 1453, "syntaxerror": 1453, "syntaxwarn": 1453, "systemerror": 1453, "systemexit": 1453, "taberror": 1453, "timeouterror": 1453, "unboundlocalerror": 1453, "unicodedecodeerror": 1453, "unicodeencodeerror": 1453, "unicodeerror": 1453, "unicodetranslateerror": 1453, "unicodewarn": 1453, "userwarn": 1453, "zerodivisionerror": 1453, "__build_class__": 1453, "built": 1453, "__debug__": 1453, "__doc__": 1453, "nnoteworthi": 1453, "nil": 1453, "__import__": 1453, "__loader__": 1453, "_frozen_importlib": 1453, "builtinimport": 1453, "__name__": 1453, "__package__": 1453, "__pybind11_internals_v4_gcc_libstdcpp_cxxabi1014__": 1453, "capsul": 1453, "null": 1453, "__spec__": 1453, "modulespec": 1453, "loader": 1453, "ascii": 1453, "breakpoint": 1453, "bytearrai": 1453, "chr": 1453, "compil": 1453, "copyright": 1453, "2001": 1453, "2021": [1453, 1908], "softwar": [1453, 1901, 1904, 1908], "foundat": 1453, "reserv": 1453, "beopen": 1453, "1995": 1453, "corpor": 1453, "nation": 1453, "research": [1453, 1904], "1991": 1453, "sticht": 1453, "mathematisch": 1453, "centrum": 1453, "amsterdam": 1453, "credit": 1453, "thank": [1453, 1903], "cwi": 1453, "cnri": 1453, "zope": 1453, "cast": 1453, "thousand": 1453, "develop": [1453, 1904], "delattr": 1453, "dir": 1453, "enumer": [1453, 1906, 1907], "eval": 1453, "exec": 1453, "exit": 1453, "ctrl": 1453, "eof": 1453, "frozenset": 1453, "getattr": 1453, "hasattr": 1453, "interact": 1453, "licens": 1453, "memoryview": 1453, "oct": 1453, "ord": 1453, "quit": 1453, "setattr": 1453, "staticmethod": 1453, "super": [1453, 1595, 1632, 1769, 1780, 1800], "__cached__": 1453, "home": [1453, 1907, 1909, 1916, 1918], "jona": [1453, 1901, 1907, 1909, 1916, 1918], "git": [1453, 1904, 1905, 1907, 1909, 1916, 1918, 1922], "__pycache__": 1453, "cpython": 1453, "38": [1453, 1910, 1912, 1916, 1919], "pyc": 1453, "__file__": 1453, "_frozen_importlib_extern": 1453, "sourcefileload": 1453, "venv": [1453, 1905], "lib": 1453, "python3": [1453, 1905], "site": [1453, 1908, 1910], "__init__": 1453, "7000": [1453, 1915, 1916], "119": [1453, 1916], "namespac": 1453, "geometri": [1454, 1456, 1460, 1461, 1462, 1463, 1464, 1466, 1470, 1471, 1477, 1478, 1484, 1485, 1488, 1492, 1493, 1494, 1496, 1500, 1502, 1503, 1722, 1723, 1732, 1733, 1742, 1743, 1752, 1753, 1808, 1826, 1893, 1895, 1897, 1910], "p_min": [1454, 1457, 1458, 1461, 1463, 1467, 1468, 1471, 1474, 1475, 1478, 1481, 1482, 1485, 1489, 1490, 1493, 1497, 1498, 1910], "points_dist": [1454, 1459, 1461, 1463, 1469, 1471, 1476, 1478, 1483, 1485, 1491, 1493, 1499], "return_nearest": [1454, 1459, 1461, 1463, 1469, 1471, 1476, 1478, 1483, 1485, 1491, 1493, 1499], "points_insid": [1454, 1460, 1461, 1463, 1470, 1471, 1477, 1478, 1484, 1485, 1492, 1493, 1500], "add_to_figur": [1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495, 1910], "show_boundari": [1454, 1455, 1461, 1463, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1493, 1495], "fill_mod": [1455, 1465, 1471, 1473, 1478, 1480, 1485, 1487, 1495, 1910], "inside_slategrai": [1455, 1465, 1495], "pars_boundari": [1455, 1465, 1473, 1480, 1487, 1495], "pars_dist": [1455, 1465, 1473, 1480, 1487, 1495, 1910], "dist": [1455, 1459, 1465, 1469, 1473, 1476, 1480, 1483, 1487, 1491, 1495, 1499, 1526, 1683, 1721], "dist_insid": [1455, 1465, 1473, 1480, 1487, 1495, 1910], "dist_outsid": [1455, 1465, 1473, 1480, 1487, 1495, 1910], "inside_": [1455, 1465, 1473, 1480, 1487, 1495], "outside_": [1455, 1465, 1473, 1480, 1487, 1495], "invertedareageometri": [1456, 1466, 1488, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1897], "probe": [1459, 1460, 1469, 1470, 1476, 1477, 1483, 1484, 1491, 1492, 1499, 1500, 1550, 1552], "bundari": [1459, 1469, 1476, 1483, 1491, 1499], "p_nearest": [1459, 1469, 1476, 1483, 1491, 1499], "areaintersect": [1461, 1462, 1897], "areaunion": [1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1897], "cobnstructor": [1471, 1472], "closedpolygon": [1478, 1479, 1480, 1481, 1482, 1483, 1484, 1897, 1910], "poli": 1478, "halfplan": [1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1897], "import_modul": [1501, 1897], "deduc": 1501, "instal": [1501, 1903, 1904, 1922], "advic": 1501, "fail": [1501, 1907, 1918], "imnport": 1501, "opt": [1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1882, 1888, 1903, 1910], "areageometryconstraint": [1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1893], "farmconstraint": [1502, 1525, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1893], "constrain": [1502, 1523, 1893], "sel_turbin": [1502, 1503, 1523, 1525, 1526, 1532, 1533, 1541, 1543, 1544, 1549, 1550, 1552, 1588, 1594, 1608, 1617, 1619, 1625, 1627, 1766, 1775, 1791], "disc_insid": [1502, 1503], "n_compon": [1502, 1510, 1511, 1514, 1521, 1522, 1523, 1525, 1530, 1531, 1532, 1538, 1542, 1543, 1559, 1560, 1561, 1568, 1569, 1608, 1612, 1614, 1615, 1616, 1617, 1619, 1623, 1624, 1625, 1641, 1645, 1646, 1650, 1651, 1655, 1656, 1661, 1662, 1666, 1667, 1669, 1670, 1671, 1672, 1677, 1678, 1682, 1684, 1689, 1690, 1691, 1695, 1696, 1697, 1701, 1702, 1703, 1707, 1708, 1709, 1713, 1714, 1715, 1717, 1718, 1720], "vardeps_float": [1502, 1521, 1523, 1525, 1531, 1532, 1542, 1543, 1608, 1616, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "calc_individu": [1502, 1506, 1523, 1525, 1527, 1532, 1535, 1543, 1608, 1610, 1617, 1619, 1621, 1625, 1641, 1643, 1646, 1648, 1651, 1653, 1656, 1658, 1662, 1664, 1667, 1672, 1674, 1678, 1680, 1684, 1686, 1691, 1693, 1697, 1699, 1703, 1705, 1709, 1711, 1715, 1718], "vars_int": [1502, 1505, 1506, 1507, 1510, 1511, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1627, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1722, 1724, 1725, 1732, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1766, 1767, 1772, 1773, 1775, 1777, 1785, 1786, 1787, 1788, 1791, 1798, 1803, 1804], "vars_float": [1502, 1505, 1506, 1507, 1510, 1511, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1627, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1722, 1724, 1725, 1732, 1734, 1735, 1742, 1744, 1745, 1752, 1754, 1755, 1766, 1767, 1772, 1773, 1775, 1777, 1785, 1786, 1787, 1788, 1791, 1798, 1803, 1804], "problem_result": [1502, 1506, 1507, 1510, 1511, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1557, 1558, 1567, 1568, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1724, 1725, 1734, 1735, 1744, 1745, 1754, 1755, 1767, 1777, 1798, 1910], "calc_popul": [1502, 1507, 1523, 1525, 1528, 1532, 1536, 1543, 1608, 1611, 1617, 1619, 1622, 1625, 1641, 1644, 1646, 1649, 1651, 1654, 1656, 1659, 1662, 1665, 1667, 1672, 1675, 1678, 1681, 1684, 1687, 1691, 1694, 1697, 1700, 1703, 1706, 1709, 1712, 1715, 1718], "n_sel_turbin": [1502, 1523, 1525, 1532, 1539, 1543, 1547, 1550, 1582, 1594, 1596, 1597, 1608, 1617, 1619, 1625, 1627, 1637, 1638, 1766, 1772, 1773, 1775, 1785, 1786, 1791, 1803, 1804], "add_to_layout_figur": [1502, 1523, 1525, 1532, 1534, 1543, 1545, 1550, 1555, 1594, 1608, 1617, 1619, 1625, 1627, 1766, 1775, 1791], "get_bound": [1502, 1523, 1525, 1532, 1641, 1646, 1651, 1656, 1662, 1667, 1671, 1672, 1678], "check_individu": [1502, 1523, 1525, 1532, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1672, 1678], "constraint_valu": [1502, 1523, 1525, 1532, 1550, 1560, 1561, 1594, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1670, 1672, 1678, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "fullfil": [1502, 1523, 1525, 1532, 1550, 1560, 1561, 1594, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1669, 1670, 1672, 1678, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "check_popul": [1502, 1523, 1525, 1532, 1641, 1646, 1651, 1656, 1662, 1667, 1670, 1672, 1678], "component_nam": [1502, 1508, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "var_names_int": [1502, 1520, 1523, 1525, 1532, 1543, 1550, 1593, 1594, 1608, 1617, 1619, 1625, 1627, 1640, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1741, 1742, 1752, 1765, 1766, 1775, 1790, 1791], "n_vars_int": [1502, 1505, 1506, 1507, 1510, 1511, 1516, 1522, 1523, 1525, 1527, 1528, 1532, 1535, 1536, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1571, 1575, 1579, 1584, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1617, 1619, 1621, 1622, 1625, 1627, 1631, 1634, 1636, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1722, 1724, 1725, 1732, 1734, 1735, 1737, 1739, 1740, 1742, 1744, 1745, 1752, 1754, 1755, 1758, 1761, 1763, 1766, 1767, 1772, 1773, 1775, 1777, 1779, 1782, 1784, 1785, 1786, 1787, 1788, 1791, 1798, 1803, 1804, 1910], "var_names_float": [1502, 1519, 1523, 1525, 1532, 1543, 1550, 1592, 1594, 1608, 1617, 1619, 1625, 1627, 1639, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1731, 1732, 1742, 1751, 1752, 1764, 1766, 1774, 1775, 1789, 1791, 1805], "n_vars_float": [1502, 1505, 1506, 1507, 1510, 1511, 1515, 1521, 1523, 1525, 1527, 1528, 1531, 1532, 1535, 1536, 1542, 1543, 1550, 1557, 1558, 1559, 1564, 1565, 1567, 1568, 1569, 1570, 1574, 1578, 1583, 1590, 1591, 1594, 1596, 1597, 1598, 1599, 1608, 1610, 1611, 1612, 1616, 1617, 1619, 1621, 1622, 1625, 1627, 1630, 1633, 1635, 1637, 1638, 1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1667, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715, 1718, 1719, 1722, 1724, 1725, 1727, 1729, 1730, 1732, 1734, 1735, 1742, 1744, 1745, 1747, 1749, 1750, 1752, 1754, 1755, 1757, 1760, 1762, 1766, 1767, 1768, 1770, 1771, 1772, 1773, 1775, 1777, 1778, 1781, 1783, 1785, 1786, 1787, 1788, 1791, 1798, 1799, 1801, 1802, 1803, 1804, 1910], "vardeps_int": [1502, 1522, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "rename_vars_int": [1502, 1518, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "renam": [1502, 1517, 1518, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1903], "rename_vars_float": [1502, 1517, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "finalize_individu": [1502, 1510, 1523, 1525, 1532, 1543, 1550, 1567, 1594, 1608, 1612, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798], "champion": [1502, 1510, 1523, 1525, 1532, 1543, 1550, 1567, 1594, 1608, 1612, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798], "finalize_popul": [1502, 1511, 1523, 1525, 1532, 1543, 1550, 1568, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "ana_deriv": [1502, 1505, 1523, 1525, 1532, 1543, 1608, 1617, 1619, 1625, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718], "info": [1502, 1504, 1523, 1525, 1532, 1543, 1550, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "finish": [1502, 1513, 1523, 1525, 1532, 1543, 1550, 1594, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1907, 1910], "farmoptproblem": [1503, 1524, 1526, 1533, 1544, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1609, 1617, 1618, 1620, 1625, 1626, 1642, 1647, 1652, 1657, 1673, 1679, 1685, 1692, 1698, 1704, 1710, 1716, 1893, 1903], "iwopi": [1503, 1526, 1533, 1544, 1550, 1552, 1553, 1554, 1559, 1569, 1667, 1718, 1719, 1722, 1732, 1742, 1752, 1888, 1893, 1895, 1904, 1910], "differenti": [1505, 1559, 1569], "n_sel_compon": [1505, 1506, 1507, 1527, 1528, 1535, 1536, 1610, 1611, 1621, 1622, 1643, 1644, 1648, 1649, 1653, 1654, 1658, 1659, 1664, 1665, 1674, 1675, 1680, 1681, 1686, 1687, 1693, 1694, 1699, 1700, 1705, 1706, 1711, 1712], "n_pop": [1507, 1511, 1528, 1536, 1558, 1561, 1565, 1568, 1591, 1597, 1599, 1600, 1601, 1611, 1622, 1638, 1644, 1649, 1654, 1659, 1665, 1670, 1675, 1681, 1687, 1694, 1700, 1706, 1712, 1725, 1735, 1745, 1755, 1773, 1786, 1788, 1804, 1893], "dep": [1521, 1522, 1531, 1542, 1608, 1609, 1616, 1618, 1626], "farmboundaryconstraint": [1523, 1524, 1893, 1910], "mindistconstraint": [1525, 1526, 1527, 1528, 1529, 1530, 1531, 1893, 1910], "keep": [1525, 1893, 1905], "min_dist_unit": [1525, 1526, 1910], "constaint": [1525, 1529, 1672, 1676], "geom_layout": [1532, 1543, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1888, 1893], "farmobject": [1543, 1544, 1545, 1546, 1547, 1548, 1549, 1608, 1609, 1618, 1619, 1620, 1626, 1893], "calc_farm_arg": [1550, 1552], "all_turbin": [1550, 1556, 1594, 1627, 1766, 1775, 1791], "tvar": [1550, 1589, 1594, 1627, 1766, 1775, 1791], "turbine_i": [1550, 1585, 1589, 1594, 1627, 1766, 1775, 1791], "parse_tvar": [1550, 1585, 1594, 1627, 1766, 1775, 1791], "tvr": [1550, 1585, 1594, 1627, 1766, 1775, 1791], "update_problem_individu": [1550, 1590, 1594, 1598, 1627, 1766, 1775, 1787, 1791], "update_problem_popul": [1550, 1591, 1594, 1599, 1627, 1766, 1775, 1788, 1791], "apply_individu": [1550, 1557, 1594, 1627, 1722, 1724, 1732, 1734, 1742, 1744, 1752, 1754, 1766, 1775, 1791], "apply_popul": [1550, 1558, 1594, 1627, 1722, 1725, 1732, 1735, 1742, 1745, 1752, 1755, 1766, 1775, 1791], "int_inf": [1550, 1551, 1575, 1579, 1594, 1627, 1634, 1636, 1722, 1732, 1742, 1752, 1761, 1763, 1766, 1775, 1782, 1784, 1791], "999999": [1550, 1551, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "initial_values_int": [1550, 1571, 1594, 1627, 1631, 1722, 1732, 1737, 1742, 1752, 1758, 1766, 1775, 1779, 1791], "min_values_int": [1550, 1579, 1594, 1627, 1636, 1722, 1732, 1740, 1742, 1752, 1763, 1766, 1775, 1784, 1791], "max_values_int": [1550, 1575, 1594, 1627, 1634, 1722, 1732, 1739, 1742, 1752, 1761, 1766, 1775, 1782, 1791], "initial_values_float": [1550, 1570, 1594, 1627, 1630, 1722, 1727, 1732, 1742, 1747, 1752, 1757, 1766, 1768, 1775, 1778, 1791, 1799], "min_values_float": [1550, 1578, 1594, 1627, 1635, 1722, 1730, 1732, 1742, 1750, 1752, 1762, 1766, 1771, 1775, 1783, 1791, 1802], "max_values_float": [1550, 1574, 1594, 1627, 1633, 1722, 1729, 1732, 1742, 1749, 1752, 1760, 1766, 1770, 1775, 1781, 1791, 1801], "add_object": [1550, 1554, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1910], "varmap_int": [1550, 1553, 1554, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "varmap_float": [1550, 1553, 1554, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "add_constraint": [1550, 1553, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1910], "min_values_constraint": [1550, 1577, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "max_values_constraint": [1550, 1573, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "constraints_tol": [1550, 1562, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "n_object": [1550, 1564, 1565, 1567, 1576, 1581, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798, 1910], "n_constraint": [1550, 1562, 1564, 1565, 1567, 1568, 1573, 1577, 1580, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1767, 1775, 1777, 1791, 1798, 1910], "calc_gradi": [1550, 1559, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "ivar": [1550, 1559, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "get_gradi": [1550, 1559, 1569, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "obtain": [1550, 1569, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1908, 1912, 1920], "link": [1550, 1569, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1904, 1910, 1919], "maximize_obj": [1550, 1576, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "evaluate_individu": [1550, 1564, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "ret_prob_r": [1550, 1564, 1565, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "evaluate_popul": [1550, 1565, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "check_constraints_individu": [1550, 1560, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "check_constraints_popul": [1550, 1561, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "prob_res_einsum_individu": [1550, 1586, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "prob_res_list": [1550, 1586, 1587, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "coeff": [1550, 1586, 1587, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "prob_res_einsum_popul": [1550, 1587, 1594, 1627, 1722, 1732, 1742, 1752, 1766, 1775, 1791], "fvar": 1559, "vr": 1559, "overload": [1559, 1885, 1886, 1903], "optfunctionlist": [1559, 1569], "n_vr": 1559, "ctol": 1562, "con": [1564, 1565, 1567, 1568, 1767, 1777, 1798], "prob_r": [1564, 1565, 1586, 1587], "cf": [1569, 1915], "problemdefaultfunc": 1569, "cma": 1573, "unbound": [1574, 1575, 1578, 1579, 1633, 1634, 1635, 1636, 1729, 1730, 1749, 1750, 1760, 1761, 1762, 1763, 1770, 1771, 1781, 1782, 1783, 1784, 1801, 1802], "cmi": 1577, "n_con": 1580, "n_obj": 1581, "farmvarsproblem": [1594, 1595, 1596, 1597, 1598, 1599, 1627, 1628, 1766, 1775, 1776, 1791, 1797, 1893, 1894, 1903], "pre_rotor_var": [1594, 1595], "post_rotor_var": [1594, 1595], "opt2farm_vars_individu": [1594, 1596, 1627, 1637, 1766, 1772, 1775, 1785, 1791, 1803], "opt2farm_vars_popul": [1594, 1597, 1627, 1638, 1766, 1773, 1775, 1786, 1791, 1804], "farm_var": [1596, 1597, 1637, 1638, 1772, 1773, 1785, 1786, 1803, 1804], "popstat": [1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1893], "farmvarobject": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1625, 1893], "contract_st": [1608, 1609, 1618, 1626], "contract_turbin": [1609, 1618, 1626], "maxfarmpow": [1617, 1618, 1893, 1910], "maximize_pow": [1617, 1618, 1910], "maxnturbin": [1619, 1620, 1621, 1622, 1623, 1624, 1893], "turrbin": [1619, 1893], "check_valid": [1619, 1620], "max_n_turbin": [1619, 1620], "minimalmaxti": [1625, 1626, 1893], "minimize_ti": [1625, 1626], "optfarmvar": [1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1894], "typ": [1627, 1629], "model_kei": 1629, "geometr": [1641, 1642, 1646, 1647, 1651, 1652, 1656, 1657, 1662, 1672, 1673, 1678, 1679, 1684, 1685, 1691, 1692, 1697, 1698, 1703, 1704, 1709, 1710, 1715, 1716, 1722, 1732, 1894, 1895, 1903], "cmpnt": [1641, 1643, 1644, 1646, 1648, 1649, 1651, 1653, 1654, 1656, 1658, 1659, 1662, 1664, 1665, 1672, 1674, 1675, 1678, 1680, 1681, 1684, 1686, 1687, 1691, 1693, 1694, 1697, 1699, 1700, 1703, 1705, 1706, 1709, 1711, 1712, 1715], "additio": [1642, 1647, 1652, 1657, 1673, 1679], "cfixn": [1646, 1647, 1648, 1649, 1650, 1895], "cmaxn": [1651, 1652, 1653, 1654, 1655, 1895], "cmindens": [1656, 1657, 1658, 1659, 1660, 1661, 1895], "min_valu": [1656, 1657], "dfactor": [1656, 1657, 1684, 1685], "min_dens": [1656, 1657], "cminn": [1662, 1663, 1664, 1665, 1666, 1895], "tol": [1663, 1667, 1668], "violat": [1663, 1667, 1668], "optfunct": [1667, 1718, 1888], "mindist": [1672, 1673, 1674, 1675, 1676, 1677, 1895], "cdist": [1683, 1721], "xa": [1683, 1721], "xb": [1683, 1721], "metric": [1683, 1721], "euclidean": [1683, 1721], "m_a": [1683, 1721], "m_b": [1683, 1721], "braycurti": [1683, 1721], "canberra": [1683, 1721], "chebyshev": [1683, 1721], "cityblock": [1683, 1721], "cosin": [1683, 1721], "dice": [1683, 1721], "jaccard": [1683, 1721], "jensenshannon": [1683, 1721], "kulczynski1": [1683, 1721], "mahalanobi": [1683, 1721], "minkowski": [1683, 1721], "rogerstanimoto": [1683, 1721], "russellrao": [1683, 1721], "seuclidean": [1683, 1721], "sokalmichen": [1683, 1721], "sokalsneath": [1683, 1721], "sqeuclidean": [1683, 1721], "yule": [1683, 1721], "unweight": [1683, 1721], "varianc": [1683, 1721], "vstack": [1683, 1721], "ddof": [1683, 1721], "vi": [1683, 1721], "covari": [1683, 1721], "inv": [1683, 1721], "cov": [1683, 1721], "ij": [1683, 1721], "thrown": [1683, 1721], "_p": [1683, 1721], "quasi": [1683, 1721], "citi": [1683, 1721], "manhattan": [1683, 1721], "u_i": [1683, 1721], "v_i": [1683, 1721], "_2": [1683, 1721], "disagre": [1683, 1721], "save": [1683, 1721, 1919], "shannon": [1683, 1721], "pointwis": [1683, 1721], "kullback": [1683, 1721], "leibler": [1683, 1721], "diverg": [1683, 1721], "max_i": [1683, 1721], "sum_i": [1683, 1721], "brai": [1683, 1721], "curti": [1683, 1721], "kulczynski": [1683, 1721], "roger": [1683, 1721], "tanimoto": [1683, 1721], "russel": [1683, 1721], "rao": [1683, 1721], "sokal": [1683, 1721], "michen": [1683, 1721], "sneath": [1683, 1721], "ariti": [1683, 1721], "dm": [1683, 1721], "librari": [1683, 1721, 1910, 1917], "ineffici": [1683, 1721], "35": [1683, 1721, 1908, 1910, 1915, 1918], "0456": [1683, 1721], "85": [1683, 1721, 1910, 1918], "2672": [1683, 1721, 1919], "1174": [1683, 1721], "89": [1683, 1721, 1907, 1910], "9711": [1683, 1721], "9728": [1683, 1721], "9422": [1683, 1721], "36": [1683, 1721, 1907, 1908, 1910], "1667": [1683, 1721], "86": [1683, 1721, 1901, 1907, 1910, 1912, 1918], "7833": [1683, 1721], "7044": [1683, 1721], "6172": [1683, 1721], "8856": [1683, 1721], "0893": [1683, 1721], "3561": [1683, 1721], "8477": [1683, 1721], "cube": [1683, 1721], "maxdens": [1684, 1685, 1686, 1687, 1688, 1689, 1690, 1895], "max_dens": [1684, 1685], "maxgridspac": [1691, 1692, 1693, 1694, 1695, 1696, 1895], "max_dxdi": [1691, 1692], "memimadist": [1697, 1698, 1699, 1700, 1701, 1702, 1895], "mimamean": [1697, 1698], "ofixn": [1703, 1704, 1705, 1706, 1707, 1708, 1895], "omaxn": [1709, 1710, 1711, 1712, 1713, 1714, 1715, 1895], "maxn": [1709, 1710], "ominn": [1715, 1716, 1717, 1895], "vnames_int": 1719, "vnames_float": 1719, "cname": 1719, "geomlayout": [1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1895, 1903], "calc_valid": [1722, 1723], "plotli": [1722, 1726, 1732, 1736, 1742, 1746, 1752, 1756, 1903], "true_circl": [1726, 1736, 1746, 1756], "ndarari": [1726, 1736, 1746, 1756], "geomlayoutgrid": [1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1895, 1903], "grid_spac": [1732, 1733], "geomreggrid": [1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1895, 1903], "max_dist": [1742, 1743, 1752, 1753, 1776], "n_grid": [1752, 1753, 1775, 1776], "n_max": [1752, 1753], "n_row_max": [1752, 1753, 1776], "farmlayoutoptproblem": [1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1894, 1910], "reggridslayoutoptproblem": [1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1894], "sever": [1775, 1894, 1903], "min_spac": [1775, 1791, 1797], "max_n_row": 1775, "regularlayoutoptproblem": [1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1894, 1903], "spacing_x": [1791, 1795], "spacing_i": [1791, 1796], "offset_x": [1791, 1793], "offset_i": [1791, 1794], "random_xy_squar": [1806, 1897, 1903], "xmax_ini": [1806, 1897], "read_shp": [1807, 1808, 1897, 1903], "shp": [1807, 1808, 1825, 1897], "geopanda": [1807, 1808, 1825], "geodatafram": 1807, "wsg84": 1807, "read_shp_polygon": [1808, 1826, 1897, 1903], "name_col": 1808, "geom_col": 1808, "to_utm": 1808, "ret_utm_zon": [1808, 1826, 1897], "extract": 1808, "utm": [1808, 1826], "32u": [1808, 1826], "point_dict_exterior": 1808, "point_dict_interior": 1808, "utm_zone_str": [1808, 1826], "utem": [1808, 1826], "read_tab_fil": [1809, 1897], "daskrunn": [1810, 1811, 1812, 1813, 1814, 1815, 1816, 1897, 1903, 1907, 1909, 1910, 1916, 1918, 1919, 1920], "schedul": [1810, 1811, 1903, 1910, 1919], "progress_bar": [1810, 1811, 1903], "progress": [1810, 1811, 1919, 1920], "cluster_arg": [1810, 1811], "cluster": [1810, 1811, 1903, 1904, 1910, 1919, 1920], "setup": [1810, 1811, 1902, 1903, 1904, 1906, 1907, 1910, 1912, 1914, 1915, 1917, 1920, 1921], "client_arg": [1810, 1811], "client": [1810, 1811], "n_worker": [1810, 1811], "is_distribut": [1810, 1814], "threads_per_work": 1811, "worker": [1811, 1919], "thread": [1811, 1919], "defaultrunn": [1817, 1818, 1897, 1903], "shp2csv": [1825, 1897, 1903], "ifil": [1825, 1897], "ofil": [1825, 1897], "in_kwarg": [1825, 1897], "out_kwarg": [1825, 1897], "onam": 1825, "shp2geom2d": [1826, 1897], "shapefil": [1826, 1897], "geom": 1826, "tool": [1826, 1916, 1919], "sqrt_reg": [1827, 1897], "smallish": [1827, 1897], "two_circl": [1828, 1829], "r1": [1828, 1829, 1897], "r2": [1828, 1829, 1897], "sure": [1828, 1905, 1910, 1919], "diego": 1828, "assencio": 1828, "8d6ca3d82151bad815f78addf9b5c1c6": 1828, "calc_area": [1829, 1897], "broadcast": [1829, 1831, 1832], "uv2wd": [1830, 1897], "wd2uv": [1831, 1897], "wd2wdvec": [1832, 1897], "wdvec": [1832, 1833, 1897], "wdvec2wd": [1833, 1897], "complevel": 1834, "netcfd": [1834, 1909], "to_netcdf": 1834, "moment": [1839, 1840, 1864, 1865, 1899], "kg": [1841, 1866, 1899], "m3": [1841, 1866, 1899], "temperatur": [1842, 1868, 1899], "kelvin": [1842, 1868, 1899], "amb_yawm": [1847, 1880, 1881, 1899], "maxp": [1857, 1899, 1914, 1915], "ubukhof": [1858, 1899], "pa_alpha": [1861, 1899], "porteagel": [1861, 1862, 1899, 1903], "pa_beta": [1862, 1899], "txyh": [1870, 1899, 1916], "amb2var": [1880, 1899], "var2amb": [1881, 1899], "concret": [1882, 1892, 1900], "manag": [1883, 1902, 1903, 1904, 1913], "sweep": [1883, 1884], "reach": [1883, 1885, 1890, 1903, 1907, 1918], "uns": 1883, "atmospher": [1891, 1892, 1904, 1908], "propag": [1892, 1902, 1903, 1913], "ie": 1892, "machin": 1892, "net": 1892, "extern": 1893, "classif": 1900, "cite": 1901, "joss": 1901, "bibtex": 1901, "schmidt2023": 1901, "author": [1901, 1908], "schmidt": 1901, "luka": 1901, "vollmer": 1901, "martin": 1901, "d\u00f6renk\u00e4mper": 1901, "bernhard": 1901, "stoevesandt": 1901, "21105": 1901, "05464": 1901, "publish": [1901, 1903], "volum": 1901, "page": 1901, "5464": 1901, "zenodo": 1901, "jupyt": 1902, "notebook": [1902, 1903, 1913], "folder": [1902, 1903], "repositori": [1902, 1904, 1922], "homogen": [1902, 1916], "comparison": [1902, 1904, 1907], "readi": [1903, 1911, 1917, 1918, 1921], "transfer": [1903, 1921], "fraunhof": [1903, 1904, 1910], "iw": [1903, 1904, 1908, 1910], "hous": 1903, "predecessor": [1903, 1904], "flappi": [1903, 1904], "yet": 1903, "enjoi": 1903, "await": 1903, "comment": 1903, "changelog": 1903, "fraunhoferiw": [1903, 1904, 1905, 1922], "commit": [1903, 1904], "discov": 1903, "flake8": 1903, "now": [1903, 1907, 1909, 1910, 1911, 1912, 1914, 1915, 1916, 1917, 1918, 1920, 1921], "pytest": [1903, 1922], "unittest": 1903, "workflow": 1903, "docu": 1903, "io": 1903, "doc": [1903, 1919], "html": [1903, 1916, 1918], "miss": 1903, "wind_rot": [1903, 1909], "manifest": 1903, "orst": 1903, "pctsinglefil": 1903, "iecti2019": 1903, "iecti2005": 1903, "pip": [1903, 1904, 1922], "pcttwofil": 1903, "windroseoutput": 1903, "ambientwindroseoutput": 1903, "improv": 1903, "show_plotly_fig": 1903, "browser": 1903, "wind_ros": 1903, "layout_single_st": 1903, "layout_wind_ros": 1903, "layout_opt": [1903, 1910], "ipynb": 1903, "demonstr": [1903, 1906, 1908, 1910, 1914, 1917, 1920, 1921], "wrf": [1903, 1912, 1913], "ambientroseplotoutput": 1903, "multi_height": 1903, "bug": 1903, "veer": 1903, "power_mask": 1903, "solv": [1903, 1910], "cubic": 1903, "forgotten": 1903, "hotfix": 1903, "wsrho2pcttwofil": 1903, "sector_manag": 1903, "sector_man": 1903, "col_model": 1903, "linearsuperposit": 1903, "compare_wak": 1903, "yawed_wak": 1903, "simplifi": 1903, "intuit": 1903, "turboparkix": 1903, "eq": 1903, "wrong": 1903, "layout_regular_grid": 1903, "geom_reggrid": 1903, "geopandas_help": 1903, "interior": 1903, "11": [1903, 1905, 1907, 1908, 1910, 1914, 1918, 1919, 1921], "cleaner": 1903, "treatment": 1903, "slimmer": 1903, "productsuperposit": 1903, "restart": 1903, "incomplet": 1903, "slurm": 1903, "queue": 1903, "timeseries_slurm": 1903, "hpc": 1903, "apigen": 1903, "timeseries_100": [1903, 1918], "timestep": 1903, "consider": 1903, "autom": 1903, "pypi": 1903, "netcdf4": 1903, "keep_model": 1903, "mostli": 1903, "address": [1903, 1919], "rhb": [1903, 1906, 1907, 1911], "induction_rhb": 1903, "conda": [1903, 1904], "forg": [1903, 1905], "refactor": 1903, "bastankhahwak": 1903, "porteagelwak": 1903, "jump": 1903, "bastankhah025": [1903, 1910], "restructur": 1903, "simpler": 1903, "ws_linear": [1903, 1911, 1918], "ti_quadrat": [1903, 1911], "mess": 1903, "lighter": 1903, "reformul": 1903, "crespohernandez": [1903, 1921], "virtual": 1903, "relat": [1903, 1920], "disk": 1903, "blockage_comparison": 1903, "fresh": 1903, "winds100": [1903, 1908], "tab_fil": 1903, "random_timeseri": 1903, "modular": 1904, "steer": 1904, "ow": 1904, "remot": 1904, "tracker": 1904, "report": 1904, "mit": 1904, "citat": 1904, "journal": 1904, "histori": 1904, "fork": [1904, 1905], "checkout": 1904, "new_branch": 1904, "am": [1904, 1918], "awesom": 1904, "messag": 1904, "push": 1904, "request": 1904, "flapfoam": 1904, "public": [1904, 1921], "publicli": 1904, "fund": 1904, "feder": 1904, "ministri": 1904, "econom": 1904, "affair": 1904, "climat": 1904, "action": [1904, 1913], "bmwk": 1904, "roject": 1904, "smart": 1904, "grant": 1904, "0325851b": 1904, "0325397b": 1904, "03ee3008a": 1904, "educ": 1904, "bmbf": 1904, "framework": 1904, "h2digit": 1904, "03sf0635": 1904, "furthermor": [1904, 1914], "horizon": 1904, "europ": 1904, "101084205": 1904, "decid": 1905, "dev": 1905, "egg": 1905, "clone": [1905, 1922], "cd": [1905, 1922], "concern": 1905, "strongli": 1905, "libmamba": 1905, "solver": [1905, 1910], "config": 1905, "again": [1905, 1910, 1914], "build": 1905, "windspe": [1906, 1907], "front": [1906, 1907], "comparis": 1906, "upstream": [1906, 1907], "inlin": [1906, 1907, 1909, 1910, 1912, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921], "flow_plot": 1906, "fp": 1906, "dtu10mw": [1906, 1907, 1908, 1911, 1916, 1918], "ttype": [1906, 1915], "8m": 1906, "04": [1906, 1907, 1908, 1910, 1911, 1916, 1918], "colour": 1906, "clearli": [1906, 1907, 1921], "npoint": [1906, 1907, 1917], "centreline_pt": 1906, "profile_pt": [1906, 1907], "4000": [1906, 1907, 1909, 1910, 1915, 1920], "df": [1906, 1907], "finalis": 1906, "subplots_adjust": 1906, "39": [1906, 1907, 1908, 1909, 1910, 1916, 1917, 1918, 1919], "solut": 1906, "vortex": 1906, "cylind": 1906, "realist": [1906, 1907, 1916], "sign": 1906, "And": 1906, "weakest": 1906, "strongest": 1906, "800": [1907, 1910, 1916, 1917, 1918], "400": [1907, 1910], "fact": [1907, 1921], "influenc": [1907, 1914], "downstream": [1907, 1921], "notic": [1907, 1910, 1914, 1915, 1916, 1918, 1919, 1921], "aglo": 1907, "freshli": [1907, 1911], "repeatedli": 1907, "vicin": 1907, "cut": 1907, "grid36": [1907, 1911], "bastankhah025_linear_lim_k004": [1907, 1911, 1916], "among": 1907, "basic_ctrl_pr": [1907, 1916, 1918], "power_ct_curv": [1907, 1916, 1918], "10mw": [1907, 1916, 1918], "d178d3": [1907, 1916, 1918], "h119": [1907, 1916, 1918], "basic_ctrl_postr": [1907, 1916, 1918], "rotorpoints1": 1907, "partialaxiwake10": [1907, 1916, 1918], "48": [1907, 1910], "partialwk": [1907, 1916, 1918], "sp": [1907, 1911, 1916, 1918], "ws_linear_lim": [1907, 1911, 1916], "setxyhd_t2f": [1907, 1916, 1918], "calc_yaw_centrerotor1": [1907, 1916, 1918], "urelax_ct": [1907, 1918], "iterative_calc": [1907, 1918], "oder": [1907, 1916, 1918], "03": [1907, 1908, 1910, 1916, 1917, 1918, 1919], "101": [1907, 1918, 1920], "lt": [1907, 1908, 1910, 1916, 1917, 1918], "gt": [1907, 1908, 1910, 1916, 1917, 1918], "u7": [1907, 1918], "float64": [1907, 1910, 1916, 1917, 1918], "chunksiz": [1907, 1918], "70": [1907, 1908, 1909, 1910, 1915, 1919, 1920], "102": [1907, 1918, 1919], "414e": 1907, "000e": [1907, 1918], "ok": [1907, 1918], "024e": 1907, "43": [1907, 1910, 1918], "81": [1907, 1910, 1916, 1920], "799e": 1907, "190e": 1907, "019e": 1907, "659e": 1907, "67": [1907, 1908, 1910, 1919], "161": 1907, "254e": 1907, "777e": 1907, "46": [1907, 1908, 1910], "54": [1907, 1910], "966e": [1907, 1918], "488e": 1907, "51": [1907, 1908, 1910, 1916, 1918], "876e": 1907, "125e": 1907, "104": 1907, "906e": 1907, "697e": 1907, "29": [1907, 1908, 1910, 1918, 1919], "448e": 1907, "103e": 1907, "63": [1907, 1910, 1919], "105": [1907, 1918], "622e": 1907, "790e": 1907, "80": [1907, 1910, 1920], "922e": 1907, "086e": 1907, "103": [1907, 1918], "008e": 1907, "324e": 1907, "14": [1907, 1908, 1910, 1914, 1919], "288e": 1907, "059e": 1907, "13": [1907, 1908, 1910, 1912, 1914, 1918], "71": [1907, 1910], "141e": 1907, "067e": 1907, "49": [1907, 1908, 1909, 1910, 1918, 1920], "541e": 1907, "226e": 1907, "814": [1907, 1916], "731e": 1907, "4e": [1907, 1917], "65e": 1907, "05e": 1907, "40": [1907, 1910], "44": [1907, 1909, 1910, 1918], "47": [1907, 1909, 1910, 1918], "u3": 1907, "t0": [1907, 1908, 1910, 1914, 1915, 1916, 1917, 1919, 1921], "t1": [1907, 1908, 1910, 1914, 1915, 1916, 1917, 1919, 1921], "t2": [1907, 1908, 1910, 1914, 1916, 1917, 1919], "t3": [1907, 1908, 1910, 1914, 1916, 1917, 1919], "t44": 1907, "t45": 1907, "t46": 1907, "t47": 1907, "south": [1907, 1915], "westerli": [1907, 1915], "300": [1907, 1908, 1910, 1914, 1921], "merg": 1907, "xlist": 1907, "investig": 1907, "constrict": 1907, "scenario": 1907, "500m": 1907, "bmodel": 1907, "mirror_combo": 1907, "68": [1907, 1908, 1910], "82": [1907, 1910, 1918], "108": 1907, "98": [1907, 1910, 1918], "37": [1907, 1910], "74": [1907, 1910, 1918], "56": [1907, 1910], "wakemirror_rhb": 1907, "64": [1907, 1908, 1910, 1919], "87": [1907, 1910, 1914, 1918], "wakemirror1_rhb": 1907, "seem": 1907, "imagin": 1907, "120": [1907, 1908, 1916], "bname": 1907, "wakes0": 1907, "iecti2019_quart": [1907, 1911], "bastankhah2016_linear_lim_k004": [1907, 1911], "3000": [1907, 1908, 1910, 1914, 1921], "27": [1907, 1908, 1910, 1916, 1919], "26": [1907, 1908, 1909, 1910, 1916, 1919], "terminologi": [1908, 1913, 1917], "101872": [1908, 1919], "1004753": [1908, 1919], "57": [1908, 1910, 1918, 1919], "103659": [1908, 1919], "97": [1908, 1910, 1912, 1919], "1002993": [1908, 1919], "100780": [1908, 1919], "09": [1908, 1918, 1919], "1000779": [1908, 1919], "100290": [1908, 1919], "42": [1908, 1910, 1919], "1004330": [1908, 1919], "t4": [1908, 1910, 1914, 1916, 1917], "103005": 1908, "1003540": 1908, "t5": [1908, 1910, 1916], "100102": 1908, "92": [1908, 1910, 1918], "1004849": 1908, "t6": [1908, 1910, 1916], "104162": 1908, "1001061": 1908, "mesoscal": 1908, "2009": [1908, 1912], "37214": [1908, 1912], "42685": [1908, 1912], "28838": [1908, 1912], "31": [1908, 1909, 1910, 1912, 1919], "23": [1908, 1910, 1912, 1916, 1918, 1919], "27767": [1908, 1912], "36368": [1908, 1912], "30095": [1908, 1912], "90": [1908, 1910, 1912], "150": [1908, 1910, 1912, 1918, 1919, 1920], "250": [1908, 1910, 1912, 1915, 1921], "binnd": 1908, "253": 1908, "032": 1908, "542331196166035e": 1908, "207": 1908, "145": 1908, "0001230528308906": 1908, "116": 1908, "0001563449299843": 1908, "314": 1908, "048": 1908, "618827331554488e": 1908, "18": [1908, 1910, 1914], "302": 1908, "027": 1908, "694": 1908, "98695302482496e": 1908, "2018": [1908, 1916], "24": [1908, 1910, 1914, 1918, 1919], "172": 1908, "184": 1908, "52": [1908, 1910], "198": [1908, 1914], "34": [1908, 1910, 1918], "209": [1908, 1910], "93": [1908, 1910], "19": [1908, 1910, 1914, 1919], "78": [1908, 1910, 1920], "217": 1908, "223": 1908, "227": 1908, "8000": [1908, 1917, 1919], "62": [1908, 1910, 1918, 1919], "244": [1908, 1919], "0504": [1908, 1919], "243": [1908, 1919], "0514": [1908, 1919], "0522": [1908, 1919], "33": [1908, 1910, 1918, 1919], "241": [1908, 1919], "0523": [1908, 1919], "0518": 1908, "242": 1908, "0513": 1908, "269": 1908, "836": 1908, "344": 1908, "268": 1908, "532": 1908, "267": 1908, "406": 1908, "265": 1908, "981": 1908, "coars": [1908, 1910, 1920], "216": [1908, 1910, 1920], "bremen": [1908, 1910, 1915], "germani": [1908, 1910], "00158": [1908, 1910, 1920], "00244": [1908, 1910, 1920], "00319": [1908, 1910, 1920], "00367": 1908, "00042": [1908, 1910, 1920], "inhomogen": 1908, "long_nam": 1908, "subtitl": 1908, "2500": [1908, 1909, 1910], "180": 1908, "220": 1908, "dtu10": 1908, "iea15": 1908, "iea15mw": [1908, 1911], "iwt7": [1908, 1911], "nrel5": [1908, 1914, 1917, 1919], "nrel5mw": [1908, 1909, 1910, 1911, 1912, 1914, 1917, 1919, 1920, 1921], "nstate": 1908, "ncurv": 1908, "pctcurv": 1908, "categori": 1908, "relative_to": 1908, "posixpath": 1908, "printout": [1908, 1917], "feel": 1908, "invit": 1908, "claim": 1909, "our": [1909, 1910, 1911, 1912, 1914, 1915, 1916, 1920, 1921], "realiz": [1909, 1921], "streamlines_100": [1909, 1911], "grid16": [1909, 1911], "jensen_linear_k007": [1909, 1911, 1917], "implicit": [1909, 1910, 1919, 1921], "fr": [1909, 1912, 1914, 1917, 1919], "to_datafram": [1909, 1912, 1914, 1917, 1918, 1919, 1921], "201": 1909, "158092": 1909, "491089": 1909, "1474": 1909, "211367": 1909, "208": [1909, 1910], "044994": 1909, "673386": 1909, "1580": 1909, "523022": 1909, "214": [1909, 1910], "523994": 1909, "960601": 1909, "1748": 1909, "171047": 1909, "218": 1909, "242345": 1909, "867297": 1909, "1127": 1909, "597810": 1909, "222": 1909, "297880": 1909, "283373": 1909, "1352": 1909, "715530": 1909, "899315": 1909, "731909": 1909, "808657": 1909, "1614": 1909, "607085": 1909, "1101": 1909, "211997": 1909, "236": 1909, "751304": 1909, "932726": 1909, "1156": 1909, "958672": 1909, "237": 1909, "139685": 1909, "375640": 1909, "142662": 1909, "1406": 1909, "547918": 1909, "801": 1909, "751505": 1909, "484049": 1909, "818854": 1909, "381124": 1909, "1665": 1909, "347000": 1909, "908": 1909, "970303": 1909, "311353": 1909, "703701": 1909, "149847": 1909, "1054": 1909, "871543": 1909, "454": 1909, "760942": 1909, "259090": 1909, "995899": 1909, "857833": 1909, "1185": 1909, "898485": 1909, "690": 1909, "639688": 1909, "676969": 1909, "357075": 1909, "1396": 1909, "122949": 1909, "537113": 1909, "352448": 1909, "263710": 1909, "521": 1909, "748653": 1909, "492": 1909, "140844": 1909, "447853": 1909, "960030": 1909, "917024": 1909, "724": 1909, "421405": 1909, "710": 1909, "071241": 1909, "815208": 1909, "580130": 1909, "998": 1909, "581195": 1909, "462887": 1909, "352662": 1909, "621921": 1909, "552147": 1909, "960214": 1909, "363478": 1909, "184792": 1909, "580285": 1909, "552663": 1909, "pymoo": 1910, "genet": 1910, "optimizer_pymoo": 1910, "gm": 1910, "tackl": 1910, "wind_rose_bremen": [1910, 1915, 1920], "0036700002": [1910, 1920], "1200": 1910, "900": [1910, 1918, 1920], "1500": 1910, "700": 1910, "question": 1910, "t7": [1910, 1916], "t8": [1910, 1916], "t9": 1910, "shortli": 1910, "bastankhah025_linear_k002": [1910, 1911], "n_obj_cmptn": 1910, "n_con_cmptn": 1910, "smoother": 1910, "ga": 1910, "n_max_gen": 1910, "pop_siz": 1910, "problem_par": 1910, "algo_par": 1910, "setup_par": 1910, "term_par": 1910, "ftol": 1910, "xtol": 1910, "print_info": 1910, "successfulli": 1910, "float_random": 1910, "floatrandomsampl": 1910, "defaultsingleobjectivetermin": 1910, "n_gen": 1910, "n_eval": 1910, "cv_min": 1910, "cv_avg": 1910, "f_avg": 1910, "f_min": 1910, "257950e": 1910, "094916e": 1910, "589298e": 1910, "141458e": 1910, "108843e": 1910, "097684e": 1910, "011586e": 1910, "869307e": 1910, "250281e": 1910, "238949e": 1910, "668302e": 1910, "350": 1910, "500554e": 1910, "011095e": 1910, "198486e": 1910, "450": 1910, "571793e": 1910, "998508e": 1910, "775495e": 1910, "550": 1910, "695093e": 1910, "482376e": 1910, "600": [1910, 1912, 1914, 1915, 1916], "369663e": 1910, "650": 1910, "255097e": 1910, "461710e": 1910, "135664e": 1910, "750": [1910, 1921], "098324e": 1910, "266611e": 1910, "850": 1910, "446678e": 1910, "484456e": 1910, "440080e": 1910, "151751e": 1910, "917821e": 1910, "998273e": 1910, "871628e": 1910, "1050": 1910, "019366e": 1910, "071983e": 1910, "1100": 1910, "4405916400": 1910, "193676e": 1910, "1150": 1910, "9794099827": 1910, "349004e": 1910, "000000e": 1910, "738912e": 1910, "632250e": 1910, "1250": 1910, "137290e": 1910, "629958e": 1910, "633040e": 1910, "1300": 1910, "1859595870": 1910, "623456e": 1910, "1350": 1910, "6172307553": 1910, "623231e": 1910, "635398e": 1910, "28": [1910, 1918], "1400": 1910, "0289892170": 1910, "623859e": 1910, "637392e": 1910, "1450": 1910, "630865e": 1910, "639713e": 1910, "636295e": 1910, "648299e": 1910, "1550": 1910, "639242e": 1910, "1600": 1910, "642970e": 1910, "659120e": 1910, "1650": 1910, "647586e": 1910, "1700": 1910, "651638e": 1910, "664510e": 1910, "1750": 1910, "656008e": 1910, "667086e": 1910, "1800": 1910, "660144e": 1910, "672340e": 1910, "1850": 1910, "664176e": 1910, "679336e": 1910, "1900": 1910, "668654e": 1910, "683192e": 1910, "1950": 1910, "672131e": 1910, "675730e": 1910, "684436e": 1910, "2050": 1910, "679345e": 1910, "685910e": 1910, "2100": 1910, "682198e": 1910, "687477e": 1910, "2150": 1910, "684352e": 1910, "690953e": 1910, "2200": 1910, "686737e": 1910, "692379e": 1910, "2250": 1910, "688213e": 1910, "693244e": 1910, "2300": 1910, "690648e": 1910, "698961e": 1910, "2350": 1910, "693554e": 1910, "701783e": 1910, "2400": 1910, "696589e": 1910, "703675e": 1910, "2450": 1910, "699951e": 1910, "705554e": 1910, "702238e": 1910, "705714e": 1910, "2550": 1910, "704255e": 1910, "710990e": 1910, "2600": 1910, "706153e": 1910, "713617e": 1910, "53": 1910, "2650": 1910, "708070e": 1910, "713903e": 1910, "2700": 1910, "709566e": 1910, "2750": 1910, "711365e": 1910, "714727e": 1910, "2800": 1910, "712767e": 1910, "715763e": 1910, "2850": 1910, "713924e": 1910, "717583e": 1910, "2900": 1910, "715063e": 1910, "718967e": 1910, "59": [1910, 1916], "2950": 1910, "716309e": 1910, "720381e": 1910, "717715e": 1910, "721396e": 1910, "61": [1910, 1918], "3050": 1910, "718699e": 1910, "722662e": 1910, "3100": 1910, "719379e": 1910, "723719e": 1910, "3150": 1910, "720750e": 1910, "728523e": 1910, "3200": 1910, "721825e": 1910, "3250": 1910, "723489e": 1910, "730297e": 1910, "66": [1910, 1918, 1919], "3300": 1910, "724960e": 1910, "3350": 1910, "726414e": 1910, "3400": 1910, "728228e": 1910, "736205e": 1910, "69": 1910, "3450": 1910, "729573e": 1910, "3500": 1910, "730764e": 1910, "3550": 1910, "732604e": 1910, "740851e": 1910, "3600": 1910, "734725e": 1910, "3650": 1910, "736656e": 1910, "3700": 1910, "738042e": 1910, "742883e": 1910, "3750": 1910, "739408e": 1910, "76": 1910, "3800": 1910, "740628e": 1910, "745662e": 1910, "77": 1910, "3850": 1910, "742020e": 1910, "747658e": 1910, "3900": 1910, "743480e": 1910, "748826e": 1910, "79": [1910, 1917], "3950": 1910, "745263e": 1910, "750244e": 1910, "746462e": 1910, "4050": 1910, "747639e": 1910, "750263e": 1910, "4100": 1910, "748825e": 1910, "750442e": 1910, "4150": 1910, "749469e": 1910, "750688e": 1910, "84": [1910, 1918, 1919], "4200": 1910, "750088e": 1910, "751212e": 1910, "4250": 1910, "750365e": 1910, "4300": 1910, "750600e": 1910, "751361e": 1910, "4350": 1910, "750885e": 1910, "752174e": 1910, "4400": 1910, "751208e": 1910, "752654e": 1910, "4450": 1910, "751561e": 1910, "752717e": 1910, "4500": 1910, "751994e": 1910, "752956e": 1910, "91": [1910, 1912, 1918], "4550": 1910, "752418e": 1910, "753591e": 1910, "4600": 1910, "755239e": 1910, "4650": 1910, "753058e": 1910, "755383e": 1910, "94": [1910, 1918], "4700": 1910, "753560e": 1910, "755434e": 1910, "4750": 1910, "754149e": 1910, "96": [1910, 1918], "4800": 1910, "754853e": 1910, "756107e": 1910, "4850": 1910, "755318e": 1910, "756331e": 1910, "4900": 1910, "755540e": 1910, "756656e": 1910, "4950": 1910, "755761e": 1910, "756008e": 1910, "28783": 1910, "277672267686": 1910, "x_0000": 1910, "114235e": 1910, "y_0000": 1910, "311872e": 1910, "x_0001": 1910, "197274e": 1910, "y_0001": 1910, "544626e": 1910, "x_0002": 1910, "998818e": 1910, "y_0002": 1910, "087410e": 1910, "x_0003": 1910, "932613e": 1910, "y_0003": 1910, "498619e": 1910, "x_0004": 1910, "951248e": 1910, "y_0004": 1910, "494226e": 1910, "x_0005": 1910, "365731e": 1910, "y_0005": 1910, "180728e": 1910, "x_0006": 1910, "168690e": 1910, "y_0006": 1910, "726276e": 1910, "x_0007": 1910, "468598e": 1910, "y_0007": 1910, "232537e": 1910, "x_0008": 1910, "999757e": 1910, "y_0008": 1910, "507834e": 1910, "x_0009": 1910, "017820e": 1910, "y_0009": 1910, "495002e": 1910, "878328e": 1910, "boundary_0000": 1910, "573154e": 1910, "boundary_0001": 1910, "boundary_0002": 1910, "182467e": 1910, "boundary_0003": 1910, "381264e": 1910, "boundary_0004": 1910, "875224e": 1910, "boundary_0005": 1910, "boundary_0006": 1910, "787956e": 1910, "boundary_0007": 1910, "385391e": 1910, "boundary_0008": 1910, "426929e": 1910, "boundary_0009": 1910, "781952e": 1910, "dist_0_1": 1910, "434586e": 1910, "dist_0_2": 1910, "027015e": 1910, "dist_0_3": 1910, "421938e": 1910, "dist_0_4": 1910, "439414e": 1910, "dist_0_5": 1910, "194822e": 1910, "dist_0_6": 1910, "880748e": 1910, "dist_0_7": 1910, "044156e": 1910, "dist_0_8": 1910, "585859e": 1910, "dist_0_9": 1910, "377881e": 1910, "dist_1_2": 1910, "374803e": 1910, "dist_1_3": 1910, "051430e": 1910, "dist_1_4": 1910, "639116e": 1910, "dist_1_5": 1910, "742672e": 1910, "dist_1_6": 1910, "511013e": 1910, "dist_1_7": 1910, "572399e": 1910, "dist_1_8": 1910, "421784e": 1910, "dist_1_9": 1910, "268625e": 1910, "dist_2_3": 1910, "592622e": 1910, "dist_2_4": 1910, "860049e": 1910, "dist_2_5": 1910, "508672e": 1910, "dist_2_6": 1910, "703977e": 1910, "dist_2_7": 1910, "298466e": 1910, "dist_2_8": 1910, "339020e": 1910, "dist_2_9": 1910, "916108e": 1910, "dist_3_4": 1910, "971977e": 1910, "dist_3_5": 1910, "895907e": 1910, "dist_3_6": 1910, "012944e": 1910, "dist_3_7": 1910, "762303e": 1910, "dist_3_8": 1910, "245126e": 1910, "dist_3_9": 1910, "394927e": 1910, "dist_4_5": 1910, "818416e": 1910, "dist_4_6": 1910, "313328e": 1910, "dist_4_7": 1910, "002709e": 1910, "dist_4_8": 1910, "959411e": 1910, "dist_4_9": 1910, "041244e": 1910, "dist_5_6": 1910, "566637e": 1910, "dist_5_7": 1910, "512055e": 1910, "dist_5_8": 1910, "293245e": 1910, "dist_5_9": 1910, "389183e": 1910, "dist_6_7": 1910, "137620e": 1910, "dist_6_8": 1910, "391898e": 1910, "dist_6_9": 1910, "735820e": 1910, "dist_7_8": 1910, "750976e": 1910, "dist_7_9": 1910, "215227e": 1910, "dist_8_9": 1910, "322396e": 1910, "210": 1910, "211": 1910, "212": 1910, "213": 1910, "215": 1910, "995": 1910, "081": 1910, "109": [1910, 1918], "5e": 1910, "611": 1910, "1197": 1910, "999": 1910, "546": 1910, "501": 1910, "131": [1910, 1912], "654": 1910, "508": 1910, "495e": 1910, "00013": 1910, "u2": [1910, 1916, 1917, 1918], "dpar": 1910, "outside_whit": 1910, "organ": 1911, "axial_induct": 1911, "farm_pmask": 1911, "pmask": [1911, 1914, 1915], "farm_hubh_data": 1911, "hubh_data": 1911, "farm_kti": 1911, "farm_kti_02": 1911, "kti_02": [1911, 1919], "farm_kti_04": 1911, "kti_04": 1911, "farm_kti_05": 1911, "kti_05": [1911, 1920, 1921], "farm_kti_amb": 1911, "kti_amb": 1911, "farm_kti_amb_02": 1911, "kti_amb_02": 1911, "farm_kti_amb_04": 1911, "kti_amb_04": 1911, "farm_kti_amb_05": 1911, "kti_amb_05": 1911, "farm_thrust2ct": 1911, "farm_yaw2yawm": 1911, "farm_yawm2yaw": 1911, "axiwake10": 1911, "axiwake2": 1911, "axiwake20": 1911, "axiwake3": 1911, "axiwake4": 1911, "axiwake5": 1911, "axiwake6": 1911, "axiwake7": 1911, "axiwake8": 1911, "axiwake9": 1911, "distslic": 1911, "distsliced100": 1911, "distsliced16": 1911, "distsliced25": 1911, "distsliced36": 1911, "distsliced4": 1911, "distsliced400": 1911, "distsliced49": 1911, "distsliced64": 1911, "distsliced81": 1911, "distsliced9": 1911, "grid100": 1911, "grid25": 1911, "grid4": 1911, "grid400": 1911, "grid49": 1911, "grid64": 1911, "grid81": 1911, "grid9": [1911, 1912], "top_hat": 1911, "level10": 1911, "level2": 1911, "level20": 1911, "level3": 1911, "level4": 1911, "level5": 1911, "level6": 1911, "level7": 1911, "level8": 1911, "level9": 1911, "5mw": [1911, 1915, 1917, 1919], "null_typ": 1911, "rotor_wd_farmo": 1911, "seq_dyn_wak": [1911, 1916], "seq_dyn_wakes_10min": 1911, "seq_dyn_wakes_10": 1911, "seq_dyn_wakes_1min": [1911, 1916], "seq_dyn_wakes_1": 1911, "seq_dyn_wakes_30min": 1911, "seq_dyn_wakes_30": 1911, "streamlines_1": 1911, "streamlines_10": 1911, "streamlines_100_farmo": 1911, "streamlines_100_yaw": 1911, "streamlines_10_farmo": 1911, "streamlines_10_yaw": 1911, "streamlines_1_farmo": 1911, "streamlines_1_yaw": 1911, "streamlines_5": 1911, "streamlines_50": 1911, "streamlines_500": 1911, "streamlines_500_farmo": 1911, "streamlines_500_yaw": 1911, "streamlines_50_farmo": 1911, "streamlines_50_yaw": 1911, "streamlines_5_farmo": 1911, "streamlines_5_yaw": 1911, "timelines_10min": 1911, "timelines_10": [1911, 1918], "timelines_1km": 1911, "timelines_1min": 1911, "timelines_1": 1911, "timelines_30min": 1911, "timelines_30": 1911, "bastankhah025b_cub": 1911, "ws_cubic": 1911, "bastankhah025b_cubic_amb": 1911, "ws_cubic_amb": 1911, "bastankhah025b_cubic_amb_k002": 1911, "bastankhah025b_cubic_amb_k004": 1911, "bastankhah025b_cubic_k002": 1911, "bastankhah025b_cubic_k004": 1911, "bastankhah025b_linear": 1911, "bastankhah025b_linear_amb": 1911, "ws_linear_amb": 1911, "bastankhah025b_linear_amb_k002": 1911, "bastankhah025b_linear_amb_k004": 1911, "bastankhah025b_linear_amb_lim": 1911, "ws_linear_amb_lim": 1911, "bastankhah025b_linear_amb_lim_k002": 1911, "bastankhah025b_linear_amb_lim_k004": 1911, "bastankhah025b_linear_k002": 1911, "bastankhah025b_linear_k004": 1911, "bastankhah025b_linear_lim": 1911, "bastankhah025b_linear_lim_k002": 1911, "bastankhah025b_linear_lim_k004": 1911, "bastankhah025b_max_amb": 1911, "ws_max_amb": 1911, "bastankhah025b_max_amb_k002": 1911, "bastankhah025b_max_amb_k004": 1911, "bastankhah025b_product": 1911, "ws_product": 1911, "bastankhah025b_product_k002": 1911, "bastankhah025b_product_k004": 1911, "bastankhah025b_product_lim": 1911, "ws_product_lim": 1911, "bastankhah025b_product_lim_k002": 1911, "bastankhah025b_product_lim_k004": 1911, "bastankhah025b_quadrat": 1911, "ws_quadrat": 1911, "bastankhah025b_quadratic_amb": 1911, "ws_quadratic_amb": 1911, "bastankhah025b_quadratic_amb_k002": 1911, "bastankhah025b_quadratic_amb_k004": 1911, "bastankhah025b_quadratic_amb_lim": 1911, "ws_quadratic_amb_lim": 1911, "bastankhah025b_quadratic_amb_lim_k002": 1911, "bastankhah025b_quadratic_amb_lim_k004": 1911, "bastankhah025b_quadratic_k002": 1911, "bastankhah025b_quadratic_k004": 1911, "bastankhah025b_quart": 1911, "ws_quartic": 1911, "bastankhah025b_quartic_amb": 1911, "ws_quartic_amb": 1911, "bastankhah025b_quartic_amb_k002": 1911, "bastankhah025b_quartic_amb_k004": 1911, "bastankhah025b_quartic_k002": 1911, "bastankhah025b_quartic_k004": 1911, "bastankhah025b_wmax": 1911, "ws_wmax": 1911, "bastankhah025b_wmax_k002": 1911, "bastankhah025b_wmax_k004": 1911, "bastankhah025b_wquadratic_lim": 1911, "ws_wquadratic_lim": 1911, "bastankhah025b_wquadratic_lim_k002": 1911, "bastankhah025b_wquadratic_lim_k004": 1911, "bastankhah025_cub": 1911, "bastankhah025_cubic_amb": 1911, "bastankhah025_cubic_amb_k002": 1911, "bastankhah025_cubic_amb_k004": 1911, "bastankhah025_cubic_k002": 1911, "bastankhah025_cubic_k004": 1911, "bastankhah025_linear": 1911, "bastankhah025_linear_amb": 1911, "bastankhah025_linear_amb_k002": 1911, "bastankhah025_linear_amb_k004": 1911, "bastankhah025_linear_amb_lim": 1911, "bastankhah025_linear_amb_lim_k002": 1911, "bastankhah025_linear_amb_lim_k004": 1911, "bastankhah025_linear_k004": 1911, "bastankhah025_linear_lim": 1911, "bastankhah025_linear_lim_k002": 1911, "bastankhah025_max_amb": 1911, "bastankhah025_max_amb_k002": 1911, "bastankhah025_max_amb_k004": 1911, "bastankhah025_product": 1911, "bastankhah025_product_k002": 1911, "bastankhah025_product_k004": 1911, "bastankhah025_product_lim": 1911, "bastankhah025_product_lim_k002": 1911, "bastankhah025_product_lim_k004": 1911, "bastankhah025_quadrat": 1911, "bastankhah025_quadratic_amb": 1911, "bastankhah025_quadratic_amb_k002": 1911, "bastankhah025_quadratic_amb_k004": 1911, "bastankhah025_quadratic_amb_lim": 1911, "bastankhah025_quadratic_amb_lim_k002": 1911, "bastankhah025_quadratic_amb_lim_k004": 1911, "bastankhah025_quadratic_k002": 1911, "bastankhah025_quadratic_k004": 1911, "bastankhah025_quart": 1911, "bastankhah025_quartic_amb": 1911, "bastankhah025_quartic_amb_k002": 1911, "bastankhah025_quartic_amb_k004": 1911, "bastankhah025_quartic_k002": 1911, "bastankhah025_quartic_k004": 1911, "bastankhah025_wmax": 1911, "bastankhah025_wmax_k002": 1911, "bastankhah025_wmax_k004": 1911, "bastankhah025_wquadratic_lim": 1911, "bastankhah025_wquadratic_lim_k002": 1911, "bastankhah025_wquadratic_lim_k004": 1911, "bastankhah2014b_cub": 1911, "bastankhah2014b_cubic_amb": 1911, "bastankhah2014b_cubic_amb_k002": 1911, "bastankhah2014b_cubic_amb_k004": 1911, "bastankhah2014b_cubic_k002": 1911, "bastankhah2014b_cubic_k004": 1911, "bastankhah2014b_linear": 1911, "bastankhah2014b_linear_amb": 1911, "bastankhah2014b_linear_amb_k002": 1911, "bastankhah2014b_linear_amb_k004": 1911, "bastankhah2014b_linear_amb_lim": 1911, "bastankhah2014b_linear_amb_lim_k002": 1911, "bastankhah2014b_linear_amb_lim_k004": 1911, "bastankhah2014b_linear_k002": 1911, "bastankhah2014b_linear_k004": 1911, "bastankhah2014b_linear_lim": 1911, "bastankhah2014b_linear_lim_k002": 1911, "bastankhah2014b_linear_lim_k004": 1911, "bastankhah2014b_max_amb": 1911, "bastankhah2014b_max_amb_k002": 1911, "bastankhah2014b_max_amb_k004": 1911, "bastankhah2014b_product": 1911, "bastankhah2014b_product_k002": 1911, "bastankhah2014b_product_k004": 1911, "bastankhah2014b_product_lim": 1911, "bastankhah2014b_product_lim_k002": 1911, "bastankhah2014b_product_lim_k004": 1911, "bastankhah2014b_quadrat": 1911, "bastankhah2014b_quadratic_amb": 1911, "bastankhah2014b_quadratic_amb_k002": 1911, "bastankhah2014b_quadratic_amb_k004": 1911, "bastankhah2014b_quadratic_amb_lim": 1911, "bastankhah2014b_quadratic_amb_lim_k002": 1911, "bastankhah2014b_quadratic_amb_lim_k004": 1911, "bastankhah2014b_quadratic_k002": 1911, "bastankhah2014b_quadratic_k004": 1911, "bastankhah2014b_quart": 1911, "bastankhah2014b_quartic_amb": 1911, "bastankhah2014b_quartic_amb_k002": 1911, "bastankhah2014b_quartic_amb_k004": 1911, "bastankhah2014b_quartic_k002": 1911, "bastankhah2014b_quartic_k004": 1911, "bastankhah2014b_wmax": 1911, "bastankhah2014b_wmax_k002": 1911, "bastankhah2014b_wmax_k004": 1911, "bastankhah2014b_wquadratic_lim": 1911, "bastankhah2014b_wquadratic_lim_k002": 1911, "bastankhah2014b_wquadratic_lim_k004": 1911, "bastankhah2014_cub": 1911, "bastankhah2014_cubic_amb": 1911, "bastankhah2014_cubic_amb_k002": 1911, "bastankhah2014_cubic_amb_k004": 1911, "bastankhah2014_cubic_k002": 1911, "bastankhah2014_cubic_k004": 1911, "bastankhah2014_linear": [1911, 1920], "bastankhah2014_linear_amb": 1911, "bastankhah2014_linear_amb_k002": 1911, "bastankhah2014_linear_amb_k004": 1911, "bastankhah2014_linear_amb_lim": 1911, "bastankhah2014_linear_amb_lim_k002": 1911, "bastankhah2014_linear_amb_lim_k004": 1911, "bastankhah2014_linear_k002": [1911, 1912, 1914, 1915], "bastankhah2014_linear_k004": [1911, 1918], "bastankhah2014_linear_lim": 1911, "bastankhah2014_linear_lim_k002": 1911, "bastankhah2014_linear_lim_k004": 1911, "bastankhah2014_max_amb": 1911, "bastankhah2014_max_amb_k002": 1911, "bastankhah2014_max_amb_k004": 1911, "bastankhah2014_product": 1911, "bastankhah2014_product_k002": 1911, "bastankhah2014_product_k004": 1911, "bastankhah2014_product_lim": 1911, "bastankhah2014_product_lim_k002": 1911, "bastankhah2014_product_lim_k004": 1911, "bastankhah2014_quadrat": [1911, 1919], "bastankhah2014_quadratic_amb": 1911, "bastankhah2014_quadratic_amb_k002": 1911, "bastankhah2014_quadratic_amb_k004": 1911, "bastankhah2014_quadratic_amb_lim": 1911, "bastankhah2014_quadratic_amb_lim_k002": 1911, "bastankhah2014_quadratic_amb_lim_k004": 1911, "bastankhah2014_quadratic_k002": 1911, "bastankhah2014_quadratic_k004": 1911, "bastankhah2014_quart": 1911, "bastankhah2014_quartic_amb": 1911, "bastankhah2014_quartic_amb_k002": 1911, "bastankhah2014_quartic_amb_k004": 1911, "bastankhah2014_quartic_k002": 1911, "bastankhah2014_quartic_k004": 1911, "bastankhah2014_wmax": 1911, "bastankhah2014_wmax_k002": 1911, "bastankhah2014_wmax_k004": 1911, "bastankhah2014_wquadratic_lim": 1911, "bastankhah2014_wquadratic_lim_k002": 1911, "bastankhah2014_wquadratic_lim_k004": 1911, "bastankhah2016b_cub": 1911, "bastankhah2016b_cubic_amb": 1911, "bastankhah2016b_cubic_amb_k002": 1911, "bastankhah2016b_cubic_amb_k004": 1911, "bastankhah2016b_cubic_k002": 1911, "bastankhah2016b_cubic_k004": 1911, "bastankhah2016b_linear": 1911, "bastankhah2016b_linear_amb": 1911, "bastankhah2016b_linear_amb_k002": 1911, "bastankhah2016b_linear_amb_k004": 1911, "bastankhah2016b_linear_amb_lim": 1911, "bastankhah2016b_linear_amb_lim_k002": 1911, "bastankhah2016b_linear_amb_lim_k004": 1911, "bastankhah2016b_linear_k002": 1911, "bastankhah2016b_linear_k004": 1911, "bastankhah2016b_linear_lim": 1911, "bastankhah2016b_linear_lim_k002": 1911, "bastankhah2016b_linear_lim_k004": 1911, "bastankhah2016b_max_amb": 1911, "bastankhah2016b_max_amb_k002": 1911, "bastankhah2016b_max_amb_k004": 1911, "bastankhah2016b_product": 1911, "bastankhah2016b_product_k002": 1911, "bastankhah2016b_product_k004": 1911, "bastankhah2016b_product_lim": 1911, "bastankhah2016b_product_lim_k002": 1911, "bastankhah2016b_product_lim_k004": 1911, "bastankhah2016b_quadrat": 1911, "bastankhah2016b_quadratic_amb": 1911, "bastankhah2016b_quadratic_amb_k002": 1911, "bastankhah2016b_quadratic_amb_k004": 1911, "bastankhah2016b_quadratic_amb_lim": 1911, "bastankhah2016b_quadratic_amb_lim_k002": 1911, "bastankhah2016b_quadratic_amb_lim_k004": 1911, "bastankhah2016b_quadratic_k002": 1911, "bastankhah2016b_quadratic_k004": 1911, "bastankhah2016b_quart": 1911, "bastankhah2016b_quartic_amb": 1911, "bastankhah2016b_quartic_amb_k002": 1911, "bastankhah2016b_quartic_amb_k004": 1911, "bastankhah2016b_quartic_k002": 1911, "bastankhah2016b_quartic_k004": 1911, "bastankhah2016b_wmax": 1911, "bastankhah2016b_wmax_k002": 1911, "bastankhah2016b_wmax_k004": 1911, "bastankhah2016b_wquadratic_lim": 1911, "bastankhah2016b_wquadratic_lim_k002": 1911, "bastankhah2016b_wquadratic_lim_k004": 1911, "bastankhah2016_cub": 1911, "bastankhah2016_cubic_amb": 1911, "bastankhah2016_cubic_amb_k002": 1911, "bastankhah2016_cubic_amb_k004": 1911, "bastankhah2016_cubic_k002": 1911, "bastankhah2016_cubic_k004": 1911, "bastankhah2016_linear": [1911, 1921], "bastankhah2016_linear_amb": 1911, "bastankhah2016_linear_amb_k002": 1911, "bastankhah2016_linear_amb_k004": 1911, "bastankhah2016_linear_amb_lim": 1911, "bastankhah2016_linear_amb_lim_k002": 1911, "bastankhah2016_linear_amb_lim_k004": 1911, "bastankhah2016_linear_k002": 1911, "bastankhah2016_linear_k004": 1911, "bastankhah2016_linear_lim": 1911, "bastankhah2016_linear_lim_k002": 1911, "bastankhah2016_max_amb": 1911, "bastankhah2016_max_amb_k002": 1911, "bastankhah2016_max_amb_k004": 1911, "bastankhah2016_product": 1911, "bastankhah2016_product_k002": 1911, "bastankhah2016_product_k004": 1911, "bastankhah2016_product_lim": 1911, "bastankhah2016_product_lim_k002": 1911, "bastankhah2016_product_lim_k004": 1911, "bastankhah2016_quadrat": 1911, "bastankhah2016_quadratic_amb": 1911, "bastankhah2016_quadratic_amb_k002": 1911, "bastankhah2016_quadratic_amb_k004": 1911, "bastankhah2016_quadratic_amb_lim": 1911, "bastankhah2016_quadratic_amb_lim_k002": 1911, "bastankhah2016_quadratic_amb_lim_k004": 1911, "bastankhah2016_quadratic_k002": 1911, "bastankhah2016_quadratic_k004": 1911, "bastankhah2016_quart": 1911, "bastankhah2016_quartic_amb": 1911, "bastankhah2016_quartic_amb_k002": 1911, "bastankhah2016_quartic_amb_k004": 1911, "bastankhah2016_quartic_k002": 1911, "bastankhah2016_quartic_k004": 1911, "bastankhah2016_wmax": 1911, "bastankhah2016_wmax_k002": 1911, "bastankhah2016_wmax_k004": 1911, "bastankhah2016_wquadratic_lim": 1911, "bastankhah2016_wquadratic_lim_k002": 1911, "bastankhah2016_wquadratic_lim_k004": 1911, "crespohernandez_ambti_cub": 1911, "ti_cub": 1911, "crespohernandez_ambti_linear": 1911, "ti_linear": 1911, "crespohernandez_ambti_max": 1911, "ti_max": 1911, "crespohernandez_ambti_quadrat": 1911, "crespohernandez_ambti_quart": 1911, "ti_quart": 1911, "crespohernandez_cub": 1911, "crespohernandez_cubic_k002": 1911, "crespohernandez_linear": 1911, "crespohernandez_linear_k002": 1911, "crespohernandez_max": [1911, 1919, 1920], "crespohernandez_max_k002": 1911, "crespohernandez_quadrat": 1911, "crespohernandez_quadratic_k002": 1911, "crespohernandez_quart": 1911, "crespohernandez_quartic_k002": 1911, "iecti2005_cub": 1911, "19076020221856677": 1911, "iecti2005_linear": 1911, "iecti2005_max": 1911, "iecti2005_quadrat": 1911, "iecti2005_quart": 1911, "iecti2019_cub": 1911, "iecti2019_linear": 1911, "iecti2019_max": [1911, 1921], "iecti2019_quadrat": 1911, "jensen_cub": 1911, "jensen_cubic_amb": 1911, "jensen_cubic_amb_k002": 1911, "jensen_cubic_amb_k004": 1911, "jensen_cubic_amb_k007": 1911, "jensen_cubic_amb_k0075": 1911, "075": 1911, "jensen_cubic_k002": 1911, "jensen_cubic_k004": 1911, "jensen_cubic_k007": 1911, "jensen_cubic_k0075": 1911, "jensen_linear": 1911, "jensen_linear_amb": 1911, "jensen_linear_amb_k002": 1911, "jensen_linear_amb_k004": 1911, "jensen_linear_amb_k007": 1911, "jensen_linear_amb_k0075": 1911, "jensen_linear_amb_lim": 1911, "jensen_linear_amb_lim_k002": 1911, "jensen_linear_amb_lim_k004": 1911, "jensen_linear_amb_lim_k007": 1911, "jensen_linear_amb_lim_k0075": 1911, "jensen_linear_k002": 1911, "jensen_linear_k004": 1911, "jensen_linear_k0075": 1911, "jensen_linear_lim": 1911, "jensen_linear_lim_k002": 1911, "jensen_linear_lim_k004": 1911, "jensen_linear_lim_k007": 1911, "jensen_linear_lim_k0075": 1911, "jensen_max_amb": 1911, "jensen_max_amb_k002": 1911, "jensen_max_amb_k004": 1911, "jensen_max_amb_k007": 1911, "jensen_max_amb_k0075": 1911, "jensen_product": 1911, "jensen_product_k002": 1911, "jensen_product_k004": 1911, "jensen_product_k007": 1911, "jensen_product_k0075": 1911, "jensen_product_lim": 1911, "jensen_product_lim_k002": 1911, "jensen_product_lim_k004": 1911, "jensen_product_lim_k007": 1911, "jensen_product_lim_k0075": 1911, "jensen_quadrat": 1911, "jensen_quadratic_amb": 1911, "jensen_quadratic_amb_k002": 1911, "jensen_quadratic_amb_k004": 1911, "jensen_quadratic_amb_k007": 1911, "jensen_quadratic_amb_k0075": 1911, "jensen_quadratic_amb_lim": 1911, "jensen_quadratic_amb_lim_k002": 1911, "jensen_quadratic_amb_lim_k004": 1911, "jensen_quadratic_amb_lim_k007": 1911, "jensen_quadratic_amb_lim_k0075": 1911, "jensen_quadratic_k002": 1911, "jensen_quadratic_k004": 1911, "jensen_quadratic_k007": 1911, "jensen_quadratic_k0075": 1911, "jensen_quart": 1911, "jensen_quartic_amb": 1911, "jensen_quartic_amb_k002": 1911, "jensen_quartic_amb_k004": 1911, "jensen_quartic_amb_k007": 1911, "jensen_quartic_amb_k0075": 1911, "jensen_quartic_k002": 1911, "jensen_quartic_k004": 1911, "jensen_quartic_k007": 1911, "jensen_quartic_k0075": 1911, "jensen_wmax": 1911, "jensen_wmax_k002": 1911, "jensen_wmax_k004": 1911, "jensen_wmax_k007": 1911, "jensen_wmax_k0075": 1911, "jensen_wquadratic_lim": 1911, "jensen_wquadratic_lim_k002": 1911, "jensen_wquadratic_lim_k004": 1911, "jensen_wquadratic_lim_k007": 1911, "jensen_wquadratic_lim_k0075": 1911, "turboparkb_cubic_a002": 1911, "turboparkb_cubic_a004": 1911, "turboparkb_cubic_amb_a002": 1911, "turboparkb_cubic_amb_a004": 1911, "turboparkb_linear_a002": 1911, "turboparkb_linear_a004": 1911, "turboparkb_linear_amb_a002": 1911, "turboparkb_linear_amb_a004": 1911, "turboparkb_linear_amb_lim_a002": 1911, "turboparkb_linear_amb_lim_a004": 1911, "turboparkb_linear_lim_a002": 1911, "turboparkb_linear_lim_a004": 1911, "turboparkb_max_amb_a002": 1911, "turboparkb_max_amb_a004": 1911, "turboparkb_product_a002": 1911, "turboparkb_product_a004": 1911, "turboparkb_product_lim_a002": 1911, "turboparkb_product_lim_a004": 1911, "turboparkb_quadratic_a002": 1911, "turboparkb_quadratic_a004": 1911, "turboparkb_quadratic_amb_a002": 1911, "turboparkb_quadratic_amb_a004": 1911, "turboparkb_quadratic_amb_lim_a002": 1911, "turboparkb_quadratic_amb_lim_a004": 1911, "turboparkb_quartic_a002": 1911, "turboparkb_quartic_a004": 1911, "turboparkb_quartic_amb_a002": 1911, "turboparkb_quartic_amb_a004": 1911, "turboparkb_wmax_a002": 1911, "turboparkb_wmax_a004": 1911, "turboparkb_wquadratic_lim_a002": 1911, "turboparkb_wquadratic_lim_a004": 1911, "turboparkix_cubic_a002_dx001": 1911, "turboparkix_cubic_a002_dx1": 1911, "turboparkix_cubic_a002_dx10": 1911, "turboparkix_cubic_a002_dx100": 1911, "turboparkix_cubic_a002_dx5": 1911, "turboparkix_cubic_a002_dx50": 1911, "turboparkix_cubic_a004_dx001": 1911, "turboparkix_cubic_a004_dx1": 1911, "turboparkix_cubic_a004_dx10": 1911, "turboparkix_cubic_a004_dx100": 1911, "turboparkix_cubic_a004_dx5": 1911, "turboparkix_cubic_a004_dx50": 1911, "turboparkix_cubic_amb_a002_dx001": 1911, "turboparkix_cubic_amb_a002_dx1": 1911, "turboparkix_cubic_amb_a002_dx10": 1911, "turboparkix_cubic_amb_a002_dx100": 1911, "turboparkix_cubic_amb_a002_dx5": 1911, "turboparkix_cubic_amb_a002_dx50": 1911, "turboparkix_cubic_amb_a004_dx001": 1911, "turboparkix_cubic_amb_a004_dx1": 1911, "turboparkix_cubic_amb_a004_dx10": 1911, "turboparkix_cubic_amb_a004_dx100": 1911, "turboparkix_cubic_amb_a004_dx5": 1911, "turboparkix_cubic_amb_a004_dx50": 1911, "turboparkix_linear_a002_dx001": 1911, "turboparkix_linear_a002_dx1": 1911, "turboparkix_linear_a002_dx10": 1911, "turboparkix_linear_a002_dx100": 1911, "turboparkix_linear_a002_dx5": 1911, "turboparkix_linear_a002_dx50": 1911, "turboparkix_linear_a004_dx001": 1911, "turboparkix_linear_a004_dx1": 1911, "turboparkix_linear_a004_dx10": 1911, "turboparkix_linear_a004_dx100": 1911, "turboparkix_linear_a004_dx5": 1911, "turboparkix_linear_a004_dx50": 1911, "turboparkix_linear_amb_a002_dx001": 1911, "turboparkix_linear_amb_a002_dx1": 1911, "turboparkix_linear_amb_a002_dx10": 1911, "turboparkix_linear_amb_a002_dx100": 1911, "turboparkix_linear_amb_a002_dx5": 1911, "turboparkix_linear_amb_a002_dx50": 1911, "turboparkix_linear_amb_a004_dx001": 1911, "turboparkix_linear_amb_a004_dx1": 1911, "turboparkix_linear_amb_a004_dx10": 1911, "turboparkix_linear_amb_a004_dx100": 1911, "turboparkix_linear_amb_a004_dx5": 1911, "turboparkix_linear_amb_a004_dx50": 1911, "turboparkix_linear_amb_lim_a002_dx001": 1911, "turboparkix_linear_amb_lim_a002_dx1": 1911, "turboparkix_linear_amb_lim_a002_dx10": 1911, "turboparkix_linear_amb_lim_a002_dx100": 1911, "turboparkix_linear_amb_lim_a002_dx5": 1911, "turboparkix_linear_amb_lim_a002_dx50": 1911, "turboparkix_linear_amb_lim_a004_dx001": 1911, "turboparkix_linear_amb_lim_a004_dx1": 1911, "turboparkix_linear_amb_lim_a004_dx10": 1911, "turboparkix_linear_amb_lim_a004_dx100": 1911, "turboparkix_linear_amb_lim_a004_dx5": 1911, "turboparkix_linear_amb_lim_a004_dx50": 1911, "turboparkix_linear_lim_a002_dx001": 1911, "turboparkix_linear_lim_a002_dx1": 1911, "turboparkix_linear_lim_a002_dx10": 1911, "turboparkix_linear_lim_a002_dx100": 1911, "turboparkix_linear_lim_a002_dx5": 1911, "turboparkix_linear_lim_a002_dx50": 1911, "turboparkix_linear_lim_a004_dx001": 1911, "turboparkix_linear_lim_a004_dx1": 1911, "turboparkix_linear_lim_a004_dx10": 1911, "turboparkix_linear_lim_a004_dx100": 1911, "turboparkix_linear_lim_a004_dx5": 1911, "turboparkix_linear_lim_a004_dx50": 1911, "turboparkix_max_amb_a002_dx001": 1911, "turboparkix_max_amb_a002_dx1": 1911, "turboparkix_max_amb_a002_dx10": 1911, "turboparkix_max_amb_a002_dx100": 1911, "turboparkix_max_amb_a002_dx5": 1911, "turboparkix_max_amb_a002_dx50": 1911, "turboparkix_max_amb_a004_dx001": 1911, "turboparkix_max_amb_a004_dx1": 1911, "turboparkix_max_amb_a004_dx10": 1911, "turboparkix_max_amb_a004_dx100": 1911, "turboparkix_max_amb_a004_dx5": 1911, "turboparkix_max_amb_a004_dx50": 1911, "turboparkix_product_a002_dx001": 1911, "turboparkix_product_a002_dx1": 1911, "turboparkix_product_a002_dx10": 1911, "turboparkix_product_a002_dx100": 1911, "turboparkix_product_a002_dx5": 1911, "turboparkix_product_a002_dx50": 1911, "turboparkix_product_a004_dx001": 1911, "turboparkix_product_a004_dx1": 1911, "turboparkix_product_a004_dx10": 1911, "turboparkix_product_a004_dx100": 1911, "turboparkix_product_a004_dx5": 1911, "turboparkix_product_a004_dx50": 1911, "turboparkix_product_lim_a002_dx001": 1911, "turboparkix_product_lim_a002_dx1": 1911, "turboparkix_product_lim_a002_dx10": 1911, "turboparkix_product_lim_a002_dx100": 1911, "turboparkix_product_lim_a002_dx5": 1911, "turboparkix_product_lim_a002_dx50": 1911, "turboparkix_product_lim_a004_dx001": 1911, "turboparkix_product_lim_a004_dx1": 1911, "turboparkix_product_lim_a004_dx10": 1911, "turboparkix_product_lim_a004_dx100": 1911, "turboparkix_product_lim_a004_dx5": 1911, "turboparkix_product_lim_a004_dx50": 1911, "turboparkix_quadratic_a002_dx001": 1911, "turboparkix_quadratic_a002_dx1": 1911, "turboparkix_quadratic_a002_dx10": 1911, "turboparkix_quadratic_a002_dx100": 1911, "turboparkix_quadratic_a002_dx5": 1911, "turboparkix_quadratic_a002_dx50": 1911, "turboparkix_quadratic_a004_dx001": 1911, "turboparkix_quadratic_a004_dx1": 1911, "turboparkix_quadratic_a004_dx10": 1911, "turboparkix_quadratic_a004_dx100": 1911, "turboparkix_quadratic_a004_dx5": 1911, "turboparkix_quadratic_a004_dx50": 1911, "turboparkix_quadratic_amb_a002_dx001": 1911, "turboparkix_quadratic_amb_a002_dx1": 1911, "turboparkix_quadratic_amb_a002_dx10": 1911, "turboparkix_quadratic_amb_a002_dx100": 1911, "turboparkix_quadratic_amb_a002_dx5": 1911, "turboparkix_quadratic_amb_a002_dx50": 1911, "turboparkix_quadratic_amb_a004_dx001": 1911, "turboparkix_quadratic_amb_a004_dx1": 1911, "turboparkix_quadratic_amb_a004_dx10": 1911, "turboparkix_quadratic_amb_a004_dx100": 1911, "turboparkix_quadratic_amb_a004_dx5": 1911, "turboparkix_quadratic_amb_a004_dx50": 1911, "turboparkix_quadratic_amb_lim_a002_dx001": 1911, "turboparkix_quadratic_amb_lim_a002_dx1": 1911, "turboparkix_quadratic_amb_lim_a002_dx10": 1911, "turboparkix_quadratic_amb_lim_a002_dx100": 1911, "turboparkix_quadratic_amb_lim_a002_dx5": 1911, "turboparkix_quadratic_amb_lim_a002_dx50": 1911, "turboparkix_quadratic_amb_lim_a004_dx001": 1911, "turboparkix_quadratic_amb_lim_a004_dx1": 1911, "turboparkix_quadratic_amb_lim_a004_dx10": 1911, "turboparkix_quadratic_amb_lim_a004_dx100": 1911, "turboparkix_quadratic_amb_lim_a004_dx5": 1911, "turboparkix_quadratic_amb_lim_a004_dx50": 1911, "turboparkix_quartic_a002_dx001": 1911, "turboparkix_quartic_a002_dx1": 1911, "turboparkix_quartic_a002_dx10": 1911, "turboparkix_quartic_a002_dx100": 1911, "turboparkix_quartic_a002_dx5": 1911, "turboparkix_quartic_a002_dx50": 1911, "turboparkix_quartic_a004_dx001": 1911, "turboparkix_quartic_a004_dx1": 1911, "turboparkix_quartic_a004_dx10": 1911, "turboparkix_quartic_a004_dx100": 1911, "turboparkix_quartic_a004_dx5": 1911, "turboparkix_quartic_a004_dx50": 1911, "turboparkix_quartic_amb_a002_dx001": 1911, "turboparkix_quartic_amb_a002_dx1": 1911, "turboparkix_quartic_amb_a002_dx10": 1911, "turboparkix_quartic_amb_a002_dx100": 1911, "turboparkix_quartic_amb_a002_dx5": 1911, "turboparkix_quartic_amb_a002_dx50": 1911, "turboparkix_quartic_amb_a004_dx001": 1911, "turboparkix_quartic_amb_a004_dx1": 1911, "turboparkix_quartic_amb_a004_dx10": 1911, "turboparkix_quartic_amb_a004_dx100": 1911, "turboparkix_quartic_amb_a004_dx5": 1911, "turboparkix_quartic_amb_a004_dx50": 1911, "turboparkix_wmax_a002_dx001": 1911, "turboparkix_wmax_a002_dx1": 1911, "turboparkix_wmax_a002_dx10": 1911, "turboparkix_wmax_a002_dx100": 1911, "turboparkix_wmax_a002_dx5": 1911, "turboparkix_wmax_a002_dx50": 1911, "turboparkix_wmax_a004_dx001": 1911, "turboparkix_wmax_a004_dx1": 1911, "turboparkix_wmax_a004_dx10": 1911, "turboparkix_wmax_a004_dx100": 1911, "turboparkix_wmax_a004_dx5": 1911, "turboparkix_wmax_a004_dx50": 1911, "turboparkix_wquadratic_lim_a002_dx001": 1911, "turboparkix_wquadratic_lim_a002_dx1": 1911, "turboparkix_wquadratic_lim_a002_dx10": 1911, "turboparkix_wquadratic_lim_a002_dx100": 1911, "turboparkix_wquadratic_lim_a002_dx5": 1911, "turboparkix_wquadratic_lim_a002_dx50": 1911, "turboparkix_wquadratic_lim_a004_dx001": 1911, "turboparkix_wquadratic_lim_a004_dx1": 1911, "turboparkix_wquadratic_lim_a004_dx10": 1911, "turboparkix_wquadratic_lim_a004_dx100": 1911, "turboparkix_wquadratic_lim_a004_dx5": 1911, "turboparkix_wquadratic_lim_a004_dx50": 1911, "turbopark_cubic_a002": 1911, "turbopark_cubic_a004": 1911, "turbopark_cubic_amb_a002": 1911, "turbopark_cubic_amb_a004": 1911, "turbopark_linear_a002": 1911, "turbopark_linear_a004": 1911, "turbopark_linear_amb_a002": 1911, "turbopark_linear_amb_a004": 1911, "turbopark_linear_amb_lim_a002": 1911, "turbopark_linear_amb_lim_a004": 1911, "turbopark_linear_lim_a002": 1911, "turbopark_linear_lim_a004": 1911, "turbopark_max_amb_a002": 1911, "turbopark_max_amb_a004": 1911, "turbopark_product_a002": 1911, "turbopark_product_a004": 1911, "turbopark_product_lim_a002": 1911, "turbopark_product_lim_a004": 1911, "turbopark_quadratic_a002": 1911, "turbopark_quadratic_a004": 1911, "turbopark_quadratic_amb_a002": 1911, "turbopark_quadratic_amb_a004": 1911, "turbopark_quadratic_amb_lim_a002": 1911, "turbopark_quadratic_amb_lim_a004": 1911, "turbopark_quartic_a002": 1911, "turbopark_quartic_a004": 1911, "turbopark_quartic_amb_a002": 1911, "turbopark_quartic_amb_a004": 1911, "turbopark_wmax_a002": 1911, "turbopark_wmax_a004": 1911, "turbopark_wquadratic_lim_a002": 1911, "turbopark_wquadratic_lim_a004": 1911, "ws_quadratic_lim": 1911, "my_jensen": 1911, "042": 1911, "jensenwake80": 1911, "similarli": [1911, 1914, 1921], "explor": 1912, "download": 1912, "newa": 1912, "websit": 1912, "4464": 1912, "kinet": [1912, 1913], "variat": 1912, "neglect": 1912, "inflow": [1912, 1919], "goal": [1912, 1916], "certain": 1912, "west": [1912, 1915, 1921], "earlier": 1912, "p0": [1912, 1914, 1919, 1920], "nfarm": [1912, 1914, 1916, 1917, 1918, 1919, 1920, 1921], "1f": [1912, 1914, 1919, 1920], "2f": [1912, 1914, 1918, 1919, 1920], "340": [1912, 1915], "14377": 1912, "593022": 1912, "1533": 1912, "584614": 1912, "83636": 1912, "660154": 1912, "1034": 1912, "432767": 1912, "738764": 1912, "1069": 1912, "775436": 1912, "880119": 1912, "1133": 1912, "327951": 1912, "344888": 1912, "1388": 1912, "612517": 1912, "532676": 1912, "4041": 1912, "896723": 1912, "22320": 1912, "script": 1913, "becom": 1913, "reli": 1913, "exce": 1914, "nor": 1914, "pmax_": 1914, "s_": 1914, "pmax_4": 1914, "6000": [1914, 1915], "pmax_2": 1914, "pmax_0": 1914, "pmax_1": 1914, "pmax_3": 1914, "set_pmax": 1914, "thought": 1914, "od": 1914, "o1": 1914, "000000": [1914, 1917, 1918, 1919, 1921], "806173": 1914, "403": 1914, "151": 1914, "106903": 1914, "997697": 1914, "651819": 1914, "129": 1914, "929624": 1914, "840554": 1914, "1771": 1914, "100000": 1914, "110762": 1914, "440": 1914, "861136": 1914, "348633": 1914, "560767": 1914, "093786": 1914, "914426": 1914, "946766": 1914, "170": [1914, 1915], "396261": 1914, "4562": 1914, "500000": 1914, "053010": 1914, "1218": 1914, "152294": 1914, "001880": 1914, "738": 1914, "445084": 1914, "522878": 1914, "578": 1914, "384285": 1914, "262615": 1914, "491": 1914, "534548": 1914, "697787": 1914, "823401": 1914, "900005": 1914, "4451": 1914, "096026": 1914, "932216": 1914, "181480": 1914, "452153": 1914, "249557": 1914, "563693": 1914, "372918": 1914, "852422": 1914, "732653": 1914, "314050": 1914, "475399": 1914, "063345": 1914, "977087": 1914, "663709": 1914, "714437": 1914, "476878": 1914, "416355": 1914, "225378": 1914, "o0": 1914, "ylorrd": 1914, "nanmax": 1914, "ylgn": 1914, "persu": 1915, "east": 1915, "wd_min": 1915, "wd_max": 1915, "191": 1915, "290": 1915, "110": 1915, "correspons": 1915, "fulfil": 1915, "nrel": [1915, 1917, 1919], "d126": [1915, 1917, 1919], "h90": [1915, 1917, 1919], "sector_rul": 1915, "rews_min": 1915, "rews_max": 1915, "5001": 1915, "benefit": 1916, "coupl": 1916, "obvious": 1916, "slower": 1916, "advantag": 1916, "parcel": 1916, "jshtml": [1916, 1918], "timeseries_3000": 1916, "230": 1916, "280": 1916, "sake": 1916, "drama": 1916, "1min": 1916, "anigen": 1916, "008": 1916, "111": 1916, "02d": 1916, "lo": 1916, "sequential_calc": 1916, "timeseries_data": [1916, 1918], "timeseries_var": [1916, 1918], "10t05": 1916, "000000000": 1916, "10t06": 1916, "10t07": 1916, "10t08": 1916, "10t09": 1916, "10t10": 1916, "10t11": 1916, "10t12": 1916, "10t13": 1916, "10t14": 1916, "10t15": 1916, "10t16": 1916, "10t17": 1916, "10t18": 1916, "10t19": 1916, "10t20": 1916, "10t21": 1916, "10t22": 1916, "10t23": 1916, "11t00": 1916, "11t01": 1916, "11t02": 1916, "11t03": 1916, "11t04": 1916, "11t05": 1916, "11t06": 1916, "11t07": 1916, "11t08": 1916, "11t09": 1916, "11t10": 1916, "11t11": 1916, "11t12": 1916, "11t13": 1916, "11t14": 1916, "11t15": 1916, "11t16": 1916, "11t17": 1916, "11t18": 1916, "11t19": 1916, "11t20": 1916, "11t21": 1916, "11t22": 1916, "11t23": 1916, "12t00": 1916, "12t01": 1916, "12t02": 1916, "12t03": 1916, "12t04": 1916, "12t05": 1916, "12t06": 1916, "477e": 1916, "6e": [1916, 1917], "summari": 1917, "skip": 1917, "ask": 1917, "519e": 1917, "2e": 1917, "2518": 1917, "600000": 1917, "790000": 1917, "633459": 1917, "1557": 1917, "076947": 1917, "803665": 1917, "176627": 1917, "1290": 1917, "332498": 1917, "808234": 1917, "955794": 1917, "1167": 1917, "325199": 1917, "812210": 1917, "821354": 1917, "1106": 1917, "880886": 1917, "818932": 1917, "15000": 1917, "916": 1917, "principl": 1918, "trajectori": 1918, "commun": 1918, "inlcud": 1918, "07t12": 1918, "446e": 1918, "631e": 1918, "157e": 1918, "078e": 1918, "039e": 1918, "020e": 1918, "098e": 1918, "549e": 1918, "275e": 1918, "373e": 1918, "08": 1918, "186e": 1918, "593e": 1918, "farm_df": [1918, 1921], "1532": 1918, "700000": [1918, 1919], "796724": 1918, "693": 1918, "620333": 1918, "449712": 1918, "513": 1918, "555734": 1918, "gridspec_kw": 1918, "height_ratio": 1918, "anom": 1918, "panel": 1918, "013": 1918, "fun": [1918, 1919], "partialaxiwake12": 1918, "setxyhd1": 1918, "setxyhd1_t2f": 1918, "calc_yaw_centrerotor2": 1918, "calcorder1": 1918, "setambfarmresults1": 1918, "urelax13_ct": 1918, "farmwakescalculation13": 1918, "203": 1918, "timeseries_8000": 1919, "test_farm_67": 1919, "bastankhah_quadrat": 1919, "610500": 1919, "019526": 1919, "021033": 1919, "560020": 1919, "581863": 1919, "299": 1919, "145984": 1919, "4868": 1919, "1880": 1919, "222715": 1919, "490711": 1919, "4777": 1919, "186188": 1919, "750000": 1919, "642754": 1919, "4843": 1919, "705093": 1919, "486464": 1919, "2970": 1919, "914286": 1919, "536000": 1919, "turbine_result": 1919, "nresult": 1919, "3067": 1919, "723397": 1919, "2726": 1919, "544336": 1919, "613545": 1919, "545309": 1919, "808815": 1919, "873257": 1919, "2410": 1919, "957101": 1919, "482191": 1919, "675162": 1919, "2612": 1919, "853288": 1919, "522571": 1919, "750459": 1919, "590086": 1919, "534518": 1919, "783296": 1919, "2491": 1919, "421004": 1919, "498284": 1919, "705578": 1919, "2521": 1919, "999187": 1919, "504400": 1919, "714070": 1919, "2474": 1919, "595255": 1919, "494919": 1919, "690213": 1919, "2817": 1919, "661662": 1919, "563532": 1919, "847528": 1919, "2449": 1919, "294531": 1919, "489859": 1919, "687873": 1919, "2546": 1919, "109423": 1919, "509222": 1919, "728496": 1919, "884528": 1919, "119984": 1919, "888595": 1919, "411889": 1919, "824848": 1919, "092713": 1919, "677454": 1919, "682716": 1919, "455820": 1919, "303919": 1919, "171": 1919, "205": 1919, "1504": 1919, "seen": 1919, "mean_eff": [1919, 1920], "overhead": 1919, "But": 1919, "nmean": 1919, "launch": 1919, "localclust": 1919, "e39327ea": 1919, "tcp": 1919, "38539": 1919, "gib": 1919, "dashboard": 1919, "8787": 1919, "shut": 1919, "runtim": 1919, "localhost": 1919, "plenti": 1919, "bastankhah_linear": 1920, "204": 1920, "683": 1920, "perfectli": 1920, "fine": 1920, "port": 1921, "aim": 1921, "set_yawm": 1921, "sensit": 1921, "porteagel_linear": 1921, "frontal": 1921, "205676": 1921, "665355": 1921, "240": 1921, "corect": 1921}, "objects": {"foxes.algorithms": [[0, 0, 1, "", "Downwind", "The downwind algorithm."], [9, 0, 1, "", "Iterative", "Iterative calculation of farm data."], [16, 0, 1, "", "Sequential", "A sequential calculation of states without chunking."]], "foxes.algorithms.Downwind": [[1, 1, 1, "", "__init__", "Constructor."], [2, 1, 1, "", "all_models", "Return all models"], [3, 1, 1, "", "calc_farm", "Calculate farm data."], [4, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [5, 1, 1, "", "finalize", "Finalizes the algorithm."], [6, 1, 1, "", "get_model", "Get the algorithm specific model"], [7, 1, 1, "", "init_states", "Initialize states, if needed."], [8, 1, 1, "", "initialize", "Initializes the algorithm."]], "foxes.algorithms.Iterative": [[10, 1, 1, "", "__init__", "Constructor."], [11, 1, 1, "", "calc_farm", "Calculate farm data."], [12, 1, 1, "", "get_model", "Get the algorithm specific model"], [13, 2, 1, "", "iterations", "The current iteration number"], [14, 1, 1, "", "set_urelax", "Sets under-relaxation parameters."], [15, 2, 1, "", "urelax", "Returns the under-relaxation parameters"]], "foxes.algorithms.Sequential": [[17, 1, 1, "", "__init__", "Constructor."], [18, 1, 1, "", "__iter__", "Initialize the iterator"], [19, 1, 1, "", "__next__", "Run calculation for current step, then iterate to next"], [20, 1, 1, "", "calc_farm", "Calculate farm data."], [21, 1, 1, "", "calc_points", "Calculate data at a given set of points."], [22, 2, 1, "", "counter", "The current index counter"], [23, 2, 1, "", "cur_farm_results", "The current farm results"], [24, 2, 1, "", "cur_point_results", "The current point results"], [25, 2, 1, "", "farm_results", "The overall farm results"], [26, 2, 1, "", "fdata", "Get the current farm data"], [27, 1, 1, "", "get_model", "Get the algorithm specific model"], [28, 2, 1, "", "index", "The current index"], [29, 2, 1, "", "iterating", "Flag for running iteration"], [30, 2, 1, "", "mdata", "Get the current model data"], [31, 2, 1, "", "pdata", "Get the current point data"], [32, 2, 1, "", "point_results", "The overall point results"], [33, 2, 1, "", "size", "The total number of iteration steps"], [34, 2, 1, "", "weight", "The current weight array"]], "foxes.algorithms.downwind.models": [[35, 0, 1, "", "CalcOrder", "This model calculates the turbine evaluation order, via wake frames."], [40, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [46, 0, 1, "", "PointWakesCalculation", "This model calculates wake effects at points of interest."], [53, 0, 1, "", "SetAmbFarmResults", "This model copies farm data results to ambient results."], [57, 0, 1, "", "SetAmbPointResults", "This model copies point results to ambient results."]], "foxes.algorithms.downwind.models.CalcOrder": [[36, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [37, 1, 1, "", "initialize", "Initializes the model."], [38, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [39, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.FarmWakesCalculation": [[41, 1, 1, "", "__init__", "Constructor."], [42, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [43, 1, 1, "", "initialize", "Initializes the model."], [44, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [45, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.PointWakesCalculation": [[47, 1, 1, "", "__init__", "Constructor."], [48, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [49, 1, 1, "", "contribute_to_wake_deltas", "Contribute to wake deltas from source turbines"], [50, 1, 1, "", "initialize", "Initializes the model."], [51, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [52, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.SetAmbFarmResults": [[54, 1, 1, "", "__init__", "Constructor."], [55, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [56, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults": [[58, 1, 1, "", "__init__", "Constructor."], [59, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [60, 1, 1, "", "initialize", "Initializes the model."], [61, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.algorithms.iterative": [[62, 0, 1, "", "ConvCrit", "Abstract base class for convergence criteria"], [66, 0, 1, "", "ConvCritList", "A list of convergence criteria"], [71, 0, 1, "", "ConvVarDelta", "Requires convergence of a selection of variables."], [75, 0, 1, "", "DefaultConv", "Default convergence criteria."]], "foxes.algorithms.iterative.ConvCrit": [[63, 1, 1, "", "__init__", "Constructor."], [64, 1, 1, "", "check_converged", "Check convergence criteria."], [65, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCritList": [[67, 1, 1, "", "__init__", "Constructor."], [68, 1, 1, "", "add_crit", "Add a convergence criterion"], [69, 1, 1, "", "check_converged", "Check convergence criteria."], [70, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvVarDelta": [[72, 1, 1, "", "__init__", "Constructor."], [73, 1, 1, "", "check_converged", "Check convergence criteria."], [74, 1, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.DefaultConv": [[76, 1, 1, "", "__init__", "Constructor."]], "foxes.algorithms.iterative.models": [[77, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [83, 0, 1, "", "URelax", "Apply under-relaxation to selected variables during iterations."]], "foxes.algorithms.iterative.models.FarmWakesCalculation": [[78, 1, 1, "", "__init__", "Constructor."], [79, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [80, 1, 1, "", "initialize", "Initializes the model."], [81, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [82, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.iterative.models.URelax": [[84, 1, 1, "", "__init__", "Constructor."], [85, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [86, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.sequential": [[87, 0, 1, "", "SequentialPlugin", "Base class for plugins that are updated with each sequential iteration"]], "foxes.algorithms.sequential.SequentialPlugin": [[88, 1, 1, "", "__init__", "Constructor."], [89, 1, 1, "", "finalize", "Finalize data based on the final iterator"], [90, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [91, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.algorithms.sequential.models": [[92, 0, 1, "", "SeqState", "A single state during sequential iteration, just serving as a structural placeholder"]], "foxes.algorithms.sequential.models.SeqState": [[93, 1, 1, "", "__init__", "Constructor."], [94, 1, 1, "", "calculate", "The main model calculation."], [95, 2, 1, "", "counter", "The current index counter"], [96, 1, 1, "", "index", "The index list"], [97, 1, 1, "", "initialize", "Initializes the model."], [98, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [99, 1, 1, "", "size", "The total number of states."], [100, 1, 1, "", "sub_models", "List of all sub-models"], [101, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.constants": [[102, 3, 1, "", "AMB_RPOINT_RESULTS", "Identified for ambient rotor point results"], [103, 4, 1, "", "DTYPE", "Default data type for floats"], [226, 3, 1, "", "FARM", "Wind farm identifier"], [227, 3, 1, "", "GW", "The unit giga watt"], [228, 4, 1, "", "ITYPE", "Default data type for int"], [278, 3, 1, "", "KAPPA", "The Van-Karman constant"], [279, 3, 1, "", "MW", "The unit mega watt"], [280, 3, 1, "", "POINT", "Point identifier"], [281, 3, 1, "", "POINTS", "Points identifier"], [282, 3, 1, "", "POP", "Population identifier"], [283, 3, 1, "", "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [284, 3, 1, "", "RPOINT", "Rotor point identifier"], [285, 3, 1, "", "RPOINTS", "Rotor points identifier"], [286, 3, 1, "", "RWEIGHTS", "Rotor point weights identifier"], [287, 3, 1, "", "STATE", "States identifier"], [288, 3, 1, "", "STATES_SEL", "Identifier for states selection"], [289, 3, 1, "", "STATE_POINT", "Identifier for state-point dimensions"], [290, 3, 1, "", "STATE_SOURCE_TURBINE", "Identifier for the source turbines per state"], [291, 3, 1, "", "STATE_TURBINE", "Identifier for state-turbine dimensions"], [292, 3, 1, "", "TMODELS", "Turbine models identifier"], [293, 3, 1, "", "TMODEL_SELS", "Selected turbine models identifier"], [294, 3, 1, "", "TNAME", "Wind turbine name identifier"], [295, 3, 1, "", "TURBINE", "Wind turbine identifier"], [296, 3, 1, "", "TW", "The unit terra watt"], [297, 3, 1, "", "VALID", "Validity identifier"], [298, 3, 1, "", "VARS", "Variables identifier"], [299, 3, 1, "", "W", "The unit watt"], [300, 3, 1, "", "XYH", "The vector (x, y, height)"], [301, 3, 1, "", "kW", "The unit kilo watt"]], "foxes.constants.DTYPE": [[104, 4, 1, "", "T", "Scalar attribute identical to the corresponding array attribute."], [105, 1, 1, "", "__abs__", "abs(self)"], [106, 1, 1, "", "__add__", "Return self+value."], [107, 1, 1, "", "__and__", "Return self&value."], [108, 1, 1, "", "__array__", "sc.__array__(dtype) return 0-dim array from scalar with specified dtype"], [109, 4, 1, "", "__array_interface__", "Array protocol: Python side"], [110, 4, 1, "", "__array_priority__", "Array priority."], [111, 4, 1, "", "__array_struct__", "Array protocol: struct"], [112, 1, 1, "", "__array_wrap__", "sc.__array_wrap__(obj) return scalar from array"], [113, 1, 1, "", "__bool__", "self != 0"], [114, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [115, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [116, 1, 1, "", "__eq__", "Return self==value."], [117, 1, 1, "", "__float__", "float(self)"], [118, 1, 1, "", "__floordiv__", "Return self//value."], [119, 1, 1, "", "__format__", "NumPy array scalar formatter"], [120, 1, 1, "", "__ge__", "Return self>=value."], [121, 1, 1, "", "__getitem__", "Return self[key]."], [122, 1, 1, "", "__gt__", "Return self>value."], [123, 1, 1, "", "__hash__", "Return hash(self)."], [124, 1, 1, "", "__int__", "int(self)"], [125, 1, 1, "", "__invert__", "~self"], [126, 1, 1, "", "__le__", "Return self<=value."], [127, 1, 1, "", "__lshift__", "Return self<<value."], [128, 1, 1, "", "__lt__", "Return self<value."], [129, 1, 1, "", "__mod__", "Return self%value."], [130, 1, 1, "", "__mul__", "Return self*value."], [131, 1, 1, "", "__ne__", "Return self!=value."], [132, 1, 1, "", "__neg__", "-self"], [133, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [134, 1, 1, "", "__or__", "Return self|value."], [135, 1, 1, "", "__pos__", "+self"], [136, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [137, 1, 1, "", "__radd__", "Return value+self."], [138, 1, 1, "", "__rand__", "Return value&self."], [139, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [140, 1, 1, "", "__reduce__", "Helper for pickle."], [141, 1, 1, "", "__repr__", "Return repr(self)."], [142, 1, 1, "", "__rfloordiv__", "Return value//self."], [143, 1, 1, "", "__rlshift__", "Return value<<self."], [144, 1, 1, "", "__rmod__", "Return value%self."], [145, 1, 1, "", "__rmul__", "Return value*self."], [146, 1, 1, "", "__ror__", "Return value|self."], [147, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [148, 1, 1, "", "__rrshift__", "Return value>>self."], [149, 1, 1, "", "__rshift__", "Return self>>value."], [150, 1, 1, "", "__rsub__", "Return value-self."], [151, 1, 1, "", "__rtruediv__", "Return value/self."], [152, 1, 1, "", "__rxor__", "Return value^self."], [153, 1, 1, "", "__sizeof__", "Size of object in memory, in bytes."], [154, 1, 1, "", "__str__", "Return str(self)."], [155, 1, 1, "", "__sub__", "Return self-value."], [156, 1, 1, "", "__truediv__", "Return self/value."], [157, 1, 1, "", "__xor__", "Return self^value."], [158, 1, 1, "", "all", "Scalar method identical to the corresponding array attribute."], [159, 1, 1, "", "any", "Scalar method identical to the corresponding array attribute."], [160, 1, 1, "", "argmax", "Scalar method identical to the corresponding array attribute."], [161, 1, 1, "", "argmin", "Scalar method identical to the corresponding array attribute."], [162, 1, 1, "", "argsort", "Scalar method identical to the corresponding array attribute."], [163, 1, 1, "", "as_integer_ratio", "Return a pair of integers, whose ratio is exactly equal to the original floating point number, and with a positive denominator. Raise OverflowError on infinities and a ValueError on NaNs."], [164, 1, 1, "", "astype", "Scalar method identical to the corresponding array attribute."], [165, 4, 1, "", "base", "Scalar attribute identical to the corresponding array attribute."], [166, 1, 1, "", "byteswap", "Scalar method identical to the corresponding array attribute."], [167, 1, 1, "", "choose", "Scalar method identical to the corresponding array attribute."], [168, 1, 1, "", "clip", "Scalar method identical to the corresponding array attribute."], [169, 1, 1, "", "compress", "Scalar method identical to the corresponding array attribute."], [170, 1, 1, "", "conj", ""], [171, 1, 1, "", "conjugate", "Scalar method identical to the corresponding array attribute."], [172, 1, 1, "", "copy", "Scalar method identical to the corresponding array attribute."], [173, 1, 1, "", "cumprod", "Scalar method identical to the corresponding array attribute."], [174, 1, 1, "", "cumsum", "Scalar method identical to the corresponding array attribute."], [175, 4, 1, "", "data", "Pointer to start of data."], [176, 1, 1, "", "diagonal", "Scalar method identical to the corresponding array attribute."], [177, 4, 1, "", "dtype", "Get array data-descriptor."], [178, 1, 1, "", "dump", "Scalar method identical to the corresponding array attribute."], [179, 1, 1, "", "dumps", "Scalar method identical to the corresponding array attribute."], [180, 1, 1, "", "fill", "Scalar method identical to the corresponding array attribute."], [181, 4, 1, "", "flags", "The integer value of flags."], [182, 4, 1, "", "flat", "A 1-D view of the scalar."], [183, 1, 1, "", "flatten", "Scalar method identical to the corresponding array attribute."], [184, 1, 1, "", "getfield", "Scalar method identical to the corresponding array attribute."], [185, 4, 1, "", "imag", "The imaginary part of the scalar."], [186, 1, 1, "", "is_integer", "Return True if the floating point number is finite with integral value, and False otherwise."], [187, 1, 1, "", "item", "Scalar method identical to the corresponding array attribute."], [188, 1, 1, "", "itemset", "Scalar method identical to the corresponding array attribute."], [189, 4, 1, "", "itemsize", "The length of one element in bytes."], [190, 1, 1, "", "max", "Scalar method identical to the corresponding array attribute."], [191, 1, 1, "", "mean", "Scalar method identical to the corresponding array attribute."], [192, 1, 1, "", "min", "Scalar method identical to the corresponding array attribute."], [193, 4, 1, "", "nbytes", "The length of the scalar in bytes."], [194, 4, 1, "", "ndim", "The number of array dimensions."], [195, 1, 1, "", "newbyteorder", "Return a new dtype with a different byte order."], [196, 1, 1, "", "nonzero", "Scalar method identical to the corresponding array attribute."], [197, 1, 1, "", "prod", "Scalar method identical to the corresponding array attribute."], [198, 1, 1, "", "ptp", "Scalar method identical to the corresponding array attribute."], [199, 1, 1, "", "put", "Scalar method identical to the corresponding array attribute."], [200, 1, 1, "", "ravel", "Scalar method identical to the corresponding array attribute."], [201, 4, 1, "", "real", "The real part of the scalar."], [202, 1, 1, "", "repeat", "Scalar method identical to the corresponding array attribute."], [203, 1, 1, "", "reshape", "Scalar method identical to the corresponding array attribute."], [204, 1, 1, "", "resize", "Scalar method identical to the corresponding array attribute."], [205, 1, 1, "", "round", "Scalar method identical to the corresponding array attribute."], [206, 1, 1, "", "searchsorted", "Scalar method identical to the corresponding array attribute."], [207, 1, 1, "", "setfield", "Scalar method identical to the corresponding array attribute."], [208, 1, 1, "", "setflags", "Scalar method identical to the corresponding array attribute."], [209, 4, 1, "", "shape", "Tuple of array dimensions."], [210, 4, 1, "", "size", "The number of elements in the gentype."], [211, 1, 1, "", "sort", "Scalar method identical to the corresponding array attribute."], [212, 1, 1, "", "squeeze", "Scalar method identical to the corresponding array attribute."], [213, 1, 1, "", "std", "Scalar method identical to the corresponding array attribute."], [214, 4, 1, "", "strides", "Tuple of bytes steps in each dimension."], [215, 1, 1, "", "sum", "Scalar method identical to the corresponding array attribute."], [216, 1, 1, "", "swapaxes", "Scalar method identical to the corresponding array attribute."], [217, 1, 1, "", "take", "Scalar method identical to the corresponding array attribute."], [218, 1, 1, "", "tobytes", ""], [219, 1, 1, "", "tofile", "Scalar method identical to the corresponding array attribute."], [220, 1, 1, "", "tolist", "Scalar method identical to the corresponding array attribute."], [221, 1, 1, "", "tostring", "Scalar method identical to the corresponding array attribute."], [222, 1, 1, "", "trace", "Scalar method identical to the corresponding array attribute."], [223, 1, 1, "", "transpose", "Scalar method identical to the corresponding array attribute."], [224, 1, 1, "", "var", "Scalar method identical to the corresponding array attribute."], [225, 1, 1, "", "view", "Scalar method identical to the corresponding array attribute."]], "foxes.constants.ITYPE": [[229, 1, 1, "", "__abs__", "abs(self)"], [230, 1, 1, "", "__add__", "Return self+value."], [231, 1, 1, "", "__and__", "Return self&value."], [232, 1, 1, "", "__bool__", "self != 0"], [233, 1, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [234, 1, 1, "", "__divmod__", "Return divmod(self, value)."], [235, 1, 1, "", "__eq__", "Return self==value."], [236, 1, 1, "", "__float__", "float(self)"], [237, 1, 1, "", "__floordiv__", "Return self//value."], [238, 1, 1, "", "__ge__", "Return self>=value."], [239, 1, 1, "", "__gt__", "Return self>value."], [240, 1, 1, "", "__hash__", "Return hash(self)."], [241, 1, 1, "", "__index__", "Return self converted to an integer, if self is suitable for use as an index into a list."], [242, 1, 1, "", "__int__", "int(self)"], [243, 1, 1, "", "__invert__", "~self"], [244, 1, 1, "", "__le__", "Return self<=value."], [245, 1, 1, "", "__lshift__", "Return self<<value."], [246, 1, 1, "", "__lt__", "Return self<value."], [247, 1, 1, "", "__mod__", "Return self%value."], [248, 1, 1, "", "__mul__", "Return self*value."], [249, 1, 1, "", "__ne__", "Return self!=value."], [250, 1, 1, "", "__neg__", "-self"], [251, 1, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [252, 1, 1, "", "__or__", "Return self|value."], [253, 1, 1, "", "__pos__", "+self"], [254, 1, 1, "", "__pow__", "Return pow(self, value, mod)."], [255, 1, 1, "", "__radd__", "Return value+self."], [256, 1, 1, "", "__rand__", "Return value&self."], [257, 1, 1, "", "__rdivmod__", "Return divmod(value, self)."], [258, 1, 1, "", "__repr__", "Return repr(self)."], [259, 1, 1, "", "__rfloordiv__", "Return value//self."], [260, 1, 1, "", "__rlshift__", "Return value<<self."], [261, 1, 1, "", "__rmod__", "Return value%self."], [262, 1, 1, "", "__rmul__", "Return value*self."], [263, 1, 1, "", "__ror__", "Return value|self."], [264, 1, 1, "", "__rpow__", "Return pow(value, self, mod)."], [265, 1, 1, "", "__rrshift__", "Return value>>self."], [266, 1, 1, "", "__rshift__", "Return self>>value."], [267, 1, 1, "", "__rsub__", "Return value-self."], [268, 1, 1, "", "__rtruediv__", "Return value/self."], [269, 1, 1, "", "__rxor__", "Return value^self."], [270, 1, 1, "", "__str__", "Return str(self)."], [271, 1, 1, "", "__sub__", "Return self-value."], [272, 1, 1, "", "__truediv__", "Return self/value."], [273, 1, 1, "", "__xor__", "Return self^value."], [274, 1, 1, "", "bit_count", "Computes the number of 1-bits in the absolute value of the input. Analogous to the builtin int.bit_count or popcount in C++."], [275, 4, 1, "", "denominator", "denominator of value (1)"], [276, 1, 1, "", "is_integer", "Return True if the number is finite with integral value."], [277, 4, 1, "", "numerator", "numerator of value (the value itself)"]], "foxes.core": [[302, 0, 1, "", "Algorithm", "Abstract base class for algorithms."], [317, 0, 1, "", "AxialInductionModel", "Abstract base class for axial induction models"], [319, 0, 1, "", "Data", "Container for data and meta data."], [327, 0, 1, "", "DataCalcModel", "Abstract base class for models with that run calculation on xarray Dataset data."], [330, 0, 1, "", "ExtendedStates", "States extended by point data models."], [339, 0, 1, "", "FarmController", "Analyses selected turbine models and handles their call."], [349, 0, 1, "", "FarmDataModel", "Abstract base class for models that modify farm data."], [354, 0, 1, "", "FarmDataModelList", "A list of farm data models."], [361, 0, 1, "", "FarmModel", "A FarmDataModel that operates on the farm level (in contrast to a TurbineModel, which allows application to a subset of turbines)."], [362, 0, 1, "", "Model", "Base class for all models."], [375, 0, 1, "", "PartialWakesModel", "Abstract base class for partial wakes models."], [383, 0, 1, "", "PointDataModel", "Abstract base class for models that modify point based data."], [387, 0, 1, "", "PointDataModelList", "A list of point data models."], [393, 0, 1, "", "RotorModel", "Abstract base class of rotor models."], [403, 0, 1, "", "States", "Abstract base class for states."], [409, 0, 1, "", "Turbine", "An individual wind turbine."], [413, 0, 1, "", "TurbineModel", "Abstract base class for turbine models."], [416, 0, 1, "", "TurbineType", "Abstract base class for turbine type models."], [419, 0, 1, "", "VerticalProfile", "Abstract base class for vertical profiles."], [423, 0, 1, "", "WakeFrame", "Abstract base class for wake frames."], [430, 0, 1, "", "WakeModel", "Abstract base class for wake models."], [435, 0, 1, "", "WakeSuperposition", "Abstract base class for wake superposition models."], [438, 0, 1, "", "WindFarm", "The wind farm."]], "foxes.core.Algorithm": [[303, 1, 1, "", "__init__", "Constructor."], [304, 1, 1, "", "chunked", ""], [305, 1, 1, "", "del_model_data", "Remove stored model data"], [306, 1, 1, "", "finalize", "Finalizes the algorithm."], [307, 1, 1, "", "get_model_data", "Gets model data from memory"], [308, 1, 1, "", "get_models_data", "Creates xarray from model input data."], [309, 1, 1, "", "get_models_idata", "Returns idata object of models"], [310, 2, 1, "", "idata_mem", "The current idata memory"], [311, 1, 1, "", "initialize", "Initializes the algorithm."], [312, 1, 1, "", "new", "Run-time algorithm factory."], [313, 1, 1, "", "new_point_data", "Creates a point data xarray object, containing only points."], [314, 1, 1, "", "print", "Print function, based on verbosity."], [315, 1, 1, "", "store_model_data", "Store model data"], [316, 1, 1, "", "update_n_turbines", "Reset the number of turbines, according to self.farm"]], "foxes.core.AxialInductionModel": [[318, 1, 1, "", "ct2a", "Computes induction from ct"]], "foxes.core.Data": [[320, 1, 1, "", "__init__", "Constructor."], [321, 1, 1, "", "add", "Add data entry"], [322, 1, 1, "", "from_points", "Create from points"], [323, 2, 1, "", "n_points", "The number of points"], [324, 2, 1, "", "n_states", "The number of states"], [325, 2, 1, "", "n_turbines", "The number of turbines"], [326, 1, 1, "", "states_i0", "Get the state counter for first state in chunk"]], "foxes.core.DataCalcModel": [[328, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [329, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.ExtendedStates": [[331, 1, 1, "", "__init__", "Constructor."], [332, 1, 1, "", "append", "Add a model to the list"], [333, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [334, 1, 1, "", "index", "The index list"], [335, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [336, 1, 1, "", "size", "The total number of states."], [337, 1, 1, "", "sub_models", "List of all sub-models"], [338, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.FarmController": [[340, 1, 1, "", "__init__", "Constructor."], [341, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [342, 1, 1, "", "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [343, 1, 1, "", "finalize", "Finalizes the model."], [344, 1, 1, "", "initialize", "Initializes the model."], [345, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [346, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [347, 1, 1, "", "set_pars", "Set parameters for a turbine model"], [348, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmDataModel": [[350, 1, 1, "", "__init__", "Constructor."], [351, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [352, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [353, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModelList": [[355, 1, 1, "", "__init__", "Constructor."], [356, 1, 1, "", "append", "Add a model to the list"], [357, 1, 1, "", "calculate", "The main model calculation."], [358, 1, 1, "", "insert", "Insert a model into the list"], [359, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [360, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.Model": [[363, 1, 1, "", "__init__", "Constructor."], [364, 1, 1, "", "__repr__", "Return repr(self)."], [365, 1, 1, "", "data_to_store", "Adds data from mdata to the local store, intended for iterative runs."], [366, 1, 1, "", "finalize", "Finalizes the model."], [367, 1, 1, "", "from_data_or_store", "Get data from mdata or local store"], [368, 1, 1, "", "get_data", "Getter for a data entry in the model object or provided data sources"], [369, 1, 1, "", "initialize", "Initializes the model."], [370, 2, 1, "", "initialized", "Initialization flag."], [371, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [372, 2, 1, "", "model_id", "Unique id based on the model type."], [373, 1, 1, "", "sub_models", "List of all sub-models"], [374, 1, 1, "", "var", "Creates a model specific variable name."]], "foxes.core.PartialWakesModel": [[376, 1, 1, "", "__init__", "Constructor."], [377, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [378, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [379, 1, 1, "", "initialize", "Initializes the model."], [380, 1, 1, "", "new", "Run-time partial wakes factory."], [381, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [382, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.PointDataModel": [[384, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [385, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [386, 1, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModelList": [[388, 1, 1, "", "__init__", "Constructor."], [389, 1, 1, "", "append", "Add a model to the list"], [390, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [391, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [392, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.RotorModel": [[394, 1, 1, "", "__init__", "Constructor."], [395, 1, 1, "", "calculate", "Calculate ambient rotor effective results."], [396, 1, 1, "", "design_points", "The rotor model design points."], [397, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [398, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [399, 1, 1, "", "n_rotor_points", "The number of rotor points"], [400, 1, 1, "", "new", "Run-time rotor model factory."], [401, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [402, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.core.States": [[404, 1, 1, "", "index", "The index list"], [405, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [406, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [407, 1, 1, "", "size", "The total number of states."], [408, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.Turbine": [[410, 1, 1, "", "__init__", "Constructor."], [411, 1, 1, "", "add_model", "Add a turbine model to the list."], [412, 1, 1, "", "insert_model", "Insert a turbine model into the list of models."]], "foxes.core.TurbineModel": [[414, 1, 1, "", "calculate", "The main model calculation."], [415, 1, 1, "", "new", "Run-time turbine model factory."]], "foxes.core.TurbineType": [[417, 1, 1, "", "__init__", "Constructor."], [418, 1, 1, "", "new", "Run-time turbine type factory."]], "foxes.core.VerticalProfile": [[420, 1, 1, "", "calculate", "Run the profile calculation."], [421, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."], [422, 1, 1, "", "new", "Run-time profile factory."]], "foxes.core.WakeFrame": [[424, 1, 1, "", "calc_centreline_integral", "Integrates variables along the centreline."], [425, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [426, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [427, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [428, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [429, 1, 1, "", "new", "Run-time wake frame factory."]], "foxes.core.WakeModel": [[431, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [432, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [433, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [434, 1, 1, "", "new", "Run-time wake model factory."]], "foxes.core.WakeSuperposition": [[436, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [437, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.core.WindFarm": [[439, 1, 1, "", "__init__", "Constructor."], [440, 1, 1, "", "add_turbine", "Add a wind turbine to the list."], [441, 2, 1, "", "n_turbines", "The number of turbines in the wind farm"], [442, 2, 1, "", "turbine_names", "The list of names of all turbines"]], "foxes.data": [[443, 0, 1, "", "StaticData", "A DataBook filled with static data from this directory."], [445, 5, 1, "", "parse_Pct_file_name", "Parse basic turbine data from file name"], [446, 5, 1, "", "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.StaticData": [[444, 1, 1, "", "__init__", "Constructor."]], "foxes.input.farm_layout": [[447, 5, 1, "", "add_from_csv", "Add turbines to wind farm via csv input file."], [448, 5, 1, "", "add_from_df", "Add turbines to wind farm via pandas DataFrame."], [449, 5, 1, "", "add_from_file", "Add turbines from file."], [450, 5, 1, "", "add_from_json", "Add turbimes from a json file."], [451, 5, 1, "", "add_grid", "Add a regular grid of turbines."], [452, 5, 1, "", "add_random", "Add turbines that lie randomly within a square"], [453, 5, 1, "", "add_row", "Add a single row of turbines."]], "foxes.input.states": [[454, 0, 1, "", "FieldDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format."], [462, 0, 1, "", "MultiHeightStates", "States with multiple heights data per entry."], [473, 0, 1, "", "MultiHeightTimeseries", "Multi-height timeseries states data."], [475, 0, 1, "", "ScanWS", "A given list of wind speeds, all other variables are fixed."], [482, 0, 1, "", "SingleStateStates", "A single uniform state."], [490, 0, 1, "", "StatesTable", "States from a pandas.DataFrame or a pandas readable file."], [503, 0, 1, "", "TabStates", "States created from a single tab file"], [506, 0, 1, "", "Timeseries", "Timeseries states data."]], "foxes.input.states.FieldDataNC": [[455, 1, 1, "", "__init__", "Constructor."], [456, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [457, 1, 1, "", "index", "The index list"], [458, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [459, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [460, 1, 1, "", "size", "The total number of states."], [461, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightStates": [[463, 4, 1, "", "RDICT", ""], [464, 1, 1, "", "__init__", "Constructor."], [465, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [466, 1, 1, "", "finalize", "Finalizes the model."], [467, 1, 1, "", "index", "The index list"], [468, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [469, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [470, 1, 1, "", "reset", "Reset the states, optionally select states"], [471, 1, 1, "", "size", "The total number of states."], [472, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightTimeseries": [[474, 4, 1, "", "RDICT", ""]], "foxes.input.states.ScanWS": [[476, 1, 1, "", "__init__", "Constructor."], [477, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [478, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [479, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [480, 1, 1, "", "size", "The total number of states."], [481, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates": [[483, 1, 1, "", "__init__", "Constructor."], [484, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [485, 1, 1, "", "initialize", "Initializes the model."], [486, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [487, 1, 1, "", "size", "The total number of states."], [488, 1, 1, "", "sub_models", "List of all sub-models"], [489, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.StatesTable": [[491, 4, 1, "", "RDICT", ""], [492, 1, 1, "", "__init__", "Constructor."], [493, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [494, 1, 1, "", "finalize", "Finalizes the model."], [495, 1, 1, "", "index", "The index list"], [496, 1, 1, "", "initialize", "Initializes the model."], [497, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [498, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [499, 1, 1, "", "reset", "Reset the states, optionally select states"], [500, 1, 1, "", "size", "The total number of states."], [501, 1, 1, "", "sub_models", "List of all sub-models"], [502, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.TabStates": [[504, 1, 1, "", "__init__", "Constructor."], [505, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.Timeseries": [[507, 4, 1, "", "RDICT", ""]], "foxes.input.states.create": [[508, 5, 1, "", "create_random_abl_states", "Create random abl states."], [509, 5, 1, "", "random_timseries_data", "Creates random uniform timeseries data"], [510, 5, 1, "", "write_random_abl_states", "Writes random abl states to file"]], "foxes.input.windio": [[511, 5, 1, "", "read_case", "Reads a WindIO case"]], "foxes.models.axial_induction_models": [[512, 0, 1, "", "BetzAxialInduction", "The classic axial induction from 1D momentum theory"], [515, 0, 1, "", "MadsenAxialInduction", "Computes the induction factor through polynomial fit, extending validity for high ct values"]], "foxes.models.axial_induction_models.BetzAxialInduction": [[513, 1, 1, "", "__init__", "Constructor."], [514, 1, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.axial_induction_models.MadsenAxialInduction": [[516, 1, 1, "", "__init__", "Constructor."], [517, 1, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.farm_controllers": [[518, 0, 1, "", "BasicFarmController", "The basic farm controller, running all turbine models in their order, without conditions."]], "foxes.models.farm_models": [[519, 0, 1, "", "Turbine2FarmModel", "Wrapper that promotes turbine models into farm models, simply by selecting all turbines."]], "foxes.models.farm_models.Turbine2FarmModel": [[520, 1, 1, "", "__init__", "Constructor."], [521, 1, 1, "", "__repr__", "Return repr(self)."], [522, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [523, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [524, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.model_book": [[525, 0, 1, "", "Dict", "A slightly enhanced dictionary."], [528, 0, 1, "", "ModelBook", "Container for all kinds of models."]], "foxes.models.model_book.Dict": [[526, 1, 1, "", "__getitem__", "x.__getitem__(y) <==> x[y]"], [527, 1, 1, "", "__init__", "Constructor."]], "foxes.models.model_book.ModelBook": [[529, 1, 1, "", "__getitem__", ""], [530, 1, 1, "", "__init__", "Constructor."], [531, 1, 1, "", "finalize", "Finalizes the model."], [532, 1, 1, "", "get", "Gets a model object."], [533, 1, 1, "", "print_toc", "Print the contents."]], "foxes.models.partial_wakes": [[534, 0, 1, "", "Mapped", "Partial wake models depending on the wake model (type)."], [541, 0, 1, "", "PartialAxiwake", "Partial wake calculation for axial wake models."], [549, 0, 1, "", "PartialCentre", "Partial wakes calculated only at the  rotor centre point."], [552, 0, 1, "", "PartialDistSlicedWake", "Partial wakes for distance sliced wake models, making use of their structure."], [560, 0, 1, "", "PartialGrid", "Partial wakes on a grid rotor that may differ from the one in the algorithm."], [563, 0, 1, "", "PartialTopHat", "Partial wakes for top-hat models."], [570, 0, 1, "", "RotorPoints", "Partial wakes calculation directly by the rotor model."]], "foxes.models.partial_wakes.Mapped": [[535, 1, 1, "", "__init__", "Constructor."], [536, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [537, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [538, 1, 1, "", "initialize", "Initializes the model."], [539, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [540, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialAxiwake": [[542, 1, 1, "", "__init__", "Constructor."], [543, 1, 1, "", "__repr__", "Return repr(self)."], [544, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [545, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [546, 1, 1, "", "initialize", "Initializes the model."], [547, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [548, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialCentre": [[550, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [551, 1, 1, "", "get_wake_points", "Get the wake calculation points."]], "foxes.models.partial_wakes.PartialDistSlicedWake": [[553, 1, 1, "", "__init__", "Constructor."], [554, 1, 1, "", "__repr__", "Return repr(self)."], [555, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [556, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [557, 1, 1, "", "initialize", "Initializes the model."], [558, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [559, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialGrid": [[561, 1, 1, "", "__init__", "Constructor."], [562, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialTopHat": [[564, 1, 1, "", "__init__", "Constructor."], [565, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [566, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [567, 1, 1, "", "initialize", "Initializes the model."], [568, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [569, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.RotorPoints": [[571, 1, 1, "", "__init__", "Constructor."], [572, 1, 1, "", "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [573, 1, 1, "", "evaluate_results", "Updates the farm data according to the wake deltas."], [574, 1, 1, "", "get_wake_points", "Get the wake calculation points."], [575, 1, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."]], "foxes.models.point_models": [[576, 0, 1, "", "SetUniformData", "Set uniform data (can be state dependent)"], [581, 0, 1, "", "TKE2TI", "Calculates TI from TKE, using TI = sqrt( 3/2 * TKE) / WS"], [584, 0, 1, "", "WakeDeltas", "This point model simply subtracts ambient results from waked results."]], "foxes.models.point_models.SetUniformData": [[577, 1, 1, "", "__init__", "Constructor."], [578, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [579, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [580, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI": [[582, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [583, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas": [[585, 1, 1, "", "__init__", "Constructor."], [586, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [587, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.rotor_models": [[588, 0, 1, "", "CentreRotor", "The centre rotor model."], [594, 0, 1, "", "GridRotor", "The weighted regular grid rotor model, composed maximally of n x n points, possibly kicking out the outside points."], [601, 0, 1, "", "LevelRotor", "The weighted regular rotor level model, composed of of n points between lower and upper blade tip. Calculates a height-dependent REWS"]], "foxes.models.rotor_models.CentreRotor": [[589, 1, 1, "", "design_points", "The rotor model design points."], [590, 1, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [591, 1, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [592, 1, 1, "", "n_rotor_points", "The number of rotor points"], [593, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.GridRotor": [[595, 1, 1, "", "__init__", "Constructor."], [596, 1, 1, "", "__repr__", "Return repr(self)."], [597, 1, 1, "", "design_points", "The rotor model design points."], [598, 1, 1, "", "initialize", "Initializes the model."], [599, 1, 1, "", "n_rotor_points", "The number of rotor points"], [600, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.LevelRotor": [[602, 1, 1, "", "__init__", "Constructor."], [603, 1, 1, "", "__repr__", "Return repr(self)."], [604, 1, 1, "", "design_points", "The rotor model design points."], [605, 1, 1, "", "initialize", "Initializes the model."], [606, 1, 1, "", "n_rotor_points", "The number of rotor points"], [607, 1, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.turbine_models": [[608, 0, 1, "", "Calculator", "Calculates variables based on given functions."], [612, 0, 1, "", "LookupTable", "Calculates the data by interpolation of lookup-table data"], [617, 0, 1, "", "PowerMask", "Invokes a maximal power value."], [623, 0, 1, "", "RotorCentreCalc", "Calculates data at the rotor centre"], [629, 0, 1, "", "SectorManagement", "Changes variables based on variable range conditions."], [634, 0, 1, "", "SetFarmVars", "Set farm data variables to given data."], [641, 0, 1, "", "SetXYHD", "Sets basic turbine data, from turbine object to farm data."], [645, 0, 1, "", "TableFactors", "Multiplies variables by factors from a two dimensional table."], [650, 0, 1, "", "Thrust2Ct", "Calculates ct from thrust force data."], [654, 0, 1, "", "YAW2YAWM", "Calculates delta yaw (i.e. YAWM) from absolute yaw (i.e. YAW)"], [657, 0, 1, "", "YAWM2YAW", "Calculates absolute yaw (i.e. YAWM) from delta yaw (i.e. YAWM)"], [660, 0, 1, "", "kTI", "Calculates the wake model parameter k as a linear function of TI."]], "foxes.models.turbine_models.Calculator": [[609, 1, 1, "", "__init__", "Constructor."], [610, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [611, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable": [[613, 1, 1, "", "__init__", "Constructor."], [614, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [615, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [616, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.PowerMask": [[618, 1, 1, "", "__init__", "Constructor."], [619, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [620, 1, 1, "", "initialize", "Initializes the model."], [621, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [622, 1, 1, "", "update_P_ct", ""]], "foxes.models.turbine_models.RotorCentreCalc": [[624, 1, 1, "", "__init__", "Constructor."], [625, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [626, 1, 1, "", "initialize", "Initializes the model."], [627, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [628, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.SectorManagement": [[630, 1, 1, "", "__init__", "Constructor."], [631, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [632, 1, 1, "", "initialize", "Initializes the model."], [633, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars": [[635, 1, 1, "", "__init__", "Constructor."], [636, 1, 1, "", "add_var", "Add data for a variable."], [637, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [638, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [639, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [640, 1, 1, "", "reset", "Remove all variables."]], "foxes.models.turbine_models.SetXYHD": [[642, 1, 1, "", "__init__", "Constructor."], [643, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [644, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.TableFactors": [[646, 1, 1, "", "__init__", "Constructor."], [647, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [648, 1, 1, "", "initialize", "Initializes the model."], [649, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct": [[651, 1, 1, "", "__init__", "Constructor."], [652, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [653, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM": [[655, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [656, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW": [[658, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [659, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI": [[661, 1, 1, "", "__init__", "Constructor."], [662, 1, 1, "", "__repr__", "Return repr(self)."], [663, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [664, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types": [[665, 0, 1, "", "CpCtFile", "Calculate power and ct by interpolating from cp-ct-curve data file (or pandas DataFrame)."], [667, 0, 1, "", "CpCtFromTwo", "Calculate power and ct by interpolating cp and ct from two files (or two pandas DataFrames)."], [669, 0, 1, "", "NullType", "A turbine type that does not compute any data."], [672, 0, 1, "", "PCtFile", "Calculate power and ct by interpolating from power-ct-curve data file (or pandas DataFrame)."], [678, 0, 1, "", "PCtFromTwo", "Calculate power and ct by interpolating from power curve and ct curve data files."], [684, 0, 1, "", "WsRho2PCtFromTwo", "Calculate air density dependent power and ct values, as given by two individual files."], [690, 0, 1, "", "WsTI2PCtFromTwo", "Calculate turbulent intensity dependent power and ct values, as given by two individual files."]], "foxes.models.turbine_types.CpCtFile": [[666, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo": [[668, 1, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.NullType": [[670, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [671, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile": [[673, 1, 1, "", "__init__", "Constructor."], [674, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [675, 1, 1, "", "finalize", "Finalizes the model."], [676, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [677, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo": [[679, 1, 1, "", "__init__", "Constructor."], [680, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [681, 1, 1, "", "finalize", "Finalizes the model."], [682, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [683, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo": [[685, 1, 1, "", "__init__", "Constructor."], [686, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [687, 1, 1, "", "finalize", "Finalizes the model."], [688, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [689, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo": [[691, 1, 1, "", "__init__", "Constructor."], [692, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [693, 1, 1, "", "finalize", "Finalizes the model."], [694, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [695, 1, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.vertical_profiles": [[696, 0, 1, "", "ABLLogNeutralWsProfile", "The neutral ABL wind speed log profile."], [700, 0, 1, "", "ABLLogStableWsProfile", "The stable ABL wind speed log profile."], [704, 0, 1, "", "ABLLogUnstableWsProfile", "The unstable ABL wind speed log profile."], [708, 0, 1, "", "ABLLogWsProfile", "The neutral/stable/unstable ABL wind speed log profile."], [712, 0, 1, "", "DataProfile", "A profile based on numerical data."], [716, 0, 1, "", "ShearedProfile", "A wind shear profile, based on a shear exponent."], [719, 0, 1, "", "UniformProfile", "A profile with uniform values."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile": [[697, 1, 1, "", "__init__", "Constructor."], [698, 1, 1, "", "calculate", "Run the profile calculation."], [699, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile": [[701, 1, 1, "", "__init__", "Constructor."], [702, 1, 1, "", "calculate", "Run the profile calculation."], [703, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile": [[705, 1, 1, "", "__init__", "Constructor."], [706, 1, 1, "", "calculate", "Run the profile calculation."], [707, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile": [[709, 1, 1, "", "__init__", "Constructor."], [710, 1, 1, "", "calculate", "Run the profile calculation."], [711, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.DataProfile": [[713, 1, 1, "", "__init__", "Constructor"], [714, 1, 1, "", "calculate", "Run the profile calculation."], [715, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile": [[717, 1, 1, "", "calculate", "Run the profile calculation."], [718, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile": [[720, 1, 1, "", "__init__", "Constructor"], [721, 1, 1, "", "calculate", "Run the profile calculation."], [722, 1, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.wake_frames": [[723, 0, 1, "", "FarmOrder", "Invokes turbine ordering as defined by the wind farm."], [729, 0, 1, "", "RotorWD", "Align the first axis for each rotor with the local normalized wind direction."], [734, 0, 1, "", "SeqDynamicWakes", "Dynamic wakes for the sequential algorithm."], [741, 0, 1, "", "Streamlines2D", "Streamline following wakes"], [748, 0, 1, "", "Timelines", "Dynamic wakes for spatially uniform timeseries states."], [754, 0, 1, "", "YawedWakes", "Bend the wakes for yawed turbines, based on the Bastankhah 2016 wake model"]], "foxes.models.wake_frames.FarmOrder": [[724, 1, 1, "", "__init__", "Constructor."], [725, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [726, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [727, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [728, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.RotorWD": [[730, 1, 1, "", "__init__", "Constructor."], [731, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [732, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [733, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.SeqDynamicWakes": [[735, 1, 1, "", "__init__", "Constructor."], [736, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [737, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [738, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [739, 1, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [740, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.Streamlines2D": [[742, 1, 1, "", "__init__", "Constructor."], [743, 1, 1, "", "__repr__", "Return repr(self)."], [744, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [745, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [746, 1, 1, "", "get_streamline_data", "Gets streamline data, generating it on the fly"], [747, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."]], "foxes.models.wake_frames.Timelines": [[749, 1, 1, "", "__init__", "Constructor."], [750, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [751, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [752, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [753, 1, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.YawedWakes": [[755, 1, 1, "", "__init__", "Constructor."], [756, 1, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [757, 1, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [758, 1, 1, "", "get_wake_coos", "Calculate wake coordinates."], [759, 1, 1, "", "initialize", "Initializes the model."], [760, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models": [[761, 0, 1, "", "AxisymmetricWakeModel", "Abstract base class for wake models that depend on (x, r) separately."], [764, 0, 1, "", "DistSlicedWakeModel", "Abstract base class for wake models for which the x-denpendency can be separated from the yz-dependency."], [771, 0, 1, "", "GaussianWakeModel", "Abstract base class for Gaussian wake models."], [774, 0, 1, "", "GroundMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from the ground"], [776, 0, 1, "", "TopHatWakeModel", "Abstract base class for top-hat wake models."], [783, 0, 1, "", "WakeMirror", "A wake model wrapper that adds mirror turbines that model wake reflection from a horizontal plane, e.g. the ground"]], "foxes.models.wake_models.AxisymmetricWakeModel": [[762, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [763, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel": [[765, 1, 1, "", "__init__", "Constructor."], [766, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [767, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [768, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [769, 1, 1, "", "initialize", "Initializes the model."], [770, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.GaussianWakeModel": [[772, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [773, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."]], "foxes.models.wake_models.GroundMirror": [[775, 1, 1, "", "__init__", "Constructor."]], "foxes.models.wake_models.TopHatWakeModel": [[777, 1, 1, "", "__init__", "Constructor."], [778, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [779, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [780, 1, 1, "", "calc_wakes_spsel_x_r", "Calculate wake deltas."], [781, 1, 1, "", "initialize", "Initializes the model."], [782, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.WakeMirror": [[784, 1, 1, "", "__init__", "Constructor."], [785, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [786, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [787, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [788, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction": [[789, 0, 1, "", "RankineHalfBody", "The Rankine half body induction wake model"], [796, 0, 1, "", "Rathmann", "The Rathmann induction wake model"], [802, 0, 1, "", "SelfSimilar", "The self-similar induction wake model from Troldborg and Meyer Forsting"], [808, 0, 1, "", "SelfSimilar2020", "The self-similar 2020 induction wake model from Troldborg and Meyer Forsting"]], "foxes.models.wake_models.induction.RankineHalfBody": [[790, 1, 1, "", "__init__", "Constructor."], [791, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [792, 1, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [793, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [794, 1, 1, "", "initialize", "Initializes the model."], [795, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.Rathmann": [[797, 1, 1, "", "__init__", "Constructor."], [798, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [799, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [800, 1, 1, "", "initialize", "Initializes the model."], [801, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.SelfSimilar": [[803, 1, 1, "", "__init__", "Constructor."], [804, 1, 1, "", "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [805, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [806, 1, 1, "", "initialize", "Initializes the model."], [807, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti": [[809, 0, 1, "", "CrespoHernandezTIWake", "The Crespo and Hernandez TI empirical correlation"], [815, 0, 1, "", "IECTIWake", "The TI wake model from IEC-64100-1-2005-8 (2005):"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake": [[810, 1, 1, "", "__init__", "Constructor."], [811, 1, 1, "", "__repr__", "Return repr(self)."], [812, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [813, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [814, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.ti.IECTIWake": [[816, 1, 1, "", "__init__", "Constructor."], [817, 1, 1, "", "__repr__", "Return repr(self)."], [818, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [819, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [820, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind": [[821, 0, 1, "", "Bastankhah2014", "The Bastankhah 2014 wake model"], [828, 0, 1, "", "Bastankhah2016", "The Bastankhah 2016 wake model"], [835, 0, 1, "", "Bastankhah2016Model", "Common calculations for the wake model and the wake frame, such that code repetitions can be avoided."], [858, 0, 1, "", "JensenWake", "The Jensen wake model."], [864, 0, 1, "", "TurbOParkWake", "The TurbOPark wake model"], [871, 0, 1, "", "TurbOParkWakeIX", "The generalized TurbOPark wake model, integrating TI over the streamline."]], "foxes.models.wake_models.wind.Bastankhah2014": [[822, 1, 1, "", "__init__", "Constructor."], [823, 1, 1, "", "__repr__", "Return repr(self)."], [824, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [825, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [826, 1, 1, "", "initialize", "Initializes the model."], [827, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016": [[829, 1, 1, "", "__init__", "Constructor."], [830, 1, 1, "", "__repr__", "Return repr(self)."], [831, 1, 1, "", "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [832, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [833, 1, 1, "", "initialize", "Initializes the model."], [834, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016Model": [[836, 4, 1, "", "AMPL_FAR", ""], [837, 4, 1, "", "AMPL_NEAR", ""], [838, 4, 1, "", "CHECK", ""], [839, 4, 1, "", "DELTA_FAR", ""], [840, 4, 1, "", "DELTA_NEAR", ""], [841, 4, 1, "", "MDATA_KEY", ""], [842, 4, 1, "", "NEAR", ""], [843, 4, 1, "", "PARS", ""], [844, 4, 1, "", "R_PC", ""], [845, 4, 1, "", "R_PC_S", ""], [846, 4, 1, "", "SIGMA_Y_FAR", ""], [847, 4, 1, "", "SIGMA_Z_FAR", ""], [848, 4, 1, "", "SP_SEL", ""], [849, 4, 1, "", "X0", ""], [850, 1, 1, "", "__init__", "Constructor."], [851, 1, 1, "", "calc_data", "Calculate common model data, store it in mdata."], [852, 1, 1, "", "clean", "Clean all data"], [853, 1, 1, "", "get_data", "Return data entry"], [854, 1, 1, "", "has_data", "Check if data exists"], [855, 1, 1, "", "initialize", "Initializes the model."], [856, 2, 1, "", "pars", "Dictionary of the model parameters"], [857, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.JensenWake": [[859, 1, 1, "", "__init__", "Constructor."], [860, 1, 1, "", "__repr__", "Return repr(self)."], [861, 1, 1, "", "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [862, 1, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [863, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."]], "foxes.models.wake_models.wind.TurbOParkWake": [[865, 1, 1, "", "__init__", "Constructor."], [866, 1, 1, "", "__repr__", "Return repr(self)."], [867, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [868, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [869, 1, 1, "", "initialize", "Initializes the model."], [870, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWakeIX": [[872, 1, 1, "", "__init__", "Constructor."], [873, 1, 1, "", "__repr__", "Return repr(self)."], [874, 1, 1, "", "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [875, 1, 1, "", "finalize", "Finalizes the model."], [876, 1, 1, "", "init_wake_deltas", "Initialize wake delta storage."], [877, 1, 1, "", "initialize", "Initializes the model."], [878, 1, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_superpositions": [[879, 0, 1, "", "TILinear", "Linear wake superposition for TI."], [883, 0, 1, "", "TIMax", "Max wake superposition for TI."], [887, 0, 1, "", "TIPow", "Power wake superposition for TI."], [891, 0, 1, "", "TIQuadratic", "Quadratic wake superposition for TI."], [895, 0, 1, "", "WSLinear", "Linear supersposition of wind deficit results"], [900, 0, 1, "", "WSMax", "Max supersposition of wind deficit results"], [905, 0, 1, "", "WSPow", "Power supersposition of wind deficit results"], [910, 0, 1, "", "WSProduct", "Product supersposition of wind deficit results"], [915, 0, 1, "", "WSQuadratic", "Quadratic supersposition of wind deficit results"]], "foxes.models.wake_superpositions.TILinear": [[880, 1, 1, "", "__init__", "Constructor."], [881, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [882, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIMax": [[884, 1, 1, "", "__init__", "Constructor."], [885, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [886, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIPow": [[888, 1, 1, "", "__init__", "Constructor."], [889, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [890, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.TIQuadratic": [[892, 1, 1, "", "__init__", "Constructor."], [893, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [894, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."]], "foxes.models.wake_superpositions.WSLinear": [[896, 1, 1, "", "__init__", "Constructor."], [897, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [898, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [899, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax": [[901, 1, 1, "", "__init__", "Constructor."], [902, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [903, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [904, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow": [[906, 1, 1, "", "__init__", "Constructor."], [907, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [908, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [909, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct": [[911, 1, 1, "", "__init__", "Constructor."], [912, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [913, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [914, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic": [[916, 1, 1, "", "__init__", "Constructor."], [917, 1, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [918, 1, 1, "", "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [919, 1, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.opt.constraints": [[1502, 0, 1, "", "AreaGeometryConstraint", "Constrains turbine positions to the inside of a given area geometry."], [1523, 0, 1, "", "FarmBoundaryConstraint", "Constrains turbine positions to the inside of the wind farm boundary"], [1525, 0, 1, "", "MinDistConstraint", "Turbines must keep at least a minimal spatial distance."]], "foxes.opt.constraints.AreaGeometryConstraint": [[1503, 1, 1, "", "__init__", "Constructor."], [1504, 1, 1, "", "__str__", "Get info string"], [1505, 1, 1, "", "ana_deriv", "Calculates the analytic derivative, if possible."], [1506, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1507, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1508, 2, 1, "", "component_names", "The names of the components"], [1509, 1, 1, "", "finalize", "Finalize the object."], [1510, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1511, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1512, 1, 1, "", "initialize", "Initialize the object."], [1513, 2, 1, "", "initialized", "Flag for finished initialization"], [1514, 1, 1, "", "n_components", "Returns the number of components of the function."], [1515, 2, 1, "", "n_vars_float", "The number of float variables"], [1516, 2, 1, "", "n_vars_int", "The number of int variables"], [1517, 1, 1, "", "rename_vars_float", "Rename float variables."], [1518, 1, 1, "", "rename_vars_int", "Rename integer variables."], [1519, 2, 1, "", "var_names_float", "The names of the float variables"], [1520, 2, 1, "", "var_names_int", "The names of the integer variables"], [1521, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"], [1522, 1, 1, "", "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.FarmBoundaryConstraint": [[1524, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.constraints.MinDistConstraint": [[1526, 1, 1, "", "__init__", "Constructor."], [1527, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1528, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1529, 1, 1, "", "initialize", "Initialize the constaint."], [1530, 1, 1, "", "n_components", "Returns the number of components of the function."], [1531, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core": [[1532, 0, 1, "", "FarmConstraint", "Abstract base class for foxes wind farm optimization constraints."], [1543, 0, 1, "", "FarmObjective", "Abstract base class for foxes wind farm objective functions."], [1550, 0, 1, "", "FarmOptProblem", "Abstract base class of wind farm optimization problems."], [1594, 0, 1, "", "FarmVarsProblem", "Abstract base class for models that optimize farm variables."], [1600, 0, 1, "", "PopStates", "Helper class for vectorized opt population calculation, via artificial states of length n_pop times n_states."]], "foxes.opt.core.FarmConstraint": [[1533, 1, 1, "", "__init__", "Constructor."], [1534, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1535, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1536, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1537, 2, 1, "", "farm", "The wind farm"], [1538, 1, 1, "", "n_components", "Returns the number of components of the function."], [1539, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1540, 1, 1, "", "print_models", "Prints all model names."], [1541, 2, 1, "", "sel_turbines", "The list of selected turbines"], [1542, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.core.FarmObjective": [[1544, 1, 1, "", "__init__", "Constraints."], [1545, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1546, 2, 1, "", "farm", "The wind farm"], [1547, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1548, 1, 1, "", "print_models", "Prints all model names."], [1549, 2, 1, "", "sel_turbines", "The list of selected turbines"]], "foxes.opt.core.FarmOptProblem": [[1551, 4, 1, "", "INT_INF", ""], [1552, 1, 1, "", "__init__", "Constructor."], [1553, 1, 1, "", "add_constraint", "Add a constraint to the problem."], [1554, 1, 1, "", "add_objective", "Add an objective to the problem."], [1555, 1, 1, "", "add_to_layout_figure", "Add to a layout figure"], [1556, 2, 1, "", "all_turbines", "Flag for all turbines optimization"], [1557, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1558, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1559, 1, 1, "", "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [1560, 1, 1, "", "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [1561, 1, 1, "", "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [1562, 2, 1, "", "constraints_tol", "Gets the tolerance values of constraints"], [1563, 2, 1, "", "counter", "The current value of the application counter"], [1564, 1, 1, "", "evaluate_individual", "Evaluate a single individual of the problem."], [1565, 1, 1, "", "evaluate_population", "Evaluate all individuals of a population."], [1566, 2, 1, "", "farm", "The wind farm"], [1567, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1568, 1, 1, "", "finalize_population", "Finalization, given the final population data."], [1569, 1, 1, "", "get_gradients", "Obtain gradients of a function that is linked to the problem."], [1570, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1571, 1, 1, "", "initial_values_int", "The initial values of the integer variables."], [1572, 1, 1, "", "initialize", "Initialize the object."], [1573, 2, 1, "", "max_values_constraints", "Gets the maximal values of constraints"], [1574, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1575, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1576, 2, 1, "", "maximize_objs", "Flags for objective maximization"], [1577, 2, 1, "", "min_values_constraints", "Gets the minimal values of constraints"], [1578, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1579, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1580, 2, 1, "", "n_constraints", "The total number of constraints, i.e., the sum of all components"], [1581, 2, 1, "", "n_objectives", "The total number of objectives, i.e., the sum of all components"], [1582, 2, 1, "", "n_sel_turbines", "The numer of selected turbines"], [1583, 2, 1, "", "n_vars_float", "The number of float variables"], [1584, 2, 1, "", "n_vars_int", "The number of int variables"], [1585, 1, 1, "", "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [1586, 1, 1, "", "prob_res_einsum_individual", "Calculate the einsum of problem results"], [1587, 1, 1, "", "prob_res_einsum_population", "Calculate the einsum of problem results"], [1588, 2, 1, "", "sel_turbines", "The selected turbines"], [1589, 1, 1, "", "tvar", "Gets turbine variable name"], [1590, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1591, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1592, 1, 1, "", "var_names_float", "The names of float variables."], [1593, 1, 1, "", "var_names_int", "The names of integer variables."]], "foxes.opt.core.FarmVarsProblem": [[1595, 1, 1, "", "initialize", "Initialize the object."], [1596, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1597, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1598, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1599, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."]], "foxes.opt.core.PopStates": [[1601, 1, 1, "", "__init__", "Constructor."], [1602, 1, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [1603, 1, 1, "", "initialize", "Initializes the model."], [1604, 1, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [1605, 1, 1, "", "output_point_vars", "The variables which are being modified by the model."], [1606, 1, 1, "", "size", "The total number of states."], [1607, 1, 1, "", "weights", "The statistical weights of all states."]], "foxes.opt.objectives": [[1608, 0, 1, "", "FarmVarObjective", "Objectives based on farm variables."], [1617, 0, 1, "", "MaxFarmPower", "Maximize the mean wind farm power"], [1619, 0, 1, "", "MaxNTurbines", "Maximizes the number of turrbines."], [1625, 0, 1, "", "MinimalMaxTI", "Minimize the maximal turbine TI"]], "foxes.opt.objectives.FarmVarObjective": [[1609, 1, 1, "", "__init__", "Constructor."], [1610, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1611, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1612, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1613, 1, 1, "", "initialize", "Initialize the object."], [1614, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1615, 1, 1, "", "n_components", "Returns the number of components of the function."], [1616, 1, 1, "", "vardeps_float", "Gets the dependencies of all components on the function float variables"]], "foxes.opt.objectives.MaxFarmPower": [[1618, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.objectives.MaxNTurbines": [[1620, 1, 1, "", "__init__", "Constructor."], [1621, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1622, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1623, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1624, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.objectives.MinimalMaxTI": [[1626, 1, 1, "", "__init__", "Constructor."]], "foxes.opt.problems": [[1627, 0, 1, "", "OptFarmVars", "Optimize a selection of farm variables."]], "foxes.opt.problems.OptFarmVars": [[1628, 1, 1, "", "__init__", "Constructor."], [1629, 1, 1, "", "add_var", "Add a variable."], [1630, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1631, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1632, 1, 1, "", "initialize", "Initialize the object."], [1633, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1634, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1635, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1636, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1637, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1638, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1639, 1, 1, "", "var_names_float", "The names of float variables."], [1640, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout": [[1766, 0, 1, "", "FarmLayoutOptProblem", "The turbine positioning optimization problem"], [1775, 0, 1, "", "RegGridsLayoutOptProblem", "Places turbines on several regular grids and optimizes their parameters."], [1791, 0, 1, "", "RegularLayoutOptProblem", "Places turbines on a regular grid and optimizes its parameters."]], "foxes.opt.problems.layout.FarmLayoutOptProblem": [[1767, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1768, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1769, 1, 1, "", "initialize", "Initialize the object."], [1770, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1771, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1772, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1773, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1774, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.RegGridsLayoutOptProblem": [[1776, 1, 1, "", "__init__", "Constraints."], [1777, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1778, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1779, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1780, 1, 1, "", "initialize", "Initialize the object."], [1781, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1782, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1783, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1784, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1785, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1786, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1787, 1, 1, "", "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [1788, 1, 1, "", "update_problem_population", "Update the algo and other data using the latest optimization variables."], [1789, 1, 1, "", "var_names_float", "The names of float variables."], [1790, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.RegularLayoutOptProblem": [[1792, 4, 1, "", "ANGLE", ""], [1793, 4, 1, "", "OFFSET_X", ""], [1794, 4, 1, "", "OFFSET_Y", ""], [1795, 4, 1, "", "SPACING_X", ""], [1796, 4, 1, "", "SPACING_Y", ""], [1797, 1, 1, "", "__init__", "Constructor."], [1798, 1, 1, "", "finalize_individual", "Finalization, given the champion data."], [1799, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1800, 1, 1, "", "initialize", "Initialize the object."], [1801, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1802, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1803, 1, 1, "", "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [1804, 1, 1, "", "opt2farm_vars_population", "Translates optimization variables to farm variables"], [1805, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts": [[1722, 0, 1, "", "GeomLayout", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes)."], [1732, 0, 1, "", "GeomLayoutGridded", "A layout within a boundary geometry, purely defined by geometrical optimization (no wakes), on a fixes background point grid."], [1742, 0, 1, "", "GeomRegGrid", "A regular grid within a boundary geometry."], [1752, 0, 1, "", "GeomRegGrids", "A regular grid within a boundary geometry."]], "foxes.opt.problems.layout.geom_layouts.GeomLayout": [[1723, 1, 1, "", "__init__", "Constructor."], [1724, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1725, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1726, 1, 1, "", "get_fig", "Return plotly figure axis."], [1727, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1728, 1, 1, "", "initialize", "Initialize the object."], [1729, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1730, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1731, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomLayoutGridded": [[1733, 1, 1, "", "__init__", "Constructor."], [1734, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1735, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1736, 1, 1, "", "get_fig", "Return plotly figure axis."], [1737, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1738, 1, 1, "", "initialize", "Initialize the object."], [1739, 1, 1, "", "max_values_int", "The maximal values of the int variables."], [1740, 1, 1, "", "min_values_int", "The minimal values of the int variables."], [1741, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrid": [[1743, 1, 1, "", "__init__", "Constructor."], [1744, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1745, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1746, 1, 1, "", "get_fig", "Return plotly figure axis."], [1747, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1748, 1, 1, "", "initialize", "Initialize the object."], [1749, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1750, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1751, 1, 1, "", "var_names_float", "The names of float variables."]], "foxes.opt.problems.layout.geom_layouts.GeomRegGrids": [[1753, 1, 1, "", "__init__", "Constructor."], [1754, 1, 1, "", "apply_individual", "Apply new variables to the problem."], [1755, 1, 1, "", "apply_population", "Apply new variables to the problem, for a whole population."], [1756, 1, 1, "", "get_fig", "Return plotly figure axis."], [1757, 1, 1, "", "initial_values_float", "The initial values of the float variables."], [1758, 1, 1, "", "initial_values_int", "The initial values of the int variables."], [1759, 1, 1, "", "initialize", "Initialize the object."], [1760, 1, 1, "", "max_values_float", "The maximal values of the float variables."], [1761, 1, 1, "", "max_values_int", "The maximal values of the integer variables."], [1762, 1, 1, "", "min_values_float", "The minimal values of the float variables."], [1763, 1, 1, "", "min_values_int", "The minimal values of the integer variables."], [1764, 1, 1, "", "var_names_float", "The names of float variables."], [1765, 1, 1, "", "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1641, 0, 1, "", "Boundary", "Boundary constraint for purely geometrical layouts problems."], [1646, 0, 1, "", "CFixN", "Fixed number of turbines constraint for purely geometrical layouts problems."], [1651, 0, 1, "", "CMaxN", "Maximal number of turbines constraint for purely geometrical layouts problems."], [1656, 0, 1, "", "CMinDensity", "Minimal turbine density constraint for purely geometrical layouts problems."], [1662, 0, 1, "", "CMinN", "Minimal number of turbines constraint for purely geometrical layouts problems."], [1667, 0, 1, "", "Constraint", "Abstract base class for optimization constraints."], [1672, 0, 1, "", "MinDist", "Minimal distance constraint for purely geometrical layouts problems."], [1678, 0, 1, "", "Valid", "Validity constraint for purely geometrical layouts problems."], [1683, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary": [[1642, 1, 1, "", "__init__", "Constructor."], [1643, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1644, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1645, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN": [[1647, 1, 1, "", "__init__", "Constructor."], [1648, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1649, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1650, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN": [[1652, 1, 1, "", "__init__", "Constructor."], [1653, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1654, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1655, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity": [[1657, 1, 1, "", "__init__", "Constructor."], [1658, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1659, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1660, 1, 1, "", "initialize", "Initialize the object."], [1661, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN": [[1663, 1, 1, "", "__init__", "Constructor"], [1664, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1665, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1666, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Constraint": [[1668, 1, 1, "", "__init__", "Constructor"], [1669, 1, 1, "", "check_individual", "Check if the constraints are fullfilled for the given individual."], [1670, 1, 1, "", "check_population", "Check if the constraints are fullfilled for the given population."], [1671, 1, 1, "", "get_bounds", "Returns the bounds for all components."]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist": [[1673, 1, 1, "", "__init__", "Constructor."], [1674, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1675, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1676, 1, 1, "", "initialize", "Initialize the constaint."], [1677, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid": [[1679, 1, 1, "", "__init__", "Constructor."], [1680, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1681, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1682, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1684, 0, 1, "", "MaxDensity", "Maximal turbine density objective for purely geometrical layouts problems."], [1691, 0, 1, "", "MaxGridSpacing", "Maximal grid spacing objective for purely geometrical layouts problems."], [1697, 0, 1, "", "MeMiMaDist", "Mean-min-max distance objective for purely geometrical layouts problems."], [1703, 0, 1, "", "OFixN", "Fixed number of turbines objective for purely geometrical layouts problems."], [1709, 0, 1, "", "OMaxN", "Maximal number of turbines objective for purely geometrical layouts problems."], [1715, 0, 1, "", "OMinN", "Minimal number of turbines objective for purely geometrical layouts problems."], [1718, 0, 1, "", "Objective", "Abstract base class for objective functions."], [1721, 5, 1, "", "cdist", "Compute distance between each pair of the two collections of inputs."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity": [[1685, 1, 1, "", "__init__", "Constructor."], [1686, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1687, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1688, 1, 1, "", "initialize", "Initialize the object."], [1689, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1690, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing": [[1692, 1, 1, "", "__init__", "Constructor."], [1693, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1694, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1695, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1696, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist": [[1698, 1, 1, "", "__init__", "Constructor."], [1699, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1700, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1701, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1702, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN": [[1704, 1, 1, "", "__init__", "Constructor."], [1705, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1706, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1707, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1708, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN": [[1710, 1, 1, "", "__init__", "Constructor."], [1711, 1, 1, "", "calc_individual", "Calculate values for a single individual of the underlying problem."], [1712, 1, 1, "", "calc_population", "Calculate values for all individuals of a population."], [1713, 1, 1, "", "maximize", "Returns flag for maximization of each component."], [1714, 1, 1, "", "n_components", "Returns the number of components of the function."]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN": [[1716, 1, 1, "", "__init__", "Constructor."], [1717, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.opt.problems.layout.geom_layouts.objectives.Objective": [[1719, 1, 1, "", "__init__", "Constructor"], [1720, 1, 1, "", "maximize", "Returns flag for maximization of each component."]], "foxes.output": [[920, 0, 1, "", "Animator", "Creates an animation from generators that yield lists of artists."], [925, 0, 1, "", "FarmLayoutOutput", "Plot the farm layout"], [934, 0, 1, "", "FarmResultsEval", "Evaluates farm results data."], [954, 0, 1, "", "FlowPlots2D", "Class for horizontal or vertical 2D flow plots"], [961, 0, 1, "", "Output", "Base class for foxes output."], [967, 0, 1, "", "PointCalculator", "Computes results at given points"], [970, 0, 1, "", "ResultsWriter", "Writes results farm data to file."], [974, 0, 1, "", "RosePlotOutput", "Class for rose plot creation"], [980, 0, 1, "", "SeqFlowAnimationPlugin", "Plugin for creating data for a 2D flow animation during sequential iterations"], [985, 0, 1, "", "SliceData", "Create data for horizontal or vertical 2D slices"], [993, 0, 1, "", "StateTurbineMap", "Creates heat maps with turbines on the one and states on the other axis."], [996, 0, 1, "", "StatesRosePlotOutput", "Class for rose plot creation directly from states"], [998, 0, 1, "", "TurbineTypeCurves", "Creates power and ct curves for turbine types, optionally including derating/boost."]], "foxes.output.Animator": [[921, 1, 1, "", "__init__", "Constructor."], [922, 1, 1, "", "add_generator", "Add a generator."], [923, 1, 1, "", "animate", "Create the animation"], [924, 2, 1, "", "generators", "The artist generators"]], "foxes.output.FarmLayoutOutput": [[926, 1, 1, "", "__init__", "Constructor."], [927, 1, 1, "", "get_figure", "Creates farm layout figure."], [928, 1, 1, "", "get_layout_data", "Returns wind farm layout."], [929, 1, 1, "", "get_layout_dict", "Returns wind farm layout."], [930, 1, 1, "", "write_csv", "Writes csv layout file."], [931, 1, 1, "", "write_json", "Writes xyh layout file."], [932, 1, 1, "", "write_plot", "Writes the layout plot to file."], [933, 1, 1, "", "write_xyh", "Writes xyh layout file."]], "foxes.output.FarmResultsEval": [[935, 1, 1, "", "__init__", "Constructor."], [936, 1, 1, "", "add_capacity", "Adds capacity to the farm results"], [937, 1, 1, "", "add_efficiency", "Adds efficiency to the farm results"], [938, 1, 1, "", "calc_farm_efficiency", "Calculates farm efficiency"], [939, 1, 1, "", "calc_farm_mean", "Calculates the mean over states and turbines."], [940, 1, 1, "", "calc_farm_sum", "Calculates the sum over states and turbines."], [941, 1, 1, "", "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [942, 1, 1, "", "calc_mean_farm_power", "Calculates the mean total farm power."], [943, 1, 1, "", "calc_states_mean", "Calculates the mean wrt states."], [944, 1, 1, "", "calc_states_std", "Calculates the standard deviation wrt states."], [945, 1, 1, "", "calc_states_sum", "Calculates the sum wrt states."], [946, 1, 1, "", "calc_turbine_mean", "Calculates the mean wrt turbines."], [947, 1, 1, "", "calc_turbine_sum", "Calculates the sum wrt turbines."], [948, 1, 1, "", "calc_turbine_yield", "Calculates the yield per turbine"], [949, 1, 1, "", "gen_stdata", "Generates state-turbine data, intended to be used in animations"], [950, 1, 1, "", "reduce_all", "Reduces states and turbine dimension by some operation"], [951, 1, 1, "", "reduce_states", "Reduces the states dimension by some operation"], [952, 1, 1, "", "reduce_turbines", "Reduces the turbine dimension by some operation"], [953, 1, 1, "", "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FlowPlots2D": [[955, 1, 1, "", "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [956, 1, 1, "", "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [957, 1, 1, "", "gen_states_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [958, 1, 1, "", "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [959, 1, 1, "", "get_mean_fig_xz", "Generates 2D farm flow figure in a horizontal xz-plane."], [960, 1, 1, "", "get_mean_fig_yz", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.Output": [[962, 1, 1, "", "__init__", "Constructor."], [963, 1, 1, "", "get_fpath", "Gets the total file path"], [964, 1, 1, "", "new", "Run-time output model factory."], [965, 1, 1, "", "print_models", "Prints all model names."], [966, 1, 1, "", "write", "Writes data to file via pandas."]], "foxes.output.PointCalculator": [[968, 1, 1, "", "__init__", "Constructor."], [969, 1, 1, "", "calculate", "Calculate point results"]], "foxes.output.ResultsWriter": [[971, 1, 1, "", "__init__", "Constructor."], [972, 1, 1, "", "write_csv", "Writes a csv file"], [973, 1, 1, "", "write_nc", "Writes a netCDF file"]], "foxes.output.RosePlotOutput": [[975, 1, 1, "", "__init__", "Constructor."], [976, 1, 1, "", "get_data", "Get pandas DataFrame with wind rose data."], [977, 1, 1, "", "get_data_info", "Returns default description for a variable."], [978, 1, 1, "", "get_figure", "Creates figure object"], [979, 1, 1, "", "write_figure", "Write rose plot to file"]], "foxes.output.SeqFlowAnimationPlugin": [[981, 1, 1, "", "__init__", "Constructor."], [982, 1, 1, "", "gen_images", ""], [983, 1, 1, "", "initialize", "Initialize data based on the intial iterator"], [984, 1, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SliceData": [[986, 1, 1, "", "__init__", "Constructor."], [987, 1, 1, "", "get_mean_data_xy", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [988, 1, 1, "", "get_mean_data_xz", "Creates mean data of 2D farm flow slices in an xz-plane."], [989, 1, 1, "", "get_mean_data_yz", "Creates mean data of 2D farm flow slices in a yz-plane."], [990, 1, 1, "", "get_states_data_xy", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [991, 1, 1, "", "get_states_data_xz", "Creates states data of 2D farm flow slices in an xz-plane."], [992, 1, 1, "", "get_states_data_yz", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.StateTurbineMap": [[994, 1, 1, "", "__init__", "Constructor."], [995, 1, 1, "", "plot_map", "Plot the heat map for the selected variable."]], "foxes.output.StatesRosePlotOutput": [[997, 1, 1, "", "__init__", "Constructor."]], "foxes.output.TurbineTypeCurves": [[999, 1, 1, "", "__init__", "Constructor."], [1000, 1, 1, "", "plot_curves", "Plot the power or ct curve."]], "foxes.output.flow_plots_2d": [[1001, 5, 1, "", "get_fig", "Helper function that creates the flow image plot."]], "foxes.utils": [[1002, 0, 1, "", "DataBook", "Container class for file paths, either directly given or as static data within a package."], [1010, 0, 1, "", "PandasFileHelper", "This class helps reading and writing data to files via pandas."], [1017, 0, 1, "", "TabWindroseAxes", "A derivate of the wind rose axes that runs on stochastic data (bins with weights) instead of time series data"], [1450, 5, 1, "", "all_subclasses", "Searches all classes derived from some base class."], [1451, 5, 1, "", "cubic_roots", "Calculate real roots of polynomials of degree 3."], [1452, 5, 1, "", "delta_wd", "Calculates wd_b - wd_a."], [1453, 5, 1, "", "exec_python", "Executes strings that start with the indicator as python commands, returns one value"], [1501, 5, 1, "", "import_module", "Imports a module dynamically."], [1806, 5, 1, "", "random_xy_square", "Creates random xy positions within a square, with mean (0, 0)"], [1807, 5, 1, "", "read_shp", "Read a shape file"], [1808, 5, 1, "", "read_shp_polygons", "Reads the polygon points from a shp file."], [1809, 5, 1, "", "read_tab_file", "Reads a tab file into a Dataset"], [1825, 5, 1, "", "shp2csv", "Read shape file, write csv file"], [1826, 5, 1, "", "shp2geom2d", "Read shapefile into geom2d geometry"], [1827, 5, 1, "", "sqrt_reg", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1830, 5, 1, "", "uv2wd", "Calculate wind direction from wind vectors."], [1831, 5, 1, "", "wd2uv", "Calculate wind vectors from wind directions in degrees."], [1832, 5, 1, "", "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [1833, 5, 1, "", "wdvec2wd", "Calculate wind direction from wind direction vectors."], [1834, 5, 1, "", "write_nc", "Writes a dataset to netCFD file"]], "foxes.utils.DataBook": [[1003, 1, 1, "", "__init__", "Constructor."], [1004, 1, 1, "", "add_data_package", "Add static files from a package location."], [1005, 1, 1, "", "add_data_package_file", "Add a static file from a package location."], [1006, 1, 1, "", "add_file", "Add a file path"], [1007, 1, 1, "", "add_files", "Add file paths"], [1008, 1, 1, "", "get_file_path", "Get path of a file"], [1009, 1, 1, "", "toc", "Get list of contents"]], "foxes.utils.PandasFileHelper": [[1011, 4, 1, "", "DATA_FILE_FORMATS", ""], [1012, 4, 1, "", "DEFAULT_FORMAT_DICT", ""], [1013, 4, 1, "", "DEFAULT_READING_PARAMETERS", ""], [1014, 4, 1, "", "DEFAULT_WRITING_PARAMETERS", ""], [1015, 1, 1, "", "read_file", "Helper for reading data according to file ending."], [1016, 1, 1, "", "write_file", "Helper for writing data according to file ending."]], "foxes.utils.TabWindroseAxes": [[1018, 0, 1, "", "ArtistList", "A sublist of Axes children based on their type."], [1025, 0, 1, "", "InvertedPolarTransform", "The inverse of the polar transform, mapping Cartesian coordinate space x and y back to theta and r."], [1060, 0, 1, "", "PolarAffine", "The affine part of the polar projection."], [1081, 0, 1, "", "PolarTransform", "The base polar transform."], [1090, 0, 1, "", "RadialLocator", "Used to locate radius ticks."], [1102, 0, 1, "", "ThetaFormatter", "Used to format the theta tick labels.  Converts the native unit of radians into degrees and adds a degree symbol."], [1112, 0, 1, "", "ThetaLocator", "Used to locate theta ticks."], [1118, 1, 1, "", "__init__", "See Axes base class for args and kwargs documentation"], [1119, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1120, 1, 1, "", "__repr__", "Return repr(self)."], [1121, 1, 1, "", "__str__", "Return str(self)."], [1122, 1, 1, "", "acorr", "Plot the autocorrelation of x."], [1123, 1, 1, "", "add_artist", "Add an .Artist to the Axes; return the artist."], [1124, 1, 1, "", "add_callback", "Add a callback function that will be called whenever one of the .Artist's properties changes."], [1125, 1, 1, "", "add_child_axes", "Add an .AxesBase to the Axes' children; return the child Axes."], [1126, 1, 1, "", "add_collection", "Add a .Collection to the Axes; return the collection."], [1127, 1, 1, "", "add_container", "Add a .Container to the Axes' containers; return the container."], [1128, 1, 1, "", "add_image", "Add an .AxesImage to the Axes; return the image."], [1129, 1, 1, "", "add_line", "Add a .Line2D to the Axes; return the line."], [1130, 1, 1, "", "add_patch", "Add a .Patch to the Axes; return the patch."], [1131, 1, 1, "", "add_table", "Add a .Table to the Axes; return the table."], [1132, 1, 1, "", "angle_spectrum", "Plot the angle spectrum."], [1133, 1, 1, "", "annotate", "Annotate the point xy with text text."], [1134, 1, 1, "", "apply_aspect", "Adjust the Axes for a specified data aspect ratio."], [1135, 1, 1, "", "arrow", "Add an arrow to the Axes."], [1136, 2, 1, "", "artists", ""], [1137, 1, 1, "", "autoscale", "Autoscale the axis view to the data (toggle)."], [1138, 1, 1, "", "autoscale_view", "Autoscale the view limits using the data limits."], [1139, 2, 1, "", "axes", "The ~.axes.Axes instance the artist resides in, or None."], [1140, 1, 1, "", "axhline", "Add a horizontal line across the Axes."], [1141, 1, 1, "", "axhspan", "Add a horizontal span (rectangle) across the Axes."], [1142, 1, 1, "", "axis", "Convenience method to get or set some axis properties."], [1143, 1, 1, "", "axline", "Add an infinitely long straight line."], [1144, 1, 1, "", "axvline", "Add a vertical line across the Axes."], [1145, 1, 1, "", "axvspan", "Add a vertical span (rectangle) across the Axes."], [1146, 1, 1, "", "bar", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1147, 1, 1, "", "bar_label", "Label a bar plot."], [1148, 1, 1, "", "barbs", "Plot a 2D field of barbs."], [1149, 1, 1, "", "barh", "Make a horizontal bar plot."], [1150, 1, 1, "", "box", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1151, 1, 1, "", "boxplot", "Draw a box and whisker plot."], [1152, 1, 1, "", "broken_barh", "Plot a horizontal sequence of rectangles."], [1153, 1, 1, "", "bxp", "Drawing function for box and whisker plots."], [1154, 1, 1, "", "can_pan", "Return whether this Axes supports the pan/zoom button functionality."], [1155, 1, 1, "", "can_zoom", "Return whether this Axes supports the zoom box button functionality."], [1156, 1, 1, "", "cla", "Clear the Axes."], [1157, 1, 1, "", "clabel", "Label a contour plot."], [1158, 1, 1, "", "clear", "Clear the current axes"], [1159, 1, 1, "", "cohere", "Plot the coherence between x and y."], [1160, 2, 1, "", "collections", ""], [1161, 1, 1, "", "contains", "Test whether the artist contains the mouse event."], [1162, 1, 1, "", "contains_point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."], [1163, 1, 1, "", "contour", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1164, 1, 1, "", "contourf", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1165, 1, 1, "", "convert_xunits", "Convert x using the unit type of the xaxis."], [1166, 1, 1, "", "convert_yunits", "Convert y using the unit type of the yaxis."], [1167, 1, 1, "", "csd", "Plot the cross-spectral density."], [1168, 1, 1, "", "drag_pan", "Called when the mouse moves during a pan operation."], [1169, 1, 1, "", "draw", "Draw the Artist (and its children) using the given renderer."], [1170, 1, 1, "", "draw_artist", "Efficiently redraw a single artist."], [1171, 1, 1, "", "end_pan", "Called when a pan operation completes (when the mouse button is up.)"], [1172, 1, 1, "", "errorbar", "Plot y versus x as lines and/or markers with attached errorbars."], [1173, 1, 1, "", "eventplot", "Plot identical parallel lines at the given positions."], [1174, 1, 1, "", "fill", "Plot filled polygons."], [1175, 1, 1, "", "fill_between", "Fill the area between two horizontal curves."], [1176, 1, 1, "", "fill_betweenx", "Fill the area between two vertical curves."], [1177, 1, 1, "", "findobj", "Find artist objects."], [1178, 1, 1, "", "format_coord", "Return a format string formatting the x, y coordinates."], [1179, 1, 1, "", "format_cursor_data", "Return a string representation of data."], [1180, 1, 1, "", "format_xdata", "Return x formatted as an x-value."], [1181, 1, 1, "", "format_ydata", "Return y formatted as a y-value."], [1182, 1, 1, "", "from_ax", "Return a WindroseAxes object for the figure fig."], [1183, 1, 1, "", "get_adjustable", "Return whether the Axes will adjust its physical dimension ('box') or its data limits ('datalim') to achieve the desired aspect ratio."], [1184, 1, 1, "", "get_agg_filter", "Return filter function to be used for agg filter."], [1185, 1, 1, "", "get_alpha", "Return the alpha value used for blending - not supported on all backends."], [1186, 1, 1, "", "get_anchor", "Get the anchor location."], [1187, 1, 1, "", "get_animated", "Return whether the artist is animated."], [1188, 1, 1, "", "get_aspect", "Return the aspect ratio of the axes scaling."], [1189, 1, 1, "", "get_autoscale_on", "Return True if each axis is autoscaled, False otherwise."], [1190, 1, 1, "", "get_autoscalex_on", "Return whether the xaxis is autoscaled."], [1191, 1, 1, "", "get_autoscaley_on", "Return whether the yaxis is autoscaled."], [1192, 1, 1, "", "get_axes_locator", "Return the axes_locator."], [1193, 1, 1, "", "get_axisbelow", "Get whether axis ticks and gridlines are above or below most artists."], [1194, 1, 1, "", "get_box_aspect", "Return the Axes box aspect, i.e. the ratio of height to width."], [1195, 1, 1, "", "get_children", "Return a list of the child .Artists of this .Artist."], [1196, 1, 1, "", "get_clip_box", "Return the clipbox."], [1197, 1, 1, "", "get_clip_on", "Return whether the artist uses clipping."], [1198, 1, 1, "", "get_clip_path", "Return the clip path."], [1199, 1, 1, "", "get_cursor_data", "Return the cursor data for a given event."], [1200, 1, 1, "", "get_data_ratio", "Return the aspect ratio of the data itself.  For a polar plot, this should always be 1.0"], [1201, 1, 1, "", "get_default_bbox_extra_artists", "Return a default list of artists that are used for the bounding box calculation."], [1202, 1, 1, "", "get_facecolor", "Get the facecolor of the Axes."], [1203, 1, 1, "", "get_fc", "Alias for get_facecolor."], [1204, 1, 1, "", "get_figure", "Return the .Figure instance the artist belongs to."], [1205, 1, 1, "", "get_frame_on", "Get whether the Axes rectangle patch is drawn."], [1206, 1, 1, "", "get_gid", "Return the group id."], [1207, 1, 1, "", "get_gridspec", "Return the .GridSpec associated with the subplot, or None."], [1208, 1, 1, "", "get_images", "Return a list of .AxesImages contained by the Axes."], [1209, 1, 1, "", "get_in_layout", "Return boolean flag, True if artist is included in layout calculations."], [1210, 1, 1, "", "get_label", "Return the label used for this artist in the legend."], [1211, 1, 1, "", "get_legend", "Return the .Legend instance, or None if no legend is defined."], [1212, 1, 1, "", "get_legend_handles_labels", "Return handles and labels for legend"], [1213, 1, 1, "", "get_lines", "Return a list of lines contained by the Axes."], [1214, 1, 1, "", "get_mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1215, 1, 1, "", "get_navigate", "Get whether the Axes responds to navigation commands."], [1216, 1, 1, "", "get_navigate_mode", "Get the navigation toolbar button status: 'PAN', 'ZOOM', or None."], [1217, 1, 1, "", "get_path_effects", ""], [1218, 1, 1, "", "get_picker", "Return the picking behavior of the artist."], [1219, 1, 1, "", "get_position", "Return the position of the Axes within the figure as a .Bbox."], [1220, 1, 1, "", "get_rasterization_zorder", "Return the zorder value below which artists will be rasterized."], [1221, 1, 1, "", "get_rasterized", "Return whether the artist is to be rasterized."], [1222, 1, 1, "", "get_renderer_cache", "[Deprecated]"], [1223, 1, 1, "", "get_rlabel_position", "The theta position of the radius labels in degrees."], [1224, 1, 1, "", "get_rmax", "Outer radial limit."], [1225, 1, 1, "", "get_rmin", "The inner radial limit."], [1226, 1, 1, "", "get_rorigin", "float"], [1227, 1, 1, "", "get_rsign", ""], [1228, 1, 1, "", "get_shared_x_axes", "Return an immutable view on the shared x-axes Grouper."], [1229, 1, 1, "", "get_shared_y_axes", "Return an immutable view on the shared y-axes Grouper."], [1230, 1, 1, "", "get_sketch_params", "Return the sketch parameters for the artist."], [1231, 1, 1, "", "get_snap", "Return the snap setting."], [1232, 1, 1, "", "get_subplotspec", "Return the .SubplotSpec associated with the subplot, or None."], [1233, 1, 1, "", "get_theta_direction", "Get the direction in which theta increases."], [1234, 1, 1, "", "get_theta_offset", "Get the offset for the location of 0 in radians."], [1235, 1, 1, "", "get_thetamax", "Return the maximum theta limit in degrees."], [1236, 1, 1, "", "get_thetamin", "Get the minimum theta limit in degrees."], [1237, 1, 1, "", "get_tightbbox", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1238, 1, 1, "", "get_title", "Get an Axes title."], [1239, 1, 1, "", "get_transform", "Return the .Transform instance used by this artist."], [1240, 1, 1, "", "get_transformed_clip_path_and_affine", "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."], [1241, 1, 1, "", "get_url", "Return the url."], [1242, 1, 1, "", "get_visible", "Return the visibility."], [1243, 1, 1, "", "get_window_extent", "Return the Axes bounding box in display space; args and kwargs are empty."], [1244, 1, 1, "", "get_xaxis", "[Discouraged] Return the XAxis instance."], [1245, 1, 1, "", "get_xaxis_text1_transform", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1246, 1, 1, "", "get_xaxis_text2_transform", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1247, 1, 1, "", "get_xaxis_transform", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."], [1248, 1, 1, "", "get_xbound", "Return the lower and upper x-axis bounds, in increasing order."], [1249, 1, 1, "", "get_xgridlines", "Return the xaxis' grid lines as a list of .Line2Ds."], [1250, 1, 1, "", "get_xlabel", "Get the xlabel text string."], [1251, 1, 1, "", "get_xlim", "Return the x-axis view limits."], [1252, 1, 1, "", "get_xmajorticklabels", "Return the xaxis' major tick labels, as a list of ~.text.Text."], [1253, 1, 1, "", "get_xminorticklabels", "Return the xaxis' minor tick labels, as a list of ~.text.Text."], [1254, 1, 1, "", "get_xscale", "Return the xaxis' scale (as a str)."], [1255, 1, 1, "", "get_xticklabels", "Get the xaxis' tick labels."], [1256, 1, 1, "", "get_xticklines", "Return the xaxis' tick lines as a list of .Line2Ds."], [1257, 1, 1, "", "get_xticks", "Return the xaxis' tick locations in data coordinates."], [1258, 1, 1, "", "get_yaxis", "[Discouraged] Return the YAxis instance."], [1259, 1, 1, "", "get_yaxis_text1_transform", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1260, 1, 1, "", "get_yaxis_text2_transform", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1261, 1, 1, "", "get_yaxis_transform", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."], [1262, 1, 1, "", "get_ybound", "Return the lower and upper y-axis bounds, in increasing order."], [1263, 1, 1, "", "get_ygridlines", "Return the yaxis' grid lines as a list of .Line2Ds."], [1264, 1, 1, "", "get_ylabel", "Get the ylabel text string."], [1265, 1, 1, "", "get_ylim", "Return the y-axis view limits."], [1266, 1, 1, "", "get_ymajorticklabels", "Return the yaxis' major tick labels, as a list of ~.text.Text."], [1267, 1, 1, "", "get_yminorticklabels", "Return the yaxis' minor tick labels, as a list of ~.text.Text."], [1268, 1, 1, "", "get_yscale", "Return the yaxis' scale (as a str)."], [1269, 1, 1, "", "get_yticklabels", "Get the yaxis' tick labels."], [1270, 1, 1, "", "get_yticklines", "Return the yaxis' tick lines as a list of .Line2Ds."], [1271, 1, 1, "", "get_yticks", "Return the yaxis' tick locations in data coordinates."], [1272, 1, 1, "", "get_zorder", "Return the artist's zorder."], [1273, 1, 1, "", "grid", "Configure the grid lines."], [1274, 1, 1, "", "has_data", "Return whether any artists have been added to the Axes."], [1275, 1, 1, "", "have_units", "Return whether units are set on any axis."], [1276, 1, 1, "", "hexbin", "Make a 2D hexagonal binning plot of points x, y."], [1277, 1, 1, "", "hist", "Compute and plot a histogram."], [1278, 1, 1, "", "hist2d", "Make a 2D histogram plot."], [1279, 1, 1, "", "hlines", "Plot horizontal lines at each y from xmin to xmax."], [1280, 2, 1, "", "images", ""], [1281, 1, 1, "", "imshow", "Display data as an image, i.e., on a 2D regular raster."], [1282, 1, 1, "", "in_axes", "Return whether the given event (in display coords) is in the Axes."], [1283, 1, 1, "", "indicate_inset", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1284, 1, 1, "", "indicate_inset_zoom", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1285, 1, 1, "", "inset_axes", "Add a child inset Axes to this existing Axes."], [1286, 1, 1, "", "invert_xaxis", "Invert the x-axis."], [1287, 1, 1, "", "invert_yaxis", "Invert the y-axis."], [1288, 1, 1, "", "is_transform_set", "Return whether the Artist has an explicitly set transform."], [1289, 1, 1, "", "label_outer", "Only show \"outer\" labels and tick labels."], [1290, 1, 1, "", "legend", "Sets the legend location and her properties."], [1291, 2, 1, "", "lines", ""], [1292, 1, 1, "", "locator_params", "Control behavior of major tick locators."], [1293, 1, 1, "", "loglog", "Make a plot with log scaling on both the x- and y-axis."], [1294, 1, 1, "", "magnitude_spectrum", "Plot the magnitude spectrum."], [1295, 1, 1, "", "margins", "Set or retrieve autoscaling margins."], [1296, 1, 1, "", "matshow", "Plot the values of a 2D matrix or array as color-coded image."], [1297, 1, 1, "", "minorticks_off", "Remove minor ticks from the Axes."], [1298, 1, 1, "", "minorticks_on", "Display minor ticks on the Axes."], [1299, 2, 1, "", "mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1300, 4, 1, "", "name", ""], [1301, 2, 1, "", "patches", ""], [1302, 1, 1, "", "pchanged", "Call all of the registered callbacks."], [1303, 1, 1, "", "pcolor", "Create a pseudocolor plot with a non-regular rectangular grid."], [1304, 1, 1, "", "pcolorfast", "Create a pseudocolor plot with a non-regular rectangular grid."], [1305, 1, 1, "", "pcolormesh", "Create a pseudocolor plot with a non-regular rectangular grid."], [1306, 1, 1, "", "phase_spectrum", "Plot the phase spectrum."], [1307, 1, 1, "", "pick", "Process a pick event."], [1308, 1, 1, "", "pickable", "Return whether the artist is pickable."], [1309, 1, 1, "", "pie", "Plot a pie chart."], [1310, 1, 1, "", "plot", "Plot y versus x as lines and/or markers."], [1311, 1, 1, "", "plot_date", "[Discouraged] Plot coercing the axis to treat floats as dates."], [1312, 1, 1, "", "properties", "Return a dictionary of all the properties of the artist."], [1313, 1, 1, "", "psd", "Plot the power spectral density."], [1314, 1, 1, "", "quiver", "Plot a 2D field of arrows."], [1315, 1, 1, "", "quiverkey", "Add a key to a quiver plot."], [1316, 1, 1, "", "redraw_in_frame", "Efficiently redraw Axes data, but not axis ticks, labels, etc."], [1317, 1, 1, "", "relim", "Recompute the data limits based on current artists."], [1318, 1, 1, "", "remove", "Remove the artist from the figure if possible."], [1319, 1, 1, "", "remove_callback", "Remove a callback based on its observer id."], [1320, 1, 1, "", "reset_position", "Reset the active position to the original position."], [1321, 1, 1, "", "scatter", "A scatter plot of y vs. x with varying marker size and/or color."], [1322, 1, 1, "", "secondary_xaxis", "Add a second x-axis to this ~.axes.Axes."], [1323, 1, 1, "", "secondary_yaxis", "Add a second y-axis to this ~.axes.Axes."], [1324, 1, 1, "", "semilogx", "Make a plot with log scaling on the x-axis."], [1325, 1, 1, "", "semilogy", "Make a plot with log scaling on the y-axis."], [1326, 1, 1, "", "set", "Set multiple properties at once."], [1327, 1, 1, "", "set_adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1328, 1, 1, "", "set_agg_filter", "Set the agg filter."], [1329, 1, 1, "", "set_alpha", "Set the alpha value used for blending - not supported on all backends."], [1330, 1, 1, "", "set_anchor", "Define the anchor location."], [1331, 1, 1, "", "set_animated", "Set whether the artist is intended to be used in an animation."], [1332, 1, 1, "", "set_aspect", "Set the aspect ratio of the axes scaling, i.e. y/x-scale."], [1333, 1, 1, "", "set_autoscale_on", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."], [1334, 1, 1, "", "set_autoscalex_on", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1335, 1, 1, "", "set_autoscaley_on", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view."], [1336, 1, 1, "", "set_axes_locator", "Set the Axes locator."], [1337, 1, 1, "", "set_axis_off", "Turn the x- and y-axis off."], [1338, 1, 1, "", "set_axis_on", "Turn the x- and y-axis on."], [1339, 1, 1, "", "set_axisbelow", "Set whether axis ticks and gridlines are above or below most artists."], [1340, 1, 1, "", "set_box_aspect", "Set the Axes box aspect, i.e. the ratio of height to width."], [1341, 1, 1, "", "set_clip_box", "Set the artist's clip .Bbox."], [1342, 1, 1, "", "set_clip_on", "Set whether the artist uses clipping."], [1343, 1, 1, "", "set_clip_path", "Set the artist's clip path."], [1344, 1, 1, "", "set_facecolor", "Set the facecolor of the Axes."], [1345, 1, 1, "", "set_fc", "Alias for set_facecolor."], [1346, 1, 1, "", "set_figure", "Set the .Figure instance the artist belongs to."], [1347, 1, 1, "", "set_frame_on", "Set whether the Axes rectangle patch is drawn."], [1348, 1, 1, "", "set_gid", "Set the (group) id for the artist."], [1349, 1, 1, "", "set_in_layout", "Set if artist is to be included in layout calculations, E.g. /tutorials/intermediate/constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."], [1350, 1, 1, "", "set_label", "Set a label that will be displayed in the legend."], [1351, 1, 1, "", "set_legend", ""], [1352, 1, 1, "", "set_mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."], [1353, 1, 1, "", "set_navigate", "Set whether the Axes responds to navigation toolbar commands."], [1354, 1, 1, "", "set_navigate_mode", "Set the navigation toolbar button status."], [1355, 1, 1, "", "set_path_effects", "Set the path effects."], [1356, 1, 1, "", "set_picker", "Define the picking behavior of the artist."], [1357, 1, 1, "", "set_position", "Set the Axes position."], [1358, 1, 1, "", "set_prop_cycle", "Set the property cycle of the Axes."], [1359, 1, 1, "", "set_radii_angle", "Set the radii labels angle"], [1360, 1, 1, "", "set_rasterization_zorder", "Set the zorder threshold for rasterization for vector graphics output."], [1361, 1, 1, "", "set_rasterized", "Force rasterized (bitmap) drawing for vector graphics output."], [1362, 1, 1, "", "set_rgrids", "Set the radial gridlines on a polar plot."], [1363, 1, 1, "", "set_rlabel_position", "Update the theta position of the radius labels."], [1364, 1, 1, "", "set_rlim", "Set the radial axis view limits."], [1365, 1, 1, "", "set_rmax", "Set the outer radial limit."], [1366, 1, 1, "", "set_rmin", "Set the inner radial limit."], [1367, 1, 1, "", "set_rorigin", "Update the radial origin."], [1368, 1, 1, "", "set_rscale", ""], [1369, 1, 1, "", "set_rticks", ""], [1370, 1, 1, "", "set_sketch_params", "Set the sketch parameters."], [1371, 1, 1, "", "set_snap", "Set the snapping behavior."], [1372, 1, 1, "", "set_subplotspec", "Set the .SubplotSpec. associated with the subplot."], [1373, 1, 1, "", "set_theta_direction", "Set the direction in which theta increases."], [1374, 1, 1, "", "set_theta_offset", "Set the offset for the location of 0 in radians."], [1375, 1, 1, "", "set_theta_zero_location", "Set the location of theta's zero."], [1376, 1, 1, "", "set_thetagrids", "Set the theta gridlines in a polar plot."], [1377, 1, 1, "", "set_thetalim", "Set the minimum and maximum theta values."], [1378, 1, 1, "", "set_thetamax", "Set the maximum theta limit in degrees."], [1379, 1, 1, "", "set_thetamin", "Set the minimum theta limit in degrees."], [1380, 1, 1, "", "set_title", "Set a title for the Axes."], [1381, 1, 1, "", "set_transform", "Set the artist transform."], [1382, 1, 1, "", "set_url", "Set the url for the artist."], [1383, 1, 1, "", "set_visible", "Set the artist's visibility."], [1384, 1, 1, "", "set_xbound", "Set the lower and upper numerical bounds of the x-axis."], [1385, 1, 1, "", "set_xlabel", "Set the label for the x-axis."], [1386, 1, 1, "", "set_xlim", "Set the x-axis view limits."], [1387, 1, 1, "", "set_xmargin", "Set padding of X data limits prior to autoscaling."], [1388, 1, 1, "", "set_xscale", "Set the xaxis' scale."], [1389, 1, 1, "", "set_xticklabels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1390, 1, 1, "", "set_xticks", "Set the xaxis' tick locations and optionally labels."], [1391, 1, 1, "", "set_ybound", "Set the lower and upper numerical bounds of the y-axis."], [1392, 1, 1, "", "set_ylabel", "Set the label for the y-axis."], [1393, 1, 1, "", "set_ylim", "Set the y-axis view limits."], [1394, 1, 1, "", "set_ymargin", "Set padding of Y data limits prior to autoscaling."], [1395, 1, 1, "", "set_yscale", "Set the yaxis' scale."], [1396, 1, 1, "", "set_yticklabels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1397, 1, 1, "", "set_yticks", "Set the yaxis' tick locations and optionally labels."], [1398, 1, 1, "", "set_zorder", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."], [1399, 1, 1, "", "sharex", "Share the x-axis with other."], [1400, 1, 1, "", "sharey", "Share the y-axis with other."], [1401, 1, 1, "", "specgram", "Plot a spectrogram."], [1402, 1, 1, "", "spy", "Plot the sparsity pattern of a 2D array."], [1403, 1, 1, "", "stackplot", "Draw a stacked area plot."], [1404, 1, 1, "", "stairs", "A stepwise constant function as a line with bounding edges or a filled plot."], [1405, 2, 1, "", "stale", "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."], [1406, 1, 1, "", "start_pan", "Called when a pan operation has started."], [1407, 1, 1, "", "stem", "Create a stem plot."], [1408, 1, 1, "", "step", "Make a step plot."], [1409, 2, 1, "", "sticky_edges", "x and y sticky edge lists for autoscaling."], [1410, 1, 1, "", "streamplot", "Draw streamlines of a vector flow."], [1411, 1, 1, "", "table", "Add a table to an ~.axes.Axes."], [1412, 2, 1, "", "tables", ""], [1413, 1, 1, "", "text", "Add text to the Axes."], [1414, 2, 1, "", "texts", ""], [1415, 1, 1, "", "tick_params", "Change the appearance of ticks, tick labels, and gridlines."], [1416, 1, 1, "", "ticklabel_format", "Configure the .ScalarFormatter used by default for linear Axes."], [1417, 1, 1, "", "tricontour", "Draw contour lines on an unstructured triangular grid."], [1418, 1, 1, "", "tricontourf", "Draw contour regions on an unstructured triangular grid."], [1419, 1, 1, "", "tripcolor", "Create a pseudocolor plot of an unstructured triangular grid."], [1420, 1, 1, "", "triplot", "Draw an unstructured triangular grid as lines and/or markers."], [1421, 1, 1, "", "twinx", "Create a twin Axes sharing the xaxis."], [1422, 1, 1, "", "twiny", "Create a twin Axes sharing the yaxis."], [1423, 1, 1, "", "update", "Update this artist's properties from the dict props."], [1424, 1, 1, "", "update_datalim", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1425, 1, 1, "", "update_from", "Copy properties from other to self."], [1426, 2, 1, "", "use_sticky_edges", "When autoscaling, whether to obey all Artist.sticky_edges."], [1427, 2, 1, "", "viewLim", ""], [1428, 1, 1, "", "violin", "Drawing function for violin plots."], [1429, 1, 1, "", "violinplot", "Make a violin plot."], [1430, 1, 1, "", "vlines", "Plot vertical lines at each x from ymin to ymax."], [1431, 1, 1, "", "xaxis_date", "Set up axis ticks and labels to treat data along the xaxis as dates."], [1432, 1, 1, "", "xaxis_inverted", "Return whether the xaxis is oriented in the \"inverse\" direction."], [1433, 1, 1, "", "xcorr", "Plot the cross correlation between x and y."], [1434, 1, 1, "", "yaxis_date", "Set up axis ticks and labels to treat data along the yaxis as dates."], [1435, 1, 1, "", "yaxis_inverted", "Return whether the yaxis is oriented in the \"inverse\" direction."], [1436, 4, 1, "", "zorder", ""]], "foxes.utils.TabWindroseAxes.ArtistList": [[1019, 1, 1, "", "__getitem__", ""], [1020, 1, 1, "", "__init__", "The Axes from which this sublist will pull the children Artists."], [1021, 1, 1, "", "__repr__", "Return repr(self)."], [1022, 1, 1, "", "__subclasshook__", "Abstract classes can override this to customize issubclass()."], [1023, 1, 1, "", "count", ""], [1024, 1, 1, "", "index", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform": [[1026, 4, 1, "", "INVALID", ""], [1027, 4, 1, "", "INVALID_AFFINE", ""], [1028, 4, 1, "", "INVALID_NON_AFFINE", ""], [1029, 1, 1, "", "__add__", "Compose two transforms together so that self is followed by other."], [1030, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1031, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1032, 1, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1033, 1, 1, "", "__str__", "Return str(self)."], [1034, 1, 1, "", "__sub__", "Compose self with the inverse of other, cancelling identical terms if any:"], [1035, 1, 1, "", "contains_branch", "Return whether the given transform is a sub-tree of this transform."], [1036, 1, 1, "", "contains_branch_seperately", "Return whether the given branch is a sub-tree of this transform on each separate dimension."], [1037, 2, 1, "", "depth", "Return the number of transforms which have been chained together to form this Transform instance."], [1038, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1039, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1040, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1041, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1042, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1043, 1, 1, "", "invalidate", "Invalidate this TransformNode and triggers an invalidation of its ancestors.  Should be called any time the transform changes."], [1044, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1045, 4, 1, "", "is_affine", ""], [1046, 4, 1, "", "is_bbox", ""], [1047, 4, 1, "", "is_separable", "True if this transform is separable in the x- and y- dimensions."], [1048, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1049, 4, 1, "", "pass_through", "If pass_through is True, all ancestors will always be invalidated, even if 'self' is already invalid."], [1050, 1, 1, "", "set_children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."], [1051, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1052, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1053, 1, 1, "", "transform_angles", "Transform a set of angles anchored at specific locations."], [1054, 1, 1, "", "transform_bbox", "Transform the given bounding box."], [1055, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1056, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1057, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1058, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."], [1059, 1, 1, "", "transform_point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.PolarAffine": [[1061, 1, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1062, 1, 1, "", "__eq__", "Return self==value."], [1063, 1, 1, "", "__init__", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1064, 1, 1, "", "__str__", "Return str(self)."], [1065, 1, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1066, 1, 1, "", "get_affine", "Get the affine part of this transform."], [1067, 1, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1068, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1069, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1070, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1071, 4, 1, "", "is_affine", ""], [1072, 2, 1, "", "is_separable", "bool(x) -> bool"], [1073, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1074, 1, 1, "", "to_values", "Return the values of the matrix as an (a, b, c, d, e, f) tuple."], [1075, 1, 1, "", "transform", "Apply this transformation on the given array of values."], [1076, 1, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1077, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1078, 1, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1079, 1, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1080, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform": [[1082, 1, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1083, 1, 1, "", "__str__", "Return str(self)."], [1084, 4, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1085, 4, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1086, 1, 1, "", "inverted", "Return the corresponding inverse transformation."], [1087, 4, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1088, 1, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1089, 1, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.RadialLocator": [[1091, 4, 1, "", "MAXTICKS", ""], [1092, 1, 1, "", "__call__", "Return the locations of the ticks."], [1093, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1094, 4, 1, "", "axis", ""], [1095, 1, 1, "", "create_dummy_axis", ""], [1096, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1097, 1, 1, "", "raise_if_exceeds", "Log at WARNING level if locs is longer than Locator.MAXTICKS."], [1098, 1, 1, "", "set_axis", ""], [1099, 1, 1, "", "set_params", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."], [1100, 1, 1, "", "tick_values", "Return the values of the located ticks given vmin and vmax."], [1101, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaFormatter": [[1103, 1, 1, "", "__call__", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1104, 1, 1, "", "fix_minus", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."], [1105, 1, 1, "", "format_data", "Return the full string representation of the value with the position unspecified."], [1106, 1, 1, "", "format_data_short", "Return a short string version of the tick value."], [1107, 1, 1, "", "format_ticks", "Return the tick labels for all the ticks at once."], [1108, 1, 1, "", "get_offset", ""], [1109, 4, 1, "", "locs", ""], [1110, 1, 1, "", "set_axis", ""], [1111, 1, 1, "", "set_locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaLocator": [[1113, 1, 1, "", "__call__", "Return the locations of the ticks."], [1114, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1115, 1, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1116, 1, 1, "", "set_axis", ""], [1117, 1, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.abl.neutral": [[1437, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1438, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1439, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.sheared": [[1440, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable": [[1441, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1442, 5, 1, "", "lgz", "Calculates the log factor for wind speed profiles."], [1443, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1444, 5, 1, "", "psi", "The Psi function"], [1445, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable": [[1446, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1447, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1448, 5, 1, "", "psi", "The Psi function"], [1449, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.geom2d": [[1454, 0, 1, "", "AreaGeometry", "Abstract base class for closed 2D geometries."], [1461, 0, 1, "", "AreaIntersection", "The intersection of area geometries."], [1463, 0, 1, "", "AreaUnion", "The union of area geometries."], [1471, 0, 1, "", "Circle", "This class represents the area of a circle."], [1478, 0, 1, "", "ClosedPolygon", "This class represents a closed 2D polygon."], [1485, 0, 1, "", "HalfPlane", "This class represents a half plane in 2d."], [1493, 0, 1, "", "InvertedAreaGeometry", "Base class for inverted geometries."]], "foxes.utils.geom2d.AreaGeometry": [[1455, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1456, 1, 1, "", "inverse", "Get the inverted geometry"], [1457, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1458, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1459, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1460, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaIntersection": [[1462, 1, 1, "", "__new__", "Constructor."]], "foxes.utils.geom2d.AreaUnion": [[1464, 1, 1, "", "__init__", "Constructor."], [1465, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1466, 1, 1, "", "inverse", "Get the inverted geometry"], [1467, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1468, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1469, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1470, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle": [[1472, 1, 1, "", "__init__", "Cobnstructor."], [1473, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1474, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1475, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1476, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1477, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon": [[1479, 1, 1, "", "__init__", "Constructor."], [1480, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1481, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1482, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1483, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1484, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane": [[1486, 1, 1, "", "__init__", "Constructor."], [1487, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1488, 1, 1, "", "inverse", "Get the inverted geometry"], [1489, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1490, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1491, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1492, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry": [[1494, 1, 1, "", "__init__", "Constructor."], [1495, 1, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1496, 1, 1, "", "inverse", "Get the inverted geometry"], [1497, 1, 1, "", "p_max", "Returns maximal (x,y) point."], [1498, 1, 1, "", "p_min", "Returns minimal (x,y) point."], [1499, 1, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1500, 1, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.runners": [[1810, 0, 1, "", "DaskRunner", "Class for function execution via dask"], [1817, 0, 1, "", "DefaultRunner", "Class for default function execution."], [1819, 0, 1, "", "Runner", "Abstract base class for runners."]], "foxes.utils.runners.DaskRunner": [[1811, 1, 1, "", "__init__", "Constructor."], [1812, 1, 1, "", "finalize", "Finallize the runner"], [1813, 1, 1, "", "initialize", "Initialize the runner"], [1814, 1, 1, "", "is_distributed", ""], [1815, 1, 1, "", "print", "Prints if verbosity is not zero"], [1816, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.DefaultRunner": [[1818, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.Runner": [[1820, 1, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1821, 1, 1, "", "finalize", "Finalize the runner"], [1822, 1, 1, "", "initialize", "Initialize the runner"], [1823, 2, 1, "", "initialized", "Initialization flag"], [1824, 1, 1, "", "run", "Runs the given function."]], "foxes.utils.two_circles": [[1828, 5, 1, "", "area", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1829, 5, 1, "", "calc_area", "Calculates the intersection of two circles."]], "foxes.variables": [[1835, 3, 1, "", "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [1836, 3, 1, "", "AMB_CT", "The ambient thrust coefficient"], [1837, 3, 1, "", "AMB_P", "The ambient power, unit depends on user choice"], [1838, 3, 1, "", "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [1839, 3, 1, "", "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [1840, 3, 1, "", "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [1841, 3, 1, "", "AMB_RHO", "The ambient air density in kg/m3"], [1842, 3, 1, "", "AMB_T", "The ambient temperature in Kelvin"], [1843, 3, 1, "", "AMB_TI", "The ambient turbulence intensity"], [1844, 3, 1, "", "AMB_WD", "The ambient wind direction in degrees"], [1845, 3, 1, "", "AMB_WS", "The ambient wind speed in m/s"], [1846, 3, 1, "", "AMB_YAW", "The ambient absolute yaw angle of  a turbine in degrees"], [1847, 3, 1, "", "AMB_YAWM", "The ambient relative yaw angle of  a turbine in degrees"], [1848, 3, 1, "", "AMB_YLD", "Ambient yield in GWh/a"], [1849, 3, 1, "", "CAP", "Capacity, equals P/P_nominal"], [1850, 3, 1, "", "CT", "The thrust coefficient"], [1851, 3, 1, "", "D", "The rotor diameter in m"], [1852, 3, 1, "", "EFF", "Efficiency, equals P/AMB_P"], [1853, 3, 1, "", "H", "The height over ground in m"], [1854, 3, 1, "", "K", "Wake growth parameter"], [1855, 3, 1, "", "KB", "KTI value for zero TI, K = KB + KTI*TI"], [1856, 3, 1, "", "KTI", "Factor between K and TI, K = KB + KTI*TI"], [1857, 3, 1, "", "MAX_P", "The maximal power, for derating/boost"], [1858, 3, 1, "", "MOL", "The Monin-Ubukhof length in m"], [1859, 3, 1, "", "ORDER", "The turbine order"], [1860, 3, 1, "", "P", "The power, unit depends on user choice"], [1861, 3, 1, "", "PA_ALPHA", "The alpha parameter of the PorteAgel wake model"], [1862, 3, 1, "", "PA_BETA", "The beta parameter of the PorteAgel wake model"], [1863, 3, 1, "", "REWS", "Rotor effective wind speed in m/s"], [1864, 3, 1, "", "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [1865, 3, 1, "", "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [1866, 3, 1, "", "RHO", "The air density in kg/m3"], [1867, 3, 1, "", "SHEAR", "The shear exponent"], [1868, 3, 1, "", "T", "The temperature in Kelvin"], [1869, 3, 1, "", "TI", "The turbulence intensity"], [1870, 3, 1, "", "TXYH", "The turbine rotor centre coordinate  vector (x, y, height)"], [1871, 3, 1, "", "WD", "The wind direction in degrees"], [1872, 3, 1, "", "WEIGHT", "The statistical weight of a state"], [1873, 3, 1, "", "WS", "The wind speed in m/s"], [1874, 3, 1, "", "X", "The x coordinate in m"], [1875, 3, 1, "", "Y", "The y coordinate in"], [1876, 3, 1, "", "YAW", "The absolute yaw angle of a turbine in degrees"], [1877, 3, 1, "", "YAWM", "The relative yaw angle of a turbine in degrees"], [1878, 3, 1, "", "YLD", "Yield in GWh/a"], [1879, 3, 1, "", "Z0", "The roughness length in m"], [1880, 3, 1, "", "amb2var", "Mapping from ambient variable to the corresponding waked variable"], [1881, 3, 1, "", "var2amb", "Mapping from variable to the corresponding ambient variable"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:data", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"attribut": [0, 9, 16, 46, 53, 57, 62, 66, 71, 77, 83, 93, 302, 319, 330, 339, 349, 354, 362, 375, 387, 393, 409, 416, 438, 454, 462, 482, 490, 512, 515, 519, 525, 528, 534, 541, 552, 563, 576, 584, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 660, 672, 678, 684, 690, 696, 700, 704, 708, 712, 719, 723, 729, 734, 741, 748, 754, 764, 783, 789, 796, 802, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 925, 934, 961, 967, 970, 980, 985, 993, 998, 1002, 1010, 1463, 1471, 1478, 1485, 1502, 1525, 1550, 1600, 1608, 1619, 1667, 1722, 1732, 1742, 1752, 1775, 1791, 1810], "public": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 525, 528, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 925, 934, 954, 961, 967, 970, 974, 980, 985, 993, 996, 998, 1002, 1010, 1017, 1018, 1025, 1060, 1081, 1090, 1102, 1112, 1454, 1461, 1463, 1471, 1478, 1485, 1493, 1502, 1523, 1525, 1532, 1543, 1550, 1594, 1600, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1810, 1817, 1819], "member": [0, 9, 16, 35, 40, 46, 53, 57, 62, 66, 71, 75, 77, 83, 87, 92, 103, 228, 302, 317, 319, 327, 330, 339, 349, 354, 361, 362, 375, 383, 387, 393, 403, 409, 413, 416, 419, 423, 430, 435, 438, 443, 454, 462, 473, 475, 482, 490, 503, 506, 512, 515, 518, 519, 525, 528, 534, 541, 549, 552, 560, 563, 570, 576, 581, 584, 588, 594, 601, 608, 612, 617, 623, 629, 634, 641, 645, 650, 654, 657, 660, 665, 667, 669, 672, 678, 684, 690, 696, 700, 704, 708, 712, 716, 719, 723, 729, 734, 741, 748, 754, 761, 764, 771, 774, 776, 783, 789, 796, 802, 808, 809, 815, 821, 828, 835, 858, 864, 871, 879, 883, 887, 891, 895, 900, 905, 910, 915, 920, 925, 934, 954, 961, 967, 970, 974, 980, 985, 993, 996, 998, 1002, 1010, 1017, 1018, 1025, 1060, 1081, 1090, 1102, 1112, 1454, 1461, 1463, 1471, 1478, 1485, 1493, 1502, 1523, 1525, 1532, 1543, 1550, 1594, 1600, 1608, 1617, 1619, 1625, 1627, 1641, 1646, 1651, 1656, 1662, 1667, 1672, 1678, 1684, 1691, 1697, 1703, 1709, 1715, 1718, 1722, 1732, 1742, 1752, 1766, 1775, 1791, 1810, 1817, 1819], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 14, 17, 20, 21, 27, 36, 37, 38, 42, 43, 44, 47, 48, 49, 50, 51, 55, 56, 59, 60, 61, 63, 64, 67, 68, 69, 72, 73, 78, 79, 80, 81, 84, 85, 86, 87, 89, 90, 91, 92, 94, 97, 98, 101, 195, 303, 305, 306, 307, 308, 312, 313, 314, 315, 318, 320, 321, 322, 326, 328, 329, 331, 332, 333, 335, 338, 340, 341, 342, 343, 344, 345, 346, 347, 350, 351, 352, 353, 355, 356, 357, 358, 359, 365, 366, 367, 368, 369, 371, 374, 376, 377, 378, 379, 380, 381, 384, 386, 388, 389, 390, 391, 394, 395, 397, 398, 400, 401, 405, 406, 408, 410, 411, 412, 414, 415, 417, 418, 420, 422, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 458, 459, 461, 464, 465, 466, 468, 469, 470, 472, 475, 476, 477, 478, 479, 481, 483, 484, 485, 486, 489, 492, 493, 494, 496, 497, 498, 499, 502, 504, 505, 508, 509, 510, 511, 513, 514, 516, 517, 520, 522, 523, 527, 530, 531, 532, 533, 535, 536, 537, 538, 539, 542, 544, 545, 546, 547, 550, 551, 553, 555, 556, 557, 558, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 585, 586, 587, 590, 591, 595, 598, 602, 605, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 624, 625, 626, 627, 630, 631, 632, 633, 635, 636, 637, 638, 639, 642, 643, 644, 646, 647, 648, 649, 651, 652, 653, 655, 656, 658, 659, 661, 663, 664, 666, 668, 670, 671, 673, 674, 675, 676, 677, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 697, 698, 701, 702, 705, 706, 709, 710, 713, 714, 717, 720, 721, 724, 725, 726, 727, 730, 731, 732, 733, 735, 736, 737, 738, 739, 740, 742, 744, 745, 746, 747, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 762, 763, 765, 766, 767, 768, 769, 772, 773, 775, 776, 777, 778, 779, 780, 781, 784, 785, 786, 787, 790, 791, 792, 793, 794, 797, 798, 799, 800, 803, 804, 805, 806, 810, 812, 813, 814, 816, 818, 819, 820, 822, 824, 825, 826, 829, 831, 832, 833, 850, 851, 853, 854, 855, 859, 861, 862, 863, 865, 867, 868, 869, 872, 874, 875, 876, 877, 880, 881, 882, 884, 885, 886, 888, 889, 890, 892, 893, 894, 896, 897, 898, 899, 901, 902, 903, 904, 906, 907, 908, 909, 911, 912, 913, 914, 916, 917, 918, 919, 921, 922, 923, 926, 927, 930, 931, 932, 933, 935, 936, 937, 939, 940, 941, 942, 943, 945, 946, 947, 948, 949, 950, 951, 952, 953, 955, 956, 957, 958, 959, 960, 962, 963, 964, 966, 968, 969, 971, 972, 973, 975, 976, 977, 978, 979, 981, 983, 984, 986, 987, 988, 989, 990, 991, 992, 994, 995, 997, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1015, 1016, 1018, 1020, 1025, 1031, 1051, 1052, 1053, 1055, 1060, 1063, 1075, 1076, 1077, 1081, 1082, 1088, 1122, 1124, 1132, 1133, 1134, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1157, 1159, 1161, 1163, 1164, 1167, 1168, 1169, 1172, 1173, 1174, 1175, 1176, 1177, 1199, 1219, 1237, 1238, 1247, 1255, 1257, 1261, 1269, 1271, 1273, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1285, 1290, 1292, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1315, 1317, 1321, 1322, 1323, 1324, 1325, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1339, 1340, 1341, 1342, 1343, 1344, 1346, 1347, 1348, 1349, 1350, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1370, 1371, 1375, 1376, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1401, 1402, 1403, 1404, 1406, 1407, 1408, 1410, 1411, 1413, 1415, 1416, 1417, 1418, 1419, 1420, 1423, 1424, 1428, 1429, 1430, 1431, 1433, 1434, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1459, 1460, 1462, 1464, 1465, 1469, 1470, 1472, 1473, 1476, 1477, 1479, 1480, 1483, 1484, 1486, 1487, 1491, 1492, 1494, 1495, 1499, 1500, 1501, 1503, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1517, 1518, 1524, 1526, 1527, 1528, 1529, 1533, 1534, 1535, 1536, 1544, 1545, 1552, 1553, 1554, 1555, 1557, 1558, 1559, 1560, 1561, 1564, 1565, 1567, 1568, 1569, 1572, 1585, 1586, 1587, 1589, 1590, 1591, 1595, 1596, 1597, 1598, 1599, 1601, 1602, 1603, 1604, 1605, 1607, 1609, 1610, 1611, 1612, 1613, 1617, 1618, 1620, 1621, 1622, 1625, 1626, 1628, 1629, 1632, 1637, 1638, 1642, 1643, 1644, 1647, 1648, 1649, 1652, 1653, 1654, 1657, 1658, 1659, 1660, 1663, 1664, 1665, 1668, 1669, 1670, 1673, 1674, 1675, 1676, 1679, 1680, 1681, 1683, 1685, 1686, 1687, 1688, 1692, 1693, 1694, 1698, 1699, 1700, 1704, 1705, 1706, 1710, 1711, 1712, 1716, 1719, 1721, 1723, 1724, 1725, 1726, 1728, 1733, 1734, 1735, 1736, 1738, 1743, 1744, 1745, 1746, 1748, 1753, 1754, 1755, 1756, 1759, 1767, 1769, 1772, 1773, 1776, 1777, 1780, 1785, 1786, 1787, 1788, 1797, 1798, 1800, 1803, 1804, 1806, 1807, 1808, 1809, 1811, 1816, 1818, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834], "return": [2, 3, 4, 6, 11, 12, 13, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 42, 44, 45, 48, 51, 52, 55, 56, 59, 61, 64, 65, 69, 70, 73, 74, 79, 81, 82, 85, 86, 94, 95, 96, 98, 99, 100, 101, 114, 195, 233, 308, 309, 310, 313, 318, 322, 323, 324, 325, 326, 328, 329, 333, 334, 335, 336, 337, 338, 341, 345, 346, 348, 351, 352, 353, 357, 359, 360, 367, 370, 371, 372, 373, 374, 381, 382, 384, 385, 386, 390, 391, 392, 395, 396, 398, 399, 401, 402, 404, 405, 406, 407, 408, 414, 420, 421, 424, 425, 426, 427, 436, 437, 441, 442, 445, 446, 456, 457, 458, 459, 460, 461, 465, 467, 468, 469, 471, 472, 477, 478, 479, 480, 481, 484, 486, 487, 488, 489, 493, 495, 497, 498, 500, 501, 502, 505, 508, 509, 511, 514, 517, 522, 523, 524, 532, 539, 540, 547, 548, 551, 558, 559, 568, 569, 574, 575, 578, 579, 580, 582, 583, 586, 587, 589, 591, 592, 593, 597, 599, 600, 604, 606, 607, 610, 611, 614, 615, 616, 619, 621, 625, 627, 628, 631, 633, 637, 638, 639, 643, 644, 647, 649, 652, 653, 655, 656, 658, 659, 663, 664, 670, 671, 674, 676, 677, 680, 682, 683, 686, 688, 689, 692, 694, 695, 698, 699, 702, 703, 706, 707, 710, 711, 714, 715, 717, 718, 721, 722, 725, 726, 727, 728, 731, 732, 733, 736, 737, 738, 744, 745, 746, 747, 750, 751, 752, 756, 757, 758, 760, 762, 763, 766, 770, 772, 773, 778, 779, 780, 782, 788, 795, 801, 807, 812, 813, 818, 819, 824, 827, 831, 834, 853, 854, 856, 857, 861, 862, 867, 870, 874, 878, 881, 882, 885, 886, 889, 890, 893, 894, 897, 898, 899, 902, 903, 904, 907, 908, 909, 912, 913, 914, 917, 918, 919, 923, 924, 927, 928, 929, 938, 939, 940, 941, 942, 943, 945, 946, 947, 948, 950, 951, 952, 953, 958, 959, 960, 963, 969, 976, 977, 978, 979, 987, 988, 989, 990, 991, 992, 995, 1000, 1008, 1009, 1015, 1017, 1051, 1052, 1053, 1055, 1075, 1076, 1077, 1088, 1122, 1124, 1132, 1133, 1135, 1140, 1141, 1142, 1143, 1144, 1145, 1147, 1148, 1149, 1151, 1152, 1153, 1159, 1161, 1167, 1172, 1173, 1174, 1175, 1176, 1177, 1193, 1219, 1223, 1224, 1225, 1226, 1230, 1237, 1238, 1245, 1246, 1251, 1255, 1257, 1259, 1260, 1265, 1269, 1271, 1276, 1277, 1278, 1279, 1281, 1283, 1284, 1285, 1293, 1294, 1295, 1296, 1303, 1304, 1305, 1306, 1309, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1324, 1325, 1362, 1376, 1380, 1386, 1389, 1393, 1396, 1401, 1402, 1403, 1404, 1407, 1408, 1410, 1411, 1413, 1417, 1418, 1420, 1421, 1422, 1428, 1429, 1430, 1433, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1456, 1457, 1458, 1459, 1460, 1466, 1467, 1468, 1469, 1470, 1474, 1475, 1476, 1477, 1481, 1482, 1483, 1484, 1488, 1489, 1490, 1491, 1492, 1496, 1497, 1498, 1499, 1500, 1501, 1504, 1505, 1506, 1507, 1508, 1510, 1511, 1513, 1514, 1515, 1516, 1519, 1520, 1521, 1522, 1527, 1528, 1530, 1531, 1535, 1536, 1537, 1538, 1539, 1541, 1542, 1546, 1547, 1549, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1592, 1593, 1596, 1597, 1602, 1604, 1605, 1606, 1607, 1610, 1611, 1612, 1614, 1615, 1616, 1621, 1622, 1623, 1624, 1630, 1631, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1648, 1649, 1650, 1653, 1654, 1655, 1658, 1659, 1661, 1664, 1665, 1666, 1670, 1671, 1674, 1675, 1677, 1680, 1681, 1682, 1683, 1686, 1687, 1689, 1690, 1693, 1694, 1695, 1696, 1699, 1700, 1701, 1702, 1705, 1706, 1707, 1708, 1711, 1712, 1713, 1714, 1717, 1720, 1721, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1734, 1735, 1736, 1737, 1739, 1740, 1741, 1744, 1745, 1746, 1747, 1749, 1750, 1751, 1754, 1755, 1756, 1757, 1758, 1760, 1761, 1762, 1763, 1764, 1765, 1767, 1768, 1770, 1771, 1772, 1773, 1774, 1777, 1778, 1779, 1781, 1782, 1783, 1784, 1785, 1786, 1789, 1790, 1798, 1799, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1816, 1818, 1823, 1824, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833], "exampl": [114, 186, 233, 274, 276, 1140, 1143, 1144, 1145, 1153, 1173, 1285, 1292, 1322, 1323, 1358, 1386, 1393, 1409, 1413, 1415, 1683, 1721, 1902], "note": [114, 233, 515, 754, 789, 796, 802, 808, 809, 815, 821, 828, 835, 864, 1037, 1100, 1122, 1134, 1135, 1138, 1149, 1151, 1167, 1168, 1169, 1171, 1173, 1174, 1179, 1199, 1222, 1245, 1246, 1247, 1251, 1259, 1260, 1261, 1265, 1273, 1277, 1278, 1281, 1295, 1296, 1303, 1305, 1309, 1310, 1311, 1313, 1314, 1321, 1327, 1343, 1386, 1388, 1390, 1393, 1395, 1397, 1401, 1406, 1407, 1408, 1417, 1418, 1421, 1422, 1433, 1683, 1721], "see": [114, 233, 1124, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1149, 1151, 1167, 1175, 1176, 1179, 1183, 1186, 1193, 1194, 1199, 1218, 1237, 1243, 1248, 1251, 1262, 1265, 1276, 1277, 1278, 1279, 1281, 1286, 1287, 1294, 1296, 1302, 1303, 1305, 1306, 1307, 1308, 1310, 1311, 1313, 1314, 1319, 1321, 1327, 1330, 1332, 1339, 1340, 1352, 1357, 1358, 1362, 1364, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1401, 1407, 1430], "also": [114, 233, 1124, 1132, 1133, 1134, 1140, 1141, 1142, 1143, 1144, 1145, 1149, 1151, 1167, 1175, 1176, 1179, 1183, 1186, 1193, 1194, 1199, 1218, 1237, 1243, 1248, 1251, 1262, 1265, 1276, 1277, 1278, 1279, 1281, 1286, 1287, 1294, 1296, 1302, 1303, 1305, 1306, 1307, 1308, 1310, 1311, 1313, 1314, 1319, 1321, 1327, 1330, 1332, 1339, 1340, 1352, 1357, 1358, 1362, 1364, 1376, 1384, 1385, 1386, 1391, 1392, 1393, 1401, 1407, 1430], "yield": [949, 955, 956, 957, 1001], "class": 1017, "other": [1122, 1132, 1140, 1141, 1143, 1144, 1145, 1146, 1148, 1149, 1150, 1151, 1152, 1159, 1163, 1164, 1167, 1172, 1174, 1175, 1176, 1276, 1277, 1278, 1279, 1281, 1290, 1292, 1294, 1296, 1303, 1304, 1305, 1306, 1310, 1311, 1313, 1314, 1321, 1322, 1323, 1362, 1376, 1380, 1385, 1392, 1402, 1404, 1411, 1413, 1415, 1417, 1418, 1430, 1433], "refer": [1159, 1167, 1313], "discourag": [1244, 1258, 1311, 1389, 1396], "warn": [1283, 1284, 1285, 1304, 1322, 1323, 1354, 1362, 1376, 1389, 1396], "hint": [1303, 1305], "rais": [1416, 1683, 1721], "api": 1882, "fox": [1883, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1904, 1913], "algorithm": [1883, 1884, 1885, 1886], "downwind": 1884, "model": [1884, 1885, 1886, 1892, 1900, 1906, 1907, 1911], "iter": 1885, "sequenti": [1886, 1916], "constant": 1887, "core": [1888, 1893], "data": [1889, 1908, 1912, 1919, 1920], "input": 1891, "farm_layout": 1891, "state": [1891, 1908], "creat": 1891, "windio": 1891, "farm_control": 1892, "farm_model": 1892, "partial_wak": 1892, "point_model": 1892, "rotor_model": 1892, "turbine_model": 1892, "turbine_typ": 1892, "vertical_profil": 1892, "axial_induct": 1892, "wake_fram": 1892, "wake_model": [1892, 1900], "wake_superposit": 1892, "opt": [1893, 1894, 1895], "problem": [1893, 1894, 1895], "object": [1893, 1895], "constraint": [1893, 1895], "layout": [1894, 1895, 1908, 1910], "geom_layout": [1894, 1895], "output": 1896, "flow_plots_2d": 1896, "util": [1897, 1898], "abl": [1897, 1898], "geom2d": 1897, "runner": 1897, "two_circl": 1897, "neutral": 1898, "stabl": 1898, "unstabl": 1898, "shear": 1898, "variabl": 1899, "wind": [1900, 1907, 1908, 1912, 1915, 1920], "ti": 1900, "induct": [1900, 1906], "citat": 1901, "journal": 1901, "paper": 1901, "version": 1901, "specif": 1901, "doi": 1901, "histori": 1903, "v0": 1903, "1": [1903, 1907, 1918], "0": 1903, "alpha": 1903, "2": [1903, 1906, 1916], "3": 1903, "4": 1903, "5": 1903, "6": 1903, "welcom": 1904, "licens": 1904, "content": 1904, "contribut": 1904, "acknowledg": 1904, "instal": 1905, "requir": 1905, "via": 1905, "pip": 1905, "virtual": 1905, "python": 1905, "environ": 1905, "standard": 1905, "user": 1905, "develop": 1905, "conda": 1905, "prepar": 1905, "blockag": [1906, 1907], "comparison": 1906, "farm": [1907, 1908], "static": 1908, "test_farm_67": 1908, "csv": 1908, "ambient": 1908, "wrf": 1908, "timeseri": [1908, 1919], "4464": 1908, "gz": 1908, "abl_states_6000": 1908, "timeseries_3000": 1908, "timeseries_8000": 1908, "timeseries_100": 1908, "wind_rose_bremen": 1908, "wind_rot": 1908, "nc": 1908, "power": [1908, 1914], "thrust": 1908, "curv": 1908, "dtu": 1908, "10mw": 1908, "d178d3": 1908, "h119": 1908, "iea": 1908, "15mw": 1908, "d240": 1908, "h150": 1908, "iwt": 1908, "7d5mw": 1908, "d164": 1908, "h100": 1908, "nrel": 1908, "5mw": 1908, "d126": 1908, "h90": 1908, "file": 1908, "path": 1908, "heterogen": 1909, "flow": 1909, "optim": 1910, "The": 1911, "book": 1911, "multi": 1912, "height": 1912, "overview": 1913, "how": 1913, "setup": 1913, "mask": 1914, "sector": 1915, "manag": 1915, "dynam": [1916, 1918], "wake": [1916, 1918, 1921], "propag": [1916, 1918], "singl": 1917, "row": 1917, "turbin": 1917, "spatial": 1918, "homogen": 1918, "rose": 1920, "yaw": 1921, "rotor": 1921, "test": 1922}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 58}, "alltitles": {"Attributes": [[0, "attributes"], [9, "attributes"], [16, "attributes"], [46, "attributes"], [53, "attributes"], [57, "attributes"], [62, "attributes"], [66, "attributes"], [71, "attributes"], [77, "attributes"], [83, "attributes"], [93, "attributes"], [302, "attributes"], [319, "attributes"], [330, "attributes"], [339, "attributes"], [349, "attributes"], [354, "attributes"], [362, "attributes"], [375, "attributes"], [387, "attributes"], [393, "attributes"], [409, "attributes"], [416, "attributes"], [438, "attributes"], [454, "attributes"], [462, "attributes"], [482, "attributes"], [490, "attributes"], [512, "attributes"], [515, "attributes"], [519, "attributes"], [525, "attributes"], [528, "attributes"], [534, "attributes"], [541, "attributes"], [552, "attributes"], [563, "attributes"], [576, "attributes"], [584, "attributes"], [594, "attributes"], [601, "attributes"], [608, "attributes"], [612, "attributes"], [617, "attributes"], [623, "attributes"], [629, "attributes"], [634, "attributes"], [641, "attributes"], [645, "attributes"], [650, "attributes"], [660, "attributes"], [672, "attributes"], [678, "attributes"], [684, "attributes"], [690, "attributes"], [696, "attributes"], [700, "attributes"], [704, "attributes"], [708, "attributes"], [712, "attributes"], [719, "attributes"], [723, "attributes"], [729, "attributes"], [734, "attributes"], [741, "attributes"], [748, "attributes"], [754, "attributes"], [764, "attributes"], [783, "attributes"], [789, "attributes"], [796, "attributes"], [802, "attributes"], [809, "attributes"], [815, "attributes"], [821, "attributes"], [828, "attributes"], [835, "attributes"], [858, "attributes"], [864, "attributes"], [871, "attributes"], [879, "attributes"], [883, "attributes"], [887, "attributes"], [891, "attributes"], [895, "attributes"], [900, "attributes"], [905, "attributes"], [910, "attributes"], [915, "attributes"], [920, "attributes"], [925, "attributes"], [934, "attributes"], [961, "attributes"], [967, "attributes"], [970, "attributes"], [980, "attributes"], [985, "attributes"], [993, "attributes"], [998, "attributes"], [1002, "attributes"], [1010, "attributes"], [1463, "attributes"], [1471, "attributes"], [1478, "attributes"], [1485, "attributes"], [1502, "attributes"], [1525, "attributes"], [1550, "attributes"], [1600, "attributes"], [1608, "attributes"], [1619, "attributes"], [1667, "attributes"], [1722, "attributes"], [1732, "attributes"], [1742, "attributes"], [1752, "attributes"], [1775, "attributes"], [1791, "attributes"], [1810, "attributes"]], "Public members": [[0, "public-members"], [9, "public-members"], [16, "public-members"], [35, "public-members"], [40, "public-members"], [46, "public-members"], [53, "public-members"], [57, "public-members"], [62, "public-members"], [66, "public-members"], [71, "public-members"], [75, "public-members"], [77, "public-members"], [83, "public-members"], [87, "public-members"], [92, "public-members"], [103, "public-members"], [228, "public-members"], [302, "public-members"], [317, "public-members"], [319, "public-members"], [327, "public-members"], [330, "public-members"], [339, "public-members"], [349, "public-members"], [354, "public-members"], [361, "public-members"], [362, "public-members"], [375, "public-members"], [383, "public-members"], [387, "public-members"], [393, "public-members"], [403, "public-members"], [409, "public-members"], [413, "public-members"], [416, "public-members"], [419, "public-members"], [423, "public-members"], [430, "public-members"], [435, "public-members"], [438, "public-members"], [443, "public-members"], [454, "public-members"], [462, "public-members"], [473, "public-members"], [475, "public-members"], [482, "public-members"], [490, "public-members"], [503, "public-members"], [506, "public-members"], [512, "public-members"], [515, "public-members"], [518, "public-members"], [519, "public-members"], [525, "public-members"], [528, "public-members"], [534, "public-members"], [541, "public-members"], [549, "public-members"], [552, "public-members"], [560, "public-members"], [563, "public-members"], [570, "public-members"], [576, "public-members"], [581, "public-members"], [584, "public-members"], [588, "public-members"], [594, "public-members"], [601, "public-members"], [608, "public-members"], [612, "public-members"], [617, "public-members"], [623, "public-members"], [629, "public-members"], [634, "public-members"], [641, "public-members"], [645, "public-members"], [650, "public-members"], [654, "public-members"], [657, "public-members"], [660, "public-members"], [665, "public-members"], [667, "public-members"], [669, "public-members"], [672, "public-members"], [678, "public-members"], [684, "public-members"], [690, "public-members"], [696, "public-members"], [700, "public-members"], [704, "public-members"], [708, "public-members"], [712, "public-members"], [716, "public-members"], [719, "public-members"], [723, "public-members"], [729, "public-members"], [734, "public-members"], [741, "public-members"], [748, "public-members"], [754, "public-members"], [761, "public-members"], [764, "public-members"], [771, "public-members"], [774, "public-members"], [776, "public-members"], [783, "public-members"], [789, "public-members"], [796, "public-members"], [802, "public-members"], [808, "public-members"], [809, "public-members"], [815, "public-members"], [821, "public-members"], [828, "public-members"], [835, "public-members"], [858, "public-members"], [864, "public-members"], [871, "public-members"], [879, "public-members"], [883, "public-members"], [887, "public-members"], [891, "public-members"], [895, "public-members"], [900, "public-members"], [905, "public-members"], [910, "public-members"], [915, "public-members"], [920, "public-members"], [925, "public-members"], [934, "public-members"], [954, "public-members"], [961, "public-members"], [967, "public-members"], [970, "public-members"], [974, "public-members"], [980, "public-members"], [985, "public-members"], [993, "public-members"], [996, "public-members"], [998, "public-members"], [1002, "public-members"], [1010, "public-members"], [1017, "public-members"], [1018, "public-members"], [1025, "public-members"], [1060, "public-members"], [1081, "public-members"], [1090, "public-members"], [1102, "public-members"], [1112, "public-members"], [1454, "public-members"], [1461, "public-members"], [1463, "public-members"], [1471, "public-members"], [1478, "public-members"], [1485, "public-members"], [1493, "public-members"], [1502, "public-members"], [1523, "public-members"], [1525, "public-members"], [1532, "public-members"], [1543, "public-members"], [1550, "public-members"], [1594, "public-members"], [1600, "public-members"], [1608, "public-members"], [1617, "public-members"], [1619, "public-members"], [1625, "public-members"], [1627, "public-members"], [1641, "public-members"], [1646, "public-members"], [1651, "public-members"], [1656, "public-members"], [1662, "public-members"], [1667, "public-members"], [1672, "public-members"], [1678, "public-members"], [1684, "public-members"], [1691, "public-members"], [1697, "public-members"], [1703, "public-members"], [1709, "public-members"], [1715, "public-members"], [1718, "public-members"], [1722, "public-members"], [1732, "public-members"], [1742, "public-members"], [1752, "public-members"], [1766, "public-members"], [1775, "public-members"], [1791, "public-members"], [1810, "public-members"], [1817, "public-members"], [1819, "public-members"]], "Parameters": [[1, "parameters"], [2, "parameters"], [3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [17, "parameters"], [20, "parameters"], [21, "parameters"], [27, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [55, "parameters"], [56, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [72, "parameters"], [73, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [97, "parameters"], [98, "parameters"], [101, "parameters"], [195, "parameters"], [303, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [318, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [326, "parameters"], [328, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [335, "parameters"], [338, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [374, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [384, "parameters"], [386, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [394, "parameters"], [395, "parameters"], [397, "parameters"], [398, "parameters"], [400, "parameters"], [401, "parameters"], [405, "parameters"], [406, "parameters"], [408, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [417, "parameters"], [418, "parameters"], [420, "parameters"], [422, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [436, "parameters"], [437, "parameters"], [439, "parameters"], [440, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [455, "parameters"], [456, "parameters"], [458, "parameters"], [459, "parameters"], [461, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [472, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [481, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [489, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [502, "parameters"], [504, "parameters"], [505, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [513, "parameters"], [514, "parameters"], [516, "parameters"], [517, "parameters"], [520, "parameters"], [522, "parameters"], [523, "parameters"], [527, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"], [535, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [542, "parameters"], [544, "parameters"], [545, "parameters"], [546, "parameters"], [547, "parameters"], [550, "parameters"], [551, "parameters"], [553, "parameters"], [555, "parameters"], [556, "parameters"], [557, "parameters"], [558, "parameters"], [561, "parameters"], [562, "parameters"], [564, "parameters"], [565, "parameters"], [566, "parameters"], [567, "parameters"], [568, "parameters"], [571, "parameters"], [572, "parameters"], [573, "parameters"], [574, "parameters"], [575, "parameters"], [577, "parameters"], [578, "parameters"], [579, "parameters"], [580, "parameters"], [582, "parameters"], [583, "parameters"], [585, "parameters"], [586, "parameters"], [587, "parameters"], [590, "parameters"], [591, "parameters"], [595, "parameters"], [598, "parameters"], [602, "parameters"], [605, "parameters"], [609, "parameters"], [610, "parameters"], [611, "parameters"], [613, "parameters"], [614, "parameters"], [615, "parameters"], [616, "parameters"], [618, "parameters"], [619, "parameters"], [620, "parameters"], [621, "parameters"], [624, "parameters"], [625, "parameters"], [626, "parameters"], [627, "parameters"], [630, "parameters"], [631, "parameters"], [632, "parameters"], [633, "parameters"], [635, "parameters"], [636, "parameters"], [637, "parameters"], [638, "parameters"], [639, "parameters"], [642, "parameters"], [643, "parameters"], [644, "parameters"], [646, "parameters"], [647, "parameters"], [648, "parameters"], [649, "parameters"], [651, "parameters"], [652, "parameters"], [653, "parameters"], [655, "parameters"], [656, "parameters"], [658, "parameters"], [659, "parameters"], [661, "parameters"], [663, "parameters"], [664, "parameters"], [666, "parameters"], [668, "parameters"], [670, "parameters"], [671, "parameters"], [673, "parameters"], [674, "parameters"], [675, "parameters"], [676, "parameters"], [677, "parameters"], [679, "parameters"], [680, "parameters"], [681, "parameters"], [682, "parameters"], [683, "parameters"], [685, "parameters"], [686, "parameters"], [687, "parameters"], [688, "parameters"], [689, "parameters"], [691, "parameters"], [692, "parameters"], [693, "parameters"], [694, "parameters"], [695, "parameters"], [697, "parameters"], [698, "parameters"], [701, "parameters"], [702, "parameters"], [705, "parameters"], [706, "parameters"], [709, "parameters"], [710, "parameters"], [713, "parameters"], [714, "parameters"], [717, "parameters"], [720, "parameters"], [721, "parameters"], [724, "parameters"], [725, "parameters"], [726, "parameters"], [727, "parameters"], [730, "parameters"], [731, "parameters"], [732, "parameters"], [733, "parameters"], [735, "parameters"], [736, "parameters"], [737, "parameters"], [738, "parameters"], [739, "parameters"], [740, "parameters"], [742, "parameters"], [744, "parameters"], [745, "parameters"], [746, "parameters"], [747, "parameters"], [749, "parameters"], [750, "parameters"], [751, "parameters"], [752, "parameters"], [753, "parameters"], [755, "parameters"], [756, "parameters"], [757, "parameters"], [758, "parameters"], [759, "parameters"], [762, "parameters"], [763, "parameters"], [765, "parameters"], [766, "parameters"], [767, "parameters"], [768, "parameters"], [769, "parameters"], [772, "parameters"], [773, "parameters"], [775, "parameters"], [776, "parameters"], [777, "parameters"], [778, "parameters"], [779, "parameters"], [780, "parameters"], [781, "parameters"], [784, "parameters"], [785, "parameters"], [786, "parameters"], [787, "parameters"], [790, "parameters"], [791, "parameters"], [792, "parameters"], [793, "parameters"], [794, "parameters"], [797, "parameters"], [798, "parameters"], [799, "parameters"], [800, "parameters"], [803, "parameters"], [804, "parameters"], [805, "parameters"], [806, "parameters"], [810, "parameters"], [812, "parameters"], [813, "parameters"], [814, "parameters"], [816, "parameters"], [818, "parameters"], [819, "parameters"], [820, "parameters"], [822, "parameters"], [824, "parameters"], [825, "parameters"], [826, "parameters"], [829, "parameters"], [831, "parameters"], [832, "parameters"], [833, "parameters"], [850, "parameters"], [851, "parameters"], [853, "parameters"], [854, "parameters"], [855, "parameters"], [859, "parameters"], [861, "parameters"], [862, "parameters"], [863, "parameters"], [865, "parameters"], [867, "parameters"], [868, "parameters"], [869, "parameters"], [872, "parameters"], [874, "parameters"], [875, "parameters"], [876, "parameters"], [877, "parameters"], [880, "parameters"], [881, "parameters"], [882, "parameters"], [884, "parameters"], [885, "parameters"], [886, "parameters"], [888, "parameters"], [889, "parameters"], [890, "parameters"], [892, "parameters"], [893, "parameters"], [894, "parameters"], [896, "parameters"], [897, "parameters"], [898, "parameters"], [899, "parameters"], [901, "parameters"], [902, "parameters"], [903, "parameters"], [904, "parameters"], [906, "parameters"], [907, "parameters"], [908, "parameters"], [909, "parameters"], [911, "parameters"], [912, "parameters"], [913, "parameters"], [914, "parameters"], [916, "parameters"], [917, "parameters"], [918, "parameters"], [919, "parameters"], [921, "parameters"], [922, "parameters"], [923, "parameters"], [926, "parameters"], [927, "parameters"], [930, "parameters"], [931, "parameters"], [932, "parameters"], [933, "parameters"], [935, "parameters"], [936, "parameters"], [937, "parameters"], [939, "parameters"], [940, "parameters"], [941, "parameters"], [942, "parameters"], [943, "parameters"], [945, "parameters"], [946, "parameters"], [947, "parameters"], [948, "parameters"], [949, "parameters"], [950, "parameters"], [951, "parameters"], [952, "parameters"], [953, "parameters"], [955, "parameters"], [956, "parameters"], [957, "parameters"], [958, "parameters"], [959, "parameters"], [960, "parameters"], [962, "parameters"], [963, "parameters"], [964, "parameters"], [966, "parameters"], [968, "parameters"], [969, "parameters"], [971, "parameters"], [972, "parameters"], [973, "parameters"], [975, "parameters"], [976, "parameters"], [977, "parameters"], [978, "parameters"], [979, "parameters"], [981, "parameters"], [983, "parameters"], [984, "parameters"], [986, "parameters"], [987, "parameters"], [988, "parameters"], [989, "parameters"], [990, "parameters"], [991, "parameters"], [992, "parameters"], [994, "parameters"], [995, "parameters"], [997, "parameters"], [999, "parameters"], [1000, "parameters"], [1001, "parameters"], [1002, "parameters"], [1003, "parameters"], [1004, "parameters"], [1005, "parameters"], [1006, "parameters"], [1007, "parameters"], [1008, "parameters"], [1009, "parameters"], [1015, "parameters"], [1016, "parameters"], [1018, "parameters"], [1020, "parameters"], [1025, "parameters"], [1031, "parameters"], [1051, "parameters"], [1052, "parameters"], [1053, "parameters"], [1055, "parameters"], [1060, "parameters"], [1063, "parameters"], [1075, "parameters"], [1076, "parameters"], [1077, "parameters"], [1081, "parameters"], [1082, "parameters"], [1088, "parameters"], [1122, "parameters"], [1124, "parameters"], [1132, "parameters"], [1133, "parameters"], [1134, "parameters"], [1135, "parameters"], [1137, "parameters"], [1138, "parameters"], [1140, "parameters"], [1141, "parameters"], [1142, "parameters"], [1143, "parameters"], [1144, "parameters"], [1145, "parameters"], [1146, "parameters"], [1147, "parameters"], [1148, "parameters"], [1149, "parameters"], [1150, "parameters"], [1151, "parameters"], [1152, "parameters"], [1153, "parameters"], [1157, "parameters"], [1159, "parameters"], [1161, "parameters"], [1163, "parameters"], [1164, "parameters"], [1167, "parameters"], [1168, "parameters"], [1169, "parameters"], [1172, "parameters"], [1173, "parameters"], [1174, "parameters"], [1175, "parameters"], [1176, "parameters"], [1177, "parameters"], [1199, "parameters"], [1219, "parameters"], [1237, "parameters"], [1238, "parameters"], [1247, "parameters"], [1255, "parameters"], [1257, "parameters"], [1261, "parameters"], [1269, "parameters"], [1271, "parameters"], [1273, "parameters"], [1276, "parameters"], [1277, "parameters"], [1278, "parameters"], [1279, "parameters"], [1281, "parameters"], [1283, "parameters"], [1284, "parameters"], [1285, "parameters"], [1290, "parameters"], [1292, "parameters"], [1293, "parameters"], [1294, "parameters"], [1295, "parameters"], [1296, "parameters"], [1303, "parameters"], [1304, "parameters"], [1305, "parameters"], [1306, "parameters"], [1309, "parameters"], [1310, "parameters"], [1311, "parameters"], [1313, "parameters"], [1314, "parameters"], [1315, "parameters"], [1317, "parameters"], [1321, "parameters"], [1322, "parameters"], [1323, "parameters"], [1324, "parameters"], [1325, "parameters"], [1327, "parameters"], [1328, "parameters"], [1329, "parameters"], [1330, "parameters"], [1331, "parameters"], [1332, "parameters"], [1333, "parameters"], [1334, "parameters"], [1335, "parameters"], [1336, "parameters"], [1339, "parameters"], [1340, "parameters"], [1341, "parameters"], [1342, "parameters"], [1343, "parameters"], [1344, "parameters"], [1346, "parameters"], [1347, "parameters"], [1348, "parameters"], [1349, "parameters"], [1350, "parameters"], [1352, "parameters"], [1353, "parameters"], [1355, "parameters"], [1356, "parameters"], [1357, "parameters"], [1358, "parameters"], [1360, "parameters"], [1361, "parameters"], [1362, "parameters"], [1363, "parameters"], [1365, "parameters"], [1366, "parameters"], [1367, "parameters"], [1370, "parameters"], [1371, "parameters"], [1375, "parameters"], [1376, "parameters"], [1380, "parameters"], [1381, "parameters"], [1382, "parameters"], [1383, "parameters"], [1384, "parameters"], [1385, "parameters"], [1386, "parameters"], [1387, "parameters"], [1388, "parameters"], [1389, "parameters"], [1390, "parameters"], [1391, "parameters"], [1392, "parameters"], [1393, "parameters"], [1394, "parameters"], [1395, "parameters"], [1396, "parameters"], [1397, "parameters"], [1398, "parameters"], [1401, "parameters"], [1402, "parameters"], [1403, "parameters"], [1404, "parameters"], [1406, "parameters"], [1407, "parameters"], [1408, "parameters"], [1410, "parameters"], [1411, "parameters"], [1413, "parameters"], [1415, "parameters"], [1416, "parameters"], [1417, "parameters"], [1418, "parameters"], [1419, "parameters"], [1420, "parameters"], [1423, "parameters"], [1424, "parameters"], [1428, "parameters"], [1429, "parameters"], [1430, "parameters"], [1431, "parameters"], [1433, "parameters"], [1434, "parameters"], [1437, "parameters"], [1438, "parameters"], [1439, "parameters"], [1440, "parameters"], [1441, "parameters"], [1442, "parameters"], [1443, "parameters"], [1444, "parameters"], [1445, "parameters"], [1446, "parameters"], [1447, "parameters"], [1448, "parameters"], [1449, "parameters"], [1450, "parameters"], [1451, "parameters"], [1452, "parameters"], [1453, "parameters"], [1455, "parameters"], [1459, "parameters"], [1460, "parameters"], [1462, "parameters"], [1464, "parameters"], [1465, "parameters"], [1469, "parameters"], [1470, "parameters"], [1472, "parameters"], [1473, "parameters"], [1476, "parameters"], [1477, "parameters"], [1479, "parameters"], [1480, "parameters"], [1483, "parameters"], [1484, "parameters"], [1486, "parameters"], [1487, "parameters"], [1491, "parameters"], [1492, "parameters"], [1494, "parameters"], [1495, "parameters"], [1499, "parameters"], [1500, "parameters"], [1501, "parameters"], [1503, "parameters"], [1505, "parameters"], [1506, "parameters"], [1507, "parameters"], [1509, "parameters"], [1510, "parameters"], [1511, "parameters"], [1512, "parameters"], [1517, "parameters"], [1518, "parameters"], [1524, "parameters"], [1526, "parameters"], [1527, "parameters"], [1528, "parameters"], [1529, "parameters"], [1533, "parameters"], [1534, "parameters"], [1535, "parameters"], [1536, "parameters"], [1544, "parameters"], [1545, "parameters"], [1552, "parameters"], [1553, "parameters"], [1554, "parameters"], [1555, "parameters"], [1557, "parameters"], [1558, "parameters"], [1559, "parameters"], [1560, "parameters"], [1561, "parameters"], [1564, "parameters"], [1565, "parameters"], [1567, "parameters"], [1568, "parameters"], [1569, "parameters"], [1572, "parameters"], [1585, "parameters"], [1586, "parameters"], [1587, "parameters"], [1589, "parameters"], [1590, "parameters"], [1591, "parameters"], [1595, "parameters"], [1596, "parameters"], [1597, "parameters"], [1598, "parameters"], [1599, "parameters"], [1601, "parameters"], [1602, "parameters"], [1603, "parameters"], [1604, "parameters"], [1605, "parameters"], [1607, "parameters"], [1609, "parameters"], [1610, "parameters"], [1611, "parameters"], [1612, "parameters"], [1613, "parameters"], [1617, "parameters"], [1618, "parameters"], [1620, "parameters"], [1621, "parameters"], [1622, "parameters"], [1625, "parameters"], [1626, "parameters"], [1628, "parameters"], [1629, "parameters"], [1632, "parameters"], [1637, "parameters"], [1638, "parameters"], [1642, "parameters"], [1643, "parameters"], [1644, "parameters"], [1647, "parameters"], [1648, "parameters"], [1649, "parameters"], [1652, "parameters"], [1653, "parameters"], [1654, "parameters"], [1657, "parameters"], [1658, "parameters"], [1659, "parameters"], [1660, "parameters"], [1663, "parameters"], [1664, "parameters"], [1665, "parameters"], [1668, "parameters"], [1669, "parameters"], [1670, "parameters"], [1673, "parameters"], [1674, "parameters"], [1675, "parameters"], [1676, "parameters"], [1679, "parameters"], [1680, "parameters"], [1681, "parameters"], [1683, "parameters"], [1685, "parameters"], [1686, "parameters"], [1687, "parameters"], [1688, "parameters"], [1692, "parameters"], [1693, "parameters"], [1694, "parameters"], [1698, "parameters"], [1699, "parameters"], [1700, "parameters"], [1704, "parameters"], [1705, "parameters"], [1706, "parameters"], [1710, "parameters"], [1711, "parameters"], [1712, "parameters"], [1716, "parameters"], [1719, "parameters"], [1721, "parameters"], [1723, "parameters"], [1724, "parameters"], [1725, "parameters"], [1726, "parameters"], [1728, "parameters"], [1733, "parameters"], [1734, "parameters"], [1735, "parameters"], [1736, "parameters"], [1738, "parameters"], [1743, "parameters"], [1744, "parameters"], [1745, "parameters"], [1746, "parameters"], [1748, "parameters"], [1753, "parameters"], [1754, "parameters"], [1755, "parameters"], [1756, "parameters"], [1759, "parameters"], [1767, "parameters"], [1769, "parameters"], [1772, "parameters"], [1773, "parameters"], [1776, "parameters"], [1777, "parameters"], [1780, "parameters"], [1785, "parameters"], [1786, "parameters"], [1787, "parameters"], [1788, "parameters"], [1797, "parameters"], [1798, "parameters"], [1800, "parameters"], [1803, "parameters"], [1804, "parameters"], [1806, "parameters"], [1807, "parameters"], [1808, "parameters"], [1809, "parameters"], [1811, "parameters"], [1816, "parameters"], [1818, "parameters"], [1824, "parameters"], [1825, "parameters"], [1826, "parameters"], [1827, "parameters"], [1828, "parameters"], [1829, "parameters"], [1830, "parameters"], [1831, "parameters"], [1832, "parameters"], [1833, "parameters"], [1834, "parameters"]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [15, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [36, "returns"], [38, "returns"], [39, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [56, "returns"], [59, "returns"], [61, "returns"], [64, "returns"], [65, "returns"], [69, "returns"], [70, "returns"], [73, "returns"], [74, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [85, "returns"], [86, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [114, "returns"], [195, "returns"], [233, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [313, "returns"], [318, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [328, "returns"], [329, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [341, "returns"], [345, "returns"], [346, "returns"], [348, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [357, "returns"], [359, "returns"], [360, "returns"], [367, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [381, "returns"], [382, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [395, "returns"], [396, "returns"], [398, "returns"], [399, "returns"], [401, "returns"], [402, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [414, "returns"], [420, "returns"], [421, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [436, "returns"], [437, "returns"], [441, "returns"], [442, "returns"], [445, "returns"], [446, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [465, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [471, "returns"], [472, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [484, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [493, "returns"], [495, "returns"], [497, "returns"], [498, "returns"], [500, "returns"], [501, "returns"], [502, "returns"], [505, "returns"], [508, "returns"], [509, "returns"], [511, "returns"], [514, "returns"], [517, "returns"], [522, "returns"], [523, "returns"], [524, "returns"], [532, "returns"], [539, "returns"], [540, "returns"], [547, "returns"], [548, "returns"], [551, "returns"], [558, "returns"], [559, "returns"], [568, "returns"], [569, "returns"], [574, "returns"], [575, "returns"], [578, "returns"], [579, "returns"], [580, "returns"], [582, "returns"], [583, "returns"], [586, "returns"], [587, "returns"], [589, "returns"], [591, "returns"], [592, "returns"], [593, "returns"], [597, "returns"], [599, "returns"], [600, "returns"], [604, "returns"], [606, "returns"], [607, "returns"], [610, "returns"], [611, "returns"], [614, "returns"], [615, "returns"], [616, "returns"], [619, "returns"], [621, "returns"], [625, "returns"], [627, "returns"], [628, "returns"], [631, "returns"], [633, "returns"], [637, "returns"], [638, "returns"], [639, "returns"], [643, "returns"], [644, "returns"], [647, "returns"], [649, "returns"], [652, "returns"], [653, "returns"], [655, "returns"], [656, "returns"], [658, "returns"], [659, "returns"], [663, "returns"], [664, "returns"], [670, "returns"], [671, "returns"], [674, "returns"], [676, "returns"], [677, "returns"], [680, "returns"], [682, "returns"], [683, "returns"], [686, "returns"], [688, "returns"], [689, "returns"], [692, "returns"], [694, "returns"], [695, "returns"], [698, "returns"], [699, "returns"], [702, "returns"], [703, "returns"], [706, "returns"], [707, "returns"], [710, "returns"], [711, "returns"], [714, "returns"], [715, "returns"], [717, "returns"], [718, "returns"], [721, "returns"], [722, "returns"], [725, "returns"], [726, "returns"], [727, "returns"], [728, "returns"], [731, "returns"], [732, "returns"], [733, "returns"], [736, "returns"], [737, "returns"], [738, "returns"], [744, "returns"], [745, "returns"], [746, "returns"], [747, "returns"], [750, "returns"], [751, "returns"], [752, "returns"], [756, "returns"], [757, "returns"], [758, "returns"], [760, "returns"], [762, "returns"], [763, "returns"], [766, "returns"], [770, "returns"], [772, "returns"], [773, "returns"], [778, "returns"], [779, "returns"], [780, "returns"], [782, "returns"], [788, "returns"], [795, "returns"], [801, "returns"], [807, "returns"], [812, "returns"], [813, "returns"], [818, "returns"], [819, "returns"], [824, "returns"], [827, "returns"], [831, "returns"], [834, "returns"], [853, "returns"], [854, "returns"], [856, "returns"], [857, "returns"], [861, "returns"], [862, "returns"], [867, "returns"], [870, "returns"], [874, "returns"], [878, "returns"], [881, "returns"], [882, "returns"], [885, "returns"], [886, "returns"], [889, "returns"], [890, "returns"], [893, "returns"], [894, "returns"], [897, "returns"], [898, "returns"], [899, "returns"], [902, "returns"], [903, "returns"], [904, "returns"], [907, "returns"], [908, "returns"], [909, "returns"], [912, "returns"], [913, "returns"], [914, "returns"], [917, "returns"], [918, "returns"], [919, "returns"], [923, "returns"], [924, "returns"], [927, "returns"], [928, "returns"], [929, "returns"], [938, "returns"], [939, "returns"], [940, "returns"], [941, "returns"], [942, "returns"], [943, "returns"], [945, "returns"], [946, "returns"], [947, "returns"], [948, "returns"], [950, "returns"], [951, "returns"], [952, "returns"], [953, "returns"], [958, "returns"], [959, "returns"], [960, "returns"], [963, "returns"], [969, "returns"], [976, "returns"], [977, "returns"], [978, "returns"], [979, "returns"], [987, "returns"], [988, "returns"], [989, "returns"], [990, "returns"], [991, "returns"], [992, "returns"], [995, "returns"], [1000, "returns"], [1008, "returns"], [1009, "returns"], [1015, "returns"], [1017, "returns"], [1017, "id1"], [1017, "id2"], [1017, "id3"], [1017, "id4"], [1017, "id5"], [1017, "id6"], [1017, "id7"], [1051, "returns"], [1052, "returns"], [1053, "returns"], [1055, "returns"], [1075, "returns"], [1076, "returns"], [1077, "returns"], [1088, "returns"], [1122, "returns"], [1124, "returns"], [1132, "returns"], [1133, "returns"], [1135, "returns"], [1140, "returns"], [1141, "returns"], [1142, "returns"], [1143, "returns"], [1144, "returns"], [1145, "returns"], [1147, "returns"], [1148, "returns"], [1149, "returns"], [1151, "returns"], [1152, "returns"], [1153, "returns"], [1159, "returns"], [1161, "returns"], [1167, "returns"], [1172, "returns"], [1173, "returns"], [1174, "returns"], [1175, "returns"], [1176, "returns"], [1177, "returns"], [1193, "returns"], [1219, "returns"], [1223, "returns"], [1224, "returns"], [1225, "returns"], [1226, "returns"], [1230, "returns"], [1237, "returns"], [1238, "returns"], [1245, "returns"], [1246, "returns"], [1251, "returns"], [1255, "returns"], [1257, "returns"], [1259, "returns"], [1260, "returns"], [1265, "returns"], [1269, "returns"], [1271, "returns"], [1276, "returns"], [1277, "returns"], [1278, "returns"], [1279, "returns"], [1281, "returns"], [1283, "returns"], [1284, "returns"], [1285, "returns"], [1293, "returns"], [1294, "returns"], [1295, "returns"], [1296, "returns"], [1303, "returns"], [1304, "returns"], [1305, "returns"], [1306, "returns"], [1309, "returns"], [1310, "returns"], [1311, "returns"], [1313, "returns"], [1314, "returns"], [1321, "returns"], [1322, "returns"], [1323, "returns"], [1324, "returns"], [1325, "returns"], [1362, "returns"], [1376, "returns"], [1380, "returns"], [1386, "returns"], [1389, "returns"], [1393, "returns"], [1396, "returns"], [1401, "returns"], [1402, "returns"], [1403, "returns"], [1404, "returns"], [1407, "returns"], [1408, "returns"], [1410, "returns"], [1411, "returns"], [1413, "returns"], [1417, "returns"], [1418, "returns"], [1420, "returns"], [1421, "returns"], [1422, "returns"], [1428, "returns"], [1429, "returns"], [1430, "returns"], [1433, "returns"], [1437, "returns"], [1438, "returns"], [1439, "returns"], [1440, "returns"], [1441, "returns"], [1442, "returns"], [1443, "returns"], [1444, "returns"], [1445, "returns"], [1446, "returns"], [1447, "returns"], [1448, "returns"], [1449, "returns"], [1450, "returns"], [1451, "returns"], [1452, "returns"], [1453, "returns"], [1456, "returns"], [1457, "returns"], [1458, "returns"], [1459, "returns"], [1460, "returns"], [1466, "returns"], [1467, "returns"], [1468, "returns"], [1469, "returns"], [1470, "returns"], [1474, "returns"], [1475, "returns"], [1476, "returns"], [1477, "returns"], [1481, "returns"], [1482, "returns"], [1483, "returns"], [1484, "returns"], [1488, "returns"], [1489, "returns"], [1490, "returns"], [1491, "returns"], [1492, "returns"], [1496, "returns"], [1497, "returns"], [1498, "returns"], [1499, "returns"], [1500, "returns"], [1501, "returns"], [1504, "returns"], [1505, "returns"], [1506, "returns"], [1507, "returns"], [1508, "returns"], [1510, "returns"], [1511, "returns"], [1513, "returns"], [1514, "returns"], [1515, "returns"], [1516, "returns"], [1519, "returns"], [1520, "returns"], [1521, "returns"], [1522, "returns"], [1527, "returns"], [1528, "returns"], [1530, "returns"], [1531, "returns"], [1535, "returns"], [1536, "returns"], [1537, "returns"], [1538, "returns"], [1539, "returns"], [1541, "returns"], [1542, "returns"], [1546, "returns"], [1547, "returns"], [1549, "returns"], [1556, "returns"], [1557, "returns"], [1558, "returns"], [1559, "returns"], [1560, "returns"], [1561, "returns"], [1562, "returns"], [1563, "returns"], [1564, "returns"], [1565, "returns"], [1566, "returns"], [1567, "returns"], [1568, "returns"], [1569, "returns"], [1570, "returns"], [1571, "returns"], [1573, "returns"], [1574, "returns"], [1575, "returns"], [1576, "returns"], [1577, "returns"], [1578, "returns"], [1579, "returns"], [1580, "returns"], [1581, "returns"], [1582, "returns"], [1583, "returns"], [1584, "returns"], [1585, "returns"], [1586, "returns"], [1587, "returns"], [1588, "returns"], [1589, "returns"], [1592, "returns"], [1593, "returns"], [1596, "returns"], [1597, "returns"], [1602, "returns"], [1604, "returns"], [1605, "returns"], [1606, "returns"], [1607, "returns"], [1610, "returns"], [1611, "returns"], [1612, "returns"], [1614, "returns"], [1615, "returns"], [1616, "returns"], [1621, "returns"], [1622, "returns"], [1623, "returns"], [1624, "returns"], [1630, "returns"], [1631, "returns"], [1633, "returns"], [1634, "returns"], [1635, "returns"], [1636, "returns"], [1637, "returns"], [1638, "returns"], [1639, "returns"], [1640, "returns"], [1643, "returns"], [1644, "returns"], [1645, "returns"], [1648, "returns"], [1649, "returns"], [1650, "returns"], [1653, "returns"], [1654, "returns"], [1655, "returns"], [1658, "returns"], [1659, "returns"], [1661, "returns"], [1664, "returns"], [1665, "returns"], [1666, "returns"], [1670, "returns"], [1671, "returns"], [1674, "returns"], [1675, "returns"], [1677, "returns"], [1680, "returns"], [1681, "returns"], [1682, "returns"], [1683, "returns"], [1686, "returns"], [1687, "returns"], [1689, "returns"], [1690, "returns"], [1693, "returns"], [1694, "returns"], [1695, "returns"], [1696, "returns"], [1699, "returns"], [1700, "returns"], [1701, "returns"], [1702, "returns"], [1705, "returns"], [1706, "returns"], [1707, "returns"], [1708, "returns"], [1711, "returns"], [1712, "returns"], [1713, "returns"], [1714, "returns"], [1717, "returns"], [1720, "returns"], [1721, "returns"], [1724, "returns"], [1725, "returns"], [1726, "returns"], [1727, "returns"], [1729, "returns"], [1730, "returns"], [1731, "returns"], [1734, "returns"], [1735, "returns"], [1736, "returns"], [1737, "returns"], [1739, "returns"], [1740, "returns"], [1741, "returns"], [1744, "returns"], [1745, "returns"], [1746, "returns"], [1747, "returns"], [1749, "returns"], [1750, "returns"], [1751, "returns"], [1754, "returns"], [1755, "returns"], [1756, "returns"], [1757, "returns"], [1758, "returns"], [1760, "returns"], [1761, "returns"], [1762, "returns"], [1763, "returns"], [1764, "returns"], [1765, "returns"], [1767, "returns"], [1768, "returns"], [1770, "returns"], [1771, "returns"], [1772, "returns"], [1773, "returns"], [1774, "returns"], [1777, "returns"], [1778, "returns"], [1779, "returns"], [1781, "returns"], [1782, "returns"], [1783, "returns"], [1784, "returns"], [1785, "returns"], [1786, "returns"], [1789, "returns"], [1790, "returns"], [1798, "returns"], [1799, "returns"], [1801, "returns"], [1802, "returns"], [1803, "returns"], [1804, "returns"], [1805, "returns"], [1806, "returns"], [1807, "returns"], [1808, "returns"], [1809, "returns"], [1816, "returns"], [1818, "returns"], [1823, "returns"], [1824, "returns"], [1826, "returns"], [1827, "returns"], [1828, "returns"], [1829, "returns"], [1830, "returns"], [1831, "returns"], [1832, "returns"], [1833, "returns"]], "Examples": [[114, "examples"], [186, "examples"], [233, "examples"], [274, "examples"], [276, "examples"], [1140, "examples"], [1143, "examples"], [1144, "examples"], [1145, "examples"], [1153, "examples"], [1173, "examples"], [1285, "examples"], [1292, "examples"], [1322, "examples"], [1323, "examples"], [1358, "examples"], [1386, "examples"], [1393, "examples"], [1409, "examples"], [1413, "examples"], [1415, "examples"], [1683, "examples"], [1721, "examples"], [1902, "examples"]], "Notes": [[114, "notes"], [233, "notes"], [515, "notes"], [754, "notes"], [789, "notes"], [796, "notes"], [802, "notes"], [808, "notes"], [809, "notes"], [815, "notes"], [821, "notes"], [828, "notes"], [835, "notes"], [864, "notes"], [1122, "notes"], [1134, "notes"], [1135, "notes"], [1138, "notes"], [1149, "notes"], [1167, "notes"], [1168, "notes"], [1169, "notes"], [1171, "notes"], [1173, "notes"], [1174, "notes"], [1222, "notes"], [1245, "notes"], [1246, "notes"], [1251, "notes"], [1259, "notes"], [1260, "notes"], [1265, "notes"], [1273, "notes"], [1277, "notes"], [1278, "notes"], [1281, "notes"], [1295, "notes"], [1296, "notes"], [1303, "notes"], [1305, "notes"], [1309, "notes"], [1310, "notes"], [1311, "notes"], [1313, "notes"], [1314, "notes"], [1321, "notes"], [1327, "notes"], [1343, "notes"], [1386, "notes"], [1388, "notes"], [1390, "notes"], [1393, "notes"], [1395, "notes"], [1397, "notes"], [1401, "notes"], [1406, "notes"], [1407, "notes"], [1418, "notes"], [1421, "notes"], [1422, "notes"], [1433, "notes"], [1683, "notes"], [1721, "notes"]], "See Also": [[114, "see-also"], [233, "see-also"], [1124, "see-also"], [1132, "see-also"], [1133, "see-also"], [1134, "see-also"], [1140, "see-also"], [1141, "see-also"], [1142, "see-also"], [1143, "see-also"], [1144, "see-also"], [1145, "see-also"], [1149, "see-also"], [1151, "see-also"], [1167, "see-also"], [1175, "see-also"], [1176, "see-also"], [1179, "see-also"], [1183, "see-also"], [1186, "see-also"], [1193, "see-also"], [1194, "see-also"], [1199, "see-also"], [1218, "see-also"], [1237, "see-also"], [1243, "see-also"], [1248, "see-also"], [1251, "see-also"], [1262, "see-also"], [1265, "see-also"], [1276, "see-also"], [1277, "see-also"], [1278, "see-also"], [1279, "see-also"], [1281, "see-also"], [1286, "see-also"], [1287, "see-also"], [1294, "see-also"], [1296, "see-also"], [1302, "see-also"], [1303, "see-also"], [1305, "see-also"], [1306, "see-also"], [1307, "see-also"], [1308, "see-also"], [1310, "see-also"], [1311, "see-also"], [1313, "see-also"], [1314, "see-also"], [1319, "see-also"], [1321, "see-also"], [1327, "see-also"], [1330, "see-also"], [1332, "see-also"], [1339, "see-also"], [1340, "see-also"], [1352, "see-also"], [1357, "see-also"], [1358, "see-also"], [1362, "see-also"], [1364, "see-also"], [1376, "see-also"], [1384, "see-also"], [1385, "see-also"], [1386, "see-also"], [1391, "see-also"], [1392, "see-also"], [1393, "see-also"], [1401, "see-also"], [1430, "see-also"]], "Yields": [[949, "yields"], [955, "yields"], [956, "yields"], [957, "yields"], [1001, "yields"]], "Classes": [[1017, "classes"]], "Note": [[1037, null], [1100, null], [1151, null], [1179, null], [1199, null], [1247, null], [1261, null], [1310, null], [1408, null], [1417, null], [1417, null], [1418, null], [1418, null]], "Other Parameters": [[1122, "other-parameters"], [1132, "other-parameters"], [1140, "other-parameters"], [1141, "other-parameters"], [1143, "other-parameters"], [1144, "other-parameters"], [1145, "other-parameters"], [1146, "other-parameters"], [1148, "other-parameters"], [1149, "other-parameters"], [1150, "other-parameters"], [1151, "other-parameters"], [1152, "other-parameters"], [1159, "other-parameters"], [1163, "other-parameters"], [1164, "other-parameters"], [1167, "other-parameters"], [1172, "other-parameters"], [1174, "other-parameters"], [1175, "other-parameters"], [1176, "other-parameters"], [1276, "other-parameters"], [1277, "other-parameters"], [1278, "other-parameters"], [1279, "other-parameters"], [1281, "other-parameters"], [1290, "other-parameters"], [1292, "other-parameters"], [1294, "other-parameters"], [1296, "other-parameters"], [1303, "other-parameters"], [1304, "other-parameters"], [1305, "other-parameters"], [1306, "other-parameters"], [1310, "other-parameters"], [1311, "other-parameters"], [1313, "other-parameters"], [1314, "other-parameters"], [1321, "other-parameters"], [1322, "other-parameters"], [1323, "other-parameters"], [1362, "other-parameters"], [1376, "other-parameters"], [1380, "other-parameters"], [1385, "other-parameters"], [1392, "other-parameters"], [1402, "other-parameters"], [1404, "other-parameters"], [1411, "other-parameters"], [1413, "other-parameters"], [1415, "other-parameters"], [1417, "other-parameters"], [1418, "other-parameters"], [1430, "other-parameters"], [1433, "other-parameters"]], "References": [[1159, "references"], [1167, "references"], [1313, "references"]], "Discouraged": [[1244, null], [1258, null], [1311, null], [1389, null], [1396, null]], "Warnings": [[1283, "warnings"], [1284, "warnings"], [1285, "warnings"], [1322, "warnings"], [1323, "warnings"]], "Hint": [[1303, null], [1305, null]], "Warning": [[1304, null], [1354, null], [1362, null], [1376, null], [1389, null], [1396, null]], "See also": [[1407, null]], "Raises": [[1416, "raises"], [1683, "raises"], [1721, "raises"]], "API": [[1882, "api"]], "foxes.algorithms": [[1883, "foxes-algorithms"]], "Downwind algorithm": [[1884, "downwind-algorithm"]], "Downwind algorithm models": [[1884, "downwind-algorithm-models"]], "Iterative algorithm": [[1885, "iterative-algorithm"]], "Iterative algorithm models": [[1885, "iterative-algorithm-models"]], "Sequential algorithm": [[1886, "sequential-algorithm"]], "Sequential algorithm models": [[1886, "sequential-algorithm-models"]], "foxes.constants": [[1887, "foxes-constants"]], "foxes.core": [[1888, "foxes-core"]], "foxes.data": [[1889, "foxes-data"]], "foxes": [[1890, "foxes"]], "foxes.input": [[1891, "foxes-input"]], "foxes.input.farm_layout": [[1891, "foxes-input-farm-layout"]], "foxes.input.states": [[1891, "foxes-input-states"]], "foxes.input.states.create": [[1891, "foxes-input-states-create"]], "foxes.input.windio": [[1891, "foxes-input-windio"]], "foxes.models": [[1892, "foxes-models"]], "foxes.models.farm_controllers": [[1892, "foxes-models-farm-controllers"]], "foxes.models.farm_models": [[1892, "foxes-models-farm-models"]], "foxes.models.partial_wakes": [[1892, "foxes-models-partial-wakes"]], "foxes.models.point_models": [[1892, "foxes-models-point-models"]], "foxes.models.rotor_models": [[1892, "foxes-models-rotor-models"]], "foxes.models.turbine_models": [[1892, "foxes-models-turbine-models"]], "foxes.models.turbine_types": [[1892, "foxes-models-turbine-types"]], "foxes.models.vertical_profiles": [[1892, "foxes-models-vertical-profiles"]], "foxes.models.axial_induction": [[1892, "foxes-models-axial-induction"]], "foxes.models.wake_frames": [[1892, "foxes-models-wake-frames"]], "foxes.models.wake_models": [[1892, "foxes-models-wake-models"], [1900, "foxes-models-wake-models"]], "foxes.models.wake_superpositions": [[1892, "foxes-models-wake-superpositions"]], "foxes.opt": [[1893, "foxes-opt"]], "foxes.opt.core": [[1893, "foxes-opt-core"]], "foxes.opt.problems": [[1893, "foxes-opt-problems"], [1894, "foxes-opt-problems"]], "foxes.opt.objectives": [[1893, "foxes-opt-objectives"]], "foxes.opt.constraints": [[1893, "foxes-opt-constraints"]], "foxes.opt.problems.layout": [[1894, "foxes-opt-problems-layout"]], "foxes.opt.problems.layout.geom_layouts": [[1894, "foxes-opt-problems-layout-geom-layouts"], [1895, "foxes-opt-problems-layout-geom-layouts"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[1895, "foxes-opt-problems-layout-geom-layouts-objectives"]], "foxes.opt.problems.layout.geom_layouts.constraints": [[1895, "foxes-opt-problems-layout-geom-layouts-constraints"]], "foxes.output": [[1896, "foxes-output"]], "foxes.output.flow_plots_2d": [[1896, "foxes-output-flow-plots-2d"]], "foxes.utils": [[1897, "foxes-utils"]], "foxes.utils.abl": [[1897, "foxes-utils-abl"]], "foxes.utils.geom2d": [[1897, "foxes-utils-geom2d"]], "foxes.utils.runners": [[1897, "foxes-utils-runners"]], "foxes.utils.two_circles": [[1897, "foxes-utils-two-circles"]], "foxes.utils.abl.neutral": [[1898, "foxes-utils-abl-neutral"]], "foxes.utils.abl.stable": [[1898, "foxes-utils-abl-stable"]], "foxes.utils.abl.unstable": [[1898, "foxes-utils-abl-unstable"]], "foxes.utils.abl.sheared": [[1898, "foxes-utils-abl-sheared"]], "foxes.variables": [[1899, "foxes-variables"]], "foxes.models.wake_models.wind": [[1900, "foxes-models-wake-models-wind"]], "foxes.models.wake_models.ti": [[1900, "foxes-models-wake-models-ti"]], "foxes.models.wake_models.induction": [[1900, "foxes-models-wake-models-induction"]], "Citation": [[1901, "citation"]], "Journal paper": [[1901, "journal-paper"]], "Version specific DOI": [[1901, "version-specific-doi"]], "History": [[1903, "history"]], "v0.1.0-alpha": [[1903, "v0-1-0-alpha"]], "v0.1.1-alpha": [[1903, "v0-1-1-alpha"]], "v0.1.2-alpha": [[1903, "v0-1-2-alpha"]], "v0.1.3-alpha": [[1903, "v0-1-3-alpha"]], "v0.1.4-alpha": [[1903, "v0-1-4-alpha"]], "v0.2.0-alpha": [[1903, "v0-2-0-alpha"]], "v0.2.1-alpha": [[1903, "v0-2-1-alpha"]], "v0.2.2-alpha": [[1903, "v0-2-2-alpha"]], "v0.2.3-alpha": [[1903, "v0-2-3-alpha"]], "v0.2.4-alpha": [[1903, "v0-2-4-alpha"]], "v0.2.5-alpha": [[1903, "v0-2-5-alpha"]], "v0.2.6-alpha": [[1903, "v0-2-6-alpha"]], "v0.3.0-alpha": [[1903, "v0-3-0-alpha"]], "v0.3.1-alpha": [[1903, "v0-3-1-alpha"]], "v0.3.2-alpha": [[1903, "v0-3-2-alpha"]], "v0.3.3-alpha": [[1903, "v0-3-3-alpha"]], "v0.3.4-alpha": [[1903, "v0-3-4-alpha"]], "v0.3.5-alpha": [[1903, "v0-3-5-alpha"]], "v0.4.0": [[1903, "v0-4-0"]], "v0.4.1": [[1903, "v0-4-1"]], "v0.4.2": [[1903, "v0-4-2"]], "v0.4.3": [[1903, "v0-4-3"]], "v0.4.4": [[1903, "v0-4-4"]], "v0.4.5": [[1903, "v0-4-5"]], "v0.5": [[1903, "v0-5"]], "v0.5.1": [[1903, "v0-5-1"]], "v0.5.2": [[1903, "v0-5-2"]], "v0.5.2.1": [[1903, "v0-5-2-1"]], "v0.6": [[1903, "v0-6"]], "v0.6.1": [[1903, "v0-6-1"]], "v0.6.2": [[1903, "v0-6-2"]], "Welcome to FOXES": [[1904, "welcome-to-foxes"]], "License": [[1904, "license"]], "Contents": [[1904, "contents"]], "Contributing": [[1904, "contributing"]], "Acknowledgements": [[1904, "acknowledgements"]], "Installation": [[1905, "installation"]], "Requirements": [[1905, "requirements"]], "Installation via pip": [[1905, "installation-via-pip"]], "Virtual Python environment": [[1905, "virtual-python-environment"], [1905, "id1"]], "Standard users": [[1905, "standard-users"], [1905, "id2"]], "Developers": [[1905, "developers"], [1905, "id3"]], "Installation via conda": [[1905, "installation-via-conda"]], "Preparation": [[1905, "preparation"]], "Blockage modelling 2": [[1906, "Blockage-modelling-2"]], "Induction model comparison": [[1906, "Induction-model-comparison"]], "Blockage modelling 1": [[1907, "Blockage-modelling-1"]], "Wind farm blockage": [[1907, "Wind-farm-blockage"]], "Static data": [[1908, "Static-data"]], "Wind farm layout data": [[1908, "Wind-farm-layout-data"]], "test_farm_67.csv": [[1908, "test_farm_67.csv"]], "Ambient states data": [[1908, "Ambient-states-data"]], "WRF-Timeseries-4464.csv.gz": [[1908, "WRF-Timeseries-4464.csv.gz"]], "abl_states_6000.csv.gz": [[1908, "abl_states_6000.csv.gz"]], "timeseries_3000.csv.gz": [[1908, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[1908, "timeseries_8000.csv.gz"]], "timeseries_100.csv.gz": [[1908, "timeseries_100.csv.gz"]], "wind_rose_bremen.csv": [[1908, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[1908, "wind_rotation.nc"]], "Power and thrust curves": [[1908, "Power-and-thrust-curves"]], "DTU-10MW-D178d3-H119.csv": [[1908, "DTU-10MW-D178d3-H119.csv"]], "IEA-15MW-D240-H150.csv": [[1908, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[1908, "IWT-7d5MW-D164-H100.csv"]], "NREL-5MW-D126-H90.csv": [[1908, "NREL-5MW-D126-H90.csv"]], "File paths": [[1908, "File-paths"]], "Heterogeneous flow": [[1909, "Heterogeneous-flow"]], "Layout optimization": [[1910, "Layout-optimization"]], "The model book": [[1911, "The-model-book"]], "Multi-height wind data": [[1912, "Multi-height-wind-data"]], "Overview - how to setup foxes": [[1913, "Overview---how-to-setup-foxes"]], "Power mask": [[1914, "Power-mask"]], "Wind sector management": [[1915, "Wind-sector-management"]], "Dynamic wakes 2": [[1916, "Dynamic-wakes-2"]], "Sequential wake propagation": [[1916, "Sequential-wake-propagation"]], "Single row of turbines": [[1917, "Single-row-of-turbines"]], "Dynamic wakes 1": [[1918, "Dynamic-wakes-1"]], "Spatially homogeneous wake propagation": [[1918, "Spatially-homogeneous-wake-propagation"]], "Timeseries data": [[1919, "Timeseries-data"]], "Wind rose data": [[1920, "Wind-rose-data"]], "Yawed rotor wakes": [[1921, "Yawed-rotor-wakes"]], "Testing": [[1922, "testing"]]}, "indexentries": {"pep 585": [[114, "index-0"], [233, "index-0"]], "python enhancement proposals": [[114, "index-0"], [233, "index-0"]]}, "docurls": ["_foxes/algorithms/Downwind.html", "_foxes/algorithms/Downwind.__init__.html", "_foxes/algorithms/Downwind.all_models.html", "_foxes/algorithms/Downwind.calc_farm.html", "_foxes/algorithms/Downwind.calc_points.html", "_foxes/algorithms/Downwind.finalize.html", "_foxes/algorithms/Downwind.get_model.html", "_foxes/algorithms/Downwind.init_states.html", "_foxes/algorithms/Downwind.initialize.html", "_foxes/algorithms/Iterative.html", "_foxes/algorithms/Iterative.__init__.html", "_foxes/algorithms/Iterative.calc_farm.html", "_foxes/algorithms/Iterative.get_model.html", "_foxes/algorithms/Iterative.iterations.html", "_foxes/algorithms/Iterative.set_urelax.html", "_foxes/algorithms/Iterative.urelax.html", "_foxes/algorithms/Sequential.html", "_foxes/algorithms/Sequential.__init__.html", "_foxes/algorithms/Sequential.__iter__.html", "_foxes/algorithms/Sequential.__next__.html", "_foxes/algorithms/Sequential.calc_farm.html", "_foxes/algorithms/Sequential.calc_points.html", "_foxes/algorithms/Sequential.counter.html", "_foxes/algorithms/Sequential.cur_farm_results.html", "_foxes/algorithms/Sequential.cur_point_results.html", "_foxes/algorithms/Sequential.farm_results.html", "_foxes/algorithms/Sequential.fdata.html", "_foxes/algorithms/Sequential.get_model.html", "_foxes/algorithms/Sequential.index.html", "_foxes/algorithms/Sequential.iterating.html", "_foxes/algorithms/Sequential.mdata.html", "_foxes/algorithms/Sequential.pdata.html", "_foxes/algorithms/Sequential.point_results.html", "_foxes/algorithms/Sequential.size.html", "_foxes/algorithms/Sequential.weight.html", "_foxes/algorithms/downwind/models/CalcOrder.html", "_foxes/algorithms/downwind/models/CalcOrder.calculate.html", "_foxes/algorithms/downwind/models/CalcOrder.initialize.html", "_foxes/algorithms/downwind/models/CalcOrder.output_farm_vars.html", "_foxes/algorithms/downwind/models/CalcOrder.sub_models.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.contribute_to_wake_deltas.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.output_point_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.initialize.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.output_point_vars.html", "_foxes/algorithms/iterative/ConvCrit.html", "_foxes/algorithms/iterative/ConvCrit.__init__.html", "_foxes/algorithms/iterative/ConvCrit.check_converged.html", "_foxes/algorithms/iterative/ConvCrit.get_deltas.html", "_foxes/algorithms/iterative/ConvCritList.html", "_foxes/algorithms/iterative/ConvCritList.__init__.html", "_foxes/algorithms/iterative/ConvCritList.add_crit.html", "_foxes/algorithms/iterative/ConvCritList.check_converged.html", "_foxes/algorithms/iterative/ConvCritList.get_deltas.html", "_foxes/algorithms/iterative/ConvVarDelta.html", "_foxes/algorithms/iterative/ConvVarDelta.__init__.html", "_foxes/algorithms/iterative/ConvVarDelta.check_converged.html", "_foxes/algorithms/iterative/ConvVarDelta.get_deltas.html", "_foxes/algorithms/iterative/DefaultConv.html", "_foxes/algorithms/iterative/DefaultConv.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.initialize.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/iterative/models/URelax.html", "_foxes/algorithms/iterative/models/URelax.__init__.html", "_foxes/algorithms/iterative/models/URelax.calculate.html", "_foxes/algorithms/iterative/models/URelax.output_farm_vars.html", "_foxes/algorithms/sequential/SequentialPlugin.html", "_foxes/algorithms/sequential/SequentialPlugin.__init__.html", "_foxes/algorithms/sequential/SequentialPlugin.finalize.html", "_foxes/algorithms/sequential/SequentialPlugin.initialize.html", "_foxes/algorithms/sequential/SequentialPlugin.update.html", "_foxes/algorithms/sequential/models/SeqState.html", "_foxes/algorithms/sequential/models/SeqState.__init__.html", "_foxes/algorithms/sequential/models/SeqState.calculate.html", "_foxes/algorithms/sequential/models/SeqState.counter.html", "_foxes/algorithms/sequential/models/SeqState.index.html", "_foxes/algorithms/sequential/models/SeqState.initialize.html", "_foxes/algorithms/sequential/models/SeqState.output_point_vars.html", "_foxes/algorithms/sequential/models/SeqState.size.html", "_foxes/algorithms/sequential/models/SeqState.sub_models.html", "_foxes/algorithms/sequential/models/SeqState.weights.html", "_foxes/constants/AMB_RPOINT_RESULTS.html", "_foxes/constants/DTYPE.html", "_foxes/constants/DTYPE.T.html", "_foxes/constants/DTYPE.__abs__.html", "_foxes/constants/DTYPE.__add__.html", "_foxes/constants/DTYPE.__and__.html", "_foxes/constants/DTYPE.__array__.html", "_foxes/constants/DTYPE.__array_interface__.html", "_foxes/constants/DTYPE.__array_priority__.html", "_foxes/constants/DTYPE.__array_struct__.html", "_foxes/constants/DTYPE.__array_wrap__.html", "_foxes/constants/DTYPE.__bool__.html", "_foxes/constants/DTYPE.__class_getitem__.html", "_foxes/constants/DTYPE.__divmod__.html", "_foxes/constants/DTYPE.__eq__.html", "_foxes/constants/DTYPE.__float__.html", "_foxes/constants/DTYPE.__floordiv__.html", "_foxes/constants/DTYPE.__format__.html", "_foxes/constants/DTYPE.__ge__.html", "_foxes/constants/DTYPE.__getitem__.html", "_foxes/constants/DTYPE.__gt__.html", "_foxes/constants/DTYPE.__hash__.html", "_foxes/constants/DTYPE.__int__.html", "_foxes/constants/DTYPE.__invert__.html", "_foxes/constants/DTYPE.__le__.html", "_foxes/constants/DTYPE.__lshift__.html", "_foxes/constants/DTYPE.__lt__.html", "_foxes/constants/DTYPE.__mod__.html", "_foxes/constants/DTYPE.__mul__.html", "_foxes/constants/DTYPE.__ne__.html", "_foxes/constants/DTYPE.__neg__.html", "_foxes/constants/DTYPE.__new__.html", "_foxes/constants/DTYPE.__or__.html", "_foxes/constants/DTYPE.__pos__.html", "_foxes/constants/DTYPE.__pow__.html", "_foxes/constants/DTYPE.__radd__.html", "_foxes/constants/DTYPE.__rand__.html", "_foxes/constants/DTYPE.__rdivmod__.html", "_foxes/constants/DTYPE.__reduce__.html", "_foxes/constants/DTYPE.__repr__.html", "_foxes/constants/DTYPE.__rfloordiv__.html", "_foxes/constants/DTYPE.__rlshift__.html", "_foxes/constants/DTYPE.__rmod__.html", "_foxes/constants/DTYPE.__rmul__.html", "_foxes/constants/DTYPE.__ror__.html", "_foxes/constants/DTYPE.__rpow__.html", "_foxes/constants/DTYPE.__rrshift__.html", "_foxes/constants/DTYPE.__rshift__.html", "_foxes/constants/DTYPE.__rsub__.html", "_foxes/constants/DTYPE.__rtruediv__.html", "_foxes/constants/DTYPE.__rxor__.html", "_foxes/constants/DTYPE.__sizeof__.html", "_foxes/constants/DTYPE.__str__.html", "_foxes/constants/DTYPE.__sub__.html", "_foxes/constants/DTYPE.__truediv__.html", "_foxes/constants/DTYPE.__xor__.html", "_foxes/constants/DTYPE.all.html", "_foxes/constants/DTYPE.any.html", "_foxes/constants/DTYPE.argmax.html", "_foxes/constants/DTYPE.argmin.html", "_foxes/constants/DTYPE.argsort.html", "_foxes/constants/DTYPE.as_integer_ratio.html", "_foxes/constants/DTYPE.astype.html", "_foxes/constants/DTYPE.base.html", "_foxes/constants/DTYPE.byteswap.html", "_foxes/constants/DTYPE.choose.html", "_foxes/constants/DTYPE.clip.html", "_foxes/constants/DTYPE.compress.html", "_foxes/constants/DTYPE.conj.html", "_foxes/constants/DTYPE.conjugate.html", "_foxes/constants/DTYPE.copy.html", "_foxes/constants/DTYPE.cumprod.html", "_foxes/constants/DTYPE.cumsum.html", "_foxes/constants/DTYPE.data.html", "_foxes/constants/DTYPE.diagonal.html", "_foxes/constants/DTYPE.dtype.html", "_foxes/constants/DTYPE.dump.html", "_foxes/constants/DTYPE.dumps.html", "_foxes/constants/DTYPE.fill.html", "_foxes/constants/DTYPE.flags.html", "_foxes/constants/DTYPE.flat.html", "_foxes/constants/DTYPE.flatten.html", "_foxes/constants/DTYPE.getfield.html", "_foxes/constants/DTYPE.imag.html", "_foxes/constants/DTYPE.is_integer.html", "_foxes/constants/DTYPE.item.html", "_foxes/constants/DTYPE.itemset.html", "_foxes/constants/DTYPE.itemsize.html", "_foxes/constants/DTYPE.max.html", "_foxes/constants/DTYPE.mean.html", "_foxes/constants/DTYPE.min.html", "_foxes/constants/DTYPE.nbytes.html", "_foxes/constants/DTYPE.ndim.html", "_foxes/constants/DTYPE.newbyteorder.html", "_foxes/constants/DTYPE.nonzero.html", "_foxes/constants/DTYPE.prod.html", "_foxes/constants/DTYPE.ptp.html", "_foxes/constants/DTYPE.put.html", "_foxes/constants/DTYPE.ravel.html", "_foxes/constants/DTYPE.real.html", "_foxes/constants/DTYPE.repeat.html", "_foxes/constants/DTYPE.reshape.html", "_foxes/constants/DTYPE.resize.html", "_foxes/constants/DTYPE.round.html", "_foxes/constants/DTYPE.searchsorted.html", "_foxes/constants/DTYPE.setfield.html", "_foxes/constants/DTYPE.setflags.html", "_foxes/constants/DTYPE.shape.html", "_foxes/constants/DTYPE.size.html", "_foxes/constants/DTYPE.sort.html", "_foxes/constants/DTYPE.squeeze.html", "_foxes/constants/DTYPE.std.html", "_foxes/constants/DTYPE.strides.html", "_foxes/constants/DTYPE.sum.html", "_foxes/constants/DTYPE.swapaxes.html", "_foxes/constants/DTYPE.take.html", "_foxes/constants/DTYPE.tobytes.html", "_foxes/constants/DTYPE.tofile.html", "_foxes/constants/DTYPE.tolist.html", "_foxes/constants/DTYPE.tostring.html", "_foxes/constants/DTYPE.trace.html", "_foxes/constants/DTYPE.transpose.html", "_foxes/constants/DTYPE.var.html", "_foxes/constants/DTYPE.view.html", "_foxes/constants/FARM.html", "_foxes/constants/GW.html", "_foxes/constants/ITYPE.html", "_foxes/constants/ITYPE.__abs__.html", "_foxes/constants/ITYPE.__add__.html", "_foxes/constants/ITYPE.__and__.html", "_foxes/constants/ITYPE.__bool__.html", "_foxes/constants/ITYPE.__class_getitem__.html", "_foxes/constants/ITYPE.__divmod__.html", "_foxes/constants/ITYPE.__eq__.html", "_foxes/constants/ITYPE.__float__.html", "_foxes/constants/ITYPE.__floordiv__.html", "_foxes/constants/ITYPE.__ge__.html", "_foxes/constants/ITYPE.__gt__.html", "_foxes/constants/ITYPE.__hash__.html", "_foxes/constants/ITYPE.__index__.html", "_foxes/constants/ITYPE.__int__.html", "_foxes/constants/ITYPE.__invert__.html", "_foxes/constants/ITYPE.__le__.html", "_foxes/constants/ITYPE.__lshift__.html", "_foxes/constants/ITYPE.__lt__.html", "_foxes/constants/ITYPE.__mod__.html", "_foxes/constants/ITYPE.__mul__.html", "_foxes/constants/ITYPE.__ne__.html", "_foxes/constants/ITYPE.__neg__.html", "_foxes/constants/ITYPE.__new__.html", "_foxes/constants/ITYPE.__or__.html", "_foxes/constants/ITYPE.__pos__.html", "_foxes/constants/ITYPE.__pow__.html", "_foxes/constants/ITYPE.__radd__.html", "_foxes/constants/ITYPE.__rand__.html", "_foxes/constants/ITYPE.__rdivmod__.html", "_foxes/constants/ITYPE.__repr__.html", "_foxes/constants/ITYPE.__rfloordiv__.html", "_foxes/constants/ITYPE.__rlshift__.html", "_foxes/constants/ITYPE.__rmod__.html", "_foxes/constants/ITYPE.__rmul__.html", "_foxes/constants/ITYPE.__ror__.html", "_foxes/constants/ITYPE.__rpow__.html", "_foxes/constants/ITYPE.__rrshift__.html", "_foxes/constants/ITYPE.__rshift__.html", "_foxes/constants/ITYPE.__rsub__.html", "_foxes/constants/ITYPE.__rtruediv__.html", "_foxes/constants/ITYPE.__rxor__.html", "_foxes/constants/ITYPE.__str__.html", "_foxes/constants/ITYPE.__sub__.html", "_foxes/constants/ITYPE.__truediv__.html", "_foxes/constants/ITYPE.__xor__.html", "_foxes/constants/ITYPE.bit_count.html", "_foxes/constants/ITYPE.denominator.html", "_foxes/constants/ITYPE.is_integer.html", "_foxes/constants/ITYPE.numerator.html", "_foxes/constants/KAPPA.html", "_foxes/constants/MW.html", "_foxes/constants/POINT.html", "_foxes/constants/POINTS.html", "_foxes/constants/POP.html", "_foxes/constants/P_UNITS.html", "_foxes/constants/RPOINT.html", "_foxes/constants/RPOINTS.html", "_foxes/constants/RWEIGHTS.html", "_foxes/constants/STATE.html", "_foxes/constants/STATES_SEL.html", "_foxes/constants/STATE_POINT.html", "_foxes/constants/STATE_SOURCE_TURBINE.html", "_foxes/constants/STATE_TURBINE.html", "_foxes/constants/TMODELS.html", "_foxes/constants/TMODEL_SELS.html", "_foxes/constants/TNAME.html", "_foxes/constants/TURBINE.html", "_foxes/constants/TW.html", "_foxes/constants/VALID.html", "_foxes/constants/VARS.html", "_foxes/constants/W.html", "_foxes/constants/XYH.html", "_foxes/constants/kW.html", "_foxes/core/Algorithm.html", "_foxes/core/Algorithm.__init__.html", "_foxes/core/Algorithm.chunked.html", "_foxes/core/Algorithm.del_model_data.html", "_foxes/core/Algorithm.finalize.html", "_foxes/core/Algorithm.get_model_data.html", "_foxes/core/Algorithm.get_models_data.html", "_foxes/core/Algorithm.get_models_idata.html", "_foxes/core/Algorithm.idata_mem.html", "_foxes/core/Algorithm.initialize.html", "_foxes/core/Algorithm.new.html", "_foxes/core/Algorithm.new_point_data.html", "_foxes/core/Algorithm.print.html", "_foxes/core/Algorithm.store_model_data.html", "_foxes/core/Algorithm.update_n_turbines.html", "_foxes/core/AxialInductionModel.html", "_foxes/core/AxialInductionModel.ct2a.html", "_foxes/core/Data.html", "_foxes/core/Data.__init__.html", "_foxes/core/Data.add.html", "_foxes/core/Data.from_points.html", "_foxes/core/Data.n_points.html", "_foxes/core/Data.n_states.html", "_foxes/core/Data.n_turbines.html", "_foxes/core/Data.states_i0.html", "_foxes/core/DataCalcModel.html", "_foxes/core/DataCalcModel.calculate.html", "_foxes/core/DataCalcModel.run_calculation.html", "_foxes/core/ExtendedStates.html", "_foxes/core/ExtendedStates.__init__.html", "_foxes/core/ExtendedStates.append.html", "_foxes/core/ExtendedStates.calculate.html", "_foxes/core/ExtendedStates.index.html", "_foxes/core/ExtendedStates.output_point_vars.html", "_foxes/core/ExtendedStates.size.html", "_foxes/core/ExtendedStates.sub_models.html", "_foxes/core/ExtendedStates.weights.html", "_foxes/core/FarmController.html", "_foxes/core/FarmController.__init__.html", "_foxes/core/FarmController.calculate.html", "_foxes/core/FarmController.collect_models.html", "_foxes/core/FarmController.finalize.html", "_foxes/core/FarmController.initialize.html", "_foxes/core/FarmController.load_data.html", "_foxes/core/FarmController.output_farm_vars.html", "_foxes/core/FarmController.set_pars.html", "_foxes/core/FarmController.sub_models.html", "_foxes/core/FarmDataModel.html", "_foxes/core/FarmDataModel.__init__.html", "_foxes/core/FarmDataModel.calculate.html", "_foxes/core/FarmDataModel.output_farm_vars.html", "_foxes/core/FarmDataModel.run_calculation.html", "_foxes/core/FarmDataModelList.html", "_foxes/core/FarmDataModelList.__init__.html", "_foxes/core/FarmDataModelList.append.html", "_foxes/core/FarmDataModelList.calculate.html", "_foxes/core/FarmDataModelList.insert.html", "_foxes/core/FarmDataModelList.output_farm_vars.html", "_foxes/core/FarmDataModelList.sub_models.html", "_foxes/core/FarmModel.html", "_foxes/core/Model.html", "_foxes/core/Model.__init__.html", "_foxes/core/Model.__repr__.html", "_foxes/core/Model.data_to_store.html", "_foxes/core/Model.finalize.html", "_foxes/core/Model.from_data_or_store.html", "_foxes/core/Model.get_data.html", "_foxes/core/Model.initialize.html", "_foxes/core/Model.initialized.html", "_foxes/core/Model.load_data.html", "_foxes/core/Model.model_id.html", "_foxes/core/Model.sub_models.html", "_foxes/core/Model.var.html", "_foxes/core/PartialWakesModel.html", "_foxes/core/PartialWakesModel.__init__.html", "_foxes/core/PartialWakesModel.contribute_to_wake_deltas.html", "_foxes/core/PartialWakesModel.evaluate_results.html", "_foxes/core/PartialWakesModel.initialize.html", "_foxes/core/PartialWakesModel.new.html", "_foxes/core/PartialWakesModel.new_wake_deltas.html", "_foxes/core/PartialWakesModel.sub_models.html", "_foxes/core/PointDataModel.html", "_foxes/core/PointDataModel.calculate.html", "_foxes/core/PointDataModel.output_point_vars.html", "_foxes/core/PointDataModel.run_calculation.html", "_foxes/core/PointDataModelList.html", "_foxes/core/PointDataModelList.__init__.html", "_foxes/core/PointDataModelList.append.html", "_foxes/core/PointDataModelList.calculate.html", "_foxes/core/PointDataModelList.output_point_vars.html", "_foxes/core/PointDataModelList.sub_models.html", "_foxes/core/RotorModel.html", "_foxes/core/RotorModel.__init__.html", "_foxes/core/RotorModel.calculate.html", "_foxes/core/RotorModel.design_points.html", "_foxes/core/RotorModel.eval_rpoint_results.html", "_foxes/core/RotorModel.get_rotor_points.html", "_foxes/core/RotorModel.n_rotor_points.html", "_foxes/core/RotorModel.new.html", "_foxes/core/RotorModel.output_farm_vars.html", "_foxes/core/RotorModel.rotor_point_weights.html", "_foxes/core/States.html", "_foxes/core/States.index.html", "_foxes/core/States.load_data.html", "_foxes/core/States.output_point_vars.html", "_foxes/core/States.size.html", "_foxes/core/States.weights.html", "_foxes/core/Turbine.html", "_foxes/core/Turbine.__init__.html", "_foxes/core/Turbine.add_model.html", "_foxes/core/Turbine.insert_model.html", "_foxes/core/TurbineModel.html", "_foxes/core/TurbineModel.calculate.html", "_foxes/core/TurbineModel.new.html", "_foxes/core/TurbineType.html", "_foxes/core/TurbineType.__init__.html", "_foxes/core/TurbineType.new.html", "_foxes/core/VerticalProfile.html", "_foxes/core/VerticalProfile.calculate.html", "_foxes/core/VerticalProfile.input_vars.html", "_foxes/core/VerticalProfile.new.html", "_foxes/core/WakeFrame.html", "_foxes/core/WakeFrame.calc_centreline_integral.html", "_foxes/core/WakeFrame.calc_order.html", "_foxes/core/WakeFrame.get_centreline_points.html", "_foxes/core/WakeFrame.get_wake_coos.html", "_foxes/core/WakeFrame.get_wake_modelling_data.html", "_foxes/core/WakeFrame.new.html", "_foxes/core/WakeModel.html", "_foxes/core/WakeModel.contribute_to_wake_deltas.html", "_foxes/core/WakeModel.finalize_wake_deltas.html", "_foxes/core/WakeModel.init_wake_deltas.html", "_foxes/core/WakeModel.new.html", "_foxes/core/WakeSuperposition.html", "_foxes/core/WakeSuperposition.calc_final_wake_delta.html", "_foxes/core/WakeSuperposition.calc_wakes_plus_wake.html", "_foxes/core/WindFarm.html", "_foxes/core/WindFarm.__init__.html", "_foxes/core/WindFarm.add_turbine.html", "_foxes/core/WindFarm.n_turbines.html", "_foxes/core/WindFarm.turbine_names.html", "_foxes/data/StaticData.html", "_foxes/data/StaticData.__init__.html", "_foxes/data/parse_Pct_file_name.html", "_foxes/data/parse_Pct_two_files.html", "_foxes/input/farm_layout/add_from_csv.html", "_foxes/input/farm_layout/add_from_df.html", "_foxes/input/farm_layout/add_from_file.html", "_foxes/input/farm_layout/add_from_json.html", "_foxes/input/farm_layout/add_grid.html", "_foxes/input/farm_layout/add_random.html", "_foxes/input/farm_layout/add_row.html", "_foxes/input/states/FieldDataNC.html", "_foxes/input/states/FieldDataNC.__init__.html", "_foxes/input/states/FieldDataNC.calculate.html", "_foxes/input/states/FieldDataNC.index.html", "_foxes/input/states/FieldDataNC.load_data.html", "_foxes/input/states/FieldDataNC.output_point_vars.html", "_foxes/input/states/FieldDataNC.size.html", "_foxes/input/states/FieldDataNC.weights.html", "_foxes/input/states/MultiHeightStates.html", "_foxes/input/states/MultiHeightStates.RDICT.html", "_foxes/input/states/MultiHeightStates.__init__.html", "_foxes/input/states/MultiHeightStates.calculate.html", "_foxes/input/states/MultiHeightStates.finalize.html", "_foxes/input/states/MultiHeightStates.index.html", "_foxes/input/states/MultiHeightStates.load_data.html", "_foxes/input/states/MultiHeightStates.output_point_vars.html", "_foxes/input/states/MultiHeightStates.reset.html", "_foxes/input/states/MultiHeightStates.size.html", "_foxes/input/states/MultiHeightStates.weights.html", "_foxes/input/states/MultiHeightTimeseries.html", "_foxes/input/states/MultiHeightTimeseries.RDICT.html", "_foxes/input/states/ScanWS.html", "_foxes/input/states/ScanWS.__init__.html", "_foxes/input/states/ScanWS.calculate.html", "_foxes/input/states/ScanWS.load_data.html", "_foxes/input/states/ScanWS.output_point_vars.html", "_foxes/input/states/ScanWS.size.html", "_foxes/input/states/ScanWS.weights.html", "_foxes/input/states/SingleStateStates.html", "_foxes/input/states/SingleStateStates.__init__.html", "_foxes/input/states/SingleStateStates.calculate.html", "_foxes/input/states/SingleStateStates.initialize.html", "_foxes/input/states/SingleStateStates.output_point_vars.html", "_foxes/input/states/SingleStateStates.size.html", "_foxes/input/states/SingleStateStates.sub_models.html", "_foxes/input/states/SingleStateStates.weights.html", "_foxes/input/states/StatesTable.html", "_foxes/input/states/StatesTable.RDICT.html", "_foxes/input/states/StatesTable.__init__.html", "_foxes/input/states/StatesTable.calculate.html", "_foxes/input/states/StatesTable.finalize.html", "_foxes/input/states/StatesTable.index.html", "_foxes/input/states/StatesTable.initialize.html", "_foxes/input/states/StatesTable.load_data.html", "_foxes/input/states/StatesTable.output_point_vars.html", "_foxes/input/states/StatesTable.reset.html", "_foxes/input/states/StatesTable.size.html", "_foxes/input/states/StatesTable.sub_models.html", "_foxes/input/states/StatesTable.weights.html", "_foxes/input/states/TabStates.html", "_foxes/input/states/TabStates.__init__.html", "_foxes/input/states/TabStates.load_data.html", "_foxes/input/states/Timeseries.html", "_foxes/input/states/Timeseries.RDICT.html", "_foxes/input/states/create/create_random_abl_states.html", "_foxes/input/states/create/random_timseries_data.html", "_foxes/input/states/create/write_random_abl_states.html", "_foxes/input/windio/read_case.html", "_foxes/models/axial_induction_modelsBetzAxialInduction.html", "_foxes/models/axial_induction_modelsBetzAxialInduction.__init__.html", "_foxes/models/axial_induction_modelsBetzAxialInduction.ct2a.html", "_foxes/models/axial_induction_modelsMadsenAxialInduction.html", "_foxes/models/axial_induction_modelsMadsenAxialInduction.__init__.html", "_foxes/models/axial_induction_modelsMadsenAxialInduction.ct2a.html", "_foxes/models/farm_controllers/BasicFarmController.html", "_foxes/models/farm_models/Turbine2FarmModel.html", "_foxes/models/farm_models/Turbine2FarmModel.__init__.html", "_foxes/models/farm_models/Turbine2FarmModel.__repr__.html", "_foxes/models/farm_models/Turbine2FarmModel.calculate.html", "_foxes/models/farm_models/Turbine2FarmModel.output_farm_vars.html", "_foxes/models/farm_models/Turbine2FarmModel.sub_models.html", "_foxes/models/model_book/Dict.html", "_foxes/models/model_book/Dict.__getitem__.html", "_foxes/models/model_book/Dict.__init__.html", "_foxes/models/model_book/ModelBook.html", "_foxes/models/model_book/ModelBook.__getitem__.html", "_foxes/models/model_book/ModelBook.__init__.html", "_foxes/models/model_book/ModelBook.finalize.html", "_foxes/models/model_book/ModelBook.get.html", "_foxes/models/model_book/ModelBook.print_toc.html", "_foxes/models/partial_wakes/Mapped.html", "_foxes/models/partial_wakes/Mapped.__init__.html", "_foxes/models/partial_wakes/Mapped.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.evaluate_results.html", "_foxes/models/partial_wakes/Mapped.initialize.html", "_foxes/models/partial_wakes/Mapped.new_wake_deltas.html", "_foxes/models/partial_wakes/Mapped.sub_models.html", "_foxes/models/partial_wakes/PartialAxiwake.html", "_foxes/models/partial_wakes/PartialAxiwake.__init__.html", "_foxes/models/partial_wakes/PartialAxiwake.__repr__.html", "_foxes/models/partial_wakes/PartialAxiwake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.evaluate_results.html", "_foxes/models/partial_wakes/PartialAxiwake.initialize.html", "_foxes/models/partial_wakes/PartialAxiwake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialAxiwake.sub_models.html", "_foxes/models/partial_wakes/PartialCentre.html", "_foxes/models/partial_wakes/PartialCentre.evaluate_results.html", "_foxes/models/partial_wakes/PartialCentre.get_wake_points.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__init__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.__repr__.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.evaluate_results.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.initialize.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialDistSlicedWake.sub_models.html", "_foxes/models/partial_wakes/PartialGrid.html", "_foxes/models/partial_wakes/PartialGrid.__init__.html", "_foxes/models/partial_wakes/PartialGrid.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.html", "_foxes/models/partial_wakes/PartialTopHat.__init__.html", "_foxes/models/partial_wakes/PartialTopHat.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.evaluate_results.html", "_foxes/models/partial_wakes/PartialTopHat.initialize.html", "_foxes/models/partial_wakes/PartialTopHat.new_wake_deltas.html", "_foxes/models/partial_wakes/PartialTopHat.sub_models.html", "_foxes/models/partial_wakes/RotorPoints.html", "_foxes/models/partial_wakes/RotorPoints.__init__.html", "_foxes/models/partial_wakes/RotorPoints.contribute_to_wake_deltas.html", "_foxes/models/partial_wakes/RotorPoints.evaluate_results.html", "_foxes/models/partial_wakes/RotorPoints.get_wake_points.html", "_foxes/models/partial_wakes/RotorPoints.new_wake_deltas.html", "_foxes/models/point_models/SetUniformData.html", "_foxes/models/point_models/SetUniformData.__init__.html", "_foxes/models/point_models/SetUniformData.calculate.html", "_foxes/models/point_models/SetUniformData.load_data.html", "_foxes/models/point_models/SetUniformData.output_point_vars.html", "_foxes/models/point_models/TKE2TI.html", "_foxes/models/point_models/TKE2TI.calculate.html", "_foxes/models/point_models/TKE2TI.output_point_vars.html", "_foxes/models/point_models/WakeDeltas.html", "_foxes/models/point_models/WakeDeltas.__init__.html", "_foxes/models/point_models/WakeDeltas.calculate.html", "_foxes/models/point_models/WakeDeltas.output_point_vars.html", "_foxes/models/rotor_models/CentreRotor.html", "_foxes/models/rotor_models/CentreRotor.design_points.html", "_foxes/models/rotor_models/CentreRotor.eval_rpoint_results.html", "_foxes/models/rotor_models/CentreRotor.get_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.n_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.rotor_point_weights.html", "_foxes/models/rotor_models/GridRotor.html", "_foxes/models/rotor_models/GridRotor.__init__.html", "_foxes/models/rotor_models/GridRotor.__repr__.html", "_foxes/models/rotor_models/GridRotor.design_points.html", "_foxes/models/rotor_models/GridRotor.initialize.html", "_foxes/models/rotor_models/GridRotor.n_rotor_points.html", "_foxes/models/rotor_models/GridRotor.rotor_point_weights.html", "_foxes/models/rotor_models/LevelRotor.html", "_foxes/models/rotor_models/LevelRotor.__init__.html", "_foxes/models/rotor_models/LevelRotor.__repr__.html", "_foxes/models/rotor_models/LevelRotor.design_points.html", "_foxes/models/rotor_models/LevelRotor.initialize.html", "_foxes/models/rotor_models/LevelRotor.n_rotor_points.html", "_foxes/models/rotor_models/LevelRotor.rotor_point_weights.html", "_foxes/models/turbine_models/Calculator.html", "_foxes/models/turbine_models/Calculator.__init__.html", "_foxes/models/turbine_models/Calculator.calculate.html", "_foxes/models/turbine_models/Calculator.output_farm_vars.html", "_foxes/models/turbine_models/LookupTable.html", "_foxes/models/turbine_models/LookupTable.__init__.html", "_foxes/models/turbine_models/LookupTable.calculate.html", "_foxes/models/turbine_models/LookupTable.load_data.html", "_foxes/models/turbine_models/LookupTable.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.html", "_foxes/models/turbine_models/PowerMask.__init__.html", "_foxes/models/turbine_models/PowerMask.calculate.html", "_foxes/models/turbine_models/PowerMask.initialize.html", "_foxes/models/turbine_models/PowerMask.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.update_P_ct.html", "_foxes/models/turbine_models/RotorCentreCalc.html", "_foxes/models/turbine_models/RotorCentreCalc.__init__.html", "_foxes/models/turbine_models/RotorCentreCalc.calculate.html", "_foxes/models/turbine_models/RotorCentreCalc.initialize.html", "_foxes/models/turbine_models/RotorCentreCalc.output_farm_vars.html", "_foxes/models/turbine_models/RotorCentreCalc.sub_models.html", "_foxes/models/turbine_models/SectorManagement.html", "_foxes/models/turbine_models/SectorManagement.__init__.html", "_foxes/models/turbine_models/SectorManagement.calculate.html", "_foxes/models/turbine_models/SectorManagement.initialize.html", "_foxes/models/turbine_models/SectorManagement.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.html", "_foxes/models/turbine_models/SetFarmVars.__init__.html", "_foxes/models/turbine_models/SetFarmVars.add_var.html", "_foxes/models/turbine_models/SetFarmVars.calculate.html", "_foxes/models/turbine_models/SetFarmVars.load_data.html", "_foxes/models/turbine_models/SetFarmVars.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.reset.html", "_foxes/models/turbine_models/SetXYHD.html", "_foxes/models/turbine_models/SetXYHD.__init__.html", "_foxes/models/turbine_models/SetXYHD.calculate.html", "_foxes/models/turbine_models/SetXYHD.output_farm_vars.html", "_foxes/models/turbine_models/TableFactors.html", "_foxes/models/turbine_models/TableFactors.__init__.html", "_foxes/models/turbine_models/TableFactors.calculate.html", "_foxes/models/turbine_models/TableFactors.initialize.html", "_foxes/models/turbine_models/TableFactors.output_farm_vars.html", "_foxes/models/turbine_models/Thrust2Ct.html", "_foxes/models/turbine_models/Thrust2Ct.__init__.html", "_foxes/models/turbine_models/Thrust2Ct.calculate.html", "_foxes/models/turbine_models/Thrust2Ct.output_farm_vars.html", "_foxes/models/turbine_models/YAW2YAWM.html", "_foxes/models/turbine_models/YAW2YAWM.calculate.html", "_foxes/models/turbine_models/YAW2YAWM.output_farm_vars.html", "_foxes/models/turbine_models/YAWM2YAW.html", "_foxes/models/turbine_models/YAWM2YAW.calculate.html", "_foxes/models/turbine_models/YAWM2YAW.output_farm_vars.html", "_foxes/models/turbine_models/kTI.html", "_foxes/models/turbine_models/kTI.__init__.html", "_foxes/models/turbine_models/kTI.__repr__.html", "_foxes/models/turbine_models/kTI.calculate.html", "_foxes/models/turbine_models/kTI.output_farm_vars.html", "_foxes/models/turbine_types/CpCtFile.html", "_foxes/models/turbine_types/CpCtFile.__init__.html", "_foxes/models/turbine_types/CpCtFromTwo.html", "_foxes/models/turbine_types/CpCtFromTwo.__init__.html", "_foxes/models/turbine_types/NullType.html", "_foxes/models/turbine_types/NullType.calculate.html", "_foxes/models/turbine_types/NullType.output_farm_vars.html", "_foxes/models/turbine_types/PCtFile.html", "_foxes/models/turbine_types/PCtFile.__init__.html", "_foxes/models/turbine_types/PCtFile.calculate.html", "_foxes/models/turbine_types/PCtFile.finalize.html", "_foxes/models/turbine_types/PCtFile.load_data.html", "_foxes/models/turbine_types/PCtFile.output_farm_vars.html", "_foxes/models/turbine_types/PCtFromTwo.html", "_foxes/models/turbine_types/PCtFromTwo.__init__.html", "_foxes/models/turbine_types/PCtFromTwo.calculate.html", "_foxes/models/turbine_types/PCtFromTwo.finalize.html", "_foxes/models/turbine_types/PCtFromTwo.load_data.html", "_foxes/models/turbine_types/PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.output_farm_vars.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.input_vars.html", "_foxes/models/vertical_profiles/DataProfile.html", "_foxes/models/vertical_profiles/DataProfile.__init__.html", "_foxes/models/vertical_profiles/DataProfile.calculate.html", "_foxes/models/vertical_profiles/DataProfile.input_vars.html", "_foxes/models/vertical_profiles/ShearedProfile.html", "_foxes/models/vertical_profiles/ShearedProfile.calculate.html", "_foxes/models/vertical_profiles/ShearedProfile.input_vars.html", "_foxes/models/vertical_profiles/UniformProfile.html", "_foxes/models/vertical_profiles/UniformProfile.__init__.html", "_foxes/models/vertical_profiles/UniformProfile.calculate.html", "_foxes/models/vertical_profiles/UniformProfile.input_vars.html", "_foxes/models/wake_frames/FarmOrder.html", "_foxes/models/wake_frames/FarmOrder.__init__.html", "_foxes/models/wake_frames/FarmOrder.calc_order.html", "_foxes/models/wake_frames/FarmOrder.get_centreline_points.html", "_foxes/models/wake_frames/FarmOrder.get_wake_coos.html", "_foxes/models/wake_frames/FarmOrder.sub_models.html", "_foxes/models/wake_frames/RotorWD.html", "_foxes/models/wake_frames/RotorWD.__init__.html", "_foxes/models/wake_frames/RotorWD.calc_order.html", "_foxes/models/wake_frames/RotorWD.get_centreline_points.html", "_foxes/models/wake_frames/RotorWD.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.html", "_foxes/models/wake_frames/SeqDynamicWakes.__init__.html", "_foxes/models/wake_frames/SeqDynamicWakes.calc_order.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_centreline_points.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_modelling_data.html", "_foxes/models/wake_frames/SeqDynamicWakes.initialize.html", "_foxes/models/wake_frames/Streamlines2D.html", "_foxes/models/wake_frames/Streamlines2D.__init__.html", "_foxes/models/wake_frames/Streamlines2D.__repr__.html", "_foxes/models/wake_frames/Streamlines2D.calc_order.html", "_foxes/models/wake_frames/Streamlines2D.get_centreline_points.html", "_foxes/models/wake_frames/Streamlines2D.get_streamline_data.html", "_foxes/models/wake_frames/Streamlines2D.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.html", "_foxes/models/wake_frames/Timelines.__init__.html", "_foxes/models/wake_frames/Timelines.calc_order.html", "_foxes/models/wake_frames/Timelines.get_centreline_points.html", "_foxes/models/wake_frames/Timelines.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.initialize.html", "_foxes/models/wake_frames/YawedWakes.html", "_foxes/models/wake_frames/YawedWakes.__init__.html", "_foxes/models/wake_frames/YawedWakes.calc_order.html", "_foxes/models/wake_frames/YawedWakes.get_centreline_points.html", "_foxes/models/wake_frames/YawedWakes.get_wake_coos.html", "_foxes/models/wake_frames/YawedWakes.initialize.html", "_foxes/models/wake_frames/YawedWakes.sub_models.html", "_foxes/models/wake_models/AxisymmetricWakeModel.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.html", "_foxes/models/wake_models/DistSlicedWakeModel.__init__.html", "_foxes/models/wake_models/DistSlicedWakeModel.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.contribute_to_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.finalize_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.initialize.html", "_foxes/models/wake_models/DistSlicedWakeModel.sub_models.html", "_foxes/models/wake_models/GaussianWakeModel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/GroundMirror.html", "_foxes/models/wake_models/GroundMirror.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.html", "_foxes/models/wake_models/TopHatWakeModel.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wake_radius.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wakes_spsel_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.initialize.html", "_foxes/models/wake_models/TopHatWakeModel.sub_models.html", "_foxes/models/wake_models/WakeMirror.html", "_foxes/models/wake_models/WakeMirror.__init__.html", "_foxes/models/wake_models/WakeMirror.contribute_to_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.finalize_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.init_wake_deltas.html", "_foxes/models/wake_models/WakeMirror.sub_models.html", "_foxes/models/wake_models/induction/RankineHalfBody.html", "_foxes/models/wake_models/induction/RankineHalfBody.__init__.html", "_foxes/models/wake_models/induction/RankineHalfBody.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.init_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.initialize.html", "_foxes/models/wake_models/induction/RankineHalfBody.sub_models.html", "_foxes/models/wake_models/induction/Rathmann.html", "_foxes/models/wake_models/induction/Rathmann.__init__.html", "_foxes/models/wake_models/induction/Rathmann.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.init_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.initialize.html", "_foxes/models/wake_models/induction/Rathmann.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar.html", "_foxes/models/wake_models/induction/SelfSimilar.__init__.html", "_foxes/models/wake_models/induction/SelfSimilar.contribute_to_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.init_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.initialize.html", "_foxes/models/wake_models/induction/SelfSimilar.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar2020.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__init__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__repr__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.init_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.html", "_foxes/models/wake_models/ti/IECTIWake.__init__.html", "_foxes/models/wake_models/ti/IECTIWake.__repr__.html", "_foxes/models/wake_models/ti/IECTIWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/IECTIWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.html", "_foxes/models/wake_models/wind/Bastankhah2014.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2014.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2014.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/Bastankhah2014.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2014.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2014.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016.html", "_foxes/models/wake_models/wind/Bastankhah2016.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2016.calc_wakes_spsel_x_yz.html", "_foxes/models/wake_models/wind/Bastankhah2016.init_wake_deltas.html", "_foxes/models/wake_models/wind/Bastankhah2016.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.CHECK.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.MDATA_KEY.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.PARS.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC_S.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Y_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Z_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SP_SEL.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.X0.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.calc_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.clean.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.get_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.has_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.pars.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.sub_models.html", "_foxes/models/wake_models/wind/JensenWake.html", "_foxes/models/wake_models/wind/JensenWake.__init__.html", "_foxes/models/wake_models/wind/JensenWake.__repr__.html", "_foxes/models/wake_models/wind/JensenWake.calc_centreline_wake_deltas.html", "_foxes/models/wake_models/wind/JensenWake.calc_wake_radius.html", "_foxes/models/wake_models/wind/JensenWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.html", "_foxes/models/wake_models/wind/TurbOParkWake.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWake.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWake.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWake.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWake.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWake.sub_models.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.calc_amplitude_sigma_spsel.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.finalize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.init_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.sub_models.html", "_foxes/models/wake_superpositions/TILinear.html", "_foxes/models/wake_superpositions/TILinear.__init__.html", "_foxes/models/wake_superpositions/TILinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TILinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIMax.html", "_foxes/models/wake_superpositions/TIMax.__init__.html", "_foxes/models/wake_superpositions/TIMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIPow.html", "_foxes/models/wake_superpositions/TIPow.__init__.html", "_foxes/models/wake_superpositions/TIPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/TIQuadratic.html", "_foxes/models/wake_superpositions/TIQuadratic.__init__.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.html", "_foxes/models/wake_superpositions/WSLinear.__init__.html", "_foxes/models/wake_superpositions/WSLinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSLinear.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMax.html", "_foxes/models/wake_superpositions/WSMax.__init__.html", "_foxes/models/wake_superpositions/WSMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMax.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSMax.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPow.html", "_foxes/models/wake_superpositions/WSPow.__init__.html", "_foxes/models/wake_superpositions/WSPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPow.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSPow.input_farm_vars.html", "_foxes/models/wake_superpositions/WSProduct.html", "_foxes/models/wake_superpositions/WSProduct.__init__.html", "_foxes/models/wake_superpositions/WSProduct.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSProduct.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSProduct.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadratic.html", "_foxes/models/wake_superpositions/WSQuadratic.__init__.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_wakes_plus_wake.html", "_foxes/models/wake_superpositions/WSQuadratic.input_farm_vars.html", "_foxes/output/Animator.html", "_foxes/output/Animator.__init__.html", "_foxes/output/Animator.add_generator.html", "_foxes/output/Animator.animate.html", "_foxes/output/Animator.generators.html", "_foxes/output/FarmLayoutOutput.html", "_foxes/output/FarmLayoutOutput.__init__.html", "_foxes/output/FarmLayoutOutput.get_figure.html", "_foxes/output/FarmLayoutOutput.get_layout_data.html", "_foxes/output/FarmLayoutOutput.get_layout_dict.html", "_foxes/output/FarmLayoutOutput.write_csv.html", "_foxes/output/FarmLayoutOutput.write_json.html", "_foxes/output/FarmLayoutOutput.write_plot.html", "_foxes/output/FarmLayoutOutput.write_xyh.html", "_foxes/output/FarmResultsEval.html", "_foxes/output/FarmResultsEval.__init__.html", "_foxes/output/FarmResultsEval.add_capacity.html", "_foxes/output/FarmResultsEval.add_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_mean.html", "_foxes/output/FarmResultsEval.calc_farm_sum.html", "_foxes/output/FarmResultsEval.calc_farm_yield.html", "_foxes/output/FarmResultsEval.calc_mean_farm_power.html", "_foxes/output/FarmResultsEval.calc_states_mean.html", "_foxes/output/FarmResultsEval.calc_states_std.html", "_foxes/output/FarmResultsEval.calc_states_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_mean.html", "_foxes/output/FarmResultsEval.calc_turbine_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_yield.html", "_foxes/output/FarmResultsEval.gen_stdata.html", "_foxes/output/FarmResultsEval.reduce_all.html", "_foxes/output/FarmResultsEval.reduce_states.html", "_foxes/output/FarmResultsEval.reduce_turbines.html", "_foxes/output/FarmResultsEval.weinsum.html", "_foxes/output/FlowPlots2D.html", "_foxes/output/FlowPlots2D.gen_states_fig_xy.html", "_foxes/output/FlowPlots2D.gen_states_fig_xz.html", "_foxes/output/FlowPlots2D.gen_states_fig_yz.html", "_foxes/output/FlowPlots2D.get_mean_fig_xy.html", "_foxes/output/FlowPlots2D.get_mean_fig_xz.html", "_foxes/output/FlowPlots2D.get_mean_fig_yz.html", "_foxes/output/Output.html", "_foxes/output/Output.__init__.html", "_foxes/output/Output.get_fpath.html", "_foxes/output/Output.new.html", "_foxes/output/Output.print_models.html", "_foxes/output/Output.write.html", "_foxes/output/PointCalculator.html", "_foxes/output/PointCalculator.__init__.html", "_foxes/output/PointCalculator.calculate.html", "_foxes/output/ResultsWriter.html", "_foxes/output/ResultsWriter.__init__.html", "_foxes/output/ResultsWriter.write_csv.html", "_foxes/output/ResultsWriter.write_nc.html", "_foxes/output/RosePlotOutput.html", "_foxes/output/RosePlotOutput.__init__.html", "_foxes/output/RosePlotOutput.get_data.html", "_foxes/output/RosePlotOutput.get_data_info.html", "_foxes/output/RosePlotOutput.get_figure.html", "_foxes/output/RosePlotOutput.write_figure.html", "_foxes/output/SeqFlowAnimationPlugin.html", "_foxes/output/SeqFlowAnimationPlugin.__init__.html", "_foxes/output/SeqFlowAnimationPlugin.gen_images.html", "_foxes/output/SeqFlowAnimationPlugin.initialize.html", "_foxes/output/SeqFlowAnimationPlugin.update.html", "_foxes/output/SliceData.html", "_foxes/output/SliceData.__init__.html", "_foxes/output/SliceData.get_mean_data_xy.html", "_foxes/output/SliceData.get_mean_data_xz.html", "_foxes/output/SliceData.get_mean_data_yz.html", "_foxes/output/SliceData.get_states_data_xy.html", "_foxes/output/SliceData.get_states_data_xz.html", "_foxes/output/SliceData.get_states_data_yz.html", "_foxes/output/StateTurbineMap.html", "_foxes/output/StateTurbineMap.__init__.html", "_foxes/output/StateTurbineMap.plot_map.html", "_foxes/output/StatesRosePlotOutput.html", "_foxes/output/StatesRosePlotOutput.__init__.html", "_foxes/output/TurbineTypeCurves.html", "_foxes/output/TurbineTypeCurves.__init__.html", "_foxes/output/TurbineTypeCurves.plot_curves.html", "_foxes/output/flow_plots_2d/get_fig.html", "_foxes/utils/DataBook.html", "_foxes/utils/DataBook.__init__.html", "_foxes/utils/DataBook.add_data_package.html", "_foxes/utils/DataBook.add_data_package_file.html", "_foxes/utils/DataBook.add_file.html", "_foxes/utils/DataBook.add_files.html", "_foxes/utils/DataBook.get_file_path.html", "_foxes/utils/DataBook.toc.html", "_foxes/utils/PandasFileHelper.html", "_foxes/utils/PandasFileHelper.DATA_FILE_FORMATS.html", "_foxes/utils/PandasFileHelper.DEFAULT_FORMAT_DICT.html", "_foxes/utils/PandasFileHelper.DEFAULT_READING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.DEFAULT_WRITING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.read_file.html", "_foxes/utils/PandasFileHelper.write_file.html", "_foxes/utils/TabWindroseAxes.html", "_foxes/utils/TabWindroseAxes.ArtistList.html", "_foxes/utils/TabWindroseAxes.ArtistList.__getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__init__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__repr__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__subclasshook__.html", "_foxes/utils/TabWindroseAxes.ArtistList.count.html", "_foxes/utils/TabWindroseAxes.ArtistList.index.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__add__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__array__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__sub__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.depth.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.frozen.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_matrix.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.invalidate.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_separable.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.pass_through.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.set_children.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_angles.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_point.html", "_foxes/utils/TabWindroseAxes.PolarAffine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__array__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__eq__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__init__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__str__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.frozen.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_matrix.html", "_foxes/utils/TabWindroseAxes.PolarAffine.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarAffine.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.inverted.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_separable.html", "_foxes/utils/TabWindroseAxes.PolarAffine.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.to_values.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.PolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.RadialLocator.html", "_foxes/utils/TabWindroseAxes.RadialLocator.MAXTICKS.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__call__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__init__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.create_dummy_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.RadialLocator.raise_if_exceeds.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_params.html", "_foxes/utils/TabWindroseAxes.RadialLocator.tick_values.html", "_foxes/utils/TabWindroseAxes.RadialLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.fix_minus.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data_short.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_ticks.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.get_offset.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.locs.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_locs.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__init__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.__init__.html", "_foxes/utils/TabWindroseAxes.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.__repr__.html", "_foxes/utils/TabWindroseAxes.__str__.html", "_foxes/utils/TabWindroseAxes.acorr.html", "_foxes/utils/TabWindroseAxes.add_artist.html", "_foxes/utils/TabWindroseAxes.add_callback.html", "_foxes/utils/TabWindroseAxes.add_child_axes.html", "_foxes/utils/TabWindroseAxes.add_collection.html", "_foxes/utils/TabWindroseAxes.add_container.html", "_foxes/utils/TabWindroseAxes.add_image.html", "_foxes/utils/TabWindroseAxes.add_line.html", "_foxes/utils/TabWindroseAxes.add_patch.html", "_foxes/utils/TabWindroseAxes.add_table.html", "_foxes/utils/TabWindroseAxes.angle_spectrum.html", "_foxes/utils/TabWindroseAxes.annotate.html", "_foxes/utils/TabWindroseAxes.apply_aspect.html", "_foxes/utils/TabWindroseAxes.arrow.html", "_foxes/utils/TabWindroseAxes.artists.html", "_foxes/utils/TabWindroseAxes.autoscale.html", "_foxes/utils/TabWindroseAxes.autoscale_view.html", "_foxes/utils/TabWindroseAxes.axes.html", "_foxes/utils/TabWindroseAxes.axhline.html", "_foxes/utils/TabWindroseAxes.axhspan.html", "_foxes/utils/TabWindroseAxes.axis.html", "_foxes/utils/TabWindroseAxes.axline.html", "_foxes/utils/TabWindroseAxes.axvline.html", "_foxes/utils/TabWindroseAxes.axvspan.html", "_foxes/utils/TabWindroseAxes.bar.html", "_foxes/utils/TabWindroseAxes.bar_label.html", "_foxes/utils/TabWindroseAxes.barbs.html", "_foxes/utils/TabWindroseAxes.barh.html", "_foxes/utils/TabWindroseAxes.box.html", "_foxes/utils/TabWindroseAxes.boxplot.html", "_foxes/utils/TabWindroseAxes.broken_barh.html", "_foxes/utils/TabWindroseAxes.bxp.html", "_foxes/utils/TabWindroseAxes.can_pan.html", "_foxes/utils/TabWindroseAxes.can_zoom.html", "_foxes/utils/TabWindroseAxes.cla.html", "_foxes/utils/TabWindroseAxes.clabel.html", "_foxes/utils/TabWindroseAxes.clear.html", "_foxes/utils/TabWindroseAxes.cohere.html", "_foxes/utils/TabWindroseAxes.collections.html", "_foxes/utils/TabWindroseAxes.contains.html", "_foxes/utils/TabWindroseAxes.contains_point.html", "_foxes/utils/TabWindroseAxes.contour.html", "_foxes/utils/TabWindroseAxes.contourf.html", "_foxes/utils/TabWindroseAxes.convert_xunits.html", "_foxes/utils/TabWindroseAxes.convert_yunits.html", "_foxes/utils/TabWindroseAxes.csd.html", "_foxes/utils/TabWindroseAxes.drag_pan.html", "_foxes/utils/TabWindroseAxes.draw.html", "_foxes/utils/TabWindroseAxes.draw_artist.html", "_foxes/utils/TabWindroseAxes.end_pan.html", "_foxes/utils/TabWindroseAxes.errorbar.html", "_foxes/utils/TabWindroseAxes.eventplot.html", "_foxes/utils/TabWindroseAxes.fill.html", "_foxes/utils/TabWindroseAxes.fill_between.html", "_foxes/utils/TabWindroseAxes.fill_betweenx.html", "_foxes/utils/TabWindroseAxes.findobj.html", "_foxes/utils/TabWindroseAxes.format_coord.html", "_foxes/utils/TabWindroseAxes.format_cursor_data.html", "_foxes/utils/TabWindroseAxes.format_xdata.html", "_foxes/utils/TabWindroseAxes.format_ydata.html", "_foxes/utils/TabWindroseAxes.from_ax.html", "_foxes/utils/TabWindroseAxes.get_adjustable.html", "_foxes/utils/TabWindroseAxes.get_agg_filter.html", "_foxes/utils/TabWindroseAxes.get_alpha.html", "_foxes/utils/TabWindroseAxes.get_anchor.html", "_foxes/utils/TabWindroseAxes.get_animated.html", "_foxes/utils/TabWindroseAxes.get_aspect.html", "_foxes/utils/TabWindroseAxes.get_autoscale_on.html", "_foxes/utils/TabWindroseAxes.get_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.get_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.get_axes_locator.html", "_foxes/utils/TabWindroseAxes.get_axisbelow.html", "_foxes/utils/TabWindroseAxes.get_box_aspect.html", "_foxes/utils/TabWindroseAxes.get_children.html", "_foxes/utils/TabWindroseAxes.get_clip_box.html", "_foxes/utils/TabWindroseAxes.get_clip_on.html", "_foxes/utils/TabWindroseAxes.get_clip_path.html", "_foxes/utils/TabWindroseAxes.get_cursor_data.html", "_foxes/utils/TabWindroseAxes.get_data_ratio.html", "_foxes/utils/TabWindroseAxes.get_default_bbox_extra_artists.html", "_foxes/utils/TabWindroseAxes.get_facecolor.html", "_foxes/utils/TabWindroseAxes.get_fc.html", "_foxes/utils/TabWindroseAxes.get_figure.html", "_foxes/utils/TabWindroseAxes.get_frame_on.html", "_foxes/utils/TabWindroseAxes.get_gid.html", "_foxes/utils/TabWindroseAxes.get_gridspec.html", "_foxes/utils/TabWindroseAxes.get_images.html", "_foxes/utils/TabWindroseAxes.get_in_layout.html", "_foxes/utils/TabWindroseAxes.get_label.html", "_foxes/utils/TabWindroseAxes.get_legend.html", "_foxes/utils/TabWindroseAxes.get_legend_handles_labels.html", "_foxes/utils/TabWindroseAxes.get_lines.html", "_foxes/utils/TabWindroseAxes.get_mouseover.html", "_foxes/utils/TabWindroseAxes.get_navigate.html", "_foxes/utils/TabWindroseAxes.get_navigate_mode.html", "_foxes/utils/TabWindroseAxes.get_path_effects.html", "_foxes/utils/TabWindroseAxes.get_picker.html", "_foxes/utils/TabWindroseAxes.get_position.html", "_foxes/utils/TabWindroseAxes.get_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.get_rasterized.html", "_foxes/utils/TabWindroseAxes.get_renderer_cache.html", "_foxes/utils/TabWindroseAxes.get_rlabel_position.html", "_foxes/utils/TabWindroseAxes.get_rmax.html", "_foxes/utils/TabWindroseAxes.get_rmin.html", "_foxes/utils/TabWindroseAxes.get_rorigin.html", "_foxes/utils/TabWindroseAxes.get_rsign.html", "_foxes/utils/TabWindroseAxes.get_shared_x_axes.html", "_foxes/utils/TabWindroseAxes.get_shared_y_axes.html", "_foxes/utils/TabWindroseAxes.get_sketch_params.html", "_foxes/utils/TabWindroseAxes.get_snap.html", "_foxes/utils/TabWindroseAxes.get_subplotspec.html", "_foxes/utils/TabWindroseAxes.get_theta_direction.html", "_foxes/utils/TabWindroseAxes.get_theta_offset.html", "_foxes/utils/TabWindroseAxes.get_thetamax.html", "_foxes/utils/TabWindroseAxes.get_thetamin.html", "_foxes/utils/TabWindroseAxes.get_tightbbox.html", "_foxes/utils/TabWindroseAxes.get_title.html", "_foxes/utils/TabWindroseAxes.get_transform.html", "_foxes/utils/TabWindroseAxes.get_transformed_clip_path_and_affine.html", "_foxes/utils/TabWindroseAxes.get_url.html", "_foxes/utils/TabWindroseAxes.get_visible.html", "_foxes/utils/TabWindroseAxes.get_window_extent.html", "_foxes/utils/TabWindroseAxes.get_xaxis.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_xbound.html", "_foxes/utils/TabWindroseAxes.get_xgridlines.html", "_foxes/utils/TabWindroseAxes.get_xlabel.html", "_foxes/utils/TabWindroseAxes.get_xlim.html", "_foxes/utils/TabWindroseAxes.get_xmajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xscale.html", "_foxes/utils/TabWindroseAxes.get_xticklabels.html", "_foxes/utils/TabWindroseAxes.get_xticklines.html", "_foxes/utils/TabWindroseAxes.get_xticks.html", "_foxes/utils/TabWindroseAxes.get_yaxis.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_ybound.html", "_foxes/utils/TabWindroseAxes.get_ygridlines.html", "_foxes/utils/TabWindroseAxes.get_ylabel.html", "_foxes/utils/TabWindroseAxes.get_ylim.html", "_foxes/utils/TabWindroseAxes.get_ymajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yscale.html", "_foxes/utils/TabWindroseAxes.get_yticklabels.html", "_foxes/utils/TabWindroseAxes.get_yticklines.html", "_foxes/utils/TabWindroseAxes.get_yticks.html", "_foxes/utils/TabWindroseAxes.get_zorder.html", "_foxes/utils/TabWindroseAxes.grid.html", "_foxes/utils/TabWindroseAxes.has_data.html", "_foxes/utils/TabWindroseAxes.have_units.html", "_foxes/utils/TabWindroseAxes.hexbin.html", "_foxes/utils/TabWindroseAxes.hist.html", "_foxes/utils/TabWindroseAxes.hist2d.html", "_foxes/utils/TabWindroseAxes.hlines.html", "_foxes/utils/TabWindroseAxes.images.html", "_foxes/utils/TabWindroseAxes.imshow.html", "_foxes/utils/TabWindroseAxes.in_axes.html", "_foxes/utils/TabWindroseAxes.indicate_inset.html", "_foxes/utils/TabWindroseAxes.indicate_inset_zoom.html", "_foxes/utils/TabWindroseAxes.inset_axes.html", "_foxes/utils/TabWindroseAxes.invert_xaxis.html", "_foxes/utils/TabWindroseAxes.invert_yaxis.html", "_foxes/utils/TabWindroseAxes.is_transform_set.html", "_foxes/utils/TabWindroseAxes.label_outer.html", "_foxes/utils/TabWindroseAxes.legend.html", "_foxes/utils/TabWindroseAxes.lines.html", "_foxes/utils/TabWindroseAxes.locator_params.html", "_foxes/utils/TabWindroseAxes.loglog.html", "_foxes/utils/TabWindroseAxes.magnitude_spectrum.html", "_foxes/utils/TabWindroseAxes.margins.html", "_foxes/utils/TabWindroseAxes.matshow.html", "_foxes/utils/TabWindroseAxes.minorticks_off.html", "_foxes/utils/TabWindroseAxes.minorticks_on.html", "_foxes/utils/TabWindroseAxes.mouseover.html", "_foxes/utils/TabWindroseAxes.name.html", "_foxes/utils/TabWindroseAxes.patches.html", "_foxes/utils/TabWindroseAxes.pchanged.html", "_foxes/utils/TabWindroseAxes.pcolor.html", "_foxes/utils/TabWindroseAxes.pcolorfast.html", "_foxes/utils/TabWindroseAxes.pcolormesh.html", "_foxes/utils/TabWindroseAxes.phase_spectrum.html", "_foxes/utils/TabWindroseAxes.pick.html", "_foxes/utils/TabWindroseAxes.pickable.html", "_foxes/utils/TabWindroseAxes.pie.html", "_foxes/utils/TabWindroseAxes.plot.html", "_foxes/utils/TabWindroseAxes.plot_date.html", "_foxes/utils/TabWindroseAxes.properties.html", "_foxes/utils/TabWindroseAxes.psd.html", "_foxes/utils/TabWindroseAxes.quiver.html", "_foxes/utils/TabWindroseAxes.quiverkey.html", "_foxes/utils/TabWindroseAxes.redraw_in_frame.html", "_foxes/utils/TabWindroseAxes.relim.html", "_foxes/utils/TabWindroseAxes.remove.html", "_foxes/utils/TabWindroseAxes.remove_callback.html", "_foxes/utils/TabWindroseAxes.reset_position.html", "_foxes/utils/TabWindroseAxes.scatter.html", "_foxes/utils/TabWindroseAxes.secondary_xaxis.html", "_foxes/utils/TabWindroseAxes.secondary_yaxis.html", "_foxes/utils/TabWindroseAxes.semilogx.html", "_foxes/utils/TabWindroseAxes.semilogy.html", "_foxes/utils/TabWindroseAxes.set.html", "_foxes/utils/TabWindroseAxes.set_adjustable.html", "_foxes/utils/TabWindroseAxes.set_agg_filter.html", "_foxes/utils/TabWindroseAxes.set_alpha.html", "_foxes/utils/TabWindroseAxes.set_anchor.html", "_foxes/utils/TabWindroseAxes.set_animated.html", "_foxes/utils/TabWindroseAxes.set_aspect.html", "_foxes/utils/TabWindroseAxes.set_autoscale_on.html", "_foxes/utils/TabWindroseAxes.set_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.set_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.set_axes_locator.html", "_foxes/utils/TabWindroseAxes.set_axis_off.html", "_foxes/utils/TabWindroseAxes.set_axis_on.html", "_foxes/utils/TabWindroseAxes.set_axisbelow.html", "_foxes/utils/TabWindroseAxes.set_box_aspect.html", "_foxes/utils/TabWindroseAxes.set_clip_box.html", "_foxes/utils/TabWindroseAxes.set_clip_on.html", "_foxes/utils/TabWindroseAxes.set_clip_path.html", "_foxes/utils/TabWindroseAxes.set_facecolor.html", "_foxes/utils/TabWindroseAxes.set_fc.html", "_foxes/utils/TabWindroseAxes.set_figure.html", "_foxes/utils/TabWindroseAxes.set_frame_on.html", "_foxes/utils/TabWindroseAxes.set_gid.html", "_foxes/utils/TabWindroseAxes.set_in_layout.html", "_foxes/utils/TabWindroseAxes.set_label.html", "_foxes/utils/TabWindroseAxes.set_legend.html", "_foxes/utils/TabWindroseAxes.set_mouseover.html", "_foxes/utils/TabWindroseAxes.set_navigate.html", "_foxes/utils/TabWindroseAxes.set_navigate_mode.html", "_foxes/utils/TabWindroseAxes.set_path_effects.html", "_foxes/utils/TabWindroseAxes.set_picker.html", "_foxes/utils/TabWindroseAxes.set_position.html", "_foxes/utils/TabWindroseAxes.set_prop_cycle.html", "_foxes/utils/TabWindroseAxes.set_radii_angle.html", "_foxes/utils/TabWindroseAxes.set_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.set_rasterized.html", "_foxes/utils/TabWindroseAxes.set_rgrids.html", "_foxes/utils/TabWindroseAxes.set_rlabel_position.html", "_foxes/utils/TabWindroseAxes.set_rlim.html", "_foxes/utils/TabWindroseAxes.set_rmax.html", "_foxes/utils/TabWindroseAxes.set_rmin.html", "_foxes/utils/TabWindroseAxes.set_rorigin.html", "_foxes/utils/TabWindroseAxes.set_rscale.html", "_foxes/utils/TabWindroseAxes.set_rticks.html", "_foxes/utils/TabWindroseAxes.set_sketch_params.html", "_foxes/utils/TabWindroseAxes.set_snap.html", "_foxes/utils/TabWindroseAxes.set_subplotspec.html", "_foxes/utils/TabWindroseAxes.set_theta_direction.html", "_foxes/utils/TabWindroseAxes.set_theta_offset.html", "_foxes/utils/TabWindroseAxes.set_theta_zero_location.html", "_foxes/utils/TabWindroseAxes.set_thetagrids.html", "_foxes/utils/TabWindroseAxes.set_thetalim.html", "_foxes/utils/TabWindroseAxes.set_thetamax.html", "_foxes/utils/TabWindroseAxes.set_thetamin.html", "_foxes/utils/TabWindroseAxes.set_title.html", "_foxes/utils/TabWindroseAxes.set_transform.html", "_foxes/utils/TabWindroseAxes.set_url.html", "_foxes/utils/TabWindroseAxes.set_visible.html", "_foxes/utils/TabWindroseAxes.set_xbound.html", "_foxes/utils/TabWindroseAxes.set_xlabel.html", "_foxes/utils/TabWindroseAxes.set_xlim.html", "_foxes/utils/TabWindroseAxes.set_xmargin.html", "_foxes/utils/TabWindroseAxes.set_xscale.html", "_foxes/utils/TabWindroseAxes.set_xticklabels.html", "_foxes/utils/TabWindroseAxes.set_xticks.html", "_foxes/utils/TabWindroseAxes.set_ybound.html", "_foxes/utils/TabWindroseAxes.set_ylabel.html", "_foxes/utils/TabWindroseAxes.set_ylim.html", "_foxes/utils/TabWindroseAxes.set_ymargin.html", "_foxes/utils/TabWindroseAxes.set_yscale.html", "_foxes/utils/TabWindroseAxes.set_yticklabels.html", "_foxes/utils/TabWindroseAxes.set_yticks.html", "_foxes/utils/TabWindroseAxes.set_zorder.html", "_foxes/utils/TabWindroseAxes.sharex.html", "_foxes/utils/TabWindroseAxes.sharey.html", "_foxes/utils/TabWindroseAxes.specgram.html", "_foxes/utils/TabWindroseAxes.spy.html", "_foxes/utils/TabWindroseAxes.stackplot.html", "_foxes/utils/TabWindroseAxes.stairs.html", "_foxes/utils/TabWindroseAxes.stale.html", "_foxes/utils/TabWindroseAxes.start_pan.html", "_foxes/utils/TabWindroseAxes.stem.html", "_foxes/utils/TabWindroseAxes.step.html", "_foxes/utils/TabWindroseAxes.sticky_edges.html", "_foxes/utils/TabWindroseAxes.streamplot.html", "_foxes/utils/TabWindroseAxes.table.html", "_foxes/utils/TabWindroseAxes.tables.html", "_foxes/utils/TabWindroseAxes.text.html", "_foxes/utils/TabWindroseAxes.texts.html", "_foxes/utils/TabWindroseAxes.tick_params.html", "_foxes/utils/TabWindroseAxes.ticklabel_format.html", "_foxes/utils/TabWindroseAxes.tricontour.html", "_foxes/utils/TabWindroseAxes.tricontourf.html", "_foxes/utils/TabWindroseAxes.tripcolor.html", "_foxes/utils/TabWindroseAxes.triplot.html", "_foxes/utils/TabWindroseAxes.twinx.html", "_foxes/utils/TabWindroseAxes.twiny.html", "_foxes/utils/TabWindroseAxes.update.html", "_foxes/utils/TabWindroseAxes.update_datalim.html", "_foxes/utils/TabWindroseAxes.update_from.html", "_foxes/utils/TabWindroseAxes.use_sticky_edges.html", "_foxes/utils/TabWindroseAxes.viewLim.html", "_foxes/utils/TabWindroseAxes.violin.html", "_foxes/utils/TabWindroseAxes.violinplot.html", "_foxes/utils/TabWindroseAxes.vlines.html", "_foxes/utils/TabWindroseAxes.xaxis_date.html", "_foxes/utils/TabWindroseAxes.xaxis_inverted.html", "_foxes/utils/TabWindroseAxes.xcorr.html", "_foxes/utils/TabWindroseAxes.yaxis_date.html", "_foxes/utils/TabWindroseAxes.yaxis_inverted.html", "_foxes/utils/TabWindroseAxes.zorder.html", "_foxes/utils/abl/neutral/calc_ws.html", "_foxes/utils/abl/neutral/logz.html", "_foxes/utils/abl/neutral/ustar.html", "_foxes/utils/abl/sheared/calc_ws.html", "_foxes/utils/abl/stable/calc_ws.html", "_foxes/utils/abl/stable/lgz.html", "_foxes/utils/abl/stable/logz.html", "_foxes/utils/abl/stable/psi.html", "_foxes/utils/abl/stable/ustar.html", "_foxes/utils/abl/unstable/calc_ws.html", "_foxes/utils/abl/unstable/logz.html", "_foxes/utils/abl/unstable/psi.html", "_foxes/utils/abl/unstable/ustar.html", "_foxes/utils/all_subclasses.html", "_foxes/utils/cubic_roots.html", "_foxes/utils/delta_wd.html", "_foxes/utils/exec_python.html", "_foxes/utils/geom2d/AreaGeometry.html", "_foxes/utils/geom2d/AreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/AreaGeometry.inverse.html", "_foxes/utils/geom2d/AreaGeometry.p_max.html", "_foxes/utils/geom2d/AreaGeometry.p_min.html", "_foxes/utils/geom2d/AreaGeometry.points_distance.html", "_foxes/utils/geom2d/AreaGeometry.points_inside.html", "_foxes/utils/geom2d/AreaIntersection.html", "_foxes/utils/geom2d/AreaIntersection.__new__.html", "_foxes/utils/geom2d/AreaUnion.html", "_foxes/utils/geom2d/AreaUnion.__init__.html", "_foxes/utils/geom2d/AreaUnion.add_to_figure.html", "_foxes/utils/geom2d/AreaUnion.inverse.html", "_foxes/utils/geom2d/AreaUnion.p_max.html", "_foxes/utils/geom2d/AreaUnion.p_min.html", "_foxes/utils/geom2d/AreaUnion.points_distance.html", "_foxes/utils/geom2d/AreaUnion.points_inside.html", "_foxes/utils/geom2d/Circle.html", "_foxes/utils/geom2d/Circle.__init__.html", "_foxes/utils/geom2d/Circle.add_to_figure.html", "_foxes/utils/geom2d/Circle.p_max.html", "_foxes/utils/geom2d/Circle.p_min.html", "_foxes/utils/geom2d/Circle.points_distance.html", "_foxes/utils/geom2d/Circle.points_inside.html", "_foxes/utils/geom2d/ClosedPolygon.html", "_foxes/utils/geom2d/ClosedPolygon.__init__.html", "_foxes/utils/geom2d/ClosedPolygon.add_to_figure.html", "_foxes/utils/geom2d/ClosedPolygon.p_max.html", "_foxes/utils/geom2d/ClosedPolygon.p_min.html", "_foxes/utils/geom2d/ClosedPolygon.points_distance.html", "_foxes/utils/geom2d/ClosedPolygon.points_inside.html", "_foxes/utils/geom2d/HalfPlane.html", "_foxes/utils/geom2d/HalfPlane.__init__.html", "_foxes/utils/geom2d/HalfPlane.add_to_figure.html", "_foxes/utils/geom2d/HalfPlane.inverse.html", "_foxes/utils/geom2d/HalfPlane.p_max.html", "_foxes/utils/geom2d/HalfPlane.p_min.html", "_foxes/utils/geom2d/HalfPlane.points_distance.html", "_foxes/utils/geom2d/HalfPlane.points_inside.html", "_foxes/utils/geom2d/InvertedAreaGeometry.html", "_foxes/utils/geom2d/InvertedAreaGeometry.__init__.html", "_foxes/utils/geom2d/InvertedAreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/InvertedAreaGeometry.inverse.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_max.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_min.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_distance.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_inside.html", "_foxes/utils/import_module.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__init__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.__str__.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.ana_deriv.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.calc_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.component_names.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_individual.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.finalize_population.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialize.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.initialized.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_components.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.n_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.rename_vars_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.var_names_int.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_float.html", "_foxes/utils/opt/constraints/AreaGeometryConstraint.vardeps_int.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.html", "_foxes/utils/opt/constraints/FarmBoundaryConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.html", "_foxes/utils/opt/constraints/MinDistConstraint.__init__.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_individual.html", "_foxes/utils/opt/constraints/MinDistConstraint.calc_population.html", "_foxes/utils/opt/constraints/MinDistConstraint.initialize.html", "_foxes/utils/opt/constraints/MinDistConstraint.n_components.html", "_foxes/utils/opt/constraints/MinDistConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmConstraint.html", "_foxes/utils/opt/core/FarmConstraint.__init__.html", "_foxes/utils/opt/core/FarmConstraint.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmConstraint.calc_individual.html", "_foxes/utils/opt/core/FarmConstraint.calc_population.html", "_foxes/utils/opt/core/FarmConstraint.farm.html", "_foxes/utils/opt/core/FarmConstraint.n_components.html", "_foxes/utils/opt/core/FarmConstraint.n_sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.print_models.html", "_foxes/utils/opt/core/FarmConstraint.sel_turbines.html", "_foxes/utils/opt/core/FarmConstraint.vardeps_float.html", "_foxes/utils/opt/core/FarmObjective.html", "_foxes/utils/opt/core/FarmObjective.__init__.html", "_foxes/utils/opt/core/FarmObjective.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmObjective.farm.html", "_foxes/utils/opt/core/FarmObjective.n_sel_turbines.html", "_foxes/utils/opt/core/FarmObjective.print_models.html", "_foxes/utils/opt/core/FarmObjective.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.html", "_foxes/utils/opt/core/FarmOptProblem.INT_INF.html", "_foxes/utils/opt/core/FarmOptProblem.__init__.html", "_foxes/utils/opt/core/FarmOptProblem.add_constraint.html", "_foxes/utils/opt/core/FarmOptProblem.add_objective.html", "_foxes/utils/opt/core/FarmOptProblem.add_to_layout_figure.html", "_foxes/utils/opt/core/FarmOptProblem.all_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.apply_individual.html", "_foxes/utils/opt/core/FarmOptProblem.apply_population.html", "_foxes/utils/opt/core/FarmOptProblem.calc_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_individual.html", "_foxes/utils/opt/core/FarmOptProblem.check_constraints_population.html", "_foxes/utils/opt/core/FarmOptProblem.constraints_tol.html", "_foxes/utils/opt/core/FarmOptProblem.counter.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_individual.html", "_foxes/utils/opt/core/FarmOptProblem.evaluate_population.html", "_foxes/utils/opt/core/FarmOptProblem.farm.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_individual.html", "_foxes/utils/opt/core/FarmOptProblem.finalize_population.html", "_foxes/utils/opt/core/FarmOptProblem.get_gradients.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.initial_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.initialize.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.max_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.maximize_objs.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_float.html", "_foxes/utils/opt/core/FarmOptProblem.min_values_int.html", "_foxes/utils/opt/core/FarmOptProblem.n_constraints.html", "_foxes/utils/opt/core/FarmOptProblem.n_objectives.html", "_foxes/utils/opt/core/FarmOptProblem.n_sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_float.html", "_foxes/utils/opt/core/FarmOptProblem.n_vars_int.html", "_foxes/utils/opt/core/FarmOptProblem.parse_tvar.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_individual.html", "_foxes/utils/opt/core/FarmOptProblem.prob_res_einsum_population.html", "_foxes/utils/opt/core/FarmOptProblem.sel_turbines.html", "_foxes/utils/opt/core/FarmOptProblem.tvar.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmOptProblem.update_problem_population.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_float.html", "_foxes/utils/opt/core/FarmOptProblem.var_names_int.html", "_foxes/utils/opt/core/FarmVarsProblem.html", "_foxes/utils/opt/core/FarmVarsProblem.initialize.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.opt2farm_vars_population.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_individual.html", "_foxes/utils/opt/core/FarmVarsProblem.update_problem_population.html", "_foxes/utils/opt/core/PopStates.html", "_foxes/utils/opt/core/PopStates.__init__.html", "_foxes/utils/opt/core/PopStates.calculate.html", "_foxes/utils/opt/core/PopStates.initialize.html", "_foxes/utils/opt/core/PopStates.load_data.html", "_foxes/utils/opt/core/PopStates.output_point_vars.html", "_foxes/utils/opt/core/PopStates.size.html", "_foxes/utils/opt/core/PopStates.weights.html", "_foxes/utils/opt/objectives/FarmVarObjective.html", "_foxes/utils/opt/objectives/FarmVarObjective.__init__.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.calc_population.html", "_foxes/utils/opt/objectives/FarmVarObjective.finalize_individual.html", "_foxes/utils/opt/objectives/FarmVarObjective.initialize.html", "_foxes/utils/opt/objectives/FarmVarObjective.maximize.html", "_foxes/utils/opt/objectives/FarmVarObjective.n_components.html", "_foxes/utils/opt/objectives/FarmVarObjective.vardeps_float.html", "_foxes/utils/opt/objectives/MaxFarmPower.html", "_foxes/utils/opt/objectives/MaxFarmPower.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.html", "_foxes/utils/opt/objectives/MaxNTurbines.__init__.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_individual.html", "_foxes/utils/opt/objectives/MaxNTurbines.calc_population.html", "_foxes/utils/opt/objectives/MaxNTurbines.maximize.html", "_foxes/utils/opt/objectives/MaxNTurbines.n_components.html", "_foxes/utils/opt/objectives/MinimalMaxTI.html", "_foxes/utils/opt/objectives/MinimalMaxTI.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.html", "_foxes/utils/opt/problems/OptFarmVars.__init__.html", "_foxes/utils/opt/problems/OptFarmVars.add_var.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.initial_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.initialize.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.max_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_float.html", "_foxes/utils/opt/problems/OptFarmVars.min_values_int.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/OptFarmVars.opt2farm_vars_population.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_float.html", "_foxes/utils/opt/problems/OptFarmVars.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsBoundary.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsCMinN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.check_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsConstraint.get_bounds.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsMinDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintsValid.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/constraintscdist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.initialize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxDensity.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMaxGridSpacing.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesMeMiMaDist.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOFixN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_individual.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.calc_population.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMaxN.n_components.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesOMinN.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.__init__.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivesObjective.maximize.html", "_foxes/utils/opt/problems/layout/geom_layouts/objectivescdist.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayout.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomLayoutGridded.var_names_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrid.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.__init__.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_individual.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.apply_population.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.get_fig.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initial_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.initialize.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.max_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.min_values_int.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_float.html", "_foxes/utils/opt/problems/layout/geom_layoutsGeomRegGrids.var_names_int.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutFarmLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initial_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.max_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.min_values_int.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_individual.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.update_problem_population.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_float.html", "_foxes/utils/opt/problems/layoutRegGridsLayoutOptProblem.var_names_int.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.ANGLE.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.OFFSET_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_X.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.SPACING_Y.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.__init__.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.finalize_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initial_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.initialize.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.max_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.min_values_float.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_individual.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.opt2farm_vars_population.html", "_foxes/utils/opt/problems/layoutRegularLayoutOptProblem.var_names_float.html", "_foxes/utils/random_xy_square.html", "_foxes/utils/read_shp.html", "_foxes/utils/read_shp_polygons.html", "_foxes/utils/read_tab_file.html", "_foxes/utils/runners/DaskRunner.html", "_foxes/utils/runners/DaskRunner.__init__.html", "_foxes/utils/runners/DaskRunner.finalize.html", "_foxes/utils/runners/DaskRunner.initialize.html", "_foxes/utils/runners/DaskRunner.is_distributed.html", "_foxes/utils/runners/DaskRunner.print.html", "_foxes/utils/runners/DaskRunner.run.html", "_foxes/utils/runners/DefaultRunner.html", "_foxes/utils/runners/DefaultRunner.run.html", "_foxes/utils/runners/Runner.html", "_foxes/utils/runners/Runner.__init__.html", "_foxes/utils/runners/Runner.finalize.html", "_foxes/utils/runners/Runner.initialize.html", "_foxes/utils/runners/Runner.initialized.html", "_foxes/utils/runners/Runner.run.html", "_foxes/utils/shp2csv.html", "_foxes/utils/shp2geom2d.html", "_foxes/utils/sqrt_reg.html", "_foxes/utils/two_circles/area.html", "_foxes/utils/two_circles/calc_area.html", "_foxes/utils/uv2wd.html", "_foxes/utils/wd2uv.html", "_foxes/utils/wd2wdvec.html", "_foxes/utils/wdvec2wd.html", "_foxes/utils/write_nc.html", "_foxes/variables/AMB_CAP.html", "_foxes/variables/AMB_CT.html", "_foxes/variables/AMB_P.html", "_foxes/variables/AMB_REWS.html", "_foxes/variables/AMB_REWS2.html", "_foxes/variables/AMB_REWS3.html", "_foxes/variables/AMB_RHO.html", "_foxes/variables/AMB_T.html", "_foxes/variables/AMB_TI.html", "_foxes/variables/AMB_WD.html", "_foxes/variables/AMB_WS.html", "_foxes/variables/AMB_YAW.html", "_foxes/variables/AMB_YAWM.html", "_foxes/variables/AMB_YLD.html", "_foxes/variables/CAP.html", "_foxes/variables/CT.html", "_foxes/variables/D.html", "_foxes/variables/EFF.html", "_foxes/variables/H.html", "_foxes/variables/K.html", "_foxes/variables/KB.html", "_foxes/variables/KTI.html", "_foxes/variables/MAX_P.html", "_foxes/variables/MOL.html", "_foxes/variables/ORDER.html", "_foxes/variables/P.html", "_foxes/variables/PA_ALPHA.html", "_foxes/variables/PA_BETA.html", "_foxes/variables/REWS.html", "_foxes/variables/REWS2.html", "_foxes/variables/REWS3.html", "_foxes/variables/RHO.html", "_foxes/variables/SHEAR.html", "_foxes/variables/T.html", "_foxes/variables/TI.html", "_foxes/variables/TXYH.html", "_foxes/variables/WD.html", "_foxes/variables/WEIGHT.html", "_foxes/variables/WS.html", "_foxes/variables/X.html", "_foxes/variables/Y.html", "_foxes/variables/YAW.html", "_foxes/variables/YAWM.html", "_foxes/variables/YLD.html", "_foxes/variables/Z0.html", "_foxes/variables/amb2var.html", "_foxes/variables/var2amb.html", "api.html", "api_algorithms.html", "api_algorithms_downwind.html", "api_algorithms_iterative.html", "api_algorithms_sequential.html", "api_constants.html", "api_core.html", "api_data.html", "api_foxes.html", "api_input.html", "api_models.html", "api_opt.html", "api_opt_problems.html", "api_opt_problems_geom.html", "api_output.html", "api_utils.html", "api_utils_abl.html", "api_variables.html", "api_wake_models.html", "citation.html", "examples.html", "history.html", "index.html", "installation.html", "notebooks/blockage_comparison.html", "notebooks/blockage_farm.html", "notebooks/data.html", "notebooks/heterogeneous.html", "notebooks/layout_opt.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/overview.html", "notebooks/power_mask.html", "notebooks/sector_man.html", "notebooks/sequential.html", "notebooks/single_row.html", "notebooks/timelines.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html", "testing.html"]})