Search.setIndex({"alltitles": {"API": [[1692, "api"]], "Acknowledgements": [[1711, "acknowledgements"]], "Ambient states data": [[1716, "Ambient-states-data"]], "Attributes": [[0, "attributes"], [10, "attributes"], [18, "attributes"], [46, "attributes"], [52, "attributes"], [56, "attributes"], [60, "attributes"], [65, "attributes"], [69, "attributes"], [74, "attributes"], [80, "attributes"], [85, "attributes"], [95, "attributes"], [308, "attributes"], [325, "attributes"], [335, "attributes"], [346, "attributes"], [356, "attributes"], [362, "attributes"], [379, "attributes"], [392, "attributes"], [404, "attributes"], [410, "attributes"], [434, "attributes"], [443, "attributes"], [459, "attributes"], [474, "attributes"], [490, "attributes"], [498, "attributes"], [503, "attributes"], [523, "attributes"], [531, "attributes"], [552, "attributes"], [567, "attributes"], [574, "attributes"], [577, "attributes"], [581, "attributes"], [590, "attributes"], [594, "attributes"], [603, "attributes"], [609, "attributes"], [618, "attributes"], [626, "attributes"], [636, "attributes"], [643, "attributes"], [650, "attributes"], [655, "attributes"], [660, "attributes"], [667, "attributes"], [673, "attributes"], [678, "attributes"], [685, "attributes"], [690, "attributes"], [701, "attributes"], [713, "attributes"], [721, "attributes"], [729, "attributes"], [735, "attributes"], [742, "attributes"], [746, "attributes"], [750, "attributes"], [754, "attributes"], [758, "attributes"], [765, "attributes"], [769, "attributes"], [775, "attributes"], [780, "attributes"], [788, "attributes"], [795, "attributes"], [802, "attributes"], [813, "attributes"], [830, "attributes"], [838, "attributes"], [845, "attributes"], [853, "attributes"], [860, "attributes"], [867, "attributes"], [874, "attributes"], [880, "attributes"], [886, "attributes"], [909, "attributes"], [914, "attributes"], [920, "attributes"], [928, "attributes"], [933, "attributes"], [938, "attributes"], [943, "attributes"], [948, "attributes"], [954, "attributes"], [960, "attributes"], [966, "attributes"], [972, "attributes"], [978, "attributes"], [984, "attributes"], [990, "attributes"], [996, "attributes"], [1002, "attributes"], [1007, "attributes"], [1016, "attributes"], [1043, "attributes"], [1049, "attributes"], [1052, "attributes"], [1062, "attributes"], [1065, "attributes"], [1070, "attributes"], [1078, "attributes"], [1081, "attributes"], [1086, "attributes"], [1090, "attributes"], [1098, "attributes"], [1101, "attributes"], [1107, "attributes"], [1115, "attributes"], [1547, "attributes"], [1574, "attributes"], [1582, "attributes"], [1589, "attributes"], [1596, "attributes"], [1618, "attributes"]], "Blockage modelling 1": [[1715, "Blockage-modelling-1"]], "Blockage modelling 2": [[1714, "Blockage-modelling-2"]], "CentreRotor": [[1722, "CentreRotor"]], "Citation": [[1708, "citation"]], "Classes": [[1122, "classes"]], "Contents": [[1711, "contents"]], "Contributing": [[1711, "contributing"]], "DTU-10MW-D178d3-H119.csv": [[1716, "DTU-10MW-D178d3-H119.csv"]], "Developers": [[1712, "developers"], [1712, "id5"]], "Discouraged": [[1351, null], [1366, null], [1490, null], [1499, null], [1499, null], [1506, null], [1506, null], [1523, null]], "Downwind algorithm": [[1694, "downwind-algorithm"]], "Downwind algorithm models": [[1694, "downwind-algorithm-models"]], "Dynamic wakes 1": [[1726, "Dynamic-wakes-1"]], "Dynamic wakes 2": [[1724, "Dynamic-wakes-2"]], "Examples": [[116, "examples"], [188, "examples"], [235, "examples"], [276, "examples"], [278, "examples"], [1246, "examples"], [1249, "examples"], [1250, "examples"], [1251, "examples"], [1280, "examples"], [1394, "examples"], [1401, "examples"], [1431, "examples"], [1432, "examples"], [1468, "examples"], [1496, "examples"], [1503, "examples"], [1519, "examples"], [1523, "examples"], [1525, "examples"], [1709, "examples"]], "File paths": [[1716, "File-paths"]], "GridRotor": [[1722, "GridRotor"]], "Ground models": [[1713, "ground-models"]], "Heterogeneous flow": [[1717, "Heterogeneous-flow"]], "Hint": [[1412, null], [1414, null]], "History": [[1710, "history"]], "IEA-15MW-D240-H150.csv": [[1716, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[1716, "IWT-7d5MW-D164-H100.csv"]], "Induction model comparison": [[1714, "Induction-model-comparison"]], "Installation": [[1712, "installation"]], "Installation via conda": [[1712, "installation-via-conda"]], "Installation via pip": [[1712, "installation-via-pip"]], "Iterative algorithm": [[1695, "iterative-algorithm"]], "Iterative algorithm models": [[1695, "iterative-algorithm-models"]], "Journal paper": [[1708, "journal-paper"]], "LevelRotor": [[1722, "LevelRotor"]], "License": [[1711, "license"]], "Model types": [[1713, "model-types"]], "Models": [[1713, "models"]], "Multi-height wind data": [[1719, "Multi-height-wind-data"]], "NREL-5MW-D126-H90.csv": [[1716, "NREL-5MW-D126-H90.csv"]], "Note": [[1143, null], [1206, null], [1257, null], [1259, null], [1286, null], [1306, null], [1354, null], [1369, null], [1419, null], [1518, null], [1527, null], [1527, null], [1528, null], [1528, null]], "Notes": [[577, "notes"], [802, "notes"], [830, "notes"], [838, "notes"], [845, "notes"], [852, "notes"], [860, "notes"], [867, "notes"], [874, "notes"], [880, "notes"], [886, "notes"], [914, "notes"], [1228, "notes"], [1240, "notes"], [1241, "notes"], [1244, "notes"], [1248, "notes"], [1255, "notes"], [1273, "notes"], [1274, "notes"], [1275, "notes"], [1277, "notes"], [1278, "notes"], [1280, "notes"], [1281, "notes"], [1352, "notes"], [1353, "notes"], [1358, "notes"], [1367, "notes"], [1368, "notes"], [1373, "notes"], [1382, "notes"], [1386, "notes"], [1387, "notes"], [1390, "notes"], [1404, "notes"], [1405, "notes"], [1412, "notes"], [1414, "notes"], [1418, "notes"], [1419, "notes"], [1420, "notes"], [1422, "notes"], [1423, "notes"], [1430, "notes"], [1436, "notes"], [1448, "notes"], [1452, "notes"], [1496, "notes"], [1498, "notes"], [1500, "notes"], [1503, "notes"], [1505, "notes"], [1507, "notes"], [1511, "notes"], [1516, "notes"], [1517, "notes"], [1528, "notes"], [1531, "notes"], [1532, "notes"], [1543, "notes"]], "Optimization": [[1730, "optimization"]], "Other Parameters": [[1228, "other-parameters"], [1238, "other-parameters"], [1246, "other-parameters"], [1247, "other-parameters"], [1249, "other-parameters"], [1250, "other-parameters"], [1251, "other-parameters"], [1252, "other-parameters"], [1254, "other-parameters"], [1255, "other-parameters"], [1256, "other-parameters"], [1257, "other-parameters"], [1258, "other-parameters"], [1265, "other-parameters"], [1269, "other-parameters"], [1270, "other-parameters"], [1273, "other-parameters"], [1277, "other-parameters"], [1279, "other-parameters"], [1281, "other-parameters"], [1282, "other-parameters"], [1283, "other-parameters"], [1385, "other-parameters"], [1386, "other-parameters"], [1387, "other-parameters"], [1388, "other-parameters"], [1390, "other-parameters"], [1399, "other-parameters"], [1401, "other-parameters"], [1403, "other-parameters"], [1405, "other-parameters"], [1412, "other-parameters"], [1413, "other-parameters"], [1414, "other-parameters"], [1415, "other-parameters"], [1419, "other-parameters"], [1420, "other-parameters"], [1422, "other-parameters"], [1423, "other-parameters"], [1430, "other-parameters"], [1431, "other-parameters"], [1432, "other-parameters"], [1472, "other-parameters"], [1486, "other-parameters"], [1490, "other-parameters"], [1495, "other-parameters"], [1502, "other-parameters"], [1512, "other-parameters"], [1514, "other-parameters"], [1521, "other-parameters"], [1523, "other-parameters"], [1525, "other-parameters"], [1527, "other-parameters"], [1528, "other-parameters"], [1540, "other-parameters"], [1543, "other-parameters"]], "Overview - how to setup foxes": [[1731, "overview-how-to-setup-foxes"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [16, "parameters"], [19, "parameters"], [22, "parameters"], [23, "parameters"], [29, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [44, "parameters"], [45, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [58, "parameters"], [59, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [67, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [75, "parameters"], [76, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [96, "parameters"], [99, "parameters"], [100, "parameters"], [103, "parameters"], [309, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [324, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [331, "parameters"], [333, "parameters"], [334, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [340, "parameters"], [343, "parameters"], [345, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [378, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [388, "parameters"], [391, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [400, "parameters"], [401, "parameters"], [403, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [411, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [417, "parameters"], [418, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [426, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [433, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [441, "parameters"], [442, "parameters"], [444, "parameters"], [446, "parameters"], [447, "parameters"], [449, "parameters"], [451, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [460, "parameters"], [461, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [472, "parameters"], [473, "parameters"], [475, "parameters"], [476, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [491, "parameters"], [492, "parameters"], [494, "parameters"], [495, "parameters"], [497, "parameters"], [499, "parameters"], [500, "parameters"], [502, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [513, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [522, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [530, "parameters"], [533, "parameters"], [534, "parameters"], [535, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [540, "parameters"], [543, "parameters"], [545, "parameters"], [546, "parameters"], [549, "parameters"], [550, "parameters"], [551, "parameters"], [553, "parameters"], [561, "parameters"], [562, "parameters"], [563, "parameters"], [564, "parameters"], [565, "parameters"], [566, "parameters"], [569, "parameters"], [570, "parameters"], [571, "parameters"], [572, "parameters"], [573, "parameters"], [575, "parameters"], [576, "parameters"], [578, "parameters"], [579, "parameters"], [582, "parameters"], [584, "parameters"], [585, "parameters"], [591, "parameters"], [592, "parameters"], [593, "parameters"], [595, "parameters"], [597, "parameters"], [598, "parameters"], [600, "parameters"], [602, "parameters"], [604, "parameters"], [606, "parameters"], [607, "parameters"], [610, "parameters"], [611, "parameters"], [612, "parameters"], [613, "parameters"], [616, "parameters"], [617, "parameters"], [619, "parameters"], [620, "parameters"], [621, "parameters"], [622, "parameters"], [624, "parameters"], [625, "parameters"], [627, "parameters"], [628, "parameters"], [629, "parameters"], [632, "parameters"], [633, "parameters"], [637, "parameters"], [640, "parameters"], [644, "parameters"], [647, "parameters"], [651, "parameters"], [653, "parameters"], [654, "parameters"], [656, "parameters"], [657, "parameters"], [658, "parameters"], [659, "parameters"], [661, "parameters"], [663, "parameters"], [664, "parameters"], [665, "parameters"], [668, "parameters"], [669, "parameters"], [670, "parameters"], [671, "parameters"], [674, "parameters"], [675, "parameters"], [676, "parameters"], [677, "parameters"], [679, "parameters"], [680, "parameters"], [681, "parameters"], [682, "parameters"], [683, "parameters"], [686, "parameters"], [687, "parameters"], [688, "parameters"], [689, "parameters"], [691, "parameters"], [693, "parameters"], [694, "parameters"], [696, "parameters"], [697, "parameters"], [699, "parameters"], [700, "parameters"], [702, "parameters"], [704, "parameters"], [705, "parameters"], [707, "parameters"], [709, "parameters"], [711, "parameters"], [712, "parameters"], [714, "parameters"], [716, "parameters"], [717, "parameters"], [718, "parameters"], [719, "parameters"], [720, "parameters"], [722, "parameters"], [724, "parameters"], [725, "parameters"], [726, "parameters"], [727, "parameters"], [728, "parameters"], [730, "parameters"], [731, "parameters"], [732, "parameters"], [733, "parameters"], [734, "parameters"], [736, "parameters"], [738, "parameters"], [739, "parameters"], [740, "parameters"], [741, "parameters"], [743, "parameters"], [744, "parameters"], [747, "parameters"], [748, "parameters"], [751, "parameters"], [752, "parameters"], [755, "parameters"], [756, "parameters"], [759, "parameters"], [760, "parameters"], [763, "parameters"], [766, "parameters"], [767, "parameters"], [770, "parameters"], [771, "parameters"], [772, "parameters"], [773, "parameters"], [776, "parameters"], [777, "parameters"], [778, "parameters"], [779, "parameters"], [781, "parameters"], [783, "parameters"], [784, "parameters"], [785, "parameters"], [786, "parameters"], [787, "parameters"], [789, "parameters"], [791, "parameters"], [792, "parameters"], [793, "parameters"], [794, "parameters"], [796, "parameters"], [798, "parameters"], [799, "parameters"], [800, "parameters"], [801, "parameters"], [803, "parameters"], [805, "parameters"], [806, "parameters"], [807, "parameters"], [808, "parameters"], [811, "parameters"], [812, "parameters"], [814, "parameters"], [815, "parameters"], [816, "parameters"], [817, "parameters"], [818, "parameters"], [821, "parameters"], [822, "parameters"], [823, "parameters"], [824, "parameters"], [825, "parameters"], [826, "parameters"], [827, "parameters"], [828, "parameters"], [831, "parameters"], [833, "parameters"], [834, "parameters"], [835, "parameters"], [836, "parameters"], [839, "parameters"], [841, "parameters"], [842, "parameters"], [843, "parameters"], [846, "parameters"], [848, "parameters"], [849, "parameters"], [850, "parameters"], [854, "parameters"], [856, "parameters"], [857, "parameters"], [858, "parameters"], [861, "parameters"], [863, "parameters"], [864, "parameters"], [865, "parameters"], [868, "parameters"], [870, "parameters"], [871, "parameters"], [872, "parameters"], [875, "parameters"], [877, "parameters"], [878, "parameters"], [881, "parameters"], [883, "parameters"], [884, "parameters"], [901, "parameters"], [902, "parameters"], [904, "parameters"], [905, "parameters"], [906, "parameters"], [910, "parameters"], [912, "parameters"], [913, "parameters"], [915, "parameters"], [917, "parameters"], [918, "parameters"], [921, "parameters"], [923, "parameters"], [924, "parameters"], [925, "parameters"], [926, "parameters"], [929, "parameters"], [931, "parameters"], [932, "parameters"], [934, "parameters"], [936, "parameters"], [937, "parameters"], [939, "parameters"], [941, "parameters"], [942, "parameters"], [944, "parameters"], [946, "parameters"], [947, "parameters"], [949, "parameters"], [951, "parameters"], [952, "parameters"], [953, "parameters"], [955, "parameters"], [957, "parameters"], [958, "parameters"], [959, "parameters"], [961, "parameters"], [963, "parameters"], [964, "parameters"], [965, "parameters"], [967, "parameters"], [969, "parameters"], [970, "parameters"], [971, "parameters"], [973, "parameters"], [975, "parameters"], [976, "parameters"], [977, "parameters"], [979, "parameters"], [981, "parameters"], [982, "parameters"], [983, "parameters"], [985, "parameters"], [987, "parameters"], [988, "parameters"], [989, "parameters"], [991, "parameters"], [993, "parameters"], [994, "parameters"], [995, "parameters"], [997, "parameters"], [999, "parameters"], [1000, "parameters"], [1001, "parameters"], [1003, "parameters"], [1004, "parameters"], [1005, "parameters"], [1008, "parameters"], [1009, "parameters"], [1012, "parameters"], [1013, "parameters"], [1014, "parameters"], [1015, "parameters"], [1017, "parameters"], [1018, "parameters"], [1019, "parameters"], [1021, "parameters"], [1022, "parameters"], [1023, "parameters"], [1024, "parameters"], [1025, "parameters"], [1027, "parameters"], [1028, "parameters"], [1029, "parameters"], [1030, "parameters"], [1031, "parameters"], [1032, "parameters"], [1033, "parameters"], [1034, "parameters"], [1035, "parameters"], [1037, "parameters"], [1038, "parameters"], [1039, "parameters"], [1040, "parameters"], [1041, "parameters"], [1042, "parameters"], [1044, "parameters"], [1045, "parameters"], [1046, "parameters"], [1048, "parameters"], [1050, "parameters"], [1051, "parameters"], [1053, "parameters"], [1054, "parameters"], [1055, "parameters"], [1057, "parameters"], [1058, "parameters"], [1059, "parameters"], [1060, "parameters"], [1061, "parameters"], [1063, "parameters"], [1064, "parameters"], [1066, "parameters"], [1068, "parameters"], [1069, "parameters"], [1071, "parameters"], [1072, "parameters"], [1073, "parameters"], [1074, "parameters"], [1075, "parameters"], [1076, "parameters"], [1077, "parameters"], [1079, "parameters"], [1080, "parameters"], [1082, "parameters"], [1083, "parameters"], [1085, "parameters"], [1087, "parameters"], [1088, "parameters"], [1089, "parameters"], [1090, "parameters"], [1091, "parameters"], [1092, "parameters"], [1093, "parameters"], [1094, "parameters"], [1095, "parameters"], [1096, "parameters"], [1097, "parameters"], [1100, "parameters"], [1104, "parameters"], [1105, "parameters"], [1106, "parameters"], [1108, "parameters"], [1110, "parameters"], [1111, "parameters"], [1120, "parameters"], [1121, "parameters"], [1123, "parameters"], [1126, "parameters"], [1131, "parameters"], [1137, "parameters"], [1157, "parameters"], [1158, "parameters"], [1159, "parameters"], [1161, "parameters"], [1166, "parameters"], [1169, "parameters"], [1181, "parameters"], [1182, "parameters"], [1183, "parameters"], [1187, "parameters"], [1188, "parameters"], [1194, "parameters"], [1228, "parameters"], [1230, "parameters"], [1238, "parameters"], [1239, "parameters"], [1240, "parameters"], [1241, "parameters"], [1243, "parameters"], [1244, "parameters"], [1246, "parameters"], [1247, "parameters"], [1248, "parameters"], [1249, "parameters"], [1250, "parameters"], [1251, "parameters"], [1252, "parameters"], [1253, "parameters"], [1254, "parameters"], [1255, "parameters"], [1256, "parameters"], [1257, "parameters"], [1258, "parameters"], [1259, "parameters"], [1263, "parameters"], [1265, "parameters"], [1267, "parameters"], [1269, "parameters"], [1270, "parameters"], [1273, "parameters"], [1274, "parameters"], [1275, "parameters"], [1277, "parameters"], [1279, "parameters"], [1280, "parameters"], [1281, "parameters"], [1282, "parameters"], [1283, "parameters"], [1284, "parameters"], [1306, "parameters"], [1327, "parameters"], [1344, "parameters"], [1345, "parameters"], [1354, "parameters"], [1363, "parameters"], [1365, "parameters"], [1369, "parameters"], [1378, "parameters"], [1380, "parameters"], [1382, "parameters"], [1385, "parameters"], [1386, "parameters"], [1387, "parameters"], [1388, "parameters"], [1390, "parameters"], [1392, "parameters"], [1393, "parameters"], [1394, "parameters"], [1398, "parameters"], [1399, "parameters"], [1401, "parameters"], [1402, "parameters"], [1403, "parameters"], [1404, "parameters"], [1405, "parameters"], [1412, "parameters"], [1413, "parameters"], [1414, "parameters"], [1415, "parameters"], [1418, "parameters"], [1419, "parameters"], [1420, "parameters"], [1422, "parameters"], [1423, "parameters"], [1424, "parameters"], [1426, "parameters"], [1430, "parameters"], [1431, "parameters"], [1432, "parameters"], [1433, "parameters"], [1434, "parameters"], [1436, "parameters"], [1437, "parameters"], [1438, "parameters"], [1439, "parameters"], [1440, "parameters"], [1441, "parameters"], [1442, "parameters"], [1443, "parameters"], [1444, "parameters"], [1445, "parameters"], [1448, "parameters"], [1449, "parameters"], [1450, "parameters"], [1451, "parameters"], [1452, "parameters"], [1453, "parameters"], [1455, "parameters"], [1456, "parameters"], [1457, "parameters"], [1458, "parameters"], [1459, "parameters"], [1460, "parameters"], [1462, "parameters"], [1463, "parameters"], [1465, "parameters"], [1466, "parameters"], [1467, "parameters"], [1468, "parameters"], [1470, "parameters"], [1471, "parameters"], [1472, "parameters"], [1473, "parameters"], [1475, "parameters"], [1476, "parameters"], [1477, "parameters"], [1480, "parameters"], [1481, "parameters"], [1485, "parameters"], [1486, "parameters"], [1490, "parameters"], [1491, "parameters"], [1492, "parameters"], [1493, "parameters"], [1494, "parameters"], [1495, "parameters"], [1496, "parameters"], [1497, "parameters"], [1498, "parameters"], [1499, "parameters"], [1500, "parameters"], [1501, "parameters"], [1502, "parameters"], [1503, "parameters"], [1504, "parameters"], [1505, "parameters"], [1506, "parameters"], [1507, "parameters"], [1508, "parameters"], [1511, "parameters"], [1512, "parameters"], [1513, "parameters"], [1514, "parameters"], [1516, "parameters"], [1517, "parameters"], [1518, "parameters"], [1520, "parameters"], [1521, "parameters"], [1523, "parameters"], [1525, "parameters"], [1526, "parameters"], [1527, "parameters"], [1528, "parameters"], [1529, "parameters"], [1530, "parameters"], [1533, "parameters"], [1534, "parameters"], [1538, "parameters"], [1539, "parameters"], [1540, "parameters"], [1541, "parameters"], [1543, "parameters"], [1544, "parameters"], [1548, "parameters"], [1550, "parameters"], [1551, "parameters"], [1552, "parameters"], [1553, "parameters"], [1554, "parameters"], [1555, "parameters"], [1556, "parameters"], [1557, "parameters"], [1558, "parameters"], [1559, "parameters"], [1560, "parameters"], [1561, "parameters"], [1562, "parameters"], [1563, "parameters"], [1564, "parameters"], [1566, "parameters"], [1570, "parameters"], [1571, "parameters"], [1573, "parameters"], [1575, "parameters"], [1576, "parameters"], [1580, "parameters"], [1581, "parameters"], [1583, "parameters"], [1584, "parameters"], [1587, "parameters"], [1588, "parameters"], [1590, "parameters"], [1591, "parameters"], [1594, "parameters"], [1595, "parameters"], [1597, "parameters"], [1598, "parameters"], [1602, "parameters"], [1603, "parameters"], [1605, "parameters"], [1606, "parameters"], [1610, "parameters"], [1611, "parameters"], [1612, "parameters"], [1613, "parameters"], [1614, "parameters"], [1615, "parameters"], [1616, "parameters"], [1617, "parameters"], [1619, "parameters"], [1624, "parameters"], [1626, "parameters"], [1632, "parameters"], [1633, "parameters"], [1634, "parameters"], [1635, "parameters"], [1636, "parameters"], [1637, "parameters"], [1638, "parameters"], [1639, "parameters"], [1640, "parameters"], [1641, "parameters"], [1642, "parameters"]], "Partial wakes": [[1713, "partial-wakes"]], "Partial wakes verification": [[1720, "Partial-wakes-verification"]], "Point models": [[1713, "point-models"]], "Power and thrust curves": [[1716, "Power-and-thrust-curves"]], "Power mask": [[1721, "Power-mask"]], "Preparation (optional)": [[1712, "preparation-optional"]], "Public members": [[0, "public-members"], [10, "public-members"], [18, "public-members"], [39, "public-members"], [42, "public-members"], [46, "public-members"], [52, "public-members"], [56, "public-members"], [60, "public-members"], [65, "public-members"], [69, "public-members"], [74, "public-members"], [78, "public-members"], [80, "public-members"], [85, "public-members"], [89, "public-members"], [94, "public-members"], [105, "public-members"], [230, "public-members"], [308, "public-members"], [323, "public-members"], [325, "public-members"], [332, "public-members"], [335, "public-members"], [344, "public-members"], [346, "public-members"], [356, "public-members"], [362, "public-members"], [369, "public-members"], [370, "public-members"], [377, "public-members"], [379, "public-members"], [392, "public-members"], [399, "public-members"], [404, "public-members"], [410, "public-members"], [420, "public-members"], [427, "public-members"], [434, "public-members"], [438, "public-members"], [440, "public-members"], [443, "public-members"], [448, "public-members"], [452, "public-members"], [459, "public-members"], [465, "public-members"], [471, "public-members"], [474, "public-members"], [479, "public-members"], [490, "public-members"], [498, "public-members"], [501, "public-members"], [503, "public-members"], [514, "public-members"], [516, "public-members"], [523, "public-members"], [531, "public-members"], [544, "public-members"], [547, "public-members"], [552, "public-members"], [567, "public-members"], [574, "public-members"], [577, "public-members"], [580, "public-members"], [581, "public-members"], [587, "public-members"], [589, "public-members"], [590, "public-members"], [594, "public-members"], [599, "public-members"], [601, "public-members"], [603, "public-members"], [609, "public-members"], [615, "public-members"], [618, "public-members"], [623, "public-members"], [626, "public-members"], [630, "public-members"], [636, "public-members"], [643, "public-members"], [650, "public-members"], [655, "public-members"], [660, "public-members"], [667, "public-members"], [673, "public-members"], [678, "public-members"], [685, "public-members"], [690, "public-members"], [695, "public-members"], [698, "public-members"], [701, "public-members"], [706, "public-members"], [708, "public-members"], [710, "public-members"], [713, "public-members"], [721, "public-members"], [729, "public-members"], [735, "public-members"], [742, "public-members"], [746, "public-members"], [750, "public-members"], [754, "public-members"], [758, "public-members"], [762, "public-members"], [765, "public-members"], [769, "public-members"], [775, "public-members"], [780, "public-members"], [788, "public-members"], [795, "public-members"], [802, "public-members"], [810, "public-members"], [813, "public-members"], [820, "public-members"], [823, "public-members"], [830, "public-members"], [838, "public-members"], [845, "public-members"], [852, "public-members"], [853, "public-members"], [860, "public-members"], [867, "public-members"], [874, "public-members"], [880, "public-members"], [886, "public-members"], [909, "public-members"], [914, "public-members"], [920, "public-members"], [928, "public-members"], [933, "public-members"], [938, "public-members"], [943, "public-members"], [948, "public-members"], [954, "public-members"], [960, "public-members"], [966, "public-members"], [972, "public-members"], [978, "public-members"], [984, "public-members"], [990, "public-members"], [996, "public-members"], [1002, "public-members"], [1007, "public-members"], [1016, "public-members"], [1036, "public-members"], [1043, "public-members"], [1049, "public-members"], [1052, "public-members"], [1056, "public-members"], [1062, "public-members"], [1065, "public-members"], [1070, "public-members"], [1078, "public-members"], [1081, "public-members"], [1084, "public-members"], [1086, "public-members"], [1090, "public-members"], [1098, "public-members"], [1101, "public-members"], [1107, "public-members"], [1115, "public-members"], [1122, "public-members"], [1123, "public-members"], [1131, "public-members"], [1166, "public-members"], [1187, "public-members"], [1196, "public-members"], [1208, "public-members"], [1218, "public-members"], [1547, "public-members"], [1565, "public-members"], [1572, "public-members"], [1574, "public-members"], [1582, "public-members"], [1589, "public-members"], [1596, "public-members"], [1604, "public-members"], [1618, "public-members"], [1625, "public-members"], [1627, "public-members"]], "Raises": [[1526, "raises"]], "References": [[1265, "references"], [1273, "references"], [1422, "references"]], "Requirements": [[1712, "requirements"]], "Returns": [[3, "returns"], [4, "returns"], [5, "returns"], [7, "returns"], [12, "returns"], [13, "returns"], [15, "returns"], [17, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [40, "returns"], [41, "returns"], [44, "returns"], [45, "returns"], [50, "returns"], [51, "returns"], [54, "returns"], [55, "returns"], [58, "returns"], [59, "returns"], [62, "returns"], [64, "returns"], [67, "returns"], [68, "returns"], [72, "returns"], [73, "returns"], [76, "returns"], [77, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [116, "returns"], [235, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [319, "returns"], [324, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [331, "returns"], [333, "returns"], [334, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [343, "returns"], [348, "returns"], [352, "returns"], [353, "returns"], [355, "returns"], [358, "returns"], [360, "returns"], [361, "returns"], [365, "returns"], [367, "returns"], [368, "returns"], [373, "returns"], [375, "returns"], [376, "returns"], [384, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [393, "returns"], [395, "returns"], [396, "returns"], [398, "returns"], [400, "returns"], [402, "returns"], [403, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [412, "returns"], [413, "returns"], [415, "returns"], [416, "returns"], [418, "returns"], [419, "returns"], [421, "returns"], [422, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [439, "returns"], [441, "returns"], [449, "returns"], [450, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [460, "returns"], [463, "returns"], [466, "returns"], [470, "returns"], [472, "returns"], [473, "returns"], [477, "returns"], [478, "returns"], [481, "returns"], [482, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [500, "returns"], [506, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [512, "returns"], [513, "returns"], [518, "returns"], [519, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [525, "returns"], [527, "returns"], [528, "returns"], [529, "returns"], [530, "returns"], [534, "returns"], [536, "returns"], [538, "returns"], [539, "returns"], [541, "returns"], [542, "returns"], [543, "returns"], [546, "returns"], [549, "returns"], [550, "returns"], [561, "returns"], [562, "returns"], [563, "returns"], [564, "returns"], [565, "returns"], [566, "returns"], [570, "returns"], [572, "returns"], [576, "returns"], [579, "returns"], [584, "returns"], [585, "returns"], [586, "returns"], [597, "returns"], [600, "returns"], [606, "returns"], [607, "returns"], [608, "returns"], [611, "returns"], [614, "returns"], [616, "returns"], [617, "returns"], [620, "returns"], [621, "returns"], [622, "returns"], [624, "returns"], [625, "returns"], [628, "returns"], [629, "returns"], [631, "returns"], [633, "returns"], [634, "returns"], [635, "returns"], [639, "returns"], [641, "returns"], [642, "returns"], [646, "returns"], [648, "returns"], [649, "returns"], [653, "returns"], [654, "returns"], [657, "returns"], [658, "returns"], [659, "returns"], [663, "returns"], [665, "returns"], [666, "returns"], [669, "returns"], [671, "returns"], [672, "returns"], [675, "returns"], [677, "returns"], [681, "returns"], [682, "returns"], [683, "returns"], [687, "returns"], [689, "returns"], [693, "returns"], [694, "returns"], [696, "returns"], [697, "returns"], [699, "returns"], [700, "returns"], [704, "returns"], [705, "returns"], [711, "returns"], [712, "returns"], [716, "returns"], [718, "returns"], [720, "returns"], [724, "returns"], [726, "returns"], [728, "returns"], [731, "returns"], [733, "returns"], [734, "returns"], [738, "returns"], [740, "returns"], [741, "returns"], [744, "returns"], [745, "returns"], [748, "returns"], [749, "returns"], [752, "returns"], [753, "returns"], [756, "returns"], [757, "returns"], [760, "returns"], [761, "returns"], [763, "returns"], [764, "returns"], [767, "returns"], [768, "returns"], [771, "returns"], [772, "returns"], [773, "returns"], [774, "returns"], [777, "returns"], [778, "returns"], [779, "returns"], [783, "returns"], [784, "returns"], [785, "returns"], [786, "returns"], [791, "returns"], [792, "returns"], [793, "returns"], [794, "returns"], [798, "returns"], [799, "returns"], [800, "returns"], [805, "returns"], [806, "returns"], [807, "returns"], [809, "returns"], [811, "returns"], [812, "returns"], [815, "returns"], [819, "returns"], [821, "returns"], [822, "returns"], [825, "returns"], [826, "returns"], [827, "returns"], [829, "returns"], [836, "returns"], [837, "returns"], [843, "returns"], [844, "returns"], [850, "returns"], [851, "returns"], [859, "returns"], [863, "returns"], [864, "returns"], [865, "returns"], [866, "returns"], [870, "returns"], [871, "returns"], [872, "returns"], [873, "returns"], [877, "returns"], [879, "returns"], [883, "returns"], [885, "returns"], [904, "returns"], [905, "returns"], [907, "returns"], [908, "returns"], [912, "returns"], [913, "returns"], [917, "returns"], [919, "returns"], [923, "returns"], [926, "returns"], [927, "returns"], [931, "returns"], [932, "returns"], [936, "returns"], [937, "returns"], [941, "returns"], [942, "returns"], [946, "returns"], [947, "returns"], [951, "returns"], [952, "returns"], [953, "returns"], [957, "returns"], [958, "returns"], [959, "returns"], [963, "returns"], [964, "returns"], [965, "returns"], [969, "returns"], [970, "returns"], [971, "returns"], [975, "returns"], [976, "returns"], [977, "returns"], [981, "returns"], [982, "returns"], [983, "returns"], [987, "returns"], [988, "returns"], [989, "returns"], [993, "returns"], [994, "returns"], [995, "returns"], [999, "returns"], [1000, "returns"], [1001, "returns"], [1005, "returns"], [1006, "returns"], [1009, "returns"], [1010, "returns"], [1011, "returns"], [1020, "returns"], [1021, "returns"], [1022, "returns"], [1023, "returns"], [1024, "returns"], [1025, "returns"], [1027, "returns"], [1028, "returns"], [1029, "returns"], [1030, "returns"], [1032, "returns"], [1033, "returns"], [1034, "returns"], [1035, "returns"], [1040, "returns"], [1041, "returns"], [1042, "returns"], [1045, "returns"], [1051, "returns"], [1058, "returns"], [1059, "returns"], [1060, "returns"], [1061, "returns"], [1064, "returns"], [1072, "returns"], [1073, "returns"], [1074, "returns"], [1075, "returns"], [1076, "returns"], [1077, "returns"], [1080, "returns"], [1083, "returns"], [1088, "returns"], [1096, "returns"], [1097, "returns"], [1110, "returns"], [1111, "returns"], [1112, "returns"], [1113, "returns"], [1114, "returns"], [1120, "returns"], [1122, "returns"], [1122, "id1"], [1122, "id2"], [1122, "id3"], [1122, "id4"], [1122, "id5"], [1122, "id6"], [1122, "id7"], [1157, "returns"], [1158, "returns"], [1159, "returns"], [1161, "returns"], [1181, "returns"], [1182, "returns"], [1183, "returns"], [1194, "returns"], [1228, "returns"], [1230, "returns"], [1238, "returns"], [1239, "returns"], [1241, "returns"], [1246, "returns"], [1247, "returns"], [1248, "returns"], [1249, "returns"], [1250, "returns"], [1251, "returns"], [1253, "returns"], [1254, "returns"], [1255, "returns"], [1257, "returns"], [1258, "returns"], [1259, "returns"], [1265, "returns"], [1267, "returns"], [1273, "returns"], [1277, "returns"], [1279, "returns"], [1280, "returns"], [1281, "returns"], [1282, "returns"], [1283, "returns"], [1284, "returns"], [1300, "returns"], [1327, "returns"], [1330, "returns"], [1331, "returns"], [1332, "returns"], [1333, "returns"], [1337, "returns"], [1344, "returns"], [1345, "returns"], [1352, "returns"], [1353, "returns"], [1358, "returns"], [1360, "returns"], [1363, "returns"], [1365, "returns"], [1367, "returns"], [1368, "returns"], [1373, "returns"], [1375, "returns"], [1378, "returns"], [1380, "returns"], [1385, "returns"], [1386, "returns"], [1387, "returns"], [1388, "returns"], [1390, "returns"], [1392, "returns"], [1393, "returns"], [1394, "returns"], [1402, "returns"], [1403, "returns"], [1404, "returns"], [1405, "returns"], [1412, "returns"], [1413, "returns"], [1414, "returns"], [1415, "returns"], [1418, "returns"], [1419, "returns"], [1420, "returns"], [1422, "returns"], [1423, "returns"], [1430, "returns"], [1431, "returns"], [1432, "returns"], [1433, "returns"], [1434, "returns"], [1472, "returns"], [1486, "returns"], [1490, "returns"], [1496, "returns"], [1499, "returns"], [1503, "returns"], [1506, "returns"], [1511, "returns"], [1512, "returns"], [1513, "returns"], [1514, "returns"], [1517, "returns"], [1518, "returns"], [1520, "returns"], [1521, "returns"], [1523, "returns"], [1527, "returns"], [1528, "returns"], [1530, "returns"], [1531, "returns"], [1532, "returns"], [1538, "returns"], [1539, "returns"], [1540, "returns"], [1543, "returns"], [1550, "returns"], [1551, "returns"], [1552, "returns"], [1553, "returns"], [1554, "returns"], [1555, "returns"], [1556, "returns"], [1557, "returns"], [1558, "returns"], [1559, "returns"], [1560, "returns"], [1561, "returns"], [1562, "returns"], [1563, "returns"], [1564, "returns"], [1567, "returns"], [1568, "returns"], [1569, "returns"], [1570, "returns"], [1571, "returns"], [1577, "returns"], [1578, "returns"], [1579, "returns"], [1580, "returns"], [1581, "returns"], [1585, "returns"], [1586, "returns"], [1587, "returns"], [1588, "returns"], [1592, "returns"], [1593, "returns"], [1594, "returns"], [1595, "returns"], [1599, "returns"], [1600, "returns"], [1601, "returns"], [1602, "returns"], [1603, "returns"], [1607, "returns"], [1608, "returns"], [1609, "returns"], [1610, "returns"], [1611, "returns"], [1612, "returns"], [1613, "returns"], [1614, "returns"], [1615, "returns"], [1616, "returns"], [1617, "returns"], [1624, "returns"], [1626, "returns"], [1631, "returns"], [1632, "returns"], [1634, "returns"], [1635, "returns"], [1636, "returns"], [1637, "returns"], [1638, "returns"], [1639, "returns"], [1640, "returns"], [1641, "returns"]], "Rotor model visualizations": [[1722, "Rotor-model-visualizations"]], "Rotor models": [[1713, "rotor-models"]], "See Also": [[116, "see-also"], [235, "see-also"], [1230, "see-also"], [1238, "see-also"], [1239, "see-also"], [1240, "see-also"], [1246, "see-also"], [1247, "see-also"], [1248, "see-also"], [1249, "see-also"], [1250, "see-also"], [1251, "see-also"], [1255, "see-also"], [1257, "see-also"], [1259, "see-also"], [1273, "see-also"], [1282, "see-also"], [1283, "see-also"], [1286, "see-also"], [1290, "see-also"], [1293, "see-also"], [1300, "see-also"], [1301, "see-also"], [1306, "see-also"], [1326, "see-also"], [1344, "see-also"], [1350, "see-also"], [1355, "see-also"], [1358, "see-also"], [1360, "see-also"], [1370, "see-also"], [1373, "see-also"], [1375, "see-also"], [1385, "see-also"], [1386, "see-also"], [1387, "see-also"], [1388, "see-also"], [1390, "see-also"], [1395, "see-also"], [1396, "see-also"], [1403, "see-also"], [1405, "see-also"], [1411, "see-also"], [1412, "see-also"], [1414, "see-also"], [1415, "see-also"], [1416, "see-also"], [1417, "see-also"], [1419, "see-also"], [1420, "see-also"], [1422, "see-also"], [1423, "see-also"], [1428, "see-also"], [1430, "see-also"], [1436, "see-also"], [1439, "see-also"], [1441, "see-also"], [1448, "see-also"], [1449, "see-also"], [1456, "see-also"], [1462, "see-also"], [1463, "see-also"], [1467, "see-also"], [1468, "see-also"], [1472, "see-also"], [1474, "see-also"], [1486, "see-also"], [1494, "see-also"], [1495, "see-also"], [1496, "see-also"], [1501, "see-also"], [1502, "see-also"], [1503, "see-also"], [1511, "see-also"], [1538, "see-also"], [1539, "see-also"], [1540, "see-also"]], "See also": [[1517, null]], "Sequential algorithm": [[1696, "sequential-algorithm"]], "Sequential algorithm models": [[1696, "sequential-algorithm-models"]], "Sequential wake propagation": [[1724, "Sequential-wake-propagation"]], "Single row of turbines": [[1725, "Single-row-of-turbines"]], "Spatially homogeneous wake propagation": [[1726, "Spatially-homogeneous-wake-propagation"]], "Standard users": [[1712, "standard-users"], [1712, "id3"]], "Static data": [[1716, "Static-data"]], "TLDR; Quick installation guide": [[1712, "tldr-quick-installation-guide"]], "Testing": [[1732, "testing"]], "The model book": [[1718, "The-model-book"]], "Timeseries data": [[1727, "Timeseries-data"]], "Turbine models": [[1713, "turbine-models"]], "Turbine types": [[1713, "turbine-types"]], "Version specific DOI": [[1708, "version-specific-doi"]], "Vertical profiles": [[1713, "vertical-profiles"]], "Virtual Python environment": [[1712, "virtual-python-environment"], [1712, "id2"]], "WRF-Timeseries-4464.csv.gz": [[1716, "WRF-Timeseries-4464.csv.gz"]], "Wake frames": [[1713, "wake-frames"]], "Wake models": [[1713, "wake-models"]], "Warning": [[1413, null], [1464, null], [1472, null], [1486, null], [1499, null], [1506, null]], "Warnings": [[1392, "warnings"], [1393, "warnings"], [1431, "warnings"], [1432, "warnings"]], "Welcome to FOXES": [[1711, "welcome-to-foxes"]], "Wind farm blockage": [[1715, "Wind-farm-blockage"]], "Wind farm layout data": [[1716, "Wind-farm-layout-data"]], "Wind rose data": [[1728, "Wind-rose-data"]], "Wind sector management": [[1723, "Wind-sector-management"]], "Yawed rotor wakes": [[1729, "Yawed-rotor-wakes"]], "Yields": [[1031, "yields"], [1037, "yields"], [1038, "yields"], [1039, "yields"], [1089, "yields"]], "abl_states_6000.csv.gz": [[1716, "abl_states_6000.csv.gz"]], "foxes": [[1700, "foxes"]], "foxes.algorithms": [[1693, "foxes-algorithms"]], "foxes.constants": [[1697, "foxes-constants"]], "foxes.core": [[1698, "foxes-core"]], "foxes.data": [[1699, "foxes-data"]], "foxes.input": [[1701, "foxes-input"]], "foxes.input.farm_layout": [[1701, "foxes-input-farm-layout"]], "foxes.input.states": [[1701, "foxes-input-states"]], "foxes.input.states.create": [[1701, "foxes-input-states-create"]], "foxes.input.windio": [[1701, "foxes-input-windio"]], "foxes.models": [[1702, "foxes-models"]], "foxes.models.axial_induction": [[1702, "foxes-models-axial-induction"]], "foxes.models.farm_controllers": [[1702, "foxes-models-farm-controllers"]], "foxes.models.farm_models": [[1702, "foxes-models-farm-models"]], "foxes.models.ground_models": [[1702, "foxes-models-ground-models"]], "foxes.models.partial_wakes": [[1702, "foxes-models-partial-wakes"]], "foxes.models.point_models": [[1702, "foxes-models-point-models"]], "foxes.models.rotor_models": [[1702, "foxes-models-rotor-models"]], "foxes.models.turbine_models": [[1702, "foxes-models-turbine-models"]], "foxes.models.turbine_types": [[1702, "foxes-models-turbine-types"]], "foxes.models.vertical_profiles": [[1702, "foxes-models-vertical-profiles"]], "foxes.models.wake_frames": [[1702, "foxes-models-wake-frames"]], "foxes.models.wake_models": [[1702, "foxes-models-wake-models"], [1707, "foxes-models-wake-models"]], "foxes.models.wake_models.induction": [[1707, "foxes-models-wake-models-induction"]], "foxes.models.wake_models.ti": [[1707, "foxes-models-wake-models-ti"]], "foxes.models.wake_models.wind": [[1707, "foxes-models-wake-models-wind"]], "foxes.models.wake_superpositions": [[1702, "foxes-models-wake-superpositions"]], "foxes.output": [[1703, "foxes-output"]], "foxes.output.flow_plots_2d": [[1703, "foxes-output-flow-plots-2d"]], "foxes.utils": [[1704, "foxes-utils"]], "foxes.utils.abl": [[1704, "foxes-utils-abl"]], "foxes.utils.abl.neutral": [[1705, "foxes-utils-abl-neutral"]], "foxes.utils.abl.sheared": [[1705, "foxes-utils-abl-sheared"]], "foxes.utils.abl.stable": [[1705, "foxes-utils-abl-stable"]], "foxes.utils.abl.unstable": [[1705, "foxes-utils-abl-unstable"]], "foxes.utils.geom2d": [[1704, "foxes-utils-geom2d"]], "foxes.utils.runners": [[1704, "foxes-utils-runners"]], "foxes.utils.two_circles": [[1704, "foxes-utils-two-circles"]], "foxes.variables": [[1706, "foxes-variables"]], "grid100": [[1722, "grid100"]], "grid16": [[1722, "grid16"]], "grid25": [[1722, "grid25"]], "grid25_raw": [[1722, "grid25_raw"]], "grid36": [[1722, "grid36"]], "grid4": [[1722, "grid4"]], "grid400": [[1722, "grid400"]], "grid9": [[1722, "grid9"]], "level10": [[1722, "level10"]], "level2": [[1722, "level2"]], "level20": [[1722, "level20"]], "level3": [[1722, "level3"]], "level5": [[1722, "level5"]], "level5_raw": [[1722, "level5_raw"]], "models.wake_models.induction": [[853, "models-wake-models-induction"]], "test_farm_67.csv": [[1716, "test_farm_67.csv"]], "timeseries_100.csv.gz": [[1716, "timeseries_100.csv.gz"]], "timeseries_3000.csv.gz": [[1716, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[1716, "timeseries_8000.csv.gz"]], "v0.1.0-alpha": [[1710, "v0-1-0-alpha"]], "v0.1.1-alpha": [[1710, "v0-1-1-alpha"]], "v0.1.2-alpha": [[1710, "v0-1-2-alpha"]], "v0.1.3-alpha": [[1710, "v0-1-3-alpha"]], "v0.1.4-alpha": [[1710, "v0-1-4-alpha"]], "v0.2.0-alpha": [[1710, "v0-2-0-alpha"]], "v0.2.1-alpha": [[1710, "v0-2-1-alpha"]], "v0.2.2-alpha": [[1710, "v0-2-2-alpha"]], "v0.2.3-alpha": [[1710, "v0-2-3-alpha"]], "v0.2.4-alpha": [[1710, "v0-2-4-alpha"]], "v0.2.5-alpha": [[1710, "v0-2-5-alpha"]], "v0.2.6-alpha": [[1710, "v0-2-6-alpha"]], "v0.3.0-alpha": [[1710, "v0-3-0-alpha"]], "v0.3.1-alpha": [[1710, "v0-3-1-alpha"]], "v0.3.2-alpha": [[1710, "v0-3-2-alpha"]], "v0.3.3-alpha": [[1710, "v0-3-3-alpha"]], "v0.3.4-alpha": [[1710, "v0-3-4-alpha"]], "v0.3.5-alpha": [[1710, "v0-3-5-alpha"]], "v0.4.0": [[1710, "v0-4-0"]], "v0.4.1": [[1710, "v0-4-1"]], "v0.4.2": [[1710, "v0-4-2"]], "v0.4.3": [[1710, "v0-4-3"]], "v0.4.4": [[1710, "v0-4-4"]], "v0.4.5": [[1710, "v0-4-5"]], "v0.5": [[1710, "v0-5"]], "v0.5.1": [[1710, "v0-5-1"]], "v0.5.2": [[1710, "v0-5-2"]], "v0.5.2.1": [[1710, "v0-5-2-1"]], "v0.6": [[1710, "v0-6"]], "v0.6.1": [[1710, "v0-6-1"]], "v0.6.2": [[1710, "v0-6-2"]], "v0.7": [[1710, "v0-7"]], "v0.7.1": [[1710, "v0-7-1"]], "v0.7.2": [[1710, "v0-7-2"]], "v0.7.3": [[1710, "v0-7-3"]], "v0.7.4": [[1710, "v0-7-4"]], "v0.8": [[1710, "v0-8"]], "wind_rose_bremen.csv": [[1716, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[1716, "wind_rotation.nc"]]}, "docurls": ["_foxes/algorithms/Downwind.html", "_foxes/algorithms/Downwind.DEFAULT_FARM_OUTPUTS.html", "_foxes/algorithms/Downwind.__init__.html", "_foxes/algorithms/Downwind.all_models.html", "_foxes/algorithms/Downwind.calc_farm.html", "_foxes/algorithms/Downwind.calc_points.html", "_foxes/algorithms/Downwind.finalize.html", "_foxes/algorithms/Downwind.get_model.html", "_foxes/algorithms/Downwind.init_states.html", "_foxes/algorithms/Downwind.initialize.html", "_foxes/algorithms/Iterative.html", "_foxes/algorithms/Iterative.__init__.html", "_foxes/algorithms/Iterative.calc_farm.html", "_foxes/algorithms/Iterative.get_model.html", "_foxes/algorithms/Iterative.initialize.html", "_foxes/algorithms/Iterative.iterations.html", "_foxes/algorithms/Iterative.set_urelax.html", "_foxes/algorithms/Iterative.urelax.html", "_foxes/algorithms/Sequential.html", "_foxes/algorithms/Sequential.__init__.html", "_foxes/algorithms/Sequential.__iter__.html", "_foxes/algorithms/Sequential.__next__.html", "_foxes/algorithms/Sequential.calc_farm.html", "_foxes/algorithms/Sequential.calc_points.html", "_foxes/algorithms/Sequential.counter.html", "_foxes/algorithms/Sequential.cur_farm_results.html", "_foxes/algorithms/Sequential.cur_point_results.html", "_foxes/algorithms/Sequential.farm_results.html", "_foxes/algorithms/Sequential.fdata.html", "_foxes/algorithms/Sequential.get_model.html", "_foxes/algorithms/Sequential.index.html", "_foxes/algorithms/Sequential.iterating.html", "_foxes/algorithms/Sequential.mdata.html", "_foxes/algorithms/Sequential.point_results.html", "_foxes/algorithms/Sequential.prev_farm_results.html", "_foxes/algorithms/Sequential.size.html", "_foxes/algorithms/Sequential.states_i0.html", "_foxes/algorithms/Sequential.tdata.html", "_foxes/algorithms/Sequential.weight.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/downwind/models/InitFarmData.html", "_foxes/algorithms/downwind/models/InitFarmData.__init__.html", "_foxes/algorithms/downwind/models/InitFarmData.calculate.html", "_foxes/algorithms/downwind/models/InitFarmData.output_farm_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.output_point_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.__init__.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.calculate.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.initialize.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.output_point_vars.html", "_foxes/algorithms/iterative/ConvCrit.html", "_foxes/algorithms/iterative/ConvCrit.__init__.html", "_foxes/algorithms/iterative/ConvCrit.check_converged.html", "_foxes/algorithms/iterative/ConvCrit.get_deltas.html", "_foxes/algorithms/iterative/ConvCritList.html", "_foxes/algorithms/iterative/ConvCritList.__init__.html", "_foxes/algorithms/iterative/ConvCritList.add_crit.html", "_foxes/algorithms/iterative/ConvCritList.check_converged.html", "_foxes/algorithms/iterative/ConvCritList.get_deltas.html", "_foxes/algorithms/iterative/ConvVarDelta.html", "_foxes/algorithms/iterative/ConvVarDelta.__init__.html", "_foxes/algorithms/iterative/ConvVarDelta.check_converged.html", "_foxes/algorithms/iterative/ConvVarDelta.get_deltas.html", "_foxes/algorithms/iterative/DefaultConv.html", "_foxes/algorithms/iterative/DefaultConv.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/iterative/models/URelax.html", "_foxes/algorithms/iterative/models/URelax.__init__.html", "_foxes/algorithms/iterative/models/URelax.calculate.html", "_foxes/algorithms/iterative/models/URelax.output_farm_vars.html", "_foxes/algorithms/sequential/SequentialPlugin.html", "_foxes/algorithms/sequential/SequentialPlugin.__init__.html", "_foxes/algorithms/sequential/SequentialPlugin.finalize.html", "_foxes/algorithms/sequential/SequentialPlugin.initialize.html", "_foxes/algorithms/sequential/SequentialPlugin.update.html", "_foxes/algorithms/sequential/models/SeqState.html", "_foxes/algorithms/sequential/models/SeqState.__init__.html", "_foxes/algorithms/sequential/models/SeqState.calculate.html", "_foxes/algorithms/sequential/models/SeqState.counter.html", "_foxes/algorithms/sequential/models/SeqState.index.html", "_foxes/algorithms/sequential/models/SeqState.initialize.html", "_foxes/algorithms/sequential/models/SeqState.output_point_vars.html", "_foxes/algorithms/sequential/models/SeqState.size.html", "_foxes/algorithms/sequential/models/SeqState.sub_models.html", "_foxes/algorithms/sequential/models/SeqState.weights.html", "_foxes/constants/AMB_TARGET_RESULTS.html", "_foxes/constants/DTYPE.html", "_foxes/constants/DTYPE.T.html", "_foxes/constants/DTYPE.__abs__.html", "_foxes/constants/DTYPE.__add__.html", "_foxes/constants/DTYPE.__and__.html", "_foxes/constants/DTYPE.__array__.html", "_foxes/constants/DTYPE.__array_interface__.html", "_foxes/constants/DTYPE.__array_priority__.html", "_foxes/constants/DTYPE.__array_struct__.html", "_foxes/constants/DTYPE.__array_wrap__.html", "_foxes/constants/DTYPE.__bool__.html", "_foxes/constants/DTYPE.__class_getitem__.html", "_foxes/constants/DTYPE.__divmod__.html", "_foxes/constants/DTYPE.__eq__.html", "_foxes/constants/DTYPE.__float__.html", "_foxes/constants/DTYPE.__floordiv__.html", "_foxes/constants/DTYPE.__format__.html", "_foxes/constants/DTYPE.__ge__.html", "_foxes/constants/DTYPE.__getitem__.html", "_foxes/constants/DTYPE.__gt__.html", "_foxes/constants/DTYPE.__hash__.html", "_foxes/constants/DTYPE.__int__.html", "_foxes/constants/DTYPE.__invert__.html", "_foxes/constants/DTYPE.__le__.html", "_foxes/constants/DTYPE.__lshift__.html", "_foxes/constants/DTYPE.__lt__.html", "_foxes/constants/DTYPE.__mod__.html", "_foxes/constants/DTYPE.__mul__.html", "_foxes/constants/DTYPE.__ne__.html", "_foxes/constants/DTYPE.__neg__.html", "_foxes/constants/DTYPE.__new__.html", "_foxes/constants/DTYPE.__or__.html", "_foxes/constants/DTYPE.__pos__.html", "_foxes/constants/DTYPE.__pow__.html", "_foxes/constants/DTYPE.__radd__.html", "_foxes/constants/DTYPE.__rand__.html", "_foxes/constants/DTYPE.__rdivmod__.html", "_foxes/constants/DTYPE.__reduce__.html", "_foxes/constants/DTYPE.__repr__.html", "_foxes/constants/DTYPE.__rfloordiv__.html", "_foxes/constants/DTYPE.__rlshift__.html", "_foxes/constants/DTYPE.__rmod__.html", "_foxes/constants/DTYPE.__rmul__.html", "_foxes/constants/DTYPE.__ror__.html", "_foxes/constants/DTYPE.__rpow__.html", "_foxes/constants/DTYPE.__rrshift__.html", "_foxes/constants/DTYPE.__rshift__.html", "_foxes/constants/DTYPE.__rsub__.html", "_foxes/constants/DTYPE.__rtruediv__.html", "_foxes/constants/DTYPE.__rxor__.html", "_foxes/constants/DTYPE.__sizeof__.html", "_foxes/constants/DTYPE.__str__.html", "_foxes/constants/DTYPE.__sub__.html", "_foxes/constants/DTYPE.__truediv__.html", "_foxes/constants/DTYPE.__xor__.html", "_foxes/constants/DTYPE.all.html", "_foxes/constants/DTYPE.any.html", "_foxes/constants/DTYPE.argmax.html", "_foxes/constants/DTYPE.argmin.html", "_foxes/constants/DTYPE.argsort.html", "_foxes/constants/DTYPE.as_integer_ratio.html", "_foxes/constants/DTYPE.astype.html", "_foxes/constants/DTYPE.base.html", "_foxes/constants/DTYPE.byteswap.html", "_foxes/constants/DTYPE.choose.html", "_foxes/constants/DTYPE.clip.html", "_foxes/constants/DTYPE.compress.html", "_foxes/constants/DTYPE.conj.html", "_foxes/constants/DTYPE.conjugate.html", "_foxes/constants/DTYPE.copy.html", "_foxes/constants/DTYPE.cumprod.html", "_foxes/constants/DTYPE.cumsum.html", "_foxes/constants/DTYPE.data.html", "_foxes/constants/DTYPE.diagonal.html", "_foxes/constants/DTYPE.dtype.html", "_foxes/constants/DTYPE.dump.html", "_foxes/constants/DTYPE.dumps.html", "_foxes/constants/DTYPE.fill.html", "_foxes/constants/DTYPE.flags.html", "_foxes/constants/DTYPE.flat.html", "_foxes/constants/DTYPE.flatten.html", "_foxes/constants/DTYPE.getfield.html", "_foxes/constants/DTYPE.imag.html", "_foxes/constants/DTYPE.is_integer.html", "_foxes/constants/DTYPE.item.html", "_foxes/constants/DTYPE.itemset.html", "_foxes/constants/DTYPE.itemsize.html", "_foxes/constants/DTYPE.max.html", "_foxes/constants/DTYPE.mean.html", "_foxes/constants/DTYPE.min.html", "_foxes/constants/DTYPE.nbytes.html", "_foxes/constants/DTYPE.ndim.html", "_foxes/constants/DTYPE.newbyteorder.html", "_foxes/constants/DTYPE.nonzero.html", "_foxes/constants/DTYPE.prod.html", "_foxes/constants/DTYPE.ptp.html", "_foxes/constants/DTYPE.put.html", "_foxes/constants/DTYPE.ravel.html", "_foxes/constants/DTYPE.real.html", "_foxes/constants/DTYPE.repeat.html", "_foxes/constants/DTYPE.reshape.html", "_foxes/constants/DTYPE.resize.html", "_foxes/constants/DTYPE.round.html", "_foxes/constants/DTYPE.searchsorted.html", "_foxes/constants/DTYPE.setfield.html", "_foxes/constants/DTYPE.setflags.html", "_foxes/constants/DTYPE.shape.html", "_foxes/constants/DTYPE.size.html", "_foxes/constants/DTYPE.sort.html", "_foxes/constants/DTYPE.squeeze.html", "_foxes/constants/DTYPE.std.html", "_foxes/constants/DTYPE.strides.html", "_foxes/constants/DTYPE.sum.html", "_foxes/constants/DTYPE.swapaxes.html", "_foxes/constants/DTYPE.take.html", "_foxes/constants/DTYPE.tobytes.html", "_foxes/constants/DTYPE.tofile.html", "_foxes/constants/DTYPE.tolist.html", "_foxes/constants/DTYPE.tostring.html", "_foxes/constants/DTYPE.trace.html", "_foxes/constants/DTYPE.transpose.html", "_foxes/constants/DTYPE.var.html", "_foxes/constants/DTYPE.view.html", "_foxes/constants/FARM.html", "_foxes/constants/GW.html", "_foxes/constants/ITYPE.html", "_foxes/constants/ITYPE.__abs__.html", "_foxes/constants/ITYPE.__add__.html", "_foxes/constants/ITYPE.__and__.html", "_foxes/constants/ITYPE.__bool__.html", "_foxes/constants/ITYPE.__class_getitem__.html", "_foxes/constants/ITYPE.__divmod__.html", "_foxes/constants/ITYPE.__eq__.html", "_foxes/constants/ITYPE.__float__.html", "_foxes/constants/ITYPE.__floordiv__.html", "_foxes/constants/ITYPE.__ge__.html", "_foxes/constants/ITYPE.__gt__.html", "_foxes/constants/ITYPE.__hash__.html", "_foxes/constants/ITYPE.__index__.html", "_foxes/constants/ITYPE.__int__.html", "_foxes/constants/ITYPE.__invert__.html", "_foxes/constants/ITYPE.__le__.html", "_foxes/constants/ITYPE.__lshift__.html", "_foxes/constants/ITYPE.__lt__.html", "_foxes/constants/ITYPE.__mod__.html", "_foxes/constants/ITYPE.__mul__.html", "_foxes/constants/ITYPE.__ne__.html", "_foxes/constants/ITYPE.__neg__.html", "_foxes/constants/ITYPE.__new__.html", "_foxes/constants/ITYPE.__or__.html", "_foxes/constants/ITYPE.__pos__.html", "_foxes/constants/ITYPE.__pow__.html", "_foxes/constants/ITYPE.__radd__.html", "_foxes/constants/ITYPE.__rand__.html", "_foxes/constants/ITYPE.__rdivmod__.html", "_foxes/constants/ITYPE.__repr__.html", "_foxes/constants/ITYPE.__rfloordiv__.html", "_foxes/constants/ITYPE.__rlshift__.html", "_foxes/constants/ITYPE.__rmod__.html", "_foxes/constants/ITYPE.__rmul__.html", "_foxes/constants/ITYPE.__ror__.html", "_foxes/constants/ITYPE.__rpow__.html", "_foxes/constants/ITYPE.__rrshift__.html", "_foxes/constants/ITYPE.__rshift__.html", "_foxes/constants/ITYPE.__rsub__.html", "_foxes/constants/ITYPE.__rtruediv__.html", "_foxes/constants/ITYPE.__rxor__.html", "_foxes/constants/ITYPE.__str__.html", "_foxes/constants/ITYPE.__sub__.html", "_foxes/constants/ITYPE.__truediv__.html", "_foxes/constants/ITYPE.__xor__.html", "_foxes/constants/ITYPE.bit_count.html", "_foxes/constants/ITYPE.denominator.html", "_foxes/constants/ITYPE.is_integer.html", "_foxes/constants/ITYPE.numerator.html", "_foxes/constants/KAPPA.html", "_foxes/constants/MW.html", "_foxes/constants/POINT.html", "_foxes/constants/POINTS.html", "_foxes/constants/POP.html", "_foxes/constants/P_UNITS.html", "_foxes/constants/STATE.html", "_foxes/constants/STATES_SEL.html", "_foxes/constants/STATE_SOURCE_ORDERI.html", "_foxes/constants/STATE_TARGET.html", "_foxes/constants/STATE_TARGET_TPOINT.html", "_foxes/constants/STATE_TURBINE.html", "_foxes/constants/TARGET.html", "_foxes/constants/TARGETS.html", "_foxes/constants/TIME.html", "_foxes/constants/TMODELS.html", "_foxes/constants/TMODEL_SELS.html", "_foxes/constants/TNAME.html", "_foxes/constants/TPOINT.html", "_foxes/constants/TPOINTS.html", "_foxes/constants/TURBINE.html", "_foxes/constants/TW.html", "_foxes/constants/TWEIGHTS.html", "_foxes/constants/VALID.html", "_foxes/constants/VARS.html", "_foxes/constants/W.html", "_foxes/constants/XYH.html", "_foxes/constants/kW.html", "_foxes/core/Algorithm.html", "_foxes/core/Algorithm.__init__.html", "_foxes/core/Algorithm.chunked.html", "_foxes/core/Algorithm.del_model_data.html", "_foxes/core/Algorithm.finalize.html", "_foxes/core/Algorithm.get_model_data.html", "_foxes/core/Algorithm.get_models_data.html", "_foxes/core/Algorithm.get_models_idata.html", "_foxes/core/Algorithm.idata_mem.html", "_foxes/core/Algorithm.initialize.html", "_foxes/core/Algorithm.new.html", "_foxes/core/Algorithm.new_point_data.html", "_foxes/core/Algorithm.print.html", "_foxes/core/Algorithm.store_model_data.html", "_foxes/core/Algorithm.update_n_turbines.html", "_foxes/core/AxialInductionModel.html", "_foxes/core/AxialInductionModel.ct2a.html", "_foxes/core/Data.html", "_foxes/core/Data.__init__.html", "_foxes/core/Data.add.html", "_foxes/core/Data.get_slice.html", "_foxes/core/Data.n_states.html", "_foxes/core/Data.n_turbines.html", "_foxes/core/Data.states_i0.html", "_foxes/core/DataCalcModel.html", "_foxes/core/DataCalcModel.calculate.html", "_foxes/core/DataCalcModel.run_calculation.html", "_foxes/core/ExtendedStates.html", "_foxes/core/ExtendedStates.__init__.html", "_foxes/core/ExtendedStates.append.html", "_foxes/core/ExtendedStates.calculate.html", "_foxes/core/ExtendedStates.index.html", "_foxes/core/ExtendedStates.output_point_vars.html", "_foxes/core/ExtendedStates.size.html", "_foxes/core/ExtendedStates.sub_models.html", "_foxes/core/ExtendedStates.weights.html", "_foxes/core/FData.html", "_foxes/core/FData.__init__.html", "_foxes/core/FarmController.html", "_foxes/core/FarmController.__init__.html", "_foxes/core/FarmController.calculate.html", "_foxes/core/FarmController.collect_models.html", "_foxes/core/FarmController.finalize.html", "_foxes/core/FarmController.initialize.html", "_foxes/core/FarmController.load_data.html", "_foxes/core/FarmController.output_farm_vars.html", "_foxes/core/FarmController.set_pars.html", "_foxes/core/FarmController.sub_models.html", "_foxes/core/FarmDataModel.html", "_foxes/core/FarmDataModel.__init__.html", "_foxes/core/FarmDataModel.calculate.html", "_foxes/core/FarmDataModel.ensure_variables.html", "_foxes/core/FarmDataModel.output_farm_vars.html", "_foxes/core/FarmDataModel.run_calculation.html", "_foxes/core/FarmDataModelList.html", "_foxes/core/FarmDataModelList.__init__.html", "_foxes/core/FarmDataModelList.append.html", "_foxes/core/FarmDataModelList.calculate.html", "_foxes/core/FarmDataModelList.insert.html", "_foxes/core/FarmDataModelList.output_farm_vars.html", "_foxes/core/FarmDataModelList.sub_models.html", "_foxes/core/FarmModel.html", "_foxes/core/GroundModel.html", "_foxes/core/GroundModel.contribute_to_farm_wakes.html", "_foxes/core/GroundModel.contribute_to_point_wakes.html", "_foxes/core/GroundModel.finalize_farm_wakes.html", "_foxes/core/GroundModel.finalize_point_wakes.html", "_foxes/core/GroundModel.new_farm_wake_deltas.html", "_foxes/core/GroundModel.new_point_wake_deltas.html", "_foxes/core/MData.html", "_foxes/core/MData.__init__.html", "_foxes/core/Model.html", "_foxes/core/Model.__init__.html", "_foxes/core/Model.__repr__.html", "_foxes/core/Model.data_to_store.html", "_foxes/core/Model.finalize.html", "_foxes/core/Model.from_data_or_store.html", "_foxes/core/Model.get_data.html", "_foxes/core/Model.initialize.html", "_foxes/core/Model.initialized.html", "_foxes/core/Model.load_data.html", "_foxes/core/Model.model_id.html", "_foxes/core/Model.sub_models.html", "_foxes/core/Model.var.html", "_foxes/core/PartialWakesModel.html", "_foxes/core/PartialWakesModel.check_wmodel.html", "_foxes/core/PartialWakesModel.contribute.html", "_foxes/core/PartialWakesModel.finalize_wakes.html", "_foxes/core/PartialWakesModel.get_wake_points.html", "_foxes/core/PartialWakesModel.new.html", "_foxes/core/PartialWakesModel.new_wake_deltas.html", "_foxes/core/PointDataModel.html", "_foxes/core/PointDataModel.calculate.html", "_foxes/core/PointDataModel.ensure_variables.html", "_foxes/core/PointDataModel.output_point_vars.html", "_foxes/core/PointDataModel.run_calculation.html", "_foxes/core/PointDataModelList.html", "_foxes/core/PointDataModelList.__init__.html", "_foxes/core/PointDataModelList.append.html", "_foxes/core/PointDataModelList.calculate.html", "_foxes/core/PointDataModelList.output_point_vars.html", "_foxes/core/PointDataModelList.sub_models.html", "_foxes/core/RotorModel.html", "_foxes/core/RotorModel.__init__.html", "_foxes/core/RotorModel.calculate.html", "_foxes/core/RotorModel.design_points.html", "_foxes/core/RotorModel.eval_rpoint_results.html", "_foxes/core/RotorModel.get_rotor_points.html", "_foxes/core/RotorModel.n_rotor_points.html", "_foxes/core/RotorModel.new.html", "_foxes/core/RotorModel.output_farm_vars.html", "_foxes/core/RotorModel.rotor_point_weights.html", "_foxes/core/States.html", "_foxes/core/States.index.html", "_foxes/core/States.load_data.html", "_foxes/core/States.new.html", "_foxes/core/States.output_point_vars.html", "_foxes/core/States.size.html", "_foxes/core/States.weights.html", "_foxes/core/TData.html", "_foxes/core/TData.__init__.html", "_foxes/core/TData.from_points.html", "_foxes/core/TData.from_tpoints.html", "_foxes/core/TData.n_targets.html", "_foxes/core/TData.n_tpoints.html", "_foxes/core/TData.tpoint_mean.html", "_foxes/core/Turbine.html", "_foxes/core/Turbine.__init__.html", "_foxes/core/Turbine.add_model.html", "_foxes/core/Turbine.insert_model.html", "_foxes/core/TurbineInductionModel.html", "_foxes/core/TurbineInductionModel.affects_downwind.html", "_foxes/core/TurbineModel.html", "_foxes/core/TurbineModel.calculate.html", "_foxes/core/TurbineModel.new.html", "_foxes/core/TurbineType.html", "_foxes/core/TurbineType.__init__.html", "_foxes/core/TurbineType.__repr__.html", "_foxes/core/TurbineType.modify_cutin.html", "_foxes/core/TurbineType.new.html", "_foxes/core/VerticalProfile.html", "_foxes/core/VerticalProfile.calculate.html", "_foxes/core/VerticalProfile.input_vars.html", "_foxes/core/VerticalProfile.new.html", "_foxes/core/WakeFrame.html", "_foxes/core/WakeFrame.calc_centreline_integral.html", "_foxes/core/WakeFrame.calc_order.html", "_foxes/core/WakeFrame.get_centreline_points.html", "_foxes/core/WakeFrame.get_wake_coos.html", "_foxes/core/WakeFrame.get_wake_modelling_data.html", "_foxes/core/WakeFrame.new.html", "_foxes/core/WakeK.html", "_foxes/core/WakeK.__call__.html", "_foxes/core/WakeK.__init__.html", "_foxes/core/WakeK.all_none.html", "_foxes/core/WakeK.repr.html", "_foxes/core/WakeK.use_amb_ti.html", "_foxes/core/WakeModel.html", "_foxes/core/WakeModel.affects_downwind.html", "_foxes/core/WakeModel.contribute.html", "_foxes/core/WakeModel.finalize_wake_deltas.html", "_foxes/core/WakeModel.new.html", "_foxes/core/WakeModel.new_wake_deltas.html", "_foxes/core/WakeSuperposition.html", "_foxes/core/WakeSuperposition.add_wake.html", "_foxes/core/WakeSuperposition.calc_final_wake_delta.html", "_foxes/core/WindFarm.html", "_foxes/core/WindFarm.__init__.html", "_foxes/core/WindFarm.add_turbine.html", "_foxes/core/WindFarm.n_turbines.html", "_foxes/core/WindFarm.turbine_names.html", "_foxes/data/StaticData.html", "_foxes/data/StaticData.__init__.html", "_foxes/data/parse_Pct_file_name.html", "_foxes/data/parse_Pct_two_files.html", "_foxes/input/farm_layout/add_from_csv.html", "_foxes/input/farm_layout/add_from_df.html", "_foxes/input/farm_layout/add_from_file.html", "_foxes/input/farm_layout/add_from_json.html", "_foxes/input/farm_layout/add_grid.html", "_foxes/input/farm_layout/add_random.html", "_foxes/input/farm_layout/add_row.html", "_foxes/input/states/FieldDataNC.html", "_foxes/input/states/FieldDataNC.__init__.html", "_foxes/input/states/FieldDataNC.calculate.html", "_foxes/input/states/FieldDataNC.index.html", "_foxes/input/states/FieldDataNC.load_data.html", "_foxes/input/states/FieldDataNC.output_point_vars.html", "_foxes/input/states/FieldDataNC.size.html", "_foxes/input/states/FieldDataNC.weights.html", "_foxes/input/states/MultiHeightNCStates.html", "_foxes/input/states/MultiHeightNCStates.__init__.html", "_foxes/input/states/MultiHeightNCStates.load_data.html", "_foxes/input/states/MultiHeightNCTimeseries.html", "_foxes/input/states/MultiHeightNCTimeseries.__init__.html", "_foxes/input/states/MultiHeightStates.html", "_foxes/input/states/MultiHeightStates.RDICT.html", "_foxes/input/states/MultiHeightStates.__init__.html", "_foxes/input/states/MultiHeightStates.calculate.html", "_foxes/input/states/MultiHeightStates.finalize.html", "_foxes/input/states/MultiHeightStates.index.html", "_foxes/input/states/MultiHeightStates.load_data.html", "_foxes/input/states/MultiHeightStates.output_point_vars.html", "_foxes/input/states/MultiHeightStates.reset.html", "_foxes/input/states/MultiHeightStates.size.html", "_foxes/input/states/MultiHeightStates.weights.html", "_foxes/input/states/MultiHeightTimeseries.html", "_foxes/input/states/MultiHeightTimeseries.RDICT.html", "_foxes/input/states/ScanWS.html", "_foxes/input/states/ScanWS.__init__.html", "_foxes/input/states/ScanWS.calculate.html", "_foxes/input/states/ScanWS.load_data.html", "_foxes/input/states/ScanWS.output_point_vars.html", "_foxes/input/states/ScanWS.size.html", "_foxes/input/states/ScanWS.weights.html", "_foxes/input/states/SingleStateStates.html", "_foxes/input/states/SingleStateStates.__init__.html", "_foxes/input/states/SingleStateStates.calculate.html", "_foxes/input/states/SingleStateStates.initialize.html", "_foxes/input/states/SingleStateStates.output_point_vars.html", "_foxes/input/states/SingleStateStates.size.html", "_foxes/input/states/SingleStateStates.sub_models.html", "_foxes/input/states/SingleStateStates.weights.html", "_foxes/input/states/StatesTable.html", "_foxes/input/states/StatesTable.RDICT.html", "_foxes/input/states/StatesTable.__init__.html", "_foxes/input/states/StatesTable.calculate.html", "_foxes/input/states/StatesTable.finalize.html", "_foxes/input/states/StatesTable.index.html", "_foxes/input/states/StatesTable.initialize.html", "_foxes/input/states/StatesTable.load_data.html", "_foxes/input/states/StatesTable.output_point_vars.html", "_foxes/input/states/StatesTable.reset.html", "_foxes/input/states/StatesTable.size.html", "_foxes/input/states/StatesTable.sub_models.html", "_foxes/input/states/StatesTable.weights.html", "_foxes/input/states/TabStates.html", "_foxes/input/states/TabStates.__init__.html", "_foxes/input/states/TabStates.load_data.html", "_foxes/input/states/Timeseries.html", "_foxes/input/states/Timeseries.RDICT.html", "_foxes/input/states/create/create_random_abl_states.html", "_foxes/input/states/create/random_timseries_data.html", "_foxes/input/states/create/write_random_abl_states.html", "_foxes/input/windio/WindioRunner.html", "_foxes/input/windio/WindioRunner.__init__.html", "_foxes/input/windio/WindioRunner.finalize.html", "_foxes/input/windio/WindioRunner.initialize.html", "_foxes/input/windio/WindioRunner.initialized.html", "_foxes/input/windio/WindioRunner.print.html", "_foxes/input/windio/WindioRunner.run.html", "_foxes/input/windio/WindioRunner.run_farm_calc.html", "_foxes/input/windio/WindioRunner.run_outputs.html", "_foxes/input/windio/get_states.html", "_foxes/input/windio/read_attributes.html", "_foxes/input/windio/read_layout.html", "_foxes/input/windio/read_outputs.html", "_foxes/input/windio/read_turbine_type.html", "_foxes/input/windio/read_windio.html", "_foxes/models/ModelBook.html", "_foxes/models/ModelBook.__getitem__.html", "_foxes/models/ModelBook.__init__.html", "_foxes/models/ModelBook.default_partial_wakes.html", "_foxes/models/ModelBook.finalize.html", "_foxes/models/ModelBook.get.html", "_foxes/models/ModelBook.print_toc.html", "_foxes/models/axial_inductionBetzAxialInduction.html", "_foxes/models/axial_inductionBetzAxialInduction.__init__.html", "_foxes/models/axial_inductionBetzAxialInduction.ct2a.html", "_foxes/models/axial_inductionMadsenAxialInduction.html", "_foxes/models/axial_inductionMadsenAxialInduction.__init__.html", "_foxes/models/axial_inductionMadsenAxialInduction.ct2a.html", "_foxes/models/farm_controllers/BasicFarmController.html", "_foxes/models/farm_models/Turbine2FarmModel.html", "_foxes/models/farm_models/Turbine2FarmModel.__init__.html", "_foxes/models/farm_models/Turbine2FarmModel.__repr__.html", "_foxes/models/farm_models/Turbine2FarmModel.calculate.html", "_foxes/models/farm_models/Turbine2FarmModel.output_farm_vars.html", "_foxes/models/farm_models/Turbine2FarmModel.sub_models.html", "_foxes/models/ground_modelsGroundMirror.html", "_foxes/models/ground_modelsGroundMirror.__init__.html", "_foxes/models/ground_modelsNoGround.html", "_foxes/models/ground_modelsWakeMirror.html", "_foxes/models/ground_modelsWakeMirror.__init__.html", "_foxes/models/ground_modelsWakeMirror.contribute_to_farm_wakes.html", "_foxes/models/ground_modelsWakeMirror.contribute_to_point_wakes.html", "_foxes/models/partial_wakes/PartialAxiwake.html", "_foxes/models/partial_wakes/PartialAxiwake.__init__.html", "_foxes/models/partial_wakes/PartialAxiwake.__repr__.html", "_foxes/models/partial_wakes/PartialAxiwake.check_wmodel.html", "_foxes/models/partial_wakes/PartialAxiwake.contribute.html", "_foxes/models/partial_wakes/PartialCentre.html", "_foxes/models/partial_wakes/PartialCentre.get_wake_points.html", "_foxes/models/partial_wakes/PartialGrid.html", "_foxes/models/partial_wakes/PartialGrid.__init__.html", "_foxes/models/partial_wakes/PartialSegregated.html", "_foxes/models/partial_wakes/PartialSegregated.__init__.html", "_foxes/models/partial_wakes/PartialSegregated.__repr__.html", "_foxes/models/partial_wakes/PartialSegregated.finalize_wakes.html", "_foxes/models/partial_wakes/PartialSegregated.get_wake_points.html", "_foxes/models/partial_wakes/PartialSegregated.sub_models.html", "_foxes/models/partial_wakes/PartialTopHat.html", "_foxes/models/partial_wakes/PartialTopHat.__init__.html", "_foxes/models/partial_wakes/PartialTopHat.check_wmodel.html", "_foxes/models/partial_wakes/PartialTopHat.contribute.html", "_foxes/models/partial_wakes/PartialTopHat.initialize.html", "_foxes/models/partial_wakes/PartialTopHat.sub_models.html", "_foxes/models/partial_wakes/RotorPoints.html", "_foxes/models/partial_wakes/RotorPoints.finalize_wakes.html", "_foxes/models/partial_wakes/RotorPoints.get_wake_points.html", "_foxes/models/point_models/SetUniformData.html", "_foxes/models/point_models/SetUniformData.__init__.html", "_foxes/models/point_models/SetUniformData.calculate.html", "_foxes/models/point_models/SetUniformData.load_data.html", "_foxes/models/point_models/SetUniformData.output_point_vars.html", "_foxes/models/point_models/TKE2TI.html", "_foxes/models/point_models/TKE2TI.calculate.html", "_foxes/models/point_models/TKE2TI.output_point_vars.html", "_foxes/models/point_models/WakeDeltas.html", "_foxes/models/point_models/WakeDeltas.__init__.html", "_foxes/models/point_models/WakeDeltas.calculate.html", "_foxes/models/point_models/WakeDeltas.output_point_vars.html", "_foxes/models/rotor_models/CentreRotor.html", "_foxes/models/rotor_models/CentreRotor.design_points.html", "_foxes/models/rotor_models/CentreRotor.eval_rpoint_results.html", "_foxes/models/rotor_models/CentreRotor.get_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.n_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.rotor_point_weights.html", "_foxes/models/rotor_models/GridRotor.html", "_foxes/models/rotor_models/GridRotor.__init__.html", "_foxes/models/rotor_models/GridRotor.__repr__.html", "_foxes/models/rotor_models/GridRotor.design_points.html", "_foxes/models/rotor_models/GridRotor.initialize.html", "_foxes/models/rotor_models/GridRotor.n_rotor_points.html", "_foxes/models/rotor_models/GridRotor.rotor_point_weights.html", "_foxes/models/rotor_models/LevelRotor.html", "_foxes/models/rotor_models/LevelRotor.__init__.html", "_foxes/models/rotor_models/LevelRotor.__repr__.html", "_foxes/models/rotor_models/LevelRotor.design_points.html", "_foxes/models/rotor_models/LevelRotor.initialize.html", "_foxes/models/rotor_models/LevelRotor.n_rotor_points.html", "_foxes/models/rotor_models/LevelRotor.rotor_point_weights.html", "_foxes/models/turbine_models/Calculator.html", "_foxes/models/turbine_models/Calculator.__init__.html", "_foxes/models/turbine_models/Calculator.__repr__.html", "_foxes/models/turbine_models/Calculator.calculate.html", "_foxes/models/turbine_models/Calculator.output_farm_vars.html", "_foxes/models/turbine_models/LookupTable.html", "_foxes/models/turbine_models/LookupTable.__init__.html", "_foxes/models/turbine_models/LookupTable.calculate.html", "_foxes/models/turbine_models/LookupTable.load_data.html", "_foxes/models/turbine_models/LookupTable.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.html", "_foxes/models/turbine_models/PowerMask.__init__.html", "_foxes/models/turbine_models/PowerMask.__repr__.html", "_foxes/models/turbine_models/PowerMask.calculate.html", "_foxes/models/turbine_models/PowerMask.initialize.html", "_foxes/models/turbine_models/PowerMask.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.sub_models.html", "_foxes/models/turbine_models/RotorCentreCalc.html", "_foxes/models/turbine_models/RotorCentreCalc.__init__.html", "_foxes/models/turbine_models/RotorCentreCalc.calculate.html", "_foxes/models/turbine_models/RotorCentreCalc.initialize.html", "_foxes/models/turbine_models/RotorCentreCalc.output_farm_vars.html", "_foxes/models/turbine_models/RotorCentreCalc.sub_models.html", "_foxes/models/turbine_models/SectorManagement.html", "_foxes/models/turbine_models/SectorManagement.__init__.html", "_foxes/models/turbine_models/SectorManagement.calculate.html", "_foxes/models/turbine_models/SectorManagement.initialize.html", "_foxes/models/turbine_models/SectorManagement.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.html", "_foxes/models/turbine_models/SetFarmVars.__init__.html", "_foxes/models/turbine_models/SetFarmVars.add_var.html", "_foxes/models/turbine_models/SetFarmVars.calculate.html", "_foxes/models/turbine_models/SetFarmVars.load_data.html", "_foxes/models/turbine_models/SetFarmVars.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.reset.html", "_foxes/models/turbine_models/TableFactors.html", "_foxes/models/turbine_models/TableFactors.__init__.html", "_foxes/models/turbine_models/TableFactors.calculate.html", "_foxes/models/turbine_models/TableFactors.initialize.html", "_foxes/models/turbine_models/TableFactors.output_farm_vars.html", "_foxes/models/turbine_models/Thrust2Ct.html", "_foxes/models/turbine_models/Thrust2Ct.__init__.html", "_foxes/models/turbine_models/Thrust2Ct.__repr__.html", "_foxes/models/turbine_models/Thrust2Ct.calculate.html", "_foxes/models/turbine_models/Thrust2Ct.output_farm_vars.html", "_foxes/models/turbine_models/YAW2YAWM.html", "_foxes/models/turbine_models/YAW2YAWM.calculate.html", "_foxes/models/turbine_models/YAW2YAWM.output_farm_vars.html", "_foxes/models/turbine_models/YAWM2YAW.html", "_foxes/models/turbine_models/YAWM2YAW.calculate.html", "_foxes/models/turbine_models/YAWM2YAW.output_farm_vars.html", "_foxes/models/turbine_models/kTI.html", "_foxes/models/turbine_models/kTI.__init__.html", "_foxes/models/turbine_models/kTI.__repr__.html", "_foxes/models/turbine_models/kTI.calculate.html", "_foxes/models/turbine_models/kTI.output_farm_vars.html", "_foxes/models/turbine_types/CpCtFile.html", "_foxes/models/turbine_types/CpCtFile.__init__.html", "_foxes/models/turbine_types/CpCtFromTwo.html", "_foxes/models/turbine_types/CpCtFromTwo.__init__.html", "_foxes/models/turbine_types/NullType.html", "_foxes/models/turbine_types/NullType.calculate.html", "_foxes/models/turbine_types/NullType.output_farm_vars.html", "_foxes/models/turbine_types/PCtFile.html", "_foxes/models/turbine_types/PCtFile.__init__.html", "_foxes/models/turbine_types/PCtFile.__repr__.html", "_foxes/models/turbine_types/PCtFile.calculate.html", "_foxes/models/turbine_types/PCtFile.finalize.html", "_foxes/models/turbine_types/PCtFile.load_data.html", "_foxes/models/turbine_types/PCtFile.modify_cutin.html", "_foxes/models/turbine_types/PCtFile.output_farm_vars.html", "_foxes/models/turbine_types/PCtFromTwo.html", "_foxes/models/turbine_types/PCtFromTwo.__init__.html", "_foxes/models/turbine_types/PCtFromTwo.__repr__.html", "_foxes/models/turbine_types/PCtFromTwo.calculate.html", "_foxes/models/turbine_types/PCtFromTwo.finalize.html", "_foxes/models/turbine_types/PCtFromTwo.load_data.html", "_foxes/models/turbine_types/PCtFromTwo.modify_cutin.html", "_foxes/models/turbine_types/PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__repr__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.output_farm_vars.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.input_vars.html", "_foxes/models/vertical_profiles/DataProfile.html", "_foxes/models/vertical_profiles/DataProfile.__init__.html", "_foxes/models/vertical_profiles/DataProfile.calculate.html", "_foxes/models/vertical_profiles/DataProfile.input_vars.html", "_foxes/models/vertical_profiles/ShearedProfile.html", "_foxes/models/vertical_profiles/ShearedProfile.calculate.html", "_foxes/models/vertical_profiles/ShearedProfile.input_vars.html", "_foxes/models/vertical_profiles/UniformProfile.html", "_foxes/models/vertical_profiles/UniformProfile.__init__.html", "_foxes/models/vertical_profiles/UniformProfile.calculate.html", "_foxes/models/vertical_profiles/UniformProfile.input_vars.html", "_foxes/models/wake_frames/FarmOrder.html", "_foxes/models/wake_frames/FarmOrder.__init__.html", "_foxes/models/wake_frames/FarmOrder.calc_order.html", "_foxes/models/wake_frames/FarmOrder.get_centreline_points.html", "_foxes/models/wake_frames/FarmOrder.get_wake_coos.html", "_foxes/models/wake_frames/FarmOrder.sub_models.html", "_foxes/models/wake_frames/RotorWD.html", "_foxes/models/wake_frames/RotorWD.__init__.html", "_foxes/models/wake_frames/RotorWD.calc_order.html", "_foxes/models/wake_frames/RotorWD.get_centreline_points.html", "_foxes/models/wake_frames/RotorWD.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.html", "_foxes/models/wake_frames/SeqDynamicWakes.__init__.html", "_foxes/models/wake_frames/SeqDynamicWakes.__repr__.html", "_foxes/models/wake_frames/SeqDynamicWakes.calc_order.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_centreline_points.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_modelling_data.html", "_foxes/models/wake_frames/SeqDynamicWakes.initialize.html", "_foxes/models/wake_frames/Streamlines2D.html", "_foxes/models/wake_frames/Streamlines2D.__init__.html", "_foxes/models/wake_frames/Streamlines2D.__repr__.html", "_foxes/models/wake_frames/Streamlines2D.calc_order.html", "_foxes/models/wake_frames/Streamlines2D.get_centreline_points.html", "_foxes/models/wake_frames/Streamlines2D.get_streamline_data.html", "_foxes/models/wake_frames/Streamlines2D.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.html", "_foxes/models/wake_frames/Timelines.__init__.html", "_foxes/models/wake_frames/Timelines.__repr__.html", "_foxes/models/wake_frames/Timelines.calc_order.html", "_foxes/models/wake_frames/Timelines.get_centreline_points.html", "_foxes/models/wake_frames/Timelines.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.initialize.html", "_foxes/models/wake_frames/YawedWakes.html", "_foxes/models/wake_frames/YawedWakes.__init__.html", "_foxes/models/wake_frames/YawedWakes.__repr__.html", "_foxes/models/wake_frames/YawedWakes.calc_order.html", "_foxes/models/wake_frames/YawedWakes.get_centreline_points.html", "_foxes/models/wake_frames/YawedWakes.get_wake_coos.html", "_foxes/models/wake_frames/YawedWakes.initialize.html", "_foxes/models/wake_frames/YawedWakes.sub_models.html", "_foxes/models/wake_models/AxisymmetricWakeModel.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.html", "_foxes/models/wake_models/DistSlicedWakeModel.__init__.html", "_foxes/models/wake_models/DistSlicedWakeModel.calc_wakes_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.contribute.html", "_foxes/models/wake_models/DistSlicedWakeModel.finalize_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.initialize.html", "_foxes/models/wake_models/DistSlicedWakeModel.sub_models.html", "_foxes/models/wake_models/GaussianWakeModel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_amplitude_sigma.html", "_foxes/models/wake_models/GaussianWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.html", "_foxes/models/wake_models/TopHatWakeModel.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.calc_centreline.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wake_radius.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.initialize.html", "_foxes/models/wake_models/TopHatWakeModel.sub_models.html", "_foxes/models/wake_models/induction/RankineHalfBody.html", "_foxes/models/wake_models/induction/RankineHalfBody.__init__.html", "_foxes/models/wake_models/induction/RankineHalfBody.__repr__.html", "_foxes/models/wake_models/induction/RankineHalfBody.contribute.html", "_foxes/models/wake_models/induction/RankineHalfBody.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.initialize.html", "_foxes/models/wake_models/induction/RankineHalfBody.new_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.sub_models.html", "_foxes/models/wake_models/induction/Rathmann.html", "_foxes/models/wake_models/induction/Rathmann.__init__.html", "_foxes/models/wake_models/induction/Rathmann.__repr__.html", "_foxes/models/wake_models/induction/Rathmann.contribute.html", "_foxes/models/wake_models/induction/Rathmann.initialize.html", "_foxes/models/wake_models/induction/Rathmann.new_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar.html", "_foxes/models/wake_models/induction/SelfSimilar.__init__.html", "_foxes/models/wake_models/induction/SelfSimilar.__repr__.html", "_foxes/models/wake_models/induction/SelfSimilar.contribute.html", "_foxes/models/wake_models/induction/SelfSimilar.initialize.html", "_foxes/models/wake_models/induction/SelfSimilar.new_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar2020.html", "_foxes/models/wake_models/induction/VortexSheet.html", "_foxes/models/wake_models/induction/VortexSheet.__init__.html", "_foxes/models/wake_models/induction/VortexSheet.__repr__.html", "_foxes/models/wake_models/induction/VortexSheet.contribute.html", "_foxes/models/wake_models/induction/VortexSheet.initialize.html", "_foxes/models/wake_models/induction/VortexSheet.new_wake_deltas.html", "_foxes/models/wake_models/induction/VortexSheet.sub_models.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__init__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__repr__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_centreline.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.new_wake_deltas.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.sub_models.html", "_foxes/models/wake_models/ti/IECTIWake.html", "_foxes/models/wake_models/ti/IECTIWake.__init__.html", "_foxes/models/wake_models/ti/IECTIWake.__repr__.html", "_foxes/models/wake_models/ti/IECTIWake.calc_centreline.html", "_foxes/models/wake_models/ti/IECTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/IECTIWake.new_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2014.html", "_foxes/models/wake_models/wind/Bastankhah2014.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2014.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2014.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/Bastankhah2014.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2014.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016.html", "_foxes/models/wake_models/wind/Bastankhah2016.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2016.calc_wakes_x_yz.html", "_foxes/models/wake_models/wind/Bastankhah2016.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.CHECK.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.MDATA_KEY.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.PARS.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC_S.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Y_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Z_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.ST_SEL.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.X0.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.calc_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.clean.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.get_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.has_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.pars.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.sub_models.html", "_foxes/models/wake_models/wind/JensenWake.html", "_foxes/models/wake_models/wind/JensenWake.__init__.html", "_foxes/models/wake_models/wind/JensenWake.__repr__.html", "_foxes/models/wake_models/wind/JensenWake.calc_centreline.html", "_foxes/models/wake_models/wind/JensenWake.calc_wake_radius.html", "_foxes/models/wake_models/wind/TurbOParkWake.html", "_foxes/models/wake_models/wind/TurbOParkWake.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWake.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWake.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/TurbOParkWake.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWake.sub_models.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.finalize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.new_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.sub_models.html", "_foxes/models/wake_superpositions/TILinear.html", "_foxes/models/wake_superpositions/TILinear.__init__.html", "_foxes/models/wake_superpositions/TILinear.__repr__.html", "_foxes/models/wake_superpositions/TILinear.add_wake.html", "_foxes/models/wake_superpositions/TILinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIMax.html", "_foxes/models/wake_superpositions/TIMax.__init__.html", "_foxes/models/wake_superpositions/TIMax.__repr__.html", "_foxes/models/wake_superpositions/TIMax.add_wake.html", "_foxes/models/wake_superpositions/TIMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIPow.html", "_foxes/models/wake_superpositions/TIPow.__init__.html", "_foxes/models/wake_superpositions/TIPow.__repr__.html", "_foxes/models/wake_superpositions/TIPow.add_wake.html", "_foxes/models/wake_superpositions/TIPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIQuadratic.html", "_foxes/models/wake_superpositions/TIQuadratic.__init__.html", "_foxes/models/wake_superpositions/TIQuadratic.__repr__.html", "_foxes/models/wake_superpositions/TIQuadratic.add_wake.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.html", "_foxes/models/wake_superpositions/WSLinear.__init__.html", "_foxes/models/wake_superpositions/WSLinear.__repr__.html", "_foxes/models/wake_superpositions/WSLinear.add_wake.html", "_foxes/models/wake_superpositions/WSLinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.input_farm_vars.html", "_foxes/models/wake_superpositions/WSLinearLocal.html", "_foxes/models/wake_superpositions/WSLinearLocal.__init__.html", "_foxes/models/wake_superpositions/WSLinearLocal.__repr__.html", "_foxes/models/wake_superpositions/WSLinearLocal.add_wake.html", "_foxes/models/wake_superpositions/WSLinearLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinearLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMax.html", "_foxes/models/wake_superpositions/WSMax.__init__.html", "_foxes/models/wake_superpositions/WSMax.__repr__.html", "_foxes/models/wake_superpositions/WSMax.add_wake.html", "_foxes/models/wake_superpositions/WSMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMax.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMaxLocal.html", "_foxes/models/wake_superpositions/WSMaxLocal.__init__.html", "_foxes/models/wake_superpositions/WSMaxLocal.__repr__.html", "_foxes/models/wake_superpositions/WSMaxLocal.add_wake.html", "_foxes/models/wake_superpositions/WSMaxLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMaxLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPow.html", "_foxes/models/wake_superpositions/WSPow.__init__.html", "_foxes/models/wake_superpositions/WSPow.__repr__.html", "_foxes/models/wake_superpositions/WSPow.add_wake.html", "_foxes/models/wake_superpositions/WSPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPow.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPowLocal.html", "_foxes/models/wake_superpositions/WSPowLocal.__init__.html", "_foxes/models/wake_superpositions/WSPowLocal.__repr__.html", "_foxes/models/wake_superpositions/WSPowLocal.add_wake.html", "_foxes/models/wake_superpositions/WSPowLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPowLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSProduct.html", "_foxes/models/wake_superpositions/WSProduct.__init__.html", "_foxes/models/wake_superpositions/WSProduct.__repr__.html", "_foxes/models/wake_superpositions/WSProduct.add_wake.html", "_foxes/models/wake_superpositions/WSProduct.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSProduct.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadratic.html", "_foxes/models/wake_superpositions/WSQuadratic.__init__.html", "_foxes/models/wake_superpositions/WSQuadratic.__repr__.html", "_foxes/models/wake_superpositions/WSQuadratic.add_wake.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadratic.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.__init__.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.__repr__.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.add_wake.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.input_farm_vars.html", "_foxes/output/Animator.html", "_foxes/output/Animator.__init__.html", "_foxes/output/Animator.add_generator.html", "_foxes/output/Animator.animate.html", "_foxes/output/Animator.generators.html", "_foxes/output/FarmLayoutOutput.html", "_foxes/output/FarmLayoutOutput.__init__.html", "_foxes/output/FarmLayoutOutput.get_figure.html", "_foxes/output/FarmLayoutOutput.get_layout_data.html", "_foxes/output/FarmLayoutOutput.get_layout_dict.html", "_foxes/output/FarmLayoutOutput.write_csv.html", "_foxes/output/FarmLayoutOutput.write_json.html", "_foxes/output/FarmLayoutOutput.write_plot.html", "_foxes/output/FarmLayoutOutput.write_xyh.html", "_foxes/output/FarmResultsEval.html", "_foxes/output/FarmResultsEval.__init__.html", "_foxes/output/FarmResultsEval.add_capacity.html", "_foxes/output/FarmResultsEval.add_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_mean.html", "_foxes/output/FarmResultsEval.calc_farm_sum.html", "_foxes/output/FarmResultsEval.calc_farm_yield.html", "_foxes/output/FarmResultsEval.calc_mean_farm_power.html", "_foxes/output/FarmResultsEval.calc_states_mean.html", "_foxes/output/FarmResultsEval.calc_states_std.html", "_foxes/output/FarmResultsEval.calc_states_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_mean.html", "_foxes/output/FarmResultsEval.calc_turbine_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_yield.html", "_foxes/output/FarmResultsEval.gen_stdata.html", "_foxes/output/FarmResultsEval.reduce_all.html", "_foxes/output/FarmResultsEval.reduce_states.html", "_foxes/output/FarmResultsEval.reduce_turbines.html", "_foxes/output/FarmResultsEval.weinsum.html", "_foxes/output/FlowPlots2D.html", "_foxes/output/FlowPlots2D.gen_states_fig_xy.html", "_foxes/output/FlowPlots2D.gen_states_fig_xz.html", "_foxes/output/FlowPlots2D.gen_states_fig_yz.html", "_foxes/output/FlowPlots2D.get_mean_fig_xy.html", "_foxes/output/FlowPlots2D.get_mean_fig_xz.html", "_foxes/output/FlowPlots2D.get_mean_fig_yz.html", "_foxes/output/Output.html", "_foxes/output/Output.__init__.html", "_foxes/output/Output.get_fpath.html", "_foxes/output/Output.new.html", "_foxes/output/Output.print_models.html", "_foxes/output/Output.write.html", "_foxes/output/PointCalculator.html", "_foxes/output/PointCalculator.__init__.html", "_foxes/output/PointCalculator.calculate.html", "_foxes/output/ResultsWriter.html", "_foxes/output/ResultsWriter.__init__.html", "_foxes/output/ResultsWriter.write_csv.html", "_foxes/output/ResultsWriter.write_nc.html", "_foxes/output/RosePlotOutput.html", "_foxes/output/RosePlotOutput.__init__.html", "_foxes/output/RosePlotOutput.get_data.html", "_foxes/output/RosePlotOutput.get_data_info.html", "_foxes/output/RosePlotOutput.get_figure.html", "_foxes/output/RosePlotOutput.write_figure.html", "_foxes/output/RotorPointPlot.html", "_foxes/output/RotorPointPlot.__init__.html", "_foxes/output/RotorPointPlot.get_point_figure.html", "_foxes/output/SeqFlowAnimationPlugin.html", "_foxes/output/SeqFlowAnimationPlugin.__init__.html", "_foxes/output/SeqFlowAnimationPlugin.gen_images.html", "_foxes/output/SeqFlowAnimationPlugin.initialize.html", "_foxes/output/SeqFlowAnimationPlugin.update.html", "_foxes/output/SliceData.html", "_foxes/output/SliceData.__init__.html", "_foxes/output/SliceData.get_mean_data_xy.html", "_foxes/output/SliceData.get_mean_data_xz.html", "_foxes/output/SliceData.get_mean_data_yz.html", "_foxes/output/SliceData.get_states_data_xy.html", "_foxes/output/SliceData.get_states_data_xz.html", "_foxes/output/SliceData.get_states_data_yz.html", "_foxes/output/StateTurbineMap.html", "_foxes/output/StateTurbineMap.__init__.html", "_foxes/output/StateTurbineMap.plot_map.html", "_foxes/output/StateTurbineTable.html", "_foxes/output/StateTurbineTable.__init__.html", "_foxes/output/StateTurbineTable.get_dataset.html", "_foxes/output/StatesRosePlotOutput.html", "_foxes/output/StatesRosePlotOutput.__init__.html", "_foxes/output/TurbineTypeCurves.html", "_foxes/output/TurbineTypeCurves.__init__.html", "_foxes/output/TurbineTypeCurves.plot_curves.html", "_foxes/output/flow_plots_2d/get_fig.html", "_foxes/utils/DataBook.html", "_foxes/utils/DataBook.__init__.html", "_foxes/utils/DataBook.add_data_package.html", "_foxes/utils/DataBook.add_data_package_file.html", "_foxes/utils/DataBook.add_file.html", "_foxes/utils/DataBook.add_files.html", "_foxes/utils/DataBook.get_file_path.html", "_foxes/utils/DataBook.toc.html", "_foxes/utils/Dict.html", "_foxes/utils/Dict.__getitem__.html", "_foxes/utils/Dict.__init__.html", "_foxes/utils/FDict.html", "_foxes/utils/FDict.__contains__.html", "_foxes/utils/FDict.__getitem__.html", "_foxes/utils/FDict.__init__.html", "_foxes/utils/FDict.add_factory.html", "_foxes/utils/FDict.add_k_factory.html", "_foxes/utils/Factory.html", "_foxes/utils/Factory.__init__.html", "_foxes/utils/Factory.__str__.html", "_foxes/utils/Factory.check_match.html", "_foxes/utils/Factory.construct.html", "_foxes/utils/Factory.name_prefix.html", "_foxes/utils/Factory.name_suffix.html", "_foxes/utils/Factory.variables.html", "_foxes/utils/PandasFileHelper.html", "_foxes/utils/PandasFileHelper.DATA_FILE_FORMATS.html", "_foxes/utils/PandasFileHelper.DEFAULT_FORMAT_DICT.html", "_foxes/utils/PandasFileHelper.DEFAULT_READING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.DEFAULT_WRITING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.read_file.html", "_foxes/utils/PandasFileHelper.write_file.html", "_foxes/utils/TabWindroseAxes.html", "_foxes/utils/TabWindroseAxes.ArtistList.html", "_foxes/utils/TabWindroseAxes.ArtistList.__class_getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__init__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__repr__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__subclasshook__.html", "_foxes/utils/TabWindroseAxes.ArtistList.count.html", "_foxes/utils/TabWindroseAxes.ArtistList.index.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__add__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__array__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__sub__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.depth.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.frozen.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_matrix.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.invalidate.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_separable.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.pass_through.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.set_children.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_angles.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_point.html", "_foxes/utils/TabWindroseAxes.PolarAffine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__array__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__eq__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__init__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__str__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.frozen.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_matrix.html", "_foxes/utils/TabWindroseAxes.PolarAffine.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarAffine.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.inverted.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_separable.html", "_foxes/utils/TabWindroseAxes.PolarAffine.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.to_values.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.PolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.RadialLocator.html", "_foxes/utils/TabWindroseAxes.RadialLocator.MAXTICKS.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__call__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__init__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.create_dummy_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.RadialLocator.raise_if_exceeds.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_params.html", "_foxes/utils/TabWindroseAxes.RadialLocator.tick_values.html", "_foxes/utils/TabWindroseAxes.RadialLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.fix_minus.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data_short.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_ticks.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.get_offset.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.locs.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_locs.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__init__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.__init__.html", "_foxes/utils/TabWindroseAxes.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.__repr__.html", "_foxes/utils/TabWindroseAxes.__str__.html", "_foxes/utils/TabWindroseAxes.acorr.html", "_foxes/utils/TabWindroseAxes.add_artist.html", "_foxes/utils/TabWindroseAxes.add_callback.html", "_foxes/utils/TabWindroseAxes.add_child_axes.html", "_foxes/utils/TabWindroseAxes.add_collection.html", "_foxes/utils/TabWindroseAxes.add_container.html", "_foxes/utils/TabWindroseAxes.add_image.html", "_foxes/utils/TabWindroseAxes.add_line.html", "_foxes/utils/TabWindroseAxes.add_patch.html", "_foxes/utils/TabWindroseAxes.add_table.html", "_foxes/utils/TabWindroseAxes.angle_spectrum.html", "_foxes/utils/TabWindroseAxes.annotate.html", "_foxes/utils/TabWindroseAxes.apply_aspect.html", "_foxes/utils/TabWindroseAxes.arrow.html", "_foxes/utils/TabWindroseAxes.artists.html", "_foxes/utils/TabWindroseAxes.autoscale.html", "_foxes/utils/TabWindroseAxes.autoscale_view.html", "_foxes/utils/TabWindroseAxes.axes.html", "_foxes/utils/TabWindroseAxes.axhline.html", "_foxes/utils/TabWindroseAxes.axhspan.html", "_foxes/utils/TabWindroseAxes.axis.html", "_foxes/utils/TabWindroseAxes.axline.html", "_foxes/utils/TabWindroseAxes.axvline.html", "_foxes/utils/TabWindroseAxes.axvspan.html", "_foxes/utils/TabWindroseAxes.bar.html", "_foxes/utils/TabWindroseAxes.bar_label.html", "_foxes/utils/TabWindroseAxes.barbs.html", "_foxes/utils/TabWindroseAxes.barh.html", "_foxes/utils/TabWindroseAxes.box.html", "_foxes/utils/TabWindroseAxes.boxplot.html", "_foxes/utils/TabWindroseAxes.broken_barh.html", "_foxes/utils/TabWindroseAxes.bxp.html", "_foxes/utils/TabWindroseAxes.can_pan.html", "_foxes/utils/TabWindroseAxes.can_zoom.html", "_foxes/utils/TabWindroseAxes.cla.html", "_foxes/utils/TabWindroseAxes.clabel.html", "_foxes/utils/TabWindroseAxes.clear.html", "_foxes/utils/TabWindroseAxes.cohere.html", "_foxes/utils/TabWindroseAxes.collections.html", "_foxes/utils/TabWindroseAxes.contains.html", "_foxes/utils/TabWindroseAxes.contains_point.html", "_foxes/utils/TabWindroseAxes.contour.html", "_foxes/utils/TabWindroseAxes.contourf.html", "_foxes/utils/TabWindroseAxes.convert_xunits.html", "_foxes/utils/TabWindroseAxes.convert_yunits.html", "_foxes/utils/TabWindroseAxes.csd.html", "_foxes/utils/TabWindroseAxes.drag_pan.html", "_foxes/utils/TabWindroseAxes.draw.html", "_foxes/utils/TabWindroseAxes.draw_artist.html", "_foxes/utils/TabWindroseAxes.ecdf.html", "_foxes/utils/TabWindroseAxes.end_pan.html", "_foxes/utils/TabWindroseAxes.errorbar.html", "_foxes/utils/TabWindroseAxes.eventplot.html", "_foxes/utils/TabWindroseAxes.fill.html", "_foxes/utils/TabWindroseAxes.fill_between.html", "_foxes/utils/TabWindroseAxes.fill_betweenx.html", "_foxes/utils/TabWindroseAxes.findobj.html", "_foxes/utils/TabWindroseAxes.format_coord.html", "_foxes/utils/TabWindroseAxes.format_cursor_data.html", "_foxes/utils/TabWindroseAxes.format_xdata.html", "_foxes/utils/TabWindroseAxes.format_ydata.html", "_foxes/utils/TabWindroseAxes.from_ax.html", "_foxes/utils/TabWindroseAxes.get_adjustable.html", "_foxes/utils/TabWindroseAxes.get_agg_filter.html", "_foxes/utils/TabWindroseAxes.get_alpha.html", "_foxes/utils/TabWindroseAxes.get_anchor.html", "_foxes/utils/TabWindroseAxes.get_animated.html", "_foxes/utils/TabWindroseAxes.get_aspect.html", "_foxes/utils/TabWindroseAxes.get_autoscale_on.html", "_foxes/utils/TabWindroseAxes.get_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.get_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.get_axes_locator.html", "_foxes/utils/TabWindroseAxes.get_axisbelow.html", "_foxes/utils/TabWindroseAxes.get_box_aspect.html", "_foxes/utils/TabWindroseAxes.get_children.html", "_foxes/utils/TabWindroseAxes.get_clip_box.html", "_foxes/utils/TabWindroseAxes.get_clip_on.html", "_foxes/utils/TabWindroseAxes.get_clip_path.html", "_foxes/utils/TabWindroseAxes.get_cursor_data.html", "_foxes/utils/TabWindroseAxes.get_data_ratio.html", "_foxes/utils/TabWindroseAxes.get_default_bbox_extra_artists.html", "_foxes/utils/TabWindroseAxes.get_facecolor.html", "_foxes/utils/TabWindroseAxes.get_fc.html", "_foxes/utils/TabWindroseAxes.get_figure.html", "_foxes/utils/TabWindroseAxes.get_forward_navigation_events.html", "_foxes/utils/TabWindroseAxes.get_frame_on.html", "_foxes/utils/TabWindroseAxes.get_gid.html", "_foxes/utils/TabWindroseAxes.get_gridspec.html", "_foxes/utils/TabWindroseAxes.get_images.html", "_foxes/utils/TabWindroseAxes.get_in_layout.html", "_foxes/utils/TabWindroseAxes.get_label.html", "_foxes/utils/TabWindroseAxes.get_legend.html", "_foxes/utils/TabWindroseAxes.get_legend_handles_labels.html", "_foxes/utils/TabWindroseAxes.get_lines.html", "_foxes/utils/TabWindroseAxes.get_mouseover.html", "_foxes/utils/TabWindroseAxes.get_navigate.html", "_foxes/utils/TabWindroseAxes.get_navigate_mode.html", "_foxes/utils/TabWindroseAxes.get_path_effects.html", "_foxes/utils/TabWindroseAxes.get_picker.html", "_foxes/utils/TabWindroseAxes.get_position.html", "_foxes/utils/TabWindroseAxes.get_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.get_rasterized.html", "_foxes/utils/TabWindroseAxes.get_rlabel_position.html", "_foxes/utils/TabWindroseAxes.get_rmax.html", "_foxes/utils/TabWindroseAxes.get_rmin.html", "_foxes/utils/TabWindroseAxes.get_rorigin.html", "_foxes/utils/TabWindroseAxes.get_rsign.html", "_foxes/utils/TabWindroseAxes.get_shared_x_axes.html", "_foxes/utils/TabWindroseAxes.get_shared_y_axes.html", "_foxes/utils/TabWindroseAxes.get_sketch_params.html", "_foxes/utils/TabWindroseAxes.get_snap.html", "_foxes/utils/TabWindroseAxes.get_subplotspec.html", "_foxes/utils/TabWindroseAxes.get_theta_direction.html", "_foxes/utils/TabWindroseAxes.get_theta_offset.html", "_foxes/utils/TabWindroseAxes.get_thetamax.html", "_foxes/utils/TabWindroseAxes.get_thetamin.html", "_foxes/utils/TabWindroseAxes.get_tightbbox.html", "_foxes/utils/TabWindroseAxes.get_title.html", "_foxes/utils/TabWindroseAxes.get_transform.html", "_foxes/utils/TabWindroseAxes.get_transformed_clip_path_and_affine.html", "_foxes/utils/TabWindroseAxes.get_url.html", "_foxes/utils/TabWindroseAxes.get_visible.html", "_foxes/utils/TabWindroseAxes.get_window_extent.html", "_foxes/utils/TabWindroseAxes.get_xaxis.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_xbound.html", "_foxes/utils/TabWindroseAxes.get_xgridlines.html", "_foxes/utils/TabWindroseAxes.get_xlabel.html", "_foxes/utils/TabWindroseAxes.get_xlim.html", "_foxes/utils/TabWindroseAxes.get_xmajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xmargin.html", "_foxes/utils/TabWindroseAxes.get_xminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xscale.html", "_foxes/utils/TabWindroseAxes.get_xticklabels.html", "_foxes/utils/TabWindroseAxes.get_xticklines.html", "_foxes/utils/TabWindroseAxes.get_xticks.html", "_foxes/utils/TabWindroseAxes.get_yaxis.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_ybound.html", "_foxes/utils/TabWindroseAxes.get_ygridlines.html", "_foxes/utils/TabWindroseAxes.get_ylabel.html", "_foxes/utils/TabWindroseAxes.get_ylim.html", "_foxes/utils/TabWindroseAxes.get_ymajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_ymargin.html", "_foxes/utils/TabWindroseAxes.get_yminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yscale.html", "_foxes/utils/TabWindroseAxes.get_yticklabels.html", "_foxes/utils/TabWindroseAxes.get_yticklines.html", "_foxes/utils/TabWindroseAxes.get_yticks.html", "_foxes/utils/TabWindroseAxes.get_zorder.html", "_foxes/utils/TabWindroseAxes.grid.html", "_foxes/utils/TabWindroseAxes.has_data.html", "_foxes/utils/TabWindroseAxes.have_units.html", "_foxes/utils/TabWindroseAxes.hexbin.html", "_foxes/utils/TabWindroseAxes.hist.html", "_foxes/utils/TabWindroseAxes.hist2d.html", "_foxes/utils/TabWindroseAxes.hlines.html", "_foxes/utils/TabWindroseAxes.images.html", "_foxes/utils/TabWindroseAxes.imshow.html", "_foxes/utils/TabWindroseAxes.in_axes.html", "_foxes/utils/TabWindroseAxes.indicate_inset.html", "_foxes/utils/TabWindroseAxes.indicate_inset_zoom.html", "_foxes/utils/TabWindroseAxes.inset_axes.html", "_foxes/utils/TabWindroseAxes.invert_xaxis.html", "_foxes/utils/TabWindroseAxes.invert_yaxis.html", "_foxes/utils/TabWindroseAxes.is_transform_set.html", "_foxes/utils/TabWindroseAxes.label_outer.html", "_foxes/utils/TabWindroseAxes.legend.html", "_foxes/utils/TabWindroseAxes.lines.html", "_foxes/utils/TabWindroseAxes.locator_params.html", "_foxes/utils/TabWindroseAxes.loglog.html", "_foxes/utils/TabWindroseAxes.magnitude_spectrum.html", "_foxes/utils/TabWindroseAxes.margins.html", "_foxes/utils/TabWindroseAxes.matshow.html", "_foxes/utils/TabWindroseAxes.minorticks_off.html", "_foxes/utils/TabWindroseAxes.minorticks_on.html", "_foxes/utils/TabWindroseAxes.mouseover.html", "_foxes/utils/TabWindroseAxes.name.html", "_foxes/utils/TabWindroseAxes.patches.html", "_foxes/utils/TabWindroseAxes.pchanged.html", "_foxes/utils/TabWindroseAxes.pcolor.html", "_foxes/utils/TabWindroseAxes.pcolorfast.html", "_foxes/utils/TabWindroseAxes.pcolormesh.html", "_foxes/utils/TabWindroseAxes.phase_spectrum.html", "_foxes/utils/TabWindroseAxes.pick.html", "_foxes/utils/TabWindroseAxes.pickable.html", "_foxes/utils/TabWindroseAxes.pie.html", "_foxes/utils/TabWindroseAxes.plot.html", "_foxes/utils/TabWindroseAxes.plot_date.html", "_foxes/utils/TabWindroseAxes.properties.html", "_foxes/utils/TabWindroseAxes.psd.html", "_foxes/utils/TabWindroseAxes.quiver.html", "_foxes/utils/TabWindroseAxes.quiverkey.html", "_foxes/utils/TabWindroseAxes.redraw_in_frame.html", "_foxes/utils/TabWindroseAxes.relim.html", "_foxes/utils/TabWindroseAxes.remove.html", "_foxes/utils/TabWindroseAxes.remove_callback.html", "_foxes/utils/TabWindroseAxes.reset_position.html", "_foxes/utils/TabWindroseAxes.scatter.html", "_foxes/utils/TabWindroseAxes.secondary_xaxis.html", "_foxes/utils/TabWindroseAxes.secondary_yaxis.html", "_foxes/utils/TabWindroseAxes.semilogx.html", "_foxes/utils/TabWindroseAxes.semilogy.html", "_foxes/utils/TabWindroseAxes.set.html", "_foxes/utils/TabWindroseAxes.set_adjustable.html", "_foxes/utils/TabWindroseAxes.set_agg_filter.html", "_foxes/utils/TabWindroseAxes.set_alpha.html", "_foxes/utils/TabWindroseAxes.set_anchor.html", "_foxes/utils/TabWindroseAxes.set_animated.html", "_foxes/utils/TabWindroseAxes.set_aspect.html", "_foxes/utils/TabWindroseAxes.set_autoscale_on.html", "_foxes/utils/TabWindroseAxes.set_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.set_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.set_axes_locator.html", "_foxes/utils/TabWindroseAxes.set_axis_off.html", "_foxes/utils/TabWindroseAxes.set_axis_on.html", "_foxes/utils/TabWindroseAxes.set_axisbelow.html", "_foxes/utils/TabWindroseAxes.set_box_aspect.html", "_foxes/utils/TabWindroseAxes.set_clip_box.html", "_foxes/utils/TabWindroseAxes.set_clip_on.html", "_foxes/utils/TabWindroseAxes.set_clip_path.html", "_foxes/utils/TabWindroseAxes.set_facecolor.html", "_foxes/utils/TabWindroseAxes.set_fc.html", "_foxes/utils/TabWindroseAxes.set_figure.html", "_foxes/utils/TabWindroseAxes.set_forward_navigation_events.html", "_foxes/utils/TabWindroseAxes.set_frame_on.html", "_foxes/utils/TabWindroseAxes.set_gid.html", "_foxes/utils/TabWindroseAxes.set_in_layout.html", "_foxes/utils/TabWindroseAxes.set_label.html", "_foxes/utils/TabWindroseAxes.set_legend.html", "_foxes/utils/TabWindroseAxes.set_mouseover.html", "_foxes/utils/TabWindroseAxes.set_navigate.html", "_foxes/utils/TabWindroseAxes.set_navigate_mode.html", "_foxes/utils/TabWindroseAxes.set_path_effects.html", "_foxes/utils/TabWindroseAxes.set_picker.html", "_foxes/utils/TabWindroseAxes.set_position.html", "_foxes/utils/TabWindroseAxes.set_prop_cycle.html", "_foxes/utils/TabWindroseAxes.set_radii_angle.html", "_foxes/utils/TabWindroseAxes.set_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.set_rasterized.html", "_foxes/utils/TabWindroseAxes.set_rgrids.html", "_foxes/utils/TabWindroseAxes.set_rlabel_position.html", "_foxes/utils/TabWindroseAxes.set_rlim.html", "_foxes/utils/TabWindroseAxes.set_rmax.html", "_foxes/utils/TabWindroseAxes.set_rmin.html", "_foxes/utils/TabWindroseAxes.set_rorigin.html", "_foxes/utils/TabWindroseAxes.set_rscale.html", "_foxes/utils/TabWindroseAxes.set_rticks.html", "_foxes/utils/TabWindroseAxes.set_sketch_params.html", "_foxes/utils/TabWindroseAxes.set_snap.html", "_foxes/utils/TabWindroseAxes.set_subplotspec.html", "_foxes/utils/TabWindroseAxes.set_theta_direction.html", "_foxes/utils/TabWindroseAxes.set_theta_offset.html", "_foxes/utils/TabWindroseAxes.set_theta_zero_location.html", "_foxes/utils/TabWindroseAxes.set_thetagrids.html", "_foxes/utils/TabWindroseAxes.set_thetalim.html", "_foxes/utils/TabWindroseAxes.set_thetamax.html", "_foxes/utils/TabWindroseAxes.set_thetamin.html", "_foxes/utils/TabWindroseAxes.set_title.html", "_foxes/utils/TabWindroseAxes.set_transform.html", "_foxes/utils/TabWindroseAxes.set_url.html", "_foxes/utils/TabWindroseAxes.set_visible.html", "_foxes/utils/TabWindroseAxes.set_xbound.html", "_foxes/utils/TabWindroseAxes.set_xlabel.html", "_foxes/utils/TabWindroseAxes.set_xlim.html", "_foxes/utils/TabWindroseAxes.set_xmargin.html", "_foxes/utils/TabWindroseAxes.set_xscale.html", "_foxes/utils/TabWindroseAxes.set_xticklabels.html", "_foxes/utils/TabWindroseAxes.set_xticks.html", "_foxes/utils/TabWindroseAxes.set_ybound.html", "_foxes/utils/TabWindroseAxes.set_ylabel.html", "_foxes/utils/TabWindroseAxes.set_ylim.html", "_foxes/utils/TabWindroseAxes.set_ymargin.html", "_foxes/utils/TabWindroseAxes.set_yscale.html", "_foxes/utils/TabWindroseAxes.set_yticklabels.html", "_foxes/utils/TabWindroseAxes.set_yticks.html", "_foxes/utils/TabWindroseAxes.set_zorder.html", "_foxes/utils/TabWindroseAxes.sharex.html", "_foxes/utils/TabWindroseAxes.sharey.html", "_foxes/utils/TabWindroseAxes.specgram.html", "_foxes/utils/TabWindroseAxes.spy.html", "_foxes/utils/TabWindroseAxes.stackplot.html", "_foxes/utils/TabWindroseAxes.stairs.html", "_foxes/utils/TabWindroseAxes.stale.html", "_foxes/utils/TabWindroseAxes.start_pan.html", "_foxes/utils/TabWindroseAxes.stem.html", "_foxes/utils/TabWindroseAxes.step.html", "_foxes/utils/TabWindroseAxes.sticky_edges.html", "_foxes/utils/TabWindroseAxes.streamplot.html", "_foxes/utils/TabWindroseAxes.table.html", "_foxes/utils/TabWindroseAxes.tables.html", "_foxes/utils/TabWindroseAxes.text.html", "_foxes/utils/TabWindroseAxes.texts.html", "_foxes/utils/TabWindroseAxes.tick_params.html", "_foxes/utils/TabWindroseAxes.ticklabel_format.html", "_foxes/utils/TabWindroseAxes.tricontour.html", "_foxes/utils/TabWindroseAxes.tricontourf.html", "_foxes/utils/TabWindroseAxes.tripcolor.html", "_foxes/utils/TabWindroseAxes.triplot.html", "_foxes/utils/TabWindroseAxes.twinx.html", "_foxes/utils/TabWindroseAxes.twiny.html", "_foxes/utils/TabWindroseAxes.update.html", "_foxes/utils/TabWindroseAxes.update_datalim.html", "_foxes/utils/TabWindroseAxes.update_from.html", "_foxes/utils/TabWindroseAxes.use_sticky_edges.html", "_foxes/utils/TabWindroseAxes.viewLim.html", "_foxes/utils/TabWindroseAxes.violin.html", "_foxes/utils/TabWindroseAxes.violinplot.html", "_foxes/utils/TabWindroseAxes.vlines.html", "_foxes/utils/TabWindroseAxes.xaxis_date.html", "_foxes/utils/TabWindroseAxes.xaxis_inverted.html", "_foxes/utils/TabWindroseAxes.xcorr.html", "_foxes/utils/TabWindroseAxes.yaxis_date.html", "_foxes/utils/TabWindroseAxes.yaxis_inverted.html", "_foxes/utils/TabWindroseAxes.zorder.html", "_foxes/utils/WakeKFactory.html", "_foxes/utils/WakeKFactory.__init__.html", "_foxes/utils/WakeKFactory.__str__.html", "_foxes/utils/abl/neutral/calc_ws.html", "_foxes/utils/abl/neutral/logz.html", "_foxes/utils/abl/neutral/ustar.html", "_foxes/utils/abl/sheared/calc_ws.html", "_foxes/utils/abl/stable/calc_ws.html", "_foxes/utils/abl/stable/logz.html", "_foxes/utils/abl/stable/psi.html", "_foxes/utils/abl/stable/ustar.html", "_foxes/utils/abl/unstable/calc_ws.html", "_foxes/utils/abl/unstable/psi.html", "_foxes/utils/abl/unstable/ustar.html", "_foxes/utils/all_subclasses.html", "_foxes/utils/cubic_roots.html", "_foxes/utils/delta_wd.html", "_foxes/utils/exec_python.html", "_foxes/utils/geom2d/AreaGeometry.html", "_foxes/utils/geom2d/AreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/AreaGeometry.inverse.html", "_foxes/utils/geom2d/AreaGeometry.p_max.html", "_foxes/utils/geom2d/AreaGeometry.p_min.html", "_foxes/utils/geom2d/AreaGeometry.points_distance.html", "_foxes/utils/geom2d/AreaGeometry.points_inside.html", "_foxes/utils/geom2d/AreaIntersection.html", "_foxes/utils/geom2d/AreaIntersection.__new__.html", "_foxes/utils/geom2d/AreaUnion.html", "_foxes/utils/geom2d/AreaUnion.__init__.html", "_foxes/utils/geom2d/AreaUnion.add_to_figure.html", "_foxes/utils/geom2d/AreaUnion.inverse.html", "_foxes/utils/geom2d/AreaUnion.p_max.html", "_foxes/utils/geom2d/AreaUnion.p_min.html", "_foxes/utils/geom2d/AreaUnion.points_distance.html", "_foxes/utils/geom2d/AreaUnion.points_inside.html", "_foxes/utils/geom2d/Circle.html", "_foxes/utils/geom2d/Circle.__init__.html", "_foxes/utils/geom2d/Circle.add_to_figure.html", "_foxes/utils/geom2d/Circle.p_max.html", "_foxes/utils/geom2d/Circle.p_min.html", "_foxes/utils/geom2d/Circle.points_distance.html", "_foxes/utils/geom2d/Circle.points_inside.html", "_foxes/utils/geom2d/ClosedPolygon.html", "_foxes/utils/geom2d/ClosedPolygon.__init__.html", "_foxes/utils/geom2d/ClosedPolygon.add_to_figure.html", "_foxes/utils/geom2d/ClosedPolygon.p_max.html", "_foxes/utils/geom2d/ClosedPolygon.p_min.html", "_foxes/utils/geom2d/ClosedPolygon.points_distance.html", "_foxes/utils/geom2d/ClosedPolygon.points_inside.html", "_foxes/utils/geom2d/HalfPlane.html", "_foxes/utils/geom2d/HalfPlane.__init__.html", "_foxes/utils/geom2d/HalfPlane.add_to_figure.html", "_foxes/utils/geom2d/HalfPlane.inverse.html", "_foxes/utils/geom2d/HalfPlane.p_max.html", "_foxes/utils/geom2d/HalfPlane.p_min.html", "_foxes/utils/geom2d/HalfPlane.points_distance.html", "_foxes/utils/geom2d/HalfPlane.points_inside.html", "_foxes/utils/geom2d/InvertedAreaGeometry.html", "_foxes/utils/geom2d/InvertedAreaGeometry.__init__.html", "_foxes/utils/geom2d/InvertedAreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/InvertedAreaGeometry.inverse.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_max.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_min.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_distance.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_inside.html", "_foxes/utils/import_module.html", "_foxes/utils/load_module.html", "_foxes/utils/random_xy_square.html", "_foxes/utils/read_shp.html", "_foxes/utils/read_shp_polygons.html", "_foxes/utils/read_tab_file.html", "_foxes/utils/runners/DaskRunner.html", "_foxes/utils/runners/DaskRunner.__init__.html", "_foxes/utils/runners/DaskRunner.finalize.html", "_foxes/utils/runners/DaskRunner.initialize.html", "_foxes/utils/runners/DaskRunner.is_distributed.html", "_foxes/utils/runners/DaskRunner.print.html", "_foxes/utils/runners/DaskRunner.run.html", "_foxes/utils/runners/DefaultRunner.html", "_foxes/utils/runners/DefaultRunner.run.html", "_foxes/utils/runners/Runner.html", "_foxes/utils/runners/Runner.__init__.html", "_foxes/utils/runners/Runner.finalize.html", "_foxes/utils/runners/Runner.initialize.html", "_foxes/utils/runners/Runner.initialized.html", "_foxes/utils/runners/Runner.run.html", "_foxes/utils/shp2csv.html", "_foxes/utils/shp2geom2d.html", "_foxes/utils/sqrt_reg.html", "_foxes/utils/two_circles/area.html", "_foxes/utils/two_circles/calc_area.html", "_foxes/utils/uv2wd.html", "_foxes/utils/wd2uv.html", "_foxes/utils/wd2wdvec.html", "_foxes/utils/wdvec2wd.html", "_foxes/utils/write_nc.html", "_foxes/variables/AMB_CAP.html", "_foxes/variables/AMB_CT.html", "_foxes/variables/AMB_P.html", "_foxes/variables/AMB_REWS.html", "_foxes/variables/AMB_REWS2.html", "_foxes/variables/AMB_REWS3.html", "_foxes/variables/AMB_RHO.html", "_foxes/variables/AMB_T.html", "_foxes/variables/AMB_TI.html", "_foxes/variables/AMB_WD.html", "_foxes/variables/AMB_WS.html", "_foxes/variables/AMB_YAW.html", "_foxes/variables/AMB_YAWM.html", "_foxes/variables/AMB_YLD.html", "_foxes/variables/CAP.html", "_foxes/variables/CT.html", "_foxes/variables/D.html", "_foxes/variables/EFF.html", "_foxes/variables/H.html", "_foxes/variables/K.html", "_foxes/variables/KB.html", "_foxes/variables/KTI.html", "_foxes/variables/MAX_P.html", "_foxes/variables/MOL.html", "_foxes/variables/ORDER.html", "_foxes/variables/ORDER_INV.html", "_foxes/variables/ORDER_SSEL.html", "_foxes/variables/P.html", "_foxes/variables/PA_ALPHA.html", "_foxes/variables/PA_BETA.html", "_foxes/variables/REWS.html", "_foxes/variables/REWS2.html", "_foxes/variables/REWS3.html", "_foxes/variables/RHO.html", "_foxes/variables/SHEAR.html", "_foxes/variables/T.html", "_foxes/variables/TI.html", "_foxes/variables/TXYH.html", "_foxes/variables/WD.html", "_foxes/variables/WEIGHT.html", "_foxes/variables/WS.html", "_foxes/variables/X.html", "_foxes/variables/Y.html", "_foxes/variables/YAW.html", "_foxes/variables/YAWM.html", "_foxes/variables/YLD.html", "_foxes/variables/Z0.html", "_foxes/variables/amb2var.html", "_foxes/variables/var2amb.html", "api.html", "api_algorithms.html", "api_algorithms_downwind.html", "api_algorithms_iterative.html", "api_algorithms_sequential.html", "api_constants.html", "api_core.html", "api_data.html", "api_foxes.html", "api_input.html", "api_models.html", "api_output.html", "api_utils.html", "api_utils_abl.html", "api_variables.html", "api_wake_models.html", "citation.html", "examples.html", "history.html", "index.html", "installation.html", "models.html", "notebooks/blockage_comparison.html", "notebooks/blockage_farm.html", "notebooks/data.html", "notebooks/heterogeneous.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/partial_wakes.html", "notebooks/power_mask.html", "notebooks/rotor_models.html", "notebooks/sector_man.html", "notebooks/sequential.html", "notebooks/single_row.html", "notebooks/timelines.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html", "optimization.html", "overview.html", "testing.html"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "indexentries": {"pep 585": [[116, "index-0", false], [235, "index-0", false]], "python enhancement proposals": [[116, "index-0", false], [235, "index-0", false]]}, "objects": {"foxes.algorithms": [[0, 0, 1, "", "Downwind", "The downwind algorithm."], [10, 0, 1, "", "Iterative", "Iterative calculation of farm data."], [18, 0, 1, "", "Sequential", "A sequential calculation of states without chunking."]], "foxes.algorithms.Downwind": [[1, 1, 1, "", "DEFAULT_FARM_OUTPUTS", ""], [2, 2, 1, "", "__init__", "Constructor."], [3, 2, 1, "", "all_models", "Return all models"], [4, 2, 1, "", "calc_farm", "Calculate farm data."], [5, 2, 1, "", "calc_points", "Calculate data at a given set of points."], [6, 2, 1, "", "finalize", "Finalizes the algorithm."], [7, 2, 1, "", "get_model", "Get the algorithm specific model"], [8, 2, 1, "", "init_states", "Initialize states, if needed."], [9, 2, 1, "", "initialize", "Initializes the algorithm."]], "foxes.algorithms.Iterative": [[11, 2, 1, "", "__init__", "Constructor."], [12, 2, 1, "", "calc_farm", "Calculate farm data."], [13, 2, 1, "", "get_model", "Get the algorithm specific model"], [14, 2, 1, "", "initialize", "Initializes the algorithm."], [15, 3, 1, "", "iterations", "The current iteration number"], [16, 2, 1, "", "set_urelax", "Sets under-relaxation parameters."], [17, 3, 1, "", "urelax", "Returns the under-relaxation parameters"]], "foxes.algorithms.Sequential": [[19, 2, 1, "", "__init__", "Constructor."], [20, 2, 1, "", "__iter__", "Initialize the iterator"], [21, 2, 1, "", "__next__", "Run calculation for current step, then iterate to next"], [22, 2, 1, "", "calc_farm", "Calculate farm data."], [23, 2, 1, "", "calc_points", "Calculate data at a given set of points."], [24, 3, 1, "", "counter", "The current index counter"], [25, 3, 1, "", "cur_farm_results", "The current farm results"], [26, 3, 1, "", "cur_point_results", "The current point results"], [27, 3, 1, "", "farm_results", "The overall farm results"], [28, 3, 1, "", "fdata", "Get the current farm data"], [29, 2, 1, "", "get_model", "Get the algorithm specific model"], [30, 3, 1, "", "index", "The current index"], [31, 3, 1, "", "iterating", "Flag for running iteration"], [32, 3, 1, "", "mdata", "Get the current model data"], [33, 3, 1, "", "point_results", "The overall point results"], [34, 3, 1, "", "prev_farm_results", "Alias for farm_results"], [35, 3, 1, "", "size", "The total number of iteration steps"], [36, 2, 1, "", "states_i0", "Returns counter or index"], [37, 3, 1, "", "tdata", "Get the current point data"], [38, 3, 1, "", "weight", "The current weight array"]], "foxes.algorithms.downwind.models": [[39, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [42, 0, 1, "", "InitFarmData", "Sets basic turbine data and applies downwind order"], [46, 0, 1, "", "PointWakesCalculation", "This model calculates wake effects at points of interest."], [52, 0, 1, "", "ReorderFarmOutput", "Reorders final results to state-turbine dimensions"], [56, 0, 1, "", "SetAmbFarmResults", "This model copies farm data results to ambient results."], [60, 0, 1, "", "SetAmbPointResults", "This model copies point results to ambient results."]], "foxes.algorithms.downwind.models.FarmWakesCalculation": [[40, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [41, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.InitFarmData": [[43, 2, 1, "", "__init__", "Constructor."], [44, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [45, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.PointWakesCalculation": [[47, 2, 1, "", "__init__", "Constructor."], [48, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [49, 2, 1, "", "initialize", "Initializes the model."], [50, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [51, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.ReorderFarmOutput": [[53, 2, 1, "", "__init__", "Constructor"], [54, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [55, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbFarmResults": [[57, 2, 1, "", "__init__", "Constructor."], [58, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [59, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults": [[61, 2, 1, "", "__init__", "Constructor."], [62, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [63, 2, 1, "", "initialize", "Initializes the model."], [64, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.algorithms.iterative": [[65, 0, 1, "", "ConvCrit", "Abstract base class for convergence criteria"], [69, 0, 1, "", "ConvCritList", "A list of convergence criteria"], [74, 0, 1, "", "ConvVarDelta", "Requires convergence of a selection of variables."], [78, 0, 1, "", "DefaultConv", "Default convergence criteria."]], "foxes.algorithms.iterative.ConvCrit": [[66, 2, 1, "", "__init__", "Constructor."], [67, 2, 1, "", "check_converged", "Check convergence criteria."], [68, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCritList": [[70, 2, 1, "", "__init__", "Constructor."], [71, 2, 1, "", "add_crit", "Add a convergence criterion"], [72, 2, 1, "", "check_converged", "Check convergence criteria."], [73, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvVarDelta": [[75, 2, 1, "", "__init__", "Constructor."], [76, 2, 1, "", "check_converged", "Check convergence criteria."], [77, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.DefaultConv": [[79, 2, 1, "", "__init__", "Constructor."]], "foxes.algorithms.iterative.models": [[80, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [85, 0, 1, "", "URelax", "Apply under-relaxation to selected variables during iterations."]], "foxes.algorithms.iterative.models.FarmWakesCalculation": [[81, 2, 1, "", "__init__", "Constructor."], [82, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [83, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [84, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.iterative.models.URelax": [[86, 2, 1, "", "__init__", "Constructor."], [87, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [88, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.sequential": [[89, 0, 1, "", "SequentialPlugin", "Base class for plugins that are updated with each sequential iteration"]], "foxes.algorithms.sequential.SequentialPlugin": [[90, 2, 1, "", "__init__", "Constructor."], [91, 2, 1, "", "finalize", "Finalize data based on the final iterator"], [92, 2, 1, "", "initialize", "Initialize data based on the intial iterator"], [93, 2, 1, "", "update", "Updates data based on current iteration"]], "foxes.algorithms.sequential.models": [[94, 0, 1, "", "SeqState", "A single state during sequential iteration, just serving as a structural placeholder"]], "foxes.algorithms.sequential.models.SeqState": [[95, 2, 1, "", "__init__", "Constructor."], [96, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [97, 3, 1, "", "counter", "The current index counter"], [98, 2, 1, "", "index", "The index list"], [99, 2, 1, "", "initialize", "Initializes the model."], [100, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [101, 2, 1, "", "size", "The total number of states."], [102, 2, 1, "", "sub_models", "List of all sub-models"], [103, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.constants": [[104, 4, 1, "", "AMB_TARGET_RESULTS", "Identifier for ambient target results"], [105, 1, 1, "", "DTYPE", "Default data type for floats"], [228, 4, 1, "", "FARM", "Wind farm identifier"], [229, 4, 1, "", "GW", "The unit giga watt"], [230, 1, 1, "", "ITYPE", "Default data type for int"], [280, 4, 1, "", "KAPPA", "The Van-Karman constant"], [281, 4, 1, "", "MW", "The unit mega watt"], [282, 4, 1, "", "POINT", "Point identifier"], [283, 4, 1, "", "POINTS", "Points identifier"], [284, 4, 1, "", "POP", "Population identifier"], [285, 4, 1, "", "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [286, 4, 1, "", "STATE", "States identifier"], [287, 4, 1, "", "STATES_SEL", "Identifier for states selection"], [288, 4, 1, "", "STATE_SOURCE_ORDERI", "Identifier for order index of wake causing turbines"], [289, 4, 1, "", "STATE_TARGET", "Identifier for state-target dimensions"], [290, 4, 1, "", "STATE_TARGET_TPOINT", "Identifier for state-target-tpoints dimensions"], [291, 4, 1, "", "STATE_TURBINE", "Identifier for state-turbine dimensions"], [292, 4, 1, "", "TARGET", "Target identifier"], [293, 4, 1, "", "TARGETS", "Targets identifier"], [294, 4, 1, "", "TIME", "Time identifier"], [295, 4, 1, "", "TMODELS", "Turbine models identifier"], [296, 4, 1, "", "TMODEL_SELS", "Selected turbine models identifier"], [297, 4, 1, "", "TNAME", "Wind turbine name identifier"], [298, 4, 1, "", "TPOINT", "Target point identifier"], [299, 4, 1, "", "TPOINTS", "Points per target identifier"], [300, 4, 1, "", "TURBINE", "Wind turbine identifier"], [301, 4, 1, "", "TW", "The unit terra watt"], [302, 4, 1, "", "TWEIGHTS", "Target point weights identifier"], [303, 4, 1, "", "VALID", "Validity identifier"], [304, 4, 1, "", "VARS", "Variables identifier"], [305, 4, 1, "", "W", "The unit watt"], [306, 4, 1, "", "XYH", "The vector (x, y, height)"], [307, 4, 1, "", "kW", "The unit kilo watt"]], "foxes.constants.DTYPE": [[106, 1, 1, "", "T", "Scalar attribute identical to the corresponding array attribute."], [107, 2, 1, "", "__abs__", "abs(self)"], [108, 2, 1, "", "__add__", "Return self+value."], [109, 2, 1, "", "__and__", "Return self&value."], [110, 2, 1, "", "__array__", "sc.__array__(dtype) return 0-dim array from scalar with specified dtype"], [111, 1, 1, "", "__array_interface__", "Array protocol: Python side"], [112, 1, 1, "", "__array_priority__", "Array priority."], [113, 1, 1, "", "__array_struct__", "Array protocol: struct"], [114, 2, 1, "", "__array_wrap__", "sc.__array_wrap__(obj) return scalar from array"], [115, 2, 1, "", "__bool__", "True if self else False"], [116, 2, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [117, 2, 1, "", "__divmod__", "Return divmod(self, value)."], [118, 2, 1, "", "__eq__", "Return self==value."], [119, 2, 1, "", "__float__", "float(self)"], [120, 2, 1, "", "__floordiv__", "Return self//value."], [121, 2, 1, "", "__format__", "NumPy array scalar formatter"], [122, 2, 1, "", "__ge__", "Return self>=value."], [123, 2, 1, "", "__getitem__", "Return self[key]."], [124, 2, 1, "", "__gt__", "Return self>value."], [125, 2, 1, "", "__hash__", "Return hash(self)."], [126, 2, 1, "", "__int__", "int(self)"], [127, 2, 1, "", "__invert__", "~self"], [128, 2, 1, "", "__le__", "Return self<=value."], [129, 2, 1, "", "__lshift__", "Return self<<value."], [130, 2, 1, "", "__lt__", "Return self<value."], [131, 2, 1, "", "__mod__", "Return self%value."], [132, 2, 1, "", "__mul__", "Return self*value."], [133, 2, 1, "", "__ne__", "Return self!=value."], [134, 2, 1, "", "__neg__", "-self"], [135, 2, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [136, 2, 1, "", "__or__", "Return self|value."], [137, 2, 1, "", "__pos__", "+self"], [138, 2, 1, "", "__pow__", "Return pow(self, value, mod)."], [139, 2, 1, "", "__radd__", "Return value+self."], [140, 2, 1, "", "__rand__", "Return value&self."], [141, 2, 1, "", "__rdivmod__", "Return divmod(value, self)."], [142, 2, 1, "", "__reduce__", "Helper for pickle."], [143, 2, 1, "", "__repr__", "Return repr(self)."], [144, 2, 1, "", "__rfloordiv__", "Return value//self."], [145, 2, 1, "", "__rlshift__", "Return value<<self."], [146, 2, 1, "", "__rmod__", "Return value%self."], [147, 2, 1, "", "__rmul__", "Return value*self."], [148, 2, 1, "", "__ror__", "Return value|self."], [149, 2, 1, "", "__rpow__", "Return pow(value, self, mod)."], [150, 2, 1, "", "__rrshift__", "Return value>>self."], [151, 2, 1, "", "__rshift__", "Return self>>value."], [152, 2, 1, "", "__rsub__", "Return value-self."], [153, 2, 1, "", "__rtruediv__", "Return value/self."], [154, 2, 1, "", "__rxor__", "Return value^self."], [155, 2, 1, "", "__sizeof__", "Size of object in memory, in bytes."], [156, 2, 1, "", "__str__", "Return str(self)."], [157, 2, 1, "", "__sub__", "Return self-value."], [158, 2, 1, "", "__truediv__", "Return self/value."], [159, 2, 1, "", "__xor__", "Return self^value."], [160, 2, 1, "", "all", "Scalar method identical to the corresponding array attribute."], [161, 2, 1, "", "any", "Scalar method identical to the corresponding array attribute."], [162, 2, 1, "", "argmax", "Scalar method identical to the corresponding array attribute."], [163, 2, 1, "", "argmin", "Scalar method identical to the corresponding array attribute."], [164, 2, 1, "", "argsort", "Scalar method identical to the corresponding array attribute."], [165, 2, 1, "", "as_integer_ratio", "Return a pair of integers, whose ratio is exactly equal to the original floating point number, and with a positive denominator. Raise OverflowError on infinities and a ValueError on NaNs."], [166, 2, 1, "", "astype", "Scalar method identical to the corresponding array attribute."], [167, 1, 1, "", "base", "Scalar attribute identical to the corresponding array attribute."], [168, 2, 1, "", "byteswap", "Scalar method identical to the corresponding array attribute."], [169, 2, 1, "", "choose", "Scalar method identical to the corresponding array attribute."], [170, 2, 1, "", "clip", "Scalar method identical to the corresponding array attribute."], [171, 2, 1, "", "compress", "Scalar method identical to the corresponding array attribute."], [172, 2, 1, "", "conj", ""], [173, 2, 1, "", "conjugate", "Scalar method identical to the corresponding array attribute."], [174, 2, 1, "", "copy", "Scalar method identical to the corresponding array attribute."], [175, 2, 1, "", "cumprod", "Scalar method identical to the corresponding array attribute."], [176, 2, 1, "", "cumsum", "Scalar method identical to the corresponding array attribute."], [177, 1, 1, "", "data", "Pointer to start of data."], [178, 2, 1, "", "diagonal", "Scalar method identical to the corresponding array attribute."], [179, 1, 1, "", "dtype", "Get array data-descriptor."], [180, 2, 1, "", "dump", "Scalar method identical to the corresponding array attribute."], [181, 2, 1, "", "dumps", "Scalar method identical to the corresponding array attribute."], [182, 2, 1, "", "fill", "Scalar method identical to the corresponding array attribute."], [183, 1, 1, "", "flags", "The integer value of flags."], [184, 1, 1, "", "flat", "A 1-D view of the scalar."], [185, 2, 1, "", "flatten", "Scalar method identical to the corresponding array attribute."], [186, 2, 1, "", "getfield", "Scalar method identical to the corresponding array attribute."], [187, 1, 1, "", "imag", "The imaginary part of the scalar."], [188, 2, 1, "", "is_integer", "Return True if the floating point number is finite with integral value, and False otherwise."], [189, 2, 1, "", "item", "Scalar method identical to the corresponding array attribute."], [190, 1, 1, "", "itemset", ""], [191, 1, 1, "", "itemsize", "The length of one element in bytes."], [192, 2, 1, "", "max", "Scalar method identical to the corresponding array attribute."], [193, 2, 1, "", "mean", "Scalar method identical to the corresponding array attribute."], [194, 2, 1, "", "min", "Scalar method identical to the corresponding array attribute."], [195, 1, 1, "", "nbytes", ""], [196, 1, 1, "", "ndim", "The number of array dimensions."], [197, 1, 1, "", "newbyteorder", ""], [198, 2, 1, "", "nonzero", "Scalar method identical to the corresponding array attribute."], [199, 2, 1, "", "prod", "Scalar method identical to the corresponding array attribute."], [200, 1, 1, "", "ptp", ""], [201, 2, 1, "", "put", "Scalar method identical to the corresponding array attribute."], [202, 2, 1, "", "ravel", "Scalar method identical to the corresponding array attribute."], [203, 1, 1, "", "real", "The real part of the scalar."], [204, 2, 1, "", "repeat", "Scalar method identical to the corresponding array attribute."], [205, 2, 1, "", "reshape", "Scalar method identical to the corresponding array attribute."], [206, 2, 1, "", "resize", "Scalar method identical to the corresponding array attribute."], [207, 2, 1, "", "round", "Scalar method identical to the corresponding array attribute."], [208, 2, 1, "", "searchsorted", "Scalar method identical to the corresponding array attribute."], [209, 2, 1, "", "setfield", "Scalar method identical to the corresponding array attribute."], [210, 2, 1, "", "setflags", "Scalar method identical to the corresponding array attribute."], [211, 1, 1, "", "shape", "Tuple of array dimensions."], [212, 1, 1, "", "size", "The number of elements in the gentype."], [213, 2, 1, "", "sort", "Scalar method identical to the corresponding array attribute."], [214, 2, 1, "", "squeeze", "Scalar method identical to the corresponding array attribute."], [215, 2, 1, "", "std", "Scalar method identical to the corresponding array attribute."], [216, 1, 1, "", "strides", "Tuple of bytes steps in each dimension."], [217, 2, 1, "", "sum", "Scalar method identical to the corresponding array attribute."], [218, 2, 1, "", "swapaxes", "Scalar method identical to the corresponding array attribute."], [219, 2, 1, "", "take", "Scalar method identical to the corresponding array attribute."], [220, 2, 1, "", "tobytes", ""], [221, 2, 1, "", "tofile", "Scalar method identical to the corresponding array attribute."], [222, 2, 1, "", "tolist", "Scalar method identical to the corresponding array attribute."], [223, 2, 1, "", "tostring", "Scalar method identical to the corresponding array attribute."], [224, 2, 1, "", "trace", "Scalar method identical to the corresponding array attribute."], [225, 2, 1, "", "transpose", "Scalar method identical to the corresponding array attribute."], [226, 2, 1, "", "var", "Scalar method identical to the corresponding array attribute."], [227, 2, 1, "", "view", "Scalar method identical to the corresponding array attribute."]], "foxes.constants.ITYPE": [[231, 2, 1, "", "__abs__", "abs(self)"], [232, 2, 1, "", "__add__", "Return self+value."], [233, 2, 1, "", "__and__", "Return self&value."], [234, 2, 1, "", "__bool__", "True if self else False"], [235, 2, 1, "", "__class_getitem__", "Return a parametrized wrapper around the ~numpy.number type."], [236, 2, 1, "", "__divmod__", "Return divmod(self, value)."], [237, 2, 1, "", "__eq__", "Return self==value."], [238, 2, 1, "", "__float__", "float(self)"], [239, 2, 1, "", "__floordiv__", "Return self//value."], [240, 2, 1, "", "__ge__", "Return self>=value."], [241, 2, 1, "", "__gt__", "Return self>value."], [242, 2, 1, "", "__hash__", "Return hash(self)."], [243, 2, 1, "", "__index__", "Return self converted to an integer, if self is suitable for use as an index into a list."], [244, 2, 1, "", "__int__", "int(self)"], [245, 2, 1, "", "__invert__", "~self"], [246, 2, 1, "", "__le__", "Return self<=value."], [247, 2, 1, "", "__lshift__", "Return self<<value."], [248, 2, 1, "", "__lt__", "Return self<value."], [249, 2, 1, "", "__mod__", "Return self%value."], [250, 2, 1, "", "__mul__", "Return self*value."], [251, 2, 1, "", "__ne__", "Return self!=value."], [252, 2, 1, "", "__neg__", "-self"], [253, 2, 1, "", "__new__", "Create and return a new object.  See help(type) for accurate signature."], [254, 2, 1, "", "__or__", "Return self|value."], [255, 2, 1, "", "__pos__", "+self"], [256, 2, 1, "", "__pow__", "Return pow(self, value, mod)."], [257, 2, 1, "", "__radd__", "Return value+self."], [258, 2, 1, "", "__rand__", "Return value&self."], [259, 2, 1, "", "__rdivmod__", "Return divmod(value, self)."], [260, 2, 1, "", "__repr__", "Return repr(self)."], [261, 2, 1, "", "__rfloordiv__", "Return value//self."], [262, 2, 1, "", "__rlshift__", "Return value<<self."], [263, 2, 1, "", "__rmod__", "Return value%self."], [264, 2, 1, "", "__rmul__", "Return value*self."], [265, 2, 1, "", "__ror__", "Return value|self."], [266, 2, 1, "", "__rpow__", "Return pow(value, self, mod)."], [267, 2, 1, "", "__rrshift__", "Return value>>self."], [268, 2, 1, "", "__rshift__", "Return self>>value."], [269, 2, 1, "", "__rsub__", "Return value-self."], [270, 2, 1, "", "__rtruediv__", "Return value/self."], [271, 2, 1, "", "__rxor__", "Return value^self."], [272, 2, 1, "", "__str__", "Return str(self)."], [273, 2, 1, "", "__sub__", "Return self-value."], [274, 2, 1, "", "__truediv__", "Return self/value."], [275, 2, 1, "", "__xor__", "Return self^value."], [276, 2, 1, "", "bit_count", "Computes the number of 1-bits in the absolute value of the input. Analogous to the builtin int.bit_count or popcount in C++."], [277, 1, 1, "", "denominator", "denominator of value (1)"], [278, 2, 1, "", "is_integer", "Return True if the number is finite with integral value."], [279, 1, 1, "", "numerator", "numerator of value (the value itself)"]], "foxes.core": [[308, 0, 1, "", "Algorithm", "Abstract base class for algorithms."], [323, 0, 1, "", "AxialInductionModel", "Abstract base class for axial induction models"], [325, 0, 1, "", "Data", "Container for numpy array data and the associated meta data."], [332, 0, 1, "", "DataCalcModel", "Abstract base class for models with that run calculation on xarray Dataset data."], [335, 0, 1, "", "ExtendedStates", "States extended by point data models."], [344, 0, 1, "", "FData", "Container for foxes farm data."], [346, 0, 1, "", "FarmController", "Analyses selected turbine models and handles their call."], [356, 0, 1, "", "FarmDataModel", "Abstract base class for models that modify farm data."], [362, 0, 1, "", "FarmDataModelList", "A list of farm data models."], [369, 0, 1, "", "FarmModel", "A FarmDataModel that operates on the farm level (in contrast to a TurbineModel, which allows application to a subset of turbines)."], [370, 0, 1, "", "GroundModel", "Base class for ground models."], [377, 0, 1, "", "MData", "Container for foxes model data."], [379, 0, 1, "", "Model", "Base class for all models."], [392, 0, 1, "", "PartialWakesModel", "Abstract base class for partial wakes models."], [399, 0, 1, "", "PointDataModel", "Abstract base class for models that modify point based data."], [404, 0, 1, "", "PointDataModelList", "A list of point data models."], [410, 0, 1, "", "RotorModel", "Abstract base class of rotor models."], [420, 0, 1, "", "States", "Abstract base class for states."], [427, 0, 1, "", "TData", "Container for foxes target data."], [434, 0, 1, "", "Turbine", "An individual wind turbine."], [438, 0, 1, "", "TurbineInductionModel", "Abstract base class for turbine induction models."], [440, 0, 1, "", "TurbineModel", "Abstract base class for turbine models."], [443, 0, 1, "", "TurbineType", "Abstract base class for turbine type models."], [448, 0, 1, "", "VerticalProfile", "Abstract base class for vertical profiles."], [452, 0, 1, "", "WakeFrame", "Abstract base class for wake frames."], [459, 0, 1, "", "WakeK", "Handler for the wake growth parameter k"], [465, 0, 1, "", "WakeModel", "Abstract base class for wake models."], [471, 0, 1, "", "WakeSuperposition", "Abstract base class for wake superposition models."], [474, 0, 1, "", "WindFarm", "The wind farm."]], "foxes.core.Algorithm": [[309, 2, 1, "", "__init__", "Constructor."], [310, 2, 1, "", "chunked", ""], [311, 2, 1, "", "del_model_data", "Remove stored model data"], [312, 2, 1, "", "finalize", "Finalizes the algorithm."], [313, 2, 1, "", "get_model_data", "Gets model data from memory"], [314, 2, 1, "", "get_models_data", "Creates xarray from model input data."], [315, 2, 1, "", "get_models_idata", "Returns idata object of models"], [316, 3, 1, "", "idata_mem", "The current idata memory"], [317, 2, 1, "", "initialize", "Initializes the algorithm."], [318, 2, 1, "", "new", "Run-time algorithm factory."], [319, 2, 1, "", "new_point_data", "Creates a point data xarray object, containing only points."], [320, 2, 1, "", "print", "Print function, based on verbosity."], [321, 2, 1, "", "store_model_data", "Store model data"], [322, 2, 1, "", "update_n_turbines", "Reset the number of turbines, according to self.farm"]], "foxes.core.AxialInductionModel": [[324, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.core.Data": [[326, 2, 1, "", "__init__", "Constructor."], [327, 2, 1, "", "add", "Add data entry"], [328, 2, 1, "", "get_slice", "Get a slice of data."], [329, 3, 1, "", "n_states", "The number of states"], [330, 3, 1, "", "n_turbines", "The number of turbines"], [331, 2, 1, "", "states_i0", "Get the state counter for first state in chunk"]], "foxes.core.DataCalcModel": [[333, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [334, 2, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.ExtendedStates": [[336, 2, 1, "", "__init__", "Constructor."], [337, 2, 1, "", "append", "Add a model to the list"], [338, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [339, 2, 1, "", "index", "The index list"], [340, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [341, 2, 1, "", "size", "The total number of states."], [342, 2, 1, "", "sub_models", "List of all sub-models"], [343, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.FData": [[345, 2, 1, "", "__init__", "Constructor"]], "foxes.core.FarmController": [[347, 2, 1, "", "__init__", "Constructor."], [348, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [349, 2, 1, "", "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [350, 2, 1, "", "finalize", "Finalizes the model."], [351, 2, 1, "", "initialize", "Initializes the model."], [352, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [353, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [354, 2, 1, "", "set_pars", "Set parameters for a turbine model"], [355, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmDataModel": [[357, 2, 1, "", "__init__", "Constructor."], [358, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [359, 2, 1, "", "ensure_variables", "Add variables to fdata, initialized with NaN"], [360, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [361, 2, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModelList": [[363, 2, 1, "", "__init__", "Constructor."], [364, 2, 1, "", "append", "Add a model to the list"], [365, 2, 1, "", "calculate", "The main model calculation."], [366, 2, 1, "", "insert", "Insert a model into the list"], [367, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [368, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.GroundModel": [[371, 2, 1, "", "contribute_to_farm_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [372, 2, 1, "", "contribute_to_point_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [373, 2, 1, "", "finalize_farm_wakes", "Updates the wake_deltas at the selected target downwind index."], [374, 2, 1, "", "finalize_point_wakes", "Finalize the wake calculation."], [375, 2, 1, "", "new_farm_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [376, 2, 1, "", "new_point_wake_deltas", "Creates new empty wake delta arrays."]], "foxes.core.MData": [[378, 2, 1, "", "__init__", "Constructor"]], "foxes.core.Model": [[380, 2, 1, "", "__init__", "Constructor."], [381, 2, 1, "", "__repr__", "Return repr(self)."], [382, 2, 1, "", "data_to_store", "Adds data from mdata to the local store, intended for iterative runs."], [383, 2, 1, "", "finalize", "Finalizes the model."], [384, 2, 1, "", "from_data_or_store", "Get data from mdata or local store"], [385, 2, 1, "", "get_data", "Getter for a data entry in the model object or provided data sources"], [386, 2, 1, "", "initialize", "Initializes the model."], [387, 3, 1, "", "initialized", "Initialization flag."], [388, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [389, 3, 1, "", "model_id", "Unique id based on the model type."], [390, 2, 1, "", "sub_models", "List of all sub-models"], [391, 2, 1, "", "var", "Creates a model specific variable name."]], "foxes.core.PartialWakesModel": [[393, 2, 1, "", "check_wmodel", "Checks the wake model type"], [394, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [395, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [396, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."], [397, 2, 1, "", "new", "Run-time partial wakes factory."], [398, 2, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."]], "foxes.core.PointDataModel": [[400, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [401, 2, 1, "", "ensure_variables", "Add variables to tdata, initialized with NaN"], [402, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [403, 2, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModelList": [[405, 2, 1, "", "__init__", "Constructor."], [406, 2, 1, "", "append", "Add a model to the list"], [407, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [408, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [409, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.RotorModel": [[411, 2, 1, "", "__init__", "Constructor."], [412, 2, 1, "", "calculate", "Calculate ambient rotor effective results."], [413, 2, 1, "", "design_points", "The rotor model design points."], [414, 2, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [415, 2, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [416, 2, 1, "", "n_rotor_points", "The number of rotor points"], [417, 2, 1, "", "new", "Run-time rotor model factory."], [418, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [419, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.core.States": [[421, 2, 1, "", "index", "The index list"], [422, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [423, 2, 1, "", "new", "Run-time states factory."], [424, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [425, 2, 1, "", "size", "The total number of states."], [426, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.TData": [[428, 2, 1, "", "__init__", "Constructor"], [429, 2, 1, "", "from_points", "Create from points"], [430, 2, 1, "", "from_tpoints", "Create from points at targets"], [431, 3, 1, "", "n_targets", "The number of targets"], [432, 3, 1, "", "n_tpoints", "The number of points per target"], [433, 2, 1, "", "tpoint_mean", "Take the mean over target points"]], "foxes.core.Turbine": [[435, 2, 1, "", "__init__", "Constructor."], [436, 2, 1, "", "add_model", "Add a turbine model to the list."], [437, 2, 1, "", "insert_model", "Insert a turbine model into the list of models."]], "foxes.core.TurbineInductionModel": [[439, 3, 1, "", "affects_downwind", "Flag for downwind or upwind effects on other turbines"]], "foxes.core.TurbineModel": [[441, 2, 1, "", "calculate", "The main model calculation."], [442, 2, 1, "", "new", "Run-time turbine model factory."]], "foxes.core.TurbineType": [[444, 2, 1, "", "__init__", "Constructor."], [445, 2, 1, "", "__repr__", "Return repr(self)."], [446, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [447, 2, 1, "", "new", "Run-time turbine type factory."]], "foxes.core.VerticalProfile": [[449, 2, 1, "", "calculate", "Run the profile calculation."], [450, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."], [451, 2, 1, "", "new", "Run-time profile factory."]], "foxes.core.WakeFrame": [[453, 2, 1, "", "calc_centreline_integral", "Integrates variables along the centreline."], [454, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [455, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [456, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [457, 2, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [458, 2, 1, "", "new", "Run-time wake frame factory."]], "foxes.core.WakeK": [[460, 2, 1, "", "__call__", "Gets the k value"], [461, 2, 1, "", "__init__", "Constructor."], [462, 3, 1, "", "all_none", "Flag for k=ka=kb=None"], [463, 2, 1, "", "repr", "Provides the representative string"], [464, 3, 1, "", "use_amb_ti", "Flag for using ambient ti"]], "foxes.core.WakeModel": [[466, 3, 1, "", "affects_downwind", "Flag for downwind or upwind effects on other turbines"], [467, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [468, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [469, 2, 1, "", "new", "Run-time wake model factory."], [470, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."]], "foxes.core.WakeSuperposition": [[472, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [473, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.core.WindFarm": [[475, 2, 1, "", "__init__", "Constructor."], [476, 2, 1, "", "add_turbine", "Add a wind turbine to the list."], [477, 3, 1, "", "n_turbines", "The number of turbines in the wind farm"], [478, 3, 1, "", "turbine_names", "The list of names of all turbines"]], "foxes.data": [[479, 0, 1, "", "StaticData", "A DataBook filled with static data from this directory."], [481, 5, 1, "", "parse_Pct_file_name", "Parse basic turbine data from file name"], [482, 5, 1, "", "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.StaticData": [[480, 2, 1, "", "__init__", "Constructor."]], "foxes.input.farm_layout": [[483, 5, 1, "", "add_from_csv", "Add turbines to wind farm via csv input file."], [484, 5, 1, "", "add_from_df", "Add turbines to wind farm via pandas DataFrame."], [485, 5, 1, "", "add_from_file", "Add turbines from file."], [486, 5, 1, "", "add_from_json", "Add turbimes from a json file."], [487, 5, 1, "", "add_grid", "Add a regular grid of turbines."], [488, 5, 1, "", "add_random", "Add turbines that lie randomly within a square"], [489, 5, 1, "", "add_row", "Add a single row of turbines."]], "foxes.input.states": [[490, 0, 1, "", "FieldDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format."], [498, 0, 1, "", "MultiHeightNCStates", "Multi-height states from xarray Dataset."], [501, 0, 1, "", "MultiHeightNCTimeseries", "Multi-height timeseries from xarray Dataset."], [503, 0, 1, "", "MultiHeightStates", "States with multiple heights data per entry."], [514, 0, 1, "", "MultiHeightTimeseries", "Multi-height timeseries states data."], [516, 0, 1, "", "ScanWS", "A given list of wind speeds, all other variables are fixed."], [523, 0, 1, "", "SingleStateStates", "A single uniform state."], [531, 0, 1, "", "StatesTable", "States from a pandas.DataFrame or a pandas readable file."], [544, 0, 1, "", "TabStates", "States created from a single tab file"], [547, 0, 1, "", "Timeseries", "Timeseries states data."]], "foxes.input.states.FieldDataNC": [[491, 2, 1, "", "__init__", "Constructor."], [492, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [493, 2, 1, "", "index", "The index list"], [494, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [495, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [496, 2, 1, "", "size", "The total number of states."], [497, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightNCStates": [[499, 2, 1, "", "__init__", "Constructor."], [500, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.MultiHeightNCTimeseries": [[502, 2, 1, "", "__init__", "Constructor."]], "foxes.input.states.MultiHeightStates": [[504, 1, 1, "", "RDICT", ""], [505, 2, 1, "", "__init__", "Constructor."], [506, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [507, 2, 1, "", "finalize", "Finalizes the model."], [508, 2, 1, "", "index", "The index list"], [509, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [510, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [511, 2, 1, "", "reset", "Reset the states, optionally select states"], [512, 2, 1, "", "size", "The total number of states."], [513, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightTimeseries": [[515, 1, 1, "", "RDICT", ""]], "foxes.input.states.ScanWS": [[517, 2, 1, "", "__init__", "Constructor."], [518, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [519, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [520, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [521, 2, 1, "", "size", "The total number of states."], [522, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates": [[524, 2, 1, "", "__init__", "Constructor."], [525, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [526, 2, 1, "", "initialize", "Initializes the model."], [527, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [528, 2, 1, "", "size", "The total number of states."], [529, 2, 1, "", "sub_models", "List of all sub-models"], [530, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.StatesTable": [[532, 1, 1, "", "RDICT", ""], [533, 2, 1, "", "__init__", "Constructor."], [534, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [535, 2, 1, "", "finalize", "Finalizes the model."], [536, 2, 1, "", "index", "The index list"], [537, 2, 1, "", "initialize", "Initializes the model."], [538, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [539, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [540, 2, 1, "", "reset", "Reset the states, optionally select states"], [541, 2, 1, "", "size", "The total number of states."], [542, 2, 1, "", "sub_models", "List of all sub-models"], [543, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.TabStates": [[545, 2, 1, "", "__init__", "Constructor."], [546, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.Timeseries": [[548, 1, 1, "", "RDICT", ""]], "foxes.input.states.create": [[549, 5, 1, "", "create_random_abl_states", "Create random abl states."], [550, 5, 1, "", "random_timseries_data", "Creates random uniform timeseries data"], [551, 5, 1, "", "write_random_abl_states", "Writes random abl states to file"]], "foxes.input.windio": [[552, 0, 1, "", "WindioRunner", "Runner for windio input"], [561, 5, 1, "", "get_states", "Reads states parameters from windio input"], [562, 5, 1, "", "read_attributes", "Reads the attributes part of windio"], [563, 5, 1, "", "read_layout", "Read wind farm layout from windio input"], [564, 5, 1, "", "read_outputs", "Reads the windio outputs"], [565, 5, 1, "", "read_turbine_type", "Reads the turbine type from windio"], [566, 5, 1, "", "read_windio", "Reads a complete WindIO case."]], "foxes.input.windio.WindioRunner": [[553, 2, 1, "", "__init__", "Conbstructor"], [554, 2, 1, "", "finalize", "Initializes the runner"], [555, 2, 1, "", "initialize", "Initializes the runner"], [556, 3, 1, "", "initialized", "Flag for initialization"], [557, 2, 1, "", "print", "Print based on verbosity"], [558, 2, 1, "", "run", "Runs all calculations"], [559, 2, 1, "", "run_farm_calc", "Runs the farm calculation"], [560, 2, 1, "", "run_outputs", "Runs the output calculation"]], "foxes.models": [[567, 0, 1, "", "ModelBook", "Container for all kinds of models."]], "foxes.models.ModelBook": [[568, 2, 1, "", "__getitem__", ""], [569, 2, 1, "", "__init__", "Constructor."], [570, 2, 1, "", "default_partial_wakes", "Gets a default partial wakes model name for a given wake model"], [571, 2, 1, "", "finalize", "Finalizes the model."], [572, 2, 1, "", "get", "Gets a model object."], [573, 2, 1, "", "print_toc", "Print the contents."]], "foxes.models.axial_induction": [[574, 0, 1, "", "BetzAxialInduction", "The classic axial induction from 1D momentum theory"], [577, 0, 1, "", "MadsenAxialInduction", "Computes the induction factor through polynomial fit, extending validity for high ct values"]], "foxes.models.axial_induction.BetzAxialInduction": [[575, 2, 1, "", "__init__", "Constructor."], [576, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.axial_induction.MadsenAxialInduction": [[578, 2, 1, "", "__init__", "Constructor."], [579, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.farm_controllers": [[580, 0, 1, "", "BasicFarmController", "The basic farm controller, running all turbine models in their order, without conditions."]], "foxes.models.farm_models": [[581, 0, 1, "", "Turbine2FarmModel", "Wrapper that promotes turbine models into farm models, simply by selecting all turbines."]], "foxes.models.farm_models.Turbine2FarmModel": [[582, 2, 1, "", "__init__", "Constructor."], [583, 2, 1, "", "__repr__", "Return repr(self)."], [584, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [585, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [586, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.ground_models": [[587, 0, 1, "", "GroundMirror", "Wake reflection from the ground."], [589, 0, 1, "", "NoGround", "No ground effects"], [590, 0, 1, "", "WakeMirror", "Wake reflection from ground and/or other horizontal planes."]], "foxes.models.ground_models.GroundMirror": [[588, 2, 1, "", "__init__", "Constructor."]], "foxes.models.ground_models.WakeMirror": [[591, 2, 1, "", "__init__", "Constructor."], [592, 2, 1, "", "contribute_to_farm_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [593, 2, 1, "", "contribute_to_point_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes": [[594, 0, 1, "", "PartialAxiwake", "Partial wake calculation for axial wake models."], [599, 0, 1, "", "PartialCentre", "Partial wakes calculated only at the rotor centre point."], [601, 0, 1, "", "PartialGrid", "Partial wakes on a grid rotor that may differ from the one in the algorithm."], [603, 0, 1, "", "PartialSegregated", "Add the averaged wake effects to the separately averaged ambient rotor results"], [609, 0, 1, "", "PartialTopHat", "Partial wakes for top-hat models."], [615, 0, 1, "", "RotorPoints", "Partial wakes calculation directly by the rotor model."]], "foxes.models.partial_wakes.PartialAxiwake": [[595, 2, 1, "", "__init__", "Constructor."], [596, 2, 1, "", "__repr__", "Return repr(self)."], [597, 2, 1, "", "check_wmodel", "Checks the wake model type"], [598, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialCentre": [[600, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."]], "foxes.models.partial_wakes.PartialGrid": [[602, 2, 1, "", "__init__", "Constructor."]], "foxes.models.partial_wakes.PartialSegregated": [[604, 2, 1, "", "__init__", "Constructor."], [605, 2, 1, "", "__repr__", "Return repr(self)."], [606, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [607, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."], [608, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialTopHat": [[610, 2, 1, "", "__init__", "Constructor."], [611, 2, 1, "", "check_wmodel", "Checks the wake model type"], [612, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [613, 2, 1, "", "initialize", "Initializes the model."], [614, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.RotorPoints": [[616, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [617, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."]], "foxes.models.point_models": [[618, 0, 1, "", "SetUniformData", "Set uniform data (can be state dependent)"], [623, 0, 1, "", "TKE2TI", "Calculates TI from TKE, using TI = sqrt( 3/2 * TKE) / WS"], [626, 0, 1, "", "WakeDeltas", "This point model simply subtracts ambient results from waked results."]], "foxes.models.point_models.SetUniformData": [[619, 2, 1, "", "__init__", "Constructor."], [620, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [621, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [622, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI": [[624, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [625, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas": [[627, 2, 1, "", "__init__", "Constructor."], [628, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [629, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.rotor_models": [[630, 0, 1, "", "CentreRotor", "The centre rotor model."], [636, 0, 1, "", "GridRotor", "The weighted regular grid rotor model, composed maximally of n x n points, possibly kicking out the outside points."], [643, 0, 1, "", "LevelRotor", "The weighted regular rotor level model, composed of of n points between lower and upper blade tip. Calculates a height-dependent REWS"]], "foxes.models.rotor_models.CentreRotor": [[631, 2, 1, "", "design_points", "The rotor model design points."], [632, 2, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [633, 2, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [634, 2, 1, "", "n_rotor_points", "The number of rotor points"], [635, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.GridRotor": [[637, 2, 1, "", "__init__", "Constructor."], [638, 2, 1, "", "__repr__", "Return repr(self)."], [639, 2, 1, "", "design_points", "The rotor model design points."], [640, 2, 1, "", "initialize", "Initializes the model."], [641, 2, 1, "", "n_rotor_points", "The number of rotor points"], [642, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.LevelRotor": [[644, 2, 1, "", "__init__", "Constructor."], [645, 2, 1, "", "__repr__", "Return repr(self)."], [646, 2, 1, "", "design_points", "The rotor model design points."], [647, 2, 1, "", "initialize", "Initializes the model."], [648, 2, 1, "", "n_rotor_points", "The number of rotor points"], [649, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.turbine_models": [[650, 0, 1, "", "Calculator", "Calculates variables based on given functions."], [655, 0, 1, "", "LookupTable", "Calculates the data by interpolation of lookup-table data"], [660, 0, 1, "", "PowerMask", "Invokes a maximal power value."], [667, 0, 1, "", "RotorCentreCalc", "Calculates data at the rotor centre"], [673, 0, 1, "", "SectorManagement", "Changes variables based on variable range conditions."], [678, 0, 1, "", "SetFarmVars", "Set farm data variables to given data."], [685, 0, 1, "", "TableFactors", "Multiplies variables by factors from a two dimensional table."], [690, 0, 1, "", "Thrust2Ct", "Calculates ct from thrust force data."], [695, 0, 1, "", "YAW2YAWM", "Calculates delta yaw (i.e. YAWM) from absolute yaw (i.e. YAW)"], [698, 0, 1, "", "YAWM2YAW", "Calculates absolute yaw (i.e. YAWM) from delta yaw (i.e. YAWM)"], [701, 0, 1, "", "kTI", "Calculates the wake model parameter k as a linear function of TI."]], "foxes.models.turbine_models.Calculator": [[651, 2, 1, "", "__init__", "Constructor."], [652, 2, 1, "", "__repr__", "Return repr(self)."], [653, 2, 1, "", "calculate", "The main model calculation."], [654, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable": [[656, 2, 1, "", "__init__", "Constructor."], [657, 2, 1, "", "calculate", "The main model calculation."], [658, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [659, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.PowerMask": [[661, 2, 1, "", "__init__", "Constructor."], [662, 2, 1, "", "__repr__", "Return repr(self)."], [663, 2, 1, "", "calculate", "The main model calculation."], [664, 2, 1, "", "initialize", "Initializes the model."], [665, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [666, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.RotorCentreCalc": [[668, 2, 1, "", "__init__", "Constructor."], [669, 2, 1, "", "calculate", "The main model calculation."], [670, 2, 1, "", "initialize", "Initializes the model."], [671, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [672, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.SectorManagement": [[674, 2, 1, "", "__init__", "Constructor."], [675, 2, 1, "", "calculate", "The main model calculation."], [676, 2, 1, "", "initialize", "Initializes the model."], [677, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars": [[679, 2, 1, "", "__init__", "Constructor."], [680, 2, 1, "", "add_var", "Add data for a variable."], [681, 2, 1, "", "calculate", "The main model calculation."], [682, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [683, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [684, 2, 1, "", "reset", "Remove all variables."]], "foxes.models.turbine_models.TableFactors": [[686, 2, 1, "", "__init__", "Constructor."], [687, 2, 1, "", "calculate", "The main model calculation."], [688, 2, 1, "", "initialize", "Initializes the model."], [689, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct": [[691, 2, 1, "", "__init__", "Constructor."], [692, 2, 1, "", "__repr__", "Return repr(self)."], [693, 2, 1, "", "calculate", "The main model calculation."], [694, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM": [[696, 2, 1, "", "calculate", "The main model calculation."], [697, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW": [[699, 2, 1, "", "calculate", "The main model calculation."], [700, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI": [[702, 2, 1, "", "__init__", "Constructor."], [703, 2, 1, "", "__repr__", "Return repr(self)."], [704, 2, 1, "", "calculate", "The main model calculation."], [705, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types": [[706, 0, 1, "", "CpCtFile", "Calculate power and ct by interpolating from cp-ct-curve data file (or pandas DataFrame)."], [708, 0, 1, "", "CpCtFromTwo", "Calculate power and ct by interpolating cp and ct from two files (or two pandas DataFrames)."], [710, 0, 1, "", "NullType", "A turbine type that does not compute any data."], [713, 0, 1, "", "PCtFile", "Calculate power and ct by interpolating from power-ct-curve data file (or pandas DataFrame)."], [721, 0, 1, "", "PCtFromTwo", "Calculate power and ct by interpolating from power curve and ct curve data files."], [729, 0, 1, "", "WsRho2PCtFromTwo", "Calculate air density dependent power and ct values, as given by two individual files."], [735, 0, 1, "", "WsTI2PCtFromTwo", "Calculate turbulent intensity dependent power and ct values, as given by two individual files."]], "foxes.models.turbine_types.CpCtFile": [[707, 2, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo": [[709, 2, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.NullType": [[711, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [712, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile": [[714, 2, 1, "", "__init__", "Constructor."], [715, 2, 1, "", "__repr__", "Return repr(self)."], [716, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [717, 2, 1, "", "finalize", "Finalizes the model."], [718, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [719, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [720, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo": [[722, 2, 1, "", "__init__", "Constructor."], [723, 2, 1, "", "__repr__", "Return repr(self)."], [724, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [725, 2, 1, "", "finalize", "Finalizes the model."], [726, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [727, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [728, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo": [[730, 2, 1, "", "__init__", "Constructor."], [731, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [732, 2, 1, "", "finalize", "Finalizes the model."], [733, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [734, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo": [[736, 2, 1, "", "__init__", "Constructor."], [737, 2, 1, "", "__repr__", "Return repr(self)."], [738, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [739, 2, 1, "", "finalize", "Finalizes the model."], [740, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [741, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.vertical_profiles": [[742, 0, 1, "", "ABLLogNeutralWsProfile", "The neutral ABL wind speed log profile."], [746, 0, 1, "", "ABLLogStableWsProfile", "The stable ABL wind speed log profile."], [750, 0, 1, "", "ABLLogUnstableWsProfile", "The unstable ABL wind speed log profile."], [754, 0, 1, "", "ABLLogWsProfile", "The neutral/stable/unstable ABL wind speed log profile."], [758, 0, 1, "", "DataProfile", "A profile based on numerical data."], [762, 0, 1, "", "ShearedProfile", "A wind shear profile, based on a shear exponent."], [765, 0, 1, "", "UniformProfile", "A profile with uniform values."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile": [[743, 2, 1, "", "__init__", "Constructor."], [744, 2, 1, "", "calculate", "Run the profile calculation."], [745, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile": [[747, 2, 1, "", "__init__", "Constructor."], [748, 2, 1, "", "calculate", "Run the profile calculation."], [749, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile": [[751, 2, 1, "", "__init__", "Constructor."], [752, 2, 1, "", "calculate", "Run the profile calculation."], [753, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile": [[755, 2, 1, "", "__init__", "Constructor."], [756, 2, 1, "", "calculate", "Run the profile calculation."], [757, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.DataProfile": [[759, 2, 1, "", "__init__", "Constructor"], [760, 2, 1, "", "calculate", "Run the profile calculation."], [761, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile": [[763, 2, 1, "", "calculate", "Run the profile calculation."], [764, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile": [[766, 2, 1, "", "__init__", "Constructor"], [767, 2, 1, "", "calculate", "Run the profile calculation."], [768, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.wake_frames": [[769, 0, 1, "", "FarmOrder", "Invokes turbine ordering as defined by the wind farm."], [775, 0, 1, "", "RotorWD", "Align the first axis for each rotor with the local normalized wind direction."], [780, 0, 1, "", "SeqDynamicWakes", "Dynamic wakes for the sequential algorithm."], [788, 0, 1, "", "Streamlines2D", "Streamline following wakes"], [795, 0, 1, "", "Timelines", "Dynamic wakes for spatially uniform timeseries states."], [802, 0, 1, "", "YawedWakes", "Bend the wakes for yawed turbines, based on the Bastankhah 2016 wake model"]], "foxes.models.wake_frames.FarmOrder": [[770, 2, 1, "", "__init__", "Constructor."], [771, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [772, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [773, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [774, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.RotorWD": [[776, 2, 1, "", "__init__", "Constructor."], [777, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [778, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [779, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.SeqDynamicWakes": [[781, 2, 1, "", "__init__", "Constructor."], [782, 2, 1, "", "__repr__", "Return repr(self)."], [783, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [784, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [785, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [786, 2, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [787, 2, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.Streamlines2D": [[789, 2, 1, "", "__init__", "Constructor."], [790, 2, 1, "", "__repr__", "Return repr(self)."], [791, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [792, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [793, 2, 1, "", "get_streamline_data", "Gets streamline data, generating it on the fly"], [794, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.Timelines": [[796, 2, 1, "", "__init__", "Constructor."], [797, 2, 1, "", "__repr__", "Return repr(self)."], [798, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [799, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [800, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [801, 2, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.YawedWakes": [[803, 2, 1, "", "__init__", "Constructor."], [804, 2, 1, "", "__repr__", "Return repr(self)."], [805, 2, 1, "", "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [806, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [807, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [808, 2, 1, "", "initialize", "Initializes the model."], [809, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models": [[810, 0, 1, "", "AxisymmetricWakeModel", "Abstract base class for wake models that depend on (x, r) separately."], [813, 0, 1, "", "DistSlicedWakeModel", "Abstract base class for wake models for which the x-denpendency can be separated from the yz-dependency."], [820, 0, 1, "", "GaussianWakeModel", "Abstract base class for Gaussian wake models."], [823, 0, 1, "", "TopHatWakeModel", "Abstract base class for top-hat wake models."]], "foxes.models.wake_models.AxisymmetricWakeModel": [[811, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."], [812, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel": [[814, 2, 1, "", "__init__", "Constructor."], [815, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."], [816, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [817, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [818, 2, 1, "", "initialize", "Initializes the model."], [819, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.GaussianWakeModel": [[821, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [822, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."]], "foxes.models.wake_models.TopHatWakeModel": [[824, 2, 1, "", "__init__", "Constructor."], [825, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [826, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [827, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."], [828, 2, 1, "", "initialize", "Initializes the model."], [829, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction": [[830, 0, 1, "", "RankineHalfBody", "The Rankine half body induction wake model"], [838, 0, 1, "", "Rathmann", "The Rathmann induction wake model"], [845, 0, 1, "", "SelfSimilar", "The self-similar induction wake model from Troldborg and Meyer Forsting"], [852, 0, 1, "", "SelfSimilar2020", "The self-similar 2020 induction wake model from Troldborg and Meyer Forsting"], [853, 0, 1, "", "VortexSheet", "The Vortex Sheet model implemented with a radial dependency"]], "foxes.models.wake_models.induction.RankineHalfBody": [[831, 2, 1, "", "__init__", "Constructor."], [832, 2, 1, "", "__repr__", "Return repr(self)."], [833, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [834, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [835, 2, 1, "", "initialize", "Initializes the model."], [836, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [837, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.Rathmann": [[839, 2, 1, "", "__init__", "Constructor."], [840, 2, 1, "", "__repr__", "Return repr(self)."], [841, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [842, 2, 1, "", "initialize", "Initializes the model."], [843, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [844, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.SelfSimilar": [[846, 2, 1, "", "__init__", "Constructor."], [847, 2, 1, "", "__repr__", "Return repr(self)."], [848, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [849, 2, 1, "", "initialize", "Initializes the model."], [850, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [851, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.VortexSheet": [[854, 2, 1, "", "__init__", "Constructor."], [855, 2, 1, "", "__repr__", "Return repr(self)."], [856, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 2, 1, "", "initialize", "Initializes the model."], [858, 2, 1, "", "new_wake_deltas", "Initialize wake delta storage."], [859, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti": [[860, 0, 1, "", "CrespoHernandezTIWake", "The Crespo and Hernandez TI empirical correlation"], [867, 0, 1, "", "IECTIWake", "The TI wake model from IEC-64100-1-2005-8 (2005):"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake": [[861, 2, 1, "", "__init__", "Constructor."], [862, 2, 1, "", "__repr__", "Return repr(self)."], [863, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [864, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [865, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [866, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti.IECTIWake": [[868, 2, 1, "", "__init__", "Constructor."], [869, 2, 1, "", "__repr__", "Return repr(self)."], [870, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [871, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [872, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [873, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind": [[874, 0, 1, "", "Bastankhah2014", "The Bastankhah 2014 wake model"], [880, 0, 1, "", "Bastankhah2016", "The Bastankhah 2016 wake model"], [886, 0, 1, "", "Bastankhah2016Model", "Common calculations for the wake model and the wake frame, such that code repetitions can be avoided."], [909, 0, 1, "", "JensenWake", "The Jensen wake model."], [914, 0, 1, "", "TurbOParkWake", "The TurbOPark wake model"], [920, 0, 1, "", "TurbOParkWakeIX", "The generalized TurbOPark wake model, integrating TI over the streamline."]], "foxes.models.wake_models.wind.Bastankhah2014": [[875, 2, 1, "", "__init__", "Constructor."], [876, 2, 1, "", "__repr__", "Return repr(self)."], [877, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [878, 2, 1, "", "initialize", "Initializes the model."], [879, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016": [[881, 2, 1, "", "__init__", "Constructor."], [882, 2, 1, "", "__repr__", "Return repr(self)."], [883, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."], [884, 2, 1, "", "initialize", "Initializes the model."], [885, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016Model": [[887, 1, 1, "", "AMPL_FAR", ""], [888, 1, 1, "", "AMPL_NEAR", ""], [889, 1, 1, "", "CHECK", ""], [890, 1, 1, "", "DELTA_FAR", ""], [891, 1, 1, "", "DELTA_NEAR", ""], [892, 1, 1, "", "MDATA_KEY", ""], [893, 1, 1, "", "NEAR", ""], [894, 1, 1, "", "PARS", ""], [895, 1, 1, "", "R_PC", ""], [896, 1, 1, "", "R_PC_S", ""], [897, 1, 1, "", "SIGMA_Y_FAR", ""], [898, 1, 1, "", "SIGMA_Z_FAR", ""], [899, 1, 1, "", "ST_SEL", ""], [900, 1, 1, "", "X0", ""], [901, 2, 1, "", "__init__", "Constructor."], [902, 2, 1, "", "calc_data", "Calculate common model data, store it in mdata."], [903, 2, 1, "", "clean", "Clean all data"], [904, 2, 1, "", "get_data", "Return data entry"], [905, 2, 1, "", "has_data", "Check if data exists"], [906, 2, 1, "", "initialize", "Initializes the model."], [907, 3, 1, "", "pars", "Dictionary of the model parameters"], [908, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.JensenWake": [[910, 2, 1, "", "__init__", "Constructor."], [911, 2, 1, "", "__repr__", "Return repr(self)."], [912, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [913, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.wind.TurbOParkWake": [[915, 2, 1, "", "__init__", "Constructor."], [916, 2, 1, "", "__repr__", "Return repr(self)."], [917, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [918, 2, 1, "", "initialize", "Initializes the model."], [919, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWakeIX": [[921, 2, 1, "", "__init__", "Constructor."], [922, 2, 1, "", "__repr__", "Return repr(self)."], [923, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [924, 2, 1, "", "finalize", "Finalizes the model."], [925, 2, 1, "", "initialize", "Initializes the model."], [926, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [927, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_superpositions": [[928, 0, 1, "", "TILinear", "Linear wake superposition for TI."], [933, 0, 1, "", "TIMax", "Max wake superposition for TI."], [938, 0, 1, "", "TIPow", "Power wake superposition for TI."], [943, 0, 1, "", "TIQuadratic", "Quadratic wake superposition for TI."], [948, 0, 1, "", "WSLinear", "Linear supersposition of wind deficit results"], [954, 0, 1, "", "WSLinearLocal", "Local linear supersposition of wind deficit results"], [960, 0, 1, "", "WSMax", "Max supersposition of wind deficit results"], [966, 0, 1, "", "WSMaxLocal", "Local max supersposition of wind deficit results"], [972, 0, 1, "", "WSPow", "Power supersposition of wind deficit results"], [978, 0, 1, "", "WSPowLocal", "Local power supersposition of wind deficit results"], [984, 0, 1, "", "WSProduct", "Product supersposition of wind deficit results"], [990, 0, 1, "", "WSQuadratic", "Quadratic supersposition of wind deficit results"], [996, 0, 1, "", "WSQuadraticLocal", "Local quadratic supersposition of wind deficit results"]], "foxes.models.wake_superpositions.TILinear": [[929, 2, 1, "", "__init__", "Constructor."], [930, 2, 1, "", "__repr__", "Return repr(self)."], [931, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [932, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIMax": [[934, 2, 1, "", "__init__", "Constructor."], [935, 2, 1, "", "__repr__", "Return repr(self)."], [936, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [937, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIPow": [[939, 2, 1, "", "__init__", "Constructor."], [940, 2, 1, "", "__repr__", "Return repr(self)."], [941, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [942, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIQuadratic": [[944, 2, 1, "", "__init__", "Constructor."], [945, 2, 1, "", "__repr__", "Return repr(self)."], [946, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [947, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSLinear": [[949, 2, 1, "", "__init__", "Constructor."], [950, 2, 1, "", "__repr__", "Return repr(self)."], [951, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [952, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [953, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSLinearLocal": [[955, 2, 1, "", "__init__", "Constructor."], [956, 2, 1, "", "__repr__", "Return repr(self)."], [957, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [958, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [959, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax": [[961, 2, 1, "", "__init__", "Constructor."], [962, 2, 1, "", "__repr__", "Return repr(self)."], [963, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [964, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [965, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMaxLocal": [[967, 2, 1, "", "__init__", "Constructor."], [968, 2, 1, "", "__repr__", "Return repr(self)."], [969, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [970, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [971, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow": [[973, 2, 1, "", "__init__", "Constructor."], [974, 2, 1, "", "__repr__", "Return repr(self)."], [975, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [976, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [977, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPowLocal": [[979, 2, 1, "", "__init__", "Constructor."], [980, 2, 1, "", "__repr__", "Return repr(self)."], [981, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [982, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [983, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct": [[985, 2, 1, "", "__init__", "Constructor."], [986, 2, 1, "", "__repr__", "Return repr(self)."], [987, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [988, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [989, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic": [[991, 2, 1, "", "__init__", "Constructor."], [992, 2, 1, "", "__repr__", "Return repr(self)."], [993, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [994, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [995, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadraticLocal": [[997, 2, 1, "", "__init__", "Constructor."], [998, 2, 1, "", "__repr__", "Return repr(self)."], [999, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [1000, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [1001, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.output": [[1002, 0, 1, "", "Animator", "Creates an animation from generators that yield lists of artists."], [1007, 0, 1, "", "FarmLayoutOutput", "Plot the farm layout"], [1016, 0, 1, "", "FarmResultsEval", "Evaluates farm results data."], [1036, 0, 1, "", "FlowPlots2D", "Class for horizontal or vertical 2D flow plots"], [1043, 0, 1, "", "Output", "Base class for foxes output."], [1049, 0, 1, "", "PointCalculator", "Computes results at given points"], [1052, 0, 1, "", "ResultsWriter", "Writes results farm data to file."], [1056, 0, 1, "", "RosePlotOutput", "Class for rose plot creation"], [1062, 0, 1, "", "RotorPointPlot", "Visualizes rotor points and their weights."], [1065, 0, 1, "", "SeqFlowAnimationPlugin", "Plugin for creating data for a 2D flow animation during sequential iterations"], [1070, 0, 1, "", "SliceData", "Create data for horizontal or vertical 2D slices"], [1078, 0, 1, "", "StateTurbineMap", "Creates heat maps with turbines on the one and states on the other axis."], [1081, 0, 1, "", "StateTurbineTable", "Creates tables of state-turbine type data"], [1084, 0, 1, "", "StatesRosePlotOutput", "Class for rose plot creation directly from states"], [1086, 0, 1, "", "TurbineTypeCurves", "Creates power and ct curves for turbine types, optionally including derating/boost."]], "foxes.output.Animator": [[1003, 2, 1, "", "__init__", "Constructor."], [1004, 2, 1, "", "add_generator", "Add a generator."], [1005, 2, 1, "", "animate", "Create the animation"], [1006, 3, 1, "", "generators", "The artist generators"]], "foxes.output.FarmLayoutOutput": [[1008, 2, 1, "", "__init__", "Constructor."], [1009, 2, 1, "", "get_figure", "Creates farm layout figure."], [1010, 2, 1, "", "get_layout_data", "Returns wind farm layout."], [1011, 2, 1, "", "get_layout_dict", "Returns wind farm layout."], [1012, 2, 1, "", "write_csv", "Writes csv layout file."], [1013, 2, 1, "", "write_json", "Writes xyh layout file."], [1014, 2, 1, "", "write_plot", "Writes the layout plot to file."], [1015, 2, 1, "", "write_xyh", "Writes xyh layout file."]], "foxes.output.FarmResultsEval": [[1017, 2, 1, "", "__init__", "Constructor."], [1018, 2, 1, "", "add_capacity", "Adds capacity to the farm results"], [1019, 2, 1, "", "add_efficiency", "Adds efficiency to the farm results"], [1020, 2, 1, "", "calc_farm_efficiency", "Calculates farm efficiency"], [1021, 2, 1, "", "calc_farm_mean", "Calculates the mean over states and turbines."], [1022, 2, 1, "", "calc_farm_sum", "Calculates the sum over states and turbines."], [1023, 2, 1, "", "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [1024, 2, 1, "", "calc_mean_farm_power", "Calculates the mean total farm power."], [1025, 2, 1, "", "calc_states_mean", "Calculates the mean wrt states."], [1026, 2, 1, "", "calc_states_std", "Calculates the standard deviation wrt states."], [1027, 2, 1, "", "calc_states_sum", "Calculates the sum wrt states."], [1028, 2, 1, "", "calc_turbine_mean", "Calculates the mean wrt turbines."], [1029, 2, 1, "", "calc_turbine_sum", "Calculates the sum wrt turbines."], [1030, 2, 1, "", "calc_turbine_yield", "Calculates the yield per turbine"], [1031, 2, 1, "", "gen_stdata", "Generates state-turbine data, intended to be used in animations"], [1032, 2, 1, "", "reduce_all", "Reduces states and turbine dimension by some operation"], [1033, 2, 1, "", "reduce_states", "Reduces the states dimension by some operation"], [1034, 2, 1, "", "reduce_turbines", "Reduces the turbine dimension by some operation"], [1035, 2, 1, "", "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FlowPlots2D": [[1037, 2, 1, "", "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [1038, 2, 1, "", "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [1039, 2, 1, "", "gen_states_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [1040, 2, 1, "", "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [1041, 2, 1, "", "get_mean_fig_xz", "Generates 2D farm flow figure in a horizontal xz-plane."], [1042, 2, 1, "", "get_mean_fig_yz", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.Output": [[1044, 2, 1, "", "__init__", "Constructor."], [1045, 2, 1, "", "get_fpath", "Gets the total file path"], [1046, 2, 1, "", "new", "Run-time output model factory."], [1047, 2, 1, "", "print_models", "Prints all model names."], [1048, 2, 1, "", "write", "Writes data to file via pandas."]], "foxes.output.PointCalculator": [[1050, 2, 1, "", "__init__", "Constructor."], [1051, 2, 1, "", "calculate", "Calculate point results"]], "foxes.output.ResultsWriter": [[1053, 2, 1, "", "__init__", "Constructor."], [1054, 2, 1, "", "write_csv", "Writes a csv file"], [1055, 2, 1, "", "write_nc", "Writes a netCDF file"]], "foxes.output.RosePlotOutput": [[1057, 2, 1, "", "__init__", "Constructor."], [1058, 2, 1, "", "get_data", "Get pandas DataFrame with wind rose data."], [1059, 2, 1, "", "get_data_info", "Returns default description for a variable."], [1060, 2, 1, "", "get_figure", "Creates figure object"], [1061, 2, 1, "", "write_figure", "Write rose plot to file"]], "foxes.output.RotorPointPlot": [[1063, 2, 1, "", "__init__", "Constructor."], [1064, 2, 1, "", "get_point_figure", "Get a scatter plot of the rotor points."]], "foxes.output.SeqFlowAnimationPlugin": [[1066, 2, 1, "", "__init__", "Constructor."], [1067, 2, 1, "", "gen_images", ""], [1068, 2, 1, "", "initialize", "Initialize data based on the intial iterator"], [1069, 2, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SliceData": [[1071, 2, 1, "", "__init__", "Constructor."], [1072, 2, 1, "", "get_mean_data_xy", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1073, 2, 1, "", "get_mean_data_xz", "Creates mean data of 2D farm flow slices in an xz-plane."], [1074, 2, 1, "", "get_mean_data_yz", "Creates mean data of 2D farm flow slices in a yz-plane."], [1075, 2, 1, "", "get_states_data_xy", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1076, 2, 1, "", "get_states_data_xz", "Creates states data of 2D farm flow slices in an xz-plane."], [1077, 2, 1, "", "get_states_data_yz", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.StateTurbineMap": [[1079, 2, 1, "", "__init__", "Constructor."], [1080, 2, 1, "", "plot_map", "Plot the heat map for the selected variable."]], "foxes.output.StateTurbineTable": [[1082, 2, 1, "", "__init__", "Constructor."], [1083, 2, 1, "", "get_dataset", "Creates a dataset object"]], "foxes.output.StatesRosePlotOutput": [[1085, 2, 1, "", "__init__", "Constructor."]], "foxes.output.TurbineTypeCurves": [[1087, 2, 1, "", "__init__", "Constructor."], [1088, 2, 1, "", "plot_curves", "Plot the power or ct curve."]], "foxes.output.flow_plots_2d": [[1089, 5, 1, "", "get_fig", "Helper function that creates the flow image plot."]], "foxes.utils": [[1090, 0, 1, "", "DataBook", "Container class for file paths, either directly given or as static data within a package."], [1098, 0, 1, "", "Dict", "A slightly enhanced dictionary."], [1101, 0, 1, "", "FDict", "A dictionary with factory support"], [1107, 0, 1, "", "Factory", "Constructs objects from a choice of allowed constructor parameters"], [1115, 0, 1, "", "PandasFileHelper", "This class helps reading and writing data to files via pandas."], [1122, 0, 1, "", "TabWindroseAxes", "A derivate of the wind rose axes that runs on stochastic data (bins with weights) instead of time series data"], [1547, 0, 1, "", "WakeKFactory", "A factory that automatically handles wake_k parameters"], [1561, 5, 1, "", "all_subclasses", "Searches all classes derived from some base class."], [1562, 5, 1, "", "cubic_roots", "Calculate real roots of polynomials of degree 3."], [1563, 5, 1, "", "delta_wd", "Calculates wd_b - wd_a."], [1564, 5, 1, "", "exec_python", "Executes strings that start with the indicator as python commands, returns one value"], [1612, 5, 1, "", "import_module", "Imports a module dynamically."], [1613, 5, 1, "", "load_module", "Imports a module from file path"], [1614, 5, 1, "", "random_xy_square", "Creates random xy positions within a square, with mean (0, 0)"], [1615, 5, 1, "", "read_shp", "Read a shape file"], [1616, 5, 1, "", "read_shp_polygons", "Reads the polygon points from a shp file."], [1617, 5, 1, "", "read_tab_file", "Reads a tab file into a Dataset"], [1633, 5, 1, "", "shp2csv", "Read shape file, write csv file"], [1634, 5, 1, "", "shp2geom2d", "Read shapefile into geom2d geometry"], [1635, 5, 1, "", "sqrt_reg", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1638, 5, 1, "", "uv2wd", "Calculate wind direction from wind vectors."], [1639, 5, 1, "", "wd2uv", "Calculate wind vectors from wind directions in degrees."], [1640, 5, 1, "", "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [1641, 5, 1, "", "wdvec2wd", "Calculate wind direction from wind direction vectors."], [1642, 5, 1, "", "write_nc", "Writes a dataset to netCFD file"]], "foxes.utils.DataBook": [[1091, 2, 1, "", "__init__", "Constructor."], [1092, 2, 1, "", "add_data_package", "Add static files from a package location."], [1093, 2, 1, "", "add_data_package_file", "Add a static file from a package location."], [1094, 2, 1, "", "add_file", "Add a file path"], [1095, 2, 1, "", "add_files", "Add file paths"], [1096, 2, 1, "", "get_file_path", "Get path of a file"], [1097, 2, 1, "", "toc", "Get list of contents"]], "foxes.utils.Dict": [[1099, 2, 1, "", "__getitem__", "x.__getitem__(y) <==> x[y]"], [1100, 2, 1, "", "__init__", "Constructor."]], "foxes.utils.FDict": [[1102, 2, 1, "", "__contains__", "True if the dictionary has the specified key, else False."], [1103, 2, 1, "", "__getitem__", "x.__getitem__(y) <==> x[y]"], [1104, 2, 1, "", "__init__", "Constructor."], [1105, 2, 1, "", "add_factory", "Adds a Factory object."], [1106, 2, 1, "", "add_k_factory", "Adds a WakeKFactory."]], "foxes.utils.Factory": [[1108, 2, 1, "", "__init__", "Constructor."], [1109, 2, 1, "", "__str__", "String representation"], [1110, 2, 1, "", "check_match", "Tests if a name matches the template"], [1111, 2, 1, "", "construct", "Create an object of the base class."], [1112, 3, 1, "", "name_prefix", "The beginning of the name template"], [1113, 3, 1, "", "name_suffix", "The ending of the name template"], [1114, 3, 1, "", "variables", "The list of variables"]], "foxes.utils.PandasFileHelper": [[1116, 1, 1, "", "DATA_FILE_FORMATS", ""], [1117, 1, 1, "", "DEFAULT_FORMAT_DICT", ""], [1118, 1, 1, "", "DEFAULT_READING_PARAMETERS", ""], [1119, 1, 1, "", "DEFAULT_WRITING_PARAMETERS", ""], [1120, 2, 1, "", "read_file", "Helper for reading data according to file ending."], [1121, 2, 1, "", "write_file", "Helper for writing data according to file ending."]], "foxes.utils.TabWindroseAxes": [[1123, 0, 1, "", "ArtistList", "A sublist of Axes children based on their type."], [1131, 0, 1, "", "InvertedPolarTransform", "The inverse of the polar transform, mapping Cartesian coordinate space x and y back to theta and r."], [1166, 0, 1, "", "PolarAffine", "The affine part of the polar projection."], [1187, 0, 1, "", "PolarTransform", "The base polar transform."], [1196, 0, 1, "", "RadialLocator", "Used to locate radius ticks."], [1208, 0, 1, "", "ThetaFormatter", "Used to format the theta tick labels.  Converts the native unit of radians into degrees and adds a degree symbol."], [1218, 0, 1, "", "ThetaLocator", "Used to locate theta ticks."], [1224, 2, 1, "", "__init__", "See Axes base class for args and kwargs documentation"], [1225, 2, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1226, 2, 1, "", "__repr__", "Return repr(self)."], [1227, 2, 1, "", "__str__", "Return str(self)."], [1228, 2, 1, "", "acorr", "Plot the autocorrelation of x."], [1229, 2, 1, "", "add_artist", "Add an .Artist to the Axes; return the artist."], [1230, 2, 1, "", "add_callback", "Add a callback function that will be called whenever one of the .Artist's properties changes."], [1231, 2, 1, "", "add_child_axes", "Add an .AxesBase to the Axes' children; return the child Axes."], [1232, 2, 1, "", "add_collection", "Add a .Collection to the Axes; return the collection."], [1233, 2, 1, "", "add_container", "Add a .Container to the Axes' containers; return the container."], [1234, 2, 1, "", "add_image", "Add an .AxesImage to the Axes; return the image."], [1235, 2, 1, "", "add_line", "Add a .Line2D to the Axes; return the line."], [1236, 2, 1, "", "add_patch", "Add a .Patch to the Axes; return the patch."], [1237, 2, 1, "", "add_table", "Add a .Table to the Axes; return the table."], [1238, 2, 1, "", "angle_spectrum", "Plot the angle spectrum."], [1239, 2, 1, "", "annotate", "Annotate the point xy with text text."], [1240, 2, 1, "", "apply_aspect", "Adjust the Axes for a specified data aspect ratio."], [1241, 2, 1, "", "arrow", "Add an arrow to the Axes."], [1242, 3, 1, "", "artists", ""], [1243, 2, 1, "", "autoscale", "Autoscale the axis view to the data (toggle)."], [1244, 2, 1, "", "autoscale_view", "Autoscale the view limits using the data limits."], [1245, 3, 1, "", "axes", "The ~.axes.Axes instance the artist resides in, or None."], [1246, 2, 1, "", "axhline", "Add a horizontal line across the Axes."], [1247, 2, 1, "", "axhspan", "Add a horizontal span (rectangle) across the Axes."], [1248, 2, 1, "", "axis", "Convenience method to get or set some axis properties."], [1249, 2, 1, "", "axline", "Add an infinitely long straight line."], [1250, 2, 1, "", "axvline", "Add a vertical line across the Axes."], [1251, 2, 1, "", "axvspan", "Add a vertical span (rectangle) across the Axes."], [1252, 2, 1, "", "bar", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1253, 2, 1, "", "bar_label", "Label a bar plot."], [1254, 2, 1, "", "barbs", "Plot a 2D field of wind barbs."], [1255, 2, 1, "", "barh", "Make a horizontal bar plot."], [1256, 2, 1, "", "box", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1257, 2, 1, "", "boxplot", "Draw a box and whisker plot."], [1258, 2, 1, "", "broken_barh", "Plot a horizontal sequence of rectangles."], [1259, 2, 1, "", "bxp", "Draw a box and whisker plot from pre-computed statistics."], [1260, 2, 1, "", "can_pan", "Return whether this Axes supports the pan/zoom button functionality."], [1261, 2, 1, "", "can_zoom", "Return whether this Axes supports the zoom box button functionality."], [1262, 2, 1, "", "cla", "Clear the Axes."], [1263, 2, 1, "", "clabel", "Label a contour plot."], [1264, 2, 1, "", "clear", "Clear the current axes"], [1265, 2, 1, "", "cohere", "Plot the coherence between x and y."], [1266, 3, 1, "", "collections", ""], [1267, 2, 1, "", "contains", "Test whether the artist contains the mouse event."], [1268, 2, 1, "", "contains_point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."], [1269, 2, 1, "", "contour", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1270, 2, 1, "", "contourf", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1271, 2, 1, "", "convert_xunits", "Convert x using the unit type of the xaxis."], [1272, 2, 1, "", "convert_yunits", "Convert y using the unit type of the yaxis."], [1273, 2, 1, "", "csd", "Plot the cross-spectral density."], [1274, 2, 1, "", "drag_pan", "Called when the mouse moves during a pan operation."], [1275, 2, 1, "", "draw", "Draw the Artist (and its children) using the given renderer."], [1276, 2, 1, "", "draw_artist", "Efficiently redraw a single artist."], [1277, 2, 1, "", "ecdf", "Compute and plot the empirical cumulative distribution function of x."], [1278, 2, 1, "", "end_pan", "Called when a pan operation completes (when the mouse button is up.)"], [1279, 2, 1, "", "errorbar", "Plot y versus x as lines and/or markers with attached errorbars."], [1280, 2, 1, "", "eventplot", "Plot identical parallel lines at the given positions."], [1281, 2, 1, "", "fill", "Plot filled polygons."], [1282, 2, 1, "", "fill_between", "Fill the area between two horizontal curves."], [1283, 2, 1, "", "fill_betweenx", "Fill the area between two vertical curves."], [1284, 2, 1, "", "findobj", "Find artist objects."], [1285, 2, 1, "", "format_coord", "Return a format string formatting the x, y coordinates."], [1286, 2, 1, "", "format_cursor_data", "Return a string representation of data."], [1287, 2, 1, "", "format_xdata", "Return x formatted as an x-value."], [1288, 2, 1, "", "format_ydata", "Return y formatted as a y-value."], [1289, 2, 1, "", "from_ax", "Return a WindroseAxes object for the figure fig."], [1290, 2, 1, "", "get_adjustable", "Return whether the Axes will adjust its physical dimension ('box') or its data limits ('datalim') to achieve the desired aspect ratio."], [1291, 2, 1, "", "get_agg_filter", "Return filter function to be used for agg filter."], [1292, 2, 1, "", "get_alpha", "Return the alpha value used for blending - not supported on all backends."], [1293, 2, 1, "", "get_anchor", "Get the anchor location."], [1294, 2, 1, "", "get_animated", "Return whether the artist is animated."], [1295, 2, 1, "", "get_aspect", "Return the aspect ratio of the Axes scaling."], [1296, 2, 1, "", "get_autoscale_on", "Return True if each axis is autoscaled, False otherwise."], [1297, 2, 1, "", "get_autoscalex_on", "Return whether the xaxis is autoscaled."], [1298, 2, 1, "", "get_autoscaley_on", "Return whether the yaxis is autoscaled."], [1299, 2, 1, "", "get_axes_locator", "Return the axes_locator."], [1300, 2, 1, "", "get_axisbelow", "Get whether axis ticks and gridlines are above or below most artists."], [1301, 2, 1, "", "get_box_aspect", "Return the Axes box aspect, i.e. the ratio of height to width."], [1302, 2, 1, "", "get_children", "Return a list of the child .Artists of this .Artist."], [1303, 2, 1, "", "get_clip_box", "Return the clipbox."], [1304, 2, 1, "", "get_clip_on", "Return whether the artist uses clipping."], [1305, 2, 1, "", "get_clip_path", "Return the clip path."], [1306, 2, 1, "", "get_cursor_data", "Return the cursor data for a given event."], [1307, 2, 1, "", "get_data_ratio", "Return the aspect ratio of the data itself.  For a polar plot, this should always be 1.0"], [1308, 2, 1, "", "get_default_bbox_extra_artists", "Return a default list of artists that are used for the bounding box calculation."], [1309, 2, 1, "", "get_facecolor", "Get the facecolor of the Axes."], [1310, 2, 1, "", "get_fc", "Alias for get_facecolor."], [1311, 2, 1, "", "get_figure", "Return the .Figure instance the artist belongs to."], [1312, 2, 1, "", "get_forward_navigation_events", "Get how pan/zoom events are forwarded to Axes below this one."], [1313, 2, 1, "", "get_frame_on", "Get whether the Axes rectangle patch is drawn."], [1314, 2, 1, "", "get_gid", "Return the group id."], [1315, 2, 1, "", "get_gridspec", "Return the .GridSpec associated with the subplot, or None."], [1316, 2, 1, "", "get_images", "Return a list of .AxesImages contained by the Axes."], [1317, 2, 1, "", "get_in_layout", "Return boolean flag, True if artist is included in layout calculations."], [1318, 2, 1, "", "get_label", "Return the label used for this artist in the legend."], [1319, 2, 1, "", "get_legend", "Return the .Legend instance, or None if no legend is defined."], [1320, 2, 1, "", "get_legend_handles_labels", "Return handles and labels for legend"], [1321, 2, 1, "", "get_lines", "Return a list of lines contained by the Axes."], [1322, 2, 1, "", "get_mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1323, 2, 1, "", "get_navigate", "Get whether the Axes responds to navigation commands."], [1324, 2, 1, "", "get_navigate_mode", "Get the navigation toolbar button status: 'PAN', 'ZOOM', or None."], [1325, 2, 1, "", "get_path_effects", ""], [1326, 2, 1, "", "get_picker", "Return the picking behavior of the artist."], [1327, 2, 1, "", "get_position", "Return the position of the Axes within the figure as a .Bbox."], [1328, 2, 1, "", "get_rasterization_zorder", "Return the zorder value below which artists will be rasterized."], [1329, 2, 1, "", "get_rasterized", "Return whether the artist is to be rasterized."], [1330, 2, 1, "", "get_rlabel_position", "The theta position of the radius labels in degrees."], [1331, 2, 1, "", "get_rmax", "Outer radial limit."], [1332, 2, 1, "", "get_rmin", "The inner radial limit."], [1333, 2, 1, "", "get_rorigin", "float"], [1334, 2, 1, "", "get_rsign", ""], [1335, 2, 1, "", "get_shared_x_axes", "Return an immutable view on the shared x-axes Grouper."], [1336, 2, 1, "", "get_shared_y_axes", "Return an immutable view on the shared y-axes Grouper."], [1337, 2, 1, "", "get_sketch_params", "Return the sketch parameters for the artist."], [1338, 2, 1, "", "get_snap", "Return the snap setting."], [1339, 2, 1, "", "get_subplotspec", "Return the .SubplotSpec associated with the subplot, or None."], [1340, 2, 1, "", "get_theta_direction", "Get the direction in which theta increases."], [1341, 2, 1, "", "get_theta_offset", "Get the offset for the location of 0 in radians."], [1342, 2, 1, "", "get_thetamax", "Return the maximum theta limit in degrees."], [1343, 2, 1, "", "get_thetamin", "Get the minimum theta limit in degrees."], [1344, 2, 1, "", "get_tightbbox", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1345, 2, 1, "", "get_title", "Get an Axes title."], [1346, 2, 1, "", "get_transform", "Return the .Transform instance used by this artist."], [1347, 2, 1, "", "get_transformed_clip_path_and_affine", "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."], [1348, 2, 1, "", "get_url", "Return the url."], [1349, 2, 1, "", "get_visible", "Return the visibility."], [1350, 2, 1, "", "get_window_extent", "Return the Axes bounding box in display space."], [1351, 2, 1, "", "get_xaxis", "[Discouraged] Return the XAxis instance."], [1352, 2, 1, "", "get_xaxis_text1_transform", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1353, 2, 1, "", "get_xaxis_text2_transform", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1354, 2, 1, "", "get_xaxis_transform", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."], [1355, 2, 1, "", "get_xbound", "Return the lower and upper x-axis bounds, in increasing order."], [1356, 2, 1, "", "get_xgridlines", "Return the xaxis' grid lines as a list of .Line2Ds."], [1357, 2, 1, "", "get_xlabel", "Get the xlabel text string."], [1358, 2, 1, "", "get_xlim", "Return the x-axis view limits."], [1359, 2, 1, "", "get_xmajorticklabels", "Return the xaxis' major tick labels, as a list of ~.text.Text."], [1360, 2, 1, "", "get_xmargin", "Retrieve autoscaling margin of the x-axis."], [1361, 2, 1, "", "get_xminorticklabels", "Return the xaxis' minor tick labels, as a list of ~.text.Text."], [1362, 2, 1, "", "get_xscale", "Return the xaxis' scale (as a str)."], [1363, 2, 1, "", "get_xticklabels", "Get the xaxis' tick labels."], [1364, 2, 1, "", "get_xticklines", "Return the xaxis' tick lines as a list of .Line2Ds."], [1365, 2, 1, "", "get_xticks", "Return the xaxis' tick locations in data coordinates."], [1366, 2, 1, "", "get_yaxis", "[Discouraged] Return the YAxis instance."], [1367, 2, 1, "", "get_yaxis_text1_transform", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1368, 2, 1, "", "get_yaxis_text2_transform", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1369, 2, 1, "", "get_yaxis_transform", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."], [1370, 2, 1, "", "get_ybound", "Return the lower and upper y-axis bounds, in increasing order."], [1371, 2, 1, "", "get_ygridlines", "Return the yaxis' grid lines as a list of .Line2Ds."], [1372, 2, 1, "", "get_ylabel", "Get the ylabel text string."], [1373, 2, 1, "", "get_ylim", "Return the y-axis view limits."], [1374, 2, 1, "", "get_ymajorticklabels", "Return the yaxis' major tick labels, as a list of ~.text.Text."], [1375, 2, 1, "", "get_ymargin", "Retrieve autoscaling margin of the y-axis."], [1376, 2, 1, "", "get_yminorticklabels", "Return the yaxis' minor tick labels, as a list of ~.text.Text."], [1377, 2, 1, "", "get_yscale", "Return the yaxis' scale (as a str)."], [1378, 2, 1, "", "get_yticklabels", "Get the yaxis' tick labels."], [1379, 2, 1, "", "get_yticklines", "Return the yaxis' tick lines as a list of .Line2Ds."], [1380, 2, 1, "", "get_yticks", "Return the yaxis' tick locations in data coordinates."], [1381, 2, 1, "", "get_zorder", "Return the artist's zorder."], [1382, 2, 1, "", "grid", "Configure the grid lines."], [1383, 2, 1, "", "has_data", "Return whether any artists have been added to the Axes."], [1384, 2, 1, "", "have_units", "Return whether units are set on any axis."], [1385, 2, 1, "", "hexbin", "Make a 2D hexagonal binning plot of points x, y."], [1386, 2, 1, "", "hist", "Compute and plot a histogram."], [1387, 2, 1, "", "hist2d", "Make a 2D histogram plot."], [1388, 2, 1, "", "hlines", "Plot horizontal lines at each y from xmin to xmax."], [1389, 3, 1, "", "images", ""], [1390, 2, 1, "", "imshow", "Display data as an image, i.e., on a 2D regular raster."], [1391, 2, 1, "", "in_axes", "Return whether the given event (in display coords) is in the Axes."], [1392, 2, 1, "", "indicate_inset", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1393, 2, 1, "", "indicate_inset_zoom", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1394, 2, 1, "", "inset_axes", "Add a child inset Axes to this existing Axes."], [1395, 2, 1, "", "invert_xaxis", "Invert the x-axis."], [1396, 2, 1, "", "invert_yaxis", "Invert the y-axis."], [1397, 2, 1, "", "is_transform_set", "Return whether the Artist has an explicitly set transform."], [1398, 2, 1, "", "label_outer", "Only show \"outer\" labels and tick labels."], [1399, 2, 1, "", "legend", "Sets the legend location and her properties."], [1400, 3, 1, "", "lines", ""], [1401, 2, 1, "", "locator_params", "Control behavior of major tick locators."], [1402, 2, 1, "", "loglog", "Make a plot with log scaling on both the x- and y-axis."], [1403, 2, 1, "", "magnitude_spectrum", "Plot the magnitude spectrum."], [1404, 2, 1, "", "margins", "Set or retrieve autoscaling margins."], [1405, 2, 1, "", "matshow", "Plot the values of a 2D matrix or array as color-coded image."], [1406, 2, 1, "", "minorticks_off", "Remove minor ticks from the Axes."], [1407, 2, 1, "", "minorticks_on", "Display minor ticks on the Axes."], [1408, 3, 1, "", "mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1409, 1, 1, "", "name", ""], [1410, 3, 1, "", "patches", ""], [1411, 2, 1, "", "pchanged", "Call all of the registered callbacks."], [1412, 2, 1, "", "pcolor", "Create a pseudocolor plot with a non-regular rectangular grid."], [1413, 2, 1, "", "pcolorfast", "Create a pseudocolor plot with a non-regular rectangular grid."], [1414, 2, 1, "", "pcolormesh", "Create a pseudocolor plot with a non-regular rectangular grid."], [1415, 2, 1, "", "phase_spectrum", "Plot the phase spectrum."], [1416, 2, 1, "", "pick", "Process a pick event."], [1417, 2, 1, "", "pickable", "Return whether the artist is pickable."], [1418, 2, 1, "", "pie", "Plot a pie chart."], [1419, 2, 1, "", "plot", "Plot y versus x as lines and/or markers."], [1420, 2, 1, "", "plot_date", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1421, 2, 1, "", "properties", "Return a dictionary of all the properties of the artist."], [1422, 2, 1, "", "psd", "Plot the power spectral density."], [1423, 2, 1, "", "quiver", "Plot a 2D field of arrows."], [1424, 2, 1, "", "quiverkey", "Add a key to a quiver plot."], [1425, 2, 1, "", "redraw_in_frame", "Efficiently redraw Axes data, but not axis ticks, labels, etc."], [1426, 2, 1, "", "relim", "Recompute the data limits based on current artists."], [1427, 2, 1, "", "remove", "Remove the artist from the figure if possible."], [1428, 2, 1, "", "remove_callback", "Remove a callback based on its observer id."], [1429, 2, 1, "", "reset_position", "Reset the active position to the original position."], [1430, 2, 1, "", "scatter", "A scatter plot of y vs. x with varying marker size and/or color."], [1431, 2, 1, "", "secondary_xaxis", "Add a second x-axis to this ~.axes.Axes."], [1432, 2, 1, "", "secondary_yaxis", "Add a second y-axis to this ~.axes.Axes."], [1433, 2, 1, "", "semilogx", "Make a plot with log scaling on the x-axis."], [1434, 2, 1, "", "semilogy", "Make a plot with log scaling on the y-axis."], [1435, 2, 1, "", "set", "Set multiple properties at once."], [1436, 2, 1, "", "set_adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1437, 2, 1, "", "set_agg_filter", "Set the agg filter."], [1438, 2, 1, "", "set_alpha", "Set the alpha value used for blending - not supported on all backends."], [1439, 2, 1, "", "set_anchor", "Define the anchor location."], [1440, 2, 1, "", "set_animated", "Set whether the artist is intended to be used in an animation."], [1441, 2, 1, "", "set_aspect", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."], [1442, 2, 1, "", "set_autoscale_on", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."], [1443, 2, 1, "", "set_autoscalex_on", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."], [1444, 2, 1, "", "set_autoscaley_on", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."], [1445, 2, 1, "", "set_axes_locator", "Set the Axes locator."], [1446, 2, 1, "", "set_axis_off", "Hide all visual components of the x- and y-axis."], [1447, 2, 1, "", "set_axis_on", "Do not hide all visual components of the x- and y-axis."], [1448, 2, 1, "", "set_axisbelow", "Set whether axis ticks and gridlines are above or below most artists."], [1449, 2, 1, "", "set_box_aspect", "Set the Axes box aspect, i.e. the ratio of height to width."], [1450, 2, 1, "", "set_clip_box", "Set the artist's clip .Bbox."], [1451, 2, 1, "", "set_clip_on", "Set whether the artist uses clipping."], [1452, 2, 1, "", "set_clip_path", "Set the artist's clip path."], [1453, 2, 1, "", "set_facecolor", "Set the facecolor of the Axes."], [1454, 2, 1, "", "set_fc", "Alias for set_facecolor."], [1455, 2, 1, "", "set_figure", "Set the .Figure instance the artist belongs to."], [1456, 2, 1, "", "set_forward_navigation_events", "Set how pan/zoom events are forwarded to Axes below this one."], [1457, 2, 1, "", "set_frame_on", "Set whether the Axes rectangle patch is drawn."], [1458, 2, 1, "", "set_gid", "Set the (group) id for the artist."], [1459, 2, 1, "", "set_in_layout", "Set if artist is to be included in layout calculations, E.g. constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."], [1460, 2, 1, "", "set_label", "Set a label that will be displayed in the legend."], [1461, 2, 1, "", "set_legend", ""], [1462, 2, 1, "", "set_mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."], [1463, 2, 1, "", "set_navigate", "Set whether the Axes responds to navigation toolbar commands."], [1464, 2, 1, "", "set_navigate_mode", "Set the navigation toolbar button status."], [1465, 2, 1, "", "set_path_effects", "Set the path effects."], [1466, 2, 1, "", "set_picker", "Define the picking behavior of the artist."], [1467, 2, 1, "", "set_position", "Set the Axes position."], [1468, 2, 1, "", "set_prop_cycle", "Set the property cycle of the Axes."], [1469, 2, 1, "", "set_radii_angle", "Set the radii labels angle"], [1470, 2, 1, "", "set_rasterization_zorder", "Set the zorder threshold for rasterization for vector graphics output."], [1471, 2, 1, "", "set_rasterized", "Force rasterized (bitmap) drawing for vector graphics output."], [1472, 2, 1, "", "set_rgrids", "Set the radial gridlines on a polar plot."], [1473, 2, 1, "", "set_rlabel_position", "Update the theta position of the radius labels."], [1474, 2, 1, "", "set_rlim", "Set the radial axis view limits."], [1475, 2, 1, "", "set_rmax", "Set the outer radial limit."], [1476, 2, 1, "", "set_rmin", "Set the inner radial limit."], [1477, 2, 1, "", "set_rorigin", "Update the radial origin."], [1478, 2, 1, "", "set_rscale", ""], [1479, 2, 1, "", "set_rticks", ""], [1480, 2, 1, "", "set_sketch_params", "Set the sketch parameters."], [1481, 2, 1, "", "set_snap", "Set the snapping behavior."], [1482, 2, 1, "", "set_subplotspec", "Set the .SubplotSpec. associated with the subplot."], [1483, 2, 1, "", "set_theta_direction", "Set the direction in which theta increases."], [1484, 2, 1, "", "set_theta_offset", "Set the offset for the location of 0 in radians."], [1485, 2, 1, "", "set_theta_zero_location", "Set the location of theta's zero."], [1486, 2, 1, "", "set_thetagrids", "Set the theta gridlines in a polar plot."], [1487, 2, 1, "", "set_thetalim", "Set the minimum and maximum theta values."], [1488, 2, 1, "", "set_thetamax", "Set the maximum theta limit in degrees."], [1489, 2, 1, "", "set_thetamin", "Set the minimum theta limit in degrees."], [1490, 2, 1, "", "set_title", "Set a title for the Axes."], [1491, 2, 1, "", "set_transform", "Set the artist transform."], [1492, 2, 1, "", "set_url", "Set the url for the artist."], [1493, 2, 1, "", "set_visible", "Set the artist's visibility."], [1494, 2, 1, "", "set_xbound", "Set the lower and upper numerical bounds of the x-axis."], [1495, 2, 1, "", "set_xlabel", "Set the label for the x-axis."], [1496, 2, 1, "", "set_xlim", "Set the x-axis view limits."], [1497, 2, 1, "", "set_xmargin", "Set padding of X data limits prior to autoscaling."], [1498, 2, 1, "", "set_xscale", "Set the xaxis' scale."], [1499, 2, 1, "", "set_xticklabels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1500, 2, 1, "", "set_xticks", "Set the xaxis' tick locations and optionally tick labels."], [1501, 2, 1, "", "set_ybound", "Set the lower and upper numerical bounds of the y-axis."], [1502, 2, 1, "", "set_ylabel", "Set the label for the y-axis."], [1503, 2, 1, "", "set_ylim", "Set the y-axis view limits."], [1504, 2, 1, "", "set_ymargin", "Set padding of Y data limits prior to autoscaling."], [1505, 2, 1, "", "set_yscale", "Set the yaxis' scale."], [1506, 2, 1, "", "set_yticklabels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1507, 2, 1, "", "set_yticks", "Set the yaxis' tick locations and optionally tick labels."], [1508, 2, 1, "", "set_zorder", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."], [1509, 2, 1, "", "sharex", "Share the x-axis with other."], [1510, 2, 1, "", "sharey", "Share the y-axis with other."], [1511, 2, 1, "", "specgram", "Plot a spectrogram."], [1512, 2, 1, "", "spy", "Plot the sparsity pattern of a 2D array."], [1513, 2, 1, "", "stackplot", "Draw a stacked area plot or a streamgraph."], [1514, 2, 1, "", "stairs", "Draw a stepwise constant function as a line or a filled plot."], [1515, 3, 1, "", "stale", "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."], [1516, 2, 1, "", "start_pan", "Called when a pan operation has started."], [1517, 2, 1, "", "stem", "Create a stem plot."], [1518, 2, 1, "", "step", "Make a step plot."], [1519, 3, 1, "", "sticky_edges", "x and y sticky edge lists for autoscaling."], [1520, 2, 1, "", "streamplot", "Draw streamlines of a vector flow."], [1521, 2, 1, "", "table", "Add a table to an ~.axes.Axes."], [1522, 3, 1, "", "tables", ""], [1523, 2, 1, "", "text", "Add text to the Axes."], [1524, 3, 1, "", "texts", ""], [1525, 2, 1, "", "tick_params", "Change the appearance of ticks, tick labels, and gridlines."], [1526, 2, 1, "", "ticklabel_format", "Configure the .ScalarFormatter used by default for linear Axes."], [1527, 2, 1, "", "tricontour", "Draw contour lines on an unstructured triangular grid."], [1528, 2, 1, "", "tricontourf", "Draw contour regions on an unstructured triangular grid."], [1529, 2, 1, "", "tripcolor", "Create a pseudocolor plot of an unstructured triangular grid."], [1530, 2, 1, "", "triplot", "Draw an unstructured triangular grid as lines and/or markers."], [1531, 2, 1, "", "twinx", "Create a twin Axes sharing the xaxis."], [1532, 2, 1, "", "twiny", "Create a twin Axes sharing the yaxis."], [1533, 2, 1, "", "update", "Update this artist's properties from the dict props."], [1534, 2, 1, "", "update_datalim", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1535, 2, 1, "", "update_from", "Copy properties from other to self."], [1536, 3, 1, "", "use_sticky_edges", "When autoscaling, whether to obey all Artist.sticky_edges."], [1537, 3, 1, "", "viewLim", ""], [1538, 2, 1, "", "violin", "Draw a violin plot from pre-computed statistics."], [1539, 2, 1, "", "violinplot", "Make a violin plot."], [1540, 2, 1, "", "vlines", "Plot vertical lines at each x from ymin to ymax."], [1541, 2, 1, "", "xaxis_date", "Set up axis ticks and labels to treat data along the xaxis as dates."], [1542, 2, 1, "", "xaxis_inverted", "Return whether the xaxis is oriented in the \"inverse\" direction."], [1543, 2, 1, "", "xcorr", "Plot the cross correlation between x and y."], [1544, 2, 1, "", "yaxis_date", "Set up axis ticks and labels to treat data along the yaxis as dates."], [1545, 2, 1, "", "yaxis_inverted", "Return whether the yaxis is oriented in the \"inverse\" direction."], [1546, 1, 1, "", "zorder", ""]], "foxes.utils.TabWindroseAxes.ArtistList": [[1124, 2, 1, "", "__class_getitem__", "Represent a PEP 585 generic type"], [1125, 2, 1, "", "__getitem__", ""], [1126, 2, 1, "", "__init__", "The Axes from which this sublist will pull the children Artists."], [1127, 2, 1, "", "__repr__", "Return repr(self)."], [1128, 2, 1, "", "__subclasshook__", "Abstract classes can override this to customize issubclass()."], [1129, 2, 1, "", "count", ""], [1130, 2, 1, "", "index", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform": [[1132, 1, 1, "", "INVALID", ""], [1133, 1, 1, "", "INVALID_AFFINE", ""], [1134, 1, 1, "", "INVALID_NON_AFFINE", ""], [1135, 2, 1, "", "__add__", "Compose two transforms together so that self is followed by other."], [1136, 2, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1137, 2, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1138, 2, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1139, 2, 1, "", "__str__", "Return str(self)."], [1140, 2, 1, "", "__sub__", "Compose self with the inverse of other, cancelling identical terms if any:"], [1141, 2, 1, "", "contains_branch", "Return whether the given transform is a sub-tree of this transform."], [1142, 2, 1, "", "contains_branch_seperately", "Return whether the given branch is a sub-tree of this transform on each separate dimension."], [1143, 3, 1, "", "depth", "Return the number of transforms which have been chained together to form this Transform instance."], [1144, 2, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1145, 2, 1, "", "get_affine", "Get the affine part of this transform."], [1146, 2, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1147, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1148, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1149, 2, 1, "", "invalidate", "Invalidate this TransformNode and triggers an invalidation of its ancestors.  Should be called any time the transform changes."], [1150, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1151, 1, 1, "", "is_affine", ""], [1152, 1, 1, "", "is_bbox", ""], [1153, 1, 1, "", "is_separable", "True if this transform is separable in the x- and y- dimensions."], [1154, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1155, 1, 1, "", "pass_through", "If pass_through is True, all ancestors will always be invalidated, even if 'self' is already invalid."], [1156, 2, 1, "", "set_children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."], [1157, 2, 1, "", "transform", "Apply this transformation on the given array of values."], [1158, 2, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1159, 2, 1, "", "transform_angles", "Transform a set of angles anchored at specific locations."], [1160, 2, 1, "", "transform_bbox", "Transform the given bounding box."], [1161, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1162, 2, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1163, 2, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1164, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."], [1165, 2, 1, "", "transform_point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.PolarAffine": [[1167, 2, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1168, 2, 1, "", "__eq__", "Return self==value."], [1169, 2, 1, "", "__init__", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1170, 2, 1, "", "__str__", "Return str(self)."], [1171, 2, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1172, 2, 1, "", "get_affine", "Get the affine part of this transform."], [1173, 2, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1174, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1175, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1176, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1177, 1, 1, "", "is_affine", ""], [1178, 3, 1, "", "is_separable", "bool(x) -> bool"], [1179, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1180, 2, 1, "", "to_values", "Return the values of the matrix as an (a, b, c, d, e, f) tuple."], [1181, 2, 1, "", "transform", "Apply this transformation on the given array of values."], [1182, 2, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1183, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1184, 2, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1185, 2, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1186, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform": [[1188, 2, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1189, 2, 1, "", "__str__", "Return str(self)."], [1190, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1191, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1192, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1193, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1194, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1195, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.RadialLocator": [[1197, 1, 1, "", "MAXTICKS", ""], [1198, 2, 1, "", "__call__", "Return the locations of the ticks."], [1199, 2, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1200, 1, 1, "", "axis", ""], [1201, 2, 1, "", "create_dummy_axis", ""], [1202, 2, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1203, 2, 1, "", "raise_if_exceeds", "Log at WARNING level if locs is longer than Locator.MAXTICKS."], [1204, 2, 1, "", "set_axis", ""], [1205, 2, 1, "", "set_params", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."], [1206, 2, 1, "", "tick_values", "Return the values of the located ticks given vmin and vmax."], [1207, 2, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaFormatter": [[1209, 2, 1, "", "__call__", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1210, 2, 1, "", "fix_minus", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."], [1211, 2, 1, "", "format_data", "Return the full string representation of the value with the position unspecified."], [1212, 2, 1, "", "format_data_short", "Return a short string version of the tick value."], [1213, 2, 1, "", "format_ticks", "Return the tick labels for all the ticks at once."], [1214, 2, 1, "", "get_offset", ""], [1215, 1, 1, "", "locs", ""], [1216, 2, 1, "", "set_axis", ""], [1217, 2, 1, "", "set_locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaLocator": [[1219, 2, 1, "", "__call__", "Return the locations of the ticks."], [1220, 2, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1221, 2, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1222, 2, 1, "", "set_axis", ""], [1223, 2, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.WakeKFactory": [[1548, 2, 1, "", "__init__", "Constructor."], [1549, 2, 1, "", "__str__", "String representation"]], "foxes.utils.abl.neutral": [[1550, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1551, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1552, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.sheared": [[1553, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable": [[1554, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1555, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1556, 5, 1, "", "psi", "The Psi function"], [1557, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable": [[1558, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1559, 5, 1, "", "psi", "The Psi function"], [1560, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.geom2d": [[1565, 0, 1, "", "AreaGeometry", "Abstract base class for closed 2D geometries."], [1572, 0, 1, "", "AreaIntersection", "The intersection of area geometries."], [1574, 0, 1, "", "AreaUnion", "The union of area geometries."], [1582, 0, 1, "", "Circle", "This class represents the area of a circle."], [1589, 0, 1, "", "ClosedPolygon", "This class represents a closed 2D polygon."], [1596, 0, 1, "", "HalfPlane", "This class represents a half plane in 2d."], [1604, 0, 1, "", "InvertedAreaGeometry", "Base class for inverted geometries."]], "foxes.utils.geom2d.AreaGeometry": [[1566, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1567, 2, 1, "", "inverse", "Get the inverted geometry"], [1568, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1569, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1570, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1571, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaIntersection": [[1573, 2, 1, "", "__new__", "Constructor."]], "foxes.utils.geom2d.AreaUnion": [[1575, 2, 1, "", "__init__", "Constructor."], [1576, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1577, 2, 1, "", "inverse", "Get the inverted geometry"], [1578, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1579, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1580, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1581, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle": [[1583, 2, 1, "", "__init__", "Cobnstructor."], [1584, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1585, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1586, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1587, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1588, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon": [[1590, 2, 1, "", "__init__", "Constructor."], [1591, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1592, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1593, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1594, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1595, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane": [[1597, 2, 1, "", "__init__", "Constructor."], [1598, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1599, 2, 1, "", "inverse", "Get the inverted geometry"], [1600, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1601, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1602, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1603, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry": [[1605, 2, 1, "", "__init__", "Constructor."], [1606, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1607, 2, 1, "", "inverse", "Get the inverted geometry"], [1608, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1609, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1610, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1611, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.runners": [[1618, 0, 1, "", "DaskRunner", "Class for function execution via dask"], [1625, 0, 1, "", "DefaultRunner", "Class for default function execution."], [1627, 0, 1, "", "Runner", "Abstract base class for runners."]], "foxes.utils.runners.DaskRunner": [[1619, 2, 1, "", "__init__", "Constructor."], [1620, 2, 1, "", "finalize", "Finallize the runner"], [1621, 2, 1, "", "initialize", "Initialize the runner"], [1622, 2, 1, "", "is_distributed", ""], [1623, 2, 1, "", "print", "Prints if verbosity is not zero"], [1624, 2, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.DefaultRunner": [[1626, 2, 1, "", "run", "Runs the given function."]], "foxes.utils.runners.Runner": [[1628, 2, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1629, 2, 1, "", "finalize", "Finalize the runner"], [1630, 2, 1, "", "initialize", "Initialize the runner"], [1631, 3, 1, "", "initialized", "Initialization flag"], [1632, 2, 1, "", "run", "Runs the given function."]], "foxes.utils.two_circles": [[1636, 5, 1, "", "area", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1637, 5, 1, "", "calc_area", "Calculates the intersection of two circles."]], "foxes.variables": [[1643, 4, 1, "", "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [1644, 4, 1, "", "AMB_CT", "The ambient thrust coefficient"], [1645, 4, 1, "", "AMB_P", "The ambient power, unit depends on user choice"], [1646, 4, 1, "", "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [1647, 4, 1, "", "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [1648, 4, 1, "", "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [1649, 4, 1, "", "AMB_RHO", "The ambient air density in kg/m3"], [1650, 4, 1, "", "AMB_T", "The ambient temperature in Kelvin"], [1651, 4, 1, "", "AMB_TI", "The ambient turbulence intensity"], [1652, 4, 1, "", "AMB_WD", "The ambient wind direction in degrees"], [1653, 4, 1, "", "AMB_WS", "The ambient wind speed in m/s"], [1654, 4, 1, "", "AMB_YAW", "The ambient absolute yaw angle of  a turbine in degrees"], [1655, 4, 1, "", "AMB_YAWM", "The ambient relative yaw angle of  a turbine in degrees"], [1656, 4, 1, "", "AMB_YLD", "Ambient yield in GWh/a"], [1657, 4, 1, "", "CAP", "Capacity, equals P/P_nominal"], [1658, 4, 1, "", "CT", "The thrust coefficient"], [1659, 4, 1, "", "D", "The rotor diameter in m"], [1660, 4, 1, "", "EFF", "Efficiency, equals P/AMB_P"], [1661, 4, 1, "", "H", "The height over ground in m"], [1662, 4, 1, "", "K", "Wake growth parameter"], [1663, 4, 1, "", "KB", "KTI value for zero TI, K = KB + KTI*TI"], [1664, 4, 1, "", "KTI", "Factor between K and TI, K = KB + KTI*TI"], [1665, 4, 1, "", "MAX_P", "The maximal power, for derating/boost"], [1666, 4, 1, "", "MOL", "The Monin-Ubukhof length in m"], [1667, 4, 1, "", "ORDER", "The turbine order"], [1668, 4, 1, "", "ORDER_INV", "The inverse of the turbine order"], [1669, 4, 1, "", "ORDER_SSEL", "The states selection for applying the order"], [1670, 4, 1, "", "P", "The power, unit depends on user choice"], [1671, 4, 1, "", "PA_ALPHA", "The alpha parameter of the PorteAgel wake model"], [1672, 4, 1, "", "PA_BETA", "The beta parameter of the PorteAgel wake model"], [1673, 4, 1, "", "REWS", "Rotor effective wind speed in m/s"], [1674, 4, 1, "", "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [1675, 4, 1, "", "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [1676, 4, 1, "", "RHO", "The air density in kg/m3"], [1677, 4, 1, "", "SHEAR", "The shear exponent"], [1678, 4, 1, "", "T", "The temperature in Kelvin"], [1679, 4, 1, "", "TI", "The turbulence intensity"], [1680, 4, 1, "", "TXYH", "The turbine rotor centre coordinate  vector (x, y, height)"], [1681, 4, 1, "", "WD", "The wind direction in degrees"], [1682, 4, 1, "", "WEIGHT", "The statistical weight of a state"], [1683, 4, 1, "", "WS", "The wind speed in m/s"], [1684, 4, 1, "", "X", "The x coordinate in m"], [1685, 4, 1, "", "Y", "The y coordinate in"], [1686, 4, 1, "", "YAW", "The absolute yaw angle of a turbine in degrees"], [1687, 4, 1, "", "YAWM", "The relative yaw angle of a turbine in degrees"], [1688, 4, 1, "", "YLD", "Yield in GWh/a"], [1689, 4, 1, "", "Z0", "The roughness length in m"], [1690, 4, 1, "", "amb2var", "Mapping from ambient variable to the corresponding waked variable"], [1691, 4, 1, "", "var2amb", "Mapping from variable to the corresponding ambient variable"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:property", "4": "py:data", "5": "py:function"}, "terms": {"": [35, 39, 42, 46, 52, 56, 60, 80, 85, 94, 314, 315, 325, 326, 328, 332, 334, 335, 344, 346, 356, 361, 362, 369, 377, 385, 399, 403, 404, 410, 420, 427, 440, 443, 463, 490, 491, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 1035, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1131, 1136, 1166, 1167, 1187, 1208, 1210, 1224, 1228, 1230, 1238, 1239, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1286, 1302, 1316, 1356, 1364, 1371, 1379, 1381, 1385, 1386, 1387, 1388, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1430, 1431, 1432, 1435, 1439, 1441, 1450, 1452, 1460, 1468, 1485, 1493, 1499, 1506, 1511, 1513, 1514, 1517, 1520, 1523, 1529, 1533, 1538, 1539, 1540, 1543, 1562, 1564, 1646, 1647, 1648, 1653, 1673, 1674, 1675, 1683, 1704, 1706, 1710, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "0": [0, 2, 10, 18, 39, 42, 46, 49, 52, 56, 60, 63, 65, 67, 69, 72, 74, 76, 78, 80, 85, 86, 94, 99, 105, 110, 165, 188, 230, 280, 285, 308, 309, 323, 332, 335, 346, 350, 351, 352, 356, 362, 369, 370, 379, 383, 386, 388, 392, 399, 404, 410, 413, 420, 422, 438, 440, 443, 448, 452, 459, 465, 471, 476, 483, 485, 486, 487, 488, 489, 490, 494, 498, 500, 501, 503, 504, 507, 509, 511, 514, 515, 516, 519, 523, 526, 531, 532, 535, 537, 538, 540, 544, 546, 547, 548, 549, 551, 552, 553, 562, 563, 564, 565, 566, 567, 571, 574, 575, 577, 578, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 613, 615, 618, 621, 623, 626, 630, 631, 636, 639, 640, 643, 646, 647, 650, 655, 658, 660, 661, 664, 667, 670, 673, 674, 676, 678, 682, 685, 688, 690, 695, 698, 701, 706, 708, 710, 713, 714, 717, 718, 719, 721, 722, 725, 726, 727, 729, 730, 732, 733, 735, 736, 739, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 787, 788, 789, 795, 796, 801, 802, 803, 808, 810, 813, 818, 820, 823, 828, 830, 835, 838, 842, 845, 849, 852, 853, 857, 860, 861, 867, 874, 875, 878, 880, 881, 884, 886, 906, 909, 914, 915, 918, 920, 921, 924, 925, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1005, 1009, 1018, 1019, 1036, 1038, 1039, 1041, 1042, 1049, 1051, 1054, 1055, 1060, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1122, 1166, 1228, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1255, 1257, 1259, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1307, 1341, 1385, 1386, 1387, 1390, 1392, 1393, 1394, 1399, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1423, 1424, 1430, 1431, 1432, 1435, 1438, 1439, 1448, 1450, 1480, 1484, 1485, 1487, 1490, 1496, 1497, 1503, 1504, 1511, 1512, 1514, 1517, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1538, 1539, 1543, 1546, 1550, 1552, 1554, 1557, 1558, 1560, 1562, 1564, 1614, 1618, 1619, 1633, 1635, 1639, 1640, 1642, 1697, 1704, 1705, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730], "00": [550, 1715, 1716, 1719, 1721, 1723, 1724, 1726, 1727, 1729], "000000": [1721, 1725, 1726, 1727, 1729], "000000000": 1724, "0001": 1718, "0001230528308906": 1716, "0001563449299843": 1716, "00033": 860, "00042": [1716, 1728], "000e": [1715, 1726], "001": [1241, 1718], "00158": [1716, 1728], "001880": 1721, "002": 874, "00244": [1716, 1728], "00319": [1716, 1728], "00367": 1716, "0036700002": 1728, "004": [1713, 1718], "005": [1399, 1423], "008": 1724, "008000": 1419, "01": [550, 874, 1635, 1704, 1715, 1716, 1718, 1719, 1724, 1726, 1727], "012039": 860, "012903": 1727, "013": 1726, "0167": 860, "02": [1399, 1614, 1715, 1716, 1724, 1726], "021033": 1727, "022063": [914, 920], "027": 1716, "02d": 1724, "03": [1715, 1716, 1724, 1725, 1726, 1727], "032": 1716, "0325": 861, "0325397b": 1711, "0325851b": 1711, "03873": 984, "03ee3008a": 1711, "03sf0635": 1711, "04": [1713, 1714, 1715, 1716, 1718, 1724, 1726], "042": 1718, "044994": 1717, "048": 1716, "05": [735, 1088, 1131, 1159, 1166, 1187, 1399, 1713, 1715, 1716, 1720, 1721, 1723, 1724, 1726, 1728, 1729], "050318": 1727, "0504": [1716, 1727], "0513": 1716, "0514": [1716, 1727], "0518": 1716, "0522": [1716, 1727], "0523": [1716, 1727], "053010": 1721, "05464": 1708, "055085": 1727, "0586": [577, 578], "06": [735, 1715, 1716, 1719, 1724, 1726, 1727], "063345": 1721, "07": [735, 802, 803, 880, 881, 1715, 1716, 1717, 1726], "075": 1718, "076947": 1725, "07t12": 1726, "08": 1715, "0883": [577, 578], "09": [1715, 1716, 1727], "093786": 1721, "096026": 1721, "099583": 1727, "0arrai": 1719, "1": [0, 2, 10, 18, 85, 86, 105, 116, 165, 184, 188, 230, 235, 276, 277, 278, 285, 308, 320, 385, 413, 457, 474, 476, 483, 485, 486, 487, 488, 489, 491, 549, 551, 552, 553, 557, 561, 563, 566, 577, 631, 632, 639, 646, 706, 707, 709, 714, 722, 729, 730, 736, 786, 845, 846, 852, 860, 867, 914, 915, 1002, 1005, 1007, 1009, 1016, 1018, 1019, 1036, 1054, 1055, 1060, 1070, 1071, 1088, 1122, 1131, 1134, 1140, 1166, 1187, 1206, 1228, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1257, 1259, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1307, 1340, 1385, 1386, 1387, 1390, 1394, 1399, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1423, 1424, 1430, 1431, 1432, 1438, 1439, 1441, 1448, 1450, 1468, 1483, 1490, 1497, 1504, 1511, 1512, 1514, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1538, 1539, 1543, 1562, 1564, 1614, 1619, 1633, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1697, 1701, 1704, 1707, 1709, 1711, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729], "10": [165, 577, 802, 845, 852, 853, 860, 874, 880, 886, 914, 920, 1122, 1228, 1254, 1273, 1279, 1385, 1387, 1394, 1402, 1422, 1433, 1434, 1511, 1526, 1543, 1564, 1708, 1710, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "100": [503, 660, 661, 706, 708, 713, 719, 721, 727, 1122, 1257, 1385, 1539, 1713, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1725, 1726, 1727, 1728, 1729], "1000": [2, 285, 308, 309, 660, 661, 1030, 1196, 1197, 1218, 1257, 1385, 1386, 1523, 1617, 1697, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "10000": [788, 789, 1257, 1714, 1715, 1718, 1724, 1726], "100000": 1721, "1000000": [285, 1697], "1000000000": [285, 1697], "1000000000000": [285, 1697], "1000779": [1716, 1727], "1001": 1720, "100102": 1716, "1001061": 1716, "1002": [845, 852, 853, 1710], "100290": [1716, 1727], "1002993": [1716, 1727], "1003540": 1716, "1004330": [1716, 1727], "1004753": [1716, 1727], "1004849": 1716, "100780": [1716, 1727], "101": [1715, 1726, 1727, 1728], "101084205": 1711, "1016": [860, 874], "1017": [802, 880, 886], "101872": [1716, 1727], "102": [1715, 1726], "103": 1715, "103005": 1716, "103659": [1716, 1727], "104": 1715, "104162": 1716, "105": 1715, "1054": 1717, "105kb": 1724, "106": 1715, "106903": 1721, "107": 1715, "1088": [860, 914, 920], "10mw": [1715, 1724, 1726], "10t05": 1724, "10t06": 1724, "10t07": 1724, "10t08": 1724, "10t09": 1724, "10t10": 1724, "10t11": 1724, "10t12": 1724, "10t13": 1724, "10t14": 1724, "10t15": 1724, "10t16": 1724, "10t17": 1724, "10t18": 1724, "10t19": 1724, "10t20": 1724, "10t21": 1724, "10t22": 1724, "10t23": 1724, "11": [1257, 1420, 1564, 1710, 1712, 1715, 1716, 1721, 1722, 1727, 1729], "110": 1723, "1106": 1725, "110762": 1721, "111": 1724, "1127": 1717, "1156": 1717, "116": 1716, "1167": 1725, "116827": 1727, "1185": 1717, "119": [1564, 1715, 1718, 1724, 1726], "119290": 1726, "11kb": [1724, 1726], "11t00": 1724, "11t01": 1724, "11t02": 1724, "11t03": 1724, "11t04": 1724, "11t05": 1724, "11t06": 1724, "11t07": 1724, "11t08": 1724, "11t09": 1724, "11t10": 1724, "11t11": 1724, "11t12": 1724, "11t13": 1724, "11t14": 1724, "11t15": 1724, "11t16": 1724, "11t17": 1724, "11t18": 1724, "11t19": 1724, "11t20": 1724, "11t21": 1724, "11t22": 1724, "11t23": 1724, "12": [845, 852, 1279, 1419, 1523, 1710, 1712, 1715, 1716, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "120": [1713, 1715, 1716, 1724, 1726], "1200": 1721, "1218": 1721, "122949": 1717, "126": 1718, "127": [276, 1727], "128": [1480, 1511], "129": [1719, 1721], "1290": 1725, "12kb": 1719, "12t00": 1724, "12t01": 1724, "12t02": 1724, "12t03": 1724, "12t04": 1724, "12t05": 1724, "12t06": 1724, "13": [1715, 1716, 1719, 1721, 1722, 1726], "1352": 1717, "1396": 1717, "139685": 1717, "14": [853, 1715, 1716, 1719, 1721, 1722, 1727], "1406": 1717, "143680": 1727, "144012": 1719, "145": 1716, "1456": 1727, "145984": 1727, "1460": 1719, "1474": 1717, "147671": 1727, "149e": 1715, "15": [860, 1257, 1259, 1279, 1394, 1715, 1716, 1717, 1719, 1721, 1722, 1723, 1727, 1728], "150": [1716, 1718, 1719, 1727, 1728], "15000": [1718, 1719, 1725], "151": 1721, "1512": 1719, "152294": 1721, "1532": 1726, "153e": 1715, "1557": 1725, "158": 1715, "1580": 1717, "158092": 1717, "16": [1252, 1256, 1269, 1270, 1480, 1715, 1716, 1719, 1721, 1722, 1723, 1727, 1728], "1614": 1717, "164": 1718, "166": 1727, "1665": 1717, "16666666666666666": 1726, "16b": 1726, "17": [860, 1716, 1721, 1728], "170": [1715, 1721, 1723], "171047": 1717, "172": 1716, "173606": 1729, "1742": [860, 914, 920], "1748": 1717, "176627": 1725, "1771": 1721, "178": [1715, 1718, 1724, 1726], "18": [1716, 1719, 1721], "180": 1716, "1800": 1721, "1812": 1727, "181480": 1721, "184": 1716, "184792": 1717, "186188": 1727, "1880": 1727, "19": [1715, 1716, 1719, 1721, 1727], "191": 1723, "1967": 1257, "1978": 1257, "198": [1716, 1721], "1986": [1265, 1273, 1422], "198707": 1719, "1991": 1564, "1995": 1564, "1996": 1713, "1d": [574, 1238, 1246, 1249, 1250, 1252, 1254, 1256, 1257, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1382, 1387, 1403, 1413, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1500, 1507, 1512, 1518, 1520, 1702, 1714], "1e": [1131, 1159, 1166, 1187, 1715], "1f": [1719, 1721, 1727, 1728], "1kb": 1725, "1min": [1713, 1718, 1724], "1px": 1481, "2": [188, 278, 434, 435, 487, 489, 549, 551, 623, 812, 815, 845, 852, 874, 875, 883, 914, 920, 1009, 1122, 1131, 1133, 1148, 1154, 1159, 1166, 1175, 1179, 1187, 1191, 1193, 1206, 1228, 1238, 1239, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1382, 1385, 1386, 1387, 1394, 1402, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1441, 1448, 1468, 1487, 1497, 1504, 1511, 1512, 1519, 1520, 1525, 1534, 1538, 1539, 1543, 1562, 1564, 1568, 1569, 1570, 1571, 1578, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1614, 1616, 1636, 1637, 1702, 1709, 1711, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729], "20": [706, 708, 713, 719, 721, 727, 845, 852, 1279, 1403, 1511, 1715, 1716, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1728], "200": [636, 637, 643, 644, 1715, 1716, 1719, 1729], "2000": [550, 1564, 1715, 1723], "20000": [795, 796], "2001": 1564, "2005": [867, 868, 1707, 1718], "2009": [1716, 1719], "2009_31": 867, "201": [1717, 1719], "2010": 984, "2011": [845, 852, 853], "2012": 1710, "2014": [874, 1707, 1713], "2016": [802, 880, 886, 1702, 1707, 1710, 1713], "2017": [845, 852, 1714, 1716, 1727], "2018": [1716, 1724], "2019": [830, 867, 868, 1713, 1714, 1718], "2020": [577, 845, 852, 1707, 1714], "2021": 1716, "2022": 1713, "2023": [838, 845, 852, 1564, 1708, 1716, 1726], "204": 1728, "205": 1727, "205e": 1726, "207": 1716, "208": 1717, "209": 1716, "21": [867, 868, 1715, 1716, 1719, 1721, 1727], "21105": 1708, "211367": 1717, "2137": [845, 852], "214": 1717, "216": [1716, 1728], "216e": 1726, "217": 1716, "218": 1717, "22": [116, 188, 235, 278, 1252, 1256, 1269, 1270, 1716, 1721, 1726, 1727], "220": 1716, "2212": [1208, 1210], "222": 1717, "222715": 1727, "223": 1716, "225": [706, 707, 709, 729, 1088, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "225378": 1721, "2265": [914, 920], "227": 1716, "228kb": 1719, "2299": 1727, "23": [1715, 1716, 1719, 1724, 1727], "230": 1724, "232e": 1715, "236": 1717, "237": 1717, "2383": 1727, "2392": 1727, "24": [1716, 1721, 1726, 1727], "240": [1718, 1729], "2400": 1721, "24000": 1719, "2408": 1727, "241": [1716, 1727], "242": 1716, "242345": 1717, "243": [1716, 1727], "2435": 1727, "244": [1716, 1727], "2457": 1727, "246": [577, 578], "249557": 1721, "25": [165, 861, 914, 915, 920, 921, 1246, 1250, 1251, 1710, 1715, 1716, 1718, 1719, 1721], "250": [1716, 1719, 1723, 1729], "2500": [1716, 1717], "2518": 1725, "253": 1716, "255": [1390, 1413, 1414], "256": [1122, 1265, 1273, 1422, 1511, 1721], "2564": 1727, "259090": 1717, "25th": 1257, "26": [1716, 1717, 1727], "2609": 1727, "262615": 1721, "2638": 1727, "265": 1716, "267": 1716, "268": 1716, "269": 1716, "27": [1716, 1724, 1725], "270": [1036, 1038, 1039, 1041, 1042, 1073, 1074, 1076, 1077, 1710, 1714, 1715, 1716, 1719, 1720, 1721, 1725, 1729], "275": 729, "2756": 1727, "276034": 1727, "27767": [1716, 1719], "28": [1715, 1724], "280": 1724, "281e": 1715, "283373": 1717, "28838": [1716, 1719], "28b": [1715, 1726], "29": [1715, 1716, 1726, 1727], "290": 1723, "297880": 1717, "299": 1727, "2d": [1036, 1037, 1038, 1039, 1040, 1041, 1042, 1065, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1254, 1257, 1280, 1385, 1386, 1387, 1390, 1405, 1412, 1413, 1414, 1419, 1423, 1430, 1511, 1512, 1520, 1521, 1534, 1565, 1589, 1596, 1703, 1704, 1710, 1714, 1728], "2f": [1719, 1721, 1726, 1727, 1728], "2kb": 1726, "3": [5, 18, 19, 23, 188, 319, 396, 412, 413, 415, 429, 430, 455, 456, 467, 600, 607, 617, 623, 631, 633, 639, 646, 772, 773, 778, 779, 784, 785, 792, 794, 799, 800, 806, 807, 816, 833, 841, 848, 856, 1010, 1051, 1084, 1089, 1123, 1131, 1132, 1166, 1187, 1206, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1277, 1279, 1282, 1283, 1337, 1360, 1375, 1382, 1385, 1386, 1390, 1392, 1393, 1394, 1398, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1431, 1432, 1435, 1468, 1512, 1521, 1523, 1562, 1564, 1702, 1704, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "30": [1088, 1715, 1716, 1719, 1726, 1727, 1728, 1729], "300": [1715, 1716, 1721, 1729], "3000": [1715, 1716, 1719, 1721, 1729], "3000height": 1719, "30095": [1716, 1719], "302": 1716, "304": 1715, "3067": 1727, "30x30": 1520, "31": [1716, 1717, 1719, 1727], "311": 1564, "311353": 1717, "3121316729": 1715, "314": 1716, "314050": 1721, "32": [861, 1715], "325199": 1725, "32b": 1719, "32u": [1616, 1634], "33": [1716, 1726, 1727], "332498": 1725, "334366": 1727, "334e": 1715, "34": 1716, "340": [1719, 1723], "344": 1716, "347000": 1717, "348633": 1721, "35": [1716, 1723, 1726], "352448": 1717, "352662": 1717, "357075": 1717, "36": [1715, 1716], "360": [674, 1252, 1256, 1269, 1270], "362": 861, "36213": 1727, "363478": 1717, "36368": [1716, 1719], "37": 1726, "37214": [1716, 1719], "372918": 1721, "3750291": 867, "375640": 1717, "38": [1715, 1727], "384285": 1721, "384b": 1715, "39": [1714, 1715, 1716, 1717, 1718, 1719, 1724, 1725, 1726, 1727, 1728], "396261": 1721, "3d": [1243, 1248, 1401], "3f": [1115, 1117], "4": [165, 793, 860, 1206, 1246, 1249, 1250, 1279, 1385, 1386, 1390, 1392, 1393, 1401, 1413, 1414, 1419, 1423, 1520, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "40": 1719, "400": 1715, "4000": [2, 19, 1714, 1715, 1717, 1723, 1728], "400b": 1724, "403": 1721, "404e": 1726, "406": 1716, "40b": 1725, "41": [280, 1550, 1552, 1554, 1557, 1558, 1560, 1697, 1705, 1715], "414e": 1726, "416355": 1721, "417e": 1715, "419935": 1729, "42": [1715, 1716, 1727], "420645": 1727, "421405": 1717, "42685": [1716, 1719], "429893": 1727, "43": [1715, 1726], "44": [1715, 1717], "440": 1721, "445084": 1721, "4451": 1721, "4464": 1719, "447853": 1717, "45": [1218, 1423, 1715, 1728], "451": [853, 1710], "451e": 1724, "452153": 1721, "4562": 1721, "458187": 1726, "458987": 1719, "459901": 1727, "46": [1715, 1716, 1726], "462887": 1717, "464325": 1727, "468": 1724, "468b": 1715, "47": [1715, 1717], "475399": 1721, "476610": 1727, "476878": 1721, "4777": 1727, "478592": 1727, "48": [1714, 1715], "481726": 1727, "484049": 1717, "4843": 1727, "4868": 1727, "487086": 1727, "48b": 1715, "49": [1716, 1717], "490711": 1727, "491": 1721, "491089": 1717, "491558": 1727, "496": 1720, "497": 1720, "497e": 1715, "498": 1720, "499": 1720, "4d": 1720, "4f": [1048, 1115, 1117, 1121], "4kb": 1724, "5": [278, 577, 853, 860, 914, 915, 1062, 1064, 1122, 1166, 1239, 1241, 1246, 1247, 1250, 1251, 1252, 1254, 1256, 1257, 1259, 1269, 1270, 1390, 1392, 1394, 1404, 1419, 1423, 1435, 1439, 1448, 1497, 1504, 1523, 1525, 1527, 1528, 1538, 1539, 1642, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "50": [503, 549, 551, 1254, 1385, 1564, 1715, 1716, 1719, 1723, 1724, 1728], "500": [1072, 1073, 1074, 1075, 1076, 1077, 1614, 1704, 1715, 1716, 1717, 1719, 1720, 1723, 1726, 1728], "5000": [549, 551, 1496, 1503, 1713, 1718, 1721, 1724, 1726, 1727], "500000": 1721, "5001": 1723, "500m": 1715, "506817": 1727, "51": [1715, 1716, 1724], "512884": 1727, "512e": 1715, "512kb": 1725, "5194": 577, "519e": 1725, "52": [1715, 1716], "521": [1717, 1726], "521975": 1727, "522878": 1721, "523022": 1717, "523994": 1717, "523e": 1715, "527781": 1727, "528kb": 1719, "53": 1715, "530254": 1727, "530508370": 1714, "532": 1716, "534548": 1721, "536000": 1727, "537113": 1717, "54": [1715, 1726], "542331196166035e": 1716, "5464": 1708, "547918": 1717, "55": [719, 727, 1251, 1716], "551317": 1727, "551842": 1726, "552147": 1717, "552663": 1717, "56": 1726, "560020": 1727, "560767": 1721, "563693": 1721, "564008": 1727, "57": [1716, 1727, 1728], "576b": 1715, "577": 1724, "578": 1721, "58": [802, 803, 880, 881, 1716, 1721], "580130": 1717, "580285": 1717, "581195": 1717, "583392": 1727, "585": [116, 235, 1123, 1124], "59": [1715, 1724, 1726], "593225": 1719, "595": [802, 880, 886], "597810": 1717, "5f": [1115, 1117], "5iqr": 1257, "5mw": [1713, 1718, 1723, 1725], "5x": 1257, "6": [594, 595, 867, 868, 1252, 1256, 1269, 1270, 1279, 1418, 1419, 1525, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "60": [503, 1724, 1726], "600": [1719, 1721, 1723, 1724], "6000": [1721, 1723], "600000": 1725, "606": 1726, "607": 1726, "607085": 1717, "608": 1726, "61": 1715, "6105": 860, "610500": 1727, "613545": 1727, "618827331554488e": 1716, "62": [1715, 1716, 1727], "621921": 1717, "625": 860, "628197": 1727, "628299": 1719, "63": [1715, 1727], "631419": 1727, "633459": 1725, "64": [1716, 1727], "64100": [867, 1707], "642754": 1727, "64kb": 1725, "65": [1254, 1715, 1716, 1720, 1727, 1728], "651819": 1721, "656621": 1727, "6596": [860, 914, 920], "66": [1715, 1727], "663709": 1721, "664594": 1727, "67": [1715, 1716, 1727], "670": 1728, "672845": 1727, "673386": 1717, "673638": 1727, "676969": 1717, "68": 1716, "682007": 1719, "682e": 1715, "687892": 1727, "691": 853, "694": 1716, "697": 853, "697787": 1721, "6e": 1724, "6f": [1115, 1117], "7": [276, 1123, 1253, 1254, 1279, 1394, 1418, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "70": [1716, 1717, 1723, 1727], "7000": [1564, 1723, 1724], "700000": [1726, 1727], "702": 1726, "703701": 1717, "705093": 1727, "71": 1715, "714437": 1721, "715530": 1717, "72": [1430, 1716, 1717], "723397": 1727, "724": 1717, "72b": 1724, "73": [861, 1720], "730530": 1727, "731909": 1717, "731e": 1715, "732653": 1721, "738": 1721, "748653": 1717, "75": [1246, 1250, 1715, 1716, 1717, 1719, 1727], "750": 1729, "7500": 1718, "750000": 1727, "750e": 1715, "751304": 1717, "75th": 1257, "76": [1715, 1728], "760051": 1727, "77": 1715, "774911": 1727, "78": [1715, 1716, 1720], "79": 1725, "790000": 1725, "791530": 1727, "7kb": 1726, "8": [867, 914, 915, 984, 1007, 1009, 1014, 1060, 1122, 1255, 1277, 1394, 1398, 1418, 1419, 1497, 1504, 1707, 1708, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730], "80": [1727, 1728], "800": [1715, 1724, 1725, 1726], "8000": [1716, 1725, 1727], "800b": 1726, "803665": 1725, "804e": 1715, "806173": 1721, "806876": 1726, "808234": 1725, "809": 1726, "81": [1727, 1728], "812210": 1725, "814": 1724, "815208": 1717, "8165": 1715, "8171": 1715, "818854": 1717, "818932": 1725, "82": 1727, "821354": 1725, "823401": 1721, "825891": 1727, "83": [861, 1715, 1727], "836": 1716, "840554": 1721, "841": 1726, "852422": 1721, "853e": 1715, "859e": 1715, "86": [1708, 1715], "861136": 1721, "862504": 1727, "867297": 1717, "87": 1721, "871543": 1717, "873257": 1727, "874904": 1727, "875521": 1727, "8787": 1727, "88": [714, 722, 730, 736, 1716, 1727, 1729], "880886": 1725, "89": [1715, 1727], "898485": 1717, "899315": 1717, "8b": [1715, 1725], "8coordin": 1719, "8d6ca3d82151bad815f78addf9b5c1c6": 1636, "8kb": 1715, "8m": 1714, "9": [1257, 1259, 1279, 1360, 1375, 1419, 1420, 1431, 1432, 1710, 1712, 1715, 1716, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729], "90": [1716, 1718, 1719], "900": [1726, 1728], "900005": 1721, "900b": 1726, "9042": 1715, "907209": 1727, "91": 1719, "9116": 1715, "914426": 1721, "916": 1725, "92": [1716, 1728], "929624": 1721, "93": [1715, 1716, 1728], "932216": 1721, "932726": 1717, "946766": 1721, "95": [860, 1257, 1715, 1716], "950": 729, "955794": 1725, "958531": 1727, "958672": 1717, "958e": 1715, "960030": 1717, "960214": 1717, "960601": 1717, "962317": 1727, "96kb": 1719, "97": [1716, 1719, 1726, 1727], "975": 729, "977087": 1721, "981": 1716, "983e": 1715, "98695302482496e": 1716, "99": [1392, 1715, 1716, 1723, 1727], "995899": 1717, "996": 1720, "997": 1720, "997697": 1721, "998": [1717, 1720], "999": 1720, "9999": 881, "99999": [574, 575], "A": [18, 69, 94, 105, 116, 184, 230, 235, 319, 362, 365, 369, 404, 407, 479, 480, 516, 523, 710, 758, 762, 765, 830, 845, 852, 860, 874, 1004, 1030, 1090, 1091, 1098, 1101, 1107, 1108, 1122, 1123, 1126, 1135, 1140, 1142, 1228, 1238, 1239, 1253, 1254, 1255, 1257, 1258, 1259, 1261, 1263, 1265, 1273, 1279, 1280, 1282, 1283, 1284, 1337, 1385, 1387, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1424, 1430, 1431, 1432, 1437, 1466, 1487, 1490, 1499, 1506, 1511, 1513, 1517, 1518, 1519, 1521, 1523, 1527, 1528, 1538, 1539, 1543, 1547, 1548, 1635, 1695, 1696, 1698, 1699, 1701, 1702, 1704, 1713, 1715, 1716, 1717, 1722], "And": 1714, "As": [1254, 1286, 1306, 1423, 1527, 1528, 1710, 1712, 1715, 1729], "At": [1426, 1521, 1716], "But": 1727, "By": [362, 404, 1239, 1257, 1259, 1279, 1282, 1283, 1385, 1387, 1390, 1412, 1413, 1414, 1418, 1419, 1430, 1498, 1505, 1523, 1527, 1528, 1715, 1729], "For": [332, 434, 435, 549, 551, 660, 860, 905, 1088, 1107, 1108, 1122, 1141, 1143, 1159, 1160, 1196, 1239, 1240, 1243, 1248, 1252, 1256, 1257, 1258, 1260, 1269, 1270, 1273, 1279, 1280, 1281, 1290, 1307, 1327, 1350, 1385, 1386, 1387, 1390, 1401, 1412, 1413, 1414, 1418, 1420, 1422, 1423, 1430, 1431, 1432, 1436, 1448, 1450, 1452, 1466, 1468, 1472, 1481, 1486, 1496, 1497, 1499, 1503, 1504, 1506, 1512, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1531, 1532, 1710, 1712, 1713, 1715, 1716, 1718, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1729, 1732], "If": [328, 414, 572, 632, 702, 802, 861, 880, 1054, 1055, 1058, 1060, 1122, 1123, 1126, 1128, 1131, 1137, 1140, 1155, 1166, 1187, 1188, 1202, 1221, 1228, 1229, 1238, 1239, 1240, 1241, 1243, 1244, 1248, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1269, 1270, 1271, 1272, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1327, 1344, 1382, 1385, 1386, 1387, 1388, 1390, 1394, 1398, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1440, 1441, 1443, 1444, 1452, 1466, 1468, 1470, 1471, 1480, 1481, 1490, 1494, 1495, 1497, 1499, 1500, 1501, 1502, 1504, 1506, 1507, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1530, 1534, 1538, 1539, 1540, 1543, 1562, 1616, 1710, 1712, 1713, 1721, 1722, 1727], "In": [414, 632, 1123, 1140, 1158, 1161, 1162, 1182, 1183, 1184, 1194, 1218, 1239, 1240, 1244, 1254, 1257, 1259, 1279, 1385, 1386, 1387, 1390, 1405, 1412, 1413, 1414, 1419, 1423, 1430, 1481, 1499, 1500, 1506, 1507, 1512, 1527, 1528, 1529, 1562, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "It": [1035, 1128, 1138, 1140, 1150, 1176, 1192, 1225, 1228, 1230, 1238, 1239, 1243, 1249, 1265, 1273, 1385, 1387, 1390, 1403, 1412, 1413, 1414, 1415, 1419, 1422, 1430, 1494, 1501, 1511, 1513, 1518, 1527, 1528, 1529, 1543, 1711, 1712, 1717, 1719, 1721, 1723], "Its": 1468, "NEAR": [886, 893], "NOT": [1265, 1273, 1422, 1511], "No": [589, 1009, 1255, 1279, 1385, 1412, 1414, 1430, 1702, 1715], "Not": [1228, 1257, 1259], "On": [838, 845, 852, 1390, 1724], "One": [490, 491, 1239, 1496, 1503, 1717, 1720], "Or": [618, 619], "Such": [352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1282, 1283, 1716, 1722], "That": [1257, 1259], "The": [0, 2, 3, 4, 5, 7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 183, 187, 191, 196, 203, 212, 229, 230, 280, 281, 301, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 561, 562, 563, 564, 565, 566, 567, 570, 571, 572, 574, 575, 576, 579, 580, 581, 582, 584, 585, 590, 591, 592, 593, 594, 595, 597, 598, 600, 603, 604, 606, 607, 609, 610, 611, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 738, 739, 740, 741, 742, 744, 745, 746, 748, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 775, 776, 777, 778, 779, 780, 781, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 830, 831, 833, 834, 835, 836, 838, 839, 841, 842, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 863, 864, 865, 867, 868, 870, 871, 872, 874, 875, 877, 878, 880, 881, 883, 884, 886, 901, 902, 904, 905, 906, 909, 910, 912, 913, 914, 915, 917, 918, 920, 921, 923, 924, 925, 926, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1002, 1003, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1101, 1105, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1126, 1131, 1138, 1144, 1148, 1150, 1154, 1157, 1158, 1159, 1161, 1165, 1166, 1169, 1171, 1175, 1176, 1178, 1179, 1181, 1182, 1183, 1187, 1191, 1192, 1193, 1194, 1203, 1225, 1228, 1230, 1238, 1239, 1241, 1243, 1244, 1245, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1273, 1274, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1286, 1301, 1306, 1326, 1330, 1332, 1337, 1344, 1345, 1351, 1352, 1353, 1354, 1358, 1365, 1366, 1367, 1368, 1369, 1373, 1380, 1382, 1385, 1386, 1387, 1390, 1392, 1394, 1399, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1430, 1431, 1432, 1433, 1434, 1439, 1441, 1452, 1467, 1468, 1470, 1472, 1473, 1480, 1486, 1490, 1494, 1495, 1496, 1498, 1499, 1500, 1501, 1502, 1503, 1505, 1506, 1507, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1536, 1538, 1539, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1564, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1624, 1626, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1644, 1645, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1658, 1659, 1661, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1689, 1692, 1694, 1697, 1698, 1700, 1702, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1731, 1732], "Their": [410, 411, 637, 644, 1255, 1390], "Then": [1243, 1712], "There": [1254, 1390, 1413, 1414, 1419, 1472, 1486, 1499, 1506, 1713], "These": [1254, 1279, 1390, 1404, 1413, 1419, 1436, 1467, 1468, 1498, 1505, 1521, 1636, 1702, 1710, 1717, 1719, 1722, 1726, 1729], "To": [1206, 1238, 1241, 1255, 1257, 1259, 1265, 1273, 1279, 1385, 1402, 1403, 1404, 1413, 1415, 1418, 1422, 1423, 1430, 1431, 1432, 1511, 1531, 1532], "Will": [2, 1450], "With": [1520, 1724], "_": [1107, 1108, 1419, 1548, 1713, 1718], "__abs__": [105, 107, 230, 231], "__add__": [105, 108, 230, 232, 1131, 1135, 1166, 1187], "__and__": [105, 109, 230, 233], "__args__": 1124, "__array__": [105, 110, 230, 1131, 1136, 1166, 1167, 1187, 1714, 1715], "__array_interface__": [105, 111, 230], "__array_priority__": [105, 112, 230], "__array_struct__": [105, 113, 230], "__array_wrap__": [105, 114, 230], "__bool__": [105, 115, 230, 234], "__build_class__": 1564, "__builtins__": 1564, "__cached__": 1564, "__call__": [459, 460, 1196, 1198, 1203, 1208, 1209, 1218, 1219], "__contains__": [1101, 1102], "__debug__": 1564, "__divmod__": [105, 117, 230, 236], "__doc__": 1564, "__eq__": [105, 118, 230, 237, 1166, 1168], "__file__": 1564, "__float__": [105, 119, 230, 238], "__floordiv__": [105, 120, 230, 239], "__format__": [105, 121, 230], "__ge__": [105, 122, 230, 240], "__getitem__": [105, 123, 230, 325, 344, 377, 427, 567, 568, 1098, 1099, 1101, 1103, 1123, 1125], "__gt__": [105, 124, 230, 241], "__hash__": [105, 125, 230, 242], "__import__": 1564, "__index__": [230, 243], "__init__": 1564, "__init_subclass__": [1122, 1131, 1138, 1166, 1187, 1225], "__int__": [105, 126, 230, 244], "__invert__": [105, 127, 230, 245], "__iter__": [18, 20], "__le__": [105, 128, 230, 246], "__loader__": 1564, "__lshift__": [105, 129, 230, 247], "__lt__": [105, 130, 230, 248], "__mod__": [105, 131, 230, 249], "__mul__": [105, 132, 230, 250], "__name__": 1564, "__ne__": [105, 133, 230, 251], "__neg__": [105, 134, 230, 252], "__next__": [18, 21], "__or__": [105, 136, 230, 254], "__origin__": 1124, "__package__": 1564, "__pos__": [105, 137, 230, 255], "__pow__": [105, 138, 230, 256], "__pybind11_internals_v4_gcc_libstdcpp_cxxabi1014__": 1564, "__pycache__": 1564, "__radd__": [105, 139, 230, 257], "__rand__": [105, 140, 230, 258], "__rdivmod__": [105, 141, 230, 259], "__reduce__": [105, 142, 230], "__repr__": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 143, 230, 260, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 381, 392, 399, 404, 410, 420, 438, 440, 443, 445, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 583, 587, 589, 590, 594, 596, 599, 601, 603, 605, 609, 615, 618, 623, 626, 630, 636, 638, 643, 645, 650, 652, 655, 660, 662, 667, 673, 678, 685, 690, 692, 695, 698, 701, 703, 706, 708, 710, 713, 715, 721, 723, 729, 735, 737, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 782, 788, 790, 795, 797, 802, 804, 810, 813, 820, 823, 830, 832, 838, 840, 845, 847, 852, 853, 855, 860, 862, 867, 869, 874, 876, 880, 882, 886, 909, 911, 914, 916, 920, 922, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1122, 1123, 1127, 1226], "__rfloordiv__": [105, 144, 230, 261], "__rlshift__": [105, 145, 230, 262], "__rmod__": [105, 146, 230, 263], "__rmul__": [105, 147, 230, 264], "__ror__": [105, 148, 230, 265], "__rpow__": [105, 149, 230, 266], "__rrshift__": [105, 150, 230, 267], "__rshift__": [105, 151, 230, 268], "__rsub__": [105, 152, 230, 269], "__rtruediv__": [105, 153, 230, 270], "__rxor__": [105, 154, 230, 271], "__sizeof__": [105, 155, 230], "__spec__": 1564, "__str__": [105, 156, 230, 272, 1107, 1109, 1122, 1131, 1139, 1166, 1170, 1187, 1189, 1227, 1547, 1549], "__sub__": [105, 157, 230, 273, 1131, 1140, 1166, 1187], "__subclasscheck__": 1128, "__subclasshook__": [1123, 1128], "__truediv__": [105, 158, 230, 274], "__xor__": [105, 159, 230, 275], "_ambka": 1718, "_axes_loc": 1344, "_description_": 1026, "_dx": 1718, "_frozen_importlib": 1564, "_frozen_importlib_extern": 1564, "_interpolation_step": 1187, "_k": [1710, 1718], "_ka": 1718, "_kb": [1713, 1718], "_raw": [1718, 1722], "_secondary_ax": [1431, 1432], "_type_": 1026, "a0": [1562, 1704], "a1": [1562, 1704], "a2": [1562, 1704], "a3": [1562, 1704], "a9b8ae19": 1727, "a_b": 1710, "a_far": [860, 861], "a_near": [860, 861], "aa": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "aagaard": 577, "ab": [105, 107, 230, 231, 1564], "abbrevi": [1419, 1441], "abc": [379, 1122, 1123, 1128, 1698], "abcmeta": 1128, "abil": [810, 813], "abl": [549, 551, 742, 746, 750, 754, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1701, 1702, 1710], "abl_states_6000": 1713, "abllogneutralwsprofil": [742, 743, 744, 745, 1702], "abllogstablewsprofil": [746, 747, 748, 749, 1702, 1715], "abllogunstablewsprofil": [750, 751, 752, 753, 1702], "abllogwsprofil": [754, 755, 756, 757, 1702, 1713, 1716], "about": [1035, 1254, 1259, 1423, 1430, 1564, 1721], "abov": [1073, 1074, 1076, 1077, 1122, 1239, 1254, 1257, 1279, 1282, 1283, 1300, 1345, 1394, 1405, 1423, 1424, 1448, 1480, 1490, 1498, 1505, 1512, 1527, 1528, 1538, 1539, 1710, 1711, 1712, 1713, 1714, 1720, 1721, 1723, 1727, 1729], "absolut": [230, 276, 695, 698, 1487, 1654, 1686, 1702, 1706, 1710, 1713, 1729], "abstract": [65, 67, 68, 308, 323, 324, 332, 333, 356, 358, 360, 369, 392, 395, 396, 399, 400, 402, 410, 413, 416, 419, 420, 425, 426, 438, 440, 441, 443, 448, 449, 450, 452, 454, 456, 465, 467, 471, 472, 473, 810, 811, 813, 815, 820, 821, 823, 825, 826, 1123, 1128, 1565, 1568, 1569, 1570, 1571, 1572, 1627, 1632, 1692, 1695, 1698, 1704, 1707, 1710, 1713], "abstractpatheffect": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1465, 1512, 1521, 1523], "acceler": 1386, "accept": [1228, 1238, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1452, 1498, 1505, 1511, 1513, 1514, 1517, 1518, 1520, 1527, 1528, 1539, 1540, 1543, 1710, 1714, 1715], "accept_nan": 385, "accept_non": 385, "access": [1123, 1126, 1351, 1366, 1419, 1564, 1700, 1713], "accomplish": 1387, "accord": [0, 10, 18, 308, 322, 485, 594, 643, 644, 754, 1115, 1120, 1121, 1257, 1259, 1390, 1713, 1718, 1723], "accordingli": [636, 637, 1257, 1385, 1423], "account": [1277, 1513, 1521, 1715], "accumul": [1385, 1386], "accur": [105, 135, 230, 253, 1196, 1199, 1218, 1220, 1625, 1627, 1628, 1710, 1713], "accuraci": [838, 845, 852, 1720], "achiev": [1122, 1240, 1248, 1255, 1290, 1413, 1436, 1441, 1724], "acorr": [1122, 1228], "acquir": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "across": [1122, 1246, 1247, 1250, 1251, 1388, 1520, 1540], "act": [1390, 1423, 1713, 1720], "action": 1711, "activ": [1122, 1327, 1418, 1429, 1439, 1467, 1712], "actual": [636, 637, 1107, 1108, 1238, 1265, 1273, 1282, 1283, 1383, 1390, 1403, 1415, 1422, 1439, 1467, 1511, 1519, 1710, 1712, 1719, 1721, 1725], "ad": [116, 188, 235, 278, 410, 411, 471, 473, 637, 644, 656, 858, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 976, 978, 982, 984, 988, 990, 994, 996, 1000, 1016, 1035, 1122, 1228, 1239, 1244, 1253, 1257, 1259, 1277, 1279, 1280, 1360, 1375, 1383, 1398, 1404, 1418, 1419, 1427, 1431, 1432, 1450, 1466, 1468, 1497, 1504, 1519, 1528, 1543, 1701, 1710, 1712, 1713, 1715, 1718, 1723, 1724, 1725, 1727, 1728, 1729], "adapt": 1419, "add": [0, 10, 18, 39, 42, 46, 52, 56, 60, 69, 71, 80, 85, 94, 308, 323, 325, 327, 332, 335, 337, 344, 346, 356, 359, 362, 364, 369, 370, 377, 379, 382, 392, 399, 401, 404, 406, 410, 419, 420, 427, 434, 436, 438, 440, 443, 448, 452, 459, 465, 471, 472, 474, 476, 479, 483, 484, 485, 486, 487, 488, 489, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 635, 636, 642, 643, 649, 650, 655, 660, 667, 673, 678, 680, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 858, 860, 867, 874, 880, 886, 909, 914, 920, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999, 1002, 1004, 1009, 1016, 1018, 1019, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1089, 1090, 1092, 1093, 1094, 1095, 1101, 1105, 1106, 1122, 1131, 1137, 1208, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1255, 1263, 1279, 1352, 1353, 1367, 1368, 1392, 1393, 1394, 1423, 1424, 1431, 1432, 1521, 1523, 1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606, 1617, 1701, 1702, 1710, 1713, 1715, 1718, 1721, 1722, 1723, 1724, 1725, 1726, 1727], "add_artist": [1122, 1229], "add_bar": [1037, 1038, 1039, 1040, 1041, 1042, 1089], "add_callback": [1122, 1230, 1411, 1428], "add_capac": [1016, 1018, 1727], "add_child_ax": [1122, 1231], "add_collect": [1122, 1232], "add_contain": [1122, 1233], "add_crit": [69, 71], "add_data_packag": [479, 1090, 1092], "add_data_package_fil": [479, 1090, 1093], "add_effici": [1016, 1019, 1727, 1728], "add_factori": [1101, 1105], "add_fil": [479, 1090, 1094, 1095], "add_from_csv": [483, 484, 1701], "add_from_df": [484, 1701, 1710], "add_from_fil": [485, 1701, 1716, 1727], "add_from_json": [486, 1701], "add_gener": [1002, 1004, 1724, 1726], "add_grid": [487, 1701, 1715, 1717, 1724, 1726, 1728], "add_imag": [1122, 1234], "add_k_factori": [1101, 1106], "add_lin": [1122, 1235], "add_model": [434, 436], "add_patch": [1122, 1236], "add_random": [488, 1701, 1710], "add_row": [489, 1701, 1714, 1719, 1721, 1723, 1725], "add_tabl": [1122, 1237, 1521], "add_to_figur": [1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606], "add_turbin": [474, 476, 483, 488, 1715, 1720, 1729], "add_var": [678, 680, 1720, 1721, 1729], "add_wak": [471, 472, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999], "addit": [4, 5, 19, 22, 23, 318, 334, 361, 403, 417, 423, 429, 430, 442, 447, 453, 458, 469, 483, 484, 488, 490, 491, 523, 524, 545, 651, 656, 707, 709, 714, 722, 730, 736, 743, 747, 751, 755, 758, 759, 920, 921, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1050, 1051, 1053, 1054, 1055, 1060, 1061, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1088, 1228, 1239, 1306, 1387, 1390, 1402, 1404, 1413, 1419, 1424, 1433, 1434, 1466, 1511, 1512, 1518, 1543, 1548, 1615, 1616, 1633, 1642, 1710, 1712, 1713, 1715, 1723, 1728, 1730], "addition": [1228, 1248, 1390, 1402, 1412, 1414, 1419, 1433, 1434, 1474, 1498, 1505, 1543], "address": [1710, 1727], "adjac": [1282, 1283, 1412, 1414, 1481], "adjust": [1122, 1196, 1202, 1218, 1221, 1240, 1248, 1253, 1257, 1259, 1290, 1385, 1390, 1394, 1435, 1436, 1441, 1449, 1512], "adopt": 1390, "advantag": 1724, "advic": 1612, "aeroelast": 577, "affair": 1711, "affect": [1240, 1241, 1412, 1423, 1526, 1710, 1713, 1721], "affects_downwind": [438, 439, 465, 466, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920], "affin": [1122, 1131, 1136, 1145, 1146, 1158, 1161, 1163, 1164, 1166, 1167, 1172, 1173, 1182, 1183, 1185, 1186, 1187, 1194, 1195, 1347], "affine2dbas": [1122, 1166], "after": [4, 5, 12, 22, 23, 336, 414, 471, 473, 483, 632, 660, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 976, 978, 982, 984, 988, 990, 994, 996, 1000, 1072, 1073, 1074, 1075, 1076, 1077, 1131, 1137, 1166, 1187, 1244, 1254, 1390, 1397, 1401, 1404, 1420, 1500, 1507, 1527, 1528, 1713, 1721], "again": [1710, 1712, 1721], "against": [1254, 1519, 1639, 1640], "agel": [802, 874, 880, 886, 1713, 1729], "agg": [1122, 1291, 1413, 1437, 1481], "agg_filt": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1512, 1521, 1523], "aggreg": 1385, "aglo": 1715, "ago": 1496, "aim": 1729, "air": [420, 516, 517, 523, 524, 707, 709, 713, 714, 721, 722, 729, 735, 736, 1088, 1649, 1676, 1702, 1706, 1710, 1717, 1719], "aiter": 1564, "aitoff": 1394, "al": [838, 845, 852, 853, 1713, 1714], "alexand": [838, 845, 852, 1714], "algo": [0, 10, 18, 36, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 67, 69, 72, 74, 76, 78, 80, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94, 96, 99, 100, 103, 308, 323, 325, 331, 332, 333, 334, 335, 338, 340, 343, 344, 346, 348, 349, 350, 351, 352, 353, 356, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 382, 383, 384, 385, 386, 388, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 412, 414, 415, 418, 420, 422, 424, 426, 427, 438, 440, 441, 443, 448, 452, 453, 454, 455, 456, 457, 459, 465, 467, 468, 470, 471, 472, 473, 490, 492, 494, 495, 497, 498, 500, 501, 503, 506, 507, 509, 510, 511, 513, 514, 516, 518, 519, 520, 522, 523, 525, 526, 527, 530, 531, 534, 535, 537, 538, 539, 540, 543, 544, 546, 547, 552, 567, 571, 574, 577, 580, 581, 584, 585, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 633, 636, 640, 643, 647, 650, 653, 654, 655, 657, 658, 659, 660, 663, 664, 665, 667, 669, 670, 671, 673, 675, 676, 677, 678, 681, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 708, 710, 711, 712, 713, 716, 717, 718, 720, 721, 724, 725, 726, 728, 729, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 746, 750, 754, 758, 762, 765, 769, 771, 772, 773, 775, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 833, 834, 835, 836, 838, 841, 842, 843, 845, 848, 849, 850, 852, 853, 856, 857, 858, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 878, 880, 883, 884, 886, 902, 906, 909, 912, 913, 914, 917, 918, 920, 923, 924, 925, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 975, 976, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1016, 1018, 1030, 1036, 1049, 1050, 1051, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1713, 1714, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "algo_dict": [552, 553, 562, 563, 564, 565, 1701], "algo_typ": [0, 10, 18, 308, 318], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 331, 333, 334, 338, 340, 343, 348, 349, 350, 351, 352, 353, 358, 359, 360, 361, 365, 367, 371, 372, 373, 374, 375, 376, 382, 383, 384, 385, 386, 388, 394, 395, 396, 398, 400, 401, 403, 407, 408, 412, 414, 415, 418, 422, 424, 426, 441, 453, 454, 455, 456, 457, 467, 468, 470, 472, 473, 492, 494, 495, 497, 500, 506, 507, 509, 510, 513, 518, 519, 520, 522, 525, 526, 527, 530, 534, 535, 537, 538, 539, 543, 546, 552, 553, 562, 563, 564, 565, 571, 584, 585, 592, 593, 598, 600, 601, 603, 606, 607, 609, 610, 612, 613, 616, 617, 620, 621, 622, 624, 625, 628, 629, 632, 633, 640, 647, 653, 654, 657, 658, 659, 663, 664, 665, 669, 670, 671, 675, 676, 677, 681, 682, 683, 687, 688, 689, 693, 694, 696, 697, 699, 700, 704, 705, 711, 712, 716, 717, 718, 720, 724, 725, 726, 728, 731, 732, 733, 734, 738, 739, 740, 741, 769, 771, 772, 773, 777, 778, 779, 780, 783, 784, 785, 786, 787, 791, 792, 793, 794, 798, 799, 800, 801, 805, 806, 807, 808, 811, 812, 815, 816, 817, 818, 821, 822, 825, 826, 827, 828, 833, 834, 835, 836, 841, 842, 843, 848, 849, 850, 856, 857, 858, 863, 864, 865, 870, 871, 872, 877, 878, 883, 884, 902, 906, 912, 913, 917, 918, 923, 924, 925, 926, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 953, 957, 958, 959, 963, 964, 965, 969, 970, 971, 975, 976, 977, 981, 982, 983, 987, 988, 989, 993, 994, 995, 999, 1000, 1001, 1018, 1030, 1049, 1050, 1062, 1063, 1065, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1128, 1413, 1423, 1692, 1698, 1702, 1703, 1710, 1713, 1714, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "alia": [18, 34, 116, 235, 1122, 1279, 1310, 1412, 1414, 1454], "alias": [1279, 1390, 1468, 1474], "align": [775, 1122, 1252, 1253, 1255, 1256, 1269, 1270, 1352, 1353, 1367, 1368, 1385, 1386, 1481, 1521, 1531, 1532, 1702], "all": [0, 2, 3, 4, 5, 10, 18, 22, 23, 39, 40, 42, 44, 46, 48, 51, 52, 54, 56, 58, 60, 62, 80, 82, 84, 85, 87, 94, 96, 102, 103, 105, 160, 230, 308, 323, 332, 333, 335, 338, 342, 343, 346, 348, 352, 355, 356, 358, 362, 365, 368, 369, 370, 373, 379, 388, 390, 392, 395, 399, 400, 404, 407, 409, 410, 414, 420, 422, 426, 438, 440, 441, 443, 448, 452, 454, 459, 465, 471, 473, 474, 478, 490, 491, 492, 494, 497, 498, 500, 501, 503, 506, 509, 513, 514, 516, 518, 519, 522, 523, 525, 529, 530, 531, 534, 538, 542, 543, 544, 546, 547, 552, 558, 567, 574, 577, 580, 581, 584, 586, 587, 589, 590, 594, 599, 601, 603, 606, 608, 609, 614, 615, 616, 618, 620, 621, 623, 624, 626, 628, 630, 632, 636, 643, 650, 651, 653, 655, 657, 658, 660, 663, 666, 667, 669, 672, 673, 675, 678, 681, 682, 684, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 718, 721, 724, 726, 729, 731, 733, 735, 738, 740, 742, 746, 750, 754, 758, 762, 765, 769, 771, 774, 775, 777, 780, 783, 788, 791, 795, 798, 802, 805, 809, 810, 813, 819, 820, 823, 829, 830, 837, 838, 844, 845, 851, 852, 853, 859, 860, 866, 867, 873, 874, 879, 880, 885, 886, 903, 908, 909, 914, 919, 920, 927, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 976, 978, 982, 984, 988, 990, 994, 996, 1000, 1007, 1009, 1016, 1035, 1036, 1043, 1047, 1049, 1051, 1052, 1054, 1055, 1056, 1058, 1060, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1084, 1086, 1122, 1131, 1155, 1166, 1187, 1196, 1208, 1213, 1217, 1228, 1239, 1243, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1269, 1270, 1277, 1279, 1280, 1282, 1283, 1284, 1292, 1344, 1385, 1386, 1387, 1388, 1390, 1401, 1402, 1404, 1411, 1412, 1413, 1414, 1418, 1419, 1421, 1423, 1430, 1433, 1434, 1436, 1438, 1439, 1441, 1446, 1447, 1470, 1471, 1500, 1507, 1513, 1514, 1517, 1520, 1521, 1525, 1526, 1527, 1528, 1529, 1530, 1536, 1540, 1543, 1561, 1564, 1616, 1637, 1692, 1698, 1700, 1701, 1702, 1704, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1722, 1724, 1725, 1726, 1728, 1730, 1731], "all_model": [0, 3, 10, 18], "all_non": [459, 462], "all_subclass": [1561, 1704], "alloc": [1254, 1467], "allow": [369, 549, 551, 1107, 1238, 1239, 1265, 1273, 1403, 1412, 1414, 1415, 1422, 1468, 1500, 1507, 1511, 1520, 1698, 1704, 1710, 1726], "almost": 1414, "along": [452, 453, 455, 636, 637, 643, 644, 769, 772, 775, 778, 780, 784, 788, 792, 795, 799, 802, 806, 1122, 1187, 1241, 1260, 1277, 1337, 1385, 1387, 1390, 1412, 1414, 1418, 1480, 1511, 1514, 1520, 1541, 1544, 1702, 1710, 1713, 1714, 1715, 1725, 1729], "alpha": [802, 803, 880, 881, 886, 901, 1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1292, 1382, 1385, 1387, 1390, 1392, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1435, 1438, 1512, 1520, 1521, 1523, 1527, 1528, 1529, 1671, 1706, 1715, 1720, 1724, 1726], "alreadi": [1123, 1131, 1155, 1166, 1187, 1259, 1386, 1420, 1468, 1509, 1510, 1527, 1528, 1529, 1530, 1725], "also": [452, 1009, 1131, 1137, 1187, 1188, 1228, 1243, 1254, 1258, 1265, 1277, 1279, 1280, 1401, 1413, 1418, 1431, 1432, 1440, 1452, 1470, 1471, 1490, 1498, 1499, 1505, 1506, 1512, 1513, 1514, 1520, 1521, 1525, 1527, 1543, 1564, 1635, 1704, 1710, 1711, 1712, 1713, 1715, 1716, 1719, 1721, 1723, 1727, 1729, 1731], "alter": 1404, "altern": [1244, 1385, 1386, 1412, 1414, 1419, 1495, 1502, 1523, 1529, 1712, 1713, 1715, 1719], "alwai": [1122, 1131, 1140, 1155, 1158, 1161, 1166, 1182, 1183, 1187, 1194, 1239, 1247, 1249, 1251, 1257, 1307, 1386, 1414, 1418, 1430, 1485, 1499, 1506, 1722, 1727], "am": [1711, 1726], "amax": 1385, "amb2var": [1690, 1706], "amb_cap": [1115, 1117, 1643, 1690, 1691, 1706, 1727], "amb_ct": [1115, 1117, 1644, 1690, 1691, 1706, 1715, 1724, 1725, 1726], "amb_p": [0, 1, 10, 18, 1115, 1117, 1643, 1645, 1660, 1690, 1691, 1706, 1715, 1717, 1721, 1724, 1725, 1726, 1727], "amb_r": [370, 373, 392, 395, 587, 589, 590, 594, 599, 601, 603, 606, 609, 615, 616], "amb_result": [370, 374, 438, 465, 468, 473, 587, 589, 590, 810, 813, 817, 820, 823, 830, 834, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 932, 937, 942, 947, 952, 958, 964, 970, 976, 982, 988, 994, 1000], "amb_rew": [0, 1, 10, 18, 1084, 1085, 1115, 1117, 1646, 1690, 1691, 1706, 1715, 1717, 1721, 1724, 1725, 1726, 1727], "amb_rews2": [1115, 1117, 1647, 1690, 1691, 1706, 1715, 1724, 1725, 1726], "amb_rews3": [1115, 1117, 1648, 1690, 1691, 1706, 1715, 1724, 1725, 1726], "amb_rho": [0, 1, 10, 18, 1115, 1117, 1649, 1690, 1691, 1706, 1715, 1724, 1725, 1726], "amb_t": [1115, 1117, 1650, 1690, 1691, 1706], "amb_target_r": [104, 1697], "amb_target_result": [104, 1697], "amb_ti": [0, 1, 10, 18, 460, 1115, 1117, 1651, 1690, 1691, 1706, 1713, 1715, 1718, 1724, 1725, 1726], "amb_w": [1115, 1117, 1653, 1690, 1691, 1706, 1716, 1719, 1723, 1725, 1727, 1728], "amb_wd": [0, 1, 10, 18, 674, 1056, 1058, 1060, 1084, 1115, 1117, 1652, 1690, 1691, 1706, 1715, 1724, 1725, 1726], "amb_yaw": [1115, 1117, 1654, 1690, 1691, 1706, 1715, 1724, 1726], "amb_yawm": [1655, 1690, 1691, 1706], "amb_yld": [1115, 1117, 1656, 1690, 1691, 1706, 1727], "ambient": [0, 2, 4, 5, 18, 19, 22, 23, 56, 60, 104, 373, 374, 395, 410, 411, 412, 414, 420, 459, 460, 464, 468, 473, 490, 603, 606, 616, 626, 627, 630, 632, 636, 637, 643, 644, 817, 834, 860, 861, 928, 929, 932, 933, 934, 937, 938, 939, 942, 943, 944, 947, 948, 949, 952, 958, 960, 961, 964, 970, 972, 973, 976, 982, 988, 990, 991, 994, 1000, 1016, 1018, 1024, 1030, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1690, 1691, 1694, 1697, 1701, 1702, 1706, 1710, 1711, 1713, 1714, 1715, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1731], "ambientroseplotoutput": 1710, "ambientwindroseoutput": 1710, "ambigu": 1419, "ambka": 1713, "among": 1715, "amount": [1386, 1511], "ampl_far": [886, 887], "ampl_near": [886, 888], "amplitud": [820, 821, 874, 877, 914, 917, 920, 923, 1337, 1403, 1480, 1511], "amsi": [821, 877, 917, 923], "amsterdam": 1564, "an": [230, 243, 385, 434, 636, 637, 742, 743, 746, 747, 750, 751, 754, 755, 769, 867, 1002, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1070, 1073, 1076, 1089, 1107, 1111, 1122, 1123, 1126, 1131, 1142, 1149, 1150, 1157, 1158, 1161, 1166, 1176, 1180, 1181, 1182, 1183, 1187, 1192, 1194, 1202, 1203, 1208, 1209, 1221, 1228, 1229, 1231, 1234, 1238, 1239, 1241, 1244, 1246, 1249, 1250, 1253, 1254, 1255, 1257, 1258, 1265, 1267, 1271, 1272, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1306, 1327, 1335, 1336, 1345, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1397, 1399, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1439, 1440, 1450, 1456, 1466, 1471, 1472, 1480, 1485, 1486, 1487, 1496, 1499, 1500, 1503, 1506, 1507, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1539, 1540, 1543, 1562, 1693, 1698, 1700, 1701, 1703, 1710, 1713, 1715, 1717, 1719, 1722, 1723, 1724, 1727, 1729], "analog": [230, 276, 1254], "analys": [346, 1698], "analysi": [1265, 1273, 1422, 1710, 1711], "analyt": [874, 1713], "analyz": [346, 349, 580, 1564], "ancestor": [1131, 1149, 1155, 1166, 1187], "anchor": [1122, 1131, 1159, 1166, 1187, 1248, 1254, 1293, 1423, 1435, 1439, 1441, 1523], "anext": 1564, "ang": 577, "angl": [868, 902, 1122, 1131, 1159, 1166, 1187, 1238, 1255, 1392, 1403, 1415, 1418, 1423, 1424, 1469, 1472, 1486, 1487, 1511, 1654, 1655, 1686, 1687, 1706, 1713, 1717, 1729], "angle_spectrum": [1122, 1238, 1403, 1415, 1511], "angular": [1472, 1473], "ani": [105, 116, 161, 230, 235, 710, 1005, 1122, 1123, 1126, 1131, 1140, 1149, 1156, 1166, 1169, 1187, 1196, 1202, 1205, 1218, 1221, 1230, 1239, 1244, 1253, 1254, 1267, 1269, 1270, 1274, 1277, 1279, 1280, 1382, 1383, 1384, 1387, 1390, 1404, 1419, 1423, 1424, 1430, 1512, 1523, 1525, 1563, 1564, 1614, 1624, 1626, 1632, 1638, 1639, 1640, 1641, 1702, 1710, 1712, 1713, 1717, 1718, 1724, 1726, 1727, 1729], "anigen": 1724, "anim": [1002, 1003, 1004, 1005, 1006, 1016, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1065, 1089, 1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1294, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1440, 1512, 1521, 1523, 1703, 1710, 1724, 1726], "anno_d": [1009, 1724, 1726], "anno_delx": [1009, 1724, 1726], "annot": [1007, 1009, 1122, 1239, 1241, 1253, 1719, 1724, 1726, 1727, 1728], "annotation_clip": 1239, "annual": [1016, 1030, 1719, 1727, 1728], "anom": 1726, "anoth": [1239, 1414, 1509, 1510, 1520, 1637, 1720, 1724, 1728, 1729], "anti": [1390, 1424], "antialias": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512, 1523, 1527, 1528], "anticlockwis": 1483, "antigrain": 1390, "anymor": 1140, "anyth": [1383, 1390, 1430], "api": [1392, 1393, 1431, 1432, 1464, 1710, 1711, 1713, 1715, 1727], "apigen": 1710, "appear": [434, 435, 867, 1122, 1257, 1419, 1490, 1495, 1499, 1502, 1506, 1525, 1710, 1713, 1721, 1727, 1729], "append": [335, 337, 362, 364, 404, 406, 1724], "appli": [2, 42, 85, 472, 473, 858, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1023, 1122, 1131, 1157, 1158, 1161, 1162, 1163, 1164, 1166, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1194, 1195, 1228, 1238, 1249, 1254, 1255, 1258, 1265, 1273, 1280, 1347, 1382, 1385, 1390, 1403, 1414, 1415, 1418, 1419, 1422, 1436, 1439, 1441, 1442, 1485, 1498, 1505, 1511, 1513, 1525, 1536, 1543, 1669, 1694, 1695, 1702, 1706, 1710, 1713, 1715, 1729], "applic": [369, 1519, 1698, 1710, 1711, 1713, 1724], "apply_aspect": [1122, 1240], "apply_theta_transform": [1137, 1188], "apply_ufunc": [39, 42, 46, 52, 56, 60, 80, 85, 94, 325, 326, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735], "approach": [1440, 1713, 1715, 1720], "appropri": [1202, 1221, 1255, 1412, 1414], "approxim": [1257, 1385, 1710, 1720], "ar": [0, 39, 41, 42, 45, 46, 50, 52, 55, 56, 59, 60, 64, 80, 83, 85, 88, 89, 94, 100, 308, 328, 332, 335, 340, 346, 353, 356, 360, 362, 367, 369, 399, 402, 404, 408, 410, 411, 413, 414, 418, 420, 424, 440, 443, 452, 471, 483, 488, 490, 495, 498, 501, 503, 510, 514, 516, 520, 523, 527, 531, 539, 544, 547, 580, 581, 585, 594, 618, 622, 623, 625, 626, 629, 630, 631, 632, 636, 637, 639, 643, 644, 646, 650, 651, 654, 655, 659, 660, 665, 667, 668, 671, 673, 674, 677, 678, 683, 685, 686, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 720, 721, 728, 729, 734, 735, 741, 830, 838, 845, 852, 858, 948, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1014, 1032, 1033, 1034, 1048, 1054, 1055, 1107, 1108, 1122, 1159, 1166, 1178, 1187, 1196, 1218, 1224, 1228, 1230, 1239, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1259, 1260, 1263, 1267, 1273, 1277, 1279, 1280, 1282, 1283, 1286, 1300, 1308, 1312, 1326, 1344, 1345, 1365, 1380, 1382, 1384, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1398, 1401, 1402, 1404, 1405, 1412, 1413, 1414, 1418, 1419, 1420, 1422, 1423, 1424, 1426, 1430, 1433, 1434, 1435, 1436, 1439, 1441, 1446, 1447, 1448, 1449, 1456, 1467, 1468, 1470, 1472, 1486, 1487, 1490, 1496, 1498, 1499, 1500, 1503, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1538, 1540, 1543, 1548, 1565, 1571, 1572, 1574, 1581, 1582, 1588, 1589, 1595, 1596, 1603, 1604, 1611, 1636, 1696, 1701, 1702, 1704, 1707, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729, 1732], "arbitrari": [1246, 1250, 1277, 1306, 1413, 1423, 1500, 1507, 1731], "arc": 1187, "area": [594, 636, 637, 1122, 1239, 1282, 1283, 1386, 1414, 1418, 1423, 1439, 1513, 1514, 1528, 1538, 1539, 1566, 1572, 1574, 1576, 1582, 1584, 1591, 1598, 1606, 1616, 1636, 1637, 1704, 1710, 1714, 1722], "areageometri": [474, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1582, 1589, 1596, 1604, 1605, 1634, 1704], "areaintersect": [1572, 1573, 1704], "areaunion": [1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1704], "arg": [0, 10, 11, 18, 19, 22, 94, 308, 318, 320, 335, 344, 345, 377, 378, 410, 417, 420, 423, 427, 428, 438, 440, 442, 443, 447, 452, 458, 459, 460, 465, 469, 484, 485, 490, 498, 499, 501, 502, 503, 514, 516, 523, 531, 544, 545, 547, 552, 557, 567, 572, 601, 602, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 743, 746, 747, 750, 751, 754, 755, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1007, 1016, 1026, 1036, 1043, 1046, 1049, 1051, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1098, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1122, 1131, 1136, 1166, 1167, 1187, 1224, 1248, 1252, 1254, 1256, 1269, 1270, 1281, 1289, 1399, 1402, 1412, 1413, 1414, 1419, 1423, 1433, 1434, 1468, 1478, 1479, 1487, 1505, 1513, 1517, 1518, 1527, 1528, 1529, 1530, 1547, 1548, 1618, 1623, 1624, 1625, 1626, 1627, 1632, 1634, 1701, 1704, 1715], "argmax": [105, 162, 230], "argmin": [105, 163, 230], "argsort": [105, 164, 230], "argument": [11, 12, 19, 36, 320, 334, 345, 361, 378, 403, 428, 460, 572, 651, 743, 747, 751, 755, 1005, 1009, 1016, 1035, 1051, 1060, 1064, 1080, 1088, 1100, 1107, 1108, 1130, 1178, 1238, 1243, 1246, 1249, 1250, 1253, 1254, 1255, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1387, 1392, 1393, 1394, 1399, 1401, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1480, 1490, 1496, 1498, 1499, 1503, 1505, 1506, 1511, 1512, 1513, 1517, 1518, 1523, 1525, 1527, 1528, 1529, 1548, 1618, 1619, 1624, 1626, 1632, 1634, 1710, 1713, 1714, 1715, 1716, 1721, 1722, 1727, 1728], "arithmet": 1257, "arithmeticerror": 1564, "around": [105, 116, 230, 235, 1202, 1221, 1255, 1257, 1402, 1433, 1434, 1487, 1513, 1518, 1523, 1710, 1714, 1715], "arrai": [18, 38, 40, 44, 48, 54, 58, 62, 82, 87, 96, 105, 106, 110, 111, 112, 113, 114, 121, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 182, 185, 186, 189, 192, 193, 194, 196, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 325, 333, 338, 348, 358, 365, 370, 376, 400, 407, 433, 434, 435, 438, 441, 454, 460, 465, 470, 488, 492, 506, 518, 525, 534, 584, 587, 589, 590, 620, 624, 628, 650, 651, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 771, 777, 783, 791, 798, 805, 810, 813, 820, 823, 830, 836, 838, 843, 845, 850, 852, 860, 865, 867, 872, 874, 880, 909, 914, 920, 926, 1035, 1122, 1131, 1136, 1157, 1158, 1159, 1161, 1166, 1167, 1181, 1182, 1183, 1187, 1194, 1228, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1286, 1365, 1380, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1403, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1500, 1507, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1527, 1528, 1529, 1534, 1538, 1539, 1540, 1543, 1562, 1563, 1616, 1638, 1639, 1640, 1641, 1698, 1710, 1713, 1715, 1717, 1719, 1720, 1724, 1726, 1729], "arrang": [1280, 1386], "array_lik": [98, 319, 325, 326, 334, 339, 421, 434, 435, 487, 493, 508, 517, 536, 549, 551], "arriv": 1280, "arrow": [1122, 1239, 1241, 1254, 1279, 1423, 1424, 1520], "arrowprop": [1239, 1241], "arrows": 1520, "arrowstyl": [1239, 1241, 1520], "articl": [838, 845, 852, 914, 920, 1708], "artifact": [1390, 1412, 1430], "artifici": [1412, 1724], "artist": [1002, 1004, 1006, 1031, 1122, 1123, 1126, 1228, 1229, 1230, 1238, 1239, 1242, 1244, 1245, 1246, 1249, 1250, 1257, 1259, 1265, 1267, 1271, 1272, 1273, 1275, 1276, 1277, 1279, 1284, 1286, 1294, 1300, 1302, 1304, 1306, 1308, 1311, 1317, 1318, 1322, 1326, 1328, 1329, 1337, 1344, 1346, 1381, 1382, 1383, 1386, 1390, 1393, 1397, 1403, 1404, 1408, 1415, 1416, 1417, 1419, 1420, 1421, 1422, 1426, 1427, 1440, 1448, 1450, 1451, 1452, 1455, 1458, 1459, 1462, 1466, 1468, 1470, 1471, 1491, 1492, 1493, 1508, 1512, 1513, 1515, 1519, 1520, 1531, 1532, 1533, 1536, 1543, 1703, 1710], "artistanim": 1005, "artistlist": [1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130], "arxiv": 984, "as_integer_ratio": [105, 165], "ascend": [1527, 1528], "ascii": 1564, "asinhscal": [1498, 1505], "ask": 1725, "aspect": [1122, 1240, 1241, 1290, 1293, 1295, 1301, 1307, 1390, 1405, 1418, 1429, 1435, 1436, 1439, 1441, 1449, 1467, 1512], "assencio": 1636, "assertionerror": 1564, "assign": [1385, 1419, 1513, 1519, 1527, 1528], "associ": [325, 1122, 1131, 1137, 1187, 1188, 1206, 1230, 1254, 1257, 1259, 1286, 1315, 1339, 1386, 1390, 1482, 1698, 1713, 1717, 1722], "assum": [328, 618, 619, 1257, 1259, 1382, 1513, 1518, 1529, 1636, 1726], "assumpt": [1404, 1719], "astyp": [105, 166, 230], "asymptot": 1257, "atmospher": [1701, 1702, 1711, 1716], "attach": [1122, 1239, 1255, 1279, 1385], "attribut": [105, 106, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 562, 1287, 1288, 1344, 1351, 1366, 1385, 1466, 1467, 1519, 1520, 1701, 1716, 1719], "attributeerror": [1526, 1564], "author": [1708, 1716], "auto": [551, 1122, 1228, 1248, 1295, 1386, 1390, 1412, 1414, 1419, 1423, 1435, 1441, 1456, 1474, 1481, 1496, 1503, 1512, 1543, 1642], "autocorrel": [1122, 1228], "autodateformatt": 1420, "autodateloc": 1420, "autograd": 1710, "autolim": [1122, 1232, 1427], "autolimit_mod": 1244, "autom": 1710, "automat": [352, 388, 410, 411, 412, 422, 494, 500, 509, 519, 538, 546, 621, 637, 644, 658, 682, 718, 726, 733, 740, 1009, 1030, 1072, 1073, 1074, 1075, 1076, 1077, 1187, 1206, 1240, 1244, 1248, 1253, 1257, 1259, 1386, 1392, 1393, 1401, 1402, 1433, 1434, 1490, 1527, 1528, 1529, 1547, 1704, 1710, 1713, 1727], "autopct": [1122, 1418], "autorang": 1257, "autosc": [1122, 1202, 1221, 1229, 1243, 1244, 1248, 1296, 1297, 1298, 1360, 1375, 1386, 1401, 1404, 1423, 1442, 1443, 1444, 1494, 1496, 1497, 1501, 1503, 1504, 1519, 1536], "autoscal": [1122, 1243, 1244, 1531, 1532, 1536], "autoscale_on": 1435, "autoscale_view": [1122, 1243, 1244, 1401, 1404, 1419, 1442, 1443, 1444, 1536], "autoscalex_on": 1435, "autoscaley_on": 1435, "autotext": 1418, "avail": [1259, 1301, 1345, 1385, 1387, 1390, 1412, 1413, 1414, 1419, 1430, 1439, 1490, 1512, 1527, 1528, 1538, 1539, 1702, 1707, 1709, 1710, 1712, 1713, 1716, 1722, 1727], "averag": [603, 604, 1273, 1385, 1422, 1423, 1702, 1710, 1713, 1719, 1722], "avoid": [443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735, 886, 1140, 1196, 1202, 1218, 1221, 1279, 1436, 1490, 1707, 1715, 1729], "awai": 1254, "await": 1710, "awesom": 1711, "ax": [1009, 1016, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1062, 1064, 1078, 1080, 1088, 1089, 1122, 1123, 1126, 1142, 1166, 1187, 1196, 1199, 1202, 1208, 1210, 1221, 1224, 1228, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1259, 1260, 1261, 1262, 1264, 1268, 1269, 1270, 1271, 1272, 1277, 1279, 1281, 1289, 1290, 1293, 1295, 1301, 1309, 1312, 1313, 1316, 1320, 1321, 1323, 1327, 1335, 1336, 1344, 1345, 1350, 1351, 1358, 1360, 1366, 1373, 1375, 1383, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1399, 1401, 1402, 1404, 1405, 1406, 1407, 1412, 1413, 1414, 1418, 1419, 1420, 1423, 1424, 1425, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1449, 1450, 1451, 1453, 1456, 1457, 1463, 1467, 1468, 1474, 1490, 1495, 1499, 1500, 1502, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1518, 1520, 1521, 1523, 1525, 1526, 1529, 1530, 1531, 1532, 1534, 1539, 1540, 1543, 1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606, 1704, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728], "axes_class": 1394, "axes_loc": [1122, 1299, 1435], "axesbas": [1122, 1231], "axesimag": [1122, 1234, 1306, 1316, 1390, 1405, 1413, 1511, 1512], "axhlin": [1122, 1228, 1246, 1249, 1388, 1543], "axhspan": [1122, 1246, 1247, 1251], "axi": [775, 1009, 1037, 1038, 1039, 1040, 1041, 1042, 1059, 1060, 1073, 1074, 1076, 1077, 1078, 1080, 1088, 1089, 1122, 1131, 1137, 1159, 1187, 1188, 1196, 1200, 1204, 1206, 1208, 1216, 1218, 1222, 1243, 1244, 1246, 1247, 1248, 1250, 1251, 1253, 1255, 1277, 1279, 1296, 1300, 1344, 1350, 1352, 1353, 1354, 1355, 1358, 1360, 1365, 1367, 1368, 1369, 1370, 1373, 1375, 1380, 1382, 1384, 1385, 1386, 1387, 1390, 1393, 1395, 1396, 1401, 1402, 1404, 1418, 1420, 1423, 1424, 1425, 1431, 1432, 1433, 1434, 1442, 1446, 1447, 1448, 1472, 1474, 1486, 1487, 1494, 1495, 1496, 1498, 1500, 1501, 1502, 1503, 1505, 1507, 1509, 1510, 1511, 1514, 1523, 1525, 1526, 1527, 1528, 1531, 1532, 1538, 1539, 1541, 1542, 1544, 1545, 1566, 1576, 1584, 1591, 1598, 1606, 1638, 1639, 1640, 1641, 1702, 1703, 1704, 1713, 1725, 1729], "axial": [323, 574, 594, 1698, 1702, 1710, 1713, 1714], "axial_induct": [574, 575, 576, 577, 578, 579, 1718], "axialinductionmodel": [323, 324, 567, 574, 577, 660, 661, 803, 823, 824, 830, 831, 838, 839, 845, 846, 853, 854, 861, 874, 875, 880, 881, 886, 901, 910, 914, 915, 920, 921, 1698, 1702, 1710], "axin1": 1394, "axin2": 1394, "axis_d": 1420, "axisartist_us": 1394, "axisbelow": 1435, "axisymmetr": 1713, "axisymmetricwakemodel": [810, 811, 812, 820, 823, 1707, 1713], "axiwak": [1713, 1718, 1720], "axiwake4": 1720, "axiwake6": [1720, 1724], "axiwake9": 1720, "axlin": [1122, 1246, 1249, 1250], "axvlin": [1122, 1249, 1250, 1540], "axvspan": [1122, 1247, 1250, 1251], "azimuth": 1260, "b": [719, 727, 830, 1107, 1108, 1122, 1135, 1140, 1166, 1180, 1228, 1257, 1281, 1390, 1419, 1440, 1442, 1443, 1444, 1448, 1451, 1457, 1463, 1464, 1493, 1543, 1548, 1710, 1711, 1714], "back": [1122, 1131, 1203, 1241, 1287, 1288, 1423, 1527, 1710, 1717], "backcompat": 1165, "backend": [1122, 1292, 1390, 1413, 1438, 1480, 1481], "backend_bas": [1267, 1275, 1306], "background": [1521, 1523, 1710, 1713, 1717, 1722], "backgroundcolor": 1523, "backward": [1279, 1520, 1726], "bad": 1430, "bandwidth": 1539, "bar": [1037, 1038, 1039, 1040, 1041, 1042, 1060, 1089, 1122, 1252, 1253, 1255, 1256, 1279, 1306, 1385, 1386, 1618, 1619, 1728], "bar_label": [1122, 1253], "bar_label_demo": 1253, "barb": [1122, 1254], "barb_incr": 1254, "barbcolor": 1254, "barcontain": [1253, 1255, 1386], "barg": 1009, "barh": [1122, 1253, 1255, 1386], "barlinecol": 1279, "barsabov": 1279, "barstack": 1386, "bartlett": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "base": [0, 10, 12, 18, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 65, 80, 82, 85, 87, 89, 91, 92, 93, 94, 96, 105, 167, 230, 308, 320, 323, 332, 333, 335, 336, 338, 345, 346, 348, 349, 356, 358, 362, 365, 369, 370, 378, 379, 389, 392, 399, 400, 404, 407, 410, 420, 428, 438, 440, 441, 443, 448, 452, 454, 459, 465, 471, 483, 487, 489, 490, 492, 498, 499, 501, 502, 503, 506, 514, 516, 518, 523, 525, 531, 534, 544, 547, 552, 557, 567, 574, 577, 580, 581, 584, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 620, 623, 624, 626, 628, 630, 636, 643, 650, 653, 655, 657, 660, 663, 667, 669, 673, 675, 678, 681, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 721, 724, 729, 731, 735, 738, 742, 746, 750, 754, 758, 762, 765, 769, 771, 775, 777, 780, 783, 788, 791, 795, 798, 802, 805, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 868, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1043, 1050, 1053, 1065, 1068, 1069, 1071, 1090, 1104, 1107, 1108, 1111, 1122, 1123, 1187, 1196, 1199, 1218, 1220, 1224, 1239, 1241, 1254, 1255, 1257, 1259, 1385, 1386, 1393, 1402, 1405, 1423, 1426, 1428, 1433, 1434, 1470, 1471, 1527, 1528, 1547, 1548, 1552, 1557, 1560, 1561, 1565, 1604, 1627, 1692, 1695, 1696, 1698, 1702, 1703, 1704, 1705, 1707, 1710, 1712, 1713, 1714, 1718, 1719, 1722, 1723, 1724, 1726, 1728, 1729], "base_class": 567, "base_fram": [769, 770, 802, 803], "baseband": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "baseexcept": 1564, "baseexceptiongroup": 1564, "basefmt": [1122, 1517], "baselin": [1122, 1255, 1352, 1353, 1367, 1368, 1490, 1499, 1506, 1513, 1514, 1517, 1523], "basic": [42, 434, 481, 482, 580, 594, 1419, 1694, 1699, 1700, 1702, 1719, 1724], "basic_ctrl": [2, 1715, 1718, 1724, 1726], "basic_ctrl_postr": [1715, 1724, 1726], "basic_ctrl_pr": [1715, 1724, 1726], "basicfarmcontrol": [580, 1702, 1715, 1718, 1724, 1726], "bastankhah": [802, 874, 880, 886, 1702, 1707, 1710, 1713, 1729], "bastankhah025": 1710, "bastankhah025_": 1718, "bastankhah025_linear_lim_k004": [1715, 1724], "bastankhah025b_": 1718, "bastankhah2014": [874, 875, 876, 877, 878, 879, 1707, 1710, 1715, 1718, 1724, 1726], "bastankhah2014_": [1713, 1718], "bastankhah2014_linear": [1713, 1728], "bastankhah2014_linear_k002": [1721, 1723], "bastankhah2014_linear_k004": [1720, 1726], "bastankhah2014_linear_ka02": 1719, "bastankhah2014_linear_ka02_kb0012": 1713, "bastankhah2014_quadratic_ka02": 1727, "bastankhah2014b_": 1718, "bastankhah2016": [880, 881, 882, 883, 884, 885, 1707, 1710, 1715, 1718], "bastankhah2016_": [1713, 1718], "bastankhah2016_linear": 1729, "bastankhah2016_linear_lim_ambka04": 1713, "bastankhah2016_linear_lim_k004": 1715, "bastankhah2016b_": 1718, "bastankhah2016model": [802, 880, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 1707], "bastankhah_linear": 1728, "bastankhah_quadrat": 1727, "bastankhahwak": 1710, "bbox": [1122, 1131, 1160, 1166, 1187, 1239, 1240, 1327, 1344, 1435, 1439, 1445, 1450, 1467, 1521, 1523, 1534], "bbox_extra_artist": 1344, "bbox_inch": [1122, 1317, 1459], "bboxbas": [1166, 1169, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1344, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1450, 1512, 1521], "becaus": [1217, 1253, 1385, 1390, 1401, 1414, 1430, 1499, 1506, 1527, 1528, 1529, 1714], "becom": 1731, "been": [387, 1122, 1131, 1143, 1166, 1187, 1229, 1244, 1254, 1383, 1386, 1390, 1397, 1423, 1429, 1693, 1695, 1710, 1711, 1724, 1730], "befor": [356, 357, 483, 679, 1072, 1073, 1074, 1075, 1076, 1077, 1187, 1188, 1203, 1217, 1240, 1265, 1273, 1277, 1279, 1385, 1387, 1390, 1403, 1404, 1412, 1413, 1414, 1420, 1422, 1430, 1496, 1497, 1499, 1504, 1506, 1511, 1525, 1527, 1528, 1714, 1715, 1724, 1730], "began": [1162, 1184], "begin": [1107, 1112, 1277, 1388, 1513, 1540], "behav": [1244, 1474], "behavior": [1122, 1243, 1249, 1254, 1257, 1326, 1401, 1423, 1466, 1481], "behaviour": [1207, 1223, 1456, 1715, 1726], "behind": [1399, 1713, 1714, 1720], "being": [39, 41, 42, 45, 46, 50, 52, 55, 56, 59, 60, 64, 80, 83, 85, 88, 94, 100, 335, 340, 346, 353, 356, 360, 362, 367, 369, 399, 402, 404, 408, 410, 418, 420, 424, 440, 443, 490, 495, 498, 501, 503, 510, 514, 516, 520, 523, 527, 531, 539, 544, 547, 580, 581, 585, 618, 622, 623, 625, 626, 629, 630, 636, 643, 650, 654, 655, 659, 660, 665, 667, 671, 673, 677, 678, 683, 685, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 720, 721, 728, 729, 734, 735, 741, 1239, 1241, 1246, 1250, 1282, 1283, 1308, 1431, 1432, 1509, 1510, 1710, 1714, 1718], "belong": [1122, 1311, 1455], "below": [660, 1073, 1074, 1076, 1077, 1122, 1140, 1239, 1252, 1254, 1256, 1257, 1269, 1270, 1279, 1300, 1312, 1328, 1392, 1394, 1404, 1412, 1414, 1419, 1423, 1424, 1448, 1456, 1470, 1523, 1527, 1528, 1538, 1539, 1710, 1712, 1714], "bend": [802, 1702, 1710, 1713, 1729], "bendat": [1265, 1273, 1422], "beneath": 1418, "benefit": 1724, "beopen": 1564, "bernhard": 1708, "bessel": 1390, "best": [1255, 1418, 1717, 1723], "beta": [802, 803, 880, 881, 886, 901, 1672, 1706, 1710], "between": [488, 643, 719, 727, 1122, 1159, 1238, 1239, 1246, 1250, 1252, 1254, 1256, 1257, 1259, 1265, 1269, 1270, 1273, 1280, 1281, 1282, 1283, 1352, 1353, 1367, 1368, 1385, 1386, 1390, 1393, 1399, 1403, 1412, 1413, 1414, 1415, 1418, 1422, 1424, 1430, 1481, 1511, 1514, 1518, 1525, 1527, 1528, 1543, 1614, 1636, 1637, 1664, 1702, 1706, 1715, 1717, 1719, 1720, 1724], "betz": [661, 823, 824, 861, 868, 909, 910, 1710, 1718], "betzaxialinduct": [574, 575, 576, 1702, 1710, 1718], "bevel": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "bewar": 1722, "bewteen": [85, 86], "beyond": [881, 1257, 1259], "bi": 1387, "bibtex": 1708, "bicub": 1390, "big": 1279, "bilinear": 1390, "bin": [1058, 1060, 1061, 1122, 1252, 1256, 1269, 1270, 1277, 1385, 1386, 1387, 1511, 1564, 1704, 1710, 1712, 1716, 1727, 1728], "binnd": 1716, "bit": [230, 276], "bit_count": [230, 276], "bitmap": [1122, 1471], "black": [1252, 1255, 1256, 1258, 1269, 1270, 1419, 1481, 1523, 1710], "blackman": [1238, 1265, 1273, 1390, 1403, 1415, 1422, 1511], "blade": [577, 643, 1702], "blend": [1122, 1142, 1280, 1292, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1438, 1527, 1528], "blh_mirror_h": [1713, 1718], "blh_mirror_h500": 1715, "blit": 1440, "blob": 1562, "block": [1265, 1273, 1422, 1511], "blockag": [830, 838, 845, 852, 853, 1707, 1709, 1710, 1711, 1713], "blockage_comparison": 1710, "blockingioerror": 1564, "blow": [1252, 1256, 1269, 1270], "blowto": [1252, 1256, 1269, 1270], "blue": [1258, 1281, 1419, 1468], "bmbf": 1711, "bmodel": 1715, "bmwk": 1711, "bname": 1715, "bo": 1419, "bodi": [830, 1257, 1259, 1538, 1539, 1707, 1710, 1714, 1715], "bold": 1523, "book": [2, 308, 309, 434, 435, 480, 485, 813, 814, 824, 1084, 1086, 1087, 1088, 1090, 1091, 1523, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1723, 1725, 1726, 1727, 1731], "bool": [3, 4, 5, 6, 12, 18, 19, 22, 23, 31, 36, 67, 72, 76, 99, 105, 188, 230, 278, 312, 321, 328, 331, 348, 356, 357, 384, 385, 386, 387, 393, 412, 414, 436, 437, 439, 441, 446, 453, 457, 466, 472, 483, 486, 490, 491, 545, 549, 551, 597, 611, 626, 627, 632, 636, 637, 643, 644, 653, 657, 663, 669, 675, 679, 681, 687, 693, 696, 699, 704, 711, 716, 719, 724, 727, 731, 738, 742, 743, 746, 747, 750, 751, 754, 755, 786, 808, 811, 812, 815, 818, 821, 822, 825, 827, 828, 835, 838, 839, 842, 845, 846, 849, 853, 854, 857, 860, 861, 863, 870, 877, 878, 883, 884, 905, 906, 912, 917, 918, 920, 921, 923, 925, 931, 936, 941, 946, 948, 949, 951, 957, 960, 961, 963, 969, 972, 973, 975, 981, 987, 990, 991, 993, 999, 1007, 1008, 1009, 1018, 1024, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1051, 1054, 1055, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1096, 1101, 1104, 1110, 1131, 1137, 1159, 1166, 1178, 1187, 1188, 1228, 1238, 1239, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1267, 1269, 1270, 1273, 1277, 1279, 1282, 1283, 1284, 1300, 1327, 1344, 1363, 1365, 1378, 1380, 1382, 1385, 1386, 1387, 1390, 1392, 1394, 1398, 1401, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1426, 1430, 1435, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1448, 1451, 1456, 1457, 1459, 1462, 1463, 1466, 1471, 1481, 1493, 1496, 1499, 1500, 1503, 1506, 1507, 1511, 1512, 1514, 1521, 1523, 1525, 1526, 1527, 1528, 1534, 1538, 1539, 1543, 1564, 1566, 1570, 1576, 1580, 1584, 1587, 1591, 1594, 1598, 1602, 1606, 1610, 1616, 1617, 1618, 1619, 1631, 1634, 1715, 1724, 1726], "boolean": [434, 435, 1122, 1317, 1399, 1466, 1520], "boost": [660, 661, 1086, 1665, 1703, 1706, 1710, 1713, 1721, 1723], "bootstrap": 1257, "border": [1399, 1418, 1511], "borderaxespad": 1399, "borderpad": 1399, "both": [618, 619, 820, 821, 874, 877, 914, 917, 920, 923, 1122, 1165, 1239, 1243, 1253, 1259, 1260, 1282, 1283, 1363, 1378, 1382, 1385, 1401, 1402, 1404, 1414, 1419, 1431, 1432, 1436, 1467, 1481, 1496, 1503, 1512, 1518, 1520, 1525, 1526, 1527, 1528, 1531, 1532, 1538, 1539, 1710, 1712, 1713, 1714, 1715, 1721, 1727, 1728], "bottom": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1352, 1353, 1367, 1368, 1373, 1382, 1385, 1386, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1431, 1432, 1435, 1437, 1439, 1441, 1467, 1474, 1502, 1503, 1512, 1513, 1514, 1517, 1519, 1521, 1523, 1525, 1538, 1539, 1542, 1545], "bound": [453, 490, 1122, 1131, 1160, 1166, 1169, 1187, 1239, 1255, 1308, 1344, 1350, 1355, 1370, 1385, 1390, 1392, 1394, 1401, 1494, 1495, 1501, 1502, 1514, 1521, 1534, 1710], "boundari": [474, 475, 1009, 1412, 1413, 1414, 1430, 1521, 1527, 1528, 1565, 1566, 1570, 1572, 1574, 1576, 1580, 1582, 1584, 1587, 1589, 1591, 1594, 1596, 1598, 1602, 1604, 1606, 1610, 1715, 1716, 1718], "bounds_error": [490, 1717], "box": [1122, 1131, 1160, 1166, 1187, 1239, 1240, 1248, 1252, 1256, 1257, 1259, 1261, 1290, 1301, 1308, 1344, 1350, 1390, 1392, 1393, 1435, 1436, 1441, 1449, 1452, 1495, 1502, 1521, 1523, 1525, 1539], "box_aspect": 1435, "box_plot": [1257, 1259], "boxplot": [1122, 1257, 1259, 1539], "boxplot_demo": [1257, 1259], "boxprop": [1257, 1259], "bracket": [1286, 1710], "branch": [1131, 1142, 1166, 1187, 1711, 1712], "break": 1521, "breakpoint": 1564, "bremen": [1716, 1723], "broadcast": [1637, 1639, 1640], "broken": 1423, "broken_barh": [1122, 1258], "broken_streamlin": 1520, "brokenpipeerror": 1564, "browser": 1710, "brtl": 1521, "bubbl": 1419, "buffererror": 1564, "bug": 1710, "build": [1712, 1713], "built": 1564, "builtin": [230, 276, 1178, 1564], "builtinimport": 1564, "bump": 1519, "bundari": [1570, 1580, 1587, 1594, 1602, 1610], "busi": 1280, "butt": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "button": [1122, 1260, 1261, 1274, 1278, 1324, 1464, 1516], "bw_method": 1539, "bxp": [1122, 1257, 1259], "bxpstat": [1122, 1259], "byte": [105, 155, 191, 216, 230, 1564], "bytearrai": 1564, "byteswap": [105, 168, 230], "byteswarn": 1564, "bz2": [1115, 1116, 1118, 1119], "c": [230, 276, 1107, 1108, 1122, 1123, 1128, 1135, 1166, 1180, 1228, 1238, 1246, 1248, 1249, 1250, 1254, 1263, 1265, 1273, 1277, 1279, 1382, 1385, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1435, 1439, 1441, 1468, 1512, 1523, 1526, 1529, 1543, 1548, 1564, 1710, 1712, 1729, 1730], "c0": 1517, "c1": [914, 915], "c2": [914, 915, 1517], "c3": 1517, "c_": 1265, "cach": [1128, 1160], "calc": 1720, "calc_amplitude_sigma": [820, 821, 874, 877, 914, 917, 920, 923], "calc_area": [1637, 1704], "calc_centrelin": [823, 825, 860, 863, 867, 870, 909, 912], "calc_centreline_integr": [452, 453, 769, 775, 780, 788, 795, 802], "calc_data": [886, 902], "calc_farm": [0, 4, 10, 12, 18, 22, 1710, 1714, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "calc_farm_effici": [1016, 1020, 1719, 1727, 1728], "calc_farm_mean": [1016, 1021], "calc_farm_sum": [1016, 1022], "calc_farm_yield": [1016, 1023, 1719, 1728], "calc_final_wake_delta": [471, 473, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 976, 978, 982, 984, 988, 990, 994, 996, 1000], "calc_mean_farm_pow": [1016, 1024, 1719, 1721, 1727, 1728], "calc_ord": [452, 454, 769, 771, 775, 777, 780, 783, 788, 791, 795, 798, 802, 805], "calc_par": [18, 19, 39, 42, 46, 52, 56, 60, 80, 85, 94, 334, 335, 346, 354, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735], "calc_paramet": [0, 4, 5, 22, 23], "calc_point": [0, 5, 10, 18, 23, 1051, 1072, 1073, 1074, 1075, 1076, 1077, 1710, 1713, 1714, 1715, 1725], "calc_states_mean": [1016, 1025], "calc_states_std": [1016, 1026], "calc_states_sum": [1016, 1027], "calc_turbine_mean": [1016, 1028], "calc_turbine_sum": [1016, 1029], "calc_turbine_yield": [1016, 1023, 1030, 1727], "calc_var": [410, 411, 630, 636, 637, 643, 644, 667, 668, 1718], "calc_w": [1550, 1553, 1554, 1558, 1705], "calc_wake_radiu": [823, 826, 860, 864, 867, 871, 909, 913], "calc_wakes_x_r": [810, 811, 820, 822, 823, 827, 860, 867, 874, 909, 914, 920], "calc_wakes_x_yz": [810, 812, 813, 815, 820, 823, 860, 867, 874, 880, 883, 909, 914, 920], "calcul": [0, 4, 5, 10, 12, 18, 19, 21, 22, 23, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 67, 72, 76, 80, 82, 83, 85, 87, 88, 94, 96, 99, 100, 103, 308, 325, 326, 332, 333, 334, 335, 338, 340, 343, 346, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 383, 386, 388, 392, 394, 395, 396, 398, 399, 400, 401, 403, 404, 407, 408, 410, 411, 412, 414, 415, 418, 420, 422, 424, 426, 438, 440, 441, 443, 448, 449, 450, 452, 453, 454, 455, 456, 465, 467, 468, 470, 471, 472, 473, 490, 492, 494, 495, 497, 498, 500, 501, 503, 506, 507, 509, 510, 513, 514, 516, 518, 519, 520, 522, 523, 525, 526, 527, 530, 531, 534, 535, 537, 538, 539, 543, 544, 546, 547, 552, 558, 559, 560, 566, 571, 580, 581, 584, 585, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 633, 636, 637, 640, 643, 644, 647, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 663, 664, 665, 667, 668, 669, 670, 671, 673, 675, 676, 677, 678, 681, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 706, 708, 710, 711, 712, 713, 716, 717, 718, 720, 721, 724, 725, 726, 728, 729, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 744, 745, 746, 748, 749, 750, 752, 753, 754, 756, 757, 758, 760, 761, 762, 763, 764, 765, 767, 768, 769, 771, 772, 773, 775, 777, 778, 779, 780, 783, 784, 785, 787, 788, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 833, 834, 835, 836, 838, 839, 841, 842, 843, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 860, 861, 863, 864, 865, 867, 868, 870, 871, 872, 874, 877, 878, 880, 883, 884, 886, 902, 906, 909, 912, 913, 914, 917, 918, 920, 923, 924, 925, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 975, 976, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1007, 1008, 1016, 1018, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1035, 1049, 1050, 1051, 1056, 1057, 1070, 1071, 1085, 1122, 1238, 1241, 1257, 1265, 1273, 1282, 1283, 1308, 1317, 1387, 1403, 1415, 1422, 1459, 1511, 1513, 1526, 1527, 1528, 1529, 1530, 1539, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1560, 1562, 1563, 1565, 1570, 1572, 1574, 1580, 1582, 1587, 1589, 1594, 1596, 1602, 1604, 1610, 1636, 1637, 1638, 1639, 1640, 1641, 1647, 1648, 1674, 1675, 1692, 1693, 1694, 1695, 1696, 1698, 1702, 1703, 1704, 1705, 1706, 1707, 1710, 1711, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1725, 1726, 1727, 1728, 1729, 1731], "calib3d": 1562, "call": [308, 332, 334, 346, 361, 362, 403, 404, 566, 660, 1122, 1131, 1138, 1149, 1156, 1166, 1187, 1196, 1202, 1203, 1205, 1206, 1217, 1218, 1221, 1225, 1230, 1238, 1240, 1244, 1248, 1253, 1254, 1265, 1273, 1274, 1278, 1279, 1280, 1286, 1306, 1344, 1382, 1385, 1387, 1390, 1397, 1401, 1402, 1403, 1404, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1430, 1433, 1434, 1440, 1442, 1447, 1448, 1460, 1468, 1485, 1511, 1512, 1513, 1516, 1517, 1518, 1527, 1528, 1529, 1530, 1531, 1532, 1536, 1698, 1702, 1710, 1712, 1713, 1715, 1720, 1721, 1725, 1726, 1729, 1731], "call_axes_loc": [1122, 1344], "callabl": [1228, 1230, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1435, 1437, 1445, 1466, 1511, 1512, 1521, 1523, 1539, 1543, 1564], "callback": [1122, 1230, 1411, 1428], "caller": 1344, "calm": [1252, 1256, 1269, 1270], "calm_limit": [1252, 1256, 1269, 1270], "calul": 1713, "can": [443, 618, 813, 886, 1122, 1123, 1128, 1131, 1140, 1156, 1166, 1187, 1230, 1238, 1239, 1241, 1243, 1247, 1248, 1249, 1251, 1253, 1254, 1255, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1284, 1306, 1344, 1385, 1386, 1387, 1390, 1392, 1393, 1401, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1430, 1431, 1432, 1433, 1434, 1436, 1451, 1466, 1472, 1486, 1487, 1498, 1499, 1500, 1505, 1506, 1507, 1511, 1512, 1513, 1518, 1519, 1520, 1521, 1523, 1527, 1528, 1529, 1530, 1534, 1564, 1700, 1701, 1702, 1707, 1708, 1710, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "can_pan": [1122, 1260], "can_zoom": [1122, 1261], "cancel": [1131, 1140, 1166, 1187], "cannot": [1178, 1282, 1283, 1404, 1419, 1509, 1510, 1519], "canva": [1344, 1390], "cap": [1115, 1117, 1255, 1257, 1259, 1279, 1523, 1657, 1690, 1691, 1706, 1727], "capabl": [1165, 1710, 1711], "capac": [1016, 1018, 1643, 1657, 1706, 1710, 1727], "caplin": 1279, "capprop": [1257, 1259], "capsiz": [1255, 1279], "capstyl": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "capsul": 1564, "capthick": 1279, "capwidth": [1257, 1259], "cardin": [1252, 1256, 1269, 1270, 1439, 1441], "caret": 1279, "carri": [1390, 1414, 1713, 1720], "cartesian": [1122, 1131, 1137, 1187, 1188], "case": [414, 490, 566, 632, 1030, 1058, 1060, 1080, 1088, 1096, 1141, 1143, 1162, 1184, 1203, 1218, 1239, 1240, 1244, 1248, 1252, 1254, 1256, 1257, 1259, 1269, 1270, 1279, 1286, 1306, 1358, 1373, 1385, 1386, 1387, 1390, 1412, 1413, 1414, 1419, 1423, 1424, 1430, 1436, 1441, 1452, 1496, 1499, 1500, 1503, 1506, 1507, 1512, 1513, 1518, 1519, 1527, 1528, 1529, 1612, 1701, 1710, 1713, 1715, 1721, 1723, 1724, 1725, 1726, 1727, 1729], "cast": 1564, "categor": 1255, "categori": 1716, "catrom": 1390, "caus": [48, 288, 371, 372, 394, 456, 467, 472, 592, 593, 598, 612, 773, 779, 785, 794, 800, 807, 816, 825, 826, 833, 841, 848, 856, 863, 864, 870, 871, 905, 912, 913, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1150, 1176, 1192, 1203, 1255, 1412, 1697, 1710, 1713, 1715, 1720], "caution": 1713, "cbar": [1538, 1539], "cd": [1712, 1732], "cdot": 1543, "cell": [1385, 1413, 1520, 1521], "cellcolour": [1122, 1521], "cellloc": [1122, 1521], "celltext": [1122, 1521], "center": [1122, 1238, 1239, 1252, 1253, 1254, 1255, 1256, 1265, 1269, 1270, 1273, 1280, 1345, 1352, 1353, 1367, 1368, 1385, 1386, 1390, 1403, 1412, 1414, 1415, 1418, 1422, 1430, 1439, 1441, 1481, 1490, 1495, 1502, 1511, 1521, 1523, 1527, 1528, 1538, 1539, 1720], "center_baselin": [1122, 1352, 1353, 1367, 1368, 1523], "centr": [0, 2, 413, 488, 599, 630, 631, 639, 646, 667, 780, 781, 788, 789, 795, 796, 823, 825, 860, 863, 867, 870, 909, 912, 1252, 1256, 1269, 1270, 1582, 1583, 1596, 1597, 1636, 1637, 1680, 1702, 1704, 1706, 1710, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729], "central": 1257, "centrelin": [452, 453, 455, 769, 772, 775, 778, 780, 784, 788, 792, 795, 799, 802, 806, 920, 921, 1710, 1713, 1714], "centreline_pt": 1714, "centrerotor": [630, 631, 632, 633, 634, 635, 1702, 1715, 1718, 1724], "centrum": 1564, "centuri": 1280, "certain": [1710, 1713], "cf": [1713, 1723], "chain": [1131, 1143, 1166, 1187, 1385, 1711], "chang": [673, 674, 1122, 1131, 1144, 1149, 1166, 1171, 1187, 1207, 1223, 1230, 1244, 1248, 1257, 1279, 1382, 1385, 1392, 1393, 1394, 1401, 1402, 1404, 1411, 1419, 1423, 1429, 1430, 1431, 1432, 1433, 1434, 1436, 1443, 1444, 1449, 1467, 1494, 1496, 1501, 1503, 1518, 1520, 1523, 1525, 1527, 1528, 1536, 1702, 1710, 1711, 1712, 1715, 1716, 1719], "changelog": 1710, "channel": [1390, 1712], "charact": [1419, 1517], "characterist": 860, "chart": [1122, 1386, 1418, 1419], "check": [65, 67, 69, 72, 74, 76, 78, 392, 393, 594, 597, 599, 601, 603, 609, 611, 615, 886, 889, 905, 1096, 1110, 1284, 1413, 1518, 1636, 1710, 1715, 1726, 1727], "check_converg": [65, 67, 69, 72, 74, 76, 78], "check_match": [1107, 1110], "check_raw": [479, 1090, 1096], "check_wmodel": [392, 393, 594, 597, 599, 601, 603, 609, 611, 615], "checkout": 1711, "child": [1122, 1231, 1302, 1394, 1416], "childprocesserror": 1564, "children": [1122, 1123, 1126, 1131, 1144, 1156, 1166, 1171, 1187, 1231, 1275, 1344], "chk": [393, 597, 611], "choic": [2, 308, 309, 434, 444, 1009, 1032, 1033, 1034, 1107, 1392, 1393, 1423, 1500, 1507, 1618, 1619, 1645, 1670, 1704, 1706, 1710, 1713, 1715, 1719, 1720, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "chois": 1710, "choos": [105, 169, 230, 1265, 1273, 1385, 1412, 1414, 1422, 1511, 1527, 1528, 1712, 1714, 1715, 1719, 1721, 1728, 1731], "chose": [1713, 1722], "chosen": [1301, 1385, 1392, 1393, 1402, 1419, 1433, 1434, 1449, 1710, 1713], "chr": 1564, "chunk": [0, 2, 4, 5, 10, 18, 19, 22, 23, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 94, 96, 308, 309, 310, 323, 325, 331, 332, 333, 335, 338, 344, 346, 348, 352, 356, 358, 362, 365, 369, 370, 377, 379, 388, 392, 399, 400, 404, 407, 410, 420, 422, 427, 438, 440, 441, 443, 448, 452, 454, 459, 465, 471, 490, 492, 494, 498, 500, 501, 503, 506, 509, 514, 516, 518, 519, 523, 525, 531, 534, 538, 544, 546, 547, 574, 577, 580, 581, 584, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 620, 621, 623, 624, 626, 628, 630, 636, 643, 650, 653, 655, 657, 658, 660, 663, 667, 669, 673, 675, 678, 681, 682, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 718, 721, 724, 726, 729, 731, 733, 735, 738, 740, 742, 746, 750, 754, 758, 762, 765, 769, 771, 775, 777, 780, 783, 788, 791, 795, 798, 802, 805, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1693, 1696, 1710, 1713, 1714, 1715, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "chunked_result": [4, 5, 22, 23], "chunksiz": [1715, 1726], "ci": [1257, 1259], "cihi": 1259, "cilo": 1259, "circ": [636, 637], "circl": [594, 609, 1166, 1218, 1248, 1252, 1254, 1256, 1269, 1270, 1419, 1468, 1487, 1517, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1636, 1637, 1704, 1713], "circular": [1187, 1248], "citat": 1711, "cite": 1708, "cl": [1561, 1572, 1573, 1704], "cl_del": [825, 863, 870, 912], "cl_ipar": [780, 781, 788, 789, 795, 796], "cla": [1122, 1262], "clabel": [1122, 1263], "claim": 1717, "clariti": [1527, 1528, 1529], "class": [0, 10, 12, 18, 39, 42, 46, 52, 56, 60, 65, 69, 74, 78, 80, 85, 89, 94, 308, 318, 323, 325, 332, 335, 344, 345, 346, 356, 362, 369, 370, 377, 378, 379, 392, 397, 399, 404, 410, 417, 420, 423, 427, 428, 434, 438, 440, 442, 443, 447, 448, 451, 452, 458, 459, 465, 469, 471, 474, 479, 490, 498, 499, 501, 502, 503, 514, 516, 523, 531, 544, 547, 552, 567, 572, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 707, 708, 709, 710, 713, 714, 721, 722, 729, 730, 735, 736, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 803, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 861, 867, 868, 874, 875, 880, 881, 886, 909, 910, 914, 915, 920, 921, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1007, 1016, 1036, 1043, 1046, 1049, 1050, 1052, 1053, 1056, 1062, 1065, 1070, 1071, 1078, 1081, 1084, 1086, 1090, 1098, 1101, 1104, 1107, 1108, 1111, 1115, 1123, 1128, 1131, 1138, 1166, 1178, 1187, 1196, 1205, 1208, 1210, 1218, 1224, 1225, 1284, 1352, 1353, 1354, 1367, 1368, 1369, 1394, 1430, 1498, 1505, 1521, 1547, 1548, 1561, 1564, 1565, 1572, 1574, 1582, 1589, 1596, 1604, 1618, 1625, 1627, 1692, 1694, 1695, 1696, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1707, 1710, 1713, 1716, 1718, 1724, 1726, 1729], "class_nam": [567, 572], "classic": [574, 1517, 1702, 1710, 1713], "classif": 1707, "classmethod": [0, 7, 10, 13, 18, 29, 94, 308, 318, 335, 392, 397, 410, 417, 420, 423, 427, 429, 430, 438, 440, 442, 443, 447, 448, 451, 452, 458, 465, 469, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 594, 599, 601, 603, 609, 615, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1007, 1016, 1036, 1043, 1046, 1047, 1049, 1052, 1056, 1059, 1070, 1078, 1081, 1084, 1086, 1115, 1120, 1121, 1122, 1123, 1128, 1131, 1138, 1166, 1187, 1225, 1564, 1618, 1622], "clean": [886, 903], "cleaner": 1710, "clear": [6, 312, 1122, 1249, 1262, 1264, 1731], "clear_mem": [0, 6, 10, 18, 308, 312, 1726], "clearer": 1481, "clearli": [1714, 1715, 1720, 1729], "client": [1618, 1619], "client_arg": [1618, 1619], "clim": [1254, 1258, 1282, 1283, 1385, 1412, 1414, 1423], "climat": 1711, "clip": [105, 170, 230, 1122, 1239, 1259, 1282, 1283, 1304, 1305, 1347, 1365, 1380, 1390, 1402, 1433, 1434, 1450, 1451, 1452, 1497, 1504], "clip_box": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1512, 1521, 1523], "clip_on": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1435, 1512, 1521, 1523], "clip_path": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1512, 1521, 1523], "clipbox": [1122, 1303, 1450], "clockwis": [1340, 1418, 1423, 1424, 1483, 1485], "clone": [1712, 1732], "close": [1247, 1251, 1282, 1283, 1514, 1520, 1521, 1528, 1565, 1589, 1704, 1713, 1714, 1717, 1724, 1726], "closedpolygon": [1589, 1590, 1591, 1592, 1593, 1594, 1595, 1704], "cluster": [1618, 1619, 1710, 1711, 1727, 1728], "cluster_arg": [1618, 1619], "cm": [1252, 1256, 1269, 1270], "cmap": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1252, 1254, 1256, 1258, 1269, 1270, 1282, 1283, 1385, 1387, 1390, 1412, 1413, 1414, 1423, 1430, 1511, 1512, 1520, 1527, 1528, 1529, 1721], "cmax": [1387, 1538, 1539], "cmean": [1538, 1539], "cmedian": [1538, 1539], "cmin": [1387, 1538, 1539], "cn": 1419, "cnri": 1564, "co": [830, 1187, 1729], "coars": [1716, 1728], "cobnstructor": [1582, 1583], "code": [308, 886, 1122, 1239, 1279, 1405, 1419, 1521, 1707, 1710, 1711, 1712], "coeffici": [577, 578, 719, 727, 1254, 1562, 1644, 1658, 1706, 1713, 1715, 1721], "coerc": [1122, 1420], "coher": [1122, 1265], "coincid": [1390, 1519, 1536], "col": 1419, "col_cp": [706, 707, 709], "col_ct": [713, 714, 721, 722, 1713], "col_d": 483, "col_h": 483, "col_i": 483, "col_id": 483, "col_index": 483, "col_model": 1710, "col_nam": 483, "col_p": [713, 714, 721, 722, 1713], "col_tind": 674, "col_tnam": [674, 1723], "col_var": [685, 686, 758, 759], "col_w": [706, 707, 713, 714, 721, 1713], "col_ws_cp_fil": 709, "col_ws_ct_fil": 722, "col_ws_p_fil": [721, 722], "col_x": 483, "col_z": [758, 759], "colcolour": 1521, "collabel": 1521, "collect": [116, 235, 308, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1123, 1232, 1258, 1266, 1280, 1385, 1387, 1388, 1412, 1414, 1423, 1426, 1427, 1430, 1466, 1538, 1539, 1540, 1725, 1731], "collect_model": [346, 349, 580], "colloc": 1521, "colmap": [674, 1723], "color": [1009, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1403, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1435, 1453, 1454, 1468, 1490, 1512, 1513, 1517, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1540, 1566, 1576, 1584, 1591, 1598, 1606, 1710, 1727], "color_bi": [1007, 1009, 1719, 1727, 1728], "colorbar": [1286, 1527, 1528, 1710], "colormap": [1037, 1038, 1039, 1040, 1041, 1042, 1238, 1252, 1254, 1256, 1258, 1269, 1270, 1282, 1283, 1385, 1387, 1390, 1403, 1412, 1413, 1414, 1415, 1422, 1423, 1430, 1511, 1520, 1527, 1528], "colormapnorm": [1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "colour": 1714, "cols_minmax": [549, 551], "cols_models_post": 483, "cols_models_pr": 483, "column": [483, 503, 505, 531, 533, 549, 551, 618, 619, 655, 656, 674, 685, 686, 707, 709, 713, 714, 721, 722, 729, 735, 759, 1048, 1054, 1055, 1115, 1121, 1254, 1257, 1386, 1390, 1398, 1405, 1412, 1413, 1414, 1419, 1423, 1511, 1520, 1521, 1538, 1539, 1562, 1616, 1713, 1716, 1719, 1720, 1721, 1723, 1726, 1727], "colwidth": 1521, "com": [838, 845, 852, 1513, 1562, 1564, 1636, 1710, 1711, 1712, 1732], "combin": [385, 928, 929, 933, 934, 938, 939, 943, 944, 1419, 1430, 1710, 1713, 1714, 1715, 1720, 1722, 1724, 1729], "come": [412, 1254, 1393, 1520, 1710, 1716, 1723, 1727], "comma": 1286, "command": [1122, 1269, 1270, 1323, 1463, 1468, 1471, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1704, 1712], "comment": 1710, "commit": [1710, 1711], "common": [362, 404, 802, 880, 886, 902, 1142, 1160, 1390, 1441, 1518, 1707], "commonli": [1280, 1385, 1419], "commun": 1726, "compact": 1413, "compar": [1344, 1413, 1710, 1714, 1721, 1723, 1730], "compare_wak": 1710, "comparis": 1714, "comparison": [1709, 1710, 1711, 1715, 1720], "compat": [393, 597, 611, 1265, 1273, 1279, 1422, 1468, 1511, 1520], "compil": 1564, "complementari": [1122, 1277], "complet": [566, 1122, 1278, 1385, 1387, 1390, 1412, 1413, 1414, 1423, 1430, 1527, 1528, 1701, 1710, 1715, 1716, 1718, 1719, 1723, 1726, 1727, 1728], "complevel": 1642, "complex": [1238, 1265, 1273, 1277, 1403, 1413, 1415, 1422, 1511, 1543, 1564, 1711, 1727], "compon": [1122, 1166, 1254, 1257, 1259, 1423, 1446, 1447, 1538, 1539, 1638, 1639, 1641], "compos": [636, 643, 1131, 1135, 1140, 1166, 1187, 1702, 1710], "composit": 1143, "compress": [105, 171, 230, 1277, 1642], "compris": 1382, "comput": [18, 40, 44, 48, 54, 58, 62, 82, 87, 96, 230, 276, 323, 324, 333, 338, 348, 358, 365, 392, 400, 407, 412, 441, 452, 454, 457, 471, 492, 506, 518, 525, 534, 574, 576, 577, 579, 584, 620, 624, 628, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 710, 711, 716, 724, 731, 738, 769, 771, 775, 777, 780, 783, 786, 788, 791, 795, 798, 802, 805, 880, 1049, 1084, 1122, 1140, 1159, 1217, 1238, 1252, 1256, 1257, 1259, 1269, 1270, 1273, 1277, 1386, 1403, 1415, 1422, 1511, 1519, 1534, 1538, 1539, 1693, 1696, 1702, 1703, 1710, 1713, 1726, 1729], "conbstructor": [552, 553], "concept": [1402, 1433, 1434, 1518, 1710, 1714, 1726], "concern": 1712, "concret": [1692, 1702, 1707, 1713, 1722], "conda": [1710, 1711, 1730], "condens": 1523, "condit": [580, 673, 802, 880, 886, 1390, 1636, 1702, 1710, 1714, 1715, 1723, 1725, 1729, 1731], "conf_interv": 1257, "confid": [1257, 1259], "config": 1712, "configur": [1122, 1382, 1521, 1526], "conflict": [1418, 1419], "confus": [1449, 1710], "conj": [105, 172, 230], "conjug": [105, 173, 230, 1543], "connect": [1122, 1239, 1279, 1282, 1283, 1392, 1393, 1419, 1423], "connectionabortederror": 1564, "connectionerror": 1564, "connectionpatch": [1392, 1393], "connectionrefusederror": 1564, "connectionreseterror": 1564, "connectionstyl": 1239, "connector": [1122, 1392, 1393], "connector_lin": [1392, 1393], "consid": [453, 920, 921, 1257, 1387, 1710, 1727], "consider": 1710, "consist": [36, 427, 1257, 1419, 1710, 1715, 1716, 1721, 1722, 1723, 1725, 1728], "constant": [104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 1122, 1282, 1283, 1513, 1514, 1550, 1552, 1554, 1557, 1558, 1560, 1692, 1706, 1710, 1714, 1715, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "constantli": [1282, 1283, 1518], "constrainedlayout_guid": [1122, 1317, 1459], "constraint": [1429, 1441], "constrict": 1715, "construct": [1107, 1111, 1509, 1510, 1529, 1704, 1711, 1722], "constructor": [0, 2, 10, 11, 18, 19, 39, 42, 43, 46, 47, 52, 53, 56, 57, 60, 61, 65, 66, 69, 70, 74, 75, 78, 79, 80, 81, 85, 86, 89, 90, 94, 95, 308, 309, 318, 323, 325, 326, 332, 335, 336, 344, 345, 346, 347, 356, 357, 362, 363, 369, 370, 377, 378, 379, 380, 392, 399, 404, 405, 410, 411, 417, 420, 423, 427, 428, 429, 430, 434, 435, 438, 440, 442, 443, 444, 447, 448, 452, 458, 459, 461, 465, 469, 471, 474, 475, 479, 480, 490, 491, 498, 499, 501, 502, 503, 505, 514, 516, 517, 523, 524, 531, 533, 544, 545, 547, 567, 569, 574, 575, 577, 578, 580, 581, 582, 587, 588, 589, 590, 591, 594, 595, 599, 601, 602, 603, 604, 609, 610, 615, 618, 619, 623, 626, 627, 630, 636, 637, 643, 644, 650, 651, 655, 656, 660, 661, 667, 668, 673, 674, 678, 679, 685, 686, 690, 691, 695, 698, 701, 702, 706, 707, 708, 709, 710, 713, 714, 721, 722, 729, 730, 735, 736, 742, 743, 746, 747, 750, 751, 754, 755, 758, 759, 762, 765, 766, 769, 770, 775, 776, 780, 781, 788, 789, 795, 796, 802, 803, 810, 813, 814, 820, 823, 824, 830, 831, 838, 839, 845, 846, 852, 853, 854, 860, 861, 867, 868, 874, 875, 880, 881, 886, 901, 909, 910, 914, 915, 920, 921, 928, 929, 933, 934, 938, 939, 943, 944, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1002, 1003, 1007, 1008, 1016, 1017, 1036, 1043, 1044, 1046, 1049, 1050, 1052, 1053, 1056, 1057, 1062, 1063, 1065, 1066, 1070, 1071, 1078, 1079, 1081, 1082, 1084, 1085, 1086, 1087, 1090, 1091, 1098, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1131, 1156, 1166, 1187, 1387, 1390, 1412, 1414, 1547, 1548, 1572, 1573, 1574, 1575, 1589, 1590, 1596, 1597, 1604, 1605, 1618, 1619, 1704, 1710, 1713, 1715, 1718, 1722, 1727], "consult": 830, "contain": [0, 10, 18, 308, 319, 325, 326, 328, 344, 377, 427, 429, 430, 567, 1090, 1092, 1093, 1122, 1142, 1202, 1221, 1233, 1238, 1239, 1253, 1255, 1259, 1267, 1271, 1272, 1273, 1277, 1279, 1282, 1283, 1284, 1316, 1321, 1365, 1380, 1385, 1386, 1390, 1403, 1415, 1422, 1481, 1511, 1517, 1520, 1538, 1539, 1616, 1698, 1700, 1701, 1702, 1704, 1713, 1717, 1718, 1720, 1721, 1722, 1725, 1727, 1731], "contains_branch": [1131, 1141, 1166, 1187], "contains_branch_seper": [1131, 1142, 1166, 1187], "contains_point": [1122, 1268], "content": [479, 567, 573, 1090, 1097, 1727], "context": [479, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1122, 1267, 1306, 1322, 1408, 1462, 1715, 1724, 1726], "continu": [1282, 1283, 1514, 1518, 1520, 1729], "contour": [1060, 1089, 1122, 1263, 1269, 1527, 1528, 1710], "contourf": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1270], "contourlabel": 1263, "contourset": [1263, 1527, 1528], "contract": [1021, 1022, 1032], "contrast": [369, 1481, 1562, 1698, 1713], "contribut": [370, 371, 372, 392, 394, 438, 465, 467, 471, 473, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 609, 612, 615, 810, 813, 816, 820, 823, 830, 833, 838, 841, 845, 848, 852, 853, 856, 860, 867, 874, 880, 909, 914, 920, 928, 932, 933, 937, 938, 942, 943, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 976, 978, 982, 984, 988, 990, 994, 996, 1000, 1386, 1715], "contribute_to_farm_wak": [370, 371, 587, 589, 590, 592], "contribute_to_point_wak": [370, 372, 587, 589, 590, 593], "control": [0, 2, 567, 580, 1122, 1238, 1252, 1257, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1390, 1401, 1402, 1403, 1412, 1413, 1415, 1418, 1419, 1420, 1422, 1433, 1434, 1447, 1448, 1468, 1490, 1495, 1499, 1502, 1506, 1520, 1521, 1527, 1528, 1702, 1715, 1724, 1726], "conv_crit": [10, 11, 1715], "convcrit": [10, 11, 65, 66, 67, 68, 69, 70, 71, 74, 1695], "convcritlist": [69, 70, 71, 72, 73, 1695], "conveni": [1122, 1243, 1248, 1405, 1419, 1468, 1712, 1725], "convent": [1035, 1390, 1412, 1414, 1512, 1562, 1713], "converg": [10, 11, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 78, 1693, 1695, 1710, 1715, 1726], "convers": [1228, 1431, 1432, 1543], "conversioninterfac": [1527, 1528], "convert": [230, 243, 1122, 1208, 1271, 1272, 1286, 1306, 1420, 1432, 1452, 1460, 1520, 1616, 1725], "convert_xunit": [1122, 1271], "convert_yunit": [1122, 1272], "convvardelta": [74, 75, 76, 77, 78, 1695], "coodin": 1710, "coord": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 561, 621, 658, 682, 718, 726, 733, 740, 1122, 1274, 1391, 1516, 1523, 1538, 1701], "coordin": [413, 452, 453, 455, 456, 467, 488, 490, 491, 498, 499, 502, 561, 631, 639, 646, 769, 772, 773, 775, 778, 779, 780, 784, 785, 788, 792, 794, 795, 799, 800, 802, 806, 807, 816, 833, 841, 848, 856, 1007, 1008, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1131, 1137, 1187, 1188, 1224, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1268, 1274, 1279, 1282, 1283, 1285, 1344, 1352, 1353, 1354, 1358, 1365, 1367, 1368, 1369, 1373, 1380, 1385, 1390, 1392, 1394, 1412, 1413, 1414, 1418, 1419, 1420, 1423, 1424, 1439, 1441, 1467, 1496, 1503, 1516, 1520, 1523, 1538, 1539, 1614, 1616, 1680, 1684, 1685, 1706, 1713, 1715, 1716, 1717, 1719, 1724, 1725, 1726], "copi": [56, 60, 105, 174, 230, 414, 632, 1122, 1131, 1144, 1150, 1166, 1171, 1176, 1187, 1192, 1535, 1694, 1714, 1715], "copy_to_ambi": [414, 632], "copyright": 1564, "core": [0, 2, 3, 5, 7, 13, 18, 19, 23, 28, 29, 32, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 67, 72, 76, 80, 82, 83, 84, 85, 87, 88, 94, 95, 96, 99, 100, 102, 103, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 486, 487, 489, 490, 492, 494, 495, 497, 500, 503, 506, 507, 509, 510, 513, 516, 518, 519, 520, 522, 523, 524, 525, 526, 527, 529, 530, 531, 533, 534, 535, 537, 538, 539, 543, 546, 552, 561, 563, 567, 570, 571, 574, 577, 580, 581, 582, 584, 585, 586, 589, 590, 592, 593, 597, 598, 600, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 632, 633, 636, 640, 643, 647, 650, 653, 654, 655, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 675, 676, 677, 678, 681, 682, 683, 685, 687, 688, 689, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 704, 705, 710, 711, 712, 713, 716, 717, 718, 720, 721, 724, 725, 726, 728, 729, 731, 732, 733, 734, 735, 738, 739, 740, 741, 742, 746, 750, 754, 758, 762, 765, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 783, 784, 785, 786, 787, 788, 791, 792, 793, 794, 795, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 811, 812, 813, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 853, 854, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 870, 871, 872, 873, 874, 875, 877, 878, 879, 880, 881, 883, 884, 885, 886, 901, 902, 904, 905, 906, 908, 909, 910, 912, 913, 914, 915, 917, 918, 919, 920, 921, 923, 924, 925, 926, 927, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 975, 976, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1018, 1030, 1062, 1063, 1084, 1692, 1694, 1695, 1696, 1700, 1701, 1702, 1707, 1710], "corect": 1729, "corner": [1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1390, 1392, 1393, 1394, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1435, 1437, 1441, 1512, 1521, 1523, 1527, 1528, 1717], "corpor": 1564, "correct": [713, 714, 721, 722, 735, 736, 769, 860, 861, 867, 984, 1208, 1210, 1273, 1344, 1387, 1390, 1392, 1393, 1422, 1485, 1702, 1710, 1713, 1720, 1721, 1725], "correl": [860, 1122, 1228, 1543, 1707], "correspond": [105, 106, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 331, 660, 1131, 1147, 1150, 1166, 1174, 1176, 1187, 1190, 1192, 1238, 1257, 1265, 1273, 1277, 1279, 1280, 1385, 1403, 1412, 1414, 1415, 1418, 1420, 1422, 1452, 1511, 1519, 1526, 1538, 1539, 1638, 1641, 1690, 1691, 1706, 1712, 1713, 1718, 1719, 1723], "correspondingli": 1423, "correspons": 1723, "costruct": 1713, "could": [1419, 1710, 1713, 1715, 1719, 1723, 1725, 1728], "count": [1123, 1129, 1241, 1280, 1385, 1386, 1387, 1710, 1713], "counter": [18, 24, 36, 94, 97, 325, 331, 344, 377, 427, 1089, 1423, 1485], "counterclock": 1418, "counterclockwis": [1340, 1418, 1483], "coupl": 1724, "cours": 1254, "cover": [594, 1257, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "cp": [706, 707, 708, 709, 1702, 1710, 1713], "cpctfile": [706, 707, 1702, 1710], "cpctfromtwo": [708, 709, 1702, 1710], "cpp": 1562, "cpython": 1564, "cquantil": [1538, 1539], "creat": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 135, 230, 253, 308, 314, 319, 323, 332, 335, 346, 352, 356, 362, 369, 370, 375, 376, 379, 388, 391, 392, 398, 399, 404, 410, 420, 422, 427, 429, 430, 438, 440, 443, 448, 452, 459, 465, 470, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 549, 550, 551, 572, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 836, 838, 843, 845, 850, 852, 853, 860, 865, 867, 872, 874, 880, 886, 909, 914, 920, 926, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1005, 1007, 1009, 1036, 1056, 1060, 1065, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1089, 1101, 1104, 1107, 1108, 1111, 1122, 1229, 1238, 1241, 1257, 1258, 1259, 1265, 1273, 1282, 1283, 1386, 1390, 1394, 1403, 1412, 1413, 1414, 1415, 1420, 1422, 1450, 1468, 1472, 1486, 1499, 1506, 1511, 1517, 1521, 1523, 1527, 1528, 1529, 1530, 1531, 1532, 1538, 1539, 1541, 1544, 1548, 1614, 1703, 1704, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "create_dummy_axi": [1196, 1201, 1208, 1218], "create_random_abl_st": [549, 1701], "creation": [457, 569, 786, 1056, 1084, 1692, 1701, 1703, 1710, 1724, 1728], "credit": 1564, "crespo": [860, 1707, 1713], "crespohernandez": [1710, 1729], "crespohernandez_": [1713, 1718], "crespohernandez_max": [1727, 1728], "crespohernandez_max_ka0213_kb003": 1713, "crespohernandez_max_ka04": 1727, "crespohernandeztiwak": [860, 861, 862, 863, 864, 865, 866, 1707, 1710, 1718], "crit": [69, 70, 71], "criteria": [10, 11, 65, 66, 67, 69, 70, 72, 74, 75, 76, 78, 1695, 1715], "criterion": [69, 71, 1284], "cross": [1122, 1228, 1265, 1273, 1282, 1283, 1468, 1519, 1543, 1713, 1726, 1729], "crosshatch": 1528, "crucial": 1722, "csd": [1122, 1273, 1422], "csv": [481, 482, 483, 484, 503, 1007, 1012, 1052, 1054, 1055, 1115, 1116, 1118, 1119, 1633, 1701, 1704, 1710, 1713, 1715, 1719, 1723, 1724, 1725, 1726, 1727, 1728], "ct": [0, 1, 10, 18, 323, 324, 446, 565, 569, 574, 575, 576, 577, 579, 660, 690, 691, 706, 708, 709, 713, 714, 719, 721, 722, 727, 729, 730, 735, 736, 825, 826, 846, 860, 861, 863, 864, 867, 870, 871, 881, 909, 912, 913, 1086, 1088, 1115, 1117, 1658, 1690, 1691, 1702, 1703, 1706, 1710, 1713, 1715, 1716, 1721, 1724, 1725, 1726, 1729], "ct2a": [323, 324, 574, 576, 577, 579, 846, 1702], "ct_max": [574, 575, 881], "ctrl": 1564, "cubic": 1710, "cubic_root": [1562, 1704, 1710], "cumprod": [105, 175, 230], "cumsum": [105, 176, 230], "cumul": [1122, 1277, 1386], "cur_farm_result": [18, 25], "cur_point_result": [18, 26], "current": [0, 10, 15, 18, 21, 24, 25, 26, 28, 30, 31, 32, 37, 38, 67, 72, 76, 89, 92, 93, 94, 97, 308, 316, 1065, 1068, 1069, 1122, 1257, 1259, 1264, 1279, 1306, 1358, 1365, 1373, 1380, 1387, 1404, 1412, 1414, 1418, 1426, 1430, 1436, 1468, 1472, 1481, 1486, 1499, 1506, 1518, 1521, 1525, 1526, 1534, 1702, 1713, 1723], "cursiv": 1523, "cursor": [1122, 1306, 1322, 1408, 1462], "curtail": 1713, "curv": [446, 569, 706, 707, 709, 713, 719, 721, 722, 727, 729, 730, 735, 736, 1086, 1088, 1122, 1162, 1184, 1281, 1282, 1283, 1514, 1702, 1703, 1710, 1711, 1715, 1721], "custom": [1122, 1123, 1128, 1254, 1265, 1273, 1322, 1394, 1408, 1420, 1422, 1462, 1498, 1505, 1511], "cut": 1715, "cutin": [11, 443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735, 1715], "cutoff": 1385, "cwi": 1564, "cxy": 1265, "cyan": 1419, "cycl": [1122, 1238, 1258, 1265, 1273, 1281, 1403, 1415, 1418, 1419, 1422, 1430, 1468, 1511, 1513, 1517, 1527, 1528], "cycler": [1435, 1468], "cylind": 1714, "d": [0, 1, 10, 18, 28, 32, 37, 105, 184, 230, 308, 310, 434, 435, 443, 444, 481, 482, 710, 853, 860, 861, 1007, 1008, 1166, 1180, 1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1430, 1511, 1512, 1564, 1636, 1637, 1642, 1659, 1704, 1706, 1713, 1714, 1715, 1718, 1720, 1724, 1726], "d100d5": 1713, "d126": [1723, 1725], "d178d3": [1715, 1724, 1726], "d_": 491, "dai": [1280, 1727], "dash": [1238, 1246, 1249, 1250, 1254, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1388, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512, 1517, 1527, 1540], "dash_capstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "dash_joinstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "dashboard": 1727, "dashdot": [1280, 1388, 1527, 1540], "dask": [2, 4, 5, 22, 23, 308, 309, 332, 1618, 1619, 1704, 1710, 1711, 1715, 1726, 1727], "daskrunn": [1618, 1619, 1620, 1621, 1622, 1623, 1624, 1704, 1710, 1715, 1717, 1724, 1726, 1727, 1728], "data": [0, 2, 4, 5, 10, 12, 18, 22, 23, 28, 32, 36, 37, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 89, 91, 92, 93, 94, 96, 99, 105, 177, 179, 230, 308, 309, 311, 313, 314, 319, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 338, 344, 345, 346, 348, 352, 356, 358, 359, 361, 362, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 385, 386, 388, 392, 394, 395, 396, 398, 399, 400, 401, 403, 404, 407, 410, 412, 414, 415, 420, 422, 427, 428, 429, 430, 433, 434, 438, 440, 441, 443, 446, 448, 449, 452, 453, 454, 455, 456, 457, 459, 460, 465, 467, 468, 470, 471, 472, 473, 479, 480, 481, 482, 483, 484, 485, 486, 490, 491, 492, 494, 498, 499, 500, 501, 503, 505, 506, 509, 514, 516, 518, 519, 523, 524, 525, 531, 533, 534, 538, 544, 545, 546, 547, 549, 550, 552, 553, 561, 562, 563, 564, 565, 574, 577, 580, 581, 584, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 615, 616, 617, 618, 619, 620, 621, 623, 624, 626, 628, 630, 632, 633, 636, 643, 650, 653, 655, 656, 657, 658, 660, 663, 667, 669, 673, 674, 675, 678, 680, 681, 682, 685, 686, 687, 690, 693, 695, 696, 698, 699, 701, 702, 704, 706, 707, 708, 709, 710, 711, 713, 714, 716, 718, 719, 721, 722, 724, 726, 727, 729, 730, 731, 733, 735, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 759, 760, 762, 763, 765, 767, 769, 771, 772, 773, 775, 777, 778, 779, 780, 781, 783, 784, 785, 786, 788, 791, 792, 793, 794, 795, 796, 798, 799, 800, 802, 805, 806, 807, 808, 810, 811, 812, 813, 815, 816, 817, 818, 820, 821, 822, 823, 825, 826, 827, 828, 830, 833, 834, 835, 836, 838, 841, 842, 843, 845, 848, 849, 850, 852, 853, 856, 857, 858, 860, 861, 863, 864, 865, 867, 870, 871, 872, 874, 877, 878, 880, 883, 884, 886, 902, 903, 904, 905, 906, 909, 912, 913, 914, 917, 918, 920, 923, 925, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 954, 957, 958, 960, 963, 964, 966, 969, 970, 972, 975, 976, 978, 981, 982, 984, 987, 988, 990, 993, 994, 996, 999, 1000, 1007, 1008, 1016, 1021, 1022, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1036, 1040, 1041, 1042, 1043, 1048, 1049, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1061, 1065, 1068, 1069, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1089, 1090, 1091, 1097, 1115, 1120, 1121, 1122, 1142, 1166, 1169, 1187, 1202, 1221, 1228, 1238, 1239, 1240, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1286, 1290, 1306, 1307, 1352, 1353, 1354, 1358, 1365, 1367, 1368, 1369, 1373, 1380, 1382, 1385, 1386, 1387, 1388, 1390, 1394, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1426, 1430, 1431, 1432, 1433, 1434, 1436, 1441, 1449, 1466, 1468, 1496, 1497, 1503, 1504, 1511, 1512, 1513, 1514, 1517, 1518, 1519, 1520, 1523, 1527, 1528, 1534, 1536, 1538, 1539, 1540, 1541, 1543, 1544, 1552, 1557, 1560, 1615, 1617, 1692, 1694, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1709, 1710, 1711, 1713, 1714, 1715, 1717, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1729], "data1": 1386, "data2": 1386, "data_book": [480, 1090, 1091], "data_file_format": [1115, 1116], "data_format": [1072, 1073, 1074, 1075, 1076, 1077], "data_ndarrai": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "data_prio": 385, "data_rang": 550, "data_sourc": [483, 484, 490, 491, 498, 499, 503, 505, 514, 531, 533, 544, 545, 547, 618, 619, 655, 656, 673, 674, 685, 686, 706, 707, 713, 714, 758, 759, 1701, 1713, 1716, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "data_source_cp": [708, 709], "data_source_ct": [708, 709, 721, 722, 729, 730, 735, 736], "data_source_p": [721, 722, 729, 730, 735, 736], "data_to_stor": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 382, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "data_v": 758, "data_var": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "data_z": 758, "databook": [2, 308, 309, 479, 480, 485, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1699, 1704], "datacalcmodel": [332, 333, 334, 356, 399, 1698, 1710], "datafram": [483, 484, 499, 503, 505, 531, 533, 549, 550, 551, 618, 619, 655, 656, 673, 674, 685, 686, 706, 707, 708, 709, 713, 714, 721, 722, 729, 730, 735, 736, 759, 1023, 1025, 1027, 1028, 1029, 1030, 1033, 1034, 1048, 1052, 1053, 1056, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1120, 1121, 1419, 1701, 1702, 1710, 1720, 1721, 1723, 1725, 1727, 1729], "datalim": [1122, 1229, 1248, 1290, 1383, 1435, 1436, 1441, 1449, 1534], "datapoint": 1386, "dataprofil": [758, 759, 760, 761, 1702, 1710], "dataset": [4, 5, 10, 12, 19, 22, 23, 25, 26, 27, 33, 34, 67, 72, 76, 93, 314, 319, 332, 334, 361, 403, 490, 491, 498, 501, 545, 552, 1007, 1008, 1016, 1017, 1049, 1050, 1051, 1053, 1057, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1122, 1255, 1257, 1259, 1277, 1386, 1419, 1538, 1539, 1617, 1642, 1698, 1701, 1704, 1710, 1715, 1719, 1724, 1725, 1726], "datasetdimens": 1719, "date": [1122, 1203, 1255, 1280, 1420, 1541, 1544, 1716], "date2num": 1420, "dateformatt": 1420, "dateloc": 1420, "datetim": [490, 491, 499, 1255, 1420, 1541, 1544], "datetime64": [1030, 1420, 1724, 1726], "datum": 1257, "db": [1403, 1511], "dbase": 1090, "dbook": [2, 308, 309, 485, 1716], "de": 1255, "deactiv": [1470, 1712], "decad": [1402, 1433, 1434, 1500, 1507], "decai": 1249, "decibel": [1273, 1422], "decid": 1712, "decim": [1399, 1526], "decimal_plac": 1399, "decor": [1122, 1248, 1344, 1446, 1447, 1490], "decreas": [1277, 1496, 1503], "dedic": [1229, 1527, 1528], "deduc": 1612, "deem": [1392, 1393], "deepcopi": [1131, 1144, 1166, 1171, 1187], "def": [1230, 1239, 1284, 1385, 1720], "default": [2, 4, 10, 11, 22, 52, 53, 78, 98, 105, 230, 308, 309, 314, 315, 339, 421, 453, 485, 493, 499, 503, 508, 531, 536, 567, 569, 570, 603, 609, 610, 656, 702, 846, 881, 1012, 1013, 1014, 1015, 1018, 1030, 1056, 1059, 1064, 1084, 1115, 1122, 1138, 1159, 1202, 1212, 1218, 1221, 1224, 1225, 1228, 1238, 1239, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1286, 1306, 1308, 1344, 1345, 1365, 1380, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1426, 1430, 1433, 1434, 1436, 1439, 1441, 1447, 1448, 1450, 1456, 1466, 1467, 1480, 1485, 1490, 1495, 1496, 1498, 1499, 1500, 1502, 1503, 1505, 1506, 1507, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1534, 1536, 1538, 1539, 1540, 1541, 1543, 1544, 1616, 1625, 1642, 1695, 1697, 1704, 1710, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1721, 1722, 1725, 1726, 1727, 1728, 1729], "default_farm_output": [0, 1, 10, 18], "default_format_dict": [1115, 1117], "default_partial_wak": [567, 570], "default_reading_paramet": [1115, 1118], "default_writing_paramet": [1115, 1119], "defaultconv": [78, 79, 1695, 1715, 1726], "defaultrunn": [1625, 1626, 1704, 1710], "deficit": [875, 881, 910, 915, 921, 948, 949, 954, 960, 961, 966, 972, 973, 978, 984, 990, 991, 996, 1702, 1707, 1710, 1713, 1714, 1715, 1727, 1728, 1729], "defin": [434, 769, 1122, 1206, 1239, 1240, 1249, 1254, 1255, 1258, 1265, 1273, 1279, 1280, 1281, 1282, 1283, 1319, 1382, 1385, 1386, 1387, 1390, 1412, 1413, 1414, 1419, 1422, 1423, 1429, 1430, 1439, 1441, 1449, 1466, 1468, 1481, 1511, 1514, 1517, 1518, 1521, 1527, 1528, 1529, 1530, 1543, 1702, 1706, 1710, 1713, 1714, 1721, 1723, 1726, 1729, 1731], "definit": [1257, 1282, 1283, 1642], "deg": [74, 75, 1716], "degre": [1058, 1060, 1122, 1159, 1208, 1218, 1330, 1342, 1343, 1418, 1423, 1424, 1432, 1435, 1472, 1473, 1485, 1486, 1487, 1488, 1489, 1562, 1639, 1640, 1652, 1654, 1655, 1681, 1686, 1687, 1704, 1706, 1710, 1714, 1715, 1720, 1729], "del_model_data": [0, 10, 18, 308, 311], "delattr": 1564, "deleg": 1196, "delet": [1472, 1486, 1499, 1506], "delta": [65, 68, 69, 73, 74, 77, 78, 370, 371, 372, 373, 374, 375, 376, 392, 394, 395, 398, 438, 465, 467, 468, 470, 471, 472, 473, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 626, 627, 660, 661, 695, 698, 780, 781, 795, 796, 810, 811, 812, 813, 815, 816, 817, 820, 822, 823, 825, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 863, 865, 867, 870, 872, 874, 880, 883, 909, 912, 914, 920, 926, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 951, 952, 954, 957, 958, 960, 963, 964, 966, 969, 970, 972, 975, 976, 978, 981, 982, 984, 987, 988, 990, 993, 994, 996, 999, 1000, 1009, 1030, 1563, 1702, 1710, 1713, 1715, 1724, 1726], "delta_far": [886, 890], "delta_near": [886, 891], "delta_t": 1030, "delta_wd": [1563, 1704], "demi": 1523, "demibold": 1523, "demonstr": [1710, 1714, 1716, 1721, 1725, 1728, 1729], "denomin": [105, 165, 230, 277], "denot": 1713, "denpend": [813, 1707], "densiti": [420, 516, 517, 523, 524, 707, 709, 729, 1088, 1122, 1257, 1265, 1273, 1385, 1386, 1387, 1403, 1422, 1511, 1520, 1538, 1539, 1649, 1676, 1702, 1706, 1710, 1717, 1719], "densitii": [713, 714, 721, 722, 735, 736], "density_i": 1520, "density_x": 1520, "depend": [332, 414, 594, 618, 619, 632, 643, 714, 722, 729, 730, 735, 736, 810, 813, 820, 821, 823, 826, 853, 860, 864, 867, 871, 874, 877, 909, 913, 914, 917, 920, 923, 1131, 1156, 1157, 1158, 1161, 1166, 1181, 1182, 1183, 1187, 1194, 1196, 1239, 1240, 1301, 1390, 1401, 1402, 1413, 1420, 1423, 1424, 1433, 1434, 1498, 1499, 1505, 1506, 1512, 1514, 1517, 1518, 1645, 1670, 1702, 1706, 1707, 1710, 1712, 1713, 1717, 1719, 1722, 1727, 1729, 1732], "dependeci": 1710, "deprec": [1122, 1123, 1126, 1257, 1412, 1414, 1420], "deprecationwarn": [1564, 1714, 1715], "depth": [1131, 1143, 1166, 1187, 1437, 1503], "derat": [660, 1086, 1665, 1703, 1706, 1710, 1721, 1723], "deriv": [318, 397, 417, 423, 442, 447, 451, 458, 469, 845, 852, 1046, 1122, 1561, 1704, 1710, 1713, 1714], "describ": [420, 1239, 1257, 1282, 1283, 1326, 1404, 1419, 1480, 1701, 1712, 1713, 1716, 1717, 1725], "descript": [1056, 1059, 1084, 1239, 1240, 1243, 1248, 1290, 1293, 1301, 1386, 1390, 1412, 1413, 1414, 1419, 1436, 1439, 1441, 1449, 1518, 1520, 1692, 1693, 1701, 1702, 1707], "descriptor": [105, 179, 230], "design": [410, 413, 415, 630, 631, 633, 636, 639, 643, 646, 1060, 1187, 1265, 1273, 1413, 1422, 1500, 1507, 1511], "design_point": [410, 413, 630, 631, 636, 639, 643, 646], "desir": [1083, 1122, 1290, 1390, 1404, 1427, 1713, 1729], "detail": [1238, 1239, 1240, 1265, 1267, 1273, 1279, 1338, 1387, 1390, 1402, 1403, 1412, 1414, 1415, 1420, 1422, 1433, 1434, 1441, 1467, 1511, 1512, 1513, 1518, 1520, 1712, 1727, 1731], "determin": [803, 880, 881, 886, 901, 1030, 1123, 1126, 1228, 1239, 1257, 1282, 1283, 1382, 1383, 1385, 1390, 1419, 1423, 1430, 1466, 1467, 1490, 1512, 1523, 1527, 1528, 1543, 1710, 1713], "detrend": [1122, 1228, 1265, 1273, 1422, 1511, 1543], "detrend_linear": [1265, 1273, 1422, 1511], "detrend_mean": [1265, 1273, 1422, 1511], "detrend_non": [1122, 1228, 1265, 1273, 1422, 1511, 1543], "dev": 1712, "develop": [1564, 1711], "deviat": [1016, 1026, 1419, 1713], "df": [1714, 1715], "diagon": [105, 178, 230], "diagram": 1439, "diamet": [434, 435, 443, 444, 483, 643, 644, 860, 1007, 1008, 1009, 1423, 1659, 1702, 1706, 1710, 1713, 1714], "diamond": [1419, 1423], "dict": [0, 2, 4, 5, 11, 12, 16, 17, 18, 19, 22, 23, 40, 44, 46, 47, 48, 54, 58, 62, 68, 73, 74, 75, 77, 82, 85, 86, 87, 96, 308, 309, 314, 315, 316, 318, 320, 321, 325, 326, 328, 333, 334, 338, 345, 346, 347, 348, 352, 354, 358, 361, 365, 371, 372, 373, 374, 375, 376, 378, 388, 394, 395, 398, 400, 403, 407, 412, 417, 422, 423, 428, 429, 430, 441, 442, 447, 449, 453, 458, 460, 467, 468, 469, 470, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 498, 499, 500, 502, 503, 505, 506, 509, 518, 519, 523, 524, 525, 531, 533, 534, 538, 545, 546, 549, 550, 551, 552, 553, 561, 562, 563, 564, 565, 567, 572, 584, 592, 593, 598, 602, 606, 612, 616, 618, 619, 620, 621, 624, 628, 632, 651, 653, 655, 656, 657, 658, 663, 667, 668, 669, 674, 675, 681, 682, 686, 687, 693, 696, 699, 704, 707, 709, 711, 713, 714, 716, 718, 721, 722, 724, 726, 729, 730, 731, 733, 735, 736, 738, 740, 743, 744, 747, 748, 751, 752, 755, 756, 758, 759, 760, 763, 767, 780, 781, 788, 789, 795, 796, 802, 803, 811, 812, 813, 814, 815, 816, 817, 822, 824, 825, 827, 833, 834, 836, 841, 843, 848, 850, 856, 858, 861, 863, 865, 868, 870, 872, 875, 880, 881, 883, 907, 910, 912, 915, 920, 921, 926, 1005, 1009, 1011, 1021, 1022, 1023, 1032, 1033, 1034, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1048, 1050, 1051, 1053, 1054, 1055, 1060, 1061, 1064, 1065, 1066, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1088, 1089, 1090, 1098, 1099, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1115, 1120, 1121, 1122, 1238, 1239, 1241, 1246, 1249, 1250, 1254, 1255, 1257, 1259, 1265, 1267, 1273, 1277, 1279, 1382, 1403, 1415, 1418, 1419, 1420, 1422, 1424, 1490, 1499, 1506, 1512, 1523, 1533, 1538, 1539, 1548, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1615, 1616, 1618, 1619, 1624, 1626, 1632, 1633, 1634, 1642, 1698, 1704, 1717, 1723, 1724, 1726], "dictionari": [552, 553, 562, 563, 564, 565, 886, 907, 1048, 1098, 1100, 1101, 1102, 1121, 1122, 1254, 1255, 1257, 1259, 1267, 1421, 1424, 1466, 1490, 1499, 1506, 1523, 1538, 1539, 1704, 1710, 1713, 1720], "diego": 1636, "diff": 1386, "differ": [601, 1140, 1196, 1239, 1252, 1254, 1255, 1256, 1265, 1269, 1270, 1273, 1280, 1352, 1353, 1354, 1367, 1368, 1369, 1386, 1390, 1402, 1412, 1413, 1414, 1419, 1422, 1487, 1498, 1505, 1511, 1520, 1702, 1707, 1710, 1713, 1714, 1716, 1717, 1720, 1723], "digit": [551, 1713], "dim": [105, 110, 230, 325, 326, 327, 344, 377, 384, 427, 429, 430, 457, 561, 786, 1701], "dim_arrai": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "dim_map": [325, 328, 344, 377, 427], "dim_name_str": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "dim_tupl": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "dimens": [4, 5, 12, 22, 23, 52, 105, 196, 211, 216, 230, 289, 290, 291, 319, 325, 326, 327, 328, 334, 344, 384, 385, 414, 429, 430, 457, 561, 632, 786, 1016, 1032, 1033, 1034, 1051, 1122, 1131, 1142, 1148, 1153, 1154, 1166, 1175, 1179, 1187, 1191, 1193, 1248, 1254, 1255, 1290, 1387, 1390, 1412, 1413, 1414, 1423, 1436, 1449, 1525, 1640, 1694, 1697, 1702, 1715, 1716, 1719, 1724, 1725, 1726, 1729], "dimension": [685, 1254, 1387, 1419, 1702, 1703, 1710, 1722], "dimensionless": [984, 1710], "dir": 1564, "direct": [74, 75, 420, 516, 517, 523, 524, 636, 637, 643, 644, 775, 776, 1038, 1039, 1041, 1042, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1241, 1244, 1252, 1254, 1256, 1269, 1270, 1273, 1280, 1340, 1352, 1353, 1354, 1365, 1367, 1368, 1369, 1380, 1385, 1386, 1390, 1418, 1423, 1431, 1432, 1439, 1441, 1483, 1485, 1496, 1503, 1514, 1518, 1520, 1525, 1542, 1545, 1563, 1564, 1596, 1597, 1638, 1639, 1640, 1641, 1652, 1681, 1693, 1694, 1700, 1702, 1704, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1722, 1723, 1725, 1727, 1728, 1729], "directli": [615, 1084, 1090, 1254, 1282, 1283, 1351, 1366, 1385, 1390, 1401, 1420, 1423, 1431, 1432, 1539, 1700, 1702, 1703, 1704, 1707, 1710, 1714, 1723], "directori": [479, 1043, 1044, 1699], "disabl": [1248, 1449, 1466], "disc": [594, 609, 1710, 1713, 1722], "discontinu": [443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735], "discourag": [1122, 1468, 1527, 1528, 1529], "discov": 1710, "discret": [1280, 1385, 1710, 1713], "discuss": [1390, 1412, 1414], "disk": 1710, "displai": [1122, 1239, 1253, 1274, 1306, 1350, 1385, 1386, 1387, 1390, 1391, 1405, 1407, 1441, 1460, 1472, 1486, 1499, 1506, 1516, 1727, 1728], "disregard": 1390, "dist": [1566, 1570, 1576, 1580, 1584, 1587, 1591, 1594, 1598, 1602, 1606, 1610, 1713], "dist_insid": [1566, 1576, 1584, 1591, 1598, 1606], "dist_outsid": [1566, 1576, 1584, 1591, 1598, 1606], "distanc": [488, 860, 861, 1238, 1253, 1254, 1257, 1259, 1265, 1273, 1403, 1415, 1418, 1422, 1424, 1511, 1525, 1565, 1566, 1570, 1572, 1574, 1576, 1580, 1582, 1584, 1587, 1589, 1591, 1594, 1596, 1598, 1602, 1604, 1606, 1610, 1614, 1636, 1637, 1704, 1710, 1714, 1729], "distinct": 1257, "distinguish": [1254, 1257, 1259], "distribut": [1122, 1257, 1277, 1386, 1538, 1539, 1710, 1716, 1727], "distslicedwakemodel": [810, 813, 814, 815, 816, 817, 818, 819, 880, 1707, 1713], "ditto": 1419, "divid": [626, 627, 1072, 1073, 1074, 1075, 1076, 1077, 1273, 1385, 1386, 1422, 1520], "divmod": [105, 117, 141, 230, 236, 259, 1564], "dk": 867, "dname": [1056, 1059, 1084], "do": [18, 385, 1122, 1196, 1205, 1217, 1218, 1248, 1306, 1390, 1413, 1414, 1423, 1447, 1481, 1487, 1511, 1527, 1528, 1696, 1702, 1710, 1713, 1719, 1720, 1724, 1726, 1728], "doan": 1386, "doc": [1710, 1727], "docu": 1710, "document": [867, 1122, 1224, 1257, 1263, 1387, 1390, 1495, 1502, 1710, 1730], "doe": [710, 1138, 1150, 1176, 1187, 1192, 1225, 1239, 1244, 1254, 1261, 1271, 1272, 1344, 1350, 1390, 1413, 1423, 1471, 1513, 1527, 1528, 1529, 1536, 1702, 1713, 1719, 1721, 1724, 1726], "doesn": [1390, 1714, 1715], "doi": [577, 802, 845, 852, 853, 860, 874, 880, 886, 1710, 1711], "domain": [1520, 1717], "don": [1255, 1430, 1529, 1710, 1722], "done": [1260, 1385, 1436, 1724, 1726], "dot": [1280, 1388, 1419, 1423, 1517, 1527, 1540, 1713], "doubl": [165, 188, 1710], "down": [1390, 1423, 1710, 1714, 1727], "download": 1719, "downsampl": [1238, 1265, 1273, 1390, 1403, 1415, 1422, 1511], "downstream": [1713, 1715, 1729], "downward": 1390, "downwind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 19, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 348, 370, 373, 385, 392, 395, 412, 414, 438, 439, 453, 455, 457, 465, 466, 587, 589, 590, 594, 599, 601, 603, 606, 609, 615, 616, 632, 772, 778, 784, 786, 792, 799, 806, 810, 811, 812, 813, 815, 820, 821, 822, 823, 825, 826, 827, 830, 838, 845, 852, 853, 860, 863, 864, 867, 870, 871, 874, 877, 880, 883, 902, 909, 912, 913, 914, 917, 920, 923, 1693, 1695, 1696, 1710, 1713, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "downwind_index": [46, 48, 346, 348, 371, 372, 373, 385, 392, 394, 395, 412, 414, 438, 452, 453, 455, 456, 457, 465, 467, 471, 472, 580, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 632, 769, 772, 773, 775, 778, 779, 780, 784, 785, 786, 788, 792, 794, 795, 799, 800, 802, 806, 807, 810, 811, 812, 813, 815, 816, 820, 821, 822, 823, 825, 826, 827, 830, 833, 838, 841, 845, 848, 852, 853, 856, 860, 863, 864, 867, 870, 871, 874, 877, 880, 883, 886, 902, 905, 909, 912, 913, 914, 917, 920, 923, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999], "downwnd": [371, 372, 394, 456, 467, 472, 592, 593, 598, 612, 773, 779, 785, 794, 800, 807, 816, 833, 841, 848, 856, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999], "dpi": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1437, 1512, 1521, 1523], "dpoint": [413, 631, 639, 646], "drag_pan": [1122, 1274], "drama": 1724, "drang": 1420, "draw": [1122, 1239, 1241, 1246, 1249, 1250, 1251, 1252, 1255, 1256, 1257, 1259, 1269, 1270, 1275, 1279, 1344, 1352, 1353, 1354, 1367, 1368, 1369, 1382, 1385, 1386, 1392, 1393, 1399, 1407, 1414, 1418, 1439, 1440, 1442, 1443, 1444, 1446, 1471, 1513, 1514, 1517, 1520, 1521, 1525, 1527, 1528, 1530, 1538, 1539], "draw_artist": [1122, 1276, 1440], "draw_idl": 1427, "drawn": [1122, 1239, 1240, 1241, 1254, 1257, 1258, 1279, 1313, 1382, 1385, 1386, 1392, 1393, 1414, 1418, 1419, 1423, 1430, 1436, 1441, 1447, 1457, 1467, 1508, 1514, 1515, 1520, 1521, 1527, 1528, 1530], "drawstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512, 1518], "drop": [1277, 1412, 1414, 1710], "dt": [1713, 1718], "dt_min": [780, 781, 795, 796, 1718, 1724, 1726], "dtu": [867, 1715, 1724, 1726], "dtu10": 1716, "dtu10mw": [1713, 1714, 1715, 1716, 1718, 1720, 1724, 1726], "dtype": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 499, 1386, 1697, 1714, 1715, 1719], "due": [36, 1273, 1282, 1283, 1412, 1414, 1422, 1441, 1702, 1710, 1713, 1715, 1723], "dummi": 36, "dump": [105, 180, 181, 230], "duplic": [1255, 1277], "durat": 1030, "dure": [85, 94, 325, 326, 334, 352, 388, 422, 490, 491, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1065, 1122, 1202, 1221, 1274, 1695, 1696, 1703, 1710, 1713, 1718, 1726, 1727], "dwnd": [439, 466], "dx": [453, 920, 921, 1122, 1241, 1718], "dy": [1122, 1241], "dynam": [572, 780, 795, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528, 1612, 1702, 1704, 1709, 1711, 1713], "d\u00f6renk\u00e4mper": 1708, "e": [2, 308, 309, 332, 549, 551, 618, 619, 660, 661, 695, 698, 914, 1048, 1060, 1107, 1108, 1121, 1122, 1124, 1140, 1142, 1166, 1180, 1187, 1224, 1229, 1238, 1239, 1244, 1247, 1248, 1249, 1251, 1253, 1255, 1257, 1258, 1259, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1301, 1317, 1344, 1382, 1385, 1386, 1387, 1390, 1392, 1394, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1419, 1423, 1424, 1427, 1430, 1431, 1432, 1435, 1439, 1441, 1446, 1448, 1449, 1459, 1466, 1468, 1485, 1499, 1500, 1506, 1507, 1511, 1513, 1517, 1518, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1538, 1539, 1548, 1564, 1616, 1634, 1700, 1702, 1710, 1711, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1722, 1724, 1729, 1732], "e1": [860, 861], "e2": [860, 861], "e3": [860, 861], "each": [89, 105, 216, 230, 332, 344, 346, 365, 407, 427, 434, 435, 549, 551, 729, 735, 775, 811, 812, 815, 822, 827, 883, 905, 1018, 1037, 1040, 1041, 1042, 1088, 1107, 1108, 1122, 1131, 1142, 1159, 1166, 1187, 1239, 1240, 1252, 1255, 1256, 1257, 1258, 1259, 1265, 1269, 1270, 1273, 1279, 1280, 1281, 1282, 1283, 1296, 1382, 1385, 1386, 1387, 1388, 1393, 1404, 1412, 1414, 1416, 1418, 1419, 1422, 1423, 1436, 1442, 1448, 1472, 1486, 1497, 1499, 1500, 1504, 1506, 1507, 1511, 1513, 1517, 1520, 1521, 1529, 1538, 1539, 1540, 1617, 1696, 1702, 1710, 1713, 1714, 1715, 1716, 1721, 1722, 1725, 1726, 1727, 1728, 1729], "earli": 1128, "easili": [1254, 1725], "east": 1723, "ec": [1241, 1247, 1251, 1254, 1255, 1258, 1282, 1283, 1385, 1392, 1412, 1414, 1423], "ecdf": [1122, 1277], "ech": [1038, 1039], "ecolor": [1122, 1255, 1279], "econom": 1711, "edg": [1122, 1166, 1239, 1252, 1253, 1255, 1256, 1257, 1279, 1282, 1283, 1345, 1385, 1386, 1387, 1399, 1412, 1413, 1414, 1423, 1424, 1430, 1441, 1490, 1514, 1518, 1519, 1521, 1527, 1528, 1530], "edgecolor": [1241, 1247, 1251, 1252, 1254, 1255, 1256, 1258, 1282, 1283, 1385, 1392, 1412, 1414, 1423, 1430, 1721], "educ": 1711, "eff": [1020, 1115, 1117, 1660, 1706, 1727], "effect": [39, 46, 80, 392, 410, 412, 438, 439, 465, 466, 589, 603, 609, 630, 636, 643, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1122, 1131, 1137, 1187, 1188, 1254, 1275, 1277, 1382, 1386, 1387, 1423, 1427, 1430, 1446, 1447, 1465, 1471, 1646, 1647, 1648, 1673, 1674, 1675, 1694, 1695, 1702, 1706, 1710, 1713, 1714, 1715, 1720, 1721, 1722, 1723, 1728, 1729], "effici": [1016, 1019, 1020, 1122, 1265, 1273, 1276, 1422, 1425, 1452, 1511, 1660, 1706, 1710, 1713, 1719, 1721, 1727, 1728], "egg": 1712, "einstein": [1016, 1035, 1710], "einsum": 1035, "either": [414, 498, 499, 503, 505, 531, 533, 618, 619, 632, 685, 686, 868, 1065, 1066, 1089, 1090, 1240, 1243, 1249, 1254, 1255, 1258, 1259, 1277, 1295, 1308, 1386, 1390, 1412, 1424, 1430, 1436, 1439, 1500, 1507, 1514, 1527, 1528, 1529, 1530, 1534, 1704, 1706, 1710, 1712, 1713, 1723, 1726], "element": [105, 191, 212, 230, 577, 636, 637, 643, 644, 1238, 1258, 1265, 1273, 1337, 1350, 1352, 1353, 1354, 1367, 1368, 1369, 1386, 1403, 1414, 1415, 1419, 1422, 1423, 1513, 1521, 1527, 1528, 1722], "elimin": [1412, 1430], "elinewidth": 1279, "ellipsi": 1564, "els": [105, 115, 230, 234, 328, 632, 1058, 1060, 1101, 1102, 1287, 1288, 1720], "emit": [1122, 1203, 1248, 1474, 1496, 1503], "emodel": [46, 47], "emodels_cpar": [46, 47], "empir": [860, 1122, 1277, 1707], "empti": [370, 376, 438, 465, 470, 587, 589, 590, 810, 813, 820, 823, 830, 836, 838, 843, 845, 850, 852, 860, 865, 867, 872, 874, 880, 909, 914, 920, 926, 1254, 1257, 1385, 1419, 1500, 1507], "emptybarb": 1254, "en": [1254, 1257, 1259], "enabl": [1122, 1208, 1210, 1243, 1257, 1259, 1466, 1471, 1527, 1528, 1710, 1711], "enclos": 1286, "encodingwarn": 1564, "end": [490, 491, 1035, 1092, 1107, 1113, 1115, 1120, 1121, 1140, 1239, 1241, 1253, 1254, 1257, 1259, 1277, 1286, 1306, 1388, 1404, 1497, 1499, 1504, 1506, 1540], "end_pan": [1122, 1278], "energi": [838, 845, 852, 853, 1711, 1713, 1719], "english": 1526, "enhanc": [1098, 1704], "enjoi": 1710, "enough": 1248, "ensur": [385, 457, 786, 1196, 1306, 1390, 1512, 1531, 1532, 1536, 1714, 1715], "ensure_vari": [39, 42, 46, 52, 56, 60, 80, 85, 94, 335, 346, 356, 359, 362, 369, 399, 401, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735], "enter": [385, 457, 483, 786, 1385], "entir": [1218, 1277, 1538, 1539], "entri": [0, 10, 16, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 314, 315, 321, 323, 325, 327, 332, 335, 344, 346, 352, 356, 362, 369, 370, 377, 379, 385, 388, 392, 399, 404, 410, 420, 422, 427, 434, 438, 440, 443, 448, 452, 459, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 566, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 904, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1048, 1121, 1255, 1257, 1259, 1277, 1399, 1427, 1701, 1710, 1716, 1723], "entry_point": [10, 16], "enumer": [1564, 1714, 1715], "environ": [18, 1696, 1710], "environmenterror": 1564, "eof": 1564, "eoferror": 1564, "epsilon": [1140, 1466], "eq": 1710, "eqn": 860, "equal": [105, 165, 1140, 1141, 1238, 1248, 1257, 1265, 1273, 1386, 1390, 1403, 1405, 1412, 1414, 1415, 1418, 1420, 1422, 1435, 1441, 1449, 1456, 1511, 1512, 1520, 1643, 1657, 1660, 1706, 1713, 1722], "equat": [984, 1710], "equidist": [1412, 1414], "equival": [984, 1158, 1161, 1163, 1164, 1182, 1183, 1185, 1186, 1194, 1195, 1273, 1320, 1385, 1394, 1419, 1496, 1503, 1509, 1510, 1526, 1710, 1713, 1722, 1727, 1729], "error": [384, 385, 392, 393, 479, 490, 594, 597, 599, 601, 603, 609, 611, 615, 867, 1090, 1096, 1255, 1277, 1279, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1496, 1503, 1527, 1528, 1727], "error_kw": 1255, "errorbar": [1122, 1253, 1255, 1279], "errorbar_featur": [1255, 1279], "errorbarcontain": 1279, "erroreveri": 1279, "estim": [1257, 1538, 1539], "et": [838, 845, 852, 853, 1713, 1714], "etc": [1009, 1122, 1238, 1249, 1252, 1256, 1265, 1269, 1270, 1273, 1344, 1385, 1387, 1390, 1403, 1412, 1413, 1414, 1415, 1422, 1423, 1425, 1430, 1439, 1441, 1511, 1520, 1527, 1528, 1710, 1713, 1718], "europ": 1711, "eval": 1564, "eval_rpoint_result": [410, 414, 630, 632, 636, 643], "evalu": [0, 18, 46, 47, 65, 68, 69, 73, 74, 77, 78, 410, 414, 449, 452, 454, 456, 457, 467, 594, 595, 630, 632, 636, 643, 744, 748, 752, 756, 760, 763, 767, 769, 771, 773, 775, 777, 779, 780, 783, 785, 786, 788, 791, 794, 795, 798, 800, 802, 805, 807, 810, 816, 833, 841, 848, 856, 858, 1016, 1084, 1538, 1539, 1550, 1551, 1553, 1554, 1555, 1558, 1564, 1635, 1695, 1696, 1702, 1703, 1708, 1710, 1711, 1713, 1718, 1720, 1723, 1724, 1725, 1726, 1727, 1731], "even": [1131, 1140, 1155, 1166, 1187, 1280, 1386, 1427, 1512, 1536, 1729], "evenli": 1520, "event": [1122, 1238, 1246, 1249, 1250, 1265, 1267, 1273, 1277, 1279, 1280, 1306, 1312, 1382, 1391, 1403, 1415, 1416, 1419, 1420, 1422, 1456, 1466, 1512, 1531, 1532], "eventcollect": 1280, "eventplot": [1122, 1280], "ever": 1254, "everi": [18, 19, 643, 644, 1218, 1282, 1283, 1385, 1399, 1419, 1518, 1712, 1724], "everyth": 1730, "exact": [1239, 1527, 1528, 1713, 1720], "exactli": [105, 165, 314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1140, 1390, 1513, 1713], "exampl": [503, 1088, 1241, 1255, 1279, 1281, 1390, 1404, 1418, 1419, 1472, 1481, 1486, 1487, 1497, 1504, 1536, 1564, 1702, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "exce": 1721, "exceed": [490, 549, 551, 1521], "except": [344, 1203, 1218, 1228, 1238, 1246, 1250, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1511, 1512, 1513, 1514, 1517, 1520, 1528, 1539, 1540, 1543, 1564], "exceptiongroup": 1564, "exclud": [1123, 1126, 1282, 1283, 1308, 1386, 1426, 1440, 1710], "exclus": [1527, 1528, 1529, 1530], "exec": 1564, "exec_python": [1564, 1704], "exect": 566, "execut": [5, 23, 40, 44, 48, 54, 58, 62, 82, 87, 96, 333, 336, 338, 348, 358, 365, 400, 407, 441, 454, 492, 506, 518, 525, 534, 584, 620, 624, 628, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 771, 777, 783, 791, 798, 805, 1404, 1456, 1564, 1618, 1625, 1702, 1704, 1712], "exercis": 1720, "exist": [99, 321, 386, 674, 808, 818, 828, 835, 842, 849, 857, 878, 884, 886, 905, 906, 918, 925, 1096, 1122, 1230, 1394, 1414, 1420, 1468, 1527, 1528, 1713, 1718, 1725, 1729], "exit": 1564, "expand": [1202, 1221, 1244, 1254, 1337, 1412, 1414, 1423, 1480, 1497, 1500, 1504, 1507, 1523], "expans": [1244, 1500, 1507, 1519, 1713], "expect": [414, 481, 482, 632, 674, 685, 1257, 1385, 1386, 1390, 1519, 1713, 1717, 1719], "experiment": [802, 880, 886, 1392, 1393, 1413, 1431, 1432], "explain": 1710, "explan": [1327, 1412, 1527, 1528, 1529], "explicit": [1248, 1254, 1385, 1387, 1390, 1412, 1413, 1414, 1419, 1423, 1430, 1527, 1528, 1612, 1618, 1619, 1710, 1717], "explicitli": [1122, 1301, 1387, 1390, 1397, 1423, 1440, 1468, 1499, 1500, 1506, 1507, 1512, 1525, 1527, 1528, 1564, 1710, 1713], "explod": [1122, 1418], "explor": 1719, "expon": [565, 714, 722, 730, 736, 762, 1385, 1553, 1677, 1702, 1706, 1710, 1729], "exponenti": 1249, "export": [1115, 1710], "express": 1035, "extend": [335, 577, 1122, 1138, 1225, 1257, 1259, 1282, 1283, 1412, 1414, 1518, 1527, 1528, 1534, 1538, 1539, 1695, 1696, 1698, 1702, 1708, 1711], "extendedst": [335, 336, 337, 338, 339, 340, 341, 342, 343, 1698, 1710], "extent": [1238, 1258, 1265, 1273, 1344, 1385, 1390, 1403, 1415, 1422, 1511, 1527, 1528], "extra": [46, 47, 1072, 1073, 1074, 1075, 1076, 1077, 1240, 1441, 1512, 1523, 1692], "extract": 1616, "extrem": [1257, 1259, 1727], "extrema": [1538, 1539], "f": [385, 650, 651, 1043, 1044, 1122, 1166, 1180, 1238, 1265, 1273, 1403, 1415, 1422, 1472, 1486, 1511, 1562, 1714, 1715, 1719, 1720, 1721, 1724, 1726, 1727, 1728, 1729], "face": [1254, 1255, 1258, 1282, 1283, 1385, 1412, 1414, 1419, 1423, 1424, 1430, 1529], "facecolor": [1122, 1241, 1247, 1251, 1254, 1255, 1258, 1282, 1283, 1309, 1385, 1392, 1412, 1414, 1423, 1430, 1435, 1453, 1523, 1529], "fact": [1715, 1729], "factor": [85, 86, 285, 577, 660, 661, 685, 686, 860, 861, 874, 875, 914, 915, 920, 921, 1337, 1390, 1431, 1432, 1480, 1520, 1539, 1551, 1555, 1614, 1664, 1697, 1702, 1705, 1706, 1710, 1713, 1729], "factor_p": [660, 661], "factori": [0, 10, 18, 94, 308, 318, 335, 392, 397, 410, 417, 420, 423, 438, 440, 442, 443, 447, 448, 451, 452, 458, 465, 469, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 594, 599, 601, 603, 609, 615, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1007, 1016, 1036, 1043, 1046, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1101, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1547, 1548, 1704, 1710, 1713, 1718], "fail": [1612, 1710, 1713, 1714, 1715, 1726], "fall": [1287, 1288, 1527, 1726], "fals": [0, 4, 5, 6, 10, 18, 19, 39, 42, 46, 52, 56, 60, 80, 85, 94, 99, 105, 115, 188, 230, 234, 308, 312, 321, 323, 325, 331, 332, 335, 344, 346, 356, 357, 362, 369, 370, 377, 379, 384, 385, 386, 392, 399, 404, 410, 412, 414, 420, 427, 438, 440, 443, 448, 452, 457, 459, 465, 471, 483, 490, 491, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 627, 630, 632, 636, 643, 650, 655, 660, 667, 673, 678, 679, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 743, 746, 747, 750, 751, 754, 755, 758, 762, 765, 769, 775, 780, 786, 788, 795, 802, 808, 810, 813, 818, 820, 823, 828, 830, 835, 838, 839, 842, 845, 846, 849, 852, 853, 854, 857, 860, 861, 867, 874, 878, 880, 884, 886, 906, 909, 914, 918, 920, 925, 928, 933, 938, 943, 948, 949, 954, 960, 961, 966, 972, 973, 978, 984, 990, 991, 996, 1007, 1008, 1009, 1016, 1018, 1024, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1049, 1051, 1052, 1054, 1055, 1056, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1089, 1101, 1102, 1122, 1128, 1131, 1151, 1152, 1153, 1155, 1159, 1166, 1178, 1187, 1228, 1239, 1241, 1243, 1244, 1248, 1254, 1255, 1257, 1259, 1273, 1275, 1277, 1279, 1282, 1283, 1296, 1308, 1327, 1344, 1363, 1364, 1365, 1378, 1379, 1380, 1385, 1386, 1387, 1390, 1392, 1393, 1394, 1398, 1404, 1412, 1413, 1414, 1418, 1420, 1422, 1426, 1430, 1436, 1439, 1441, 1448, 1451, 1456, 1474, 1481, 1496, 1499, 1500, 1503, 1506, 1507, 1514, 1520, 1525, 1526, 1536, 1538, 1539, 1543, 1564, 1565, 1566, 1570, 1572, 1574, 1576, 1580, 1582, 1587, 1589, 1594, 1596, 1602, 1604, 1606, 1610, 1616, 1634, 1704, 1710, 1714, 1715, 1717, 1718, 1722], "famili": [1424, 1523], "fanci": 1239, "fancyarrow": 1241, "fancyarrowpatch": [1239, 1520], "fancybboxpatch": 1523, "fantasi": 1523, "far": [803, 880, 881, 886, 901, 1246, 1710], "farm": [0, 2, 4, 5, 10, 12, 18, 19, 22, 23, 25, 27, 28, 34, 39, 40, 44, 48, 54, 56, 58, 62, 67, 72, 76, 80, 82, 87, 93, 96, 228, 308, 309, 322, 338, 344, 346, 348, 349, 356, 358, 359, 362, 365, 369, 371, 372, 373, 374, 375, 376, 385, 394, 395, 396, 398, 400, 401, 407, 410, 412, 414, 415, 434, 435, 441, 453, 454, 455, 456, 457, 467, 468, 470, 472, 473, 474, 475, 477, 483, 484, 485, 486, 487, 488, 489, 492, 506, 518, 525, 534, 552, 559, 563, 567, 580, 581, 584, 592, 593, 598, 600, 606, 607, 612, 616, 617, 620, 624, 628, 632, 633, 650, 651, 653, 657, 663, 669, 675, 678, 681, 687, 693, 696, 699, 702, 704, 711, 716, 724, 731, 738, 769, 771, 772, 773, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 802, 805, 806, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 856, 858, 861, 863, 864, 865, 870, 871, 872, 877, 880, 883, 902, 912, 913, 917, 923, 926, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1007, 1008, 1009, 1010, 1011, 1016, 1017, 1018, 1019, 1020, 1023, 1024, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1049, 1050, 1052, 1053, 1056, 1057, 1058, 1060, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1085, 1693, 1694, 1695, 1697, 1698, 1700, 1701, 1702, 1703, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "farm_calc": 1016, "farm_control": [0, 2, 567, 580, 1718], "farm_df": [1726, 1729], "farm_hubh_data": 1718, "farm_kti": 1718, "farm_kti_amb": 1718, "farm_layout": [483, 484, 485, 486, 487, 488, 489, 1714, 1715, 1716, 1717, 1719, 1721, 1723, 1724, 1725, 1726, 1727, 1728], "farm_model": [567, 581, 582, 583, 584, 585, 586, 1718], "farm_pmask": 1718, "farm_result": [0, 4, 5, 10, 12, 18, 22, 23, 27, 34, 552, 1007, 1008, 1016, 1017, 1036, 1049, 1050, 1052, 1053, 1070, 1071, 1078, 1079, 1081, 1082, 1714, 1715, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "farm_thrust2ct": 1718, "farm_yaw2yawm": 1718, "farm_yawm2yaw": 1718, "farm_yield": 1023, "farmcontrol": [0, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 567, 580, 1698, 1702], "farmdatamodel": [39, 42, 52, 56, 80, 85, 346, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 369, 410, 440, 1694, 1695, 1698], "farmdatamodellist": [346, 362, 363, 364, 365, 366, 367, 368, 1698], "farmlayoutoutput": [1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1703, 1710, 1715, 1716, 1719, 1723, 1724, 1726, 1727, 1728], "farmmodel": [369, 567, 581, 1698, 1702], "farmoptproblem": 1710, "farmord": [769, 770, 771, 772, 773, 774, 1702, 1718], "farmresultsev": [1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1703, 1710, 1719, 1721, 1726, 1727, 1728], "farmvarsproblem": 1710, "farmwakescalcul": [39, 40, 41, 80, 81, 82, 83, 84, 1694, 1695, 1715, 1724, 1726], "farmwakescalculation_instance3": 1726, "farthest": 1257, "fast": [1413, 1562, 1711, 1713, 1720], "faster": [1412, 1413, 1414, 1430, 1727], "fastest": 1413, "favor": 1468, "fc": [334, 385, 457, 786, 1122, 1238, 1241, 1247, 1251, 1254, 1255, 1258, 1265, 1273, 1282, 1283, 1385, 1392, 1403, 1412, 1414, 1415, 1422, 1423, 1435, 1511, 1714, 1715, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "fd": 1386, "fdata": [18, 28, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 94, 96, 335, 338, 344, 345, 346, 348, 356, 358, 359, 362, 365, 369, 370, 371, 372, 373, 374, 375, 376, 382, 384, 385, 392, 394, 395, 396, 398, 399, 400, 401, 404, 407, 410, 412, 414, 415, 420, 438, 440, 441, 443, 452, 453, 454, 455, 456, 457, 465, 467, 468, 470, 471, 472, 473, 490, 492, 498, 501, 503, 506, 514, 516, 518, 523, 525, 531, 534, 544, 547, 580, 581, 584, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 615, 616, 617, 618, 620, 623, 624, 626, 628, 630, 632, 633, 636, 643, 650, 653, 655, 657, 660, 663, 667, 669, 673, 675, 678, 681, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 721, 724, 729, 731, 735, 738, 769, 771, 772, 773, 775, 777, 778, 779, 780, 783, 784, 785, 786, 788, 791, 792, 793, 794, 795, 798, 799, 800, 802, 805, 806, 807, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 823, 825, 826, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 880, 883, 886, 902, 909, 912, 913, 914, 917, 920, 923, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 954, 957, 958, 960, 963, 964, 966, 969, 970, 972, 975, 976, 978, 981, 982, 984, 987, 988, 990, 993, 994, 996, 999, 1000, 1698, 1710], "fdict": [567, 1101, 1102, 1103, 1104, 1105, 1106, 1704, 1710], "featur": [1254, 1414, 1518, 1710, 1723], "feder": 1711, "feel": 1716, "fernando": [802, 874, 880, 886], "fft": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "field": [328, 561, 984, 1016, 1035, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1254, 1423, 1701, 1713, 1715, 1717, 1720, 1725, 1728, 1729, 1731], "fielddatanc": [490, 491, 492, 493, 494, 495, 496, 497, 1701, 1710, 1717], "fig": [1002, 1003, 1004, 1006, 1009, 1016, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1062, 1064, 1089, 1122, 1289, 1317, 1344, 1394, 1455, 1459, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "figsiz": [1007, 1009, 1016, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1062, 1064, 1078, 1080, 1088, 1089, 1122, 1289, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1725, 1726, 1727, 1728], "figur": [1002, 1003, 1007, 1009, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1056, 1060, 1064, 1084, 1089, 1122, 1238, 1239, 1240, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1289, 1301, 1311, 1317, 1327, 1344, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1435, 1440, 1449, 1455, 1459, 1467, 1472, 1486, 1499, 1506, 1512, 1521, 1523, 1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606, 1710, 1714, 1715, 1725, 1727], "figurecanvasbas": 1427, "file": [479, 481, 482, 483, 484, 485, 486, 490, 491, 498, 499, 503, 505, 531, 533, 544, 545, 551, 552, 553, 566, 569, 618, 619, 656, 673, 674, 685, 686, 706, 707, 708, 709, 713, 714, 721, 722, 729, 730, 735, 736, 867, 1007, 1012, 1013, 1014, 1015, 1016, 1036, 1043, 1044, 1045, 1048, 1049, 1051, 1052, 1054, 1055, 1056, 1061, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1090, 1092, 1093, 1094, 1095, 1096, 1115, 1120, 1121, 1414, 1613, 1615, 1616, 1617, 1633, 1642, 1699, 1700, 1701, 1702, 1703, 1704, 1710, 1711, 1712, 1713, 1717, 1719, 1723, 1725, 1726, 1727, 1728], "file_man": 1093, "file_nam": [479, 481, 1007, 1016, 1036, 1043, 1048, 1049, 1052, 1056, 1061, 1070, 1078, 1081, 1084, 1086, 1090, 1093, 1096, 1699, 1700], "file_name_a": [482, 1699, 1700], "file_name_b": [482, 1699, 1700], "file_name_input_yaml": [552, 553], "file_name_output_yaml": [552, 553], "file_path": [479, 485, 486, 551, 1007, 1012, 1013, 1014, 1015, 1052, 1054, 1055, 1090, 1094, 1095, 1115, 1120, 1121, 1701], "file_sfx": [479, 1090, 1092], "fileexistserror": 1564, "filenotfounderror": 1564, "fill": [105, 182, 230, 370, 375, 376, 392, 398, 470, 479, 490, 587, 589, 590, 594, 599, 601, 603, 609, 615, 836, 843, 850, 865, 872, 926, 1060, 1122, 1241, 1247, 1248, 1251, 1254, 1255, 1270, 1281, 1282, 1283, 1385, 1386, 1390, 1392, 1412, 1414, 1419, 1423, 1430, 1441, 1513, 1514, 1517, 1527, 1528, 1538, 1539, 1566, 1576, 1584, 1591, 1598, 1606, 1699], "fill_between": [1122, 1281, 1282, 1283, 1513], "fill_betweenx": [1122, 1282, 1283], "fill_empti": 1254, "fill_mod": [1566, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1606], "fill_valu": 490, "fillstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "filter": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1284, 1291, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1437, 1480, 1511, 1512, 1521, 1523, 1564], "filter_func": [1122, 1437], "filternorm": 1390, "filterrad": 1390, "final": [0, 4, 5, 6, 10, 12, 18, 22, 23, 39, 42, 46, 52, 56, 60, 80, 85, 89, 91, 94, 308, 312, 323, 332, 335, 346, 350, 354, 356, 362, 369, 370, 373, 374, 379, 383, 392, 395, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 468, 471, 473, 490, 498, 501, 503, 507, 514, 516, 523, 531, 535, 544, 547, 552, 554, 567, 571, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 606, 609, 615, 616, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 717, 721, 725, 729, 732, 735, 739, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 817, 820, 823, 830, 834, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 924, 928, 932, 933, 937, 938, 942, 943, 947, 948, 949, 952, 954, 955, 958, 960, 961, 964, 966, 967, 970, 972, 973, 976, 978, 979, 982, 984, 985, 988, 990, 991, 994, 996, 997, 1000, 1065, 1618, 1620, 1625, 1627, 1629, 1694, 1710, 1714, 1723, 1726, 1728], "final_par": [346, 354, 580], "final_wake_delta": [373, 395, 473, 606, 616, 932, 937, 942, 947, 952, 958, 964, 970, 976, 982, 988, 994, 1000], "finalis": 1714, "finalize_farm_wak": [370, 373, 587, 589, 590], "finalize_point_wak": [370, 374, 587, 589, 590], "finalize_wak": [392, 395, 594, 599, 601, 603, 606, 609, 615, 616], "finalize_wake_delta": [438, 465, 468, 810, 813, 817, 820, 823, 830, 834, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920], "find": [1122, 1284, 1692, 1699, 1710], "findobj": [1122, 1284], "fine": 1728, "finer": 1521, "finish": 1715, "finit": [105, 188, 230, 278, 1468, 1527, 1528], "fire": [1416, 1466], "first": [16, 67, 72, 76, 325, 331, 335, 344, 377, 385, 427, 482, 550, 729, 735, 775, 1058, 1060, 1122, 1123, 1130, 1243, 1253, 1255, 1257, 1259, 1277, 1279, 1282, 1283, 1386, 1387, 1390, 1394, 1398, 1405, 1413, 1414, 1496, 1503, 1508, 1511, 1517, 1520, 1527, 1528, 1529, 1530, 1702, 1710, 1712, 1713, 1714, 1715, 1719, 1720, 1727, 1728, 1729], "fit": [577, 1253, 1390, 1512, 1702], "fix": [427, 503, 505, 516, 531, 533, 1107, 1108, 1187, 1244, 1249, 1390, 1429, 1439, 1449, 1467, 1499, 1506, 1512, 1526, 1701, 1710, 1715], "fix_minu": [1208, 1210], "fixed_var": [490, 491, 503, 505, 531, 533, 547, 1713, 1716, 1717, 1721, 1723, 1726, 1727, 1728, 1729], "fixedformatt": [1499, 1500, 1506, 1507], "fixedloc": [1499, 1500, 1506, 1507], "flag": [0, 3, 4, 5, 10, 12, 18, 19, 22, 23, 31, 36, 39, 42, 46, 52, 56, 60, 67, 72, 76, 80, 85, 94, 105, 183, 230, 308, 323, 332, 335, 346, 348, 356, 357, 362, 369, 370, 379, 385, 387, 392, 393, 399, 404, 410, 420, 438, 439, 440, 443, 446, 448, 452, 453, 457, 459, 462, 464, 465, 466, 471, 486, 490, 491, 498, 501, 503, 514, 516, 523, 531, 544, 547, 552, 556, 574, 577, 580, 581, 587, 589, 590, 594, 597, 599, 601, 603, 609, 611, 615, 618, 623, 626, 630, 636, 637, 643, 644, 650, 655, 660, 667, 673, 678, 679, 685, 690, 695, 698, 701, 706, 708, 710, 713, 719, 721, 727, 729, 735, 742, 743, 746, 747, 750, 751, 754, 755, 758, 762, 765, 769, 775, 780, 786, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 861, 867, 874, 880, 886, 909, 914, 920, 921, 928, 933, 938, 943, 948, 949, 954, 960, 961, 966, 972, 973, 978, 984, 990, 991, 996, 1007, 1008, 1009, 1018, 1024, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1051, 1054, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1096, 1101, 1104, 1122, 1254, 1317, 1446, 1570, 1580, 1587, 1594, 1602, 1610, 1618, 1619, 1625, 1627, 1631, 1712], "flagcolor": 1254, "flake8": 1710, "flapfoam": 1711, "flappi": [1710, 1711], "flat": [105, 184, 230, 1412, 1413, 1414, 1529], "flatten": [105, 185, 230, 1430], "flier": [1257, 1259], "flierprop": [1257, 1259], "flip": [1254, 1257, 1496, 1503], "flip_barb": 1254, "float": [74, 75, 105, 119, 165, 188, 230, 238, 324, 434, 435, 443, 444, 453, 461, 488, 499, 503, 505, 516, 517, 523, 524, 574, 575, 576, 577, 578, 579, 590, 591, 660, 661, 702, 707, 709, 713, 714, 719, 721, 722, 727, 730, 735, 736, 758, 759, 765, 766, 780, 781, 788, 789, 795, 796, 802, 803, 846, 860, 861, 868, 874, 875, 880, 881, 886, 901, 914, 915, 920, 921, 938, 939, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1007, 1008, 1009, 1018, 1020, 1023, 1024, 1030, 1037, 1038, 1039, 1040, 1041, 1042, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1122, 1140, 1159, 1202, 1221, 1238, 1239, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1269, 1270, 1273, 1274, 1277, 1279, 1280, 1282, 1283, 1286, 1295, 1330, 1331, 1332, 1333, 1358, 1360, 1373, 1375, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1399, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1435, 1437, 1439, 1441, 1449, 1466, 1470, 1472, 1475, 1476, 1477, 1480, 1485, 1486, 1490, 1494, 1495, 1496, 1497, 1500, 1501, 1502, 1503, 1504, 1507, 1508, 1511, 1512, 1514, 1516, 1517, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1538, 1539, 1540, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1564, 1582, 1583, 1614, 1635, 1636, 1639, 1640, 1697, 1716], "float32": 1719, "float3250": 1719, "float64": [1715, 1724, 1725, 1726], "floatingpointerror": 1564, "flow": [830, 853, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1065, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1520, 1703, 1709, 1710, 1711, 1713, 1714, 1715, 1719, 1724, 1725, 1726, 1731], "flow_plot": 1714, "flow_plots_2d": [1089, 1710, 1714], "flowplots2d": [1036, 1037, 1038, 1039, 1040, 1041, 1042, 1703, 1710, 1714, 1715, 1717, 1719, 1725, 1726, 1728, 1729], "flush": [1345, 1490], "fly": [373, 374, 395, 468, 606, 616, 788, 793, 817, 834, 858, 1527, 1528, 1529, 1530], "fmt": [1122, 1253, 1279, 1402, 1418, 1419, 1420, 1433, 1434, 1472, 1486, 1518], "fmt2": [1402, 1419, 1433, 1434, 1518], "fmt_xdata": 1287, "fmt_ydata": 1288, "fmu": [18, 1696], "fname": [1007, 1016, 1036, 1043, 1044, 1045, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1122, 1317, 1459, 1615, 1616, 1617, 1704], "fnc": 830, "folder": [552, 553, 564, 1709, 1710], "follow": [503, 788, 867, 1131, 1135, 1166, 1187, 1228, 1238, 1239, 1257, 1259, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1337, 1385, 1386, 1387, 1388, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1439, 1466, 1487, 1496, 1503, 1511, 1512, 1513, 1520, 1527, 1528, 1538, 1539, 1540, 1543, 1702, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1726, 1727, 1728, 1729, 1731], "folow": 1713, "font": [1399, 1523, 1525], "font_manag": [1424, 1523], "font_properti": 1523, "fontdict": [1122, 1490, 1495, 1499, 1502, 1506, 1523], "fontfamili": 1523, "fontnam": 1523, "fontproperti": [1399, 1424, 1523], "fontsiz": [1007, 1009, 1014, 1239, 1490, 1499, 1506, 1521, 1523], "fontstretch": 1523, "fontstyl": 1523, "fontvari": 1523, "fontweight": [1490, 1499, 1506, 1523], "for_layout_onli": 1344, "forc": [0, 4, 5, 10, 18, 22, 23, 39, 42, 52, 56, 80, 85, 94, 99, 308, 321, 323, 332, 335, 356, 362, 369, 370, 379, 386, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 574, 577, 581, 587, 589, 590, 594, 599, 601, 603, 615, 618, 623, 626, 630, 650, 655, 678, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 788, 802, 808, 810, 813, 818, 820, 823, 828, 830, 835, 838, 842, 845, 849, 852, 853, 857, 860, 867, 874, 878, 880, 884, 886, 906, 909, 914, 918, 920, 925, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1122, 1238, 1248, 1257, 1265, 1273, 1403, 1404, 1415, 1422, 1471, 1511, 1520, 1529, 1536, 1702, 1712], "force_edgecolor": [1412, 1414], "forg": [1710, 1712, 1730], "forgotten": 1710, "fork": [1711, 1712], "form": [1131, 1143, 1166, 1187, 1239, 1280, 1386, 1412, 1414, 1468, 1727], "format": [481, 482, 490, 491, 499, 503, 1011, 1048, 1072, 1073, 1074, 1075, 1076, 1077, 1115, 1121, 1122, 1208, 1209, 1253, 1269, 1270, 1279, 1285, 1286, 1287, 1288, 1399, 1405, 1418, 1419, 1420, 1430, 1472, 1486, 1499, 1500, 1506, 1507, 1517, 1518, 1526, 1564, 1701, 1710, 1716, 1717], "format_col2var": [1007, 1016, 1036, 1043, 1048, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086], "format_coord": [1122, 1285], "format_cursor_data": [1122, 1286, 1306], "format_data": [1208, 1211], "format_data_short": [1208, 1212], "format_dict": [1007, 1016, 1036, 1043, 1048, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1115, 1121], "format_tick": [1208, 1213], "format_times_func": 499, "format_xdata": [1122, 1287], "format_ydata": [1122, 1288], "formatstrformatt": [1472, 1486], "formatt": [105, 121, 230, 1122, 1208, 1217, 1255, 1286, 1287, 1288, 1420, 1500, 1507, 1526], "former": [1240, 1419, 1710], "formul": [413, 631, 639, 646, 1723], "forst": [838, 845, 852, 1707, 1714], "forward": [483, 485, 486, 487, 488, 489, 584, 1009, 1014, 1048, 1072, 1073, 1074, 1075, 1076, 1077, 1120, 1121, 1122, 1243, 1312, 1386, 1402, 1419, 1423, 1433, 1434, 1456, 1520, 1530], "forward_navigation_ev": 1435, "found": [328, 346, 384, 572, 803, 1096, 1413, 1513, 1701, 1708, 1710, 1712, 1713, 1718, 1725, 1727, 1730], "foundat": 1564, "four": [1392, 1393, 1710, 1714, 1717], "fourier": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1708, 1709, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732], "foxes_opt": 1730, "fp": 1714, "fpath": [1045, 1642, 1719], "fr": [1717, 1719, 1721, 1725, 1727], "frac": [1166, 1265], "fraction": [1239, 1241, 1386, 1399, 1418], "frame": [0, 2, 392, 413, 452, 453, 455, 456, 458, 467, 503, 567, 618, 619, 631, 639, 646, 769, 770, 772, 773, 775, 778, 779, 780, 784, 785, 788, 792, 794, 795, 799, 800, 802, 803, 806, 807, 816, 833, 841, 848, 856, 886, 1392, 1418, 1615, 1698, 1702, 1707, 1710, 1711, 1715, 1717, 1724, 1726, 1729], "frame_on": 1435, "framework": 1711, "frandsen": [867, 868, 914, 915, 1710, 1713], "fraunhof": [1710, 1711], "fraunhoferiw": [1710, 1711, 1712, 1732], "frazer": 830, "fre": [89, 93, 1007, 1065, 1069, 1720], "frederik": 577, "free": [1499, 1506], "freq": [550, 1238, 1265, 1273, 1403, 1415, 1422, 1511], "frequenc": [550, 1238, 1265, 1273, 1403, 1415, 1422, 1431, 1511, 1617], "fresh": 1710, "freshli": [1715, 1718], "friction": [1550, 1552, 1554, 1557, 1558, 1560, 1705], "from": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 110, 114, 116, 230, 235, 308, 313, 314, 323, 324, 328, 332, 335, 336, 346, 356, 362, 369, 370, 371, 372, 379, 382, 384, 385, 392, 394, 399, 404, 410, 412, 415, 420, 427, 429, 430, 438, 440, 443, 448, 452, 453, 457, 459, 465, 467, 471, 479, 480, 481, 482, 485, 486, 490, 491, 498, 501, 503, 505, 514, 516, 523, 531, 533, 544, 547, 549, 551, 561, 563, 565, 574, 576, 577, 579, 580, 581, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 609, 610, 612, 615, 618, 619, 623, 626, 630, 633, 636, 643, 650, 655, 656, 660, 667, 673, 674, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 770, 775, 780, 781, 786, 788, 795, 796, 802, 803, 810, 813, 816, 820, 823, 830, 833, 838, 841, 845, 848, 852, 853, 856, 860, 861, 867, 874, 880, 886, 909, 914, 915, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1007, 1008, 1048, 1051, 1058, 1060, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1084, 1088, 1090, 1091, 1092, 1093, 1107, 1108, 1122, 1123, 1126, 1131, 1137, 1156, 1166, 1169, 1187, 1196, 1203, 1207, 1218, 1223, 1228, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1386, 1388, 1390, 1392, 1393, 1403, 1406, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1430, 1432, 1435, 1437, 1440, 1450, 1485, 1490, 1495, 1496, 1502, 1503, 1511, 1512, 1513, 1517, 1518, 1521, 1523, 1527, 1528, 1529, 1531, 1532, 1533, 1535, 1538, 1539, 1540, 1543, 1561, 1564, 1612, 1613, 1616, 1638, 1639, 1640, 1641, 1647, 1648, 1674, 1675, 1690, 1691, 1699, 1700, 1701, 1702, 1703, 1704, 1706, 1707, 1710, 1712, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729], "from_ax": [1122, 1289], "from_bound": 1467, "from_data_or_stor": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 384, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "from_ext": 1467, "from_point": [427, 429], "from_r": [1007, 1008], "from_result": [1007, 1008], "from_tpoint": [427, 430], "front": [1714, 1715], "frontal": 1729, "frozen": [1131, 1140, 1144, 1166, 1171, 1187], "frozenset": 1564, "fulfil": 1723, "full": [845, 852, 1208, 1211, 1228, 1238, 1241, 1246, 1249, 1250, 1254, 1257, 1259, 1265, 1273, 1277, 1279, 1382, 1390, 1403, 1415, 1418, 1419, 1420, 1422, 1487, 1512, 1518, 1543, 1564, 1710, 1716, 1719, 1720], "fulli": [1021, 1022, 1032, 1187, 1711], "fun": [1726, 1727], "func": [650, 651, 1122, 1230, 1431, 1432, 1618, 1624, 1625, 1626, 1627, 1632], "funcscal": [1498, 1505], "function": [0, 10, 18, 40, 44, 48, 54, 58, 62, 82, 87, 96, 308, 320, 332, 333, 334, 338, 348, 358, 361, 362, 365, 400, 403, 404, 407, 414, 441, 454, 492, 499, 503, 505, 506, 511, 518, 525, 531, 533, 534, 540, 566, 584, 620, 624, 628, 632, 650, 651, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 701, 704, 711, 716, 724, 731, 738, 771, 777, 783, 791, 798, 805, 1043, 1044, 1048, 1060, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1107, 1108, 1122, 1165, 1196, 1205, 1218, 1228, 1230, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1260, 1261, 1265, 1273, 1277, 1279, 1282, 1283, 1284, 1287, 1288, 1291, 1351, 1366, 1382, 1385, 1390, 1392, 1403, 1405, 1411, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1435, 1437, 1464, 1466, 1468, 1474, 1511, 1512, 1514, 1517, 1521, 1523, 1543, 1548, 1554, 1556, 1558, 1559, 1562, 1564, 1618, 1624, 1625, 1626, 1627, 1632, 1635, 1636, 1692, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1710, 1713, 1714, 1716, 1718, 1719, 1720, 1724, 1728, 1730], "fund": 1711, "fundament": 1430, "further": [1240, 1244, 1248, 1254, 1390, 1413, 1441, 1472, 1486, 1499, 1506, 1512, 1727], "furthermor": [1711, 1721], "futur": [1123, 1279, 1468, 1520], "futurewarn": 1564, "fv": [1048, 1088, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "g": [2, 308, 309, 660, 661, 830, 914, 1048, 1060, 1107, 1108, 1121, 1122, 1124, 1142, 1166, 1187, 1229, 1239, 1244, 1247, 1249, 1251, 1253, 1255, 1257, 1258, 1259, 1279, 1281, 1284, 1317, 1382, 1385, 1386, 1390, 1402, 1404, 1419, 1423, 1424, 1427, 1441, 1448, 1459, 1466, 1468, 1499, 1500, 1506, 1507, 1517, 1518, 1523, 1525, 1526, 1548, 1616, 1634, 1700, 1702, 1710, 1711, 1713, 1714, 1715, 1717, 1718, 1719, 1725, 1729], "g_pt": [1072, 1073, 1074, 1075, 1076, 1077], "galleri": [1253, 1255, 1257, 1259, 1279, 1390, 1412, 1414, 1418, 1431, 1432, 1448, 1470, 1471, 1513, 1523], "gamma": [845, 846, 852, 886, 902, 1387, 1718, 1729], "gapcolor": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "gather": [346, 349, 580], "gaussian": [820, 914, 1257, 1390, 1539, 1707, 1713, 1720], "gaussiankd": 1539, "gaussianwakemodel": [820, 821, 822, 874, 914, 920, 1707, 1713], "gen": [1002, 1004, 1006], "gen_imag": [1065, 1067, 1724], "gen_states_fig_xi": [1036, 1037, 1714, 1715, 1717, 1725, 1726, 1729], "gen_states_fig_xz": [1036, 1038, 1710, 1715, 1719], "gen_states_fig_yz": [1036, 1039, 1729], "gen_stdata": [1016, 1031, 1726], "gener": [116, 235, 769, 788, 793, 920, 1002, 1004, 1006, 1016, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1123, 1124, 1126, 1140, 1158, 1161, 1165, 1182, 1183, 1194, 1254, 1385, 1386, 1387, 1390, 1405, 1412, 1413, 1414, 1418, 1423, 1430, 1466, 1500, 1507, 1511, 1512, 1520, 1527, 1528, 1703, 1707, 1710, 1714, 1715, 1716], "generatorexit": 1564, "genericalia": [116, 235], "gentyp": [105, 212, 230], "geodatafram": 1615, "geom": 1634, "geom2d": [474, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1634], "geom_col": 1616, "geom_reggrid": 1710, "geometr": 1710, "geometri": [1565, 1567, 1571, 1572, 1573, 1574, 1575, 1577, 1581, 1582, 1588, 1589, 1595, 1596, 1599, 1603, 1604, 1605, 1607, 1611, 1616, 1634, 1704], "geomlayout": 1710, "geomlayoutgrid": 1710, "geomreggrid": 1710, "geopanda": [1615, 1616, 1633], "geopandas_help": 1710, "georg": 577, "germani": 1716, "get": [0, 7, 10, 13, 18, 28, 29, 32, 37, 39, 42, 46, 52, 56, 60, 65, 68, 69, 73, 74, 77, 78, 80, 85, 94, 105, 179, 230, 308, 313, 323, 325, 328, 331, 332, 335, 344, 346, 356, 362, 369, 370, 377, 379, 384, 392, 396, 399, 404, 410, 420, 427, 438, 440, 443, 448, 452, 455, 459, 460, 465, 471, 479, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 567, 570, 572, 574, 577, 580, 581, 587, 589, 590, 594, 599, 600, 601, 603, 607, 609, 615, 617, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 772, 775, 778, 780, 784, 788, 792, 793, 795, 799, 802, 806, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1007, 1016, 1036, 1043, 1045, 1049, 1052, 1056, 1058, 1062, 1064, 1070, 1078, 1081, 1084, 1086, 1090, 1096, 1097, 1122, 1131, 1136, 1137, 1145, 1146, 1166, 1167, 1172, 1173, 1187, 1188, 1202, 1206, 1221, 1248, 1255, 1265, 1273, 1293, 1300, 1309, 1312, 1313, 1323, 1324, 1340, 1341, 1343, 1344, 1345, 1354, 1357, 1363, 1369, 1372, 1378, 1385, 1386, 1422, 1423, 1472, 1486, 1499, 1506, 1511, 1527, 1528, 1565, 1567, 1572, 1574, 1577, 1582, 1589, 1596, 1599, 1604, 1607, 1710, 1714, 1715, 1716], "get_adjust": [1122, 1240, 1290], "get_affin": [1131, 1145, 1166, 1172, 1187], "get_agg_filt": [1122, 1291], "get_alpha": [1122, 1292], "get_anchor": [1122, 1240, 1293], "get_anim": [1122, 1294], "get_arrai": 1385, "get_aspect": [1122, 1295], "get_autoscale_on": [1122, 1296], "get_autoscalex_on": [1122, 1297, 1494], "get_autoscaley_on": [1122, 1298, 1501], "get_axes_loc": [1122, 1299], "get_axisbelow": [1122, 1300, 1448], "get_box_aspect": [1122, 1301], "get_centreline_point": [452, 455, 769, 772, 775, 778, 780, 784, 788, 792, 795, 799, 802, 806], "get_children": [1122, 1302], "get_clip_box": [1122, 1303], "get_clip_on": [1122, 1304], "get_clip_path": [1122, 1305], "get_cursor_data": [1122, 1286, 1306, 1462], "get_data": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 385, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 460, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 904, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1056, 1058, 1084], "get_data_info": [1056, 1059, 1084], "get_data_ratio": [1122, 1307], "get_dataset": [1081, 1083], "get_default_bbox_extra_artist": [1122, 1308], "get_delta": [65, 68, 69, 73, 74, 77, 78], "get_facecolor": [1122, 1309, 1310], "get_fc": [1122, 1310], "get_fig": 1089, "get_figur": [1007, 1009, 1014, 1056, 1060, 1061, 1084, 1122, 1311, 1715, 1716, 1719, 1723, 1724, 1726, 1727, 1728], "get_file_path": [479, 1090, 1096, 1716, 1719], "get_forward_navigation_ev": [1122, 1312], "get_fpath": [1007, 1016, 1036, 1043, 1045, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086], "get_frame_on": [1122, 1313], "get_gid": [1122, 1314], "get_gridlin": [1472, 1486], "get_gridspec": [1122, 1315], "get_imag": [1122, 1316], "get_in_layout": [1122, 1317], "get_label": [1122, 1318], "get_layout_data": [1007, 1010], "get_layout_dict": [1007, 1011], "get_legend": [1122, 1319], "get_legend_handles_label": [1122, 1320], "get_lin": [1122, 1321], "get_matrix": [1131, 1146, 1166, 1173, 1187], "get_mean_data_xi": [1036, 1040, 1070, 1072], "get_mean_data_xz": [1036, 1041, 1070, 1073], "get_mean_data_yz": [1036, 1042, 1070, 1074], "get_mean_fig_xi": [1036, 1040, 1728], "get_mean_fig_xz": [1036, 1041], "get_mean_fig_yz": [1036, 1042], "get_model": [0, 7, 10, 13, 18, 29], "get_model_data": [0, 10, 18, 308, 313], "get_models_data": [0, 10, 18, 308, 314], "get_models_idata": [0, 10, 18, 308, 315], "get_mouseov": [1122, 1322], "get_navig": [1122, 1323], "get_navigate_mod": [1122, 1324], "get_offset": [1208, 1214, 1385], "get_path_effect": [1122, 1325], "get_pick": [1122, 1326, 1416, 1417], "get_plot": 1720, "get_point_figur": [1062, 1064, 1722], "get_posit": [1122, 1240, 1327], "get_raster": [1122, 1329], "get_rasterization_zord": [1122, 1328], "get_render": 1344, "get_rlabel_posit": [1122, 1330], "get_rmax": [1122, 1331], "get_rmin": [1122, 1332], "get_rorigin": [1122, 1333], "get_rotor_point": [410, 415, 630, 633, 636, 643], "get_rsign": [1122, 1334], "get_scale_nam": [1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "get_shared_x_ax": [1122, 1335], "get_shared_y_ax": [1122, 1336], "get_sketch_param": [1122, 1337], "get_slic": [325, 328, 344, 377, 427], "get_snap": [1122, 1338], "get_stat": [561, 1701], "get_states_data_xi": [1036, 1037, 1070, 1075], "get_states_data_xz": [1036, 1038, 1070, 1076], "get_states_data_yz": [1036, 1039, 1070, 1077], "get_streamline_data": [788, 793], "get_subplotspec": [1122, 1339], "get_theta_direct": [1122, 1340], "get_theta_offset": [1122, 1341], "get_thetamax": [1122, 1342], "get_thetamin": [1122, 1343], "get_tick_param": 1525, "get_ticklabel": [1472, 1486], "get_tightbbox": [1122, 1344, 1350], "get_titl": [1122, 1345], "get_transform": [1122, 1229, 1346], "get_transformed_clip_path_and_affin": [1122, 1347], "get_url": [1122, 1348], "get_vis": [1122, 1275, 1349], "get_wake_coo": [452, 456, 769, 773, 775, 779, 780, 785, 788, 794, 795, 800, 802, 807], "get_wake_modelling_data": [452, 457, 769, 775, 780, 786, 788, 795, 802], "get_wake_point": [392, 396, 594, 599, 600, 601, 603, 607, 609, 615, 617], "get_window": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "get_window_ext": [1122, 1344, 1350], "get_xaxi": [1122, 1351], "get_xaxis_text1_transform": [1122, 1352], "get_xaxis_text2_transform": [1122, 1353], "get_xaxis_transform": [1122, 1354], "get_xbound": [1122, 1355, 1358, 1395, 1494, 1496], "get_xgridlin": [1122, 1356], "get_xlabel": [1122, 1357], "get_xlim": [1122, 1355, 1358, 1395, 1494, 1496], "get_xmajorticklabel": [1122, 1359], "get_xmargin": [1122, 1360], "get_xminorticklabel": [1122, 1361], "get_xscal": [1122, 1362], "get_xtick": [1122, 1365], "get_xticklabel": [1122, 1363], "get_xticklin": [1122, 1364], "get_yaxi": [1122, 1366], "get_yaxis_text1_transform": [1122, 1367], "get_yaxis_text2_transform": [1122, 1368], "get_yaxis_transform": [1122, 1369], "get_ybound": [1122, 1370, 1373, 1396, 1501, 1503], "get_ygridlin": [1122, 1371], "get_ylabel": [1122, 1372], "get_ylim": [1122, 1370, 1373, 1396, 1501, 1503], "get_ymajorticklabel": [1122, 1374], "get_ymargin": [1122, 1375], "get_yminorticklabel": [1122, 1376], "get_yscal": [1122, 1377], "get_ytick": [1122, 1380], "get_yticklabel": [1122, 1378], "get_yticklin": [1122, 1379], "get_zord": [1122, 1381], "getattr": 1564, "getfield": [105, 186, 230], "getter": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 385, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "gib": 1727, "gid": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1458, 1512, 1521, 1523], "giga": [229, 1697], "git": [1564, 1711, 1712, 1715, 1717, 1719, 1724, 1726, 1728, 1732], "github": [1562, 1709, 1710, 1711, 1712, 1732], "give": [769, 1238, 1254, 1257, 1265, 1273, 1279, 1295, 1386, 1403, 1415, 1419, 1422, 1423, 1424, 1511, 1527, 1528, 1710, 1714, 1727], "given": [0, 5, 10, 18, 23, 434, 435, 452, 455, 516, 567, 570, 572, 650, 678, 702, 729, 735, 769, 772, 775, 778, 780, 784, 788, 792, 795, 799, 802, 806, 861, 880, 1016, 1018, 1023, 1030, 1035, 1049, 1090, 1096, 1122, 1131, 1141, 1142, 1157, 1158, 1160, 1165, 1166, 1181, 1182, 1187, 1196, 1206, 1218, 1228, 1238, 1239, 1249, 1253, 1254, 1255, 1257, 1258, 1263, 1265, 1273, 1275, 1277, 1279, 1280, 1281, 1282, 1283, 1306, 1385, 1386, 1387, 1388, 1390, 1391, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1452, 1468, 1470, 1500, 1507, 1511, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1527, 1528, 1529, 1530, 1534, 1538, 1539, 1540, 1543, 1550, 1553, 1554, 1558, 1612, 1618, 1624, 1625, 1626, 1627, 1632, 1701, 1702, 1703, 1704, 1705, 1710, 1713, 1720, 1723], "global": [452, 1564, 1713, 1716], "gmodel": 1715, "go": 1419, "goal": 1724, "gouraud": [1414, 1529], "gradient": 1423, "grai": 1390, "grain": 1521, "grant": 1711, "graph": 1390, "graphic": [1122, 1414, 1470, 1471], "grayscal": 1390, "greater": [1241, 1257, 1358, 1373, 1404, 1412, 1414, 1430, 1435, 1496, 1497, 1503, 1504, 1614], "green": [1251, 1279, 1419, 1468, 1518], "grei": 1481, "gribben": [830, 1714], "grid": [487, 490, 577, 601, 603, 636, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1248, 1249, 1254, 1354, 1356, 1369, 1371, 1382, 1412, 1413, 1414, 1423, 1446, 1481, 1520, 1527, 1528, 1529, 1530, 1701, 1702, 1710, 1713, 1715, 1717, 1718, 1719, 1720, 1722, 1728], "grid100": 1720, "grid16": [1717, 1720], "grid25": 1726, "grid36": 1715, "grid4": 1720, "grid400": 1720, "grid9": 1720, "grid_alpha": 1525, "grid_color": 1525, "grid_data": [1072, 1073, 1074, 1075, 1076, 1077], "grid_linestyl": 1525, "grid_linewidth": 1525, "gridlin": [1122, 1300, 1354, 1369, 1448, 1472, 1486, 1525], "gridrotor": [602, 603, 636, 637, 638, 639, 640, 641, 642, 1702, 1715, 1718, 1726], "gridsiz": [1122, 1385], "gridspec": [1122, 1315], "gridspec_kw": 1726, "grotor": 603, "ground": [0, 2, 370, 434, 435, 567, 587, 589, 590, 1661, 1702, 1706, 1710, 1711, 1715], "ground_mirror": [1713, 1715, 1718], "ground_model": [0, 2, 567, 587, 588, 589, 590, 591, 592, 593, 1713, 1715, 1718], "groundmirror": [587, 588, 1702, 1710, 1718], "groundmodel": [0, 370, 371, 372, 373, 374, 375, 376, 567, 589, 590, 1702, 1710], "group": [1122, 1277, 1280, 1281, 1314, 1419, 1458, 1525, 1529], "grouper": [1122, 1335, 1336], "growth": [459, 860, 861, 867, 868, 874, 909, 914, 920, 1614, 1662, 1698, 1706, 1710, 1713, 1718, 1728], "gt": [1715, 1716, 1718, 1719, 1724, 1725, 1726], "guarante": [1140, 1472, 1486, 1499, 1506], "guid": [1239, 1394, 1711], "guidelin": [1423, 1712], "gw": [229, 285, 444, 1697, 1711], "gwh": [1030, 1656, 1688, 1706, 1719, 1727, 1728], "gz": [1115, 1116, 1118, 1119, 1710, 1713, 1719, 1724, 1726, 1727, 1728], "h": [0, 1, 10, 18, 434, 435, 443, 444, 481, 482, 491, 499, 550, 710, 1010, 1320, 1387, 1419, 1661, 1706, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1724, 1725, 1726], "h119": [1715, 1724, 1726], "h120": 1713, "h2digit": 1711, "h5": [1115, 1116, 1118, 1119], "h90": [1723, 1725], "h_coord": [490, 491, 498, 499, 1717, 1719], "h_ref": [1552, 1557, 1560, 1705], "ha": [314, 315, 321, 344, 352, 387, 388, 422, 494, 500, 509, 519, 538, 546, 573, 621, 658, 682, 718, 726, 733, 740, 1101, 1102, 1122, 1131, 1147, 1166, 1174, 1187, 1190, 1229, 1244, 1249, 1253, 1254, 1255, 1257, 1259, 1275, 1277, 1282, 1283, 1286, 1385, 1386, 1387, 1390, 1392, 1397, 1404, 1412, 1413, 1414, 1416, 1423, 1431, 1432, 1471, 1513, 1516, 1518, 1523, 1538, 1539, 1639, 1640, 1693, 1695, 1710, 1711, 1713, 1714, 1717, 1719, 1721, 1723, 1724, 1726, 1727, 1730], "had": 1710, "half": [830, 1058, 1060, 1241, 1246, 1250, 1254, 1282, 1283, 1386, 1423, 1430, 1518, 1520, 1538, 1539, 1596, 1704, 1707, 1710, 1714, 1715], "halfplan": [1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1704], "halfwai": [1412, 1414], "halign": [1122, 1352, 1353, 1367, 1368], "ham": [1238, 1265, 1273, 1390, 1403, 1415, 1422, 1511], "hammer": 1394, "han": 1390, "hand": [1035, 1140, 1710, 1713], "handi": 1043, "handl": [346, 1122, 1187, 1240, 1290, 1293, 1301, 1320, 1414, 1436, 1439, 1449, 1547, 1698, 1704, 1710, 1720], "handlelenght": 1399, "handler": [459, 860, 867, 874, 909, 914, 920, 1698], "handletextsep": 1399, "happen": 1390, "has_data": [886, 905, 1122, 1383], "has_invers": [1131, 1147, 1166, 1174, 1187, 1190], "hasattr": 1564, "hash": [105, 125, 230, 242, 1564], "hat": [609, 823, 1702, 1707, 1713, 1720, 1729], "hatch": [1122, 1241, 1247, 1251, 1254, 1255, 1258, 1282, 1283, 1385, 1392, 1412, 1414, 1418, 1423, 1513, 1528], "hatch_style_refer": [1418, 1513], "have": [4, 5, 12, 22, 23, 414, 632, 650, 651, 1051, 1122, 1131, 1143, 1166, 1187, 1228, 1230, 1254, 1257, 1258, 1259, 1271, 1272, 1277, 1280, 1344, 1383, 1385, 1388, 1390, 1412, 1413, 1414, 1419, 1423, 1429, 1430, 1431, 1432, 1440, 1467, 1468, 1487, 1500, 1507, 1511, 1513, 1520, 1521, 1527, 1528, 1540, 1543, 1637, 1702, 1710, 1712, 1713, 1715, 1719, 1721, 1723, 1724, 1725, 1728, 1730], "have_unit": [1122, 1384], "hawk": [830, 1714], "hbar": 1385, "head": [1239, 1241, 1423, 1424, 1517], "head_length": 1241, "head_starts_at_zero": 1241, "head_width": 1241, "headaxi": 1423, "headaxislength": 1423, "header": 1521, "headlength": [1239, 1423], "headwidth": [1239, 1423], "heat": [1078, 1080, 1703, 1710], "heavi": 1523, "height": [306, 434, 435, 443, 444, 448, 449, 483, 490, 491, 498, 499, 501, 503, 505, 514, 590, 591, 643, 644, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 763, 765, 767, 1122, 1254, 1255, 1280, 1301, 1392, 1394, 1423, 1435, 1441, 1449, 1467, 1514, 1521, 1527, 1528, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1661, 1680, 1701, 1702, 1705, 1706, 1709, 1710, 1711, 1713, 1715, 1716, 1717, 1718, 1722, 1724, 1725], "height0": [1553, 1705], "height_ratio": 1726, "heightpandasindexpandasindex": 1719, "helg": 577, "help": [105, 135, 230, 253, 1115, 1196, 1199, 1218, 1220, 1564, 1625, 1627, 1628, 1704], "helper": [105, 142, 230, 1043, 1089, 1115, 1120, 1121, 1208, 1210, 1420, 1692, 1704, 1710], "hemispher": 1254, "henc": [1365, 1380, 1527, 1528, 1714, 1721, 1723], "her": [1122, 1399], "here": [352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 802, 861, 880, 1255, 1402, 1404, 1419, 1423, 1433, 1434, 1498, 1505, 1518, 1700, 1701, 1710, 1711, 1713, 1714, 1715, 1716, 1719, 1721, 1723, 1725, 1727, 1728, 1729, 1730], "hermit": 1390, "hernandez": [860, 1707, 1713], "heterogen": [490, 1701, 1709, 1711, 1713, 1719], "hex": [1419, 1564], "hexagon": [1122, 1385, 1386, 1387, 1423], "hexagon1": 1419, "hexagon2": 1419, "hexbin": [1122, 1385, 1386, 1387], "hide": [1122, 1248, 1257, 1446, 1447], "high": [577, 1495, 1502, 1538, 1539, 1702, 1713, 1723], "higher": [660, 1394, 1710], "highest": [1257, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "hint": [116, 235, 1107, 1108, 1547, 1548, 1612, 1704], "hist": [1122, 1277, 1386, 1387], "hist2d": [1122, 1385, 1386, 1387], "histogram": [1122, 1277, 1385, 1386, 1387, 1519, 1710], "histogram_bin_edg": 1386, "histor": [1239, 1420], "histori": 1711, "histtyp": 1386, "hit": [1466, 1726, 1729], "hline": [1122, 1246, 1388, 1419, 1540], "hold": [1150, 1176, 1192], "home": [1564, 1715, 1717, 1719, 1724, 1726, 1728], "homogen": [1709, 1713, 1724], "honor": [1494, 1501], "horizon": 1711, "horizont": [490, 590, 1036, 1037, 1040, 1041, 1042, 1070, 1072, 1075, 1122, 1159, 1228, 1246, 1247, 1249, 1251, 1255, 1257, 1258, 1259, 1277, 1279, 1280, 1282, 1352, 1353, 1367, 1368, 1385, 1386, 1388, 1390, 1419, 1423, 1424, 1514, 1517, 1521, 1523, 1538, 1539, 1540, 1543, 1701, 1702, 1703, 1710, 1713, 1716, 1717, 1719, 1724, 1725], "horizontal_barchart_distribut": 1255, "horizontalalign": [1253, 1490, 1495, 1499, 1502, 1506, 1523], "hotfix": 1710, "hour": 1030, "hous": 1710, "how": [1122, 1240, 1254, 1257, 1290, 1312, 1423, 1436, 1441, 1456, 1710, 1711, 1715, 1719, 1720, 1721, 1727, 1728], "howev": [1249, 1254, 1280, 1306, 1386, 1390, 1413, 1414, 1420, 1518, 1519, 1527, 1528, 1529, 1714, 1729], "hpc": 1710, "html": [1710, 1724, 1726], "http": [577, 802, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 914, 920, 984, 1254, 1257, 1259, 1513, 1562, 1636, 1708, 1710, 1711, 1712, 1727, 1732], "hub": [434, 435, 443, 444, 483, 1702, 1710, 1713, 1719, 1724, 1725], "hubh_data": 1718, "huge": 1203, "hurrican": 1280, "hyphen": [1208, 1210], "hz": [1265, 1273, 1422, 1511], "i": [0, 10, 18, 24, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 94, 96, 97, 105, 165, 188, 230, 243, 278, 308, 323, 332, 333, 334, 335, 338, 346, 348, 352, 356, 358, 361, 362, 365, 369, 370, 379, 385, 388, 392, 393, 399, 400, 403, 404, 407, 410, 413, 414, 420, 422, 434, 438, 440, 441, 443, 446, 448, 452, 454, 457, 459, 465, 471, 483, 485, 490, 492, 494, 498, 500, 501, 503, 506, 509, 514, 516, 518, 519, 523, 525, 531, 534, 538, 544, 546, 547, 549, 551, 566, 574, 577, 580, 581, 584, 587, 589, 590, 594, 597, 599, 601, 603, 609, 610, 611, 615, 618, 619, 620, 621, 623, 624, 626, 628, 630, 631, 632, 636, 637, 639, 643, 646, 650, 651, 653, 655, 657, 658, 660, 663, 667, 669, 673, 675, 678, 681, 682, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 714, 716, 718, 719, 721, 722, 724, 726, 727, 729, 731, 733, 735, 736, 738, 740, 742, 746, 750, 754, 758, 762, 765, 769, 771, 775, 777, 780, 783, 786, 788, 791, 795, 798, 802, 805, 810, 811, 812, 813, 815, 820, 821, 822, 823, 825, 827, 830, 838, 845, 852, 853, 860, 863, 867, 868, 870, 874, 877, 880, 883, 886, 909, 912, 914, 917, 920, 923, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1023, 1043, 1053, 1080, 1083, 1088, 1110, 1122, 1123, 1124, 1126, 1128, 1130, 1131, 1135, 1137, 1138, 1140, 1141, 1142, 1143, 1153, 1155, 1158, 1159, 1161, 1163, 1164, 1165, 1166, 1169, 1178, 1182, 1183, 1185, 1186, 1187, 1188, 1194, 1195, 1196, 1202, 1203, 1208, 1210, 1217, 1218, 1221, 1225, 1228, 1229, 1230, 1231, 1238, 1239, 1240, 1241, 1243, 1244, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1265, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1288, 1294, 1295, 1296, 1297, 1298, 1301, 1306, 1313, 1317, 1319, 1320, 1322, 1329, 1337, 1344, 1351, 1352, 1353, 1354, 1366, 1367, 1368, 1369, 1382, 1385, 1386, 1387, 1388, 1390, 1391, 1392, 1393, 1394, 1397, 1399, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1422, 1423, 1424, 1427, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1440, 1441, 1442, 1443, 1444, 1446, 1447, 1449, 1450, 1452, 1457, 1459, 1462, 1464, 1466, 1467, 1468, 1470, 1471, 1472, 1480, 1481, 1485, 1486, 1487, 1490, 1494, 1495, 1496, 1497, 1499, 1500, 1501, 1502, 1503, 1504, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1536, 1538, 1539, 1540, 1542, 1543, 1545, 1564, 1570, 1571, 1580, 1581, 1587, 1588, 1594, 1595, 1602, 1603, 1610, 1611, 1618, 1623, 1696, 1702, 1706, 1707, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "i0": 36, "id": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 389, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 483, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1122, 1141, 1230, 1314, 1428, 1458, 1564, 1711], "idata": [0, 6, 10, 18, 308, 312, 314, 315, 316, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1710], "idata_mem": [0, 10, 18, 308, 316], "idea": [594, 984, 1710, 1721], "ident": [105, 106, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 1122, 1131, 1140, 1166, 1187, 1277, 1280, 1419, 1430, 1512, 1717, 1729], "identifi": [104, 228, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 385, 457, 786, 1141, 1142, 1538, 1539, 1692, 1697, 1710, 1726], "ie": 1702, "iea15": 1716, "iea15mw": [1716, 1718], "iec": [867, 1707], "iec_typ": [867, 868, 1718], "iecti2005": 1710, "iecti2005_": 1718, "iecti2005k_": 1718, "iecti2019": 1710, "iecti2019_": [1713, 1718], "iecti2019_max": 1729, "iecti2019_quart": 1715, "iecti2019k_": 1718, "iectiwak": [867, 868, 869, 870, 871, 872, 873, 1707, 1718], "ifil": [1633, 1704], "ignor": [1230, 1385, 1386, 1387, 1390, 1412, 1413, 1414, 1418, 1430, 1446, 1470, 1471, 1517, 1518, 1527, 1528, 1534, 1713], "illustr": 1385, "im": [1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1511], "imag": [105, 187, 230, 1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1234, 1238, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1387, 1389, 1390, 1392, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1435, 1437, 1448, 1481, 1511, 1512, 1521, 1523, 1527, 1528, 1536, 1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606, 1710, 1724], "image_antialias": 1390, "images_contours_and_field": [1390, 1412, 1414], "imagin": 1715, "imaginari": [105, 187, 230], "immedi": 1203, "immin": [1472, 1486, 1499, 1506], "immut": [1122, 1123, 1335, 1336], "imnport": 1612, "impact": 577, "implement": [577, 853, 867, 1138, 1225, 1286, 1306, 1414, 1436, 1707, 1710, 1713, 1714, 1715], "impli": [1282, 1283], "implicit": [1717, 1727, 1729], "import": [116, 235, 1140, 1612, 1613, 1704, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "import_modul": [1612, 1704], "importerror": 1564, "importwarn": 1564, "impos": 1436, "improv": 1710, "imshow": [1122, 1390, 1405, 1412, 1414, 1511, 1512, 1520, 1527, 1528], "imshow_ext": 1390, "in0": [650, 651], "in1": [650, 651], "in_ax": [1122, 1391], "in_kwarg": [1633, 1704], "in_layout": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1459, 1512, 1521, 1523], "in_var": [650, 651], "inaccuraci": 1140, "inam": [550, 1633], "inch": [1423, 1424], "includ": [3, 335, 1086, 1092, 1122, 1160, 1229, 1254, 1273, 1284, 1317, 1344, 1350, 1386, 1390, 1413, 1414, 1422, 1459, 1472, 1486, 1495, 1499, 1502, 1506, 1526, 1528, 1534, 1536, 1703, 1710, 1712, 1713, 1716, 1719, 1720, 1728, 1729], "include_self": [1122, 1284], "inclus": 1438, "incompat": [1394, 1710], "incomplet": 1710, "incorrect": [1265, 1273, 1422, 1511], "increas": [1122, 1238, 1265, 1273, 1277, 1340, 1355, 1370, 1403, 1415, 1422, 1423, 1430, 1483, 1511, 1518, 1520, 1527, 1528, 1542, 1545, 1707, 1713], "increment": 1254, "indentationerror": 1564, "independ": [618, 619, 1212, 1255, 1280, 1386, 1436, 1449, 1531, 1532, 1713], "index": [18, 24, 30, 36, 48, 94, 97, 98, 230, 243, 288, 331, 334, 335, 339, 348, 362, 366, 370, 371, 372, 373, 385, 392, 394, 395, 412, 414, 420, 421, 434, 435, 437, 453, 455, 456, 457, 467, 472, 483, 490, 493, 498, 501, 503, 505, 508, 511, 514, 516, 523, 531, 533, 536, 540, 544, 547, 550, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 632, 674, 772, 773, 778, 779, 784, 785, 786, 792, 794, 799, 800, 806, 807, 811, 812, 815, 816, 821, 822, 825, 826, 827, 833, 841, 848, 856, 863, 864, 870, 871, 877, 883, 902, 905, 912, 913, 917, 923, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1007, 1008, 1009, 1037, 1038, 1039, 1040, 1041, 1042, 1051, 1072, 1073, 1074, 1089, 1123, 1130, 1228, 1238, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1394, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1539, 1540, 1543, 1636, 1697, 1710, 1716, 1719, 1720, 1721, 1723, 1724, 1727, 1729], "index_col": [498, 501, 503, 504, 514, 515, 531, 532, 544, 547, 548], "indexerror": 1564, "indic": [98, 319, 339, 421, 487, 489, 493, 508, 536, 1009, 1037, 1038, 1039, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1208, 1209, 1257, 1279, 1280, 1392, 1393, 1405, 1431, 1432, 1466, 1548, 1564, 1704, 1710, 1726, 1728], "indicate_inset": [1122, 1392, 1393], "indicate_inset_zoom": [1122, 1393], "indistinguish": 1430, "individu": [332, 434, 443, 729, 735, 830, 838, 845, 852, 1254, 1255, 1257, 1259, 1267, 1386, 1390, 1404, 1413, 1414, 1446, 1447, 1490, 1499, 1506, 1523, 1547, 1698, 1700, 1702, 1713, 1715, 1724], "induct": [323, 324, 438, 567, 574, 576, 577, 579, 660, 661, 803, 823, 824, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 861, 868, 874, 875, 880, 881, 886, 901, 909, 910, 914, 915, 920, 921, 1698, 1702, 1709, 1710, 1713, 1715, 1718, 1724, 1726], "induction_model": [567, 1714], "induction_rhb": 1710, "indx": 30, "inf": [1202, 1221, 1277, 1430, 1527, 1528], "infer": [485, 486, 1529, 1725], "infin": [105, 165], "infinit": [1122, 1249, 1277, 1714], "inflow": [1713, 1719, 1727], "influenc": [1715, 1721], "info": [1070, 1071], "inform": [1122, 1203, 1254, 1306, 1322, 1408, 1430, 1448, 1462, 1564, 1725, 1727, 1731], "ing": [1265, 1273, 1422, 1511], "inherit": [1531, 1532], "inhomogen": 1716, "init": [584, 1092, 1093], "init_par": [346, 354, 580], "init_st": [0, 8, 10, 18], "initfarmdata": [42, 43, 44, 45, 1694, 1715, 1724, 1726], "initfarmdata_instance1": 1726, "initi": [0, 8, 9, 10, 14, 18, 20, 39, 42, 46, 49, 52, 56, 60, 63, 80, 85, 89, 92, 94, 99, 308, 317, 323, 326, 332, 334, 335, 346, 351, 354, 356, 359, 362, 369, 370, 375, 379, 386, 387, 392, 398, 399, 401, 404, 410, 420, 429, 430, 438, 440, 443, 448, 452, 459, 465, 471, 490, 491, 498, 501, 503, 514, 516, 523, 526, 531, 537, 544, 547, 552, 554, 555, 556, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 613, 615, 618, 623, 626, 630, 636, 640, 643, 647, 650, 655, 660, 664, 667, 670, 673, 676, 678, 685, 688, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 787, 788, 795, 801, 802, 808, 810, 813, 818, 820, 823, 828, 830, 835, 838, 842, 845, 849, 852, 853, 857, 858, 860, 867, 874, 878, 880, 884, 886, 906, 909, 914, 918, 920, 925, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1065, 1068, 1196, 1199, 1218, 1220, 1244, 1248, 1424, 1564, 1614, 1618, 1621, 1625, 1627, 1628, 1630, 1631, 1710, 1713, 1715, 1720, 1724, 1726], "initial_result": 334, "ink": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1280, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "inlcud": 1726, "inlin": [1714, 1715, 1717, 1719, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "inner": [1122, 1332, 1398, 1476, 1521], "inout": 1525, "input": [0, 10, 18, 230, 276, 308, 314, 333, 334, 361, 403, 448, 450, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 650, 651, 655, 656, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 760, 761, 762, 763, 764, 765, 767, 768, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1131, 1148, 1157, 1158, 1161, 1166, 1175, 1181, 1182, 1183, 1187, 1191, 1194, 1228, 1238, 1257, 1277, 1385, 1386, 1387, 1390, 1403, 1404, 1413, 1415, 1430, 1431, 1432, 1439, 1539, 1543, 1564, 1633, 1692, 1702, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "input_dim": [1131, 1148, 1157, 1158, 1161, 1165, 1166, 1175, 1181, 1182, 1183, 1187, 1191, 1194], "input_farm_var": [948, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001], "input_var": [448, 450, 655, 656, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 764, 765, 768, 953, 959, 965, 971, 977, 983, 989, 995, 1001], "insensit": 1279, "insert": [362, 366, 434, 437, 1162, 1184, 1639, 1640], "insert_model": [434, 437], "inset": [1122, 1392, 1393, 1394], "inset_ax": [1122, 1231, 1392, 1393, 1394], "insid": [1122, 1268, 1399, 1418, 1525, 1565, 1571, 1572, 1574, 1581, 1582, 1588, 1589, 1595, 1596, 1597, 1603, 1604, 1611, 1717], "inside_": [1566, 1576, 1584, 1591, 1598, 1606], "inside_slategrai": [1566, 1576, 1606], "inspir": 1517, "instal": [1612, 1710, 1711, 1730, 1732], "instanc": [1111, 1122, 1123, 1126, 1131, 1143, 1166, 1178, 1187, 1206, 1244, 1245, 1252, 1253, 1256, 1257, 1259, 1263, 1269, 1270, 1279, 1284, 1311, 1319, 1346, 1351, 1366, 1385, 1387, 1390, 1394, 1412, 1413, 1414, 1418, 1420, 1426, 1430, 1450, 1455, 1472, 1486, 1490, 1499, 1506, 1512, 1513, 1523, 1527, 1528, 1531, 1532, 1538, 1539, 1710, 1713, 1717, 1726], "instanti": [1385, 1387, 1390, 1394, 1412, 1413, 1414, 1430, 1527, 1528], "instead": [4, 5, 22, 23, 331, 384, 483, 490, 491, 503, 505, 531, 533, 860, 861, 948, 949, 960, 961, 972, 973, 990, 991, 1054, 1055, 1058, 1060, 1122, 1203, 1241, 1254, 1257, 1259, 1265, 1273, 1351, 1366, 1386, 1412, 1419, 1420, 1422, 1423, 1430, 1472, 1486, 1497, 1499, 1504, 1506, 1511, 1517, 1518, 1527, 1528, 1529, 1538, 1704, 1710, 1712, 1713, 1726, 1728, 1729], "int": [0, 2, 10, 11, 15, 24, 30, 35, 36, 48, 49, 63, 67, 72, 76, 97, 99, 101, 105, 126, 230, 244, 276, 308, 309, 320, 329, 330, 331, 341, 348, 350, 351, 352, 366, 371, 372, 373, 383, 385, 386, 388, 389, 394, 395, 412, 414, 416, 422, 425, 431, 432, 434, 435, 437, 453, 455, 456, 457, 467, 472, 476, 477, 483, 485, 486, 487, 488, 489, 491, 494, 496, 500, 503, 505, 507, 509, 511, 512, 519, 521, 526, 528, 531, 533, 535, 537, 538, 540, 541, 546, 549, 550, 551, 552, 553, 561, 562, 563, 564, 565, 566, 571, 592, 593, 594, 595, 598, 606, 612, 613, 616, 621, 632, 634, 636, 637, 640, 641, 643, 644, 647, 648, 658, 664, 670, 676, 682, 688, 717, 718, 719, 725, 726, 727, 732, 733, 739, 740, 759, 772, 773, 778, 779, 784, 785, 786, 787, 792, 794, 799, 800, 801, 806, 807, 808, 811, 812, 815, 816, 818, 821, 822, 825, 826, 827, 828, 833, 835, 841, 842, 848, 849, 856, 857, 863, 864, 870, 871, 877, 878, 883, 884, 902, 906, 912, 913, 917, 918, 923, 924, 925, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1005, 1007, 1008, 1009, 1014, 1018, 1019, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1051, 1054, 1055, 1058, 1060, 1061, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1124, 1178, 1228, 1230, 1238, 1246, 1249, 1250, 1257, 1265, 1273, 1277, 1279, 1286, 1382, 1385, 1386, 1387, 1390, 1399, 1403, 1413, 1414, 1415, 1419, 1420, 1422, 1511, 1512, 1526, 1527, 1528, 1539, 1543, 1564, 1614, 1616, 1618, 1619, 1633, 1638, 1639, 1640, 1641, 1642, 1697, 1716], "int64": [276, 278, 1715, 1724, 1725], "integ": [98, 105, 165, 183, 230, 243, 339, 421, 493, 508, 536, 1123, 1129, 1130, 1131, 1148, 1154, 1166, 1175, 1179, 1187, 1191, 1193, 1252, 1254, 1256, 1269, 1270, 1385, 1386, 1390, 1405, 1423, 1481], "integr": [105, 188, 230, 278, 452, 453, 636, 637, 643, 644, 769, 775, 780, 788, 795, 802, 920, 921, 1265, 1273, 1385, 1386, 1422, 1511, 1520, 1707, 1710, 1713, 1718], "integration_direct": 1520, "intend": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 382, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1016, 1031, 1122, 1203, 1274, 1278, 1286, 1306, 1440, 1516, 1713, 1722], "intens": [420, 735, 1651, 1679, 1702, 1706, 1707, 1710, 1713, 1717, 1727, 1728, 1729], "intent": [1500, 1507], "inter": 1257, "interact": [1430, 1564], "interest": [5, 18, 19, 23, 46, 1088, 1344, 1694, 1702, 1714, 1725, 1726, 1731], "interfac": [1131, 1136, 1166, 1167, 1187, 1468, 1701, 1710], "interior": 1710, "interleav": 1258, "intermedi": 1413, "intern": [1122, 1385, 1411, 1413, 1414, 1423, 1515, 1527, 1528, 1710, 1711], "interp1d": 505, "interp_nan": [490, 491], "interp_par": [758, 759], "interpn": [490, 491, 686, 729, 730, 735, 736], "interpn_par": [490, 491], "interpn_pars_ct": [730, 736], "interpn_pars_p": [730, 736], "interpol": [453, 490, 491, 505, 655, 656, 686, 706, 708, 713, 721, 729, 730, 735, 736, 758, 759, 780, 781, 788, 789, 795, 796, 1122, 1282, 1283, 1390, 1405, 1414, 1481, 1702, 1710], "interpolation_method": 1390, "interpolation_stag": 1390, "interpret": [1228, 1238, 1239, 1253, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1466, 1511, 1513, 1514, 1517, 1520, 1527, 1528, 1539, 1540, 1543, 1710], "interruptederror": 1564, "intersect": [1282, 1283, 1423, 1572, 1636, 1637, 1704], "interv": [1202, 1221, 1257, 1259, 1282, 1283, 1404, 1497, 1504, 1518, 1528, 1539, 1724], "intial": [89, 92, 1065, 1068], "introduc": [660, 1707, 1710], "intuit": 1710, "invalid": [1131, 1132, 1149, 1155, 1156, 1166, 1187, 1402, 1404, 1433, 1434, 1468], "invalid_affin": [1131, 1133, 1166, 1187], "invalid_non_affin": [1131, 1134, 1166, 1187], "invalid_typ": [1123, 1126], "invers": [1122, 1131, 1140, 1147, 1150, 1166, 1174, 1176, 1187, 1190, 1192, 1423, 1431, 1432, 1494, 1501, 1542, 1545, 1565, 1567, 1572, 1574, 1577, 1582, 1589, 1596, 1599, 1604, 1607, 1668, 1706, 1729], "invert": [1089, 1122, 1131, 1140, 1150, 1166, 1176, 1187, 1192, 1279, 1358, 1373, 1395, 1396, 1423, 1565, 1567, 1572, 1574, 1577, 1582, 1589, 1596, 1599, 1604, 1607, 1704], "invert_axi": 1089, "invert_xaxi": [1122, 1355, 1358, 1395, 1494, 1496], "invert_yaxi": [1122, 1370, 1373, 1396, 1501, 1503], "invertedareageometri": [1567, 1577, 1599, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1704], "invertedpolartransform": [1122, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165], "investig": [1715, 1720], "invis": [1426, 1456, 1531, 1532], "invit": 1716, "invok": [660, 769, 830, 838, 845, 852, 1128, 1702, 1710, 1711, 1712, 1715, 1727, 1728, 1729], "involv": [1401, 1710], "inx": [650, 651], "io": 1710, "ioerror": 1564, "iop": [914, 920], "iopscienc": [914, 920], "ipar": [453, 505, 686, 920, 921], "ipars_ct": [729, 735], "ipars_p": [729, 735], "ipykernel_2024": 1714, "ipykernel_2197": 1715, "ipynb": 1710, "iqr": 1257, "irrespect": [1414, 1710], "is_affin": [1131, 1151, 1166, 1177, 1187], "is_bbox": [1131, 1152, 1166, 1187], "is_distribut": [1618, 1622], "is_integ": [105, 188, 230, 278], "is_separ": [1131, 1153, 1166, 1178, 1187], "is_transform_set": [1122, 1397], "isadirectoryerror": 1564, "isax": 1399, "isel": [334, 491], "isinst": [1284, 1564], "isol": [1282, 1283], "issu": [1419, 1471, 1710, 1711], "issubclass": [1123, 1128, 1564], "ital": 1523, "item": [105, 116, 189, 230, 235, 1715, 1720], "items": [105, 191, 230], "itemset": [105, 190, 230], "iter": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 31, 35, 39, 42, 46, 52, 56, 60, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 382, 385, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 457, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 719, 721, 727, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 786, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1065, 1068, 1069, 1419, 1468, 1527, 1564, 1693, 1696, 1703, 1710, 1713, 1714, 1715, 1724, 1726], "iterative_calc": [1715, 1726], "itr": 31, "its": [545, 566, 577, 1122, 1131, 1144, 1149, 1150, 1166, 1169, 1171, 1176, 1187, 1192, 1241, 1243, 1257, 1275, 1281, 1284, 1290, 1347, 1385, 1386, 1387, 1390, 1392, 1394, 1412, 1413, 1414, 1428, 1430, 1431, 1432, 1441, 1466, 1520, 1527, 1528, 1534, 1536, 1539, 1710, 1711, 1725, 1731], "itself": [230, 279, 1122, 1271, 1272, 1273, 1307, 1422, 1424], "ityp": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 1697], "iw": [1710, 1711, 1716], "iwopi": 1711, "iwt7": [1716, 1718], "j": [860, 874, 914, 1257, 1412, 1414], "jensen": [909, 1707, 1713, 1718], "jensen_": [1710, 1713, 1718], "jensen_linear_k004": 1720, "jensen_linear_k007": [1717, 1725], "jensen_linear_k0075": 1710, "jensen_quadratic_k0075": [1713, 1718], "jensenwak": [909, 910, 911, 912, 913, 1707, 1710, 1718], "jfm": [802, 880, 886], "job": 1043, "john": [1265, 1273, 1422], "joinstyl": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "jona": [1564, 1708, 1715, 1717, 1719, 1724, 1726, 1728], "joss": 1708, "journal": 1711, "jshtml": [1724, 1726], "json": [486, 1011, 1701], "jump": 1710, "jupyt": 1709, "just": [94, 1248, 1277, 1306, 1392, 1402, 1405, 1419, 1433, 1434, 1468, 1518, 1529, 1696, 1710, 1721, 1730], "juul": 577, "k": [459, 460, 461, 462, 701, 702, 860, 861, 867, 868, 874, 886, 902, 909, 914, 920, 1252, 1256, 1269, 1270, 1279, 1419, 1543, 1662, 1663, 1664, 1698, 1702, 1706, 1710, 1713, 1715, 1718, 1724, 1726, 1727, 1728], "k1": [577, 578], "k2": [577, 578], "k3": [577, 578], "k_var": [459, 461, 701, 702, 861, 1718], "ka": [459, 461, 462, 1710, 1713, 1718], "kaiser": 1390, "kappa": [280, 1550, 1552, 1554, 1557, 1558, 1560, 1697, 1705], "karman": [280, 1550, 1552, 1554, 1557, 1558, 1560, 1697], "kb": [459, 461, 462, 701, 702, 1663, 1664, 1706, 1710, 1713, 1718], "kde": 1539, "keep": [325, 328, 344, 377, 427, 1257, 1712], "keep_model": 1710, "kei": [0, 2, 4, 5, 18, 19, 22, 23, 40, 44, 48, 54, 58, 62, 74, 75, 82, 87, 96, 105, 123, 230, 285, 316, 325, 326, 333, 338, 344, 348, 358, 365, 371, 372, 373, 374, 375, 376, 377, 385, 394, 395, 398, 400, 407, 412, 427, 429, 430, 441, 457, 467, 468, 470, 492, 506, 518, 523, 524, 525, 531, 533, 534, 549, 550, 551, 567, 568, 584, 592, 593, 598, 606, 612, 616, 620, 624, 628, 632, 653, 657, 663, 667, 668, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 786, 811, 812, 813, 814, 815, 816, 817, 822, 824, 825, 827, 833, 834, 836, 841, 843, 848, 850, 856, 858, 863, 865, 870, 872, 883, 886, 904, 912, 926, 1032, 1033, 1034, 1048, 1054, 1055, 1090, 1097, 1098, 1099, 1101, 1102, 1103, 1115, 1119, 1122, 1123, 1125, 1239, 1257, 1259, 1274, 1423, 1424, 1468, 1538, 1539, 1616, 1697, 1718], "kelvin": [1650, 1678, 1706], "kendal": 1257, "kept": [1165, 1277, 1390, 1398, 1512, 1710], "kernel": [1538, 1539], "keyboardinterrupt": 1564, "keyerror": [1096, 1564], "keyword": [11, 320, 1238, 1246, 1249, 1250, 1253, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1387, 1392, 1393, 1394, 1401, 1403, 1404, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1490, 1496, 1498, 1499, 1503, 1505, 1506, 1511, 1512, 1513, 1517, 1518, 1523, 1525, 1527, 1528, 1529, 1624, 1626, 1632, 1634, 1714, 1715], "kg": [1649, 1676, 1706], "kick": [636, 1702], "kilo": [307, 1697], "kind": [567, 1352, 1353, 1354, 1367, 1368, 1369, 1700, 1717, 1729], "kinet": [1713, 1719], "know": [1131, 1156, 1166, 1187, 1217, 1518, 1529], "known": [460, 1131, 1144, 1166, 1171, 1187], "kti": [701, 702, 703, 704, 705, 1663, 1664, 1702, 1706, 1710, 1713, 1718, 1727], "kti_": 1718, "kti_02": 1727, "kti_05": [1728, 1729], "kti_amb": 1718, "kti_amb_": 1718, "kw": [285, 307, 443, 444, 660, 661, 710, 1030, 1697, 1713, 1715, 1718, 1724, 1726], "kwarg": [0, 4, 5, 10, 11, 12, 18, 19, 22, 23, 94, 105, 135, 230, 253, 308, 318, 320, 335, 344, 345, 377, 378, 392, 397, 410, 417, 420, 423, 427, 428, 429, 430, 438, 440, 442, 443, 447, 448, 451, 452, 458, 460, 465, 469, 484, 485, 490, 498, 499, 501, 502, 503, 514, 516, 523, 531, 544, 545, 547, 551, 552, 557, 567, 572, 594, 599, 601, 602, 603, 609, 615, 630, 636, 643, 650, 651, 655, 656, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 743, 746, 747, 750, 751, 754, 755, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1002, 1005, 1007, 1009, 1014, 1016, 1023, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1046, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1060, 1061, 1064, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1086, 1088, 1098, 1100, 1101, 1104, 1105, 1106, 1107, 1108, 1115, 1120, 1121, 1122, 1131, 1136, 1166, 1167, 1187, 1196, 1201, 1205, 1208, 1218, 1224, 1225, 1228, 1238, 1239, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1258, 1263, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1289, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1399, 1401, 1402, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1468, 1469, 1472, 1474, 1478, 1479, 1486, 1487, 1490, 1495, 1498, 1499, 1500, 1502, 1505, 1506, 1507, 1511, 1512, 1513, 1514, 1518, 1521, 1523, 1525, 1527, 1528, 1529, 1530, 1540, 1543, 1547, 1548, 1615, 1616, 1618, 1623, 1624, 1625, 1626, 1627, 1632, 1634, 1642, 1704], "l": [914, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1320, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512, 1720], "label": [98, 339, 421, 434, 435, 493, 508, 536, 1037, 1038, 1039, 1040, 1041, 1042, 1088, 1089, 1122, 1208, 1213, 1217, 1224, 1238, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1263, 1265, 1273, 1277, 1279, 1281, 1282, 1283, 1318, 1320, 1330, 1350, 1352, 1353, 1354, 1359, 1361, 1363, 1367, 1368, 1369, 1374, 1376, 1378, 1382, 1385, 1386, 1388, 1392, 1398, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1425, 1435, 1446, 1460, 1468, 1469, 1472, 1473, 1486, 1490, 1495, 1499, 1500, 1502, 1506, 1507, 1512, 1513, 1517, 1518, 1521, 1523, 1525, 1540, 1541, 1544, 1714, 1715, 1716, 1720, 1723, 1727], "label1": [1499, 1506], "label2": [1468, 1499, 1506], "label_map": [1072, 1073, 1074, 1075, 1076, 1077], "label_out": [1122, 1398], "label_typ": 1253, "labelbottom": 1525, "labelcolor": [1424, 1525], "labeldist": 1418, "labelfontfamili": 1525, "labelleft": 1525, "labelloc": [1495, 1502], "labelpad": [1122, 1495, 1502], "labelpo": 1424, "labelright": 1525, "labelrot": 1525, "labels": 1525, "labelsep": 1424, "labelspac": 1399, "labeltop": 1525, "labl": 1088, "lack": 1413, "lag": [1228, 1543], "lambda": [1431, 1432, 1724, 1726], "lambert": 1394, "lanczo": 1390, "larg": [1248, 1386, 1412, 1414, 1523, 1525, 1713], "larger": [1390, 1412, 1414, 1423, 1487], "largest": [1254, 1385], "larsen": [577, 1257], "last": [16, 1016, 1035, 1140, 1259, 1280, 1386, 1398, 1412, 1414, 1511, 1562, 1712], "later": [1140, 1230, 1721, 1724, 1726, 1727], "latest": [93, 1069, 1712], "latter": [414, 594, 632, 1414, 1616, 1710, 1721, 1723, 1727, 1729], "launch": 1727, "law": [1249, 1387], "layer": [1513, 1715, 1716, 1718], "layout": [563, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1122, 1317, 1459, 1513, 1701, 1703, 1710, 1711, 1724, 1726, 1727], "layout_opt": 1710, "layout_regular_grid": 1710, "layout_single_st": 1710, "layout_wind_ros": 1710, "ldict": [563, 1701], "lead": [1385, 1390, 1430, 1451, 1720], "least": [1385, 1390, 1521], "leav": [1243, 1414, 1496, 1503, 1520, 1712], "leebyron": 1513, "left": [1122, 1166, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1345, 1352, 1353, 1358, 1367, 1368, 1382, 1385, 1386, 1390, 1392, 1393, 1394, 1399, 1403, 1405, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1431, 1432, 1435, 1437, 1439, 1441, 1467, 1490, 1495, 1496, 1502, 1503, 1511, 1512, 1518, 1521, 1523, 1525, 1526, 1527, 1528, 1542, 1545, 1726], "leftmost": 1387, "legal": [1281, 1513], "legend": [1031, 1059, 1060, 1122, 1257, 1259, 1318, 1319, 1320, 1386, 1394, 1399, 1418, 1419, 1427, 1435, 1460, 1517, 1714, 1715, 1720], "legend_handler_map": [1122, 1320], "legloc": [1031, 1726], "len": [1228, 1254, 1257, 1273, 1418, 1419, 1422, 1423, 1514, 1517, 1543, 1564, 1720], "length": [105, 191, 230, 487, 549, 551, 788, 789, 795, 796, 1122, 1157, 1158, 1159, 1161, 1165, 1181, 1182, 1183, 1194, 1228, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1337, 1382, 1385, 1386, 1388, 1392, 1399, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1430, 1435, 1468, 1480, 1500, 1507, 1511, 1512, 1513, 1520, 1521, 1523, 1525, 1529, 1540, 1543, 1550, 1551, 1552, 1554, 1555, 1557, 1558, 1560, 1666, 1689, 1706, 1710, 1713, 1716, 1719], "length_includes_head": 1241, "less": [1228, 1257, 1386, 1387, 1423, 1543, 1710, 1713, 1720], "let": [1131, 1156, 1166, 1187, 1715, 1717, 1719, 1720, 1721, 1723, 1726, 1727, 1728, 1729], "letter": [1419, 1616, 1634], "level": [2, 49, 63, 67, 72, 76, 99, 308, 309, 350, 351, 352, 369, 383, 386, 388, 422, 483, 485, 486, 487, 488, 489, 491, 494, 500, 507, 509, 511, 519, 526, 535, 537, 538, 540, 546, 551, 552, 553, 557, 561, 562, 563, 564, 565, 566, 571, 613, 621, 640, 643, 644, 647, 658, 664, 670, 676, 682, 688, 717, 718, 725, 726, 732, 733, 739, 740, 787, 801, 808, 818, 828, 835, 842, 849, 857, 878, 884, 906, 918, 924, 925, 1005, 1016, 1018, 1019, 1023, 1037, 1038, 1039, 1040, 1041, 1042, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1196, 1203, 1218, 1252, 1256, 1259, 1263, 1269, 1270, 1392, 1495, 1502, 1508, 1518, 1527, 1528, 1614, 1618, 1619, 1633, 1642, 1692, 1698, 1700, 1702, 1710, 1715, 1718, 1722, 1724], "level10": 1719, "levelrotor": [643, 644, 645, 646, 647, 648, 649, 1702, 1710, 1718], "li": [577, 1414], "lib": 1564, "libmamba": 1712, "librari": 1725, "licens": 1564, "lie": [488, 1701], "light": 1523, "lighter": 1710, "like": [18, 488, 1122, 1157, 1159, 1181, 1228, 1239, 1244, 1247, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1263, 1269, 1270, 1277, 1279, 1280, 1281, 1282, 1283, 1286, 1306, 1385, 1386, 1387, 1388, 1390, 1405, 1412, 1413, 1414, 1418, 1419, 1420, 1423, 1430, 1433, 1434, 1466, 1474, 1496, 1500, 1503, 1507, 1512, 1513, 1514, 1517, 1518, 1527, 1528, 1529, 1534, 1538, 1539, 1540, 1543, 1696, 1713, 1716, 1719, 1723], "likewis": [1140, 1248, 1387], "lim": [1279, 1715, 1726], "lim_high": [948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1718], "lim_low": [948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1718], "limit": [74, 75, 320, 881, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1122, 1123, 1126, 1131, 1137, 1166, 1169, 1187, 1188, 1202, 1221, 1240, 1241, 1244, 1247, 1248, 1251, 1252, 1253, 1256, 1257, 1259, 1269, 1270, 1279, 1290, 1331, 1332, 1342, 1343, 1358, 1365, 1373, 1380, 1385, 1387, 1393, 1404, 1413, 1419, 1426, 1427, 1436, 1474, 1475, 1476, 1487, 1488, 1489, 1496, 1497, 1500, 1503, 1504, 1507, 1519, 1526, 1534, 1536, 1710, 1713], "line": [780, 781, 788, 789, 795, 796, 823, 825, 860, 863, 867, 870, 909, 912, 1037, 1038, 1039, 1089, 1122, 1162, 1184, 1228, 1235, 1238, 1246, 1248, 1249, 1250, 1254, 1255, 1257, 1259, 1263, 1269, 1270, 1273, 1279, 1280, 1300, 1321, 1337, 1356, 1364, 1371, 1379, 1382, 1386, 1388, 1392, 1393, 1399, 1400, 1403, 1412, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1435, 1446, 1448, 1466, 1472, 1480, 1481, 1486, 1511, 1514, 1517, 1518, 1520, 1521, 1525, 1527, 1528, 1530, 1538, 1539, 1540, 1543, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1710, 1712, 1714, 1715, 1719, 1722, 1725], "line2d": [1122, 1228, 1235, 1238, 1246, 1249, 1250, 1257, 1259, 1265, 1273, 1277, 1279, 1284, 1356, 1364, 1371, 1379, 1382, 1402, 1403, 1415, 1419, 1420, 1422, 1433, 1434, 1472, 1486, 1512, 1518, 1525, 1530, 1543], "linear": [701, 928, 929, 933, 934, 938, 939, 943, 944, 948, 954, 1122, 1249, 1265, 1269, 1273, 1385, 1387, 1390, 1401, 1403, 1412, 1413, 1414, 1422, 1430, 1498, 1505, 1511, 1526, 1527, 1528, 1702, 1713, 1718, 1728], "linearli": [490, 491, 830, 838, 845, 852, 1520], "linearloc": [1531, 1532], "linearscal": [1498, 1505], "linearsuperposit": 1710, "linecollect": [1228, 1279, 1280, 1388, 1520, 1538, 1539, 1540, 1543], "linefmt": [1122, 1517], "linelength": 1280, "lineoffset": [1122, 1280], "lineplot": 1386, "lines_bars_and_mark": [1253, 1255], "linespac": 1523, "linestyl": [1122, 1228, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1388, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1468, 1512, 1517, 1518, 1527, 1540, 1543, 1714, 1715, 1720], "linewidth": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1468, 1512, 1520, 1527, 1720], "link": [1711, 1727], "linspac": [1269, 1270, 1564, 1714, 1715, 1720, 1725], "list": [0, 2, 3, 4, 10, 18, 19, 22, 39, 41, 42, 45, 46, 47, 50, 51, 52, 53, 55, 56, 59, 60, 64, 69, 70, 74, 75, 80, 83, 84, 85, 88, 94, 98, 100, 102, 230, 243, 308, 323, 325, 326, 332, 334, 335, 336, 337, 339, 340, 342, 346, 353, 355, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 379, 390, 392, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 418, 420, 421, 424, 434, 435, 436, 437, 438, 440, 443, 448, 450, 452, 453, 459, 465, 471, 474, 476, 478, 479, 483, 487, 489, 490, 491, 493, 495, 498, 499, 501, 503, 505, 508, 510, 511, 514, 516, 520, 523, 527, 529, 531, 533, 536, 539, 540, 542, 544, 547, 552, 553, 562, 564, 573, 574, 577, 580, 581, 585, 586, 587, 589, 590, 591, 594, 599, 601, 603, 608, 609, 614, 615, 618, 619, 622, 623, 625, 626, 627, 629, 630, 636, 637, 643, 644, 650, 651, 654, 655, 656, 659, 660, 665, 666, 667, 671, 672, 673, 674, 677, 678, 683, 685, 686, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 720, 721, 728, 729, 734, 735, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 764, 765, 768, 769, 774, 775, 780, 788, 795, 802, 809, 810, 813, 819, 820, 823, 829, 830, 837, 838, 844, 845, 851, 852, 853, 859, 860, 866, 867, 873, 874, 879, 880, 885, 886, 908, 909, 914, 919, 920, 927, 928, 933, 938, 943, 948, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1004, 1006, 1018, 1021, 1022, 1025, 1027, 1028, 1029, 1031, 1051, 1054, 1055, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1083, 1088, 1090, 1092, 1095, 1097, 1101, 1107, 1108, 1114, 1115, 1122, 1123, 1124, 1126, 1165, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1263, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1302, 1308, 1316, 1321, 1344, 1356, 1359, 1361, 1363, 1364, 1371, 1374, 1376, 1378, 1379, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1402, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1433, 1434, 1435, 1465, 1468, 1472, 1486, 1490, 1499, 1500, 1506, 1507, 1512, 1513, 1518, 1519, 1521, 1523, 1527, 1528, 1534, 1538, 1539, 1540, 1547, 1561, 1564, 1573, 1574, 1575, 1616, 1692, 1695, 1696, 1698, 1700, 1701, 1703, 1710, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722], "ll": [1499, 1506], "lname": [563, 1701], "lo": [1724, 1726], "load": [0, 4, 5, 10, 18, 22, 23, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 352, 356, 362, 369, 370, 379, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 448, 452, 459, 465, 471, 490, 491, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1710, 1711, 1717], "load_data": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 352, 356, 362, 369, 370, 379, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 448, 452, 459, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1710], "load_modul": [1613, 1704], "loader": 1564, "loc": [503, 505, 511, 531, 533, 540, 1122, 1196, 1203, 1206, 1208, 1215, 1217, 1218, 1345, 1399, 1485, 1490, 1495, 1499, 1502, 1506, 1517, 1521, 1720, 1721, 1723], "local": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 382, 384, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 861, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1526, 1564, 1702, 1711, 1712, 1713, 1716, 1724, 1727], "localclust": 1727, "localhost": 1727, "locat": [479, 630, 1031, 1090, 1092, 1093, 1122, 1131, 1159, 1166, 1187, 1196, 1198, 1203, 1205, 1206, 1207, 1208, 1209, 1217, 1218, 1219, 1223, 1244, 1254, 1255, 1257, 1259, 1279, 1293, 1341, 1352, 1353, 1354, 1365, 1367, 1368, 1369, 1380, 1386, 1390, 1399, 1401, 1402, 1420, 1423, 1424, 1431, 1432, 1433, 1434, 1439, 1445, 1484, 1485, 1490, 1499, 1500, 1506, 1507, 1517, 1523, 1527, 1528, 1639, 1640, 1712, 1716, 1720, 1722, 1723, 1729], "locator_param": [1122, 1401], "log": [742, 746, 750, 754, 1122, 1166, 1187, 1196, 1203, 1218, 1255, 1385, 1386, 1387, 1390, 1402, 1412, 1413, 1414, 1430, 1433, 1434, 1498, 1500, 1505, 1507, 1527, 1528, 1551, 1555, 1702, 1705, 1713], "log10": [1385, 1403, 1511], "log_": [1273, 1385, 1422], "logarithm": [1385, 1387, 1402, 1433, 1434], "logit": [1385, 1387, 1390, 1412, 1413, 1414, 1430, 1498, 1505, 1527, 1528], "logitscal": [1498, 1505], "loglog": [1122, 1249, 1402], "lognorm": [1385, 1387], "logscal": [1498, 1505], "logz": [1551, 1555, 1705], "lolim": 1279, "long": [1059, 1122, 1187, 1212, 1249, 1423, 1431, 1432, 1446, 1710, 1713], "long_nam": 1716, "longer": [1196, 1203, 1218, 1279, 1423, 1710], "look": [2, 813, 814, 824, 1030, 1418, 1423, 1715, 1716, 1719, 1720, 1723, 1728], "lookup": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 385, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 460, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 656, 660, 661, 667, 673, 678, 685, 690, 691, 695, 698, 701, 706, 708, 710, 713, 714, 721, 722, 729, 730, 735, 736, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1030, 1702, 1710, 1713], "lookup_k": [459, 460], "lookup_ti": [459, 460], "lookuperror": 1564, "lookupt": [655, 656, 657, 658, 659, 1702, 1710, 1713], "loop": [325, 326, 334, 1562, 1710, 1714, 1724, 1726], "loop_dim": [325, 326, 332, 334], "loss": [1273, 1422], "lost": [1472, 1486, 1499, 1506], "low": [1254, 1259, 1538, 1539], "lower": [643, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1031, 1122, 1239, 1247, 1251, 1255, 1257, 1259, 1279, 1355, 1370, 1385, 1386, 1390, 1392, 1393, 1394, 1399, 1424, 1435, 1441, 1456, 1494, 1501, 1508, 1512, 1514, 1520, 1523, 1527, 1528, 1702, 1710, 1726], "lower_left": 1392, "lower_right": 1392, "lowest": [1254, 1257, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "lowlevel": 1231, "lt": [1715, 1716, 1718, 1719, 1724, 1725, 1726], "luka": 1708, "lw": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1468, 1512, 1720], "ly": 1257, "lz": [1551, 1555], "m": [385, 491, 503, 729, 735, 788, 789, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1390, 1392, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1437, 1497, 1503, 1504, 1512, 1513, 1521, 1523, 1526, 1646, 1647, 1648, 1653, 1659, 1661, 1666, 1673, 1674, 1675, 1683, 1684, 1689, 1706, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1725, 1726, 1727, 1728], "m3": [1649, 1676, 1706], "ma": 1523, "machin": 1702, "macosx": 1481, "made": [1123, 1390], "madsen": [577, 803, 830, 831, 838, 839, 845, 846, 852, 853, 854, 875, 881, 915, 921, 1710, 1715, 1718, 1724, 1726], "madsenaxialinduct": [577, 578, 579, 1702, 1710, 1718], "magenta": 1419, "magnitud": [1122, 1238, 1254, 1403, 1415, 1422, 1511, 1526], "magnitude_spectrum": [1122, 1238, 1403, 1415, 1422, 1511], "mai": [601, 660, 1123, 1138, 1140, 1162, 1184, 1196, 1208, 1210, 1225, 1230, 1240, 1241, 1248, 1253, 1254, 1257, 1279, 1280, 1282, 1283, 1352, 1353, 1354, 1358, 1365, 1367, 1368, 1369, 1373, 1380, 1383, 1386, 1390, 1392, 1393, 1407, 1412, 1413, 1414, 1419, 1420, 1423, 1429, 1430, 1431, 1432, 1436, 1439, 1466, 1485, 1496, 1498, 1499, 1503, 1505, 1506, 1517, 1520, 1527, 1528, 1702, 1710, 1717, 1724, 1729], "main": [39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 94, 96, 332, 333, 335, 338, 346, 348, 356, 358, 362, 365, 369, 399, 400, 404, 407, 420, 440, 441, 443, 490, 492, 498, 501, 503, 506, 514, 516, 518, 523, 525, 531, 534, 544, 547, 566, 580, 581, 584, 618, 620, 623, 624, 626, 628, 650, 653, 655, 657, 660, 663, 667, 669, 673, 675, 678, 681, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 721, 724, 729, 731, 735, 738, 1257, 1259, 1414, 1431, 1712, 1716, 1720, 1730], "mainli": [1277, 1713], "majid": [802, 874, 880, 886], "major": [1122, 1244, 1287, 1288, 1359, 1363, 1365, 1374, 1378, 1380, 1382, 1401, 1499, 1500, 1506, 1507, 1525, 1526], "make": [1122, 1159, 1248, 1255, 1259, 1279, 1385, 1387, 1394, 1402, 1412, 1414, 1418, 1423, 1431, 1432, 1433, 1434, 1511, 1518, 1520, 1525, 1529, 1539, 1636, 1702, 1710, 1712, 1713, 1719, 1722], "manag": [1693, 1709, 1710, 1711], "manage_tick": [1257, 1259], "mandatori": [1500, 1507], "mani": [490, 491, 1141, 1254, 1255, 1277, 1710, 1711, 1713], "manifest": 1710, "manual": [1229, 1719], "map": [0, 2, 328, 490, 491, 499, 503, 505, 531, 533, 549, 551, 618, 619, 655, 656, 674, 1048, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1083, 1107, 1108, 1122, 1131, 1166, 1187, 1257, 1259, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528, 1538, 1539, 1564, 1690, 1691, 1703, 1706, 1710, 1713, 1719, 1723], "margin": [1122, 1243, 1244, 1360, 1375, 1385, 1404, 1497, 1504, 1519, 1536], "mark": [1248, 1392, 1404, 1531, 1532, 1538, 1539, 1719], "marker": [1122, 1228, 1238, 1246, 1249, 1250, 1259, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1430, 1446, 1448, 1468, 1512, 1517, 1518, 1530, 1543], "markeredgecolor": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "markeredgewidth": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "markerfacecolor": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "markerfacecoloralt": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "markerfmt": [1122, 1517], "markerlin": 1517, "markers": [1122, 1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1430, 1512], "markerstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1430, 1512], "markeveri": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "martin": 1708, "mask": [1088, 1254, 1277, 1386, 1402, 1412, 1414, 1423, 1430, 1433, 1434, 1527, 1528, 1529, 1530, 1709, 1710, 1711, 1723], "master": 1562, "match": [328, 1107, 1110, 1111, 1122, 1254, 1257, 1259, 1280, 1284, 1386, 1390, 1404, 1423, 1430, 1499, 1506, 1515, 1520, 1529], "math_fontfamili": 1523, "mathemat": [1710, 1713], "mathematisch": 1564, "mathrm": 1422, "mathtext": 1526, "matlab": [1265, 1273, 1422, 1511, 1517], "matplotlib": [1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1060, 1064, 1089, 1122, 1123, 1126, 1131, 1137, 1160, 1166, 1169, 1187, 1188, 1196, 1203, 1208, 1218, 1228, 1238, 1239, 1240, 1241, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1267, 1269, 1270, 1273, 1275, 1277, 1279, 1281, 1282, 1283, 1286, 1290, 1293, 1301, 1306, 1344, 1350, 1352, 1353, 1354, 1360, 1363, 1367, 1368, 1369, 1375, 1378, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1399, 1403, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1435, 1436, 1439, 1440, 1441, 1449, 1450, 1452, 1455, 1456, 1463, 1467, 1468, 1472, 1486, 1490, 1491, 1495, 1498, 1502, 1505, 1511, 1512, 1514, 1520, 1521, 1523, 1527, 1528, 1530, 1531, 1532, 1539, 1540, 1543, 1564, 1566, 1576, 1584, 1589, 1591, 1598, 1606, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "matric": [1390, 1512], "matrix": [1122, 1131, 1136, 1146, 1166, 1167, 1173, 1180, 1187, 1390, 1405, 1412, 1414], "matshow": [1122, 1390, 1405], "matter": [471, 1721], "max": [105, 192, 230, 549, 550, 551, 674, 933, 960, 966, 1009, 1032, 1033, 1034, 1072, 1073, 1074, 1075, 1076, 1077, 1166, 1252, 1256, 1269, 1270, 1386, 1527, 1528, 1538, 1564, 1702, 1710, 1723], "max_it": [10, 11], "max_length": [788, 789], "max_p": [1665, 1706, 1721, 1723], "max_wake_length": [795, 796], "maxim": [10, 11, 574, 575, 636, 637, 660, 788, 789, 795, 796, 881, 1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1565, 1568, 1572, 1574, 1578, 1582, 1585, 1589, 1592, 1596, 1600, 1604, 1608, 1614, 1665, 1702, 1706, 1710, 1713, 1721], "maximum": [1122, 1143, 1166, 1257, 1342, 1401, 1487, 1488, 1520, 1527, 1528, 1538, 1539, 1710, 1714, 1728], "maxlag": [1228, 1543], "maxlength": 1520, "maxnloc": [1401, 1527, 1528], "maxp": [1665, 1706, 1721, 1723], "maxtick": [1196, 1197, 1203, 1218], "maxval": 1487, "mbook": [2, 308, 309, 1084, 1085, 1086, 1087, 1713, 1714, 1715, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1729], "mcgill": 1257, "mclass": 572, "mdata": [0, 10, 18, 32, 39, 40, 42, 44, 46, 48, 52, 54, 56, 58, 60, 62, 80, 82, 85, 87, 94, 96, 308, 323, 332, 335, 338, 346, 348, 352, 356, 358, 359, 362, 365, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 385, 388, 392, 394, 395, 396, 398, 399, 400, 401, 404, 407, 410, 412, 414, 415, 420, 422, 438, 440, 441, 443, 448, 452, 453, 454, 455, 456, 459, 465, 467, 468, 470, 471, 472, 473, 490, 492, 494, 498, 500, 501, 503, 506, 509, 514, 516, 518, 519, 523, 525, 531, 534, 538, 544, 546, 547, 574, 577, 580, 581, 584, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 615, 616, 617, 618, 620, 621, 623, 624, 626, 628, 630, 632, 633, 636, 643, 650, 653, 655, 657, 658, 660, 663, 667, 669, 673, 675, 678, 681, 682, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 718, 721, 724, 726, 729, 731, 733, 735, 738, 740, 742, 746, 750, 754, 758, 762, 765, 769, 771, 772, 773, 775, 777, 778, 779, 780, 783, 784, 785, 788, 791, 792, 793, 794, 795, 798, 799, 800, 802, 805, 806, 807, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 823, 825, 826, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 880, 883, 886, 902, 903, 904, 905, 909, 912, 913, 914, 917, 920, 923, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 954, 957, 958, 960, 963, 964, 966, 969, 970, 972, 975, 976, 978, 981, 982, 984, 987, 988, 990, 993, 994, 996, 999, 1000, 1698, 1710], "mdata_kei": [886, 892], "mdl": [3, 1612], "mean": [2, 105, 193, 230, 308, 309, 350, 427, 433, 471, 488, 1009, 1016, 1021, 1024, 1025, 1028, 1032, 1033, 1034, 1036, 1051, 1058, 1060, 1070, 1072, 1073, 1074, 1241, 1249, 1257, 1259, 1265, 1273, 1279, 1385, 1390, 1422, 1511, 1514, 1529, 1538, 1539, 1614, 1704, 1710, 1713, 1715, 1719, 1727, 1728], "mean_eff": [1727, 1728], "mean_rew": [1009, 1719, 1727, 1728], "meanlin": [1257, 1259], "meanprop": [1257, 1259], "meant": [308, 1352, 1353, 1354, 1367, 1368, 1369], "measur": [1159, 1265, 1273, 1422, 1423, 1713], "mec": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "med": 1259, "media": 830, "median": [1257, 1259, 1538, 1539], "medianprop": [1257, 1259], "medici": [853, 1710], "medium": 1523, "meet": 1441, "mega": [281, 1697], "memori": [0, 4, 5, 6, 10, 18, 22, 23, 105, 155, 230, 308, 312, 313, 316, 352, 388, 422, 490, 491, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1203, 1277, 1710, 1727], "memoryerror": 1564, "memoryview": 1564, "ment": 1255, "mention": [1035, 1498, 1505, 1716], "mere": 434, "merg": 1715, "mesh": [1412, 1413, 1414], "meshgrid": [1254, 1423, 1520], "mesoscal": [1713, 1716], "mess": 1710, "messag": 1711, "meta": [325, 1698, 1715, 1726], "meteorolog": [420, 1731], "meteorologi": 1254, "method": [105, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 485, 656, 928, 929, 933, 934, 938, 939, 943, 944, 1120, 1121, 1122, 1131, 1138, 1142, 1150, 1165, 1166, 1176, 1187, 1192, 1202, 1203, 1207, 1208, 1210, 1217, 1221, 1223, 1225, 1229, 1243, 1248, 1255, 1257, 1273, 1275, 1286, 1306, 1382, 1385, 1386, 1387, 1390, 1392, 1393, 1401, 1404, 1412, 1413, 1414, 1418, 1420, 1422, 1423, 1430, 1431, 1432, 1448, 1452, 1494, 1499, 1501, 1506, 1512, 1513, 1517, 1518, 1527, 1528, 1539], "mew": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "meyer": [838, 845, 852, 1707, 1714], "mfc": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "mfcalt": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "mid": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1386, 1403, 1415, 1419, 1420, 1422, 1423, 1512, 1518], "middl": [1246, 1247, 1250, 1251, 1254, 1423, 1424, 1441], "midpoint": 1511, "might": [1131, 1144, 1166, 1171, 1187, 1401, 1496, 1503], "min": [105, 194, 230, 549, 550, 551, 674, 1009, 1032, 1033, 1034, 1072, 1073, 1074, 1075, 1076, 1077, 1166, 1252, 1256, 1269, 1270, 1386, 1527, 1528, 1538, 1564, 1710, 1723, 1724, 1726], "min_dist": [488, 1614, 1701, 1704], "mincnt": 1385, "minim": [488, 1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1513, 1565, 1569, 1572, 1574, 1579, 1582, 1586, 1589, 1593, 1596, 1601, 1604, 1609, 1614, 1710], "minimum": [1122, 1131, 1137, 1166, 1187, 1188, 1238, 1257, 1265, 1273, 1343, 1403, 1415, 1422, 1423, 1487, 1489, 1511, 1520, 1527, 1528, 1538, 1539, 1714], "ministri": 1711, "minlength": [1423, 1520], "minor": [1122, 1361, 1363, 1364, 1365, 1376, 1378, 1379, 1380, 1382, 1402, 1406, 1407, 1433, 1434, 1499, 1500, 1506, 1507, 1525], "minorticks_off": [1122, 1406, 1407], "minorticks_on": [1122, 1407], "minshaft": 1423, "minu": [1058, 1060, 1208, 1210], "minut": [780, 781, 795, 796, 1716, 1719, 1726], "minval": 1487, "mirror": [1710, 1714, 1715], "mirror_combo": 1715, "misalign": [802, 880, 1713, 1729], "misc": [1414, 1448, 1470, 1471], "miscellan": [1431, 1432, 1523], "mislead": 1260, "miss": [1107, 1108, 1548, 1710], "mit": 1711, "mitchel": 1390, "miter": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "mix": [719, 727, 1419, 1715], "mlab": [1228, 1265, 1273, 1422, 1511, 1539, 1543], "mod": [105, 138, 149, 230, 256, 266], "mod_cutin": [10, 11, 1715], "mode": [1115, 1119, 1122, 1228, 1252, 1256, 1269, 1270, 1511, 1517, 1543, 1724], "model": [0, 2, 3, 4, 5, 7, 10, 13, 18, 19, 22, 23, 29, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 295, 296, 308, 309, 311, 313, 314, 315, 316, 321, 323, 332, 333, 334, 335, 336, 337, 338, 340, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 420, 422, 424, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 448, 452, 453, 454, 455, 456, 457, 459, 465, 466, 467, 468, 469, 470, 471, 472, 473, 483, 490, 492, 494, 495, 498, 500, 501, 503, 506, 507, 509, 510, 514, 516, 518, 519, 520, 523, 525, 526, 527, 529, 531, 534, 535, 537, 538, 539, 542, 544, 546, 547, 563, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1007, 1016, 1036, 1043, 1046, 1047, 1049, 1052, 1056, 1062, 1063, 1070, 1078, 1081, 1084, 1086, 1087, 1088, 1671, 1672, 1692, 1697, 1698, 1700, 1706, 1709, 1710, 1711, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "model_id": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 389, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "model_nam": [346, 354, 580], "model_par": [802, 880], "model_typ": [567, 572], "modelbook": [2, 308, 309, 567, 568, 569, 570, 571, 572, 573, 1084, 1086, 1087, 1700, 1710, 1713, 1714, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1729], "models_state_sel": 435, "modif": [11, 446, 719, 727, 1202, 1221, 1713], "modifi": [39, 41, 42, 45, 46, 50, 52, 55, 56, 59, 60, 64, 80, 83, 85, 88, 94, 100, 335, 340, 346, 353, 356, 360, 362, 367, 369, 370, 371, 372, 373, 374, 392, 394, 395, 399, 402, 404, 408, 410, 414, 418, 420, 424, 438, 440, 443, 446, 465, 467, 468, 490, 495, 498, 501, 503, 510, 514, 516, 520, 523, 527, 531, 539, 544, 547, 580, 581, 585, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 618, 622, 623, 625, 626, 629, 630, 632, 636, 643, 650, 654, 655, 659, 660, 665, 667, 671, 673, 677, 678, 683, 685, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 719, 720, 721, 727, 728, 729, 734, 735, 741, 810, 813, 816, 817, 820, 823, 830, 833, 834, 838, 841, 845, 848, 852, 853, 856, 860, 867, 874, 880, 909, 914, 920, 1043, 1044, 1240, 1257, 1259, 1390, 1404, 1468, 1472, 1481, 1486, 1494, 1499, 1501, 1506, 1519, 1527, 1528, 1698, 1713, 1715], "modify_ct": [443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735, 1715], "modify_cutin": [443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735], "modify_p": [443, 446, 706, 708, 710, 713, 719, 721, 727, 729, 735, 1715], "modul": [1265, 1273, 1422, 1511, 1562, 1564, 1612, 1613, 1704, 1710], "modular": 1711, "modulenotfounderror": 1564, "modulespec": 1564, "mol": [549, 551, 754, 1556, 1557, 1559, 1560, 1666, 1705, 1706, 1713, 1715, 1716], "mol_abs_rang": [549, 551], "mollweid": 1394, "moment": [1647, 1648, 1674, 1675, 1706], "momentum": [574, 577, 1702], "monin": [1556, 1557, 1559, 1560, 1666, 1706, 1713, 1716], "monochrom": 1527, "monospac": 1523, "monoton": 1413, "month": [1280, 1719], "more": [1165, 1238, 1239, 1254, 1257, 1265, 1273, 1279, 1282, 1283, 1382, 1387, 1390, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1422, 1423, 1430, 1448, 1468, 1511, 1513, 1518, 1527, 1528, 1529, 1564, 1710, 1712, 1714, 1715, 1723, 1724, 1727], "moreov": 1519, "most": [65, 68, 69, 73, 74, 77, 78, 1122, 1254, 1257, 1265, 1273, 1286, 1300, 1306, 1386, 1412, 1413, 1414, 1419, 1422, 1441, 1448, 1499, 1506, 1511, 1518, 1520, 1527, 1528, 1531, 1532, 1564, 1713, 1715, 1729], "mostli": 1710, "mous": [1122, 1267, 1274, 1278, 1306, 1322, 1408, 1462, 1466, 1516], "mousebutton": [1274, 1516], "mouseev": [1122, 1267, 1306, 1391, 1416, 1466], "mouseov": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1408, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1462, 1512, 1521, 1523], "move": [1122, 1274, 1277, 1306, 1322, 1408, 1462, 1481, 1499, 1506, 1710, 1724, 1730], "mpltype": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1382, 1385, 1386, 1388, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1435, 1453, 1512, 1513, 1520, 1521, 1523, 1525, 1527, 1528, 1540], "mstates_sel": 434, "much": [1412, 1414, 1719, 1720, 1722, 1724], "multi": [18, 498, 501, 514, 813, 1696, 1701, 1709, 1710, 1711], "multi_height": 1710, "multialign": 1523, "multiheightncst": [498, 499, 500, 501, 1701, 1710], "multiheightnctimeseri": [501, 502, 1701, 1710, 1719], "multiheightst": [498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 1701, 1710], "multiheighttimeseri": [514, 515, 1701, 1710, 1716], "multipl": [503, 810, 1122, 1140, 1254, 1277, 1280, 1281, 1282, 1283, 1386, 1390, 1419, 1423, 1435, 1468, 1523, 1529, 1701, 1702, 1710, 1711, 1713, 1723], "multipli": [685, 686, 846, 860, 861, 874, 875, 914, 915, 920, 921, 1702, 1710], "must": [1092, 1093, 1123, 1126, 1131, 1137, 1148, 1154, 1166, 1175, 1179, 1187, 1188, 1191, 1193, 1228, 1230, 1238, 1239, 1254, 1255, 1263, 1265, 1273, 1277, 1279, 1280, 1306, 1385, 1386, 1390, 1403, 1404, 1412, 1414, 1415, 1419, 1422, 1423, 1431, 1432, 1438, 1452, 1468, 1499, 1500, 1506, 1507, 1511, 1517, 1520, 1521, 1527, 1528, 1529, 1543, 1614, 1714, 1715, 1717], "mutat": 1140, "mutation_aspect": 1239, "mutation_scal": 1239, "mutual": [1527, 1528, 1529, 1530], "mw": [281, 285, 444, 481, 482, 1697, 1713, 1716, 1719, 1721, 1727, 1728], "mx2": 1385, "my_jensen": 1718, "n": [594, 595, 636, 637, 643, 644, 914, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1157, 1158, 1159, 1161, 1181, 1182, 1183, 1194, 1224, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1386, 1387, 1390, 1392, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1430, 1435, 1437, 1439, 1485, 1511, 1512, 1513, 1520, 1521, 1523, 1526, 1527, 1528, 1534, 1538, 1539, 1543, 1564, 1596, 1597, 1614, 1702, 1704, 1710, 1712, 1713, 1716, 1718, 1722, 1724, 1725, 1726, 1727, 1729], "n0": 1386, "n1": 1386, "n2": [1713, 1718, 1722], "n_a0": 1562, "n_point": [5, 18, 19, 23, 62, 319, 338, 413, 429, 453, 455, 620, 624, 628, 631, 639, 646, 772, 778, 784, 792, 799, 806, 858, 905, 1051, 1570, 1571, 1580, 1581, 1587, 1588, 1590, 1594, 1595, 1602, 1603, 1610, 1611, 1616, 1715, 1725], "n_r_per_x": [811, 822, 827], "n_rotor_axi": [413, 631, 639, 646], "n_rotor_point": [373, 395, 410, 416, 606, 616, 630, 634, 636, 641, 643, 648], "n_rotor_sid": [413, 631, 639, 646], "n_rotor_up": [413, 631, 639, 646], "n_rpoint": [412, 414, 415, 416, 419, 632, 633, 634, 635, 641, 642, 648, 649, 836, 843, 850, 865, 872, 926], "n_st_sel": [472, 811, 812, 815, 821, 822, 825, 827, 863, 870, 877, 883, 912, 917, 923, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999], "n_state": [0, 5, 18, 19, 23, 40, 44, 48, 54, 58, 62, 82, 87, 96, 103, 319, 325, 329, 338, 343, 344, 348, 358, 365, 371, 372, 373, 374, 375, 376, 377, 394, 395, 396, 398, 400, 407, 412, 415, 426, 427, 429, 430, 433, 434, 435, 436, 437, 441, 453, 454, 455, 456, 457, 467, 468, 470, 472, 473, 492, 497, 506, 513, 518, 522, 525, 530, 534, 543, 549, 551, 584, 592, 593, 598, 600, 606, 607, 612, 616, 617, 620, 624, 628, 632, 633, 650, 651, 653, 657, 663, 669, 675, 680, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 771, 772, 773, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 805, 806, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 833, 834, 836, 841, 843, 848, 850, 856, 858, 863, 864, 865, 870, 871, 872, 877, 883, 902, 905, 912, 913, 917, 923, 926, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1051, 1089, 1701, 1715, 1724, 1725, 1726], "n_step": 793, "n_target": [48, 96, 371, 372, 374, 376, 394, 400, 407, 427, 430, 431, 433, 456, 457, 467, 468, 470, 472, 473, 492, 506, 518, 525, 534, 592, 593, 598, 612, 773, 779, 785, 786, 794, 800, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 833, 834, 841, 848, 856, 863, 864, 870, 871, 877, 883, 902, 912, 913, 917, 923, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000], "n_time": [550, 1701], "n_tpoint": [48, 96, 371, 372, 373, 374, 375, 376, 394, 395, 396, 398, 400, 407, 427, 430, 432, 456, 467, 468, 470, 472, 473, 492, 506, 518, 525, 534, 592, 593, 598, 600, 606, 607, 612, 616, 617, 773, 779, 785, 794, 800, 807, 816, 817, 833, 834, 841, 848, 856, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000], "n_turbin": [38, 40, 44, 54, 58, 82, 87, 103, 325, 330, 343, 344, 348, 358, 365, 373, 375, 377, 395, 396, 398, 412, 415, 426, 427, 441, 454, 457, 474, 477, 488, 489, 497, 513, 522, 530, 543, 584, 600, 606, 607, 616, 617, 632, 633, 650, 651, 653, 657, 663, 669, 675, 680, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 771, 777, 783, 786, 791, 793, 798, 805, 836, 843, 850, 865, 872, 926, 1010, 1701, 1714, 1715, 1719, 1721, 1723, 1724, 1725, 1726], "n_var": 453, "n_worker": [1618, 1619], "n_x": [1040, 1041, 1042, 1089, 1385], "n_y": [1040, 1041, 1042, 1089, 1385], "n_yz_per_target": [811, 812, 815, 822, 827, 883], "n_z": 758, "naiv": 1140, "name": [0, 2, 4, 5, 7, 10, 13, 18, 19, 22, 23, 29, 39, 41, 42, 45, 46, 50, 51, 52, 55, 56, 59, 60, 64, 65, 66, 69, 70, 74, 75, 80, 83, 85, 88, 94, 100, 102, 297, 308, 316, 318, 323, 325, 326, 327, 328, 332, 335, 340, 342, 344, 345, 346, 347, 353, 354, 355, 356, 360, 362, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 384, 391, 392, 394, 395, 397, 398, 399, 402, 404, 408, 409, 410, 412, 417, 418, 420, 423, 424, 427, 428, 429, 430, 433, 434, 435, 438, 440, 442, 443, 444, 447, 448, 450, 451, 452, 458, 459, 461, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 481, 482, 483, 486, 487, 489, 490, 491, 495, 498, 499, 501, 502, 503, 505, 510, 514, 516, 520, 523, 524, 527, 529, 531, 533, 539, 542, 544, 545, 547, 549, 550, 551, 552, 553, 563, 565, 567, 570, 572, 573, 574, 577, 580, 581, 585, 586, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 608, 609, 612, 614, 615, 616, 618, 619, 622, 623, 625, 626, 629, 630, 636, 637, 643, 644, 650, 654, 655, 656, 659, 660, 665, 667, 668, 671, 672, 673, 674, 677, 678, 680, 683, 685, 689, 690, 691, 694, 695, 697, 698, 700, 701, 702, 705, 706, 707, 708, 709, 710, 712, 713, 714, 720, 721, 722, 728, 729, 730, 734, 735, 736, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 764, 765, 768, 769, 774, 775, 780, 788, 795, 802, 809, 810, 811, 812, 813, 814, 815, 816, 817, 819, 820, 822, 823, 824, 825, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 861, 863, 865, 867, 870, 872, 874, 880, 883, 885, 886, 909, 912, 914, 920, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 975, 976, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1007, 1009, 1016, 1031, 1032, 1033, 1034, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1088, 1089, 1090, 1093, 1096, 1098, 1100, 1107, 1108, 1110, 1111, 1112, 1113, 1122, 1123, 1126, 1203, 1259, 1279, 1281, 1385, 1387, 1390, 1394, 1409, 1412, 1413, 1414, 1419, 1430, 1518, 1527, 1528, 1548, 1564, 1612, 1613, 1616, 1697, 1699, 1700, 1704, 1710, 1712, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1727], "name_": [1107, 1108, 1548], "name_col": 1616, "name_map": [1081, 1083], "name_prefix": [1107, 1112], "name_str": [314, 315, 321, 352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740], "name_suffix": [1107, 1113], "name_templ": [1107, 1108, 1547, 1548], "nameerror": 1564, "namespac": 1564, "nan": [39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 165, 335, 346, 356, 359, 362, 369, 385, 399, 401, 404, 410, 420, 440, 443, 490, 491, 498, 501, 503, 514, 516, 523, 531, 544, 547, 549, 551, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 1035, 1277, 1387, 1430, 1527, 1528, 1562, 1710, 1713, 1720, 1721], "nanmax": 1721, "napplic": 1564, "nash": 830, "nation": 1564, "nativ": [1122, 1208, 1239, 1390], "natur": 1713, "navig": [1122, 1323, 1324, 1435, 1463, 1464], "navigate_mod": 1435, "navigationtoolbar2": 1462, "nbase": [1112, 1113], "nbin": [1386, 1401], "nbyte": [105, 195, 230], "nc": [490, 491, 1115, 1116, 1118, 1119, 1642, 1710, 1717, 1719], "ncol": 1521, "ncolumn": [1412, 1414], "ncurv": 1716, "ndarrai": [5, 18, 19, 23, 38, 40, 44, 48, 54, 58, 62, 82, 87, 96, 103, 106, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 319, 324, 327, 333, 338, 343, 348, 358, 365, 371, 372, 373, 374, 384, 394, 395, 396, 400, 407, 412, 413, 414, 415, 419, 426, 429, 430, 433, 434, 435, 436, 437, 441, 449, 453, 454, 455, 456, 457, 460, 467, 468, 472, 473, 487, 489, 492, 497, 506, 513, 518, 522, 525, 530, 534, 543, 576, 579, 584, 592, 593, 598, 600, 606, 607, 612, 616, 617, 620, 624, 628, 631, 632, 633, 635, 639, 642, 646, 649, 650, 651, 653, 657, 663, 669, 675, 680, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 744, 748, 752, 756, 758, 759, 760, 763, 767, 771, 772, 773, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 805, 806, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 833, 834, 841, 848, 856, 858, 863, 864, 870, 871, 877, 883, 902, 904, 905, 912, 913, 917, 923, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1010, 1035, 1040, 1041, 1042, 1051, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1089, 1228, 1238, 1254, 1258, 1265, 1273, 1282, 1283, 1385, 1386, 1403, 1412, 1415, 1422, 1423, 1511, 1543, 1562, 1563, 1568, 1569, 1570, 1571, 1578, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1614, 1616, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1714, 1715, 1726, 1729], "ndim": [105, 196, 230], "ne": [1435, 1439, 1485], "near_wake_d": [860, 861], "nearest": [1254, 1390, 1405, 1412, 1414, 1481, 1570, 1580, 1587, 1594, 1602, 1610], "neccessarili": [729, 735, 1702, 1727], "necessari": [1229, 1344, 1419, 1420, 1500, 1507, 1527, 1712, 1726], "need": [0, 8, 10, 18, 385, 448, 450, 457, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 764, 765, 768, 786, 948, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1122, 1196, 1202, 1217, 1218, 1221, 1240, 1253, 1254, 1259, 1352, 1353, 1354, 1367, 1368, 1369, 1383, 1412, 1413, 1414, 1420, 1500, 1507, 1513, 1515, 1518, 1519, 1526, 1527, 1528, 1564, 1710, 1713, 1715, 1719, 1721, 1722, 1723, 1728], "neg": [1241, 1255, 1497, 1504, 1527, 1635, 1704, 1713], "negative_linestyl": 1527, "neglect": 1719, "neither": [1527, 1528, 1529, 1530, 1543, 1721], "net": 1702, "netcdf": [490, 1051, 1052, 1055, 1701, 1710, 1717], "netcdf4": 1710, "netcfd": [1642, 1717], "neural": 1280, "neurosci": 1280, "neutral": [549, 551, 742, 754, 1550, 1551, 1552, 1702, 1704], "never": [1123, 1126, 1722], "new": [0, 10, 18, 94, 105, 135, 230, 253, 308, 318, 328, 335, 370, 375, 376, 392, 397, 398, 410, 417, 420, 423, 438, 440, 442, 443, 447, 448, 451, 452, 458, 465, 469, 470, 472, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 587, 589, 590, 594, 599, 601, 603, 609, 615, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 836, 838, 843, 845, 850, 852, 853, 860, 865, 867, 872, 874, 880, 909, 914, 920, 926, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1007, 1016, 1036, 1043, 1046, 1049, 1052, 1056, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1084, 1086, 1131, 1162, 1163, 1164, 1166, 1184, 1185, 1186, 1187, 1195, 1274, 1278, 1352, 1353, 1354, 1367, 1368, 1369, 1431, 1432, 1467, 1496, 1503, 1516, 1531, 1532, 1564, 1710, 1712, 1713, 1718], "new_branch": 1711, "new_farm_wake_delta": [370, 375, 587, 589, 590], "new_point_data": [0, 10, 18, 308, 319], "new_point_wake_delta": [370, 376, 587, 589, 590], "new_wake_delta": [392, 398, 438, 465, 470, 594, 599, 601, 603, 609, 615, 810, 813, 820, 823, 830, 836, 838, 843, 845, 850, 852, 853, 858, 860, 865, 867, 872, 874, 880, 909, 914, 920, 926], "newa": 1719, "newbyteord": [105, 197, 230], "newli": [1060, 1531, 1532], "newlin": [1564, 1704], "next": [18, 21, 1122, 1254, 1430, 1442, 1564, 1714, 1715, 1719, 1720, 1721, 1724, 1725, 1727, 1728], "nfarm": [1719, 1721, 1724, 1725, 1726, 1727, 1728, 1729], "nfft": [1122, 1238, 1265, 1273, 1403, 1415, 1422, 1511], "nice": [1527, 1528], "nidentifi": 1564, "niel": [845, 852, 1714], "nint": [636, 637, 643, 644], "nmean": 1727, "no_ground": [1713, 1718], "nobject": 1564, "node": [1131, 1144, 1166, 1171, 1187, 1281, 1282, 1283, 1419, 1423, 1530], "noground": [589, 1702, 1710, 1718], "nomin": [443, 444, 1018, 1254, 1721], "non": [328, 811, 812, 815, 821, 822, 825, 827, 863, 870, 877, 883, 912, 917, 923, 1089, 1122, 1131, 1158, 1161, 1164, 1166, 1182, 1183, 1186, 1187, 1194, 1195, 1249, 1257, 1259, 1347, 1390, 1402, 1412, 1413, 1414, 1430, 1433, 1434, 1500, 1507, 1512, 1635, 1704, 1710, 1711, 1712, 1722], "none": [0, 2, 4, 5, 10, 11, 18, 19, 22, 36, 39, 42, 46, 47, 48, 52, 53, 56, 60, 65, 66, 67, 69, 70, 72, 74, 75, 76, 80, 81, 85, 89, 93, 94, 98, 105, 138, 149, 230, 256, 266, 308, 309, 314, 319, 323, 325, 328, 331, 332, 334, 335, 339, 344, 346, 348, 356, 362, 369, 370, 377, 379, 384, 385, 392, 399, 404, 407, 410, 412, 414, 420, 421, 427, 434, 435, 436, 437, 438, 440, 443, 444, 448, 452, 453, 457, 459, 460, 461, 462, 465, 471, 474, 475, 483, 485, 487, 488, 489, 490, 491, 493, 498, 499, 501, 503, 505, 508, 511, 514, 516, 517, 523, 524, 531, 533, 536, 540, 544, 547, 550, 553, 567, 569, 572, 573, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 610, 615, 618, 623, 626, 630, 632, 636, 643, 650, 655, 660, 667, 673, 674, 678, 685, 690, 695, 698, 701, 702, 706, 708, 710, 713, 714, 721, 722, 729, 730, 735, 736, 742, 746, 750, 754, 758, 759, 762, 765, 769, 775, 780, 781, 786, 788, 795, 796, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 861, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1002, 1003, 1007, 1008, 1009, 1012, 1013, 1014, 1015, 1016, 1018, 1023, 1030, 1031, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1051, 1052, 1053, 1054, 1055, 1056, 1058, 1060, 1062, 1063, 1064, 1065, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1096, 1098, 1100, 1101, 1105, 1122, 1123, 1126, 1131, 1137, 1187, 1188, 1196, 1199, 1200, 1208, 1209, 1218, 1228, 1229, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1269, 1270, 1273, 1274, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1287, 1288, 1289, 1301, 1306, 1315, 1319, 1320, 1324, 1337, 1339, 1344, 1350, 1363, 1378, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1399, 1401, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1433, 1434, 1435, 1438, 1441, 1443, 1444, 1449, 1450, 1452, 1466, 1468, 1470, 1472, 1474, 1480, 1481, 1486, 1490, 1494, 1495, 1496, 1499, 1500, 1501, 1502, 1503, 1506, 1507, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1538, 1539, 1540, 1541, 1543, 1544, 1562, 1564, 1582, 1584, 1589, 1591, 1596, 1598, 1612, 1614, 1616, 1618, 1619, 1704, 1710, 1713, 1714, 1715, 1717, 1718, 1719, 1724, 1725, 1726, 1728, 1729], "nonfinit": 1430, "nonposit": [1402, 1433, 1434], "nonsingular": [1196, 1202, 1218, 1221], "nonzero": [105, 198, 230], "nor": [1543, 1721], "norm": [1122, 1228, 1254, 1258, 1282, 1283, 1385, 1387, 1390, 1412, 1413, 1414, 1423, 1430, 1520, 1527, 1528, 1529, 1543], "normal": [544, 545, 549, 551, 626, 627, 775, 1009, 1128, 1131, 1144, 1166, 1171, 1187, 1254, 1257, 1258, 1265, 1277, 1282, 1283, 1385, 1386, 1387, 1390, 1412, 1413, 1414, 1418, 1423, 1424, 1430, 1520, 1523, 1527, 1528, 1542, 1545, 1564, 1617, 1702, 1704, 1716, 1721, 1728], "normalis": [1228, 1543], "normalize_d": 1009, "normalize_i": [1072, 1073, 1074, 1075, 1076, 1077], "normalize_v": [1072, 1073, 1074, 1075, 1076, 1077], "normalize_x": [1072, 1073, 1074, 1075, 1076, 1077], "normalize_z": [1072, 1073, 1074, 1075, 1076, 1077], "north": [1038, 1039, 1041, 1042, 1073, 1074, 1076, 1077, 1252, 1256, 1269, 1270, 1723], "northern": 1254, "notadirectoryerror": 1564, "notat": [1419, 1526], "notch": [1122, 1257, 1259], "note": [471, 1048, 1140, 1239, 1279, 1282, 1283, 1413, 1427, 1485, 1486, 1521, 1702, 1712, 1713, 1716, 1717, 1719, 1722, 1723, 1725, 1728, 1729], "notebook": [1709, 1710, 1731], "noth": [1138, 1196, 1205, 1218, 1225, 1412, 1713], "notic": [1710, 1713, 1715, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1729], "notifi": [1248, 1496, 1503, 1527, 1528], "notimpl": [1128, 1564], "notimplementederror": 1564, "noverlap": [1265, 1273, 1422, 1511], "now": [1710, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729], "np": [116, 165, 188, 235, 276, 278, 327, 373, 385, 395, 429, 430, 606, 616, 1030, 1035, 1228, 1254, 1386, 1419, 1423, 1487, 1520, 1543, 1562, 1564, 1616, 1714, 1715, 1717, 1720, 1721, 1724, 1725, 1726, 1729], "npoint": [1714, 1715, 1725], "nrel": [1723, 1725], "nrel5": [1716, 1721, 1725], "nrel5mw": [1716, 1717, 1718, 1719, 1721, 1725, 1727, 1728, 1729], "nresult": 1727, "nrow": [1412, 1414], "nsector": [1252, 1256, 1269, 1270], "nstate": 1716, "nthe": 1564, "nthi": 1564, "null": 1564, "null_typ": 1718, "nulltyp": [710, 711, 712, 1702, 1710, 1718], "num": 1420, "num2dat": 1420, "number": [0, 10, 11, 15, 18, 35, 94, 101, 105, 116, 165, 188, 196, 212, 230, 235, 276, 278, 308, 322, 325, 329, 330, 335, 341, 344, 377, 410, 416, 420, 425, 427, 431, 432, 474, 477, 488, 489, 490, 496, 498, 501, 503, 512, 514, 516, 521, 523, 528, 531, 541, 544, 547, 549, 550, 551, 594, 595, 630, 634, 636, 637, 641, 643, 644, 648, 685, 719, 727, 881, 1009, 1014, 1037, 1038, 1039, 1040, 1041, 1042, 1058, 1060, 1061, 1089, 1123, 1129, 1131, 1143, 1148, 1154, 1166, 1175, 1179, 1187, 1191, 1193, 1203, 1228, 1238, 1252, 1254, 1256, 1257, 1265, 1269, 1270, 1273, 1385, 1386, 1387, 1390, 1394, 1401, 1402, 1403, 1405, 1412, 1414, 1415, 1422, 1423, 1430, 1433, 1434, 1435, 1466, 1473, 1496, 1499, 1506, 1511, 1513, 1520, 1521, 1526, 1527, 1528, 1529, 1539, 1543, 1614, 1619, 1708, 1710, 1713, 1718], "numcol": 1390, "numer": [230, 279, 758, 845, 852, 1122, 1254, 1255, 1257, 1418, 1420, 1423, 1430, 1494, 1501, 1523, 1526, 1527, 1528, 1702, 1713], "numpi": [5, 18, 19, 23, 38, 40, 44, 48, 54, 58, 62, 82, 87, 96, 103, 105, 116, 121, 230, 235, 319, 324, 325, 333, 338, 343, 348, 358, 365, 371, 372, 373, 374, 384, 394, 395, 396, 400, 407, 412, 413, 414, 415, 419, 426, 433, 434, 435, 436, 437, 441, 449, 453, 454, 455, 456, 457, 460, 467, 468, 472, 473, 487, 489, 492, 497, 506, 513, 518, 522, 525, 530, 534, 543, 576, 579, 584, 592, 593, 598, 600, 606, 607, 612, 616, 617, 620, 624, 628, 631, 632, 633, 635, 639, 642, 646, 649, 650, 651, 653, 657, 663, 669, 675, 680, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 744, 748, 752, 756, 758, 759, 760, 763, 767, 771, 772, 773, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 805, 806, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 833, 834, 841, 848, 856, 858, 863, 864, 870, 871, 877, 883, 902, 904, 905, 912, 913, 917, 923, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1010, 1040, 1041, 1042, 1051, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1089, 1228, 1238, 1254, 1258, 1265, 1273, 1282, 1283, 1385, 1386, 1403, 1412, 1415, 1419, 1420, 1422, 1423, 1431, 1432, 1511, 1543, 1562, 1563, 1564, 1568, 1569, 1570, 1571, 1578, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1614, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1697, 1698, 1710, 1714, 1715, 1717, 1720, 1721, 1724, 1725, 1726, 1729], "numrow": 1390, "nw": [1439, 1485], "nwhich": 1564, "nx": [1385, 1387], "ny": [1385, 1387, 1720], "nygaard": 914, "o": [1122, 1228, 1241, 1247, 1251, 1254, 1255, 1257, 1258, 1259, 1282, 1283, 1385, 1392, 1412, 1414, 1419, 1420, 1423, 1468, 1517, 1543, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1723, 1725, 1726, 1727, 1728, 1729], "o0": 1721, "o1": 1721, "o5eosxa": 830, "obei": [1122, 1536], "obj": [105, 114, 230, 1111, 1419], "object": [0, 10, 18, 36, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 135, 155, 230, 253, 308, 314, 315, 319, 323, 328, 332, 335, 346, 352, 356, 362, 369, 370, 374, 379, 382, 384, 385, 388, 389, 392, 399, 404, 410, 420, 422, 429, 430, 438, 440, 443, 448, 452, 459, 465, 468, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 552, 561, 563, 567, 572, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 817, 820, 823, 830, 834, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1003, 1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1056, 1060, 1064, 1081, 1083, 1084, 1089, 1101, 1104, 1105, 1107, 1108, 1111, 1122, 1141, 1228, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1289, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1402, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1433, 1434, 1435, 1460, 1468, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1527, 1528, 1529, 1530, 1539, 1540, 1543, 1548, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1613, 1634, 1700, 1704, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1727, 1728, 1729], "obligatori": 1035, "obliqu": 1523, "observ": [1122, 1230, 1248, 1254, 1428, 1496, 1503, 1715], "obtain": [1716, 1719, 1728], "obukhof": 1713, "obukhov": [1556, 1557, 1559, 1560, 1716], "obvious": 1724, "occur": [1282, 1283, 1390, 1518], "occurr": [1123, 1129, 1252, 1256, 1269, 1270], "ocean": 1503, "oct": 1564, "octagon": 1419, "od": 1721, "oder": [1715, 1724, 1726], "odir": 564, "off": [1238, 1241, 1243, 1246, 1247, 1248, 1249, 1250, 1251, 1255, 1265, 1273, 1277, 1279, 1280, 1382, 1392, 1403, 1407, 1415, 1419, 1420, 1422, 1466, 1496, 1503, 1512, 1715, 1722, 1723], "offer": 1719, "offset": [1122, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1341, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1435, 1437, 1484, 1485, 1490, 1511, 1512, 1521, 1523, 1526, 1710], "offset_transform": [1254, 1258, 1282, 1283, 1385, 1412, 1414, 1423], "ofil": [1633, 1704], "often": [1282, 1283, 1713, 1716], "oid": [1122, 1428], "ok": [1715, 1726], "older": 1730, "onam": 1633, "onc": [0, 594, 1122, 1208, 1213, 1435, 1710, 1712, 1717, 1724, 1725, 1726, 1729], "one": [105, 191, 230, 362, 365, 404, 407, 414, 419, 601, 603, 609, 610, 632, 635, 636, 637, 642, 649, 905, 1078, 1088, 1122, 1140, 1230, 1238, 1239, 1241, 1249, 1252, 1254, 1255, 1256, 1265, 1269, 1270, 1273, 1277, 1280, 1282, 1283, 1312, 1345, 1385, 1386, 1387, 1390, 1401, 1403, 1412, 1413, 1414, 1415, 1419, 1422, 1430, 1456, 1466, 1468, 1485, 1490, 1511, 1513, 1519, 1520, 1521, 1527, 1528, 1529, 1531, 1532, 1562, 1564, 1637, 1702, 1703, 1704, 1710, 1713, 1715, 1716, 1719, 1720, 1728, 1729], "ones": [1423, 1562], "onesid": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "onli": [0, 10, 18, 308, 319, 412, 453, 483, 594, 599, 769, 820, 821, 823, 826, 838, 839, 845, 846, 853, 854, 860, 864, 867, 871, 874, 877, 909, 913, 914, 917, 920, 921, 923, 1058, 1060, 1107, 1108, 1122, 1131, 1158, 1161, 1165, 1166, 1169, 1178, 1182, 1183, 1187, 1194, 1228, 1229, 1244, 1249, 1254, 1257, 1259, 1273, 1279, 1280, 1282, 1283, 1284, 1306, 1344, 1385, 1386, 1390, 1398, 1404, 1413, 1414, 1418, 1419, 1422, 1423, 1430, 1452, 1456, 1472, 1481, 1486, 1499, 1500, 1506, 1507, 1511, 1512, 1518, 1520, 1526, 1527, 1528, 1529, 1531, 1532, 1538, 1539, 1543, 1548, 1562, 1702, 1710, 1712, 1713, 1714, 1715, 1716, 1718, 1720, 1722, 1725, 1726, 1727, 1729], "onlinelibrari": [845, 852], "onoffseq": 1280, "onset": [803, 880, 881, 886, 901], "onto": [685, 686], "op": [1158, 1161, 1182, 1183, 1194], "opac": 1390, "opaqu": [1280, 1385, 1390, 1412, 1413, 1414, 1430, 1525, 1527, 1528], "open": [868, 1252, 1386, 1521, 1564, 1708, 1710], "open_dataset": [498, 499, 1719], "opencv": 1562, "opening_angl": [867, 868, 1718], "oper": [369, 473, 932, 937, 942, 947, 952, 958, 964, 970, 976, 982, 988, 994, 1000, 1016, 1032, 1033, 1034, 1122, 1243, 1274, 1278, 1401, 1472, 1486, 1499, 1506, 1516, 1698, 1713, 1721], "oppos": 1254, "opposit": [1254, 1531, 1532, 1714], "opt": [1692, 1710, 1712, 1730], "optim": [914, 1692, 1708, 1710, 1711, 1712, 1713], "optin": [572, 1616], "option": [2, 4, 5, 11, 12, 19, 22, 23, 36, 47, 52, 53, 65, 66, 70, 75, 81, 93, 309, 314, 315, 318, 319, 320, 328, 331, 333, 334, 336, 345, 348, 361, 365, 378, 384, 385, 392, 403, 407, 412, 414, 417, 423, 428, 429, 430, 434, 435, 436, 437, 442, 444, 447, 453, 457, 458, 460, 461, 469, 474, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 498, 499, 501, 502, 503, 505, 511, 514, 517, 524, 531, 533, 540, 544, 545, 547, 549, 550, 551, 569, 572, 573, 584, 602, 610, 632, 637, 644, 651, 656, 674, 686, 702, 707, 709, 713, 714, 721, 722, 729, 730, 735, 736, 743, 747, 751, 755, 759, 780, 781, 786, 795, 796, 803, 861, 868, 875, 880, 881, 910, 915, 921, 1003, 1005, 1008, 1009, 1018, 1023, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1050, 1051, 1053, 1054, 1055, 1058, 1060, 1061, 1062, 1063, 1064, 1066, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1084, 1086, 1088, 1089, 1090, 1091, 1100, 1104, 1105, 1106, 1107, 1108, 1120, 1121, 1122, 1123, 1126, 1130, 1131, 1137, 1187, 1188, 1228, 1238, 1239, 1248, 1249, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1401, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1441, 1452, 1472, 1480, 1486, 1496, 1499, 1500, 1503, 1506, 1507, 1511, 1513, 1514, 1517, 1518, 1520, 1521, 1527, 1528, 1529, 1530, 1538, 1539, 1540, 1543, 1548, 1566, 1570, 1576, 1580, 1584, 1587, 1591, 1594, 1598, 1602, 1606, 1610, 1612, 1614, 1615, 1616, 1618, 1619, 1634, 1642, 1703, 1710, 1713, 1719, 1723, 1727, 1728, 1731], "orbit": 867, "ord": 1564, "order": [0, 1, 10, 18, 42, 48, 288, 348, 371, 372, 373, 385, 394, 395, 412, 414, 452, 453, 454, 455, 456, 457, 460, 467, 472, 580, 592, 593, 598, 606, 612, 616, 632, 729, 735, 769, 771, 772, 773, 775, 777, 778, 779, 780, 783, 784, 785, 786, 788, 791, 792, 794, 795, 798, 799, 800, 802, 805, 806, 807, 811, 812, 815, 816, 821, 822, 825, 826, 827, 833, 841, 848, 856, 863, 864, 870, 871, 877, 883, 902, 912, 913, 917, 923, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1122, 1252, 1256, 1269, 1270, 1355, 1370, 1386, 1392, 1393, 1494, 1496, 1499, 1501, 1503, 1506, 1526, 1527, 1528, 1667, 1668, 1669, 1693, 1694, 1697, 1702, 1706, 1710, 1713, 1715, 1721, 1723, 1724, 1725, 1726], "order_inv": [1668, 1706, 1715, 1724, 1725, 1726], "order_ssel": [1669, 1706, 1715, 1724, 1725, 1726], "orderi": [288, 1697], "org": [577, 802, 853, 860, 874, 880, 886, 914, 920, 984, 1254, 1257, 1259, 1564, 1708, 1710], "organ": [1713, 1718], "orient": [1037, 1038, 1039, 1065, 1066, 1122, 1277, 1280, 1386, 1412, 1414, 1423, 1431, 1432, 1514, 1517, 1527, 1528, 1542, 1545, 1723, 1724], "origin": [18, 94, 95, 105, 165, 328, 472, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1166, 1257, 1280, 1327, 1390, 1405, 1429, 1439, 1467, 1468, 1477, 1511, 1512, 1527, 1528, 1531, 1532, 1564, 1605, 1711, 1713, 1726], "orst": 1710, "orthogon": [1280, 1596, 1713], "oserror": 1564, "other": [438, 439, 465, 466, 471, 516, 590, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1078, 1122, 1131, 1135, 1140, 1141, 1156, 1166, 1168, 1187, 1196, 1224, 1263, 1280, 1350, 1392, 1393, 1394, 1418, 1456, 1500, 1507, 1509, 1510, 1513, 1517, 1529, 1530, 1535, 1564, 1701, 1702, 1703, 1710, 1712, 1713, 1717, 1718, 1721, 1723, 1729], "other_paramet": [1529, 1530], "other_transform": [1131, 1142, 1166, 1187], "otherwis": [105, 188, 385, 457, 786, 1096, 1122, 1123, 1126, 1128, 1178, 1202, 1221, 1228, 1257, 1259, 1296, 1327, 1385, 1404, 1412, 1430, 1436, 1456, 1499, 1506, 1511, 1512, 1534, 1536, 1538, 1539, 1543], "ou1": [650, 651], "our": [1717, 1718, 1719, 1720, 1721, 1723, 1724, 1728, 1729], "out": [328, 636, 1140, 1203, 1390, 1414, 1423, 1525, 1527, 1528, 1564, 1617, 1635, 1702, 1713, 1715, 1718, 1719, 1720, 1723, 1724, 1726, 1729], "out0": [650, 651], "out_core_var": 334, "out_dict": [562, 564], "out_dir": [1043, 1044], "out_fname_fun": [1043, 1044], "out_kwarg": [1633, 1704], "out_var": [39, 42, 46, 52, 56, 60, 80, 85, 94, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 651, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735], "outcom": 1128, "outer": [1122, 1331, 1398, 1413, 1475, 1521, 1527, 1528, 1710, 1724], "outi": [650, 651], "outlier": [1257, 1259, 1386, 1387], "outlin": [1385, 1413], "output": [0, 4, 18, 19, 22, 40, 41, 44, 45, 48, 50, 52, 53, 54, 55, 58, 59, 60, 62, 64, 82, 83, 87, 88, 96, 100, 333, 334, 338, 340, 348, 353, 358, 360, 361, 365, 367, 385, 400, 402, 403, 407, 408, 418, 424, 441, 457, 476, 490, 491, 492, 495, 499, 503, 505, 506, 510, 518, 520, 523, 524, 525, 527, 531, 533, 534, 539, 552, 553, 560, 562, 564, 584, 585, 620, 622, 624, 625, 628, 629, 650, 651, 653, 654, 655, 656, 657, 659, 663, 665, 669, 671, 675, 677, 681, 683, 687, 689, 693, 694, 696, 697, 699, 700, 704, 705, 711, 712, 716, 720, 724, 728, 731, 734, 738, 741, 786, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1122, 1131, 1154, 1157, 1158, 1161, 1166, 1179, 1181, 1182, 1183, 1187, 1193, 1194, 1365, 1380, 1390, 1413, 1470, 1471, 1515, 1633, 1642, 1692, 1701, 1710, 1714, 1715, 1716, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "output_dict": [552, 553], "output_dim": [1131, 1154, 1157, 1158, 1161, 1165, 1166, 1179, 1181, 1182, 1183, 1187, 1193, 1194], "output_dir": [552, 553], "output_farm_var": [39, 41, 42, 45, 52, 55, 56, 59, 80, 83, 85, 88, 346, 353, 356, 360, 362, 367, 369, 410, 418, 440, 443, 580, 581, 585, 630, 636, 643, 650, 654, 655, 659, 660, 665, 667, 671, 673, 677, 678, 683, 685, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 720, 721, 728, 729, 734, 735, 741], "output_point_var": [46, 50, 60, 64, 94, 100, 335, 340, 399, 402, 404, 408, 420, 424, 490, 495, 498, 501, 503, 510, 514, 516, 520, 523, 527, 531, 539, 544, 547, 618, 622, 623, 625, 626, 629], "output_result": 552, "output_typ": [1007, 1016, 1036, 1043, 1046, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086], "output_var": [41, 45, 50, 55, 59, 64, 83, 88, 100, 340, 353, 360, 367, 402, 408, 418, 424, 490, 491, 495, 499, 503, 505, 510, 514, 520, 527, 531, 533, 539, 547, 585, 618, 619, 622, 625, 629, 654, 655, 656, 659, 665, 671, 677, 683, 685, 686, 689, 694, 697, 700, 705, 712, 720, 728, 734, 741, 1713, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1729], "outsid": [636, 1239, 1387, 1418, 1451, 1525, 1526, 1527, 1528, 1702, 1713, 1717], "outside_": [1566, 1576, 1584, 1591, 1598, 1606], "ovar": [490, 503, 531, 618, 685], "over": [427, 433, 920, 1016, 1021, 1022, 1051, 1058, 1060, 1122, 1253, 1255, 1258, 1265, 1273, 1279, 1322, 1386, 1408, 1416, 1422, 1436, 1462, 1466, 1468, 1511, 1521, 1527, 1528, 1529, 1562, 1661, 1706, 1707, 1710, 1713, 1719, 1722, 1724, 1728], "overal": [18, 27, 33, 34, 1710, 1724], "overflowerror": [105, 165, 1564], "overhang": 1241, "overhead": 1727, "overlap": [594, 609, 636, 637, 1265, 1273, 1279, 1392, 1393, 1422, 1511, 1713, 1722], "overload": [1695, 1696, 1710], "overrid": [1123, 1128, 1207, 1223, 1254, 1306, 1363, 1378, 1424, 1521, 1523, 1527, 1528], "overridden": [1131, 1138, 1148, 1154, 1166, 1175, 1179, 1187, 1191, 1193, 1225, 1257, 1274, 1275, 1278, 1286, 1306, 1352, 1353, 1354, 1367, 1368, 1369, 1516], "overview": [1390, 1710, 1711, 1713, 1725], "overwrit": [99, 321, 386, 434, 435, 808, 818, 828, 835, 842, 849, 857, 878, 884, 906, 918, 925], "overwritten": 443, "ow": 1711, "own": [920, 921, 1387, 1710, 1725], "p": [0, 1, 10, 18, 660, 713, 714, 722, 730, 736, 1048, 1088, 1115, 1117, 1122, 1236, 1390, 1413, 1419, 1564, 1657, 1660, 1670, 1690, 1691, 1706, 1710, 1711, 1713, 1715, 1716, 1717, 1719, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "p0": [1719, 1721, 1727, 1728], "p75": [1016, 1023, 1710], "p90": [1016, 1023, 1710], "p_": [1265, 1273, 1422, 1729], "p_ct": [714, 722, 729, 730, 736], "p_lim": [660, 661, 1718], "p_max": [1086, 1088, 1565, 1568, 1572, 1574, 1578, 1582, 1585, 1589, 1592, 1596, 1600, 1604, 1608, 1721], "p_min": [1565, 1568, 1569, 1572, 1574, 1578, 1579, 1582, 1585, 1586, 1589, 1592, 1593, 1596, 1600, 1601, 1604, 1608, 1609], "p_nearest": [1570, 1580, 1587, 1594, 1602, 1610], "p_nom": [1016, 1018], "p_nomin": [443, 444, 710, 1030, 1643, 1657, 1706, 1710, 1713, 1715, 1718, 1724, 1726], "p_p": [714, 722, 730, 736, 1729], "p_unit": [285, 443, 444, 710, 1697, 1710, 1713, 1715, 1718, 1724, 1726], "p_unit_w": 1030, "pa_alpha": [1671, 1706], "pa_beta": [1672, 1706], "packag": [479, 1090, 1092, 1093, 1257, 1564, 1612, 1692, 1700, 1701, 1702, 1704, 1707, 1710, 1711, 1712, 1713, 1716, 1718, 1725, 1729, 1730, 1731], "pad": [1122, 1238, 1253, 1265, 1273, 1352, 1353, 1367, 1368, 1403, 1404, 1415, 1422, 1490, 1497, 1504, 1511, 1525], "pad_point": [1122, 1352, 1353, 1367, 1368], "pad_to": [1122, 1238, 1265, 1273, 1403, 1415, 1422, 1511], "page": [1708, 1710], "pair": [105, 165, 1122, 1257, 1268, 1399, 1439, 1526], "pan": [1122, 1260, 1274, 1278, 1312, 1324, 1456, 1472, 1486, 1499, 1506, 1516], "panda": [483, 484, 499, 503, 505, 511, 531, 533, 540, 549, 550, 551, 618, 619, 655, 656, 673, 674, 685, 686, 706, 707, 708, 709, 713, 714, 721, 722, 729, 730, 735, 736, 759, 1007, 1016, 1023, 1025, 1027, 1028, 1029, 1030, 1033, 1034, 1036, 1043, 1048, 1049, 1052, 1053, 1056, 1058, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1084, 1086, 1115, 1120, 1121, 1419, 1564, 1701, 1702, 1704, 1710, 1714, 1720, 1721, 1723, 1725, 1727, 1729], "pandasfilehelp": [1115, 1116, 1117, 1118, 1119, 1120, 1121, 1704], "panel": 1726, "paper": [830, 1711], "par": [346, 347, 580, 886, 894, 907, 1065, 1066, 1089], "parallel": [2, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 309, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 1122, 1280, 1619, 1710, 1711, 1713, 1727, 1728], "paramer": 707, "paramet": [10, 17, 18, 46, 332, 346, 362, 404, 459, 490, 498, 503, 531, 580, 581, 701, 713, 721, 729, 735, 758, 780, 788, 795, 802, 860, 867, 874, 880, 886, 907, 909, 914, 920, 1065, 1107, 1115, 1122, 1337, 1547, 1662, 1671, 1672, 1698, 1701, 1702, 1704, 1706, 1710, 1713, 1715, 1718, 1719, 1725, 1727, 1728, 1731], "parametr": [105, 116, 230, 235], "parcel": 1724, "parent": [1239, 1394, 1431, 1432, 1716], "park": 914, "pars": [481, 482, 490, 491, 1419, 1699, 1700, 1710, 1718], "pars_boundari": [1566, 1576, 1584, 1591, 1598, 1606], "pars_dist": [1566, 1576, 1584, 1591, 1598, 1606], "parse_d": [514, 515, 547, 548], "parse_math": 1523, "parse_pct_file_nam": [481, 1699, 1700], "parse_pct_two_fil": [482, 1699, 1700], "parsed_data": [481, 482], "part": [105, 187, 203, 230, 352, 388, 422, 494, 500, 509, 519, 538, 546, 562, 573, 594, 621, 658, 682, 718, 726, 733, 740, 1122, 1131, 1145, 1146, 1158, 1161, 1163, 1164, 1166, 1169, 1172, 1173, 1182, 1183, 1185, 1186, 1187, 1194, 1195, 1254, 1347, 1419, 1423, 1548, 1701, 1713, 1716, 1719, 1723], "partial": [0, 2, 371, 375, 392, 397, 567, 570, 592, 594, 599, 601, 603, 609, 615, 810, 813, 1418, 1698, 1702, 1707, 1709, 1710, 1711, 1715, 1719, 1722, 1724, 1726, 1728], "partial_wak": [0, 2, 567, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 1710, 1714, 1715, 1718, 1719, 1720, 1726, 1728], "partialaxiwak": [594, 595, 596, 597, 598, 810, 1702, 1710, 1713, 1718, 1724], "partialcentr": [594, 599, 600, 609, 1702, 1710, 1713, 1718], "partialdistslicedwak": 813, "partialgrid": [601, 602, 1702, 1710, 1713, 1715, 1718], "partialsegreg": [601, 603, 604, 605, 606, 607, 608, 1702, 1710, 1713], "partialtophat": [609, 610, 611, 612, 613, 614, 1702, 1713, 1718], "partialwakemodel": 567, "partialwakesmodel": [0, 371, 375, 392, 393, 394, 395, 396, 397, 398, 592, 603, 615, 1698, 1702], "particular": [1257, 1405, 1423, 1430, 1436, 1711, 1727], "particularli": [1390, 1512], "partli": 1436, "pass": [1100, 1228, 1238, 1239, 1248, 1249, 1253, 1254, 1255, 1265, 1273, 1279, 1280, 1282, 1283, 1385, 1386, 1387, 1390, 1392, 1393, 1394, 1401, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1423, 1431, 1432, 1468, 1490, 1495, 1496, 1499, 1500, 1502, 1503, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1514, 1523, 1527, 1528, 1529, 1530, 1543, 1713, 1714, 1715, 1728], "pass_through": [1131, 1155, 1166, 1187], "past": [1257, 1259], "patch": [1122, 1236, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1259, 1265, 1268, 1273, 1277, 1279, 1281, 1282, 1283, 1313, 1382, 1385, 1386, 1392, 1393, 1403, 1410, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1435, 1448, 1452, 1456, 1457, 1466, 1512, 1514, 1520, 1521, 1523], "patch_artist": [1257, 1259], "patcha": 1239, "patchartist": 1257, "patchb": 1239, "patchcollect": 1520, "patches0": 1386, "patches1": 1386, "path": [479, 481, 482, 485, 486, 498, 499, 503, 505, 531, 533, 551, 552, 553, 564, 566, 569, 673, 674, 685, 686, 707, 709, 713, 714, 721, 722, 729, 730, 735, 736, 1007, 1016, 1036, 1043, 1045, 1049, 1051, 1052, 1054, 1055, 1056, 1061, 1070, 1078, 1081, 1083, 1084, 1086, 1090, 1094, 1095, 1096, 1120, 1121, 1122, 1131, 1162, 1163, 1164, 1166, 1184, 1185, 1186, 1187, 1195, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1305, 1347, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1452, 1465, 1481, 1512, 1514, 1521, 1523, 1589, 1613, 1615, 1616, 1617, 1633, 1642, 1704, 1711, 1713, 1715, 1724, 1726, 1727], "path_effect": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1465, 1512, 1521, 1523], "pathcollect": [1009, 1031, 1430], "pathlib": [481, 482, 552, 553, 564, 1043, 1045, 1090, 1096, 1523, 1716], "pattern": [490, 491, 1122, 1418, 1512, 1528, 1710, 1713, 1721], "pchang": [1122, 1411], "pcolor": [1122, 1404, 1412, 1413, 1414, 1529], "pcolorfast": [1122, 1413], "pcolorimag": 1413, "pcolormesh": [1080, 1122, 1387, 1412, 1413, 1414], "pcolormesh_grid": [1412, 1414], "pct": 1418, "pct_file": [567, 569], "pctcurv": 1716, "pctdistanc": 1418, "pctfile": [706, 707, 713, 714, 715, 716, 717, 718, 719, 720, 1702, 1713, 1715, 1716, 1718, 1723, 1724, 1725, 1726], "pctfromtwo": [708, 709, 721, 722, 723, 724, 725, 726, 727, 728, 1702], "pctsinglefil": 1710, "pcttwofil": 1710, "pd": [1058, 1060, 1061, 1564, 1714, 1720, 1721, 1723, 1729], "pd_file_read_par": [656, 674, 686, 707, 714], "pd_file_read_pars_cp": 709, "pd_file_read_pars_ct": [709, 722, 730, 736], "pd_file_read_pars_p": [722, 730, 736], "pd_read_par": [503, 505, 533, 619, 759], "pdata": [60, 62, 382, 384, 429, 430, 618, 620, 623, 624, 626, 628, 858], "pdf": [830, 867, 914, 920, 984, 1390, 1413], "peak": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "pedersen": [914, 1713], "pendingdeprecationwarn": 1564, "pentagon": 1419, "peopl": 1280, "pep": [116, 235, 1123, 1124], "per": [299, 414, 427, 432, 503, 632, 636, 637, 643, 644, 810, 1016, 1025, 1027, 1028, 1029, 1030, 1033, 1034, 1238, 1255, 1265, 1273, 1277, 1386, 1403, 1415, 1422, 1423, 1511, 1521, 1619, 1697, 1701, 1710, 1723], "percentil": 1257, "perfectli": 1728, "perform": [1208, 1210, 1228, 1238, 1243, 1257, 1260, 1265, 1273, 1403, 1407, 1415, 1422, 1429, 1511, 1519, 1543, 1711, 1720], "period": [550, 674, 1431], "periodogram": [1273, 1422, 1511], "permissionerror": 1564, "perpendicular": [1337, 1480, 1517], "persist": [0, 4, 22, 1472, 1486, 1499, 1506], "persist_fdata": [5, 23], "persist_mdata": [5, 23], "persist_pdata": 5, "persu": 1723, "pgf": 1480, "phase": [1122, 1238, 1403, 1415, 1511], "phase_spectrum": [1122, 1238, 1403, 1415, 1511], "physic": [1122, 1290, 1436, 1449], "pi": [1252, 1256, 1269, 1270, 1487], "pick": [754, 1122, 1267, 1326, 1416, 1417, 1466, 1531, 1532, 1713, 1715], "pickabl": [1122, 1326, 1416, 1417], "picker": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1416, 1419, 1420, 1422, 1423, 1435, 1466, 1512, 1521, 1523], "pickev": 1466, "pickl": [105, 142, 230], "pickradiu": [1238, 1246, 1249, 1250, 1254, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1512], "pie": [1122, 1418], "piersol": [1265, 1273, 1422], "pii": [838, 845, 852], "pil": 1390, "pip": [1710, 1711, 1730, 1732], "pirrung": 577, "pivot": [1254, 1423], "pixel": [1122, 1239, 1268, 1344, 1385, 1390, 1412, 1413, 1414, 1419, 1423, 1470, 1471, 1480, 1481, 1512, 1527, 1528], "place": [1037, 1038, 1039, 1040, 1041, 1042, 1239, 1253, 1257, 1282, 1283, 1352, 1353, 1354, 1367, 1368, 1369, 1390, 1399, 1405, 1418, 1431, 1432, 1512, 1517, 1518, 1519, 1521, 1523, 1527, 1528, 1717, 1721], "placehold": [94, 1696], "plain": [1420, 1526, 1710], "plan": [1710, 1712], "plane": [413, 590, 631, 639, 646, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1423, 1596, 1702, 1704, 1710, 1713, 1714, 1724], "playground": 1720, "pleas": [106, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 1249, 1500, 1507, 1708, 1711, 1712, 1732], "plenti": 1727, "plot": [1007, 1009, 1012, 1013, 1014, 1015, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1056, 1060, 1061, 1062, 1064, 1065, 1066, 1078, 1080, 1084, 1086, 1088, 1089, 1122, 1228, 1238, 1239, 1246, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1306, 1307, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1401, 1402, 1403, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1468, 1472, 1486, 1496, 1503, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1527, 1529, 1530, 1536, 1538, 1539, 1540, 1543, 1566, 1576, 1584, 1591, 1598, 1606, 1703, 1710, 1714, 1715, 1717, 1719, 1720, 1721, 1723, 1725, 1727, 1728, 1729], "plot_curv": [1086, 1088, 1716, 1721], "plot_dat": [1122, 1420], "plot_map": [1078, 1080, 1721], "plotli": 1710, "plotlin": 1279, "plotnonfinit": 1430, "plt": [1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1080, 1088, 1089, 1386, 1394, 1419, 1564, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "plu": [473, 932, 937, 942, 947, 952, 958, 964, 970, 976, 982, 988, 994, 1000, 1386, 1419, 1468, 1616, 1634, 1724], "plugin": [18, 19, 89, 1065, 1696, 1703, 1724], "pluss": 1419, "pmask": [1718, 1721, 1723], "pmax_": 1721, "pmax_0": 1721, "pmax_1": 1721, "pmax_2": 1721, "pmax_3": 1721, "pmax_4": 1721, "pmax_arg": 1088, "pmodel": 335, "po": [1122, 1208, 1209, 1467], "point": [0, 2, 5, 10, 16, 18, 19, 23, 26, 33, 37, 46, 48, 60, 62, 93, 96, 105, 165, 188, 282, 283, 298, 299, 302, 308, 319, 335, 336, 338, 370, 371, 372, 373, 375, 376, 385, 392, 394, 395, 396, 398, 399, 400, 401, 404, 407, 410, 412, 413, 414, 415, 416, 419, 427, 429, 430, 432, 433, 438, 449, 452, 455, 456, 457, 465, 467, 470, 471, 472, 487, 489, 492, 506, 518, 525, 534, 566, 567, 587, 589, 590, 592, 593, 594, 595, 598, 599, 600, 601, 603, 606, 607, 609, 612, 615, 616, 617, 620, 624, 626, 628, 630, 631, 632, 633, 634, 635, 636, 637, 639, 641, 642, 643, 644, 646, 648, 649, 769, 772, 773, 775, 778, 779, 780, 781, 784, 785, 786, 788, 789, 792, 794, 795, 796, 799, 800, 802, 806, 807, 810, 811, 812, 813, 815, 816, 820, 821, 822, 823, 825, 826, 827, 830, 833, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 880, 883, 902, 909, 912, 913, 914, 917, 920, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999, 1037, 1038, 1039, 1040, 1041, 1042, 1049, 1050, 1051, 1056, 1057, 1058, 1060, 1062, 1064, 1069, 1070, 1071, 1084, 1085, 1122, 1131, 1140, 1159, 1165, 1166, 1187, 1202, 1221, 1228, 1238, 1239, 1246, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1265, 1267, 1268, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1352, 1353, 1367, 1368, 1382, 1385, 1386, 1390, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1466, 1490, 1495, 1502, 1511, 1512, 1520, 1525, 1527, 1528, 1529, 1530, 1534, 1539, 1543, 1565, 1568, 1569, 1570, 1571, 1572, 1574, 1578, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1589, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1604, 1608, 1609, 1610, 1611, 1616, 1636, 1637, 1693, 1694, 1697, 1698, 1702, 1703, 1704, 1710, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1731], "point_dict_exterior": 1616, "point_dict_interior": 1616, "point_model": [0, 5, 10, 23, 335, 336, 567, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 1718], "point_result": [5, 18, 23, 33, 1051, 1714, 1715, 1725], "pointcalcul": [1049, 1050, 1051, 1703, 1710], "pointdatamodel": [5, 23, 46, 60, 336, 337, 399, 400, 401, 402, 403, 404, 405, 406, 420, 567, 618, 623, 626, 1694, 1698, 1702], "pointdatamodellist": [46, 47, 335, 404, 405, 406, 407, 408, 409, 1698], "pointer": [105, 177, 230], "points_dist": [1565, 1570, 1572, 1574, 1580, 1582, 1587, 1589, 1594, 1596, 1602, 1604, 1610], "points_insid": [1565, 1571, 1572, 1574, 1581, 1582, 1588, 1589, 1595, 1596, 1603, 1604, 1611], "pointwakescalcul": [46, 47, 48, 49, 50, 51, 1694], "polar": [577, 1122, 1131, 1166, 1187, 1239, 1260, 1261, 1279, 1307, 1394, 1472, 1486], "polaraffin": [1122, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186], "polarax": [1472, 1486], "polartransform": [1122, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195], "poli": 1589, "pollut": [1252, 1256, 1269, 1270], "polycollect": [1254, 1258, 1282, 1283, 1385, 1423, 1513, 1538, 1539], "polygon": [1122, 1247, 1251, 1254, 1281, 1282, 1283, 1386, 1414, 1423, 1589, 1590, 1616, 1704], "polynom_solv": 1562, "polynomi": [577, 1562, 1702, 1704, 1710], "polyquadmesh": [1412, 1414], "pop": [284, 1697], "popcount": [230, 276], "popul": [284, 1697, 1716], "port": 1729, "porteagel": [1671, 1672, 1706, 1710], "porteagel_linear": 1729, "porteagelwak": 1710, "port\u00e9": [802, 874, 880, 886, 1713], "posit": [105, 165, 434, 435, 437, 1089, 1122, 1187, 1196, 1208, 1209, 1211, 1212, 1239, 1240, 1246, 1250, 1253, 1254, 1255, 1257, 1258, 1259, 1279, 1280, 1281, 1282, 1283, 1327, 1330, 1345, 1385, 1392, 1402, 1404, 1423, 1424, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1439, 1441, 1452, 1467, 1472, 1473, 1481, 1490, 1495, 1496, 1499, 1500, 1502, 1503, 1506, 1507, 1514, 1517, 1518, 1521, 1523, 1527, 1528, 1529, 1531, 1532, 1538, 1539, 1614, 1704, 1710, 1713, 1720, 1721, 1726], "position": [1413, 1527, 1528, 1529], "posixpath": 1716, "possibl": [1122, 1248, 1253, 1257, 1259, 1326, 1385, 1386, 1412, 1414, 1427, 1430, 1441, 1448, 1456, 1472, 1481, 1486, 1487, 1499, 1506, 1527, 1528, 1529, 1723], "possibli": [636, 1202, 1221, 1702], "post": [348, 1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1403, 1415, 1419, 1420, 1422, 1512, 1518, 1711, 1715, 1724, 1726, 1731], "post_rotor": 16, "post_rotor_model": 346, "potenti": [830, 1386, 1713, 1714], "poulsen": 914, "pow": [105, 138, 149, 230, 256, 266, 938, 939, 972, 973, 978, 979, 1564, 1718], "power": [285, 443, 444, 446, 565, 569, 660, 661, 706, 708, 713, 714, 719, 721, 722, 727, 729, 730, 735, 736, 938, 939, 972, 973, 978, 979, 1016, 1018, 1023, 1024, 1030, 1086, 1088, 1122, 1249, 1265, 1273, 1385, 1387, 1403, 1422, 1511, 1645, 1665, 1670, 1697, 1702, 1703, 1706, 1709, 1710, 1711, 1713, 1719, 1723, 1727, 1728, 1729], "power_ct_curv": [1715, 1724, 1726], "power_mask": 1710, "power_uncert": [1016, 1023], "powermask": [660, 661, 662, 663, 664, 665, 666, 1702, 1710, 1713, 1718, 1721], "powernorm": 1387, "practic": 1280, "pre": [89, 93, 346, 348, 838, 839, 845, 846, 853, 854, 1065, 1069, 1122, 1238, 1246, 1249, 1250, 1257, 1259, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1386, 1403, 1415, 1419, 1420, 1422, 1512, 1518, 1538, 1539, 1712, 1713, 1721, 1726, 1731], "pre_load": [490, 491, 1717], "pre_rotor": [16, 39, 346, 348, 356, 357, 369, 440, 580, 678, 679, 695, 698, 1713, 1720], "pre_rotor_model": 346, "pre_rotor_onli": [838, 839, 845, 846, 852, 853, 854], "pre_wak": [16, 1715], "preced": [1253, 1255, 1418, 1419, 1430, 1529], "precis": [1122, 1282, 1283, 1512], "predecessor": [1710, 1711], "predict": [838, 845, 852, 1720], "preexist": 1244, "prefer": [1412, 1414, 1430, 1712, 1722], "premultipli": 1390, "present": [1123, 1130, 1254, 1426, 1496, 1512, 1721], "preserv": [1244, 1404], "press": [1274, 1516], "pressur": 1254, "prev_farm_result": [10, 18, 34], "prev_result": [65, 67, 69, 72, 74, 76, 78], "prevent": [1500, 1507, 1710], "previou": [10, 67, 72, 76, 385, 457, 471, 472, 786, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999, 1244, 1404, 1495, 1502, 1710, 1715, 1726], "previous": [1131, 1144, 1166, 1171, 1187, 1218, 1387, 1404, 1452, 1710], "primarili": [1352, 1353, 1354, 1367, 1368, 1369], "principl": [1713, 1726], "print": [0, 10, 18, 308, 320, 552, 557, 567, 573, 1007, 1009, 1016, 1036, 1043, 1047, 1049, 1052, 1056, 1070, 1071, 1078, 1081, 1084, 1086, 1206, 1405, 1564, 1618, 1623, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729], "print_model": [1007, 1016, 1036, 1043, 1047, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086], "print_toc": [567, 573, 1107, 1108, 1548, 1718], "printout": [1716, 1725], "prior": [1122, 1244, 1447, 1497, 1504], "prioriti": [105, 112, 230], "probabl": [1257, 1386, 1418, 1520], "probe": [1570, 1571, 1580, 1581, 1587, 1588, 1594, 1595, 1602, 1603, 1610, 1611, 1720], "problem": [1407, 1710, 1727], "procedur": [1265, 1273, 1422], "process": [1122, 1416, 1619, 1731], "processlookuperror": 1564, "prod": [105, 199, 230], "produc": [1241, 1257, 1259, 1390, 1413, 1414, 1635, 1704, 1710, 1714, 1721, 1727], "product": [984, 1273, 1702, 1713], "productsuperposit": 1710, "profdata": [523, 524], "profdict": [523, 531], "profil": [448, 449, 450, 451, 523, 524, 533, 742, 744, 745, 746, 748, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 767, 768, 914, 1551, 1555, 1698, 1702, 1705, 1710, 1711, 1714, 1715, 1716, 1719], "profile_pt": [1714, 1715], "profile_typ": [448, 451, 742, 746, 750, 754, 758, 762, 765], "progress": [1618, 1619, 1727, 1728], "progress_bar": [1618, 1619, 1710], "project": [1122, 1166, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1274, 1277, 1278, 1279, 1282, 1283, 1352, 1353, 1354, 1367, 1368, 1369, 1382, 1385, 1392, 1394, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1486, 1512, 1516, 1711], "promot": [581, 1702], "prop": [1122, 1399, 1466, 1533], "prop_cycl": [1419, 1430, 1435], "prop_nam": [1123, 1126], "propag": [1702, 1709, 1710, 1713], "proper": [1208, 1210, 1390], "properti": [0, 10, 15, 17, 18, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 46, 52, 56, 60, 80, 85, 94, 97, 308, 316, 323, 325, 329, 330, 332, 335, 344, 346, 356, 362, 369, 370, 377, 379, 387, 389, 392, 399, 404, 410, 420, 427, 431, 432, 438, 439, 440, 443, 448, 452, 459, 462, 464, 465, 466, 471, 474, 477, 478, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 552, 556, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 907, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1006, 1107, 1112, 1113, 1114, 1122, 1123, 1126, 1131, 1143, 1166, 1178, 1187, 1228, 1230, 1238, 1239, 1241, 1242, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1258, 1259, 1265, 1266, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1382, 1385, 1386, 1388, 1389, 1390, 1392, 1399, 1400, 1402, 1403, 1408, 1410, 1411, 1412, 1414, 1415, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1435, 1449, 1466, 1468, 1472, 1486, 1490, 1495, 1499, 1500, 1502, 1506, 1507, 1512, 1513, 1514, 1515, 1517, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1533, 1535, 1536, 1537, 1540, 1543, 1564, 1618, 1625, 1627, 1631], "proport": [1122, 1256], "proportion": 1423, "protocol": [105, 111, 113, 230], "protrud": 1423, "provid": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 352, 356, 362, 369, 370, 379, 385, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 448, 452, 459, 463, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1043, 1080, 1088, 1239, 1255, 1257, 1281, 1306, 1386, 1388, 1390, 1404, 1413, 1418, 1419, 1431, 1432, 1452, 1466, 1480, 1500, 1507, 1513, 1517, 1518, 1529, 1540, 1564, 1692, 1700, 1702, 1710, 1713, 1716, 1717, 1718, 1719, 1720, 1724, 1725, 1727], "psd": [1122, 1273, 1403, 1422, 1511], "pseudocolor": [1122, 1390, 1412, 1413, 1414, 1529], "psi": [1554, 1556, 1558, 1559, 1705], "pt": [1131, 1159, 1166, 1187], "ptp": [105, 200, 230], "public": [1711, 1729], "publicli": 1711, "publish": [1708, 1710], "pull": [1123, 1126, 1711], "pure": [1037, 1038, 1039, 1040, 1041, 1042, 1710], "purpos": [769, 1414, 1713, 1716, 1725], "push": 1711, "pushoff": [1131, 1159, 1166, 1187], "put": [105, 201, 230, 1254, 1431, 1432, 1523, 1525], "pvar": [46, 60], "pwake": [370, 371, 373, 375, 570, 587, 589, 590, 592, 1720], "pwake_typ": [392, 397, 594, 599, 601, 603, 609, 615], "pxx": 1422, "pxy": 1273, "py": [1093, 1564, 1714, 1715, 1728], "pyc": 1564, "pylab": [1122, 1269, 1270], "pypi": 1710, "pyplot": [1002, 1003, 1005, 1009, 1060, 1064, 1080, 1088, 1269, 1270, 1390, 1399, 1413, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "pyplot_argu": [1122, 1461], "pytest": [1710, 1732], "python": [105, 111, 230, 1564, 1613, 1704, 1710, 1711, 1724, 1731], "python3": [1564, 1712], "q": [1122, 1424], "q1": [1257, 1259], "q3": [1257, 1259], "quad": [1412, 1414], "quadcontourset": [1037, 1038, 1039, 1040, 1041, 1042, 1089], "quadmesh": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1387, 1413, 1414], "quadrat": [928, 929, 933, 934, 938, 939, 943, 944, 990, 996, 1702, 1713, 1718], "quadric": 1390, "quadrilater": [1412, 1413, 1414], "quantil": [1538, 1539], "quantit": 1254, "quantiti": [392, 410, 1254, 1423, 1713, 1722], "quartil": [1257, 1259], "queri": [1122, 1322, 1408, 1462], "queue": 1710, "quick": 1711, "quicker": 1712, "quickli": 1419, "quit": 1564, "quiv": 1089, "quiver": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1122, 1254, 1423, 1424], "quiver_n": [1037, 1038, 1039, 1040, 1041, 1042, 1715, 1717, 1724, 1726], "quiver_par": [1037, 1038, 1039, 1040, 1041, 1042, 1715, 1717, 1724, 1726], "quiverkei": [1122, 1423, 1424], "r": [810, 811, 820, 821, 822, 823, 826, 827, 838, 845, 852, 860, 864, 867, 871, 874, 877, 909, 913, 914, 917, 920, 923, 1122, 1131, 1187, 1196, 1239, 1246, 1249, 1250, 1257, 1281, 1285, 1382, 1390, 1419, 1525, 1707, 1713, 1714, 1724], "r1": [1636, 1637, 1704], "r2": [1636, 1637, 1704], "r_": 1166, "r_pc": [886, 895], "r_pc_": [886, 896], "radial": [594, 595, 811, 822, 827, 853, 1122, 1131, 1137, 1166, 1169, 1187, 1188, 1260, 1331, 1332, 1472, 1474, 1475, 1476, 1477, 1707, 1710, 1713, 1714], "radialloc": [1122, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "radian": [1122, 1131, 1159, 1166, 1187, 1208, 1238, 1341, 1415, 1432, 1484, 1485, 1486, 1487], "radiant": [902, 1729], "radii": [594, 825, 826, 863, 864, 870, 871, 912, 913, 1122, 1469, 1472, 1636, 1704], "radii_angl": 1435, "radiu": [413, 631, 639, 646, 823, 826, 860, 864, 867, 871, 909, 913, 1122, 1166, 1169, 1187, 1196, 1254, 1267, 1330, 1390, 1418, 1472, 1473, 1582, 1583, 1614, 1636, 1637], "raimund": 577, "rais": [105, 165, 393, 490, 597, 611, 1096, 1123, 1130, 1196, 1203, 1205, 1218, 1228, 1238, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1420, 1422, 1423, 1430, 1468, 1487, 1511, 1513, 1514, 1517, 1520, 1539, 1540, 1543], "raise_if_exce": [1196, 1203, 1218], "rand": 1279, "random": [488, 549, 550, 551, 1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1337, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1480, 1512, 1521, 1523, 1614, 1701, 1704, 1710, 1716], "random_timeseri": 1710, "random_timseries_data": [550, 1701, 1710], "random_xy_squar": [1614, 1704, 1710], "randomli": [488, 1701, 1716], "rang": [503, 505, 511, 531, 533, 540, 550, 673, 674, 1122, 1196, 1202, 1207, 1218, 1221, 1223, 1238, 1257, 1265, 1273, 1279, 1385, 1386, 1387, 1390, 1394, 1403, 1412, 1413, 1414, 1415, 1419, 1422, 1430, 1438, 1487, 1497, 1504, 1511, 1523, 1526, 1527, 1528, 1538, 1539, 1564, 1702, 1710, 1713, 1714, 1720, 1721, 1723, 1724, 1729], "range_var": [673, 674, 1723], "rankin": [830, 1707, 1710, 1714, 1715], "rankinehalfbodi": [830, 831, 832, 833, 834, 835, 836, 837, 1707, 1710, 1715, 1718], "rare": 1518, "raster": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1328, 1329, 1382, 1385, 1390, 1392, 1403, 1405, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1470, 1471, 1512, 1521, 1523], "rasterization_demo": [1414, 1470, 1471], "rasterization_zord": 1435, "rate": [660, 1390], "rather": [984, 1140, 1280, 1386, 1423, 1431, 1432], "rathmann": [838, 839, 840, 841, 842, 843, 844, 1707, 1710, 1714, 1718], "ratio": [105, 165, 1122, 1240, 1241, 1254, 1290, 1295, 1301, 1307, 1390, 1418, 1436, 1441, 1449, 1512], "raul": [845, 852, 1714], "ravel": [105, 202, 230, 1714, 1715], "raw": [1386, 1390], "rc": [1208, 1210, 1244, 1255, 1257, 1279, 1280, 1385, 1386, 1387, 1388, 1390, 1412, 1413, 1414, 1419, 1420, 1424, 1430, 1490, 1495, 1502, 1511, 1512, 1523, 1526, 1527, 1528, 1540, 1541, 1544], "rcparam": [1430, 1490, 1499, 1506, 1523, 1724, 1726], "rcsetup": 1468, "rdict": [498, 501, 503, 504, 514, 515, 531, 532, 544, 547, 548], "re": [1122, 1515, 1713, 1721, 1726], "reach": [1693, 1695, 1700, 1710, 1715, 1726], "read": [490, 491, 503, 505, 531, 533, 561, 562, 563, 564, 565, 566, 619, 656, 674, 686, 707, 709, 713, 714, 721, 722, 729, 730, 735, 736, 1115, 1120, 1615, 1616, 1617, 1633, 1634, 1692, 1699, 1701, 1704, 1710, 1715, 1717, 1719, 1724, 1726, 1727, 1728], "read_attribut": [562, 1701], "read_csv": 759, "read_fil": [1115, 1120, 1615, 1633], "read_layout": [563, 1701], "read_output": [564, 1701], "read_shp": [1615, 1616, 1704, 1710], "read_shp_polygon": [1616, 1634, 1704, 1710], "read_tab_fil": [1617, 1704], "read_turbine_typ": [565, 1701], "read_windio": [566, 1701], "readabl": [531, 1701, 1723, 1727], "readi": [1710, 1718, 1725, 1726, 1729], "real": [105, 203, 230, 1238, 1265, 1273, 1403, 1415, 1422, 1511, 1562, 1704], "realist": [1714, 1715, 1724], "realiz": [1710, 1717, 1729], "realli": [1481, 1727], "reason": [352, 388, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1140, 1239, 1402, 1414, 1420, 1423, 1433, 1434, 1452, 1713], "recalcul": [636, 637], "recent": [65, 68, 69, 73, 74, 77, 78], "reciproc": [1431, 1432], "recommend": [1130, 1257, 1259, 1518, 1712, 1717], "recomput": [1122, 1426], "recorded_input": 553, "recorded_output": 553, "rect": [1060, 1122, 1289, 1392, 1394, 1723], "rectangl": [1060, 1122, 1246, 1247, 1250, 1251, 1255, 1258, 1313, 1385, 1392, 1393, 1441, 1448, 1452, 1457, 1523, 1717], "rectangle_patch": [1392, 1393], "rectangular": [1122, 1257, 1385, 1386, 1412, 1413, 1414, 1523], "rectilinear": [1394, 1481], "recurs": 1284, "recursionerror": 1564, "red": [1246, 1249, 1250, 1252, 1256, 1269, 1270, 1279, 1281, 1419, 1468, 1523, 1525, 1527, 1528], "redraw": [1122, 1276, 1425], "redraw_in_fram": [1122, 1425], "redrawn": 1427, "reduc": [433, 636, 637, 643, 644, 1016, 1032, 1033, 1034, 1072, 1073, 1074, 1075, 1076, 1077, 1385, 1401, 1407, 1423, 1710, 1713, 1718, 1719, 1722], "reduce_al": [1016, 1032], "reduce_c_funct": 1385, "reduce_st": [1016, 1033, 1727], "reduce_turbin": [1016, 1034], "reduct": [636, 637, 1385, 1714], "ref": 853, "refactor": 1710, "refer": [577, 802, 830, 838, 845, 852, 860, 867, 874, 880, 886, 914, 1243, 1247, 1251, 1257, 1259, 1279, 1401, 1518, 1552, 1553, 1557, 1560, 1705, 1710, 1713, 1714, 1716, 1729], "referenceerror": 1564, "reflect": [587, 590, 591, 1238, 1265, 1273, 1403, 1415, 1422, 1511, 1702, 1710, 1713, 1715, 1718, 1724, 1726, 1729, 1731], "reformul": 1710, "regard": 1140, "regardless": [1243, 1247, 1249, 1251, 1412, 1485, 1494, 1501], "region": [803, 838, 839, 845, 846, 853, 854, 880, 881, 886, 901, 1122, 1281, 1282, 1283, 1527, 1528, 1710, 1713, 1714, 1715], "regist": [1122, 1385, 1387, 1390, 1411, 1412, 1413, 1414, 1430, 1498, 1505, 1527, 1528], "register_scal": [1498, 1505], "regular": [487, 490, 636, 643, 1122, 1385, 1390, 1405, 1412, 1413, 1414, 1440, 1523, 1635, 1701, 1702, 1704, 1710, 1713, 1715, 1722, 1724, 1726, 1728], "regularlayoutoptproblem": 1710, "rel": [285, 1159, 1239, 1255, 1344, 1386, 1392, 1394, 1418, 1423, 1431, 1432, 1439, 1655, 1687, 1697, 1706], "relat": [1710, 1728], "relative_to": 1716, "relax": [10, 16, 17, 80, 81, 85, 86, 1695, 1710, 1715], "releas": [1279, 1710, 1712], "relev": [1058, 1060, 1277, 1282, 1283, 1390, 1512, 1527, 1528, 1702, 1707, 1715], "reli": 1731, "relim": [1122, 1244, 1426, 1427], "relpo": 1239, "remain": [1122, 1253, 1277, 1282, 1283, 1347, 1386, 1401, 1404, 1512, 1525], "remot": 1711, "remov": [0, 10, 18, 308, 311, 678, 684, 1122, 1166, 1169, 1230, 1252, 1256, 1257, 1265, 1269, 1270, 1273, 1277, 1398, 1406, 1420, 1422, 1423, 1427, 1428, 1452, 1500, 1507, 1511, 1527, 1528, 1710, 1712, 1721, 1722], "remove_callback": [1122, 1230, 1411, 1428], "remove_inner_tick": [1122, 1398], "renam": [1257, 1710], "render": [1122, 1239, 1257, 1259, 1275, 1277, 1344, 1350, 1387, 1390, 1413, 1414, 1435, 1441, 1445, 1526, 1539], "rendererbas": [1239, 1275, 1344], "renen": 874, "renew": [838, 845, 852], "reorder": [52, 1694], "reorderfarmoutput": [52, 53, 54, 55, 1694, 1724], "repeat": [105, 204, 230, 1255, 1513, 1527, 1528, 1720], "repeatedli": 1715, "repetit": [886, 1707], "replac": [1123, 1208, 1210, 1277, 1500, 1507, 1710, 1712, 1713, 1730], "report": [1277, 1711], "repositori": [1709, 1711, 1732], "repr": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 143, 230, 260, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 381, 392, 399, 404, 410, 420, 438, 440, 443, 445, 448, 452, 459, 463, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 583, 587, 589, 590, 594, 596, 599, 601, 603, 605, 609, 615, 618, 623, 626, 630, 636, 638, 643, 645, 650, 652, 655, 660, 662, 667, 673, 678, 685, 690, 692, 695, 698, 701, 703, 706, 708, 710, 713, 715, 721, 723, 729, 735, 737, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 782, 788, 790, 795, 797, 802, 804, 810, 813, 820, 823, 830, 832, 838, 840, 845, 847, 852, 853, 855, 860, 862, 867, 869, 874, 876, 880, 882, 886, 909, 911, 914, 916, 920, 922, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1122, 1123, 1127, 1226, 1564], "repres": [459, 463, 636, 637, 685, 729, 735, 1010, 1123, 1124, 1141, 1252, 1256, 1257, 1259, 1269, 1270, 1280, 1390, 1402, 1419, 1420, 1423, 1433, 1434, 1490, 1496, 1503, 1518, 1520, 1538, 1539, 1582, 1589, 1596, 1702, 1704, 1710, 1713, 1716, 1719, 1722, 1728, 1729], "represent": [1107, 1109, 1122, 1208, 1211, 1286, 1306, 1390, 1547, 1549], "request": [460, 1710, 1711], "requir": [74, 308, 331, 334, 452, 457, 769, 775, 780, 786, 788, 795, 802, 1122, 1160, 1240, 1259, 1290, 1386, 1390, 1436, 1439, 1441, 1538, 1695, 1710, 1711, 1713, 1716, 1717, 1718, 1724, 1727, 1729, 1731, 1732], "resampl": 1390, "rescal": 984, "research": [1564, 1711], "reserv": 1564, "reset": [0, 10, 18, 308, 322, 498, 501, 503, 511, 514, 531, 540, 544, 547, 678, 684, 1122, 1429, 1468, 1525, 1719, 1721, 1724], "reset_posit": [1122, 1429], "reshap": [105, 205, 230], "resid": [1122, 1245], "resiz": [105, 206, 230, 1390], "resolut": [1036, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1238, 1265, 1273, 1403, 1415, 1422, 1511, 1714, 1715, 1717, 1719, 1724, 1725, 1726, 1728, 1729], "resolv": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "resort": 1420, "resourcewarn": 1564, "respecitv": 346, "respect": [347, 487, 643, 644, 1248, 1388, 1404, 1414, 1420, 1424, 1447, 1494, 1496, 1498, 1501, 1503, 1505, 1520, 1521, 1525, 1540, 1710, 1713, 1716, 1722, 1727, 1728, 1729], "respond": [1122, 1323, 1463], "respons": [452, 1702, 1713, 1722, 1723], "rest": 1166, "restart": 1710, "restrict": [1436, 1710], "restructur": 1710, "result": [4, 5, 10, 12, 18, 22, 23, 25, 26, 27, 33, 34, 40, 44, 48, 52, 54, 56, 58, 60, 62, 65, 67, 69, 72, 74, 76, 78, 82, 87, 93, 96, 104, 333, 334, 338, 348, 358, 361, 365, 373, 374, 395, 400, 403, 407, 410, 412, 414, 441, 449, 453, 468, 471, 473, 492, 506, 518, 525, 534, 552, 584, 594, 603, 606, 616, 620, 624, 626, 627, 628, 630, 632, 636, 643, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 744, 748, 752, 756, 760, 763, 767, 769, 817, 823, 825, 834, 860, 863, 867, 870, 909, 912, 932, 937, 938, 939, 942, 947, 948, 952, 954, 958, 960, 964, 966, 970, 972, 973, 976, 978, 979, 982, 984, 988, 990, 994, 996, 1000, 1007, 1008, 1009, 1016, 1017, 1018, 1019, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1049, 1050, 1051, 1052, 1053, 1056, 1057, 1058, 1060, 1069, 1070, 1071, 1078, 1079, 1081, 1082, 1085, 1140, 1239, 1241, 1252, 1255, 1256, 1257, 1259, 1265, 1269, 1270, 1273, 1282, 1283, 1284, 1390, 1394, 1419, 1422, 1423, 1436, 1451, 1481, 1497, 1504, 1511, 1512, 1521, 1624, 1626, 1632, 1635, 1693, 1694, 1697, 1702, 1703, 1706, 1710, 1713, 1714, 1715, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "results_st": [1007, 1008], "resultswrit": [1052, 1053, 1054, 1055, 1703, 1710], "ret_data": [1040, 1041, 1042, 1056, 1060, 1061, 1084], "ret_dim": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 384, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "ret_grid": [1072, 1073, 1074, 1075, 1076, 1077], "ret_im": [1009, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1724, 1726], "ret_stat": [1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1089], "ret_utm_zon": [1616, 1634, 1704], "retriev": [1122, 1360, 1375, 1404], "retur": 1030, "return": [0, 10, 18, 39, 42, 46, 48, 52, 56, 60, 80, 85, 94, 105, 108, 109, 110, 114, 117, 118, 120, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 165, 188, 230, 232, 233, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 381, 392, 399, 404, 410, 420, 438, 440, 443, 445, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 583, 587, 589, 590, 594, 596, 599, 601, 603, 605, 609, 615, 618, 623, 626, 630, 636, 638, 643, 645, 650, 652, 655, 660, 662, 667, 673, 678, 685, 690, 692, 695, 698, 701, 703, 706, 708, 710, 713, 715, 721, 723, 729, 735, 737, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 782, 788, 790, 795, 797, 802, 804, 810, 813, 820, 823, 830, 832, 838, 840, 845, 847, 852, 853, 855, 860, 862, 867, 869, 874, 876, 880, 882, 886, 909, 911, 914, 916, 920, 922, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1007, 1026, 1031, 1037, 1038, 1039, 1056, 1084, 1089, 1123, 1126, 1127, 1128, 1129, 1130, 1131, 1135, 1139, 1140, 1141, 1142, 1143, 1144, 1150, 1162, 1163, 1164, 1165, 1166, 1168, 1170, 1171, 1176, 1178, 1180, 1184, 1185, 1186, 1187, 1189, 1192, 1195, 1196, 1198, 1202, 1203, 1206, 1208, 1209, 1211, 1212, 1213, 1218, 1219, 1221, 1226, 1227, 1229, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1260, 1261, 1268, 1271, 1272, 1275, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1298, 1299, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1311, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1326, 1328, 1329, 1335, 1336, 1338, 1339, 1342, 1346, 1347, 1348, 1349, 1350, 1351, 1355, 1356, 1359, 1361, 1362, 1364, 1366, 1370, 1371, 1374, 1376, 1377, 1379, 1381, 1382, 1383, 1384, 1391, 1397, 1408, 1417, 1421, 1424, 1435, 1437, 1466, 1542, 1545, 1565, 1572, 1574, 1582, 1589, 1596, 1604, 1704, 1710, 1720, 1725], "return_lin": [1273, 1422], "return_nearest": [1565, 1570, 1572, 1574, 1580, 1582, 1587, 1589, 1594, 1596, 1602, 1604, 1610], "reult": 412, "reus": 1244, "revers": [1244, 1386, 1496, 1503, 1564], "revert": 1447, "rew": [0, 1, 10, 18, 565, 643, 1115, 1117, 1673, 1690, 1691, 1702, 1706, 1710, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "rews2": [690, 691, 714, 722, 730, 736, 1115, 1117, 1674, 1690, 1691, 1706, 1715, 1718, 1724, 1726], "rews3": [660, 661, 714, 722, 730, 736, 1115, 1117, 1675, 1690, 1691, 1706, 1715, 1718, 1724, 1726], "rews_max": 1723, "rews_min": 1723, "rgb": [1252, 1256, 1269, 1270, 1390, 1413, 1414, 1430], "rgba": [1254, 1258, 1282, 1283, 1385, 1390, 1412, 1413, 1414, 1423, 1430], "rgrid": 1435, "rh": [1016, 1035], "rhb": [1710, 1714, 1715, 1718], "rho": [516, 517, 523, 524, 706, 707, 709, 713, 714, 721, 722, 735, 736, 1088, 1115, 1117, 1676, 1690, 1691, 1706, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "rice": 1386, "ride": 1279, "right": [1031, 1035, 1122, 1166, 1238, 1239, 1241, 1246, 1249, 1250, 1254, 1265, 1273, 1277, 1279, 1282, 1283, 1345, 1352, 1353, 1358, 1367, 1368, 1382, 1386, 1390, 1393, 1398, 1399, 1403, 1415, 1419, 1420, 1422, 1423, 1424, 1431, 1432, 1435, 1439, 1441, 1490, 1495, 1496, 1511, 1512, 1518, 1521, 1523, 1525, 1531, 1542, 1545, 1564, 1713, 1714], "right_lim": 1496, "righthand": 1386, "rightmost": 1387, "risk": [1472, 1486, 1499, 1506], "rlabel_posit": 1435, "rlim": 1435, "rmax": [1122, 1435, 1474, 1475], "rmin": [1122, 1435, 1474, 1476], "rmodel_typ": [410, 417, 630, 636, 643], "rng": 1480, "ro": 1419, "roject": 1711, "roman": 1523, "root": [1562, 1704], "rorigin": [1122, 1435, 1477], "rose": [1056, 1058, 1060, 1061, 1084, 1122, 1252, 1256, 1269, 1270, 1703, 1704, 1709, 1710, 1711, 1716, 1723, 1727], "roseplotoutput": [1056, 1057, 1058, 1059, 1060, 1061, 1084, 1703, 1710, 1723], "rotat": [1252, 1254, 1256, 1269, 1270, 1418, 1423, 1523, 1525, 1714, 1716], "rotatelabel": 1418, "rotation_mod": 1523, "rotor": [0, 2, 346, 348, 356, 357, 373, 392, 395, 410, 412, 413, 414, 415, 416, 417, 419, 434, 435, 443, 444, 452, 456, 471, 472, 483, 567, 594, 599, 601, 603, 604, 606, 609, 610, 615, 616, 630, 631, 632, 633, 634, 635, 636, 639, 641, 642, 643, 644, 646, 648, 649, 667, 668, 679, 769, 773, 775, 779, 780, 785, 788, 794, 795, 800, 802, 807, 838, 839, 845, 846, 853, 854, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999, 1007, 1008, 1009, 1037, 1038, 1039, 1062, 1063, 1064, 1089, 1646, 1647, 1648, 1659, 1673, 1674, 1675, 1680, 1698, 1702, 1703, 1706, 1709, 1710, 1711, 1714, 1715, 1719, 1720, 1724, 1726, 1727], "rotor_color": [1037, 1038, 1039], "rotor_model": [0, 2, 567, 603, 604, 609, 610, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 1062, 1063, 1710, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1727, 1728, 1729], "rotor_point": [1713, 1715, 1718, 1719, 1720, 1722, 1726], "rotor_point_weight": [410, 419, 630, 635, 636, 642, 643, 649], "rotor_wd": [2, 1713, 1714, 1715, 1718], "rotor_wd_farmo": 1718, "rotorcentrecalc": [667, 668, 669, 670, 671, 672, 1702, 1710, 1718], "rotormodel": [0, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 567, 603, 604, 609, 610, 630, 636, 643, 1062, 1063, 1698, 1702], "rotorpoint": [599, 615, 616, 617, 1702, 1710, 1713, 1718, 1726], "rotorpointplot": [1062, 1063, 1064, 1703, 1710, 1722], "rotorwd": [769, 770, 775, 776, 777, 778, 779, 802, 803, 1702, 1715, 1718], "rough": [1550, 1551, 1552, 1554, 1555, 1557, 1558, 1560, 1689, 1706, 1713], "round": [105, 207, 230, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1481, 1512, 1564, 1642], "round_numb": 1244, "routin": 1141, "row": [489, 685, 686, 1054, 1254, 1255, 1279, 1280, 1390, 1398, 1405, 1412, 1413, 1414, 1423, 1430, 1511, 1520, 1521, 1701, 1709, 1711, 1714, 1715, 1719, 1720, 1721, 1726, 1727], "row_var": [685, 686], "rowcolour": 1521, "rowlabel": 1521, "rowloc": 1521, "rpar": [531, 713], "rpars_ct": [721, 729, 735], "rpars_p": [721, 729, 735], "rpoint": [396, 410, 412, 600, 607, 617, 630, 636, 643], "rpoint_result": [414, 630, 632], "rpoint_weight": [373, 395, 606, 616], "rscale": 1435, "rtick": 1435, "rule": [1390, 1710, 1713, 1723, 1729], "run": [0, 2, 10, 18, 21, 31, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 309, 318, 323, 332, 335, 346, 348, 356, 357, 362, 369, 370, 379, 382, 392, 397, 399, 404, 410, 417, 420, 423, 438, 440, 442, 443, 447, 448, 449, 451, 452, 458, 459, 465, 469, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 552, 558, 559, 560, 566, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 679, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 763, 765, 767, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1007, 1016, 1036, 1043, 1046, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1122, 1203, 1228, 1543, 1618, 1619, 1624, 1625, 1626, 1627, 1632, 1698, 1702, 1704, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732], "run_calc": 1720, "run_calcul": [4, 5, 22, 23, 39, 42, 46, 52, 56, 60, 80, 85, 94, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735], "run_farm_calc": [552, 559], "run_output": [552, 560], "runner": [552, 554, 555, 566, 1036, 1065, 1066, 1070, 1071, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1701, 1710, 1715, 1724, 1726, 1727, 1728], "runtim": 1727, "runtimeerror": 1564, "runtimewarn": 1564, "rweight": [396, 600, 607, 617], "rwidth": 1386, "s0960148123007620": [838, 845, 852], "s_": 1721, "safe": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 384, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "sake": 1724, "same": [325, 326, 328, 429, 430, 449, 744, 748, 752, 756, 760, 763, 767, 1023, 1166, 1218, 1239, 1248, 1254, 1255, 1257, 1258, 1259, 1260, 1277, 1279, 1280, 1385, 1386, 1388, 1390, 1394, 1412, 1413, 1414, 1419, 1423, 1430, 1441, 1467, 1468, 1480, 1500, 1507, 1513, 1518, 1520, 1521, 1527, 1528, 1529, 1540, 1563, 1564, 1637, 1710, 1714, 1727, 1729], "sampl": [1238, 1265, 1273, 1387, 1403, 1415, 1422, 1511], "san": 1523, "satisfi": 1429, "save": 1727, "savefig": [1122, 1317, 1459], "sbeta": [860, 861, 874, 875, 914, 915, 920, 921, 1710], "sbeta_factor": [860, 861, 874, 875, 914, 915, 920, 921, 1710, 1718], "sc": [105, 110, 114, 230], "scalar": [105, 106, 110, 114, 121, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 184, 185, 186, 187, 189, 192, 193, 194, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 618, 619, 1238, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1259, 1265, 1273, 1277, 1279, 1282, 1283, 1286, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1435, 1438, 1512, 1521, 1523, 1527, 1528, 1538, 1540], "scalarformatt": [1122, 1472, 1526], "scale": [948, 949, 960, 961, 972, 973, 990, 991, 1122, 1166, 1169, 1187, 1196, 1207, 1218, 1223, 1238, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1295, 1337, 1362, 1377, 1382, 1385, 1386, 1387, 1390, 1392, 1402, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1433, 1434, 1435, 1441, 1480, 1498, 1505, 1511, 1512, 1520, 1521, 1523, 1527, 1528, 1710, 1714, 1715, 1717, 1724, 1726], "scale_amb": [948, 949, 960, 961, 972, 973, 990, 991, 1718], "scale_by_freq": [1265, 1273, 1422, 1511], "scale_transform": [1166, 1169, 1188], "scale_unit": [1423, 1717], "scalebas": [1498, 1505], "scalei": [1122, 1244, 1419], "scalex": [1122, 1244, 1419], "scanw": [516, 517, 518, 519, 520, 521, 522, 1701], "scatter": [1009, 1031, 1062, 1064, 1122, 1419, 1430, 1710], "scatterplot": 1430, "scenario": 1715, "schedul": [1618, 1619, 1710, 1727], "schemat": 1254, "schmidt": 1708, "schmidt2023": 1708, "sci": 1526, "scienc": [838, 845, 852], "sciencedirect": [838, 845, 852], "scientif": 1526, "scilimit": [1122, 1526], "scipi": [490, 491, 505, 686, 729, 730, 735, 736, 1238, 1265, 1273, 1403, 1415, 1422, 1511, 1512], "scott": [1386, 1539], "screen": [1187, 1239, 1249, 1423], "script": [1730, 1731], "sdata": [550, 1720, 1721, 1729], "se": [1435, 1439, 1441, 1485], "search": [385, 490, 491, 499, 503, 505, 567, 573, 702, 802, 861, 880, 1561, 1704, 1710, 1713, 1718, 1725, 1727], "searchsort": [105, 208, 230], "second": [482, 1122, 1255, 1279, 1282, 1283, 1386, 1387, 1394, 1419, 1431, 1432, 1647, 1674, 1706, 1713], "secondari": [1122, 1353, 1431, 1432], "secondart": [1122, 1368], "secondary_axi": [1431, 1432], "secondary_xaxi": [1122, 1431], "secondary_yaxi": [1122, 1432], "secondaryaxi": [1431, 1432], "section": [1282, 1283, 1412, 1414, 1419, 1511, 1713, 1718, 1725, 1727, 1729, 1731], "sector": [1056, 1058, 1060, 1061, 1084, 1122, 1252, 1256, 1269, 1270, 1617, 1709, 1710, 1711, 1727], "sector_man": 1710, "sector_manag": 1710, "sector_rul": 1723, "sectormanag": [673, 674, 675, 676, 677, 1702, 1710, 1713, 1723], "see": [105, 106, 135, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 185, 186, 189, 192, 193, 194, 198, 199, 201, 202, 204, 205, 206, 207, 208, 209, 210, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 230, 253, 1122, 1140, 1160, 1196, 1199, 1218, 1220, 1224, 1231, 1243, 1244, 1254, 1265, 1267, 1279, 1280, 1281, 1327, 1338, 1394, 1399, 1401, 1402, 1413, 1418, 1427, 1431, 1432, 1433, 1434, 1440, 1470, 1471, 1490, 1498, 1505, 1512, 1513, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1530, 1531, 1532, 1564, 1625, 1627, 1628, 1710, 1712, 1713, 1715, 1719, 1720, 1728], "seed": [488, 550, 1480, 1614], "seem": 1715, "seen": 1727, "segment": [1122, 1159, 1162, 1184, 1187, 1238, 1253, 1265, 1269, 1270, 1273, 1403, 1415, 1422, 1481, 1511, 1514], "segreg": [1710, 1713], "sel": [334, 491], "select": [74, 85, 287, 296, 318, 334, 346, 370, 373, 374, 392, 395, 397, 417, 423, 434, 435, 436, 437, 440, 441, 442, 447, 451, 458, 468, 469, 472, 491, 498, 501, 503, 505, 511, 514, 531, 533, 540, 544, 547, 573, 581, 587, 589, 590, 594, 599, 601, 603, 606, 609, 615, 616, 650, 651, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 811, 812, 815, 817, 821, 822, 825, 827, 834, 863, 870, 877, 883, 912, 917, 923, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1046, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1196, 1207, 1218, 1223, 1363, 1378, 1669, 1692, 1695, 1697, 1698, 1700, 1702, 1706, 1710, 1713, 1714, 1717, 1718, 1719, 1725, 1727, 1731], "self": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 107, 108, 109, 115, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 308, 322, 323, 332, 335, 346, 352, 356, 362, 369, 370, 379, 381, 385, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 445, 448, 452, 459, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 583, 587, 589, 590, 594, 596, 599, 601, 603, 605, 609, 615, 618, 621, 623, 626, 630, 636, 637, 638, 643, 645, 650, 652, 655, 658, 660, 662, 667, 673, 678, 682, 685, 690, 692, 695, 698, 701, 703, 706, 708, 710, 713, 715, 718, 721, 723, 726, 729, 733, 735, 737, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 782, 788, 790, 795, 797, 802, 804, 810, 813, 820, 823, 830, 832, 838, 840, 845, 847, 852, 853, 855, 860, 862, 867, 869, 874, 876, 880, 882, 886, 909, 911, 914, 916, 920, 922, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1014, 1122, 1123, 1127, 1131, 1135, 1139, 1140, 1150, 1155, 1166, 1168, 1170, 1176, 1187, 1189, 1192, 1196, 1199, 1218, 1220, 1226, 1227, 1284, 1535, 1625, 1627, 1628, 1707], "self_wak": [453, 920, 921], "selfsimilar": [845, 846, 847, 848, 849, 850, 851, 852, 1707, 1710, 1714, 1718], "selfsimilar2020": [852, 1707, 1710, 1714, 1715, 1718], "semant": [1282, 1283, 1386], "semi": [1523, 1714], "semibold": 1523, "semilog": 1249, "semilogi": [1122, 1434], "semilogx": [1122, 1433], "sens": [1529, 1710, 1719, 1722], "sensibl": 1279, "sensit": [1719, 1729], "separ": [603, 810, 813, 1131, 1142, 1153, 1166, 1187, 1239, 1255, 1279, 1286, 1419, 1526, 1702, 1707, 1710, 1713, 1730], "separatli": 1710, "seper": [1058, 1060, 1061], "seq": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1255, 1265, 1273, 1277, 1279, 1382, 1392, 1403, 1415, 1419, 1420, 1422, 1512], "seq_dyn_wak": [1713, 1724], "seq_dyn_wakes_": [1713, 1718], "seq_dyn_wakes_1min": 1724, "seqdynamicwak": [780, 781, 782, 783, 784, 785, 786, 787, 1718, 1724], "seqflowanimationplugin": [1065, 1066, 1067, 1068, 1069, 1703, 1724], "seqstat": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 1696, 1724], "sequenc": [1122, 1123, 1165, 1238, 1246, 1249, 1250, 1252, 1254, 1255, 1256, 1257, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1281, 1382, 1385, 1386, 1402, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1430, 1499, 1506, 1511, 1512, 1513, 1518, 1527, 1528, 1539], "sequenti": [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 780, 1065, 1068, 1069, 1436, 1693, 1703, 1709, 1710, 1713], "sequential_calc": 1724, "sequentialiterplugin": [18, 19], "sequentialplugin": [89, 90, 91, 92, 93, 1065, 1696, 1703], "sequeti": [89, 91, 92, 93, 1068, 1069], "seri": [550, 1030, 1122, 1279, 1513, 1704, 1710, 1724, 1727], "serif": 1523, "serv": [94, 385, 457, 786, 1696, 1716], "set": [0, 5, 10, 16, 18, 23, 42, 94, 95, 332, 346, 354, 434, 435, 443, 549, 551, 580, 618, 678, 1009, 1122, 1131, 1156, 1159, 1166, 1187, 1202, 1208, 1217, 1221, 1229, 1238, 1240, 1243, 1244, 1247, 1248, 1251, 1252, 1254, 1255, 1256, 1257, 1259, 1265, 1269, 1270, 1273, 1279, 1280, 1282, 1283, 1290, 1337, 1338, 1382, 1384, 1385, 1386, 1387, 1390, 1392, 1393, 1397, 1399, 1401, 1403, 1404, 1405, 1412, 1414, 1415, 1416, 1418, 1419, 1420, 1422, 1423, 1430, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1523, 1525, 1526, 1527, 1528, 1531, 1532, 1534, 1536, 1539, 1541, 1544, 1564, 1642, 1694, 1702, 1710, 1712, 1713, 1714, 1715, 1716, 1719, 1721, 1722, 1723, 1727, 1728, 1729], "set_": [1499, 1506], "set_adjust": [1122, 1240, 1290, 1436, 1441, 1449], "set_agg_filt": [1122, 1437], "set_alpha": [1122, 1438], "set_anchor": [1122, 1240, 1293, 1439, 1441], "set_anim": [1122, 1440], "set_aspect": [1122, 1240, 1248, 1290, 1293, 1301, 1390, 1418, 1436, 1439, 1441, 1449, 1467, 1512], "set_autoscale_on": [1122, 1442], "set_autoscalex_on": [1122, 1443], "set_autoscaley_on": [1122, 1444], "set_axes_loc": [1122, 1445], "set_axi": [1196, 1204, 1208, 1216, 1218, 1222], "set_axis_off": [1122, 1248, 1446, 1447], "set_axis_on": [1122, 1248, 1447], "set_axisbelow": [1122, 1300, 1382, 1448], "set_bad": 1430, "set_box_aspect": [1122, 1301, 1449], "set_children": [1131, 1156, 1166, 1187], "set_clip_box": [1122, 1450], "set_clip_on": [1122, 1451], "set_clip_path": [1122, 1452], "set_facecolor": [1122, 1453, 1454], "set_farm_nam": 486, "set_fc": [1122, 1454], "set_figur": [1122, 1455], "set_forward_navigation_ev": [1122, 1456, 1463], "set_frame_on": [1122, 1457], "set_gid": [1122, 1458], "set_in_layout": [1122, 1308, 1344, 1459], "set_label": [1122, 1460], "set_legend": [1122, 1461], "set_loc": [1208, 1217], "set_major_formatt": [1500, 1507], "set_mask": [1527, 1528], "set_mouseov": [1122, 1462], "set_navig": [1122, 1456, 1463], "set_navigate_mod": [1122, 1464], "set_ov": [1527, 1528], "set_par": [346, 354, 580], "set_param": [1196, 1205, 1218, 1401], "set_path_effect": [1122, 1465], "set_pick": [1122, 1326, 1416, 1417, 1466], "set_pmax": 1721, "set_posit": [1122, 1327, 1429, 1467], "set_prop_cycl": [1122, 1468], "set_radii_angl": [1122, 1469], "set_raster": [1122, 1471], "set_rasterization_zord": [1122, 1470], "set_rgrid": [1122, 1472, 1486], "set_rlabel_posit": [1122, 1473], "set_rlim": [1122, 1474], "set_rmax": [1122, 1475], "set_rmin": [1122, 1476], "set_rorigin": [1122, 1477], "set_rscal": [1122, 1478], "set_rtick": [1122, 1479], "set_sketch_param": [1122, 1480], "set_snap": [1122, 1338, 1481], "set_subplotspec": [1122, 1482], "set_theta_direct": [1122, 1483], "set_theta_offset": [1122, 1484, 1485], "set_theta_zero_loc": [1122, 1485], "set_thetagrid": [1122, 1472, 1486], "set_thetalim": [1122, 1487], "set_thetamax": [1122, 1488], "set_thetamin": [1122, 1489], "set_tick_param": [1472, 1486, 1499, 1506], "set_ticklabel": [1499, 1506], "set_titl": [1122, 1490, 1714, 1715, 1720], "set_transform": [1122, 1397, 1491], "set_und": [1527, 1528], "set_urelax": [10, 16, 1715], "set_url": [1122, 1390, 1492], "set_vis": [1122, 1493], "set_xbound": [1122, 1355, 1358, 1395, 1494, 1496], "set_xlabel": [1122, 1495, 1714, 1715, 1720, 1725], "set_xlim": [1122, 1244, 1247, 1248, 1279, 1355, 1358, 1395, 1494, 1496, 1720], "set_xmargin": [1122, 1360, 1497], "set_xscal": [1122, 1402, 1433, 1498], "set_xtick": [1122, 1499, 1500], "set_xticklabel": [1122, 1499], "set_yawm": 1729, "set_ybound": [1122, 1370, 1373, 1396, 1501, 1503], "set_ylabel": [1122, 1502, 1714, 1715, 1725], "set_ylim": [1122, 1248, 1251, 1279, 1370, 1373, 1396, 1474, 1501, 1503, 1720], "set_ymargin": [1122, 1375, 1504], "set_yscal": [1122, 1402, 1434, 1505], "set_ytick": [1122, 1506, 1507], "set_yticklabel": [1122, 1506], "set_zord": [1122, 1382, 1448, 1508], "setambfarmresult": [56, 57, 58, 59, 1694, 1715, 1724, 1726], "setambfarmresults_instance1": 1726, "setambpointresult": [60, 61, 62, 63, 64, 1694], "setattr": 1564, "setfarmvar": [678, 679, 680, 681, 682, 683, 684, 1702, 1710, 1713, 1720, 1721, 1729], "setfield": [105, 209, 230], "setflag": [105, 210, 230], "seti": 1720, "setuniformdata": [618, 619, 620, 621, 622, 1702, 1710], "setup": [1618, 1619, 1710, 1711, 1714, 1715, 1719, 1720, 1721, 1723, 1725, 1728, 1729], "sever": [1710, 1713], "shade": [1122, 1412, 1413, 1414, 1529], "shadow": [1399, 1418], "shaft": [1254, 1423], "shape": [5, 18, 19, 23, 38, 40, 44, 48, 54, 58, 62, 82, 87, 96, 103, 105, 211, 230, 319, 338, 343, 344, 348, 358, 365, 371, 372, 373, 374, 375, 376, 394, 395, 396, 398, 400, 407, 412, 413, 414, 415, 419, 426, 429, 430, 433, 434, 435, 436, 437, 441, 449, 453, 454, 455, 456, 457, 460, 467, 468, 470, 472, 473, 487, 489, 492, 497, 506, 513, 518, 522, 525, 530, 534, 543, 584, 592, 593, 598, 600, 606, 607, 612, 616, 617, 620, 624, 628, 631, 632, 633, 635, 639, 642, 646, 649, 650, 651, 653, 657, 663, 669, 675, 680, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 744, 748, 752, 756, 758, 760, 763, 767, 771, 772, 773, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 805, 806, 807, 811, 812, 815, 816, 817, 821, 822, 825, 826, 827, 833, 834, 836, 841, 843, 848, 850, 856, 858, 863, 864, 865, 870, 871, 872, 877, 883, 902, 905, 912, 913, 917, 923, 926, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000, 1010, 1040, 1041, 1042, 1051, 1084, 1089, 1157, 1158, 1161, 1181, 1182, 1183, 1194, 1241, 1255, 1257, 1277, 1279, 1386, 1387, 1390, 1412, 1413, 1414, 1419, 1423, 1430, 1480, 1513, 1517, 1520, 1562, 1563, 1568, 1569, 1570, 1571, 1578, 1579, 1580, 1581, 1582, 1583, 1585, 1586, 1587, 1588, 1590, 1592, 1593, 1594, 1595, 1596, 1597, 1600, 1601, 1602, 1603, 1608, 1609, 1610, 1611, 1614, 1615, 1616, 1633, 1637, 1638, 1639, 1640, 1641, 1704, 1710, 1713, 1714, 1715, 1720, 1724, 1725, 1729], "shapefil": [1634, 1704], "shapes_and_collect": [1418, 1513], "share": [1122, 1279, 1335, 1336, 1436, 1439, 1441, 1509, 1510, 1531, 1532], "sharei": [1122, 1510, 1714, 1715], "sharex": [1122, 1509, 1714, 1715], "shear": [762, 1553, 1677, 1702, 1704, 1706, 1710], "shearedprofil": [762, 763, 764, 1702, 1710], "sheet": [853, 1707], "shift": [1254, 1386], "short": [1208, 1212, 1468, 1710, 1716], "shortcut": [1390, 1419, 1468, 1512, 1527, 1528, 1692], "shorter": [1527, 1528], "shorthand": [1430, 1439], "should": [40, 44, 48, 54, 58, 62, 82, 87, 96, 333, 338, 348, 352, 358, 365, 388, 400, 407, 422, 441, 454, 490, 491, 492, 494, 500, 506, 509, 518, 519, 525, 534, 538, 546, 584, 620, 621, 624, 628, 653, 657, 658, 663, 669, 675, 681, 682, 687, 693, 696, 699, 704, 711, 716, 718, 724, 726, 731, 733, 738, 740, 771, 777, 783, 791, 798, 805, 984, 1122, 1128, 1131, 1149, 1150, 1156, 1166, 1176, 1187, 1192, 1207, 1223, 1228, 1246, 1249, 1250, 1253, 1254, 1255, 1257, 1259, 1263, 1265, 1273, 1277, 1280, 1282, 1283, 1307, 1351, 1366, 1383, 1412, 1414, 1420, 1422, 1430, 1490, 1499, 1500, 1506, 1507, 1511, 1514, 1517, 1518, 1520, 1523, 1539, 1543, 1637, 1642, 1712, 1715, 1717, 1721, 1722, 1723, 1727, 1728, 1729, 1730], "show": [1122, 1228, 1248, 1252, 1254, 1256, 1257, 1259, 1269, 1270, 1280, 1382, 1398, 1405, 1431, 1538, 1539, 1543, 1618, 1619, 1710, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729], "show_boundari": [1565, 1566, 1572, 1574, 1576, 1582, 1584, 1589, 1591, 1596, 1598, 1604, 1606], "show_plotly_fig": 1710, "show_rotor_dict": 1089, "showbox": [1257, 1259], "showcap": [1257, 1259], "showextrema": [1538, 1539], "showflier": [1257, 1259], "showmean": [1257, 1259, 1538, 1539], "showmedian": [1538, 1539], "shown": [1254, 1257, 1259, 1405, 1423, 1439, 1710, 1714, 1716, 1719], "shownotch": [1257, 1259], "shp": [1615, 1616, 1633, 1704], "shp2csv": [1633, 1704, 1710], "shp2geom2d": [1634, 1704], "shrink": 1239, "shrinka": 1239, "shrinkb": 1239, "shrunken": [1337, 1480], "shut": 1727, "si": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1724, 1726], "side": [105, 111, 230, 1035, 1238, 1255, 1265, 1273, 1282, 1283, 1386, 1398, 1403, 1415, 1422, 1511, 1528, 1538, 1539, 1710, 1714, 1724], "sigma": [820, 821, 874, 877, 914, 917, 920, 923, 1710, 1713], "sigma_y_far": [886, 897], "sigma_z_far": [886, 898], "sign": 1714, "signal": [1238, 1265, 1273, 1281, 1403, 1415, 1422, 1511, 1710, 1726], "signatur": [105, 135, 230, 253, 1196, 1199, 1218, 1220, 1228, 1230, 1239, 1248, 1254, 1284, 1385, 1402, 1412, 1413, 1414, 1419, 1423, 1433, 1434, 1468, 1487, 1517, 1518, 1527, 1528, 1529, 1530, 1543, 1625, 1627, 1628], "signedinteg": [116, 230, 235, 1697], "significantli": 1386, "silent": [2, 49, 63, 67, 72, 76, 99, 308, 309, 350, 351, 352, 383, 386, 388, 422, 476, 483, 485, 486, 487, 488, 489, 494, 500, 509, 511, 519, 526, 537, 538, 540, 546, 551, 552, 553, 562, 563, 564, 565, 566, 571, 613, 621, 640, 647, 658, 664, 670, 676, 682, 688, 718, 726, 733, 740, 787, 801, 808, 818, 828, 835, 842, 849, 857, 878, 884, 906, 918, 924, 925, 1005, 1018, 1019, 1054, 1055, 1072, 1073, 1074, 1075, 1076, 1077, 1517, 1614, 1618, 1619, 1633, 1642], "silverman": 1539, "similar": [845, 852, 1248, 1282, 1283, 1387, 1412, 1413, 1414, 1420, 1511, 1707, 1714, 1717], "similarli": [1718, 1721, 1729], "simpl": [473, 845, 852, 932, 937, 942, 947, 952, 958, 964, 970, 976, 982, 988, 994, 1000, 1239, 1243, 1423, 1513, 1519, 1710, 1717, 1721, 1725, 1729], "simpler": 1710, "simplest": [1239, 1722], "simpli": [581, 626, 1206, 1254, 1282, 1283, 1404, 1485, 1702, 1712, 1713, 1715, 1716, 1718, 1722, 1723, 1728], "simplifi": 1710, "simul": [18, 845, 852, 1696, 1710, 1711, 1713, 1716, 1724, 1731], "simultan": 1468, "sin": 1187, "sinc": [1257, 1390, 1420, 1512, 1710, 1719, 1721, 1722, 1726], "singl": [40, 44, 48, 54, 58, 62, 82, 87, 94, 96, 333, 338, 348, 358, 365, 400, 407, 441, 454, 489, 492, 506, 518, 523, 525, 534, 544, 584, 620, 624, 628, 630, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 771, 777, 783, 791, 798, 805, 1054, 1058, 1060, 1122, 1165, 1239, 1254, 1255, 1257, 1258, 1259, 1276, 1280, 1385, 1386, 1404, 1419, 1430, 1452, 1468, 1511, 1527, 1528, 1693, 1694, 1696, 1701, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1719, 1722, 1726], "singlestatest": [523, 524, 525, 526, 527, 528, 529, 530, 1701, 1710, 1714, 1715, 1725], "singular": [1196, 1202, 1218, 1221, 1386, 1412, 1414], "site": [1564, 1716], "situat": [1141, 1280, 1720], "size": [18, 35, 94, 101, 105, 155, 212, 230, 325, 335, 341, 414, 420, 425, 453, 490, 496, 498, 501, 503, 512, 514, 516, 521, 523, 528, 531, 541, 544, 547, 632, 788, 789, 920, 921, 1009, 1014, 1064, 1088, 1122, 1239, 1254, 1255, 1258, 1279, 1282, 1283, 1344, 1385, 1390, 1399, 1412, 1413, 1418, 1419, 1423, 1424, 1430, 1441, 1513, 1520, 1523, 1525, 1710, 1715, 1717, 1718, 1719, 1724, 1725, 1726, 1727], "sketch": [1122, 1337, 1480], "sketch_param": [1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1512, 1521, 1523], "skip": [1713, 1725, 1731], "slant": 1254, "slice": [325, 328, 344, 377, 427, 441, 503, 505, 511, 531, 533, 540, 650, 651, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 1036, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1418, 1419, 1420, 1422, 1512, 1564, 1703, 1710, 1713, 1722, 1725], "slicedata": [1036, 1037, 1038, 1039, 1040, 1041, 1042, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1703, 1710], "slight": [1414, 1419], "slightli": [1098, 1260, 1414, 1423, 1704, 1723], "slimmer": 1710, "slop": [1202, 1221], "slope": [1122, 1246, 1249, 1250, 1513], "slow": [1412, 1710, 1713, 1714], "slower": [1710, 1724], "slowest": 1413, "slurm": 1710, "small": [1140, 1254, 1401, 1402, 1423, 1433, 1434, 1523, 1710, 1715, 1716], "smaller": [1257, 1386, 1390, 1399, 1414, 1423, 1430, 1439, 1511], "smallest": [1254, 1570, 1580, 1587, 1594, 1602, 1610], "smallish": [1635, 1704], "smart": [1710, 1711], "smarter": 1160, "smdl": [51, 84, 102, 342, 355, 368, 390, 409, 529, 542, 586, 608, 614, 666, 672, 774, 809, 819, 829, 837, 844, 851, 859, 866, 873, 879, 885, 908, 919, 927], "smfp": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 385, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "smooth": [1414, 1635, 1715], "snap": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1338, 1382, 1385, 1392, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1481, 1512, 1521, 1523], "so": [660, 1131, 1135, 1166, 1187, 1217, 1228, 1239, 1254, 1255, 1279, 1280, 1306, 1382, 1386, 1390, 1392, 1393, 1418, 1423, 1431, 1432, 1449, 1481, 1487, 1496, 1500, 1503, 1507, 1512, 1527, 1528, 1543, 1562, 1710, 1713, 1714, 1715, 1721, 1724, 1725, 1726, 1731], "softwar": [1564, 1708, 1711, 1716], "solid": [1122, 1280, 1388, 1412, 1414, 1419, 1517, 1527, 1540], "solid_capstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "solid_joinstyl": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "solut": 1714, "solv": 1710, "solver": 1712, "some": [1016, 1032, 1033, 1034, 1122, 1140, 1162, 1184, 1202, 1208, 1210, 1217, 1221, 1248, 1277, 1282, 1283, 1385, 1390, 1413, 1423, 1466, 1500, 1507, 1518, 1561, 1704, 1710, 1713, 1715, 1721, 1724, 1729], "sometim": [1385, 1419, 1513], "somewher": [1424, 1721], "son": [1265, 1273, 1422], "sort": [105, 213, 230, 1277, 1511, 1564], "sourc": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 18, 19, 20, 21, 22, 23, 29, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 288, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 901, 902, 903, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1115, 1120, 1121, 1122, 1289, 1337, 1390, 1399, 1480, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1707, 1708, 1710, 1711, 1712, 1714, 1729], "source_ct": [721, 729, 735], "source_p": [721, 729, 735], "sourcefileload": 1564, "south": [1715, 1723], "southwest": 1439, "space": [1072, 1073, 1074, 1075, 1076, 1077, 1122, 1131, 1187, 1240, 1252, 1254, 1301, 1350, 1386, 1399, 1420, 1423, 1439, 1441, 1449, 1495, 1502, 1520, 1538, 1539, 1710], "span": [1122, 1218, 1246, 1247, 1250, 1251, 1257, 1259], "spare": 1562, "spars": [1512, 1710], "sparsiti": [1122, 1512], "spatial": [795, 1702, 1709, 1710, 1713, 1716, 1722, 1724], "spec": [1403, 1419, 1511, 1525], "specgram": [1122, 1238, 1403, 1415, 1422, 1511], "special": [1143, 1414, 1436, 1710], "specif": [0, 7, 10, 13, 18, 29, 39, 42, 46, 47, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 391, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1123, 1131, 1159, 1166, 1187, 1267, 1387, 1404, 1436, 1520, 1694, 1695, 1696, 1704, 1711], "specifi": [105, 110, 230, 370, 371, 372, 392, 394, 438, 465, 467, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 609, 612, 615, 674, 810, 813, 816, 820, 823, 830, 833, 838, 841, 845, 848, 852, 853, 856, 860, 867, 874, 880, 909, 914, 920, 1101, 1102, 1122, 1123, 1126, 1131, 1137, 1187, 1188, 1229, 1239, 1240, 1243, 1249, 1252, 1254, 1256, 1257, 1265, 1269, 1270, 1273, 1281, 1301, 1385, 1386, 1387, 1404, 1412, 1413, 1414, 1418, 1419, 1422, 1423, 1430, 1431, 1432, 1441, 1485, 1511, 1513, 1517, 1518, 1521, 1523, 1527, 1528, 1529, 1530, 1536, 1539, 1702, 1710, 1713, 1727], "spectral": [1122, 1265, 1273, 1403, 1422, 1511], "spectrogram": [1122, 1511], "spectrum": [1122, 1238, 1265, 1273, 1403, 1415, 1422, 1511], "speed": [420, 443, 446, 503, 516, 517, 523, 524, 660, 661, 690, 691, 706, 707, 708, 709, 710, 713, 714, 719, 721, 722, 727, 729, 730, 735, 736, 742, 746, 750, 754, 875, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1088, 1252, 1254, 1256, 1269, 1270, 1407, 1413, 1414, 1440, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1560, 1639, 1640, 1646, 1647, 1648, 1653, 1673, 1674, 1675, 1683, 1701, 1702, 1705, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1723, 1725, 1727, 1728, 1729], "spike": 1280, "spine": [1248, 1344, 1350, 1446], "spline16": 1390, "spline36": 1390, "split": 1511, "spmatrix": 1512, "spy": [1122, 1512], "sqrt": [623, 1385, 1386, 1423, 1635, 1702, 1704, 1710], "sqrt_reg": [1635, 1704], "squar": [488, 1241, 1248, 1279, 1286, 1390, 1418, 1419, 1441, 1512, 1513, 1614, 1701, 1704, 1713, 1718], "squeez": [105, 214, 230], "src": 1562, "st_sel": [440, 441, 443, 472, 650, 651, 653, 655, 657, 660, 663, 667, 669, 673, 675, 678, 681, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 721, 724, 729, 731, 735, 738, 811, 812, 815, 821, 822, 825, 827, 863, 870, 877, 883, 886, 899, 912, 917, 923, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999], "stabl": [746, 754, 1554, 1555, 1556, 1557, 1702, 1704, 1712, 1715], "stack": [1122, 1253, 1255, 1386, 1513], "stackplot": [1122, 1513], "stair": [1122, 1386, 1514, 1518], "stale": [1122, 1515], "stamp": [550, 1719, 1724], "stand": 1539, "standard": [116, 235, 1016, 1026, 1122, 1254, 1269, 1270, 1281, 1386, 1412, 1414, 1518, 1538, 1539, 1710, 1713, 1725], "star": 1419, "start": [39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 177, 230, 332, 334, 335, 336, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 480, 483, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 769, 770, 802, 803, 1058, 1060, 1090, 1091, 1122, 1130, 1140, 1159, 1239, 1241, 1254, 1279, 1418, 1423, 1516, 1520, 1564, 1635, 1704, 1710, 1713, 1714, 1716, 1720, 1721, 1725, 1729, 1730], "start0": [1058, 1060], "start_pan": [1122, 1516], "start_point": 1520, "start_tim": 550, "startangl": 1418, "stat": [1259, 1538], "state": [0, 2, 3, 4, 5, 8, 10, 12, 18, 19, 22, 23, 52, 94, 95, 98, 101, 103, 286, 287, 288, 289, 290, 291, 308, 309, 319, 325, 329, 331, 335, 336, 339, 341, 343, 344, 377, 410, 412, 414, 420, 421, 422, 423, 424, 425, 426, 427, 434, 435, 436, 437, 441, 457, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 561, 563, 618, 619, 630, 632, 650, 651, 653, 657, 663, 669, 675, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 786, 795, 811, 812, 815, 821, 822, 825, 827, 863, 870, 877, 883, 905, 912, 917, 923, 1007, 1008, 1009, 1016, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1051, 1054, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1085, 1089, 1122, 1131, 1144, 1166, 1171, 1187, 1243, 1515, 1669, 1682, 1693, 1694, 1696, 1697, 1698, 1702, 1703, 1706, 1710, 1711, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "state_coord": [498, 499], "state_source_orderi": [288, 1697], "state_target": [289, 385, 457, 786, 1697], "state_target_tpoint": [290, 385, 457, 786, 1697], "state_turbin": [291, 385, 457, 1697], "state_turbine_t": 1054, "states0": [18, 457, 786], "states_coord": [490, 491, 1717], "states_i0": [18, 36, 325, 331, 344, 377, 427], "states_indic": [0, 10, 18, 308, 319], "states_isel": [1072, 1073, 1074, 1075, 1076, 1077], "states_loc": [498, 501, 503, 505, 511, 514, 531, 533, 540, 544, 547, 1719], "states_mean": [1049, 1051], "states_op": [1016, 1032], "states_sel": [287, 434, 436, 437, 498, 501, 503, 505, 511, 514, 531, 533, 540, 544, 547, 1072, 1073, 1074, 1075, 1076, 1077, 1697, 1719, 1724], "states_source_turbin": 453, "states_turbin": [414, 632], "states_typ": [94, 335, 420, 423, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547], "statesroseplotoutput": [1084, 1085, 1703, 1710, 1716, 1719, 1723, 1727, 1728], "statest": [531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 1701, 1713, 1716, 1720, 1721, 1723, 1728, 1729], "stateturbinemap": [1078, 1079, 1080, 1703, 1710, 1721], "stateturbinet": [1081, 1082, 1083, 1703, 1710], "static": [479, 707, 709, 713, 714, 721, 722, 729, 730, 735, 736, 1090, 1092, 1093, 1122, 1208, 1210, 1289, 1572, 1573, 1692, 1699, 1704, 1710, 1711, 1713, 1715, 1717, 1719, 1723, 1724, 1725, 1726, 1727, 1728], "staticdata": [479, 480, 1699, 1716, 1719], "staticmethod": 1564, "statist": [94, 103, 335, 343, 420, 426, 490, 497, 498, 501, 503, 513, 514, 516, 522, 523, 530, 531, 543, 544, 547, 1122, 1255, 1257, 1259, 1279, 1538, 1539, 1682, 1706, 1716, 1728], "statu": [1122, 1306, 1324, 1464, 1727], "std": [105, 215, 230], "steadi": 1713, "steer": 1711, "stem": [1122, 1241, 1517, 1713], "stemcontain": 1517, "stemlin": 1517, "step": [18, 21, 35, 105, 216, 230, 453, 487, 489, 550, 636, 637, 643, 644, 706, 708, 713, 719, 721, 727, 788, 789, 920, 921, 1030, 1088, 1122, 1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1386, 1403, 1415, 1419, 1420, 1422, 1512, 1514, 1518, 1710, 1713, 1715, 1716, 1717, 1718, 1719, 1724, 1726, 1728, 1731], "step_vector": [487, 1701, 1715, 1717, 1724, 1726, 1728], "stepfil": 1386, "steppatch": 1514, "stepwis": [1122, 1514], "sticht": 1564, "stick": 1519, "sticki": [1122, 1404, 1519], "sticky_edg": [1122, 1519, 1536], "still": [1418, 1448], "stochast": [1122, 1704], "stoevesandt": 1708, "stone": 1386, "stop": 1130, "stopasynciter": 1564, "stopiter": 1564, "storag": [853, 858, 1714], "store": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 311, 321, 323, 326, 332, 335, 346, 347, 352, 356, 362, 369, 370, 379, 382, 384, 388, 392, 399, 404, 410, 412, 420, 422, 429, 430, 438, 440, 443, 448, 452, 459, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 902, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1101, 1104, 1131, 1144, 1166, 1171, 1187, 1418, 1713, 1714, 1715, 1718], "store_amb_r": 412, "store_cr": [1101, 1104], "store_model_data": [0, 10, 18, 308, 321], "store_rpoint": 412, "store_rweight": 412, "str": [2, 4, 5, 7, 13, 16, 18, 19, 22, 23, 29, 40, 41, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 70, 74, 75, 82, 83, 87, 88, 96, 100, 105, 156, 230, 272, 285, 318, 325, 326, 327, 328, 333, 334, 338, 340, 345, 346, 348, 353, 354, 358, 360, 361, 365, 367, 374, 378, 379, 382, 384, 385, 391, 397, 400, 402, 403, 407, 408, 410, 411, 412, 417, 418, 423, 424, 428, 429, 430, 433, 434, 435, 441, 442, 443, 444, 446, 447, 450, 451, 453, 457, 458, 459, 460, 461, 463, 468, 469, 472, 473, 474, 475, 478, 481, 482, 483, 484, 485, 486, 487, 489, 490, 491, 492, 495, 498, 499, 502, 503, 505, 506, 510, 518, 520, 523, 524, 525, 527, 531, 533, 534, 539, 542, 545, 549, 550, 551, 552, 553, 563, 565, 566, 567, 569, 570, 572, 573, 584, 585, 618, 619, 620, 622, 624, 625, 626, 627, 628, 629, 632, 637, 644, 650, 651, 653, 654, 655, 656, 657, 659, 660, 661, 663, 665, 669, 671, 673, 674, 675, 677, 678, 680, 681, 683, 685, 686, 687, 689, 690, 691, 693, 694, 696, 697, 699, 700, 701, 702, 704, 705, 707, 709, 711, 712, 713, 714, 716, 719, 720, 721, 722, 724, 727, 728, 729, 730, 731, 734, 735, 736, 738, 741, 745, 749, 753, 757, 759, 761, 764, 768, 775, 776, 786, 803, 811, 812, 813, 814, 815, 817, 822, 823, 824, 825, 827, 830, 831, 834, 838, 839, 845, 846, 853, 854, 858, 861, 863, 868, 870, 874, 875, 880, 881, 883, 886, 901, 904, 910, 912, 914, 915, 920, 921, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 951, 952, 953, 957, 958, 959, 963, 964, 965, 969, 970, 971, 975, 976, 977, 981, 982, 983, 987, 988, 989, 993, 994, 995, 999, 1000, 1001, 1009, 1012, 1013, 1014, 1015, 1021, 1022, 1025, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1048, 1051, 1054, 1055, 1058, 1059, 1060, 1061, 1064, 1065, 1066, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1100, 1107, 1108, 1110, 1111, 1112, 1113, 1114, 1115, 1120, 1121, 1122, 1123, 1126, 1131, 1139, 1166, 1170, 1187, 1189, 1227, 1228, 1238, 1239, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1274, 1277, 1279, 1280, 1282, 1283, 1345, 1362, 1377, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1394, 1399, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1435, 1439, 1441, 1458, 1460, 1468, 1472, 1485, 1486, 1490, 1492, 1495, 1499, 1500, 1502, 1506, 1507, 1512, 1513, 1517, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1540, 1541, 1543, 1544, 1548, 1564, 1566, 1576, 1584, 1591, 1598, 1606, 1612, 1613, 1615, 1616, 1617, 1618, 1619, 1633, 1634, 1642, 1697, 1710, 1718], "straight": [1122, 1249, 1390, 1419, 1713, 1715], "strang": 1203, "strategi": 1386, "stratif": [549, 551], "streaklin": 1713, "stream": 1713, "streamgraph": [1122, 1513], "streamlin": [788, 789, 793, 920, 1122, 1520, 1702, 1707, 1710, 1713, 1717], "streamlines2d": [788, 789, 790, 791, 792, 793, 794, 1702, 1710, 1718], "streamlines_": [1713, 1718], "streamlines_100": 1717, "streamplot": [1122, 1520], "streamplotset": 1520, "stretch": [1280, 1390, 1523], "strictli": [1196, 1520], "stride": [105, 216, 230], "string": [459, 463, 490, 491, 573, 1046, 1060, 1107, 1109, 1122, 1208, 1211, 1212, 1228, 1238, 1239, 1246, 1248, 1249, 1250, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1285, 1286, 1306, 1345, 1357, 1372, 1382, 1385, 1386, 1387, 1388, 1390, 1399, 1403, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1460, 1472, 1486, 1499, 1506, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1525, 1527, 1528, 1539, 1540, 1543, 1547, 1549, 1564, 1704, 1710, 1713, 1718], "stroke": [1412, 1430], "strongest": 1714, "struct": [105, 113, 230], "structur": [94, 729, 735, 1419, 1564, 1696, 1710, 1713, 1719, 1727], "stsel": [650, 651], "stuart": 1257, "studi": [802, 880, 886, 1711], "sturg": 1386, "style": [1122, 1228, 1238, 1239, 1244, 1246, 1249, 1250, 1253, 1255, 1257, 1259, 1265, 1273, 1277, 1279, 1280, 1382, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1430, 1468, 1512, 1513, 1517, 1518, 1520, 1523, 1525, 1526, 1543, 1710], "sub": [0, 10, 18, 39, 42, 46, 51, 52, 56, 60, 80, 84, 85, 94, 102, 308, 323, 332, 335, 342, 346, 355, 356, 362, 368, 369, 370, 379, 390, 392, 399, 404, 409, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 529, 531, 542, 544, 547, 574, 577, 580, 581, 586, 587, 589, 590, 594, 599, 601, 603, 608, 609, 614, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 666, 667, 672, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 774, 775, 780, 788, 795, 802, 809, 810, 813, 819, 820, 823, 829, 830, 837, 838, 844, 845, 851, 852, 853, 859, 860, 866, 867, 873, 874, 879, 880, 885, 886, 908, 909, 914, 919, 920, 927, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1131, 1141, 1142, 1166, 1187, 1402, 1433, 1434, 1710, 1713], "sub_model": [0, 10, 18, 39, 42, 46, 51, 52, 56, 60, 80, 84, 85, 94, 102, 308, 323, 332, 335, 342, 346, 355, 356, 362, 368, 369, 370, 379, 390, 392, 399, 404, 409, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 529, 531, 542, 544, 547, 574, 577, 580, 581, 586, 587, 589, 590, 594, 599, 601, 603, 608, 609, 614, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 666, 667, 672, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 774, 775, 780, 788, 795, 802, 809, 810, 813, 819, 820, 823, 829, 830, 837, 838, 844, 845, 851, 852, 853, 859, 860, 866, 867, 873, 874, 879, 880, 885, 886, 908, 909, 914, 919, 920, 927, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1710], "subclass": [1122, 1131, 1138, 1148, 1154, 1166, 1175, 1178, 1179, 1187, 1191, 1193, 1207, 1223, 1225, 1239, 1267, 1275, 1284, 1286, 1306, 1344, 1385, 1387, 1390, 1394, 1412, 1413, 1414, 1430, 1431, 1432, 1527, 1528], "subfigur": 1239, "subject": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 352, 356, 362, 369, 370, 379, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 448, 452, 459, 465, 471, 490, 494, 498, 500, 501, 503, 509, 514, 516, 519, 523, 531, 538, 544, 546, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 621, 623, 626, 630, 636, 643, 650, 655, 658, 660, 667, 673, 678, 682, 685, 690, 695, 698, 701, 706, 708, 710, 713, 718, 721, 726, 729, 733, 735, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "sublist": [1122, 1123, 1126], "subplot": [1080, 1088, 1122, 1315, 1339, 1394, 1398, 1401, 1482, 1714, 1715, 1716, 1720, 1721, 1724, 1725, 1726, 1727, 1728], "subplots_adjust": 1714, "subplots_axes_and_figur": [1431, 1432], "subplotspec": [1122, 1339, 1435, 1482], "subsequ": [729, 735, 1715, 1724], "subset": [325, 326, 334, 369, 429, 430, 491, 503, 505, 511, 531, 533, 540, 567, 573, 1263, 1279, 1698, 1702, 1710, 1718], "substr": 1521, "subtitl": 1716, "subtract": [626, 1187, 1188, 1702, 1713], "success": [1110, 1511], "suffix": [485, 490, 491], "suitabl": [230, 243, 1249, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528], "sum": [105, 217, 230, 1009, 1016, 1022, 1027, 1029, 1032, 1033, 1034, 1035, 1277, 1385, 1386, 1390, 1418, 1513, 1564, 1710, 1727], "sum_n": 1543, "summar": [1423, 1710], "summari": 1725, "super": 1564, "superp": 813, "superp_to_amb": [928, 929, 933, 934, 938, 939, 943, 944, 1718], "superpos": [830, 838, 845, 852], "superposit": [471, 567, 810, 813, 814, 820, 823, 824, 830, 838, 845, 852, 860, 861, 867, 868, 874, 875, 880, 881, 909, 910, 914, 915, 920, 921, 928, 933, 938, 943, 1698, 1702, 1710, 1713, 1718, 1728], "superpositon": 1718, "supersposit": [948, 954, 960, 966, 972, 978, 984, 990, 996, 1702], "suppli": [1382, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1431, 1432, 1466, 1527, 1528], "support": [18, 1101, 1115, 1122, 1130, 1196, 1205, 1218, 1239, 1253, 1254, 1258, 1260, 1261, 1269, 1270, 1281, 1292, 1386, 1390, 1399, 1401, 1402, 1413, 1414, 1419, 1423, 1426, 1427, 1433, 1434, 1435, 1438, 1452, 1470, 1471, 1474, 1481, 1495, 1498, 1502, 1505, 1511, 1512, 1564, 1696, 1704, 1710, 1711, 1712], "suppos": [1496, 1503], "suppress": [1419, 1446], "sure": [1636, 1712], "surfac": 1503, "surpris": [1500, 1507], "surround": 1412, "svensson": 914, "svg": [1390, 1413], "sw": [459, 460, 1435, 1439, 1441, 1485], "swapax": [105, 218, 230], "sweep": [1693, 1694], "swept": [1241, 1423], "switch": [4, 5, 22, 23, 412, 1037, 1038, 1039, 1040, 1041, 1042, 1089, 1710, 1715, 1722, 1723], "sym": [1122, 1257, 1513], "symbol": [1122, 1208, 1210, 1257, 1279, 1423], "symlog": [1385, 1387, 1390, 1412, 1413, 1414, 1430, 1498, 1505, 1527, 1528], "symmetr": [1255, 1279, 1487, 1513, 1713], "symmetri": 1713, "symmetricallogscal": [1498, 1505], "synonym": 1423, "syntax": 1419, "syntaxerror": 1564, "syntaxwarn": 1564, "system": [1131, 1156, 1166, 1187, 1239, 1424, 1523, 1710, 1712, 1713, 1716, 1725, 1727], "systemerror": 1564, "systemexit": 1564, "t": [105, 106, 230, 385, 483, 690, 691, 780, 781, 795, 796, 1035, 1115, 1117, 1122, 1124, 1140, 1255, 1390, 1430, 1491, 1511, 1529, 1678, 1690, 1691, 1706, 1710, 1714, 1715, 1718, 1722, 1724, 1726], "t0": [1715, 1716, 1721, 1723, 1724, 1725, 1727, 1729], "t1": [1715, 1716, 1721, 1723, 1724, 1725, 1727, 1729], "t2": [1715, 1716, 1721, 1724, 1725, 1727], "t3": [1715, 1716, 1721, 1724, 1725, 1727], "t4": [1716, 1721, 1724, 1725], "t45": 1715, "t46": 1715, "t47": 1715, "t5": [1716, 1724], "t6": [1716, 1724], "t7": 1724, "t8": 1724, "tab": [544, 545, 1122, 1237, 1617, 1701, 1704, 1710, 1716], "tab_fil": 1710, "taberror": 1564, "tabl": [655, 656, 685, 1081, 1083, 1122, 1237, 1252, 1256, 1269, 1270, 1423, 1521, 1522, 1702, 1703, 1710, 1713, 1721, 1723], "tablefactor": [685, 686, 687, 688, 689, 1702, 1710], "tabstat": [544, 545, 546, 1701, 1710], "tabwindroseax": [1060, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1704, 1710], "tail": [1241, 1423, 1424], "take": [105, 219, 230, 314, 315, 427, 433, 938, 939, 972, 973, 978, 979, 1051, 1072, 1073, 1074, 1131, 1137, 1187, 1188, 1238, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1386, 1392, 1403, 1412, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1435, 1437, 1487, 1511, 1512, 1514, 1521, 1523, 1527, 1529, 1539, 1710, 1713], "taken": [503, 1277, 1385, 1412, 1424, 1527, 1528, 1713, 1725], "talli": 1387, "target": [0, 10, 18, 39, 42, 46, 48, 52, 56, 60, 80, 85, 94, 96, 104, 289, 290, 292, 293, 298, 299, 302, 308, 323, 332, 335, 338, 346, 356, 362, 369, 370, 371, 372, 373, 374, 375, 376, 379, 385, 392, 394, 395, 396, 398, 399, 400, 401, 404, 407, 410, 414, 420, 427, 430, 431, 432, 433, 438, 440, 443, 446, 448, 449, 452, 456, 457, 459, 460, 465, 467, 468, 470, 471, 472, 473, 490, 492, 498, 501, 503, 506, 514, 516, 518, 523, 525, 531, 534, 544, 547, 574, 577, 580, 581, 587, 589, 590, 592, 593, 594, 598, 599, 600, 601, 603, 606, 607, 609, 612, 615, 616, 617, 618, 620, 623, 624, 626, 628, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 719, 721, 727, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 773, 775, 779, 780, 785, 786, 788, 794, 795, 800, 802, 807, 810, 811, 812, 813, 815, 816, 817, 820, 821, 822, 823, 825, 826, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 880, 883, 902, 909, 912, 913, 914, 917, 920, 923, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 954, 957, 958, 960, 963, 964, 966, 969, 970, 972, 975, 976, 978, 981, 982, 984, 987, 988, 990, 993, 994, 996, 999, 1000, 1697, 1698, 1710, 1713, 1715, 1723, 1726], "target_point": [298, 299, 1697], "target_var": [673, 674, 1723], "task": [1196, 1720], "tcp": 1727, "tdata": [18, 37, 46, 48, 60, 94, 96, 335, 338, 370, 371, 372, 373, 375, 376, 385, 392, 394, 395, 398, 399, 400, 401, 404, 407, 410, 414, 420, 427, 428, 429, 430, 431, 432, 433, 438, 448, 449, 452, 456, 457, 465, 467, 470, 471, 472, 490, 492, 498, 501, 503, 506, 514, 516, 518, 523, 525, 531, 534, 544, 547, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 618, 620, 623, 624, 626, 628, 636, 643, 769, 773, 775, 779, 780, 785, 786, 788, 794, 795, 800, 802, 807, 810, 811, 812, 813, 815, 816, 820, 821, 822, 823, 825, 826, 827, 830, 833, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 863, 864, 865, 867, 870, 871, 872, 874, 877, 880, 883, 886, 902, 909, 912, 913, 914, 917, 920, 923, 926, 928, 931, 933, 936, 938, 941, 943, 946, 948, 951, 954, 957, 960, 963, 966, 969, 972, 975, 978, 981, 984, 987, 990, 993, 996, 999, 1698, 1710], "techinc": 830, "technic": [1254, 1257, 1259, 1419, 1452], "temperatur": [1650, 1678, 1706], "templat": [1107, 1108, 1110, 1111, 1112, 1113, 1548, 1710, 1713, 1718, 1722], "temporari": [1150, 1176, 1192], "term": [1131, 1140, 1166, 1187, 1710, 1713, 1714], "termin": 1520, "terminologi": [1716, 1725, 1731], "terra": [301, 1697], "terribl": 1423, "test": [393, 597, 611, 769, 1107, 1110, 1122, 1267, 1466, 1565, 1571, 1572, 1574, 1581, 1582, 1588, 1589, 1595, 1596, 1603, 1604, 1611, 1710, 1711, 1716], "test_farm_67": 1727, "text": [1059, 1122, 1239, 1253, 1345, 1352, 1353, 1357, 1359, 1361, 1363, 1367, 1368, 1372, 1374, 1376, 1378, 1399, 1418, 1424, 1430, 1472, 1486, 1490, 1495, 1499, 1500, 1502, 1506, 1507, 1521, 1523, 1524, 1564], "text_align": 1523, "text_labels_and_annot": 1523, "textcoord": 1239, "textprop": 1418, "th": [1037, 1038, 1039, 1040, 1041, 1042, 1710], "than": [984, 1140, 1196, 1203, 1218, 1241, 1257, 1280, 1358, 1373, 1386, 1387, 1390, 1404, 1412, 1414, 1423, 1430, 1431, 1432, 1435, 1439, 1487, 1496, 1497, 1503, 1504, 1511, 1527, 1528, 1710, 1713, 1714, 1724, 1727], "thank": [1564, 1710], "thei": [328, 332, 412, 434, 435, 452, 858, 1228, 1244, 1254, 1257, 1273, 1277, 1279, 1282, 1283, 1306, 1402, 1404, 1412, 1414, 1419, 1423, 1430, 1433, 1434, 1470, 1496, 1503, 1520, 1527, 1528, 1543, 1617, 1702, 1707, 1710, 1713, 1716, 1717, 1718, 1720, 1727], "them": [328, 1248, 1257, 1259, 1277, 1407, 1419, 1519, 1525, 1562, 1717, 1728], "themeriv": 1513, "theoret": [802, 880, 886], "theori": [574, 1702], "therefor": [1141, 1382, 1527, 1528], "thereof": [1254, 1258, 1282, 1283, 1385, 1412, 1414, 1423], "theta": [1122, 1131, 1187, 1208, 1218, 1224, 1239, 1285, 1330, 1340, 1342, 1343, 1473, 1483, 1485, 1486, 1487, 1488, 1489], "theta_direct": 1435, "theta_label": 1224, "theta_offset": 1435, "theta_zero_loc": 1435, "thetaformatt": [1122, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1486], "thetagrid": 1435, "thetalim": 1435, "thetaloc": [1122, 1218, 1219, 1220, 1221, 1222, 1223], "thetamax": [1122, 1435, 1487, 1488], "thetamin": [1122, 1435, 1487, 1489], "thi": [18, 39, 40, 44, 46, 48, 54, 56, 58, 60, 62, 80, 82, 87, 96, 333, 334, 338, 348, 356, 357, 358, 361, 365, 400, 403, 407, 412, 414, 439, 441, 454, 466, 479, 492, 506, 518, 525, 534, 566, 584, 620, 624, 626, 628, 632, 653, 657, 660, 663, 669, 675, 679, 681, 687, 693, 696, 699, 704, 711, 716, 724, 731, 738, 754, 769, 771, 777, 783, 791, 798, 805, 881, 984, 1016, 1043, 1072, 1073, 1074, 1075, 1076, 1077, 1115, 1122, 1123, 1126, 1128, 1131, 1136, 1137, 1138, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1202, 1203, 1205, 1207, 1208, 1210, 1217, 1218, 1221, 1223, 1225, 1228, 1230, 1231, 1238, 1239, 1240, 1241, 1243, 1244, 1248, 1249, 1252, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1265, 1269, 1270, 1273, 1274, 1275, 1277, 1278, 1279, 1280, 1282, 1283, 1284, 1286, 1287, 1288, 1295, 1302, 1306, 1307, 1312, 1318, 1322, 1346, 1350, 1351, 1352, 1353, 1354, 1366, 1367, 1368, 1369, 1382, 1383, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1397, 1399, 1402, 1403, 1405, 1408, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1431, 1432, 1433, 1434, 1440, 1441, 1446, 1447, 1448, 1449, 1452, 1456, 1462, 1464, 1466, 1468, 1470, 1471, 1472, 1474, 1480, 1485, 1486, 1494, 1495, 1497, 1499, 1501, 1502, 1504, 1506, 1509, 1510, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1536, 1538, 1539, 1540, 1543, 1562, 1582, 1589, 1596, 1694, 1695, 1696, 1699, 1701, 1702, 1704, 1710, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731], "thick": [1246, 1249, 1250, 1279], "thin": [1402, 1433, 1434, 1518], "thin_diamond": 1419, "third": [1257, 1259, 1419, 1648, 1675, 1706, 1710], "those": [1254, 1257, 1412, 1414, 1419, 1430, 1511, 1518, 1531, 1532, 1713], "though": [1273, 1422, 1448, 1714, 1729], "thought": [1277, 1721], "thousand": 1564, "thread": [1619, 1727], "threads_per_work": 1619, "three": [1243, 1259, 1345, 1390, 1401, 1490, 1529, 1710, 1713, 1716, 1729], "threshold": [660, 661, 1070, 1071, 1122, 1470], "through": [577, 1228, 1249, 1253, 1418, 1513, 1517, 1543, 1702, 1710, 1711, 1722], "throw": [328, 385], "thrust": [690, 691, 1644, 1658, 1702, 1706, 1710, 1711, 1713, 1715, 1721, 1729], "thrust2ct": [690, 691, 692, 693, 694, 1702, 1710, 1718], "thrust_var": [690, 691, 1718], "thu": [1249, 1390, 1414], "ti": [0, 1, 10, 18, 459, 460, 461, 464, 516, 517, 523, 524, 623, 701, 702, 735, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 920, 921, 928, 933, 938, 943, 1088, 1115, 1117, 1663, 1664, 1679, 1690, 1691, 1702, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "ti_cub": 1718, "ti_linear": [1713, 1718], "ti_max": 1718, "ti_quadrat": [1710, 1713, 1718], "ti_quart": 1718, "ti_val": [701, 702], "ti_var": [459, 461, 701, 702, 1718], "tick": [1122, 1196, 1198, 1203, 1206, 1208, 1209, 1212, 1213, 1217, 1218, 1219, 1248, 1255, 1257, 1259, 1300, 1350, 1354, 1359, 1361, 1363, 1364, 1365, 1369, 1374, 1376, 1378, 1379, 1380, 1398, 1401, 1402, 1404, 1405, 1406, 1407, 1420, 1425, 1446, 1448, 1472, 1486, 1495, 1499, 1500, 1502, 1506, 1507, 1525, 1526, 1531, 1532, 1541, 1544], "tick1": [1354, 1369], "tick2": [1354, 1369], "tick_label": [1255, 1257], "tick_param": [1122, 1500, 1507, 1525], "tick_valu": [1196, 1206, 1218], "ticker": [1122, 1196, 1208, 1218, 1401, 1420, 1472, 1486, 1499, 1500, 1506, 1507, 1527, 1528, 1531, 1532], "ticklabel": [1350, 1363, 1378, 1499, 1506], "ticklabel_format": [1122, 1526], "tight": [1122, 1243, 1244, 1248, 1317, 1344, 1401, 1404, 1459], "tight_layout": [1122, 1317, 1459, 1715], "tightbbox": 1344, "tilinear": [928, 929, 930, 931, 932, 1702, 1718], "timax": [933, 934, 935, 936, 937, 1702, 1718], "time": [0, 10, 18, 94, 294, 308, 318, 335, 392, 397, 410, 417, 420, 423, 438, 440, 442, 443, 447, 448, 451, 452, 458, 465, 469, 490, 491, 498, 501, 502, 503, 514, 516, 523, 531, 544, 547, 550, 594, 599, 601, 603, 609, 615, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920, 1007, 1016, 1030, 1036, 1043, 1046, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1122, 1131, 1149, 1166, 1187, 1238, 1257, 1265, 1273, 1277, 1280, 1281, 1390, 1403, 1404, 1415, 1419, 1420, 1422, 1423, 1441, 1497, 1504, 1511, 1697, 1704, 1710, 1712, 1713, 1716, 1717, 1718, 1719, 1721, 1724, 1726, 1727, 1728], "time_coord": [501, 502, 1719], "time_format": [490, 491, 1717], "timedelta": 1255, "timelin": [795, 796, 797, 798, 799, 800, 801, 1702, 1710, 1713, 1718, 1726], "timelines_": [1713, 1718], "timelines_10": 1726, "timeouterror": 1564, "timepandasindexpandasindex": 1719, "timeseri": [501, 514, 547, 548, 550, 780, 781, 795, 796, 1030, 1701, 1702, 1709, 1710, 1711, 1719, 1724, 1726], "timeseries_100": [1710, 1726], "timeseries_3000": 1724, "timeseries_8000": 1727, "timeseries_data": [1724, 1726], "timeseries_slurm": 1710, "timeseries_var": [1724, 1726], "timestep": 1710, "timezon": [1420, 1541, 1544], "tip": [643, 1254, 1255, 1423, 1702], "tipow": [938, 939, 940, 941, 942, 1702, 1718], "tiquadrat": [943, 944, 945, 946, 947, 1702, 1710, 1718], "titl": [1009, 1037, 1038, 1039, 1040, 1041, 1042, 1059, 1060, 1062, 1064, 1078, 1080, 1086, 1088, 1089, 1122, 1344, 1345, 1435, 1490, 1708, 1710, 1714, 1715, 1716, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728], "titlecolor": 1490, "titlei": 1490, "titleloc": 1490, "titlepad": 1490, "titles": [1490, 1499, 1506], "titleweight": [1490, 1499, 1506], "tke": [623, 1702, 1710, 1716, 1719], "tke2ti": [623, 624, 625, 1702, 1710, 1713, 1718], "tldr": 1711, "tmodel": [295, 1697, 1715, 1724, 1726], "tmodel_sel": [296, 1697, 1715, 1724, 1726], "tmodel_typ": [440, 442, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701], "tmp": [1714, 1715], "tname": [297, 1697, 1715, 1723, 1724, 1725], "to_csv": [551, 1633], "to_datafram": [1717, 1719, 1721, 1725, 1726, 1727, 1729], "to_fil": [1051, 1072, 1073, 1074, 1075, 1076, 1077, 1081, 1083], "to_netcdf": 1642, "to_numpi": 1720, "to_utm": 1616, "to_valu": [1166, 1180], "tobyt": [105, 220, 230], "toc": [479, 1090, 1097, 1716], "tofil": [105, 221, 230], "togeth": [362, 404, 1131, 1135, 1143, 1166, 1187, 1277, 1385, 1387, 1390, 1412, 1413, 1414, 1430, 1527, 1528, 1719, 1729], "toggl": [1122, 1243, 1382], "toler": 1466, "tolist": [105, 222, 230], "too": 1520, "tool": [1634, 1724, 1727], "toolbar": [1122, 1324, 1463, 1464], "toolcursorposit": 1462, "top": [308, 609, 823, 1122, 1238, 1239, 1246, 1249, 1250, 1254, 1255, 1265, 1273, 1277, 1279, 1352, 1353, 1367, 1368, 1373, 1382, 1386, 1390, 1398, 1403, 1405, 1415, 1419, 1420, 1422, 1431, 1432, 1435, 1439, 1474, 1490, 1502, 1503, 1512, 1513, 1523, 1525, 1528, 1531, 1532, 1538, 1539, 1542, 1545, 1692, 1700, 1702, 1707, 1713, 1715, 1720, 1729], "top_hat": [1713, 1718, 1720], "top_lim": 1503, "tophatwakemodel": [823, 824, 825, 826, 827, 828, 829, 860, 867, 909, 1707, 1713], "torben": 577, "tostr": [105, 223, 230], "total": [18, 35, 94, 101, 335, 341, 420, 425, 471, 477, 490, 496, 498, 501, 503, 512, 514, 516, 521, 523, 528, 531, 541, 544, 547, 1007, 1016, 1024, 1036, 1043, 1045, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1239, 1241, 1280, 1386, 1710], "toward": [1254, 1386], "tpoint": [290, 298, 299, 427, 430, 1697], "tpoint_mean": [427, 433], "tpoint_weight": [302, 1697], "trace": [105, 224, 230, 1726], "tracker": 1711, "tradit": 1386, "tradition": 1254, "trajectori": 1726, "tran": 1142, "transax": [1249, 1392, 1394, 1450, 1523], "transdata": [1142, 1229, 1394], "transfer": [1710, 1729], "transform": [1122, 1131, 1135, 1136, 1137, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1153, 1154, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1169, 1171, 1172, 1173, 1174, 1175, 1176, 1179, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1190, 1191, 1192, 1193, 1194, 1195, 1229, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1346, 1347, 1352, 1353, 1354, 1367, 1368, 1369, 1382, 1385, 1390, 1392, 1394, 1397, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1431, 1432, 1435, 1450, 1452, 1467, 1491, 1512, 1520, 1521, 1523, 1713], "transform_affin": [1131, 1158, 1161, 1166, 1182, 1183, 1187, 1194], "transform_angl": [1131, 1159, 1166, 1187], "transform_bbox": [1131, 1160, 1166, 1187], "transform_non_affin": [1131, 1158, 1161, 1166, 1182, 1183, 1187, 1194], "transform_path": [1131, 1162, 1163, 1164, 1166, 1184, 1185, 1186, 1187, 1195], "transform_path_affin": [1131, 1163, 1164, 1166, 1185, 1186, 1187, 1195], "transform_path_non_affin": [1131, 1163, 1164, 1166, 1185, 1186, 1187, 1195], "transform_point": [1131, 1165, 1166, 1187], "transform_rotates_text": 1523, "transformedbbox": [1160, 1450], "transformedpath": 1452, "transformnod": [1131, 1149, 1166, 1187], "translat": [452, 1710, 1729], "transluc": [1251, 1525], "transoffset": [1254, 1258, 1282, 1283, 1385, 1412, 1414, 1423], "transpar": [1254, 1280, 1385, 1390, 1392, 1412, 1413, 1414, 1430, 1525, 1527, 1528], "transpos": [105, 225, 230, 1386], "travers": 1520, "treat": [60, 1035, 1122, 1150, 1176, 1192, 1386, 1420, 1517, 1541, 1544, 1724], "treatment": 1710, "tree": [1131, 1141, 1142, 1166, 1187], "trend": [1265, 1273, 1422, 1511], "tri": [1527, 1528], "tri_down": 1419, "tri_left": 1419, "tri_right": 1419, "tri_up": 1419, "triangl": [1254, 1423, 1527, 1528, 1529, 1530], "triangle_down": 1419, "triangle_left": 1419, "triangle_right": 1419, "triangle_up": 1419, "triangul": [1527, 1528, 1529, 1530], "triangular": [1122, 1241, 1527, 1528, 1529, 1530], "tricki": 1279, "tricontour": [1122, 1527], "tricontourf": [1122, 1528], "tricontourset": [1527, 1528], "trigger": [1023, 1131, 1149, 1166, 1187, 1411, 1564], "tripcolor": [1122, 1529], "triplot": [1122, 1530], "troldborg": [845, 852, 1707, 1714], "true": [0, 3, 4, 5, 10, 12, 18, 31, 67, 72, 76, 105, 115, 188, 230, 234, 278, 325, 328, 344, 377, 385, 387, 392, 393, 414, 427, 453, 479, 486, 491, 544, 545, 549, 551, 594, 597, 599, 601, 603, 609, 611, 615, 632, 636, 637, 643, 644, 905, 921, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1090, 1096, 1101, 1102, 1104, 1110, 1122, 1128, 1131, 1137, 1141, 1147, 1153, 1155, 1166, 1174, 1177, 1178, 1187, 1188, 1190, 1228, 1232, 1239, 1241, 1243, 1244, 1248, 1252, 1254, 1255, 1256, 1257, 1259, 1265, 1269, 1270, 1273, 1279, 1282, 1283, 1284, 1296, 1317, 1327, 1344, 1365, 1380, 1382, 1385, 1386, 1390, 1392, 1393, 1394, 1397, 1398, 1399, 1401, 1404, 1412, 1414, 1418, 1419, 1420, 1422, 1427, 1430, 1436, 1439, 1440, 1441, 1448, 1456, 1466, 1474, 1481, 1496, 1499, 1500, 1503, 1506, 1507, 1511, 1514, 1520, 1525, 1526, 1527, 1528, 1534, 1536, 1538, 1539, 1543, 1564, 1570, 1571, 1580, 1581, 1582, 1584, 1587, 1588, 1589, 1591, 1594, 1595, 1596, 1598, 1602, 1603, 1610, 1611, 1616, 1617, 1619, 1704, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1726, 1727, 1728], "truncat": 1254, "truth": 1720, "try": [1257, 1259, 1471, 1720], "ttype": [563, 565, 1701, 1714, 1720, 1723], "ttype_typ": [443, 447, 706, 708, 710, 713, 721, 729, 735], "tukei": 1257, "tupl": [11, 19, 105, 211, 216, 230, 318, 320, 325, 326, 327, 333, 334, 345, 361, 378, 384, 403, 417, 423, 428, 429, 430, 442, 447, 457, 458, 460, 469, 484, 485, 499, 502, 545, 549, 550, 551, 572, 602, 743, 747, 751, 755, 786, 821, 877, 917, 923, 1009, 1031, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1046, 1051, 1060, 1064, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1088, 1089, 1100, 1104, 1105, 1106, 1107, 1108, 1123, 1126, 1166, 1180, 1238, 1239, 1246, 1249, 1250, 1252, 1254, 1256, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1337, 1382, 1385, 1386, 1392, 1393, 1403, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1431, 1432, 1435, 1452, 1472, 1486, 1496, 1503, 1512, 1517, 1520, 1534, 1548, 1564, 1624, 1626, 1632, 1634], "turbim": [486, 1701], "turbin": [0, 2, 4, 5, 10, 12, 18, 22, 23, 42, 48, 52, 288, 291, 295, 296, 297, 300, 308, 322, 325, 330, 344, 346, 347, 349, 354, 369, 370, 371, 372, 373, 374, 377, 392, 394, 395, 414, 427, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 447, 452, 454, 456, 457, 465, 466, 467, 468, 472, 474, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 563, 565, 567, 569, 580, 581, 582, 584, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 632, 650, 651, 653, 655, 657, 660, 663, 667, 669, 673, 674, 675, 678, 681, 685, 687, 690, 693, 695, 696, 698, 699, 701, 704, 706, 708, 710, 711, 713, 716, 721, 724, 729, 731, 735, 738, 769, 771, 773, 775, 777, 779, 780, 783, 785, 786, 788, 791, 794, 795, 798, 800, 802, 805, 807, 810, 813, 816, 817, 820, 823, 825, 826, 830, 833, 834, 838, 841, 845, 848, 852, 853, 856, 860, 863, 864, 867, 870, 871, 874, 880, 886, 905, 909, 912, 913, 914, 920, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1009, 1014, 1016, 1018, 1021, 1022, 1023, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1051, 1054, 1055, 1056, 1058, 1060, 1072, 1073, 1074, 1078, 1081, 1083, 1084, 1086, 1088, 1654, 1655, 1667, 1668, 1680, 1686, 1687, 1693, 1694, 1695, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1706, 1709, 1710, 1711, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1729, 1731], "turbine1": 1713, "turbine2farmmodel": [581, 582, 583, 584, 585, 586, 1702, 1718], "turbine_base_nam": 483, "turbine_base_name_count_shift": 483, "turbine_id": 483, "turbine_model": [434, 435, 483, 567, 581, 582, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "turbine_model_nam": 346, "turbine_nam": [474, 478, 1052, 1054, 1055], "turbine_paramet": [483, 486, 487, 488, 489], "turbine_result": 1727, "turbine_typ": [346, 567, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 1086, 1088, 1713, 1714, 1715, 1716, 1718, 1720, 1723, 1725], "turbine_yield": [1016, 1023], "turbineinductionmodel": [438, 439, 830, 838, 845, 853, 1698, 1707], "turbinemodel": [369, 436, 437, 440, 441, 442, 443, 567, 581, 582, 650, 651, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 1698, 1702], "turbineord": 0, "turbines_op": [1016, 1032], "turbinetyp": [346, 443, 444, 445, 446, 447, 567, 710, 713, 714, 721, 722, 729, 730, 735, 736, 1698, 1702], "turbinetypecurv": [1086, 1087, 1088, 1703, 1710, 1716, 1721], "turbopark": [914, 920, 1707, 1710], "turbopark_": [1713, 1718], "turbopark_quadratic_loc_k004": 1713, "turboparkb_": 1718, "turboparkix": 1710, "turboparkix_": 1718, "turboparkwak": [914, 915, 916, 917, 918, 919, 1707, 1710, 1718], "turboparkwakeix": [920, 921, 922, 923, 924, 925, 926, 927, 1707, 1718], "turbul": [420, 735, 860, 914, 915, 1651, 1679, 1702, 1706, 1707, 1710, 1713, 1717, 1719, 1727, 1728, 1729], "turn": [1243, 1248, 1407, 1496, 1503], "tutori": 1390, "tw": [285, 301, 1697], "tweight": [302, 427, 430, 1697], "twice": [1254, 1441], "twin": [1122, 1436, 1531, 1532], "twini": [1122, 1532], "twinx": [1122, 1531], "two": [314, 315, 321, 352, 388, 422, 487, 494, 500, 509, 519, 538, 546, 621, 658, 682, 685, 708, 718, 726, 729, 733, 735, 740, 1122, 1131, 1135, 1140, 1143, 1166, 1178, 1187, 1238, 1239, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1281, 1282, 1283, 1382, 1385, 1387, 1390, 1392, 1393, 1394, 1403, 1404, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1424, 1435, 1437, 1467, 1481, 1511, 1512, 1521, 1523, 1562, 1614, 1636, 1637, 1702, 1703, 1704, 1710, 1713, 1717, 1721, 1722, 1723, 1724, 1727, 1729], "two_circl": [1636, 1637], "twosid": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "txyh": [1680, 1706, 1724], "type": [0, 10, 18, 39, 42, 46, 52, 56, 60, 74, 75, 80, 85, 94, 105, 116, 135, 230, 235, 253, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 389, 392, 393, 399, 404, 410, 420, 434, 435, 438, 440, 443, 447, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 563, 565, 567, 569, 572, 573, 574, 577, 580, 581, 587, 589, 590, 594, 597, 599, 601, 603, 609, 611, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1081, 1086, 1088, 1122, 1123, 1124, 1126, 1196, 1199, 1206, 1218, 1220, 1239, 1253, 1271, 1272, 1274, 1278, 1280, 1386, 1394, 1401, 1413, 1498, 1505, 1512, 1516, 1564, 1625, 1627, 1628, 1697, 1698, 1701, 1702, 1703, 1710, 1711, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1724, 1725, 1726, 1727, 1729], "typeerror": [393, 597, 611, 1404, 1564, 1710, 1713], "typic": [334, 361, 403, 420, 1252, 1256, 1269, 1270, 1390, 1423, 1450, 1512, 1519, 1713], "typograph": [1208, 1210, 1430], "tz": [1122, 1420, 1541, 1544], "tzinfo": [1420, 1541, 1544], "u": [1122, 1208, 1210, 1254, 1423, 1424, 1520, 1638, 1639, 1715], "u19": 1719, "u2": [1724, 1725, 1726], "u3": 1715, "u7": [1715, 1726], "ubukhof": [1666, 1706], "uint32": 278, "uk": 830, "ultra": 1523, "ultralight": 1523, "unassoci": 1390, "unboundlocalerror": 1564, "uncertainti": 1023, "unchang": [1243, 1404, 1496, 1503, 1525, 1526], "undefin": 1249, "under": [10, 16, 17, 80, 81, 85, 86, 346, 347, 352, 362, 388, 404, 422, 494, 500, 509, 519, 538, 546, 621, 658, 682, 718, 726, 733, 740, 1386, 1423, 1514, 1527, 1528, 1695, 1707, 1710, 1711, 1713, 1715, 1716, 1717, 1718, 1721, 1722, 1729], "underli": [1048, 1713], "understood": 1710, "undo": 1429, "unequ": [1386, 1710], "unexpect": [1451, 1499, 1506], "unfil": [1282, 1283, 1386], "unfinish": 1710, "unicod": [1208, 1210], "unicode_minu": [1208, 1210], "unicodedecodeerror": 1564, "unicodeencodeerror": 1564, "unicodeerror": 1564, "unicodetranslateerror": 1564, "unicodewarn": 1564, "uniform": [490, 491, 503, 505, 523, 531, 533, 550, 618, 619, 702, 765, 795, 1254, 1413, 1423, 1701, 1702, 1710, 1713, 1714, 1715, 1716, 1720, 1722, 1725, 1727, 1729], "uniformli": 1518, "uniformprofil": [765, 766, 767, 768, 1702], "union": [1534, 1574, 1704], "uniqu": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 389, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996], "unit": [74, 75, 229, 281, 285, 301, 305, 307, 443, 444, 660, 661, 860, 861, 1023, 1030, 1122, 1208, 1228, 1238, 1247, 1251, 1255, 1265, 1271, 1272, 1273, 1382, 1384, 1390, 1392, 1394, 1399, 1403, 1415, 1422, 1423, 1424, 1441, 1449, 1500, 1507, 1511, 1521, 1527, 1528, 1538, 1539, 1543, 1645, 1670, 1697, 1706, 1713, 1716], "unittest": 1710, "unknown": [1238, 1241, 1246, 1249, 1250, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1382, 1385, 1392, 1403, 1412, 1415, 1419, 1420, 1422, 1423, 1435, 1512, 1523], "unless": [1123, 1126, 1228, 1238, 1254, 1255, 1257, 1258, 1265, 1273, 1277, 1279, 1280, 1282, 1283, 1286, 1301, 1385, 1386, 1387, 1388, 1390, 1403, 1412, 1413, 1414, 1415, 1418, 1420, 1422, 1423, 1430, 1467, 1511, 1513, 1514, 1517, 1520, 1525, 1527, 1539, 1540, 1543], "unlik": [1244, 1265, 1273, 1422, 1511], "unmask": 1430, "unnam": 1253, "unpack": [1490, 1499, 1506, 1523], "unpaint": 1385, "uns": 1693, "unset": [1122, 1277, 1435], "unsightli": 1385, "unspecifi": [1123, 1126, 1208, 1209, 1211, 1513], "unstabl": [750, 754, 1558, 1559, 1560, 1702, 1704], "unstack": 1513, "unstructur": [1122, 1527, 1528, 1529, 1530], "until": [1427, 1520, 1536, 1693, 1695, 1710], "unvalid": 1468, "unwrap": [1238, 1403, 1415, 1511], "up": [2, 813, 814, 824, 1030, 1122, 1202, 1221, 1259, 1278, 1282, 1283, 1390, 1414, 1440, 1499, 1506, 1541, 1544, 1710, 1713, 1714, 1715], "upcast": [385, 457, 786], "updat": [18, 19, 89, 93, 370, 373, 392, 395, 472, 587, 589, 590, 594, 599, 601, 603, 606, 609, 615, 616, 660, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999, 1065, 1069, 1122, 1131, 1140, 1144, 1150, 1166, 1171, 1176, 1187, 1192, 1229, 1240, 1244, 1383, 1427, 1473, 1477, 1525, 1533, 1534, 1696, 1710, 1724, 1729], "update_datalim": [1122, 1229, 1534], "update_from": [1122, 1535], "update_n_turbin": [0, 10, 18, 308, 322], "updatei": [1122, 1534], "updatex": [1122, 1534], "uplim": 1279, "upon": [1387, 1713], "upper": [453, 643, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1122, 1239, 1247, 1251, 1255, 1257, 1259, 1279, 1355, 1370, 1386, 1390, 1393, 1399, 1405, 1424, 1435, 1494, 1501, 1512, 1519, 1523, 1527, 1528, 1702, 1720, 1726], "upper_left": 1392, "upper_right": 1392, "upsampl": 1390, "upstream": [853, 1713, 1714, 1715], "upward": [1279, 1390, 1713], "upwind": [438, 439, 465, 466, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920], "urel": [10, 16, 85, 86], "urelax": [10, 17, 80, 81, 85, 86, 87, 88, 1695], "url": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1277, 1279, 1282, 1283, 1348, 1382, 1385, 1390, 1392, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1492, 1512, 1521, 1523, 1708], "urlx": 17, "us": [18, 46, 47, 230, 243, 334, 362, 404, 459, 464, 471, 483, 623, 660, 742, 743, 746, 747, 750, 751, 754, 755, 769, 803, 810, 813, 860, 861, 880, 881, 886, 901, 1009, 1016, 1031, 1054, 1055, 1122, 1123, 1126, 1128, 1131, 1137, 1141, 1142, 1144, 1166, 1169, 1171, 1187, 1188, 1196, 1208, 1218, 1228, 1229, 1230, 1238, 1239, 1241, 1244, 1247, 1248, 1249, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1259, 1265, 1269, 1270, 1271, 1272, 1273, 1275, 1277, 1279, 1280, 1281, 1282, 1283, 1286, 1287, 1288, 1291, 1292, 1304, 1306, 1308, 1318, 1344, 1346, 1350, 1351, 1352, 1353, 1354, 1366, 1367, 1368, 1369, 1382, 1383, 1385, 1386, 1387, 1390, 1401, 1402, 1403, 1404, 1405, 1407, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1436, 1438, 1440, 1451, 1452, 1468, 1472, 1480, 1486, 1490, 1497, 1498, 1499, 1500, 1504, 1505, 1506, 1507, 1509, 1510, 1511, 1512, 1513, 1517, 1518, 1519, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1531, 1532, 1538, 1539, 1541, 1543, 1544, 1564, 1696, 1701, 1702, 1710, 1712, 1713, 1714, 1715, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "usabl": 1239, "usag": [1037, 1038, 1039, 1040, 1041, 1042, 1089, 1255, 1279, 1710], "use_amb_ti": [459, 464], "use_ambti": [860, 861, 1718], "use_local": 1526, "use_mathtext": 1526, "use_rmin": [1131, 1137, 1187, 1188], "use_sticky_edg": [1122, 1404, 1536], "uselocal": 1526, "usemathtext": 1526, "useoffset": 1526, "user": [1203, 1239, 1286, 1306, 1390, 1392, 1393, 1431, 1432, 1464, 1466, 1539, 1645, 1670, 1692, 1701, 1706, 1710, 1713], "usermedian": 1257, "userwarn": 1564, "usetex": 1523, "usevlin": [1228, 1543], "ustar": [742, 743, 746, 747, 750, 751, 754, 755, 1550, 1552, 1554, 1557, 1558, 1560, 1705, 1710], "ustar_input": [742, 743, 746, 747, 750, 751, 754, 755], "usual": [1280, 1390, 1404, 1467, 1519, 1713, 1731], "utem": [1616, 1634], "util": [17, 325, 382, 384, 474, 479, 567, 1065, 1066, 1070, 1071, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1692, 1698, 1699, 1710, 1715, 1724, 1726, 1727, 1728], "utm": [1616, 1634], "utm_zone_str": [1616, 1634], "utmi": [491, 1717], "utmx": [491, 1717], "uv": [1423, 1638, 1639, 1704], "uv2wd": [1638, 1704], "v": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 308, 323, 332, 335, 346, 356, 362, 369, 370, 379, 391, 392, 399, 404, 410, 420, 438, 440, 443, 448, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1122, 1254, 1419, 1420, 1423, 1430, 1520, 1638, 1639], "v0": [1202, 1218, 1221], "v1": [1202, 1218, 1221], "v2": 867, "va": [1253, 1523], "vairabl": [650, 651], "val": [1514, 1538], "valid": [303, 577, 713, 714, 721, 722, 735, 736, 1123, 1126, 1239, 1246, 1249, 1250, 1279, 1280, 1382, 1418, 1419, 1468, 1490, 1525, 1697, 1702, 1711, 1713, 1727], "valid_typ": [1123, 1126], "valign": [1122, 1352, 1353, 1367, 1368], "valu": [0, 2, 4, 5, 16, 18, 19, 22, 23, 40, 44, 48, 54, 58, 62, 74, 75, 82, 87, 96, 105, 108, 109, 117, 118, 120, 122, 124, 128, 129, 130, 131, 132, 133, 136, 138, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 183, 188, 230, 232, 233, 236, 237, 239, 240, 241, 246, 247, 248, 249, 250, 251, 254, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 285, 316, 324, 333, 334, 338, 348, 358, 365, 371, 372, 373, 374, 375, 376, 394, 395, 398, 400, 407, 412, 441, 452, 455, 459, 460, 461, 467, 468, 470, 490, 491, 492, 499, 503, 505, 506, 516, 517, 518, 523, 524, 525, 531, 533, 534, 549, 550, 551, 567, 574, 575, 576, 577, 579, 584, 592, 593, 598, 606, 612, 616, 620, 624, 626, 627, 628, 632, 653, 656, 657, 660, 663, 667, 668, 669, 675, 681, 687, 693, 696, 699, 702, 704, 711, 716, 724, 729, 731, 735, 738, 754, 758, 759, 765, 766, 769, 772, 775, 778, 780, 781, 784, 788, 792, 795, 796, 799, 802, 806, 810, 811, 812, 813, 814, 815, 816, 817, 821, 822, 824, 825, 826, 827, 833, 834, 836, 841, 843, 848, 850, 856, 858, 863, 864, 865, 870, 871, 872, 877, 881, 883, 902, 905, 912, 913, 917, 923, 926, 1018, 1023, 1030, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1054, 1055, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1090, 1107, 1108, 1122, 1123, 1129, 1130, 1131, 1150, 1157, 1158, 1161, 1163, 1164, 1166, 1168, 1176, 1180, 1181, 1182, 1183, 1185, 1186, 1187, 1192, 1194, 1195, 1196, 1202, 1206, 1208, 1209, 1211, 1212, 1213, 1218, 1221, 1228, 1230, 1238, 1239, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1267, 1269, 1270, 1273, 1277, 1279, 1280, 1282, 1283, 1286, 1287, 1288, 1292, 1306, 1326, 1328, 1358, 1373, 1382, 1385, 1386, 1387, 1390, 1392, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1433, 1434, 1435, 1437, 1438, 1441, 1443, 1444, 1448, 1456, 1468, 1470, 1473, 1481, 1485, 1487, 1495, 1496, 1498, 1502, 1503, 1505, 1508, 1511, 1512, 1514, 1517, 1518, 1519, 1520, 1521, 1523, 1526, 1527, 1528, 1529, 1538, 1539, 1543, 1554, 1556, 1558, 1559, 1564, 1616, 1624, 1626, 1632, 1635, 1663, 1697, 1702, 1704, 1706, 1710, 1713, 1714, 1715, 1717, 1718, 1719, 1721, 1723, 1729], "valueerror": [105, 165, 1123, 1130, 1412, 1414, 1418, 1468, 1487, 1564], "values2": 1468, "van": [280, 1550, 1552, 1554, 1557, 1558, 1560, 1697], "var": [0, 10, 18, 39, 42, 46, 52, 56, 60, 80, 85, 94, 105, 226, 230, 304, 308, 323, 332, 334, 335, 346, 356, 362, 369, 370, 379, 391, 392, 399, 404, 410, 420, 438, 440, 443, 448, 450, 452, 459, 465, 471, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 627, 630, 636, 643, 650, 655, 660, 667, 668, 673, 678, 680, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 745, 746, 749, 750, 753, 754, 757, 758, 761, 762, 764, 765, 768, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1016, 1021, 1022, 1025, 1026, 1027, 1028, 1029, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1056, 1058, 1060, 1061, 1084, 1089, 1122, 1252, 1256, 1269, 1270, 1564, 1697, 1714, 1715, 1724], "var2amb": [1691, 1706], "var2arg": [1107, 1108], "var2col": [503, 505, 531, 533, 547, 549, 551, 618, 619, 1713, 1716, 1719, 1720, 1723, 1724, 1726, 1727, 1728], "var2ncvar": [490, 491, 1717], "var_bin": [1056, 1058, 1060, 1061, 1084], "var_period": 674, "var_wd": [775, 776], "var_ws_ct": [690, 691, 714, 722, 730, 736, 1715, 1718, 1724, 1726], "var_ws_p": [660, 661, 714, 722, 730, 736, 1715, 1718, 1724, 1726], "vari": [1122, 1419, 1430, 1520, 1710, 1714, 1716, 1719, 1722], "variabl": [0, 4, 5, 10, 12, 16, 18, 19, 22, 23, 39, 40, 41, 42, 44, 45, 46, 48, 50, 52, 53, 54, 55, 56, 58, 59, 60, 62, 64, 74, 75, 80, 82, 83, 85, 86, 87, 88, 94, 96, 100, 304, 308, 323, 332, 333, 334, 335, 338, 340, 346, 348, 353, 356, 358, 359, 360, 361, 362, 365, 367, 369, 370, 371, 372, 373, 374, 375, 376, 379, 385, 391, 392, 394, 395, 398, 399, 400, 401, 402, 403, 404, 407, 408, 410, 411, 412, 414, 418, 420, 424, 427, 433, 438, 440, 441, 443, 446, 448, 450, 452, 453, 457, 459, 461, 465, 467, 468, 470, 471, 472, 473, 490, 491, 492, 495, 498, 499, 501, 503, 505, 506, 510, 514, 516, 518, 520, 523, 524, 525, 527, 531, 533, 534, 539, 544, 547, 549, 550, 551, 574, 577, 580, 581, 584, 585, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 632, 636, 637, 643, 644, 650, 651, 653, 654, 655, 656, 657, 659, 660, 661, 663, 665, 667, 668, 669, 671, 673, 674, 675, 677, 678, 680, 681, 683, 684, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 708, 710, 711, 712, 713, 714, 716, 719, 720, 721, 722, 724, 727, 728, 729, 730, 731, 734, 735, 736, 738, 741, 742, 745, 746, 749, 750, 753, 754, 757, 758, 759, 761, 762, 764, 765, 766, 768, 769, 775, 776, 780, 786, 788, 795, 802, 810, 811, 812, 813, 814, 815, 816, 817, 820, 822, 823, 824, 825, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 861, 863, 865, 867, 870, 872, 874, 880, 883, 886, 909, 912, 914, 920, 926, 928, 931, 932, 933, 936, 937, 938, 941, 942, 943, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 975, 976, 977, 978, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1009, 1016, 1021, 1022, 1025, 1027, 1028, 1029, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1048, 1051, 1052, 1054, 1055, 1056, 1058, 1059, 1060, 1061, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1080, 1081, 1083, 1084, 1086, 1088, 1089, 1107, 1108, 1114, 1252, 1256, 1269, 1270, 1467, 1548, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1697, 1701, 1702, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "variant": [1424, 1523], "variat": [1713, 1719], "variou": [1254, 1419, 1472, 1486, 1499, 1506, 1710, 1713, 1720], "varlu": [825, 863, 870, 912], "varmap": [655, 656], "vars_op": [1016, 1033, 1034], "vbar": 1385, "vector": [306, 487, 489, 1037, 1038, 1039, 1040, 1041, 1042, 1122, 1228, 1238, 1254, 1257, 1259, 1265, 1273, 1403, 1412, 1414, 1415, 1422, 1423, 1424, 1470, 1471, 1511, 1520, 1539, 1543, 1596, 1597, 1638, 1639, 1640, 1641, 1680, 1704, 1706, 1711, 1726, 1727, 1728], "veer": 1710, "veloc": [1520, 1550, 1552, 1554, 1557, 1558, 1560, 1705], "venv": [1564, 1712], "verbos": [0, 2, 10, 18, 39, 42, 46, 49, 52, 56, 60, 63, 65, 67, 69, 72, 74, 76, 78, 80, 85, 94, 99, 308, 309, 320, 323, 332, 335, 346, 350, 351, 352, 356, 362, 369, 370, 379, 383, 386, 388, 392, 399, 404, 410, 420, 422, 438, 440, 443, 448, 452, 459, 465, 471, 474, 476, 483, 485, 486, 487, 488, 489, 490, 491, 494, 498, 500, 501, 503, 507, 509, 511, 514, 516, 519, 523, 526, 531, 535, 537, 538, 540, 544, 546, 547, 551, 552, 553, 557, 561, 562, 563, 564, 565, 566, 567, 571, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 613, 615, 618, 621, 623, 626, 630, 636, 640, 643, 647, 650, 655, 658, 660, 664, 667, 670, 673, 676, 678, 682, 685, 688, 690, 695, 698, 701, 706, 708, 710, 713, 717, 718, 721, 725, 726, 729, 732, 733, 735, 739, 740, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 787, 788, 795, 801, 802, 808, 810, 813, 818, 820, 823, 828, 830, 835, 838, 842, 845, 849, 852, 853, 857, 860, 867, 874, 878, 880, 884, 886, 906, 909, 914, 918, 920, 924, 925, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1005, 1016, 1018, 1019, 1054, 1055, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1614, 1618, 1619, 1623, 1633, 1642, 1701, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "verbosity_delta": [1036, 1070, 1071], "verbostii": 1005, "veri": [1402, 1412, 1433, 1434, 1716, 1717, 1727], "verif": [1709, 1711, 1713], "verifi": 1710, "versa": 1713, "version": [116, 188, 235, 278, 1208, 1212, 1231, 1238, 1253, 1257, 1259, 1265, 1273, 1277, 1279, 1360, 1375, 1398, 1403, 1413, 1415, 1418, 1420, 1422, 1431, 1432, 1511, 1710, 1711, 1712, 1730], "versu": [1122, 1279, 1419], "vert": [1122, 1254, 1257, 1258, 1259, 1282, 1283, 1385, 1412, 1423, 1538, 1539], "vertex": 1481, "vertic": [448, 643, 644, 1036, 1038, 1039, 1070, 1122, 1228, 1247, 1249, 1250, 1251, 1255, 1257, 1258, 1259, 1277, 1279, 1280, 1283, 1352, 1353, 1367, 1368, 1385, 1386, 1388, 1390, 1399, 1412, 1419, 1481, 1490, 1514, 1517, 1521, 1523, 1538, 1539, 1540, 1543, 1698, 1702, 1703, 1710, 1711, 1718, 1719, 1722, 1729], "vertical_profil": [742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768], "verticalalign": [1253, 1490, 1499, 1506, 1523], "verticalprofil": [448, 449, 450, 451, 523, 524, 531, 533, 742, 743, 746, 747, 750, 751, 754, 755, 758, 762, 765, 1698, 1702], "verts_and_cod": [1254, 1258, 1282, 1283, 1385, 1412, 1423], "via": [39, 42, 46, 52, 56, 60, 80, 85, 94, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 483, 484, 490, 491, 498, 501, 503, 505, 511, 514, 516, 523, 531, 533, 540, 544, 547, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 1007, 1016, 1036, 1043, 1048, 1049, 1052, 1056, 1070, 1078, 1081, 1084, 1086, 1115, 1208, 1210, 1244, 1254, 1390, 1423, 1499, 1500, 1506, 1507, 1527, 1528, 1529, 1618, 1700, 1701, 1704, 1710, 1711, 1721, 1727, 1729, 1731], "vice": 1713, "vicin": 1715, "view": [105, 184, 227, 230, 1122, 1166, 1169, 1202, 1218, 1221, 1240, 1243, 1244, 1335, 1336, 1358, 1373, 1419, 1474, 1496, 1500, 1503, 1507, 1519, 1536], "view_limit": [1196, 1207, 1218, 1223], "viewer": 1390, "viewlim": [1122, 1537], "violin": [1122, 1538, 1539], "violinplot": [1122, 1257, 1538, 1539], "virtual": [1710, 1713], "visibl": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1258, 1265, 1273, 1275, 1277, 1279, 1282, 1283, 1308, 1349, 1365, 1380, 1382, 1385, 1392, 1393, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1427, 1435, 1446, 1447, 1451, 1493, 1499, 1500, 1506, 1507, 1512, 1521, 1523, 1715], "visible_edg": 1521, "visible_onli": [1122, 1426], "visual": [1062, 1122, 1257, 1390, 1430, 1446, 1447, 1512, 1703, 1710, 1713, 1715, 1719, 1721, 1723, 1725, 1726, 1727], "vlabel": [1037, 1038, 1039, 1040, 1041, 1042, 1089], "vlim": [0, 10, 18, 308, 320], "vline": [1122, 1228, 1250, 1388, 1419, 1540, 1543], "vmax": [1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1196, 1202, 1206, 1207, 1218, 1223, 1254, 1258, 1282, 1283, 1385, 1387, 1390, 1412, 1413, 1414, 1423, 1430, 1511, 1527, 1528, 1529, 1714, 1715, 1721, 1724, 1726], "vmin": [1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1089, 1122, 1196, 1202, 1206, 1207, 1218, 1223, 1254, 1258, 1282, 1283, 1385, 1387, 1390, 1412, 1413, 1414, 1423, 1430, 1511, 1527, 1528, 1529, 1714, 1715, 1721, 1724, 1726], "vollmer": 1708, "volluk": 867, "volum": 1708, "vortex": [853, 1707, 1714], "vortexsheet": [853, 854, 855, 856, 857, 858, 859, 1707, 1710, 1718], "vpstat": [1122, 1538], "vr": 1114, "w": [38, 285, 305, 385, 444, 459, 460, 503, 523, 524, 623, 706, 707, 709, 713, 714, 721, 722, 729, 735, 1089, 1115, 1117, 1119, 1224, 1257, 1419, 1424, 1439, 1485, 1550, 1553, 1554, 1558, 1639, 1640, 1683, 1690, 1691, 1697, 1702, 1704, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "w_i": 1387, "wa": [1427, 1481, 1723, 1726], "wai": [1239, 1254, 1282, 1283, 1405, 1413, 1419, 1441, 1518, 1520, 1527, 1528, 1713, 1717], "wake": [0, 2, 4, 5, 22, 23, 39, 46, 47, 48, 80, 288, 370, 371, 372, 373, 374, 375, 376, 385, 392, 393, 394, 395, 396, 397, 398, 438, 452, 453, 455, 456, 457, 458, 459, 465, 467, 468, 469, 470, 471, 472, 473, 567, 570, 587, 589, 590, 592, 593, 594, 597, 598, 599, 600, 601, 603, 604, 606, 607, 609, 611, 612, 615, 616, 617, 626, 701, 769, 770, 772, 773, 775, 778, 779, 780, 784, 785, 786, 788, 792, 794, 795, 796, 799, 800, 802, 803, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 861, 863, 864, 865, 867, 868, 870, 871, 872, 874, 877, 880, 881, 883, 886, 901, 905, 909, 912, 913, 914, 917, 920, 921, 923, 926, 928, 929, 931, 932, 933, 934, 936, 937, 938, 939, 941, 942, 943, 944, 946, 947, 948, 949, 951, 952, 954, 955, 957, 958, 960, 961, 963, 964, 966, 967, 969, 970, 972, 973, 975, 976, 978, 979, 981, 982, 984, 985, 987, 988, 990, 991, 993, 994, 996, 997, 999, 1000, 1564, 1662, 1671, 1672, 1690, 1694, 1695, 1697, 1698, 1702, 1706, 1707, 1709, 1710, 1711, 1714, 1715, 1717, 1718, 1719, 1721, 1722, 1725, 1727, 1728], "wake_coo": [456, 467, 773, 779, 785, 794, 800, 807, 816, 833, 841, 848, 856], "wake_delta": [370, 371, 372, 373, 374, 375, 376, 392, 394, 395, 398, 438, 465, 467, 468, 470, 472, 473, 587, 589, 590, 592, 593, 594, 598, 599, 601, 603, 606, 609, 612, 615, 616, 810, 813, 816, 817, 820, 823, 830, 833, 834, 836, 838, 841, 843, 845, 848, 850, 852, 853, 856, 858, 860, 865, 867, 872, 874, 880, 909, 914, 920, 926, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 957, 958, 963, 964, 969, 970, 975, 976, 981, 982, 987, 988, 993, 994, 999, 1000], "wake_fram": [0, 2, 392, 567, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 1714, 1715, 1717, 1718, 1724, 1726, 1729], "wake_k": [803, 860, 861, 867, 868, 874, 875, 880, 881, 909, 910, 914, 915, 920, 921, 1547, 1548, 1704, 1713], "wake_model": [0, 2, 46, 47, 392, 453, 567, 570, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 1710, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "wake_model_result": [472, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999], "wake_r": [825, 826, 863, 864, 870, 871, 912, 913], "wake_superposit": [567, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1718], "wakedelta": [626, 627, 628, 629, 1702, 1713], "wakefram": [0, 392, 452, 453, 454, 455, 456, 457, 458, 567, 769, 770, 775, 780, 788, 795, 802, 803, 1698, 1702], "wakek": [459, 460, 461, 462, 463, 464, 803, 860, 861, 867, 868, 874, 875, 880, 881, 909, 910, 914, 915, 920, 921, 1698, 1710, 1715, 1724, 1726], "wakek_instance1": 1726, "wakekfactori": [1101, 1106, 1547, 1548, 1549, 1704, 1710], "wakemirror": [587, 590, 591, 592, 593, 1702, 1710, 1718], "wakemodel": [0, 46, 47, 371, 372, 373, 375, 376, 392, 393, 394, 395, 398, 438, 453, 465, 466, 467, 468, 469, 470, 567, 570, 592, 593, 597, 598, 606, 611, 612, 616, 813, 1698, 1707], "wakes0": 1715, "wakesuperposit": [471, 472, 473, 567, 813, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1698, 1702], "want": [1208, 1210, 1239, 1254, 1257, 1259, 1382, 1401, 1419, 1423, 1430, 1431, 1432, 1466, 1499, 1506, 1527, 1528, 1729], "warn": [769, 1123, 1126, 1196, 1203, 1205, 1218, 1385, 1412, 1414, 1419, 1423, 1471, 1564], "watt": [229, 281, 285, 301, 305, 307, 1030, 1697], "wd": [0, 1, 10, 18, 516, 517, 523, 524, 674, 775, 776, 793, 1089, 1115, 1117, 1638, 1639, 1640, 1641, 1681, 1690, 1691, 1704, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "wd2uv": [1639, 1704], "wd2wdvec": [1640, 1704], "wd_a": [1563, 1704], "wd_b": [1563, 1704], "wd_max": 1723, "wd_min": 1723, "wd_var": [74, 75, 1056, 1058, 1060, 1084], "wdelta": [472, 811, 812, 815, 822, 827, 883, 931, 936, 941, 946, 951, 957, 963, 969, 975, 981, 987, 993, 999], "wdvec": [1640, 1641, 1704], "wdvec2wd": [1641, 1704], "we": [577, 845, 852, 853, 860, 1140, 1431, 1432, 1436, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "weakest": 1714, "websit": 1719, "wedg": 1418, "wedgeprop": 1418, "weigh": 1387, "weight": [0, 1, 10, 18, 38, 94, 103, 302, 335, 343, 373, 392, 395, 396, 410, 412, 414, 419, 420, 426, 430, 490, 491, 497, 498, 501, 503, 513, 514, 516, 522, 523, 530, 531, 543, 544, 547, 549, 551, 594, 599, 600, 601, 603, 606, 607, 609, 615, 616, 617, 630, 632, 635, 636, 637, 642, 643, 644, 649, 1016, 1035, 1051, 1062, 1072, 1073, 1074, 1122, 1277, 1386, 1387, 1390, 1424, 1513, 1523, 1682, 1697, 1702, 1703, 1704, 1706, 1710, 1715, 1716, 1722, 1723, 1724, 1725, 1726, 1728], "weight_ncvar": [490, 491], "weight_turbin": [1049, 1051, 1072, 1073, 1074], "weighted_wiggl": 1513, "weinsum": [1016, 1035], "welch": [1273, 1422], "well": [1239, 1265, 1273, 1279, 1398, 1402, 1422, 1430, 1433, 1434, 1452, 1511, 1518, 1711, 1713, 1716, 1720, 1729], "were": [1123, 1280, 1337, 1538, 1710, 1728, 1729], "west": [1723, 1729], "westerli": [1715, 1723], "wframe_typ": [452, 458, 769, 775, 780, 788, 795, 802], "what": [1511, 1719], "when": [769, 1122, 1131, 1138, 1140, 1144, 1166, 1171, 1178, 1187, 1203, 1208, 1210, 1225, 1229, 1238, 1239, 1240, 1244, 1253, 1254, 1255, 1257, 1259, 1265, 1273, 1274, 1278, 1279, 1306, 1322, 1385, 1386, 1387, 1390, 1401, 1403, 1404, 1408, 1411, 1412, 1413, 1414, 1415, 1418, 1419, 1422, 1430, 1439, 1443, 1444, 1451, 1462, 1509, 1510, 1511, 1514, 1516, 1519, 1520, 1527, 1528, 1536, 1538, 1539, 1710, 1713, 1715, 1716, 1717, 1721, 1724, 1727], "whenev": [1122, 1230, 1712, 1713, 1724], "where": [650, 651, 1010, 1122, 1131, 1141, 1144, 1159, 1166, 1171, 1187, 1230, 1239, 1252, 1254, 1256, 1257, 1265, 1269, 1270, 1273, 1279, 1280, 1282, 1283, 1386, 1388, 1419, 1422, 1430, 1439, 1441, 1487, 1511, 1513, 1518, 1519, 1526, 1540, 1543, 1635, 1639, 1640, 1710, 1713, 1722, 1723, 1729], "wherea": 1140, "whether": [1122, 1131, 1141, 1142, 1159, 1166, 1187, 1239, 1244, 1248, 1254, 1257, 1259, 1260, 1261, 1265, 1267, 1268, 1273, 1277, 1290, 1294, 1297, 1298, 1300, 1304, 1313, 1322, 1323, 1329, 1363, 1378, 1382, 1383, 1384, 1390, 1391, 1394, 1397, 1399, 1408, 1412, 1413, 1414, 1417, 1418, 1422, 1426, 1430, 1440, 1442, 1443, 1444, 1447, 1448, 1451, 1457, 1462, 1463, 1466, 1496, 1503, 1511, 1512, 1514, 1515, 1525, 1526, 1534, 1536, 1538, 1539, 1542, 1545], "whi": [1122, 1257], "which": [39, 41, 42, 45, 46, 50, 52, 55, 56, 59, 60, 64, 80, 83, 85, 88, 94, 100, 308, 335, 340, 346, 353, 356, 360, 362, 367, 369, 399, 402, 404, 408, 410, 418, 420, 424, 440, 443, 452, 472, 473, 490, 495, 498, 499, 501, 503, 505, 510, 514, 516, 520, 523, 527, 531, 539, 544, 547, 580, 581, 585, 618, 622, 623, 625, 626, 629, 630, 636, 643, 650, 654, 655, 659, 660, 665, 667, 671, 673, 674, 677, 678, 683, 685, 686, 689, 690, 694, 695, 697, 698, 700, 701, 705, 706, 708, 710, 712, 713, 714, 720, 721, 722, 728, 729, 734, 735, 736, 741, 769, 770, 802, 803, 811, 812, 813, 815, 821, 822, 825, 827, 858, 863, 870, 877, 883, 912, 917, 923, 931, 932, 936, 937, 938, 939, 941, 942, 946, 947, 948, 951, 952, 953, 954, 957, 958, 959, 960, 963, 964, 965, 966, 969, 970, 971, 972, 973, 975, 976, 977, 978, 979, 981, 982, 983, 984, 987, 988, 989, 990, 993, 994, 995, 996, 999, 1000, 1001, 1009, 1012, 1013, 1014, 1015, 1031, 1051, 1060, 1072, 1073, 1074, 1084, 1089, 1107, 1108, 1122, 1123, 1126, 1131, 1141, 1143, 1156, 1166, 1187, 1196, 1228, 1229, 1238, 1241, 1243, 1244, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1259, 1265, 1267, 1273, 1277, 1279, 1280, 1282, 1283, 1284, 1286, 1328, 1337, 1340, 1344, 1345, 1352, 1353, 1354, 1358, 1363, 1367, 1368, 1369, 1373, 1378, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1401, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1429, 1430, 1433, 1434, 1435, 1436, 1437, 1441, 1451, 1452, 1466, 1467, 1468, 1470, 1480, 1481, 1483, 1490, 1496, 1503, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1525, 1527, 1528, 1529, 1536, 1538, 1539, 1540, 1543, 1548, 1638, 1641, 1698, 1702, 1707, 1710, 1711, 1713, 1715, 1717, 1720, 1724, 1725, 1726, 1727, 1728, 1729, 1731], "while": [1238, 1260, 1265, 1273, 1306, 1403, 1414, 1415, 1422, 1511, 1518, 1531, 1532, 1712, 1713, 1715], "whishi": 1259, "whisker": [1122, 1257, 1259, 1539], "whiskerprop": [1257, 1259], "whislo": 1259, "whislow": 1259, "white": [1419, 1721], "whitespac": 1399, "who": [1239, 1531, 1532], "whole": [1141, 1247, 1251, 1255, 1257, 1710, 1719], "whose": [105, 165, 1241, 1716], "wide": 1481, "width": [1058, 1060, 1122, 1239, 1241, 1254, 1255, 1257, 1259, 1269, 1270, 1280, 1301, 1386, 1392, 1394, 1418, 1423, 1435, 1441, 1449, 1467, 1481, 1511, 1520, 1521, 1525, 1527, 1538, 1539, 1710], "wiggl": [1337, 1480, 1513], "wiki": [1254, 1257, 1259], "wikipedia": [1254, 1257, 1259], "wilei": [845, 852, 1265, 1273, 1422], "wind": [2, 19, 74, 75, 228, 297, 300, 308, 309, 346, 349, 420, 434, 435, 443, 446, 474, 475, 476, 477, 483, 484, 485, 486, 487, 488, 489, 503, 516, 517, 523, 524, 563, 580, 660, 661, 690, 691, 706, 707, 708, 709, 710, 713, 714, 719, 721, 722, 727, 729, 730, 735, 736, 742, 746, 750, 754, 762, 769, 775, 776, 802, 830, 838, 845, 852, 853, 860, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 948, 949, 954, 955, 960, 961, 966, 967, 972, 973, 978, 979, 984, 985, 990, 991, 996, 997, 1007, 1008, 1010, 1011, 1024, 1056, 1058, 1060, 1061, 1072, 1073, 1074, 1075, 1076, 1077, 1084, 1088, 1122, 1252, 1254, 1256, 1269, 1270, 1550, 1551, 1552, 1553, 1554, 1555, 1557, 1558, 1560, 1563, 1638, 1639, 1640, 1641, 1646, 1647, 1648, 1652, 1653, 1673, 1674, 1675, 1681, 1683, 1697, 1698, 1700, 1701, 1702, 1704, 1705, 1706, 1709, 1710, 1711, 1712, 1713, 1714, 1717, 1718, 1720, 1721, 1724, 1725, 1726, 1727, 1729, 1731], "wind_barb": 1254, "wind_energy_system": [552, 553], "wind_farm": [474, 475], "wind_ros": 1710, "wind_rose_bremen": [1723, 1728], "wind_rot": [1710, 1717], "windfarm": [2, 19, 308, 309, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 1007, 1008, 1698, 1700, 1714, 1715, 1716, 1717, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729], "windio": [552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 1710], "windio_timeseries_5000": 1716, "windio_yaml": [566, 1701], "windiorunn": [552, 553, 554, 555, 556, 557, 558, 559, 560, 566, 1701], "window": [1122, 1238, 1265, 1273, 1306, 1403, 1415, 1422, 1511, 1710], "window_han": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "window_non": [1238, 1265, 1273, 1403, 1415, 1422, 1511], "windros": [1122, 1252, 1256, 1269, 1270, 1409, 1704, 1710], "windroseax": [1122, 1289, 1704, 1710], "windroseoutput": 1710, "winds100": [1710, 1716], "windspe": [1714, 1715], "wio": [562, 1701], "wio_input_data": [552, 553], "wio_out": [564, 1701], "wio_trbn": [565, 1701], "wise": [660, 685, 686, 1710, 1724], "wish": [1254, 1280, 1430, 1728, 1729], "with_stat": [0, 3, 10, 18], "within": [488, 674, 1090, 1122, 1238, 1240, 1257, 1267, 1327, 1385, 1403, 1415, 1430, 1438, 1439, 1466, 1521, 1614, 1636, 1701, 1704, 1710, 1712, 1713, 1714, 1724], "without": [18, 346, 580, 830, 838, 845, 852, 1035, 1202, 1221, 1277, 1279, 1281, 1419, 1420, 1499, 1506, 1511, 1696, 1702, 1710, 1715, 1721, 1724, 1725, 1726], "wmodel": [370, 371, 372, 373, 374, 375, 376, 392, 393, 394, 395, 398, 587, 589, 590, 592, 593, 594, 597, 598, 599, 601, 603, 606, 609, 611, 612, 615, 616], "wmodel_typ": [438, 465, 469, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 909, 914, 920], "won": 1140, "word": [1386, 1390], "work": [1218, 1386, 1412, 1414, 1420, 1430, 1472, 1486, 1499, 1506, 1512, 1527, 1528, 1562, 1710, 1712, 1717, 1726, 1728], "worker": [1619, 1727], "workflow": 1710, "would": [1203, 1239, 1254, 1258, 1281, 1405, 1431, 1432, 1481, 1536, 1710, 1715, 1719, 1724], "wrap": [1238, 1405, 1415, 1487, 1523], "wrapper": [105, 116, 230, 235, 581, 1402, 1413, 1433, 1434, 1518, 1702, 1710], "wrf": [1710, 1719], "write": [551, 1007, 1012, 1013, 1014, 1015, 1016, 1036, 1043, 1048, 1049, 1052, 1054, 1055, 1056, 1061, 1070, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1081, 1083, 1084, 1086, 1115, 1121, 1633, 1642, 1703, 1704, 1710, 1713], "write_csv": [1007, 1012, 1052, 1054], "write_figur": [1056, 1061, 1084], "write_fil": [1115, 1121], "write_json": [1007, 1013], "write_nc": [1051, 1052, 1055, 1083, 1642], "write_par": [1051, 1072, 1073, 1074, 1075, 1076, 1077], "write_plot": [1007, 1014], "write_random_abl_st": 551, "write_var": 1051, "write_xyh": [1007, 1015], "written": [551, 552, 553, 618, 619, 1051, 1054, 1055, 1711, 1713], "wrong": [1710, 1713], "wrt": [1009, 1016, 1025, 1026, 1027, 1028, 1029, 1565, 1570, 1572, 1574, 1580, 1582, 1587, 1589, 1594, 1596, 1602, 1604, 1610], "ws0": [1553, 1705, 1720], "ws_cubic": 1718, "ws_cubic_amb": 1718, "ws_cubic_loc": 1718, "ws_cubic_loc_lim": 1718, "ws_exp_ct": 565, "ws_exp_p": 565, "ws_linear": [1710, 1713, 1718, 1726], "ws_linear_amb": 1718, "ws_linear_amb_lim": 1718, "ws_linear_lim": [1715, 1718, 1724], "ws_linear_loc": 1718, "ws_linear_loc_lim": 1718, "ws_list": [516, 517], "ws_max": [1088, 1718, 1723], "ws_max_amb": 1718, "ws_max_loc": 1718, "ws_max_loc_lim": 1718, "ws_min": [1088, 1723], "ws_product": 1718, "ws_product_lim": 1718, "ws_quadrat": 1718, "ws_quadratic_amb": 1718, "ws_quadratic_amb_lim": 1718, "ws_quadratic_lim": 1718, "ws_quadratic_loc": 1718, "ws_quadratic_loc_lim": 1718, "ws_quartic": 1718, "ws_quartic_amb": 1718, "ws_quartic_loc": 1718, "ws_quartic_loc_lim": 1718, "ws_ref": [1552, 1557, 1560, 1705], "ws_step": 1088, "ws_var": [1084, 1085], "wsct": [690, 713, 721, 729, 735], "wsg84": 1615, "wslinear": [948, 949, 950, 951, 952, 953, 1702, 1710, 1718], "wslinearloc": [954, 955, 956, 957, 958, 959, 1702, 1710, 1718], "wsmax": [960, 961, 962, 963, 964, 965, 1702, 1718], "wsmaxloc": [966, 967, 968, 969, 970, 971, 1702, 1710, 1718], "wsp": [713, 721, 729, 735], "wspow": [972, 973, 974, 975, 976, 977, 1702, 1718], "wspowloc": [978, 979, 980, 981, 982, 983, 1702, 1710, 1718], "wsproduct": [984, 985, 986, 987, 988, 989, 1702, 1718], "wsquadrat": [990, 991, 992, 993, 994, 995, 1702, 1718], "wsquadraticloc": [996, 997, 998, 999, 1000, 1001, 1702, 1710, 1718], "wsrho2pctfromtwo": [729, 730, 731, 732, 733, 734, 1702], "wsrho2pcttwofil": 1710, "wsti2pctfromtwo": [735, 736, 737, 738, 739, 740, 741, 1702, 1710], "www": [830, 838, 845, 852, 1564], "x": [0, 1, 10, 18, 306, 325, 344, 377, 413, 427, 452, 453, 455, 483, 487, 488, 490, 491, 594, 631, 636, 639, 646, 769, 772, 775, 778, 780, 784, 788, 792, 793, 795, 799, 802, 806, 810, 811, 812, 813, 815, 820, 821, 822, 823, 825, 826, 827, 860, 863, 864, 867, 870, 871, 874, 877, 880, 883, 886, 902, 905, 909, 912, 913, 914, 917, 920, 923, 1009, 1010, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1098, 1099, 1101, 1103, 1122, 1131, 1135, 1150, 1153, 1166, 1176, 1178, 1187, 1192, 1208, 1209, 1228, 1238, 1239, 1241, 1243, 1244, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1265, 1271, 1273, 1274, 1277, 1279, 1281, 1282, 1283, 1285, 1287, 1295, 1335, 1344, 1352, 1353, 1354, 1355, 1358, 1360, 1367, 1368, 1369, 1382, 1385, 1386, 1387, 1390, 1392, 1395, 1398, 1401, 1402, 1403, 1404, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1441, 1446, 1447, 1468, 1494, 1495, 1496, 1497, 1499, 1506, 1509, 1511, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1538, 1539, 1540, 1542, 1543, 1545, 1562, 1565, 1566, 1568, 1569, 1572, 1574, 1576, 1578, 1579, 1582, 1584, 1585, 1586, 1589, 1591, 1592, 1593, 1596, 1598, 1600, 1601, 1604, 1606, 1608, 1609, 1635, 1640, 1641, 1680, 1684, 1702, 1704, 1706, 1707, 1710, 1711, 1713, 1714, 1715, 1716, 1717, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1729], "x0": [886, 900, 1386, 1392, 1394, 1527, 1528, 1635, 1704], "x1": [1122, 1283, 1386, 1419, 1527, 1528], "x2": [1122, 1281, 1283, 1402, 1419, 1433, 1434, 1518], "x27": 1719, "x_": 1166, "x_1d": 1520, "x_coord": [490, 491, 1717], "x_direct": [1036, 1038, 1039, 1041, 1042, 1073, 1074, 1076, 1077, 1710, 1719], "x_edg": 1387, "x_i": 1387, "x_isdata": 1142, "x_label": 1088, "x_po": [1072, 1073, 1074, 1075, 1076, 1077, 1089], "x_y": 1089, "xarrai": [0, 4, 5, 10, 12, 18, 19, 22, 23, 25, 26, 27, 33, 34, 39, 42, 46, 52, 56, 60, 67, 72, 76, 80, 85, 93, 94, 308, 314, 319, 325, 326, 332, 334, 335, 346, 356, 361, 362, 369, 399, 403, 404, 410, 420, 440, 443, 490, 491, 498, 499, 501, 503, 514, 516, 523, 531, 544, 545, 547, 552, 580, 581, 618, 623, 626, 630, 636, 643, 650, 655, 656, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 1007, 1008, 1016, 1017, 1049, 1050, 1051, 1053, 1057, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1081, 1082, 1083, 1085, 1564, 1617, 1642, 1698, 1701, 1710, 1715, 1719, 1724, 1725, 1726], "xaxi": [1122, 1271, 1287, 1297, 1351, 1356, 1359, 1361, 1362, 1363, 1364, 1365, 1420, 1431, 1443, 1495, 1498, 1499, 1500, 1531, 1541, 1542], "xaxis_d": [1122, 1541], "xaxis_invert": [1122, 1355, 1358, 1395, 1494, 1496, 1542], "xbound": 1435, "xcoord": 1239, "xcorr": [1122, 1543], "xdata": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512], "xdate": [1122, 1420], "xedg": 1387, "xerr": [1122, 1255, 1279], "xextent": 1511, "xlabel": [1036, 1037, 1038, 1040, 1041, 1089, 1122, 1344, 1357, 1419, 1435, 1495], "xlim": [1248, 1435, 1496], "xlist": 1715, "xlolim": 1279, "xmargin": [1360, 1404, 1435], "xmax": [1072, 1073, 1075, 1076, 1122, 1246, 1247, 1248, 1251, 1385, 1387, 1388, 1413, 1496, 1511, 1519, 1715, 1717, 1719, 1724, 1726, 1729], "xmax_ini": [1614, 1704], "xmin": [1072, 1073, 1075, 1076, 1122, 1246, 1247, 1248, 1251, 1258, 1385, 1387, 1388, 1413, 1496, 1511, 1519, 1521, 1715, 1717, 1719, 1724, 1729], "xr": [491, 1564], "xr_interp_arg": 656, "xr_read_par": [498, 499], "xrang": [1122, 1246, 1258], "xscale": [1122, 1385, 1435], "xspace": [1072, 1073, 1075, 1076, 1715], "xtick": [1433, 1435], "xticklabel": 1435, "xunit": [1527, 1528], "xuplim": 1279, "xwidth": 1258, "xx": [1265, 1422, 1523], "xy": [434, 435, 1036, 1037, 1040, 1070, 1072, 1075, 1122, 1239, 1241, 1247, 1251, 1255, 1265, 1273, 1392, 1419, 1423, 1534, 1614, 1704, 1710, 1715, 1717, 1720, 1721, 1723, 1724, 1729], "xy1": [1122, 1249], "xy2": [1122, 1249], "xy_bas": [487, 489, 1701, 1714, 1715, 1717, 1719, 1721, 1723, 1724, 1725, 1726, 1728], "xy_step": [489, 1701, 1714, 1719, 1721, 1723, 1725], "xycoord": [1122, 1239], "xydata": 1534, "xyh": [306, 1007, 1013, 1015, 1706, 1724], "xytext": [1122, 1239, 1241], "xz": [1036, 1038, 1041, 1065, 1066, 1070, 1073, 1076, 1710], "y": [0, 1, 10, 18, 306, 325, 344, 377, 413, 427, 483, 487, 488, 490, 491, 631, 639, 646, 793, 1009, 1010, 1036, 1037, 1039, 1040, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1088, 1089, 1098, 1099, 1101, 1103, 1122, 1131, 1153, 1166, 1169, 1187, 1228, 1239, 1241, 1243, 1244, 1246, 1247, 1249, 1251, 1254, 1255, 1258, 1265, 1272, 1273, 1274, 1277, 1279, 1281, 1282, 1283, 1285, 1288, 1295, 1336, 1344, 1352, 1353, 1354, 1367, 1368, 1369, 1370, 1373, 1375, 1382, 1385, 1387, 1388, 1390, 1392, 1396, 1398, 1401, 1402, 1404, 1412, 1413, 1414, 1419, 1420, 1423, 1424, 1430, 1431, 1432, 1433, 1434, 1436, 1439, 1441, 1446, 1447, 1490, 1499, 1501, 1502, 1503, 1504, 1506, 1510, 1513, 1514, 1516, 1517, 1518, 1519, 1520, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1534, 1538, 1539, 1542, 1543, 1545, 1565, 1566, 1568, 1569, 1572, 1574, 1576, 1578, 1579, 1582, 1584, 1585, 1586, 1589, 1591, 1592, 1593, 1596, 1598, 1600, 1601, 1604, 1606, 1608, 1609, 1640, 1641, 1680, 1685, 1706, 1713, 1714, 1715, 1716, 1717, 1720, 1724, 1726, 1727], "y0": [1392, 1394, 1527, 1528], "y1": [1122, 1282, 1419, 1513, 1527, 1528], "y2": [1122, 1281, 1282, 1402, 1419, 1433, 1434, 1513, 1518], "y3": 1513, "y4": 1513, "y_1d": 1520, "y_coord": [490, 491, 1717], "y_edg": 1387, "y_i": 1387, "y_isdata": 1142, "y_label": 1088, "y_po": [1072, 1073, 1074, 1075, 1076, 1077, 1089], "yaml": [553, 566, 1701, 1710], "yaw": [0, 1, 10, 18, 695, 698, 714, 722, 730, 736, 802, 880, 886, 1115, 1117, 1654, 1655, 1686, 1687, 1690, 1691, 1702, 1706, 1709, 1710, 1711, 1713, 1715, 1718, 1724, 1725, 1726], "yaw2yawm": [695, 696, 697, 1702, 1710, 1713, 1718, 1729], "yawed_": 1713, "yawed_ambka": 1718, "yawed_k": 1718, "yawed_ka": 1718, "yawed_wak": 1710, "yawedwak": [802, 803, 804, 805, 806, 807, 808, 809, 1702, 1710, 1713, 1718], "yawm": [695, 698, 802, 880, 902, 1687, 1690, 1691, 1702, 1706, 1713, 1729], "yawm2yaw": [698, 699, 700, 1702, 1710, 1713, 1718, 1729], "yaxi": [1122, 1272, 1288, 1298, 1366, 1371, 1374, 1376, 1377, 1378, 1379, 1380, 1420, 1432, 1444, 1502, 1505, 1506, 1507, 1532, 1544, 1545], "yaxis_d": [1122, 1544], "yaxis_invert": [1122, 1370, 1373, 1396, 1501, 1503, 1545], "ybound": 1435, "ycoord": 1239, "ydata": [1238, 1246, 1249, 1250, 1265, 1273, 1277, 1279, 1382, 1403, 1415, 1419, 1420, 1422, 1512, 1720], "ydate": [1122, 1420], "year": [1280, 1496, 1708], "yedg": 1387, "yellow": 1419, "yerr": [1122, 1255, 1279], "yet": 1710, "yheight": 1258, "yield": [1002, 1004, 1006, 1016, 1023, 1030, 1386, 1419, 1480, 1656, 1688, 1703, 1706, 1708, 1710, 1711, 1713, 1719, 1722, 1727, 1728], "ylabel": [1036, 1037, 1039, 1040, 1042, 1089, 1122, 1344, 1372, 1419, 1435, 1502], "yld": [1115, 1117, 1688, 1690, 1691, 1706, 1727], "ylgn": 1721, "ylim": [1248, 1435, 1503], "ylorrd": 1721, "ymargin": [1375, 1404, 1435], "ymax": [1072, 1074, 1075, 1077, 1122, 1247, 1248, 1250, 1251, 1385, 1387, 1413, 1503, 1519, 1540, 1715, 1717, 1724, 1726, 1729], "ymin": [1072, 1074, 1075, 1077, 1122, 1247, 1248, 1250, 1251, 1258, 1385, 1387, 1413, 1503, 1519, 1521, 1540, 1715, 1717, 1724, 1729], "you": [1240, 1253, 1254, 1257, 1259, 1265, 1273, 1280, 1281, 1282, 1283, 1286, 1306, 1351, 1366, 1382, 1407, 1412, 1413, 1414, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1440, 1466, 1471, 1472, 1486, 1499, 1500, 1506, 1507, 1511, 1512, 1518, 1523, 1527, 1528, 1529, 1562, 1710, 1712, 1713, 1718, 1722, 1725, 1729, 1731], "your": [1431, 1432, 1497, 1504, 1711, 1712, 1725, 1730], "yourself": [1240, 1286, 1306, 1500, 1507, 1562, 1716], "yrang": [1122, 1250, 1251, 1258], "yscale": [1385, 1435], "yspace": [1072, 1074, 1075, 1077, 1715], "ytick": [1434, 1435], "yticklabel": 1435, "yunit": [1527, 1528], "yx": [1065, 1066], "yy": 1265, "yz": [810, 812, 813, 815, 820, 823, 860, 867, 874, 880, 883, 909, 914, 920, 1036, 1039, 1042, 1065, 1066, 1070, 1074, 1077, 1707, 1710], "z": [413, 631, 639, 646, 758, 759, 793, 1038, 1039, 1041, 1042, 1072, 1073, 1074, 1075, 1076, 1077, 1122, 1243, 1306, 1401, 1405, 1470, 1499, 1506, 1512, 1527, 1528, 1713, 1715, 1719], "z0": [1550, 1551, 1552, 1554, 1555, 1557, 1558, 1560, 1689, 1705, 1706, 1713, 1715, 1716], "z1": 1528, "z2": 1528, "z_po": [1072, 1073, 1074, 1075, 1076, 1077], "zag": 1385, "zahl": 577, "zenodo": 1708, "zero": [370, 375, 376, 392, 398, 470, 587, 589, 590, 594, 599, 601, 603, 609, 615, 702, 811, 812, 815, 821, 822, 825, 827, 836, 843, 850, 863, 865, 870, 872, 877, 883, 912, 917, 923, 926, 1058, 1060, 1122, 1243, 1244, 1265, 1273, 1405, 1422, 1485, 1511, 1512, 1513, 1564, 1618, 1623, 1635, 1663, 1704, 1706, 1713, 1714, 1715, 1722, 1725], "zerodivisionerror": 1564, "zig": 1385, "zip": [1115, 1116, 1118, 1119, 1564], "zlabel": [1038, 1039, 1041, 1042], "zmax": [1073, 1074, 1076, 1077, 1248, 1715, 1719, 1729], "zmin": [1073, 1074, 1076, 1077, 1248, 1715, 1719, 1729], "zone": [845, 852, 1420, 1616, 1634, 1715], "zoom": [1122, 1260, 1261, 1312, 1324, 1423, 1456, 1472, 1486, 1499, 1506], "zope": 1564, "zorder": [1122, 1238, 1241, 1246, 1247, 1249, 1250, 1251, 1254, 1255, 1257, 1258, 1259, 1265, 1273, 1277, 1279, 1282, 1283, 1328, 1381, 1382, 1385, 1392, 1394, 1403, 1412, 1414, 1415, 1419, 1420, 1422, 1423, 1435, 1448, 1456, 1470, 1508, 1512, 1520, 1521, 1523, 1525, 1546], "zorder_demo": 1448, "zspace": [1073, 1074, 1076, 1077]}, "titles": ["foxes.algorithms.Downwind", "foxes.algorithms.Downwind.DEFAULT_FARM_OUTPUTS", "foxes.algorithms.Downwind.__init__", "foxes.algorithms.Downwind.all_models", "foxes.algorithms.Downwind.calc_farm", "foxes.algorithms.Downwind.calc_points", "foxes.algorithms.Downwind.finalize", "foxes.algorithms.Downwind.get_model", "foxes.algorithms.Downwind.init_states", "foxes.algorithms.Downwind.initialize", "foxes.algorithms.Iterative", "foxes.algorithms.Iterative.__init__", "foxes.algorithms.Iterative.calc_farm", "foxes.algorithms.Iterative.get_model", "foxes.algorithms.Iterative.initialize", "foxes.algorithms.Iterative.iterations", "foxes.algorithms.Iterative.set_urelax", "foxes.algorithms.Iterative.urelax", "foxes.algorithms.Sequential", "foxes.algorithms.Sequential.__init__", "foxes.algorithms.Sequential.__iter__", "foxes.algorithms.Sequential.__next__", "foxes.algorithms.Sequential.calc_farm", "foxes.algorithms.Sequential.calc_points", "foxes.algorithms.Sequential.counter", "foxes.algorithms.Sequential.cur_farm_results", "foxes.algorithms.Sequential.cur_point_results", "foxes.algorithms.Sequential.farm_results", "foxes.algorithms.Sequential.fdata", "foxes.algorithms.Sequential.get_model", "foxes.algorithms.Sequential.index", "foxes.algorithms.Sequential.iterating", "foxes.algorithms.Sequential.mdata", "foxes.algorithms.Sequential.point_results", "foxes.algorithms.Sequential.prev_farm_results", "foxes.algorithms.Sequential.size", "foxes.algorithms.Sequential.states_i0", "foxes.algorithms.Sequential.tdata", "foxes.algorithms.Sequential.weight", "foxes.algorithms.downwind.models.FarmWakesCalculation", "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate", "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.downwind.models.InitFarmData", "foxes.algorithms.downwind.models.InitFarmData.__init__", "foxes.algorithms.downwind.models.InitFarmData.calculate", "foxes.algorithms.downwind.models.InitFarmData.output_farm_vars", "foxes.algorithms.downwind.models.PointWakesCalculation", "foxes.algorithms.downwind.models.PointWakesCalculation.__init__", "foxes.algorithms.downwind.models.PointWakesCalculation.calculate", "foxes.algorithms.downwind.models.PointWakesCalculation.initialize", "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars", "foxes.algorithms.downwind.models.PointWakesCalculation.sub_models", "foxes.algorithms.downwind.models.ReorderFarmOutput", "foxes.algorithms.downwind.models.ReorderFarmOutput.__init__", "foxes.algorithms.downwind.models.ReorderFarmOutput.calculate", "foxes.algorithms.downwind.models.ReorderFarmOutput.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbFarmResults", "foxes.algorithms.downwind.models.SetAmbFarmResults.__init__", "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate", "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbPointResults", "foxes.algorithms.downwind.models.SetAmbPointResults.__init__", "foxes.algorithms.downwind.models.SetAmbPointResults.calculate", "foxes.algorithms.downwind.models.SetAmbPointResults.initialize", "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars", "foxes.algorithms.iterative.ConvCrit", "foxes.algorithms.iterative.ConvCrit.__init__", "foxes.algorithms.iterative.ConvCrit.check_converged", "foxes.algorithms.iterative.ConvCrit.get_deltas", "foxes.algorithms.iterative.ConvCritList", "foxes.algorithms.iterative.ConvCritList.__init__", "foxes.algorithms.iterative.ConvCritList.add_crit", "foxes.algorithms.iterative.ConvCritList.check_converged", "foxes.algorithms.iterative.ConvCritList.get_deltas", "foxes.algorithms.iterative.ConvVarDelta", "foxes.algorithms.iterative.ConvVarDelta.__init__", "foxes.algorithms.iterative.ConvVarDelta.check_converged", "foxes.algorithms.iterative.ConvVarDelta.get_deltas", "foxes.algorithms.iterative.DefaultConv", "foxes.algorithms.iterative.DefaultConv.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation", "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate", "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.iterative.models.FarmWakesCalculation.sub_models", "foxes.algorithms.iterative.models.URelax", "foxes.algorithms.iterative.models.URelax.__init__", "foxes.algorithms.iterative.models.URelax.calculate", "foxes.algorithms.iterative.models.URelax.output_farm_vars", "foxes.algorithms.sequential.SequentialPlugin", "foxes.algorithms.sequential.SequentialPlugin.__init__", "foxes.algorithms.sequential.SequentialPlugin.finalize", "foxes.algorithms.sequential.SequentialPlugin.initialize", "foxes.algorithms.sequential.SequentialPlugin.update", "foxes.algorithms.sequential.models.SeqState", "foxes.algorithms.sequential.models.SeqState.__init__", "foxes.algorithms.sequential.models.SeqState.calculate", "foxes.algorithms.sequential.models.SeqState.counter", "foxes.algorithms.sequential.models.SeqState.index", "foxes.algorithms.sequential.models.SeqState.initialize", "foxes.algorithms.sequential.models.SeqState.output_point_vars", "foxes.algorithms.sequential.models.SeqState.size", "foxes.algorithms.sequential.models.SeqState.sub_models", "foxes.algorithms.sequential.models.SeqState.weights", "foxes.constants.AMB_TARGET_RESULTS", "foxes.constants.DTYPE", "foxes.constants.DTYPE.T", "foxes.constants.DTYPE.__abs__", "foxes.constants.DTYPE.__add__", "foxes.constants.DTYPE.__and__", "foxes.constants.DTYPE.__array__", "foxes.constants.DTYPE.__array_interface__", "foxes.constants.DTYPE.__array_priority__", "foxes.constants.DTYPE.__array_struct__", "foxes.constants.DTYPE.__array_wrap__", "foxes.constants.DTYPE.__bool__", "foxes.constants.DTYPE.__class_getitem__", "foxes.constants.DTYPE.__divmod__", "foxes.constants.DTYPE.__eq__", "foxes.constants.DTYPE.__float__", "foxes.constants.DTYPE.__floordiv__", "foxes.constants.DTYPE.__format__", "foxes.constants.DTYPE.__ge__", "foxes.constants.DTYPE.__getitem__", "foxes.constants.DTYPE.__gt__", "foxes.constants.DTYPE.__hash__", "foxes.constants.DTYPE.__int__", "foxes.constants.DTYPE.__invert__", "foxes.constants.DTYPE.__le__", "foxes.constants.DTYPE.__lshift__", "foxes.constants.DTYPE.__lt__", "foxes.constants.DTYPE.__mod__", "foxes.constants.DTYPE.__mul__", "foxes.constants.DTYPE.__ne__", "foxes.constants.DTYPE.__neg__", "foxes.constants.DTYPE.__new__", "foxes.constants.DTYPE.__or__", "foxes.constants.DTYPE.__pos__", "foxes.constants.DTYPE.__pow__", "foxes.constants.DTYPE.__radd__", "foxes.constants.DTYPE.__rand__", "foxes.constants.DTYPE.__rdivmod__", "foxes.constants.DTYPE.__reduce__", "foxes.constants.DTYPE.__repr__", "foxes.constants.DTYPE.__rfloordiv__", "foxes.constants.DTYPE.__rlshift__", "foxes.constants.DTYPE.__rmod__", "foxes.constants.DTYPE.__rmul__", "foxes.constants.DTYPE.__ror__", "foxes.constants.DTYPE.__rpow__", "foxes.constants.DTYPE.__rrshift__", "foxes.constants.DTYPE.__rshift__", "foxes.constants.DTYPE.__rsub__", "foxes.constants.DTYPE.__rtruediv__", "foxes.constants.DTYPE.__rxor__", "foxes.constants.DTYPE.__sizeof__", "foxes.constants.DTYPE.__str__", "foxes.constants.DTYPE.__sub__", "foxes.constants.DTYPE.__truediv__", "foxes.constants.DTYPE.__xor__", "foxes.constants.DTYPE.all", "foxes.constants.DTYPE.any", "foxes.constants.DTYPE.argmax", "foxes.constants.DTYPE.argmin", "foxes.constants.DTYPE.argsort", "foxes.constants.DTYPE.as_integer_ratio", "foxes.constants.DTYPE.astype", "foxes.constants.DTYPE.base", "foxes.constants.DTYPE.byteswap", "foxes.constants.DTYPE.choose", "foxes.constants.DTYPE.clip", "foxes.constants.DTYPE.compress", "foxes.constants.DTYPE.conj", "foxes.constants.DTYPE.conjugate", "foxes.constants.DTYPE.copy", "foxes.constants.DTYPE.cumprod", "foxes.constants.DTYPE.cumsum", "foxes.constants.DTYPE.data", "foxes.constants.DTYPE.diagonal", "foxes.constants.DTYPE.dtype", "foxes.constants.DTYPE.dump", "foxes.constants.DTYPE.dumps", "foxes.constants.DTYPE.fill", "foxes.constants.DTYPE.flags", "foxes.constants.DTYPE.flat", "foxes.constants.DTYPE.flatten", "foxes.constants.DTYPE.getfield", "foxes.constants.DTYPE.imag", "foxes.constants.DTYPE.is_integer", "foxes.constants.DTYPE.item", "foxes.constants.DTYPE.itemset", "foxes.constants.DTYPE.itemsize", "foxes.constants.DTYPE.max", "foxes.constants.DTYPE.mean", "foxes.constants.DTYPE.min", "foxes.constants.DTYPE.nbytes", "foxes.constants.DTYPE.ndim", "foxes.constants.DTYPE.newbyteorder", "foxes.constants.DTYPE.nonzero", "foxes.constants.DTYPE.prod", "foxes.constants.DTYPE.ptp", "foxes.constants.DTYPE.put", "foxes.constants.DTYPE.ravel", "foxes.constants.DTYPE.real", "foxes.constants.DTYPE.repeat", "foxes.constants.DTYPE.reshape", "foxes.constants.DTYPE.resize", "foxes.constants.DTYPE.round", "foxes.constants.DTYPE.searchsorted", "foxes.constants.DTYPE.setfield", "foxes.constants.DTYPE.setflags", "foxes.constants.DTYPE.shape", "foxes.constants.DTYPE.size", "foxes.constants.DTYPE.sort", "foxes.constants.DTYPE.squeeze", "foxes.constants.DTYPE.std", "foxes.constants.DTYPE.strides", "foxes.constants.DTYPE.sum", "foxes.constants.DTYPE.swapaxes", "foxes.constants.DTYPE.take", "foxes.constants.DTYPE.tobytes", "foxes.constants.DTYPE.tofile", "foxes.constants.DTYPE.tolist", "foxes.constants.DTYPE.tostring", "foxes.constants.DTYPE.trace", "foxes.constants.DTYPE.transpose", "foxes.constants.DTYPE.var", "foxes.constants.DTYPE.view", "foxes.constants.FARM", "foxes.constants.GW", "foxes.constants.ITYPE", "foxes.constants.ITYPE.__abs__", "foxes.constants.ITYPE.__add__", "foxes.constants.ITYPE.__and__", "foxes.constants.ITYPE.__bool__", "foxes.constants.ITYPE.__class_getitem__", "foxes.constants.ITYPE.__divmod__", "foxes.constants.ITYPE.__eq__", "foxes.constants.ITYPE.__float__", "foxes.constants.ITYPE.__floordiv__", "foxes.constants.ITYPE.__ge__", "foxes.constants.ITYPE.__gt__", "foxes.constants.ITYPE.__hash__", "foxes.constants.ITYPE.__index__", "foxes.constants.ITYPE.__int__", "foxes.constants.ITYPE.__invert__", "foxes.constants.ITYPE.__le__", "foxes.constants.ITYPE.__lshift__", "foxes.constants.ITYPE.__lt__", "foxes.constants.ITYPE.__mod__", "foxes.constants.ITYPE.__mul__", "foxes.constants.ITYPE.__ne__", "foxes.constants.ITYPE.__neg__", "foxes.constants.ITYPE.__new__", "foxes.constants.ITYPE.__or__", "foxes.constants.ITYPE.__pos__", "foxes.constants.ITYPE.__pow__", "foxes.constants.ITYPE.__radd__", "foxes.constants.ITYPE.__rand__", "foxes.constants.ITYPE.__rdivmod__", "foxes.constants.ITYPE.__repr__", "foxes.constants.ITYPE.__rfloordiv__", "foxes.constants.ITYPE.__rlshift__", "foxes.constants.ITYPE.__rmod__", "foxes.constants.ITYPE.__rmul__", "foxes.constants.ITYPE.__ror__", "foxes.constants.ITYPE.__rpow__", "foxes.constants.ITYPE.__rrshift__", "foxes.constants.ITYPE.__rshift__", "foxes.constants.ITYPE.__rsub__", "foxes.constants.ITYPE.__rtruediv__", "foxes.constants.ITYPE.__rxor__", "foxes.constants.ITYPE.__str__", "foxes.constants.ITYPE.__sub__", "foxes.constants.ITYPE.__truediv__", "foxes.constants.ITYPE.__xor__", "foxes.constants.ITYPE.bit_count", "foxes.constants.ITYPE.denominator", "foxes.constants.ITYPE.is_integer", "foxes.constants.ITYPE.numerator", "foxes.constants.KAPPA", "foxes.constants.MW", "foxes.constants.POINT", "foxes.constants.POINTS", "foxes.constants.POP", "foxes.constants.P_UNITS", "foxes.constants.STATE", "foxes.constants.STATES_SEL", "foxes.constants.STATE_SOURCE_ORDERI", "foxes.constants.STATE_TARGET", "foxes.constants.STATE_TARGET_TPOINT", "foxes.constants.STATE_TURBINE", "foxes.constants.TARGET", "foxes.constants.TARGETS", "foxes.constants.TIME", "foxes.constants.TMODELS", "foxes.constants.TMODEL_SELS", "foxes.constants.TNAME", "foxes.constants.TPOINT", "foxes.constants.TPOINTS", "foxes.constants.TURBINE", "foxes.constants.TW", "foxes.constants.TWEIGHTS", "foxes.constants.VALID", "foxes.constants.VARS", "foxes.constants.W", "foxes.constants.XYH", "foxes.constants.kW", "foxes.core.Algorithm", "foxes.core.Algorithm.__init__", "foxes.core.Algorithm.chunked", "foxes.core.Algorithm.del_model_data", "foxes.core.Algorithm.finalize", "foxes.core.Algorithm.get_model_data", "foxes.core.Algorithm.get_models_data", "foxes.core.Algorithm.get_models_idata", "foxes.core.Algorithm.idata_mem", "foxes.core.Algorithm.initialize", "foxes.core.Algorithm.new", "foxes.core.Algorithm.new_point_data", "foxes.core.Algorithm.print", "foxes.core.Algorithm.store_model_data", "foxes.core.Algorithm.update_n_turbines", "foxes.core.AxialInductionModel", "foxes.core.AxialInductionModel.ct2a", "foxes.core.Data", "foxes.core.Data.__init__", "foxes.core.Data.add", "foxes.core.Data.get_slice", "foxes.core.Data.n_states", "foxes.core.Data.n_turbines", "foxes.core.Data.states_i0", "foxes.core.DataCalcModel", "foxes.core.DataCalcModel.calculate", "foxes.core.DataCalcModel.run_calculation", "foxes.core.ExtendedStates", "foxes.core.ExtendedStates.__init__", "foxes.core.ExtendedStates.append", "foxes.core.ExtendedStates.calculate", "foxes.core.ExtendedStates.index", "foxes.core.ExtendedStates.output_point_vars", "foxes.core.ExtendedStates.size", "foxes.core.ExtendedStates.sub_models", "foxes.core.ExtendedStates.weights", "foxes.core.FData", "foxes.core.FData.__init__", "foxes.core.FarmController", "foxes.core.FarmController.__init__", "foxes.core.FarmController.calculate", "foxes.core.FarmController.collect_models", "foxes.core.FarmController.finalize", "foxes.core.FarmController.initialize", "foxes.core.FarmController.load_data", "foxes.core.FarmController.output_farm_vars", "foxes.core.FarmController.set_pars", "foxes.core.FarmController.sub_models", "foxes.core.FarmDataModel", "foxes.core.FarmDataModel.__init__", "foxes.core.FarmDataModel.calculate", "foxes.core.FarmDataModel.ensure_variables", "foxes.core.FarmDataModel.output_farm_vars", "foxes.core.FarmDataModel.run_calculation", "foxes.core.FarmDataModelList", "foxes.core.FarmDataModelList.__init__", "foxes.core.FarmDataModelList.append", "foxes.core.FarmDataModelList.calculate", "foxes.core.FarmDataModelList.insert", "foxes.core.FarmDataModelList.output_farm_vars", "foxes.core.FarmDataModelList.sub_models", "foxes.core.FarmModel", "foxes.core.GroundModel", "foxes.core.GroundModel.contribute_to_farm_wakes", "foxes.core.GroundModel.contribute_to_point_wakes", "foxes.core.GroundModel.finalize_farm_wakes", "foxes.core.GroundModel.finalize_point_wakes", "foxes.core.GroundModel.new_farm_wake_deltas", "foxes.core.GroundModel.new_point_wake_deltas", "foxes.core.MData", "foxes.core.MData.__init__", "foxes.core.Model", "foxes.core.Model.__init__", "foxes.core.Model.__repr__", "foxes.core.Model.data_to_store", "foxes.core.Model.finalize", "foxes.core.Model.from_data_or_store", "foxes.core.Model.get_data", "foxes.core.Model.initialize", "foxes.core.Model.initialized", "foxes.core.Model.load_data", "foxes.core.Model.model_id", "foxes.core.Model.sub_models", "foxes.core.Model.var", "foxes.core.PartialWakesModel", "foxes.core.PartialWakesModel.check_wmodel", "foxes.core.PartialWakesModel.contribute", "foxes.core.PartialWakesModel.finalize_wakes", "foxes.core.PartialWakesModel.get_wake_points", "foxes.core.PartialWakesModel.new", "foxes.core.PartialWakesModel.new_wake_deltas", "foxes.core.PointDataModel", "foxes.core.PointDataModel.calculate", "foxes.core.PointDataModel.ensure_variables", "foxes.core.PointDataModel.output_point_vars", "foxes.core.PointDataModel.run_calculation", "foxes.core.PointDataModelList", "foxes.core.PointDataModelList.__init__", "foxes.core.PointDataModelList.append", "foxes.core.PointDataModelList.calculate", "foxes.core.PointDataModelList.output_point_vars", "foxes.core.PointDataModelList.sub_models", "foxes.core.RotorModel", "foxes.core.RotorModel.__init__", "foxes.core.RotorModel.calculate", "foxes.core.RotorModel.design_points", "foxes.core.RotorModel.eval_rpoint_results", "foxes.core.RotorModel.get_rotor_points", "foxes.core.RotorModel.n_rotor_points", "foxes.core.RotorModel.new", "foxes.core.RotorModel.output_farm_vars", "foxes.core.RotorModel.rotor_point_weights", "foxes.core.States", "foxes.core.States.index", "foxes.core.States.load_data", "foxes.core.States.new", "foxes.core.States.output_point_vars", "foxes.core.States.size", "foxes.core.States.weights", "foxes.core.TData", "foxes.core.TData.__init__", "foxes.core.TData.from_points", "foxes.core.TData.from_tpoints", "foxes.core.TData.n_targets", "foxes.core.TData.n_tpoints", "foxes.core.TData.tpoint_mean", "foxes.core.Turbine", "foxes.core.Turbine.__init__", "foxes.core.Turbine.add_model", "foxes.core.Turbine.insert_model", "foxes.core.TurbineInductionModel", "foxes.core.TurbineInductionModel.affects_downwind", "foxes.core.TurbineModel", "foxes.core.TurbineModel.calculate", "foxes.core.TurbineModel.new", "foxes.core.TurbineType", "foxes.core.TurbineType.__init__", "foxes.core.TurbineType.__repr__", "foxes.core.TurbineType.modify_cutin", "foxes.core.TurbineType.new", "foxes.core.VerticalProfile", "foxes.core.VerticalProfile.calculate", "foxes.core.VerticalProfile.input_vars", "foxes.core.VerticalProfile.new", "foxes.core.WakeFrame", "foxes.core.WakeFrame.calc_centreline_integral", "foxes.core.WakeFrame.calc_order", "foxes.core.WakeFrame.get_centreline_points", "foxes.core.WakeFrame.get_wake_coos", "foxes.core.WakeFrame.get_wake_modelling_data", "foxes.core.WakeFrame.new", "foxes.core.WakeK", "foxes.core.WakeK.__call__", "foxes.core.WakeK.__init__", "foxes.core.WakeK.all_none", "foxes.core.WakeK.repr", "foxes.core.WakeK.use_amb_ti", "foxes.core.WakeModel", "foxes.core.WakeModel.affects_downwind", "foxes.core.WakeModel.contribute", "foxes.core.WakeModel.finalize_wake_deltas", "foxes.core.WakeModel.new", "foxes.core.WakeModel.new_wake_deltas", "foxes.core.WakeSuperposition", "foxes.core.WakeSuperposition.add_wake", "foxes.core.WakeSuperposition.calc_final_wake_delta", "foxes.core.WindFarm", "foxes.core.WindFarm.__init__", "foxes.core.WindFarm.add_turbine", "foxes.core.WindFarm.n_turbines", "foxes.core.WindFarm.turbine_names", "foxes.data.StaticData", "foxes.data.StaticData.__init__", "foxes.data.parse_Pct_file_name", "foxes.data.parse_Pct_two_files", "foxes.input.farm_layout.add_from_csv", "foxes.input.farm_layout.add_from_df", "foxes.input.farm_layout.add_from_file", "foxes.input.farm_layout.add_from_json", "foxes.input.farm_layout.add_grid", "foxes.input.farm_layout.add_random", "foxes.input.farm_layout.add_row", "foxes.input.states.FieldDataNC", "foxes.input.states.FieldDataNC.__init__", "foxes.input.states.FieldDataNC.calculate", "foxes.input.states.FieldDataNC.index", "foxes.input.states.FieldDataNC.load_data", "foxes.input.states.FieldDataNC.output_point_vars", "foxes.input.states.FieldDataNC.size", "foxes.input.states.FieldDataNC.weights", "foxes.input.states.MultiHeightNCStates", "foxes.input.states.MultiHeightNCStates.__init__", "foxes.input.states.MultiHeightNCStates.load_data", "foxes.input.states.MultiHeightNCTimeseries", "foxes.input.states.MultiHeightNCTimeseries.__init__", "foxes.input.states.MultiHeightStates", "foxes.input.states.MultiHeightStates.RDICT", "foxes.input.states.MultiHeightStates.__init__", "foxes.input.states.MultiHeightStates.calculate", "foxes.input.states.MultiHeightStates.finalize", "foxes.input.states.MultiHeightStates.index", "foxes.input.states.MultiHeightStates.load_data", "foxes.input.states.MultiHeightStates.output_point_vars", "foxes.input.states.MultiHeightStates.reset", "foxes.input.states.MultiHeightStates.size", "foxes.input.states.MultiHeightStates.weights", "foxes.input.states.MultiHeightTimeseries", "foxes.input.states.MultiHeightTimeseries.RDICT", "foxes.input.states.ScanWS", "foxes.input.states.ScanWS.__init__", "foxes.input.states.ScanWS.calculate", "foxes.input.states.ScanWS.load_data", "foxes.input.states.ScanWS.output_point_vars", "foxes.input.states.ScanWS.size", "foxes.input.states.ScanWS.weights", "foxes.input.states.SingleStateStates", "foxes.input.states.SingleStateStates.__init__", "foxes.input.states.SingleStateStates.calculate", "foxes.input.states.SingleStateStates.initialize", "foxes.input.states.SingleStateStates.output_point_vars", "foxes.input.states.SingleStateStates.size", "foxes.input.states.SingleStateStates.sub_models", "foxes.input.states.SingleStateStates.weights", "foxes.input.states.StatesTable", "foxes.input.states.StatesTable.RDICT", "foxes.input.states.StatesTable.__init__", "foxes.input.states.StatesTable.calculate", "foxes.input.states.StatesTable.finalize", "foxes.input.states.StatesTable.index", "foxes.input.states.StatesTable.initialize", "foxes.input.states.StatesTable.load_data", "foxes.input.states.StatesTable.output_point_vars", "foxes.input.states.StatesTable.reset", "foxes.input.states.StatesTable.size", "foxes.input.states.StatesTable.sub_models", "foxes.input.states.StatesTable.weights", "foxes.input.states.TabStates", "foxes.input.states.TabStates.__init__", "foxes.input.states.TabStates.load_data", "foxes.input.states.Timeseries", "foxes.input.states.Timeseries.RDICT", "foxes.input.states.create.create_random_abl_states", "foxes.input.states.create.random_timseries_data", "foxes.input.states.create.write_random_abl_states", "foxes.input.windio.WindioRunner", "foxes.input.windio.WindioRunner.__init__", "foxes.input.windio.WindioRunner.finalize", "foxes.input.windio.WindioRunner.initialize", "foxes.input.windio.WindioRunner.initialized", "foxes.input.windio.WindioRunner.print", "foxes.input.windio.WindioRunner.run", "foxes.input.windio.WindioRunner.run_farm_calc", "foxes.input.windio.WindioRunner.run_outputs", "foxes.input.windio.get_states", "foxes.input.windio.read_attributes", "foxes.input.windio.read_layout", "foxes.input.windio.read_outputs", "foxes.input.windio.read_turbine_type", "foxes.input.windio.read_windio", "foxes.models.ModelBook", "foxes.models.ModelBook.__getitem__", "foxes.models.ModelBook.__init__", "foxes.models.ModelBook.default_partial_wakes", "foxes.models.ModelBook.finalize", "foxes.models.ModelBook.get", "foxes.models.ModelBook.print_toc", "foxes.models.axial_induction.BetzAxialInduction", "foxes.models.axial_induction.BetzAxialInduction.__init__", "foxes.models.axial_induction.BetzAxialInduction.ct2a", "foxes.models.axial_induction.MadsenAxialInduction", "foxes.models.axial_induction.MadsenAxialInduction.__init__", "foxes.models.axial_induction.MadsenAxialInduction.ct2a", "foxes.models.farm_controllers.BasicFarmController", "foxes.models.farm_models.Turbine2FarmModel", "foxes.models.farm_models.Turbine2FarmModel.__init__", "foxes.models.farm_models.Turbine2FarmModel.__repr__", "foxes.models.farm_models.Turbine2FarmModel.calculate", "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars", "foxes.models.farm_models.Turbine2FarmModel.sub_models", "foxes.models.ground_models.GroundMirror", "foxes.models.ground_models.GroundMirror.__init__", "foxes.models.ground_models.NoGround", "foxes.models.ground_models.WakeMirror", "foxes.models.ground_models.WakeMirror.__init__", "foxes.models.ground_models.WakeMirror.contribute_to_farm_wakes", "foxes.models.ground_models.WakeMirror.contribute_to_point_wakes", "foxes.models.partial_wakes.PartialAxiwake", "foxes.models.partial_wakes.PartialAxiwake.__init__", "foxes.models.partial_wakes.PartialAxiwake.__repr__", "foxes.models.partial_wakes.PartialAxiwake.check_wmodel", "foxes.models.partial_wakes.PartialAxiwake.contribute", "foxes.models.partial_wakes.PartialCentre", "foxes.models.partial_wakes.PartialCentre.get_wake_points", "foxes.models.partial_wakes.PartialGrid", "foxes.models.partial_wakes.PartialGrid.__init__", "foxes.models.partial_wakes.PartialSegregated", "foxes.models.partial_wakes.PartialSegregated.__init__", "foxes.models.partial_wakes.PartialSegregated.__repr__", "foxes.models.partial_wakes.PartialSegregated.finalize_wakes", "foxes.models.partial_wakes.PartialSegregated.get_wake_points", "foxes.models.partial_wakes.PartialSegregated.sub_models", "foxes.models.partial_wakes.PartialTopHat", "foxes.models.partial_wakes.PartialTopHat.__init__", "foxes.models.partial_wakes.PartialTopHat.check_wmodel", "foxes.models.partial_wakes.PartialTopHat.contribute", "foxes.models.partial_wakes.PartialTopHat.initialize", "foxes.models.partial_wakes.PartialTopHat.sub_models", "foxes.models.partial_wakes.RotorPoints", "foxes.models.partial_wakes.RotorPoints.finalize_wakes", "foxes.models.partial_wakes.RotorPoints.get_wake_points", "foxes.models.point_models.SetUniformData", "foxes.models.point_models.SetUniformData.__init__", "foxes.models.point_models.SetUniformData.calculate", "foxes.models.point_models.SetUniformData.load_data", "foxes.models.point_models.SetUniformData.output_point_vars", "foxes.models.point_models.TKE2TI", "foxes.models.point_models.TKE2TI.calculate", "foxes.models.point_models.TKE2TI.output_point_vars", "foxes.models.point_models.WakeDeltas", "foxes.models.point_models.WakeDeltas.__init__", "foxes.models.point_models.WakeDeltas.calculate", "foxes.models.point_models.WakeDeltas.output_point_vars", "foxes.models.rotor_models.CentreRotor", "foxes.models.rotor_models.CentreRotor.design_points", "foxes.models.rotor_models.CentreRotor.eval_rpoint_results", "foxes.models.rotor_models.CentreRotor.get_rotor_points", "foxes.models.rotor_models.CentreRotor.n_rotor_points", "foxes.models.rotor_models.CentreRotor.rotor_point_weights", "foxes.models.rotor_models.GridRotor", "foxes.models.rotor_models.GridRotor.__init__", "foxes.models.rotor_models.GridRotor.__repr__", "foxes.models.rotor_models.GridRotor.design_points", "foxes.models.rotor_models.GridRotor.initialize", "foxes.models.rotor_models.GridRotor.n_rotor_points", "foxes.models.rotor_models.GridRotor.rotor_point_weights", "foxes.models.rotor_models.LevelRotor", "foxes.models.rotor_models.LevelRotor.__init__", "foxes.models.rotor_models.LevelRotor.__repr__", "foxes.models.rotor_models.LevelRotor.design_points", "foxes.models.rotor_models.LevelRotor.initialize", "foxes.models.rotor_models.LevelRotor.n_rotor_points", "foxes.models.rotor_models.LevelRotor.rotor_point_weights", "foxes.models.turbine_models.Calculator", "foxes.models.turbine_models.Calculator.__init__", "foxes.models.turbine_models.Calculator.__repr__", "foxes.models.turbine_models.Calculator.calculate", "foxes.models.turbine_models.Calculator.output_farm_vars", "foxes.models.turbine_models.LookupTable", "foxes.models.turbine_models.LookupTable.__init__", "foxes.models.turbine_models.LookupTable.calculate", "foxes.models.turbine_models.LookupTable.load_data", "foxes.models.turbine_models.LookupTable.output_farm_vars", "foxes.models.turbine_models.PowerMask", "foxes.models.turbine_models.PowerMask.__init__", "foxes.models.turbine_models.PowerMask.__repr__", "foxes.models.turbine_models.PowerMask.calculate", "foxes.models.turbine_models.PowerMask.initialize", "foxes.models.turbine_models.PowerMask.output_farm_vars", "foxes.models.turbine_models.PowerMask.sub_models", "foxes.models.turbine_models.RotorCentreCalc", "foxes.models.turbine_models.RotorCentreCalc.__init__", "foxes.models.turbine_models.RotorCentreCalc.calculate", "foxes.models.turbine_models.RotorCentreCalc.initialize", "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars", "foxes.models.turbine_models.RotorCentreCalc.sub_models", "foxes.models.turbine_models.SectorManagement", "foxes.models.turbine_models.SectorManagement.__init__", "foxes.models.turbine_models.SectorManagement.calculate", "foxes.models.turbine_models.SectorManagement.initialize", "foxes.models.turbine_models.SectorManagement.output_farm_vars", "foxes.models.turbine_models.SetFarmVars", "foxes.models.turbine_models.SetFarmVars.__init__", "foxes.models.turbine_models.SetFarmVars.add_var", "foxes.models.turbine_models.SetFarmVars.calculate", "foxes.models.turbine_models.SetFarmVars.load_data", "foxes.models.turbine_models.SetFarmVars.output_farm_vars", "foxes.models.turbine_models.SetFarmVars.reset", "foxes.models.turbine_models.TableFactors", "foxes.models.turbine_models.TableFactors.__init__", "foxes.models.turbine_models.TableFactors.calculate", "foxes.models.turbine_models.TableFactors.initialize", "foxes.models.turbine_models.TableFactors.output_farm_vars", "foxes.models.turbine_models.Thrust2Ct", "foxes.models.turbine_models.Thrust2Ct.__init__", "foxes.models.turbine_models.Thrust2Ct.__repr__", "foxes.models.turbine_models.Thrust2Ct.calculate", "foxes.models.turbine_models.Thrust2Ct.output_farm_vars", "foxes.models.turbine_models.YAW2YAWM", "foxes.models.turbine_models.YAW2YAWM.calculate", "foxes.models.turbine_models.YAW2YAWM.output_farm_vars", "foxes.models.turbine_models.YAWM2YAW", "foxes.models.turbine_models.YAWM2YAW.calculate", "foxes.models.turbine_models.YAWM2YAW.output_farm_vars", "foxes.models.turbine_models.kTI", "foxes.models.turbine_models.kTI.__init__", "foxes.models.turbine_models.kTI.__repr__", "foxes.models.turbine_models.kTI.calculate", "foxes.models.turbine_models.kTI.output_farm_vars", "foxes.models.turbine_types.CpCtFile", "foxes.models.turbine_types.CpCtFile.__init__", "foxes.models.turbine_types.CpCtFromTwo", "foxes.models.turbine_types.CpCtFromTwo.__init__", "foxes.models.turbine_types.NullType", "foxes.models.turbine_types.NullType.calculate", "foxes.models.turbine_types.NullType.output_farm_vars", "foxes.models.turbine_types.PCtFile", "foxes.models.turbine_types.PCtFile.__init__", "foxes.models.turbine_types.PCtFile.__repr__", "foxes.models.turbine_types.PCtFile.calculate", "foxes.models.turbine_types.PCtFile.finalize", "foxes.models.turbine_types.PCtFile.load_data", "foxes.models.turbine_types.PCtFile.modify_cutin", "foxes.models.turbine_types.PCtFile.output_farm_vars", "foxes.models.turbine_types.PCtFromTwo", "foxes.models.turbine_types.PCtFromTwo.__init__", "foxes.models.turbine_types.PCtFromTwo.__repr__", "foxes.models.turbine_types.PCtFromTwo.calculate", "foxes.models.turbine_types.PCtFromTwo.finalize", "foxes.models.turbine_types.PCtFromTwo.load_data", "foxes.models.turbine_types.PCtFromTwo.modify_cutin", "foxes.models.turbine_types.PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsRho2PCtFromTwo", "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate", "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize", "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data", "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsTI2PCtFromTwo", "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__", "foxes.models.turbine_types.WsTI2PCtFromTwo.__repr__", "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate", "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize", "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data", "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogStableWsProfile", "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogStableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogWsProfile", "foxes.models.vertical_profiles.ABLLogWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogWsProfile.input_vars", "foxes.models.vertical_profiles.DataProfile", "foxes.models.vertical_profiles.DataProfile.__init__", "foxes.models.vertical_profiles.DataProfile.calculate", "foxes.models.vertical_profiles.DataProfile.input_vars", "foxes.models.vertical_profiles.ShearedProfile", "foxes.models.vertical_profiles.ShearedProfile.calculate", "foxes.models.vertical_profiles.ShearedProfile.input_vars", "foxes.models.vertical_profiles.UniformProfile", "foxes.models.vertical_profiles.UniformProfile.__init__", "foxes.models.vertical_profiles.UniformProfile.calculate", "foxes.models.vertical_profiles.UniformProfile.input_vars", "foxes.models.wake_frames.FarmOrder", "foxes.models.wake_frames.FarmOrder.__init__", "foxes.models.wake_frames.FarmOrder.calc_order", "foxes.models.wake_frames.FarmOrder.get_centreline_points", "foxes.models.wake_frames.FarmOrder.get_wake_coos", "foxes.models.wake_frames.FarmOrder.sub_models", "foxes.models.wake_frames.RotorWD", "foxes.models.wake_frames.RotorWD.__init__", "foxes.models.wake_frames.RotorWD.calc_order", "foxes.models.wake_frames.RotorWD.get_centreline_points", "foxes.models.wake_frames.RotorWD.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes", "foxes.models.wake_frames.SeqDynamicWakes.__init__", "foxes.models.wake_frames.SeqDynamicWakes.__repr__", "foxes.models.wake_frames.SeqDynamicWakes.calc_order", "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data", "foxes.models.wake_frames.SeqDynamicWakes.initialize", "foxes.models.wake_frames.Streamlines2D", "foxes.models.wake_frames.Streamlines2D.__init__", "foxes.models.wake_frames.Streamlines2D.__repr__", "foxes.models.wake_frames.Streamlines2D.calc_order", "foxes.models.wake_frames.Streamlines2D.get_centreline_points", "foxes.models.wake_frames.Streamlines2D.get_streamline_data", "foxes.models.wake_frames.Streamlines2D.get_wake_coos", "foxes.models.wake_frames.Timelines", "foxes.models.wake_frames.Timelines.__init__", "foxes.models.wake_frames.Timelines.__repr__", "foxes.models.wake_frames.Timelines.calc_order", "foxes.models.wake_frames.Timelines.get_centreline_points", "foxes.models.wake_frames.Timelines.get_wake_coos", "foxes.models.wake_frames.Timelines.initialize", "foxes.models.wake_frames.YawedWakes", "foxes.models.wake_frames.YawedWakes.__init__", "foxes.models.wake_frames.YawedWakes.__repr__", "foxes.models.wake_frames.YawedWakes.calc_order", "foxes.models.wake_frames.YawedWakes.get_centreline_points", "foxes.models.wake_frames.YawedWakes.get_wake_coos", "foxes.models.wake_frames.YawedWakes.initialize", "foxes.models.wake_frames.YawedWakes.sub_models", "foxes.models.wake_models.AxisymmetricWakeModel", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_r", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_yz", "foxes.models.wake_models.DistSlicedWakeModel", "foxes.models.wake_models.DistSlicedWakeModel.__init__", "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_x_yz", "foxes.models.wake_models.DistSlicedWakeModel.contribute", "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.initialize", "foxes.models.wake_models.DistSlicedWakeModel.sub_models", "foxes.models.wake_models.GaussianWakeModel", "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma", "foxes.models.wake_models.GaussianWakeModel.calc_wakes_x_r", "foxes.models.wake_models.TopHatWakeModel", "foxes.models.wake_models.TopHatWakeModel.__init__", "foxes.models.wake_models.TopHatWakeModel.calc_centreline", "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius", "foxes.models.wake_models.TopHatWakeModel.calc_wakes_x_r", "foxes.models.wake_models.TopHatWakeModel.initialize", "foxes.models.wake_models.TopHatWakeModel.sub_models", "foxes.models.wake_models.induction.RankineHalfBody", "foxes.models.wake_models.induction.RankineHalfBody.__init__", "foxes.models.wake_models.induction.RankineHalfBody.__repr__", "foxes.models.wake_models.induction.RankineHalfBody.contribute", "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.initialize", "foxes.models.wake_models.induction.RankineHalfBody.new_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.sub_models", "foxes.models.wake_models.induction.Rathmann", "foxes.models.wake_models.induction.Rathmann.__init__", "foxes.models.wake_models.induction.Rathmann.__repr__", "foxes.models.wake_models.induction.Rathmann.contribute", "foxes.models.wake_models.induction.Rathmann.initialize", "foxes.models.wake_models.induction.Rathmann.new_wake_deltas", "foxes.models.wake_models.induction.Rathmann.sub_models", "foxes.models.wake_models.induction.SelfSimilar", "foxes.models.wake_models.induction.SelfSimilar.__init__", "foxes.models.wake_models.induction.SelfSimilar.__repr__", "foxes.models.wake_models.induction.SelfSimilar.contribute", "foxes.models.wake_models.induction.SelfSimilar.initialize", "foxes.models.wake_models.induction.SelfSimilar.new_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.sub_models", "foxes.models.wake_models.induction.SelfSimilar2020", "foxes.models.wake_models.induction.VortexSheet", "foxes.models.wake_models.induction.VortexSheet.__init__", "foxes.models.wake_models.induction.VortexSheet.__repr__", "foxes.models.wake_models.induction.VortexSheet.contribute", "foxes.models.wake_models.induction.VortexSheet.initialize", "foxes.models.wake_models.induction.VortexSheet.new_wake_deltas", "foxes.models.wake_models.induction.VortexSheet.sub_models", "foxes.models.wake_models.ti.CrespoHernandezTIWake", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__repr__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius", "foxes.models.wake_models.ti.CrespoHernandezTIWake.new_wake_deltas", "foxes.models.wake_models.ti.CrespoHernandezTIWake.sub_models", "foxes.models.wake_models.ti.IECTIWake", "foxes.models.wake_models.ti.IECTIWake.__init__", "foxes.models.wake_models.ti.IECTIWake.__repr__", "foxes.models.wake_models.ti.IECTIWake.calc_centreline", "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius", "foxes.models.wake_models.ti.IECTIWake.new_wake_deltas", "foxes.models.wake_models.ti.IECTIWake.sub_models", "foxes.models.wake_models.wind.Bastankhah2014", "foxes.models.wake_models.wind.Bastankhah2014.__init__", "foxes.models.wake_models.wind.Bastankhah2014.__repr__", "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma", "foxes.models.wake_models.wind.Bastankhah2014.initialize", "foxes.models.wake_models.wind.Bastankhah2014.sub_models", "foxes.models.wake_models.wind.Bastankhah2016", "foxes.models.wake_models.wind.Bastankhah2016.__init__", "foxes.models.wake_models.wind.Bastankhah2016.__repr__", "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_x_yz", "foxes.models.wake_models.wind.Bastankhah2016.initialize", "foxes.models.wake_models.wind.Bastankhah2016.sub_models", "foxes.models.wake_models.wind.Bastankhah2016Model", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.CHECK", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.MDATA_KEY", "foxes.models.wake_models.wind.Bastankhah2016Model.NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.PARS", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC_S", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Y_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Z_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.ST_SEL", "foxes.models.wake_models.wind.Bastankhah2016Model.X0", "foxes.models.wake_models.wind.Bastankhah2016Model.__init__", "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data", "foxes.models.wake_models.wind.Bastankhah2016Model.clean", "foxes.models.wake_models.wind.Bastankhah2016Model.get_data", "foxes.models.wake_models.wind.Bastankhah2016Model.has_data", "foxes.models.wake_models.wind.Bastankhah2016Model.initialize", "foxes.models.wake_models.wind.Bastankhah2016Model.pars", "foxes.models.wake_models.wind.Bastankhah2016Model.sub_models", "foxes.models.wake_models.wind.JensenWake", "foxes.models.wake_models.wind.JensenWake.__init__", "foxes.models.wake_models.wind.JensenWake.__repr__", "foxes.models.wake_models.wind.JensenWake.calc_centreline", "foxes.models.wake_models.wind.JensenWake.calc_wake_radius", "foxes.models.wake_models.wind.TurbOParkWake", "foxes.models.wake_models.wind.TurbOParkWake.__init__", "foxes.models.wake_models.wind.TurbOParkWake.__repr__", "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma", "foxes.models.wake_models.wind.TurbOParkWake.initialize", "foxes.models.wake_models.wind.TurbOParkWake.sub_models", "foxes.models.wake_models.wind.TurbOParkWakeIX", "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__", "foxes.models.wake_models.wind.TurbOParkWakeIX.__repr__", "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma", "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize", "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize", "foxes.models.wake_models.wind.TurbOParkWakeIX.new_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWakeIX.sub_models", "foxes.models.wake_superpositions.TILinear", "foxes.models.wake_superpositions.TILinear.__init__", "foxes.models.wake_superpositions.TILinear.__repr__", "foxes.models.wake_superpositions.TILinear.add_wake", "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta", "foxes.models.wake_superpositions.TIMax", "foxes.models.wake_superpositions.TIMax.__init__", "foxes.models.wake_superpositions.TIMax.__repr__", "foxes.models.wake_superpositions.TIMax.add_wake", "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta", "foxes.models.wake_superpositions.TIPow", "foxes.models.wake_superpositions.TIPow.__init__", "foxes.models.wake_superpositions.TIPow.__repr__", "foxes.models.wake_superpositions.TIPow.add_wake", "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta", "foxes.models.wake_superpositions.TIQuadratic", "foxes.models.wake_superpositions.TIQuadratic.__init__", "foxes.models.wake_superpositions.TIQuadratic.__repr__", "foxes.models.wake_superpositions.TIQuadratic.add_wake", "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear", "foxes.models.wake_superpositions.WSLinear.__init__", "foxes.models.wake_superpositions.WSLinear.__repr__", "foxes.models.wake_superpositions.WSLinear.add_wake", "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear.input_farm_vars", "foxes.models.wake_superpositions.WSLinearLocal", "foxes.models.wake_superpositions.WSLinearLocal.__init__", "foxes.models.wake_superpositions.WSLinearLocal.__repr__", "foxes.models.wake_superpositions.WSLinearLocal.add_wake", "foxes.models.wake_superpositions.WSLinearLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinearLocal.input_farm_vars", "foxes.models.wake_superpositions.WSMax", "foxes.models.wake_superpositions.WSMax.__init__", "foxes.models.wake_superpositions.WSMax.__repr__", "foxes.models.wake_superpositions.WSMax.add_wake", "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMax.input_farm_vars", "foxes.models.wake_superpositions.WSMaxLocal", "foxes.models.wake_superpositions.WSMaxLocal.__init__", "foxes.models.wake_superpositions.WSMaxLocal.__repr__", "foxes.models.wake_superpositions.WSMaxLocal.add_wake", "foxes.models.wake_superpositions.WSMaxLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMaxLocal.input_farm_vars", "foxes.models.wake_superpositions.WSPow", "foxes.models.wake_superpositions.WSPow.__init__", "foxes.models.wake_superpositions.WSPow.__repr__", "foxes.models.wake_superpositions.WSPow.add_wake", "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPow.input_farm_vars", "foxes.models.wake_superpositions.WSPowLocal", "foxes.models.wake_superpositions.WSPowLocal.__init__", "foxes.models.wake_superpositions.WSPowLocal.__repr__", "foxes.models.wake_superpositions.WSPowLocal.add_wake", "foxes.models.wake_superpositions.WSPowLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPowLocal.input_farm_vars", "foxes.models.wake_superpositions.WSProduct", "foxes.models.wake_superpositions.WSProduct.__init__", "foxes.models.wake_superpositions.WSProduct.__repr__", "foxes.models.wake_superpositions.WSProduct.add_wake", "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta", "foxes.models.wake_superpositions.WSProduct.input_farm_vars", "foxes.models.wake_superpositions.WSQuadratic", "foxes.models.wake_superpositions.WSQuadratic.__init__", "foxes.models.wake_superpositions.WSQuadratic.__repr__", "foxes.models.wake_superpositions.WSQuadratic.add_wake", "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars", "foxes.models.wake_superpositions.WSQuadraticLocal", "foxes.models.wake_superpositions.WSQuadraticLocal.__init__", "foxes.models.wake_superpositions.WSQuadraticLocal.__repr__", "foxes.models.wake_superpositions.WSQuadraticLocal.add_wake", "foxes.models.wake_superpositions.WSQuadraticLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadraticLocal.input_farm_vars", "foxes.output.Animator", "foxes.output.Animator.__init__", "foxes.output.Animator.add_generator", "foxes.output.Animator.animate", "foxes.output.Animator.generators", "foxes.output.FarmLayoutOutput", "foxes.output.FarmLayoutOutput.__init__", "foxes.output.FarmLayoutOutput.get_figure", "foxes.output.FarmLayoutOutput.get_layout_data", "foxes.output.FarmLayoutOutput.get_layout_dict", "foxes.output.FarmLayoutOutput.write_csv", "foxes.output.FarmLayoutOutput.write_json", "foxes.output.FarmLayoutOutput.write_plot", "foxes.output.FarmLayoutOutput.write_xyh", "foxes.output.FarmResultsEval", "foxes.output.FarmResultsEval.__init__", "foxes.output.FarmResultsEval.add_capacity", "foxes.output.FarmResultsEval.add_efficiency", "foxes.output.FarmResultsEval.calc_farm_efficiency", "foxes.output.FarmResultsEval.calc_farm_mean", "foxes.output.FarmResultsEval.calc_farm_sum", "foxes.output.FarmResultsEval.calc_farm_yield", "foxes.output.FarmResultsEval.calc_mean_farm_power", "foxes.output.FarmResultsEval.calc_states_mean", "foxes.output.FarmResultsEval.calc_states_std", "foxes.output.FarmResultsEval.calc_states_sum", "foxes.output.FarmResultsEval.calc_turbine_mean", "foxes.output.FarmResultsEval.calc_turbine_sum", "foxes.output.FarmResultsEval.calc_turbine_yield", "foxes.output.FarmResultsEval.gen_stdata", "foxes.output.FarmResultsEval.reduce_all", "foxes.output.FarmResultsEval.reduce_states", "foxes.output.FarmResultsEval.reduce_turbines", "foxes.output.FarmResultsEval.weinsum", "foxes.output.FlowPlots2D", "foxes.output.FlowPlots2D.gen_states_fig_xy", "foxes.output.FlowPlots2D.gen_states_fig_xz", "foxes.output.FlowPlots2D.gen_states_fig_yz", "foxes.output.FlowPlots2D.get_mean_fig_xy", "foxes.output.FlowPlots2D.get_mean_fig_xz", "foxes.output.FlowPlots2D.get_mean_fig_yz", "foxes.output.Output", "foxes.output.Output.__init__", "foxes.output.Output.get_fpath", "foxes.output.Output.new", "foxes.output.Output.print_models", "foxes.output.Output.write", "foxes.output.PointCalculator", "foxes.output.PointCalculator.__init__", "foxes.output.PointCalculator.calculate", "foxes.output.ResultsWriter", "foxes.output.ResultsWriter.__init__", "foxes.output.ResultsWriter.write_csv", "foxes.output.ResultsWriter.write_nc", "foxes.output.RosePlotOutput", "foxes.output.RosePlotOutput.__init__", "foxes.output.RosePlotOutput.get_data", "foxes.output.RosePlotOutput.get_data_info", "foxes.output.RosePlotOutput.get_figure", "foxes.output.RosePlotOutput.write_figure", "foxes.output.RotorPointPlot", "foxes.output.RotorPointPlot.__init__", "foxes.output.RotorPointPlot.get_point_figure", "foxes.output.SeqFlowAnimationPlugin", "foxes.output.SeqFlowAnimationPlugin.__init__", "foxes.output.SeqFlowAnimationPlugin.gen_images", "foxes.output.SeqFlowAnimationPlugin.initialize", "foxes.output.SeqFlowAnimationPlugin.update", "foxes.output.SliceData", "foxes.output.SliceData.__init__", "foxes.output.SliceData.get_mean_data_xy", "foxes.output.SliceData.get_mean_data_xz", "foxes.output.SliceData.get_mean_data_yz", "foxes.output.SliceData.get_states_data_xy", "foxes.output.SliceData.get_states_data_xz", "foxes.output.SliceData.get_states_data_yz", "foxes.output.StateTurbineMap", "foxes.output.StateTurbineMap.__init__", "foxes.output.StateTurbineMap.plot_map", "foxes.output.StateTurbineTable", "foxes.output.StateTurbineTable.__init__", "foxes.output.StateTurbineTable.get_dataset", "foxes.output.StatesRosePlotOutput", "foxes.output.StatesRosePlotOutput.__init__", "foxes.output.TurbineTypeCurves", "foxes.output.TurbineTypeCurves.__init__", "foxes.output.TurbineTypeCurves.plot_curves", "foxes.output.flow_plots_2d.get_fig", "foxes.utils.DataBook", "foxes.utils.DataBook.__init__", "foxes.utils.DataBook.add_data_package", "foxes.utils.DataBook.add_data_package_file", "foxes.utils.DataBook.add_file", "foxes.utils.DataBook.add_files", "foxes.utils.DataBook.get_file_path", "foxes.utils.DataBook.toc", "foxes.utils.Dict", "foxes.utils.Dict.__getitem__", "foxes.utils.Dict.__init__", "foxes.utils.FDict", "foxes.utils.FDict.__contains__", "foxes.utils.FDict.__getitem__", "foxes.utils.FDict.__init__", "foxes.utils.FDict.add_factory", "foxes.utils.FDict.add_k_factory", "foxes.utils.Factory", "foxes.utils.Factory.__init__", "foxes.utils.Factory.__str__", "foxes.utils.Factory.check_match", "foxes.utils.Factory.construct", "foxes.utils.Factory.name_prefix", "foxes.utils.Factory.name_suffix", "foxes.utils.Factory.variables", "foxes.utils.PandasFileHelper", "foxes.utils.PandasFileHelper.DATA_FILE_FORMATS", "foxes.utils.PandasFileHelper.DEFAULT_FORMAT_DICT", "foxes.utils.PandasFileHelper.DEFAULT_READING_PARAMETERS", "foxes.utils.PandasFileHelper.DEFAULT_WRITING_PARAMETERS", "foxes.utils.PandasFileHelper.read_file", "foxes.utils.PandasFileHelper.write_file", "foxes.utils.TabWindroseAxes", "foxes.utils.TabWindroseAxes.ArtistList", "foxes.utils.TabWindroseAxes.ArtistList.__class_getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__init__", "foxes.utils.TabWindroseAxes.ArtistList.__repr__", "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__", "foxes.utils.TabWindroseAxes.ArtistList.count", "foxes.utils.TabWindroseAxes.ArtistList.index", "foxes.utils.TabWindroseAxes.InvertedPolarTransform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init_subclass__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__str__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.depth", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.frozen", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_matrix", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.input_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.invalidate", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.inverted", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_separable", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.output_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.pass_through", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point", "foxes.utils.TabWindroseAxes.PolarAffine", "foxes.utils.TabWindroseAxes.PolarAffine.__array__", "foxes.utils.TabWindroseAxes.PolarAffine.__eq__", "foxes.utils.TabWindroseAxes.PolarAffine.__init__", "foxes.utils.TabWindroseAxes.PolarAffine.__str__", "foxes.utils.TabWindroseAxes.PolarAffine.frozen", "foxes.utils.TabWindroseAxes.PolarAffine.get_affine", "foxes.utils.TabWindroseAxes.PolarAffine.get_matrix", "foxes.utils.TabWindroseAxes.PolarAffine.has_inverse", "foxes.utils.TabWindroseAxes.PolarAffine.input_dims", "foxes.utils.TabWindroseAxes.PolarAffine.inverted", "foxes.utils.TabWindroseAxes.PolarAffine.is_affine", "foxes.utils.TabWindroseAxes.PolarAffine.is_separable", "foxes.utils.TabWindroseAxes.PolarAffine.output_dims", "foxes.utils.TabWindroseAxes.PolarAffine.to_values", "foxes.utils.TabWindroseAxes.PolarAffine.transform", "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform", "foxes.utils.TabWindroseAxes.PolarTransform.__init__", "foxes.utils.TabWindroseAxes.PolarTransform.__str__", "foxes.utils.TabWindroseAxes.PolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.PolarTransform.input_dims", "foxes.utils.TabWindroseAxes.PolarTransform.inverted", "foxes.utils.TabWindroseAxes.PolarTransform.output_dims", "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.RadialLocator", "foxes.utils.TabWindroseAxes.RadialLocator.MAXTICKS", "foxes.utils.TabWindroseAxes.RadialLocator.__call__", "foxes.utils.TabWindroseAxes.RadialLocator.__init__", "foxes.utils.TabWindroseAxes.RadialLocator.axis", "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis", "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular", "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds", "foxes.utils.TabWindroseAxes.RadialLocator.set_axis", "foxes.utils.TabWindroseAxes.RadialLocator.set_params", "foxes.utils.TabWindroseAxes.RadialLocator.tick_values", "foxes.utils.TabWindroseAxes.RadialLocator.view_limits", "foxes.utils.TabWindroseAxes.ThetaFormatter", "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__", "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks", "foxes.utils.TabWindroseAxes.ThetaFormatter.get_offset", "foxes.utils.TabWindroseAxes.ThetaFormatter.locs", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs", "foxes.utils.TabWindroseAxes.ThetaLocator", "foxes.utils.TabWindroseAxes.ThetaLocator.__call__", "foxes.utils.TabWindroseAxes.ThetaLocator.__init__", "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular", "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis", "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits", "foxes.utils.TabWindroseAxes.__init__", "foxes.utils.TabWindroseAxes.__init_subclass__", "foxes.utils.TabWindroseAxes.__repr__", "foxes.utils.TabWindroseAxes.__str__", "foxes.utils.TabWindroseAxes.acorr", "foxes.utils.TabWindroseAxes.add_artist", "foxes.utils.TabWindroseAxes.add_callback", "foxes.utils.TabWindroseAxes.add_child_axes", "foxes.utils.TabWindroseAxes.add_collection", "foxes.utils.TabWindroseAxes.add_container", "foxes.utils.TabWindroseAxes.add_image", "foxes.utils.TabWindroseAxes.add_line", "foxes.utils.TabWindroseAxes.add_patch", "foxes.utils.TabWindroseAxes.add_table", "foxes.utils.TabWindroseAxes.angle_spectrum", "foxes.utils.TabWindroseAxes.annotate", "foxes.utils.TabWindroseAxes.apply_aspect", "foxes.utils.TabWindroseAxes.arrow", "foxes.utils.TabWindroseAxes.artists", "foxes.utils.TabWindroseAxes.autoscale", "foxes.utils.TabWindroseAxes.autoscale_view", "foxes.utils.TabWindroseAxes.axes", "foxes.utils.TabWindroseAxes.axhline", "foxes.utils.TabWindroseAxes.axhspan", "foxes.utils.TabWindroseAxes.axis", "foxes.utils.TabWindroseAxes.axline", "foxes.utils.TabWindroseAxes.axvline", "foxes.utils.TabWindroseAxes.axvspan", "foxes.utils.TabWindroseAxes.bar", "foxes.utils.TabWindroseAxes.bar_label", "foxes.utils.TabWindroseAxes.barbs", "foxes.utils.TabWindroseAxes.barh", "foxes.utils.TabWindroseAxes.box", "foxes.utils.TabWindroseAxes.boxplot", "foxes.utils.TabWindroseAxes.broken_barh", "foxes.utils.TabWindroseAxes.bxp", "foxes.utils.TabWindroseAxes.can_pan", "foxes.utils.TabWindroseAxes.can_zoom", "foxes.utils.TabWindroseAxes.cla", "foxes.utils.TabWindroseAxes.clabel", "foxes.utils.TabWindroseAxes.clear", "foxes.utils.TabWindroseAxes.cohere", "foxes.utils.TabWindroseAxes.collections", "foxes.utils.TabWindroseAxes.contains", "foxes.utils.TabWindroseAxes.contains_point", "foxes.utils.TabWindroseAxes.contour", "foxes.utils.TabWindroseAxes.contourf", "foxes.utils.TabWindroseAxes.convert_xunits", "foxes.utils.TabWindroseAxes.convert_yunits", "foxes.utils.TabWindroseAxes.csd", "foxes.utils.TabWindroseAxes.drag_pan", "foxes.utils.TabWindroseAxes.draw", "foxes.utils.TabWindroseAxes.draw_artist", "foxes.utils.TabWindroseAxes.ecdf", "foxes.utils.TabWindroseAxes.end_pan", "foxes.utils.TabWindroseAxes.errorbar", "foxes.utils.TabWindroseAxes.eventplot", "foxes.utils.TabWindroseAxes.fill", "foxes.utils.TabWindroseAxes.fill_between", "foxes.utils.TabWindroseAxes.fill_betweenx", "foxes.utils.TabWindroseAxes.findobj", "foxes.utils.TabWindroseAxes.format_coord", "foxes.utils.TabWindroseAxes.format_cursor_data", "foxes.utils.TabWindroseAxes.format_xdata", "foxes.utils.TabWindroseAxes.format_ydata", "foxes.utils.TabWindroseAxes.from_ax", "foxes.utils.TabWindroseAxes.get_adjustable", "foxes.utils.TabWindroseAxes.get_agg_filter", "foxes.utils.TabWindroseAxes.get_alpha", "foxes.utils.TabWindroseAxes.get_anchor", "foxes.utils.TabWindroseAxes.get_animated", "foxes.utils.TabWindroseAxes.get_aspect", "foxes.utils.TabWindroseAxes.get_autoscale_on", "foxes.utils.TabWindroseAxes.get_autoscalex_on", "foxes.utils.TabWindroseAxes.get_autoscaley_on", "foxes.utils.TabWindroseAxes.get_axes_locator", "foxes.utils.TabWindroseAxes.get_axisbelow", "foxes.utils.TabWindroseAxes.get_box_aspect", "foxes.utils.TabWindroseAxes.get_children", "foxes.utils.TabWindroseAxes.get_clip_box", "foxes.utils.TabWindroseAxes.get_clip_on", "foxes.utils.TabWindroseAxes.get_clip_path", "foxes.utils.TabWindroseAxes.get_cursor_data", "foxes.utils.TabWindroseAxes.get_data_ratio", "foxes.utils.TabWindroseAxes.get_default_bbox_extra_artists", "foxes.utils.TabWindroseAxes.get_facecolor", "foxes.utils.TabWindroseAxes.get_fc", "foxes.utils.TabWindroseAxes.get_figure", "foxes.utils.TabWindroseAxes.get_forward_navigation_events", "foxes.utils.TabWindroseAxes.get_frame_on", "foxes.utils.TabWindroseAxes.get_gid", "foxes.utils.TabWindroseAxes.get_gridspec", "foxes.utils.TabWindroseAxes.get_images", "foxes.utils.TabWindroseAxes.get_in_layout", "foxes.utils.TabWindroseAxes.get_label", "foxes.utils.TabWindroseAxes.get_legend", "foxes.utils.TabWindroseAxes.get_legend_handles_labels", "foxes.utils.TabWindroseAxes.get_lines", "foxes.utils.TabWindroseAxes.get_mouseover", "foxes.utils.TabWindroseAxes.get_navigate", "foxes.utils.TabWindroseAxes.get_navigate_mode", "foxes.utils.TabWindroseAxes.get_path_effects", "foxes.utils.TabWindroseAxes.get_picker", "foxes.utils.TabWindroseAxes.get_position", "foxes.utils.TabWindroseAxes.get_rasterization_zorder", "foxes.utils.TabWindroseAxes.get_rasterized", "foxes.utils.TabWindroseAxes.get_rlabel_position", "foxes.utils.TabWindroseAxes.get_rmax", "foxes.utils.TabWindroseAxes.get_rmin", "foxes.utils.TabWindroseAxes.get_rorigin", "foxes.utils.TabWindroseAxes.get_rsign", "foxes.utils.TabWindroseAxes.get_shared_x_axes", "foxes.utils.TabWindroseAxes.get_shared_y_axes", "foxes.utils.TabWindroseAxes.get_sketch_params", "foxes.utils.TabWindroseAxes.get_snap", "foxes.utils.TabWindroseAxes.get_subplotspec", "foxes.utils.TabWindroseAxes.get_theta_direction", "foxes.utils.TabWindroseAxes.get_theta_offset", "foxes.utils.TabWindroseAxes.get_thetamax", "foxes.utils.TabWindroseAxes.get_thetamin", "foxes.utils.TabWindroseAxes.get_tightbbox", "foxes.utils.TabWindroseAxes.get_title", "foxes.utils.TabWindroseAxes.get_transform", "foxes.utils.TabWindroseAxes.get_transformed_clip_path_and_affine", "foxes.utils.TabWindroseAxes.get_url", "foxes.utils.TabWindroseAxes.get_visible", "foxes.utils.TabWindroseAxes.get_window_extent", "foxes.utils.TabWindroseAxes.get_xaxis", "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_xaxis_transform", "foxes.utils.TabWindroseAxes.get_xbound", "foxes.utils.TabWindroseAxes.get_xgridlines", "foxes.utils.TabWindroseAxes.get_xlabel", "foxes.utils.TabWindroseAxes.get_xlim", "foxes.utils.TabWindroseAxes.get_xmajorticklabels", "foxes.utils.TabWindroseAxes.get_xmargin", "foxes.utils.TabWindroseAxes.get_xminorticklabels", "foxes.utils.TabWindroseAxes.get_xscale", "foxes.utils.TabWindroseAxes.get_xticklabels", "foxes.utils.TabWindroseAxes.get_xticklines", "foxes.utils.TabWindroseAxes.get_xticks", "foxes.utils.TabWindroseAxes.get_yaxis", "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_yaxis_transform", "foxes.utils.TabWindroseAxes.get_ybound", "foxes.utils.TabWindroseAxes.get_ygridlines", "foxes.utils.TabWindroseAxes.get_ylabel", "foxes.utils.TabWindroseAxes.get_ylim", "foxes.utils.TabWindroseAxes.get_ymajorticklabels", "foxes.utils.TabWindroseAxes.get_ymargin", "foxes.utils.TabWindroseAxes.get_yminorticklabels", "foxes.utils.TabWindroseAxes.get_yscale", "foxes.utils.TabWindroseAxes.get_yticklabels", "foxes.utils.TabWindroseAxes.get_yticklines", "foxes.utils.TabWindroseAxes.get_yticks", "foxes.utils.TabWindroseAxes.get_zorder", "foxes.utils.TabWindroseAxes.grid", "foxes.utils.TabWindroseAxes.has_data", "foxes.utils.TabWindroseAxes.have_units", "foxes.utils.TabWindroseAxes.hexbin", "foxes.utils.TabWindroseAxes.hist", "foxes.utils.TabWindroseAxes.hist2d", "foxes.utils.TabWindroseAxes.hlines", "foxes.utils.TabWindroseAxes.images", "foxes.utils.TabWindroseAxes.imshow", "foxes.utils.TabWindroseAxes.in_axes", "foxes.utils.TabWindroseAxes.indicate_inset", "foxes.utils.TabWindroseAxes.indicate_inset_zoom", "foxes.utils.TabWindroseAxes.inset_axes", "foxes.utils.TabWindroseAxes.invert_xaxis", "foxes.utils.TabWindroseAxes.invert_yaxis", "foxes.utils.TabWindroseAxes.is_transform_set", "foxes.utils.TabWindroseAxes.label_outer", "foxes.utils.TabWindroseAxes.legend", "foxes.utils.TabWindroseAxes.lines", "foxes.utils.TabWindroseAxes.locator_params", "foxes.utils.TabWindroseAxes.loglog", "foxes.utils.TabWindroseAxes.magnitude_spectrum", "foxes.utils.TabWindroseAxes.margins", "foxes.utils.TabWindroseAxes.matshow", "foxes.utils.TabWindroseAxes.minorticks_off", "foxes.utils.TabWindroseAxes.minorticks_on", "foxes.utils.TabWindroseAxes.mouseover", "foxes.utils.TabWindroseAxes.name", "foxes.utils.TabWindroseAxes.patches", "foxes.utils.TabWindroseAxes.pchanged", "foxes.utils.TabWindroseAxes.pcolor", "foxes.utils.TabWindroseAxes.pcolorfast", "foxes.utils.TabWindroseAxes.pcolormesh", "foxes.utils.TabWindroseAxes.phase_spectrum", "foxes.utils.TabWindroseAxes.pick", "foxes.utils.TabWindroseAxes.pickable", "foxes.utils.TabWindroseAxes.pie", "foxes.utils.TabWindroseAxes.plot", "foxes.utils.TabWindroseAxes.plot_date", "foxes.utils.TabWindroseAxes.properties", "foxes.utils.TabWindroseAxes.psd", "foxes.utils.TabWindroseAxes.quiver", "foxes.utils.TabWindroseAxes.quiverkey", "foxes.utils.TabWindroseAxes.redraw_in_frame", "foxes.utils.TabWindroseAxes.relim", "foxes.utils.TabWindroseAxes.remove", "foxes.utils.TabWindroseAxes.remove_callback", "foxes.utils.TabWindroseAxes.reset_position", "foxes.utils.TabWindroseAxes.scatter", "foxes.utils.TabWindroseAxes.secondary_xaxis", "foxes.utils.TabWindroseAxes.secondary_yaxis", "foxes.utils.TabWindroseAxes.semilogx", "foxes.utils.TabWindroseAxes.semilogy", "foxes.utils.TabWindroseAxes.set", "foxes.utils.TabWindroseAxes.set_adjustable", "foxes.utils.TabWindroseAxes.set_agg_filter", "foxes.utils.TabWindroseAxes.set_alpha", "foxes.utils.TabWindroseAxes.set_anchor", "foxes.utils.TabWindroseAxes.set_animated", "foxes.utils.TabWindroseAxes.set_aspect", "foxes.utils.TabWindroseAxes.set_autoscale_on", "foxes.utils.TabWindroseAxes.set_autoscalex_on", "foxes.utils.TabWindroseAxes.set_autoscaley_on", "foxes.utils.TabWindroseAxes.set_axes_locator", "foxes.utils.TabWindroseAxes.set_axis_off", "foxes.utils.TabWindroseAxes.set_axis_on", "foxes.utils.TabWindroseAxes.set_axisbelow", "foxes.utils.TabWindroseAxes.set_box_aspect", "foxes.utils.TabWindroseAxes.set_clip_box", "foxes.utils.TabWindroseAxes.set_clip_on", "foxes.utils.TabWindroseAxes.set_clip_path", "foxes.utils.TabWindroseAxes.set_facecolor", "foxes.utils.TabWindroseAxes.set_fc", "foxes.utils.TabWindroseAxes.set_figure", "foxes.utils.TabWindroseAxes.set_forward_navigation_events", "foxes.utils.TabWindroseAxes.set_frame_on", "foxes.utils.TabWindroseAxes.set_gid", "foxes.utils.TabWindroseAxes.set_in_layout", "foxes.utils.TabWindroseAxes.set_label", "foxes.utils.TabWindroseAxes.set_legend", "foxes.utils.TabWindroseAxes.set_mouseover", "foxes.utils.TabWindroseAxes.set_navigate", "foxes.utils.TabWindroseAxes.set_navigate_mode", "foxes.utils.TabWindroseAxes.set_path_effects", "foxes.utils.TabWindroseAxes.set_picker", "foxes.utils.TabWindroseAxes.set_position", "foxes.utils.TabWindroseAxes.set_prop_cycle", "foxes.utils.TabWindroseAxes.set_radii_angle", "foxes.utils.TabWindroseAxes.set_rasterization_zorder", "foxes.utils.TabWindroseAxes.set_rasterized", "foxes.utils.TabWindroseAxes.set_rgrids", "foxes.utils.TabWindroseAxes.set_rlabel_position", "foxes.utils.TabWindroseAxes.set_rlim", "foxes.utils.TabWindroseAxes.set_rmax", "foxes.utils.TabWindroseAxes.set_rmin", "foxes.utils.TabWindroseAxes.set_rorigin", "foxes.utils.TabWindroseAxes.set_rscale", "foxes.utils.TabWindroseAxes.set_rticks", "foxes.utils.TabWindroseAxes.set_sketch_params", "foxes.utils.TabWindroseAxes.set_snap", "foxes.utils.TabWindroseAxes.set_subplotspec", "foxes.utils.TabWindroseAxes.set_theta_direction", "foxes.utils.TabWindroseAxes.set_theta_offset", "foxes.utils.TabWindroseAxes.set_theta_zero_location", "foxes.utils.TabWindroseAxes.set_thetagrids", "foxes.utils.TabWindroseAxes.set_thetalim", "foxes.utils.TabWindroseAxes.set_thetamax", "foxes.utils.TabWindroseAxes.set_thetamin", "foxes.utils.TabWindroseAxes.set_title", "foxes.utils.TabWindroseAxes.set_transform", "foxes.utils.TabWindroseAxes.set_url", "foxes.utils.TabWindroseAxes.set_visible", "foxes.utils.TabWindroseAxes.set_xbound", "foxes.utils.TabWindroseAxes.set_xlabel", "foxes.utils.TabWindroseAxes.set_xlim", "foxes.utils.TabWindroseAxes.set_xmargin", "foxes.utils.TabWindroseAxes.set_xscale", "foxes.utils.TabWindroseAxes.set_xticklabels", "foxes.utils.TabWindroseAxes.set_xticks", "foxes.utils.TabWindroseAxes.set_ybound", "foxes.utils.TabWindroseAxes.set_ylabel", "foxes.utils.TabWindroseAxes.set_ylim", "foxes.utils.TabWindroseAxes.set_ymargin", "foxes.utils.TabWindroseAxes.set_yscale", "foxes.utils.TabWindroseAxes.set_yticklabels", "foxes.utils.TabWindroseAxes.set_yticks", "foxes.utils.TabWindroseAxes.set_zorder", "foxes.utils.TabWindroseAxes.sharex", "foxes.utils.TabWindroseAxes.sharey", "foxes.utils.TabWindroseAxes.specgram", "foxes.utils.TabWindroseAxes.spy", "foxes.utils.TabWindroseAxes.stackplot", "foxes.utils.TabWindroseAxes.stairs", "foxes.utils.TabWindroseAxes.stale", "foxes.utils.TabWindroseAxes.start_pan", "foxes.utils.TabWindroseAxes.stem", "foxes.utils.TabWindroseAxes.step", "foxes.utils.TabWindroseAxes.sticky_edges", "foxes.utils.TabWindroseAxes.streamplot", "foxes.utils.TabWindroseAxes.table", "foxes.utils.TabWindroseAxes.tables", "foxes.utils.TabWindroseAxes.text", "foxes.utils.TabWindroseAxes.texts", "foxes.utils.TabWindroseAxes.tick_params", "foxes.utils.TabWindroseAxes.ticklabel_format", "foxes.utils.TabWindroseAxes.tricontour", "foxes.utils.TabWindroseAxes.tricontourf", "foxes.utils.TabWindroseAxes.tripcolor", "foxes.utils.TabWindroseAxes.triplot", "foxes.utils.TabWindroseAxes.twinx", "foxes.utils.TabWindroseAxes.twiny", "foxes.utils.TabWindroseAxes.update", "foxes.utils.TabWindroseAxes.update_datalim", "foxes.utils.TabWindroseAxes.update_from", "foxes.utils.TabWindroseAxes.use_sticky_edges", "foxes.utils.TabWindroseAxes.viewLim", "foxes.utils.TabWindroseAxes.violin", "foxes.utils.TabWindroseAxes.violinplot", "foxes.utils.TabWindroseAxes.vlines", "foxes.utils.TabWindroseAxes.xaxis_date", "foxes.utils.TabWindroseAxes.xaxis_inverted", "foxes.utils.TabWindroseAxes.xcorr", "foxes.utils.TabWindroseAxes.yaxis_date", "foxes.utils.TabWindroseAxes.yaxis_inverted", "foxes.utils.TabWindroseAxes.zorder", "foxes.utils.WakeKFactory", "foxes.utils.WakeKFactory.__init__", "foxes.utils.WakeKFactory.__str__", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.all_subclasses", "foxes.utils.cubic_roots", "foxes.utils.delta_wd", "foxes.utils.exec_python", "foxes.utils.geom2d.AreaGeometry", "foxes.utils.geom2d.AreaGeometry.add_to_figure", "foxes.utils.geom2d.AreaGeometry.inverse", "foxes.utils.geom2d.AreaGeometry.p_max", "foxes.utils.geom2d.AreaGeometry.p_min", "foxes.utils.geom2d.AreaGeometry.points_distance", "foxes.utils.geom2d.AreaGeometry.points_inside", "foxes.utils.geom2d.AreaIntersection", "foxes.utils.geom2d.AreaIntersection.__new__", "foxes.utils.geom2d.AreaUnion", "foxes.utils.geom2d.AreaUnion.__init__", "foxes.utils.geom2d.AreaUnion.add_to_figure", "foxes.utils.geom2d.AreaUnion.inverse", "foxes.utils.geom2d.AreaUnion.p_max", "foxes.utils.geom2d.AreaUnion.p_min", "foxes.utils.geom2d.AreaUnion.points_distance", "foxes.utils.geom2d.AreaUnion.points_inside", "foxes.utils.geom2d.Circle", "foxes.utils.geom2d.Circle.__init__", "foxes.utils.geom2d.Circle.add_to_figure", "foxes.utils.geom2d.Circle.p_max", "foxes.utils.geom2d.Circle.p_min", "foxes.utils.geom2d.Circle.points_distance", "foxes.utils.geom2d.Circle.points_inside", "foxes.utils.geom2d.ClosedPolygon", "foxes.utils.geom2d.ClosedPolygon.__init__", "foxes.utils.geom2d.ClosedPolygon.add_to_figure", "foxes.utils.geom2d.ClosedPolygon.p_max", "foxes.utils.geom2d.ClosedPolygon.p_min", "foxes.utils.geom2d.ClosedPolygon.points_distance", "foxes.utils.geom2d.ClosedPolygon.points_inside", "foxes.utils.geom2d.HalfPlane", "foxes.utils.geom2d.HalfPlane.__init__", "foxes.utils.geom2d.HalfPlane.add_to_figure", "foxes.utils.geom2d.HalfPlane.inverse", "foxes.utils.geom2d.HalfPlane.p_max", "foxes.utils.geom2d.HalfPlane.p_min", "foxes.utils.geom2d.HalfPlane.points_distance", "foxes.utils.geom2d.HalfPlane.points_inside", "foxes.utils.geom2d.InvertedAreaGeometry", "foxes.utils.geom2d.InvertedAreaGeometry.__init__", "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure", "foxes.utils.geom2d.InvertedAreaGeometry.inverse", "foxes.utils.geom2d.InvertedAreaGeometry.p_max", "foxes.utils.geom2d.InvertedAreaGeometry.p_min", "foxes.utils.geom2d.InvertedAreaGeometry.points_distance", "foxes.utils.geom2d.InvertedAreaGeometry.points_inside", "foxes.utils.import_module", "foxes.utils.load_module", "foxes.utils.random_xy_square", "foxes.utils.read_shp", "foxes.utils.read_shp_polygons", "foxes.utils.read_tab_file", "foxes.utils.runners.DaskRunner", "foxes.utils.runners.DaskRunner.__init__", "foxes.utils.runners.DaskRunner.finalize", "foxes.utils.runners.DaskRunner.initialize", "foxes.utils.runners.DaskRunner.is_distributed", "foxes.utils.runners.DaskRunner.print", "foxes.utils.runners.DaskRunner.run", "foxes.utils.runners.DefaultRunner", "foxes.utils.runners.DefaultRunner.run", "foxes.utils.runners.Runner", "foxes.utils.runners.Runner.__init__", "foxes.utils.runners.Runner.finalize", "foxes.utils.runners.Runner.initialize", "foxes.utils.runners.Runner.initialized", "foxes.utils.runners.Runner.run", "foxes.utils.shp2csv", "foxes.utils.shp2geom2d", "foxes.utils.sqrt_reg", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.uv2wd", "foxes.utils.wd2uv", "foxes.utils.wd2wdvec", "foxes.utils.wdvec2wd", "foxes.utils.write_nc", "foxes.variables.AMB_CAP", "foxes.variables.AMB_CT", "foxes.variables.AMB_P", "foxes.variables.AMB_REWS", "foxes.variables.AMB_REWS2", "foxes.variables.AMB_REWS3", "foxes.variables.AMB_RHO", "foxes.variables.AMB_T", "foxes.variables.AMB_TI", "foxes.variables.AMB_WD", "foxes.variables.AMB_WS", "foxes.variables.AMB_YAW", "foxes.variables.AMB_YAWM", "foxes.variables.AMB_YLD", "foxes.variables.CAP", "foxes.variables.CT", "foxes.variables.D", "foxes.variables.EFF", "foxes.variables.H", "foxes.variables.K", "foxes.variables.KB", "foxes.variables.KTI", "foxes.variables.MAX_P", "foxes.variables.MOL", "foxes.variables.ORDER", "foxes.variables.ORDER_INV", "foxes.variables.ORDER_SSEL", "foxes.variables.P", "foxes.variables.PA_ALPHA", "foxes.variables.PA_BETA", "foxes.variables.REWS", "foxes.variables.REWS2", "foxes.variables.REWS3", "foxes.variables.RHO", "foxes.variables.SHEAR", "foxes.variables.T", "foxes.variables.TI", "foxes.variables.TXYH", "foxes.variables.WD", "foxes.variables.WEIGHT", "foxes.variables.WS", "foxes.variables.X", "foxes.variables.Y", "foxes.variables.YAW", "foxes.variables.YAWM", "foxes.variables.YLD", "foxes.variables.Z0", "foxes.variables.amb2var", "foxes.variables.var2amb", "API", "foxes.algorithms", "Downwind algorithm", "Iterative algorithm", "Sequential algorithm", "foxes.constants", "foxes.core", "foxes.data", "foxes", "foxes.input", "foxes.models", "foxes.output", "foxes.utils", "foxes.utils.abl.neutral", "foxes.variables", "foxes.models.wake_models", "Citation", "Examples", "History", "Welcome to FOXES", "Installation", "Models", "Blockage modelling 2", "Blockage modelling 1", "Static data", "Heterogeneous flow", "The model book", "Multi-height wind data", "Partial wakes verification", "Power mask", "Rotor model visualizations", "Wind sector management", "Dynamic wakes 2", "Single row of turbines", "Dynamic wakes 1", "Timeseries data", "Wind rose data", "Yawed rotor wakes", "Optimization", "Overview - how to setup foxes", "Testing"], "titleterms": {"0": 1710, "1": [1710, 1715, 1726], "10mw": 1716, "15mw": 1716, "2": [1710, 1714, 1724], "3": 1710, "4": 1710, "4464": 1716, "5": 1710, "5mw": 1716, "6": 1710, "7": 1710, "7d5mw": 1716, "8": 1710, "The": 1718, "abl": [1704, 1705], "abl_states_6000": 1716, "acknowledg": 1711, "algorithm": [1693, 1694, 1695, 1696], "alpha": 1710, "also": [116, 235, 1230, 1238, 1239, 1240, 1246, 1247, 1248, 1249, 1250, 1251, 1255, 1257, 1259, 1273, 1282, 1283, 1286, 1290, 1293, 1300, 1301, 1306, 1326, 1344, 1350, 1355, 1358, 1360, 1370, 1373, 1375, 1385, 1386, 1387, 1388, 1390, 1395, 1396, 1403, 1405, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1420, 1422, 1423, 1428, 1430, 1436, 1439, 1441, 1448, 1449, 1456, 1462, 1463, 1467, 1468, 1472, 1474, 1486, 1494, 1495, 1496, 1501, 1502, 1503, 1511, 1517, 1538, 1539, 1540], "ambient": 1716, "api": 1692, "attribut": [0, 10, 18, 46, 52, 56, 60, 65, 69, 74, 80, 85, 95, 308, 325, 335, 346, 356, 362, 379, 392, 404, 410, 434, 443, 459, 474, 490, 498, 503, 523, 531, 552, 567, 574, 577, 581, 590, 594, 603, 609, 618, 626, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 701, 713, 721, 729, 735, 742, 746, 750, 754, 758, 765, 769, 775, 780, 788, 795, 802, 813, 830, 838, 845, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1007, 1016, 1043, 1049, 1052, 1062, 1065, 1070, 1078, 1081, 1086, 1090, 1098, 1101, 1107, 1115, 1547, 1574, 1582, 1589, 1596, 1618], "axial_induct": 1702, "blockag": [1714, 1715], "book": 1718, "centrerotor": 1722, "citat": 1708, "class": 1122, "comparison": 1714, "conda": 1712, "constant": 1697, "content": 1711, "contribut": 1711, "core": 1698, "creat": 1701, "csv": 1716, "curv": 1716, "d126": 1716, "d164": 1716, "d178d3": 1716, "d240": 1716, "data": [1699, 1716, 1719, 1727, 1728], "develop": 1712, "discourag": [1351, 1366, 1490, 1499, 1506, 1523], "doi": 1708, "downwind": 1694, "dtu": 1716, "dynam": [1724, 1726], "environ": 1712, "exampl": [116, 188, 235, 276, 278, 1246, 1249, 1250, 1251, 1280, 1394, 1401, 1431, 1432, 1468, 1496, 1503, 1519, 1523, 1525, 1709], "farm": [1715, 1716], "farm_control": 1702, "farm_layout": 1701, "farm_model": 1702, "file": 1716, "flow": 1717, "flow_plots_2d": 1703, "fox": [1693, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1711, 1731], "frame": 1713, "geom2d": 1704, "grid100": 1722, "grid16": 1722, "grid25": 1722, "grid25_raw": 1722, "grid36": 1722, "grid4": 1722, "grid400": 1722, "grid9": 1722, "gridrotor": 1722, "ground": 1713, "ground_model": 1702, "guid": 1712, "gz": 1716, "h100": 1716, "h119": 1716, "h150": 1716, "h90": 1716, "height": 1719, "heterogen": 1717, "hint": [1412, 1414], "histori": 1710, "homogen": 1726, "how": 1731, "iea": 1716, "induct": [853, 1707, 1714], "input": 1701, "instal": 1712, "iter": 1695, "iwt": 1716, "journal": 1708, "layout": 1716, "level10": 1722, "level2": 1722, "level20": 1722, "level3": 1722, "level5": 1722, "level5_raw": 1722, "levelrotor": 1722, "licens": 1711, "manag": 1723, "mask": 1721, "member": [0, 10, 18, 39, 42, 46, 52, 56, 60, 65, 69, 74, 78, 80, 85, 89, 94, 105, 230, 308, 323, 325, 332, 335, 344, 346, 356, 362, 369, 370, 377, 379, 392, 399, 404, 410, 420, 427, 434, 438, 440, 443, 448, 452, 459, 465, 471, 474, 479, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 552, 567, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1007, 1016, 1036, 1043, 1049, 1052, 1056, 1062, 1065, 1070, 1078, 1081, 1084, 1086, 1090, 1098, 1101, 1107, 1115, 1122, 1123, 1131, 1166, 1187, 1196, 1208, 1218, 1547, 1565, 1572, 1574, 1582, 1589, 1596, 1604, 1618, 1625, 1627], "model": [853, 1694, 1695, 1696, 1702, 1707, 1713, 1714, 1715, 1718, 1722], "multi": 1719, "nc": 1716, "neutral": 1705, "note": [577, 802, 830, 838, 845, 852, 860, 867, 874, 880, 886, 914, 1143, 1206, 1228, 1240, 1241, 1244, 1248, 1255, 1257, 1259, 1273, 1274, 1275, 1277, 1278, 1280, 1281, 1286, 1306, 1352, 1353, 1354, 1358, 1367, 1368, 1369, 1373, 1382, 1386, 1387, 1390, 1404, 1405, 1412, 1414, 1418, 1419, 1420, 1422, 1423, 1430, 1436, 1448, 1452, 1496, 1498, 1500, 1503, 1505, 1507, 1511, 1516, 1517, 1518, 1527, 1528, 1531, 1532, 1543], "nrel": 1716, "optim": 1730, "option": 1712, "other": [1228, 1238, 1246, 1247, 1249, 1250, 1251, 1252, 1254, 1255, 1256, 1257, 1258, 1265, 1269, 1270, 1273, 1277, 1279, 1281, 1282, 1283, 1385, 1386, 1387, 1388, 1390, 1399, 1401, 1403, 1405, 1412, 1413, 1414, 1415, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1472, 1486, 1490, 1495, 1502, 1512, 1514, 1521, 1523, 1525, 1527, 1528, 1540, 1543], "output": 1703, "overview": 1731, "paper": 1708, "paramet": [2, 3, 4, 5, 6, 7, 11, 12, 13, 16, 19, 22, 23, 29, 36, 40, 41, 44, 45, 47, 48, 49, 50, 53, 54, 55, 58, 59, 62, 63, 64, 66, 67, 70, 71, 72, 75, 76, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 96, 99, 100, 103, 309, 311, 312, 313, 314, 318, 319, 320, 321, 324, 326, 327, 328, 331, 333, 334, 336, 337, 338, 340, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 371, 372, 373, 374, 375, 376, 378, 382, 383, 384, 385, 386, 388, 391, 393, 394, 395, 396, 397, 398, 400, 401, 403, 405, 406, 407, 408, 411, 412, 414, 415, 417, 418, 422, 423, 424, 426, 428, 429, 430, 433, 435, 436, 437, 441, 442, 444, 446, 447, 449, 451, 453, 454, 455, 456, 457, 458, 460, 461, 467, 468, 469, 470, 472, 473, 475, 476, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 494, 495, 497, 499, 500, 502, 505, 506, 507, 509, 510, 511, 513, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 530, 533, 534, 535, 537, 538, 539, 540, 543, 545, 546, 549, 550, 551, 553, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 575, 576, 578, 579, 582, 584, 585, 591, 592, 593, 595, 597, 598, 600, 602, 604, 606, 607, 610, 611, 612, 613, 616, 617, 619, 620, 621, 622, 624, 625, 627, 628, 629, 632, 633, 637, 640, 644, 647, 651, 653, 654, 656, 657, 658, 659, 661, 663, 664, 665, 668, 669, 670, 671, 674, 675, 676, 677, 679, 680, 681, 682, 683, 686, 687, 688, 689, 691, 693, 694, 696, 697, 699, 700, 702, 704, 705, 707, 709, 711, 712, 714, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 736, 738, 739, 740, 741, 743, 744, 747, 748, 751, 752, 755, 756, 759, 760, 763, 766, 767, 770, 771, 772, 773, 776, 777, 778, 779, 781, 783, 784, 785, 786, 787, 789, 791, 792, 793, 794, 796, 798, 799, 800, 801, 803, 805, 806, 807, 808, 811, 812, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 826, 827, 828, 831, 833, 834, 835, 836, 839, 841, 842, 843, 846, 848, 849, 850, 854, 856, 857, 858, 861, 863, 864, 865, 868, 870, 871, 872, 875, 877, 878, 881, 883, 884, 901, 902, 904, 905, 906, 910, 912, 913, 915, 917, 918, 921, 923, 924, 925, 926, 929, 931, 932, 934, 936, 937, 939, 941, 942, 944, 946, 947, 949, 951, 952, 953, 955, 957, 958, 959, 961, 963, 964, 965, 967, 969, 970, 971, 973, 975, 976, 977, 979, 981, 982, 983, 985, 987, 988, 989, 991, 993, 994, 995, 997, 999, 1000, 1001, 1003, 1004, 1005, 1008, 1009, 1012, 1013, 1014, 1015, 1017, 1018, 1019, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1037, 1038, 1039, 1040, 1041, 1042, 1044, 1045, 1046, 1048, 1050, 1051, 1053, 1054, 1055, 1057, 1058, 1059, 1060, 1061, 1063, 1064, 1066, 1068, 1069, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1079, 1080, 1082, 1083, 1085, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1100, 1104, 1105, 1106, 1108, 1110, 1111, 1120, 1121, 1123, 1126, 1131, 1137, 1157, 1158, 1159, 1161, 1166, 1169, 1181, 1182, 1183, 1187, 1188, 1194, 1228, 1230, 1238, 1239, 1240, 1241, 1243, 1244, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1263, 1265, 1267, 1269, 1270, 1273, 1274, 1275, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1306, 1327, 1344, 1345, 1354, 1363, 1365, 1369, 1378, 1380, 1382, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1398, 1399, 1401, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1424, 1426, 1430, 1431, 1432, 1433, 1434, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1448, 1449, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1459, 1460, 1462, 1463, 1465, 1466, 1467, 1468, 1470, 1471, 1472, 1473, 1475, 1476, 1477, 1480, 1481, 1485, 1486, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1516, 1517, 1518, 1520, 1521, 1523, 1525, 1526, 1527, 1528, 1529, 1530, 1533, 1534, 1538, 1539, 1540, 1541, 1543, 1544, 1548, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1566, 1570, 1571, 1573, 1575, 1576, 1580, 1581, 1583, 1584, 1587, 1588, 1590, 1591, 1594, 1595, 1597, 1598, 1602, 1603, 1605, 1606, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1619, 1624, 1626, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642], "partial": [1713, 1720], "partial_wak": 1702, "path": 1716, "pip": 1712, "point": 1713, "point_model": 1702, "power": [1716, 1721], "prepar": 1712, "profil": 1713, "propag": [1724, 1726], "public": [0, 10, 18, 39, 42, 46, 52, 56, 60, 65, 69, 74, 78, 80, 85, 89, 94, 105, 230, 308, 323, 325, 332, 335, 344, 346, 356, 362, 369, 370, 377, 379, 392, 399, 404, 410, 420, 427, 434, 438, 440, 443, 448, 452, 459, 465, 471, 474, 479, 490, 498, 501, 503, 514, 516, 523, 531, 544, 547, 552, 567, 574, 577, 580, 581, 587, 589, 590, 594, 599, 601, 603, 609, 615, 618, 623, 626, 630, 636, 643, 650, 655, 660, 667, 673, 678, 685, 690, 695, 698, 701, 706, 708, 710, 713, 721, 729, 735, 742, 746, 750, 754, 758, 762, 765, 769, 775, 780, 788, 795, 802, 810, 813, 820, 823, 830, 838, 845, 852, 853, 860, 867, 874, 880, 886, 909, 914, 920, 928, 933, 938, 943, 948, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1007, 1016, 1036, 1043, 1049, 1052, 1056, 1062, 1065, 1070, 1078, 1081, 1084, 1086, 1090, 1098, 1101, 1107, 1115, 1122, 1123, 1131, 1166, 1187, 1196, 1208, 1218, 1547, 1565, 1572, 1574, 1582, 1589, 1596, 1604, 1618, 1625, 1627], "python": 1712, "quick": 1712, "rais": 1526, "refer": [1265, 1273, 1422], "requir": 1712, "return": [3, 4, 5, 7, 12, 13, 15, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 50, 51, 54, 55, 58, 59, 62, 64, 67, 68, 72, 73, 76, 77, 82, 83, 84, 87, 88, 96, 97, 98, 100, 101, 102, 103, 116, 235, 314, 315, 316, 319, 324, 328, 329, 330, 331, 333, 334, 338, 339, 340, 341, 342, 343, 348, 352, 353, 355, 358, 360, 361, 365, 367, 368, 373, 375, 376, 384, 387, 388, 389, 390, 391, 393, 395, 396, 398, 400, 402, 403, 407, 408, 409, 412, 413, 415, 416, 418, 419, 421, 422, 424, 425, 426, 429, 430, 431, 432, 433, 439, 441, 449, 450, 453, 454, 455, 456, 457, 460, 463, 466, 470, 472, 473, 477, 478, 481, 482, 492, 493, 494, 495, 496, 497, 500, 506, 508, 509, 510, 512, 513, 518, 519, 520, 521, 522, 525, 527, 528, 529, 530, 534, 536, 538, 539, 541, 542, 543, 546, 549, 550, 561, 562, 563, 564, 565, 566, 570, 572, 576, 579, 584, 585, 586, 597, 600, 606, 607, 608, 611, 614, 616, 617, 620, 621, 622, 624, 625, 628, 629, 631, 633, 634, 635, 639, 641, 642, 646, 648, 649, 653, 654, 657, 658, 659, 663, 665, 666, 669, 671, 672, 675, 677, 681, 682, 683, 687, 689, 693, 694, 696, 697, 699, 700, 704, 705, 711, 712, 716, 718, 720, 724, 726, 728, 731, 733, 734, 738, 740, 741, 744, 745, 748, 749, 752, 753, 756, 757, 760, 761, 763, 764, 767, 768, 771, 772, 773, 774, 777, 778, 779, 783, 784, 785, 786, 791, 792, 793, 794, 798, 799, 800, 805, 806, 807, 809, 811, 812, 815, 819, 821, 822, 825, 826, 827, 829, 836, 837, 843, 844, 850, 851, 859, 863, 864, 865, 866, 870, 871, 872, 873, 877, 879, 883, 885, 904, 905, 907, 908, 912, 913, 917, 919, 923, 926, 927, 931, 932, 936, 937, 941, 942, 946, 947, 951, 952, 953, 957, 958, 959, 963, 964, 965, 969, 970, 971, 975, 976, 977, 981, 982, 983, 987, 988, 989, 993, 994, 995, 999, 1000, 1001, 1005, 1006, 1009, 1010, 1011, 1020, 1021, 1022, 1023, 1024, 1025, 1027, 1028, 1029, 1030, 1032, 1033, 1034, 1035, 1040, 1041, 1042, 1045, 1051, 1058, 1059, 1060, 1061, 1064, 1072, 1073, 1074, 1075, 1076, 1077, 1080, 1083, 1088, 1096, 1097, 1110, 1111, 1112, 1113, 1114, 1120, 1122, 1157, 1158, 1159, 1161, 1181, 1182, 1183, 1194, 1228, 1230, 1238, 1239, 1241, 1246, 1247, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1257, 1258, 1259, 1265, 1267, 1273, 1277, 1279, 1280, 1281, 1282, 1283, 1284, 1300, 1327, 1330, 1331, 1332, 1333, 1337, 1344, 1345, 1352, 1353, 1358, 1360, 1363, 1365, 1367, 1368, 1373, 1375, 1378, 1380, 1385, 1386, 1387, 1388, 1390, 1392, 1393, 1394, 1402, 1403, 1404, 1405, 1412, 1413, 1414, 1415, 1418, 1419, 1420, 1422, 1423, 1430, 1431, 1432, 1433, 1434, 1472, 1486, 1490, 1496, 1499, 1503, 1506, 1511, 1512, 1513, 1514, 1517, 1518, 1520, 1521, 1523, 1527, 1528, 1530, 1531, 1532, 1538, 1539, 1540, 1543, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1567, 1568, 1569, 1570, 1571, 1577, 1578, 1579, 1580, 1581, 1585, 1586, 1587, 1588, 1592, 1593, 1594, 1595, 1599, 1600, 1601, 1602, 1603, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1624, 1626, 1631, 1632, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641], "rose": 1728, "rotor": [1713, 1722, 1729], "rotor_model": 1702, "row": 1725, "runner": 1704, "sector": 1723, "see": [116, 235, 1230, 1238, 1239, 1240, 1246, 1247, 1248, 1249, 1250, 1251, 1255, 1257, 1259, 1273, 1282, 1283, 1286, 1290, 1293, 1300, 1301, 1306, 1326, 1344, 1350, 1355, 1358, 1360, 1370, 1373, 1375, 1385, 1386, 1387, 1388, 1390, 1395, 1396, 1403, 1405, 1411, 1412, 1414, 1415, 1416, 1417, 1419, 1420, 1422, 1423, 1428, 1430, 1436, 1439, 1441, 1448, 1449, 1456, 1462, 1463, 1467, 1468, 1472, 1474, 1486, 1494, 1495, 1496, 1501, 1502, 1503, 1511, 1517, 1538, 1539, 1540], "sequenti": [1696, 1724], "setup": 1731, "shear": 1705, "singl": 1725, "spatial": 1726, "specif": 1708, "stabl": 1705, "standard": 1712, "state": [1701, 1716], "static": 1716, "test": 1732, "test_farm_67": 1716, "thrust": 1716, "ti": 1707, "timeseri": [1716, 1727], "timeseries_100": 1716, "timeseries_3000": 1716, "timeseries_8000": 1716, "tldr": 1712, "turbin": [1713, 1725], "turbine_model": 1702, "turbine_typ": 1702, "two_circl": 1704, "type": 1713, "unstabl": 1705, "user": 1712, "util": [1704, 1705], "v0": 1710, "variabl": 1706, "verif": 1720, "version": 1708, "vertic": 1713, "vertical_profil": 1702, "via": 1712, "virtual": 1712, "visual": 1722, "wake": [1713, 1720, 1724, 1726, 1729], "wake_fram": 1702, "wake_model": [853, 1702, 1707], "wake_superposit": 1702, "warn": [1392, 1393, 1413, 1431, 1432, 1464, 1472, 1486, 1499, 1506], "welcom": 1711, "wind": [1707, 1715, 1716, 1719, 1723, 1728], "wind_rose_bremen": 1716, "wind_rot": 1716, "windio": 1701, "wrf": 1716, "yaw": 1729, "yield": [1031, 1037, 1038, 1039, 1089]}})