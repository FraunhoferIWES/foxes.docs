Search.setIndex({"titles": ["foxes.algorithms", "foxes.algorithms.downwind", "foxes.algorithms.downwind.downwind", "foxes.algorithms.downwind.downwind.Downwind", "foxes.algorithms.downwind.models", "foxes.algorithms.downwind.models.calc_order", "foxes.algorithms.downwind.models.calc_order.CalcOrder", "foxes.algorithms.downwind.models.farm_wakes_calc", "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation", "foxes.algorithms.downwind.models.point_wakes_calc", "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation", "foxes.algorithms.downwind.models.set_amb_farm_results", "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults", "foxes.algorithms.downwind.models.set_amb_point_results", "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults", "foxes.algorithms.iterative", "foxes.algorithms.iterative.iterative", "foxes.algorithms.iterative.iterative.Iterative", "foxes.algorithms.iterative.models", "foxes.algorithms.iterative.models.convergence", "foxes.algorithms.iterative.models.convergence.ConvCrit", "foxes.algorithms.iterative.models.convergence.ConvCritList", "foxes.algorithms.iterative.models.convergence.ConvVarDelta", "foxes.algorithms.iterative.models.convergence.DefaultConv", "foxes.algorithms.iterative.models.farm_wakes_calc", "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation", "foxes.algorithms.iterative.models.loop_runner", "foxes.algorithms.iterative.models.loop_runner.LoopRunner", "foxes.constants", "foxes.core", "foxes.core.algorithm", "foxes.core.algorithm.Algorithm", "foxes.core.data", "foxes.core.data.Data", "foxes.core.data_calc_model", "foxes.core.data_calc_model.DataCalcModel", "foxes.core.farm_controller", "foxes.core.farm_controller.FarmController", "foxes.core.farm_data_model", "foxes.core.farm_data_model.FarmDataModel", "foxes.core.farm_data_model.FarmDataModelList", "foxes.core.farm_model", "foxes.core.farm_model.FarmModel", "foxes.core.model", "foxes.core.model.Model", "foxes.core.partial_wakes_model", "foxes.core.partial_wakes_model.PartialWakesModel", "foxes.core.point_data_model", "foxes.core.point_data_model.PointDataModel", "foxes.core.point_data_model.PointDataModelList", "foxes.core.rotor_model", "foxes.core.rotor_model.RotorModel", "foxes.core.states", "foxes.core.states.ExtendedStates", "foxes.core.states.States", "foxes.core.turbine", "foxes.core.turbine.Turbine", "foxes.core.turbine_model", "foxes.core.turbine_model.TurbineModel", "foxes.core.turbine_type", "foxes.core.turbine_type.TurbineType", "foxes.core.vertical_profile", "foxes.core.vertical_profile.VerticalProfile", "foxes.core.wake_frame", "foxes.core.wake_frame.WakeFrame", "foxes.core.wake_model", "foxes.core.wake_model.WakeModel", "foxes.core.wake_superposition", "foxes.core.wake_superposition.WakeSuperposition", "foxes.core.wind_farm", "foxes.core.wind_farm.WindFarm", "foxes.data", "foxes.data.farms", "foxes.data.parse", "foxes.data.parse.parse_Pct_file_name", "foxes.data.parse.parse_Pct_two_files", "foxes.data.power_ct_curves", "foxes.data.states", "foxes.data.static_data", "foxes.data.static_data.StaticData", "foxes.input", "foxes.input.farm_layout", "foxes.input.farm_layout.from_csv", "foxes.input.farm_layout.from_csv.add_from_csv", "foxes.input.farm_layout.from_df", "foxes.input.farm_layout.from_df.add_from_df", "foxes.input.farm_layout.from_file", "foxes.input.farm_layout.from_file.add_from_file", "foxes.input.farm_layout.from_json", "foxes.input.farm_layout.from_json.add_from_json", "foxes.input.farm_layout.grid", "foxes.input.farm_layout.grid.add_grid", "foxes.input.farm_layout.row", "foxes.input.farm_layout.row.add_row", "foxes.input.states", "foxes.input.states.create", "foxes.input.states.create.random_abl_states", "foxes.input.states.create.random_abl_states.create_random_abl_states", "foxes.input.states.create.random_abl_states.write_random_abl_states", "foxes.input.states.field_data_nc", "foxes.input.states.field_data_nc.FieldDataNC", "foxes.input.states.multi_height", "foxes.input.states.multi_height.MultiHeightStates", "foxes.input.states.multi_height.MultiHeightTimeseries", "foxes.input.states.scan_ws", "foxes.input.states.scan_ws.ScanWS", "foxes.input.states.single", "foxes.input.states.single.SingleStateStates", "foxes.input.states.states_table", "foxes.input.states.states_table.StatesTable", "foxes.input.states.states_table.Timeseries", "foxes.input.windio", "foxes.input.windio.windio", "foxes.input.windio.windio.read_anlyses", "foxes.input.windio.windio.read_case", "foxes.input.windio.windio.read_farm", "foxes.input.windio.windio.read_resource", "foxes.input.windio.windio.read_site", "foxes.models", "foxes.models.farm_controllers", "foxes.models.farm_controllers.basic", "foxes.models.farm_controllers.basic.BasicFarmController", "foxes.models.farm_models", "foxes.models.farm_models.turbine2farm", "foxes.models.farm_models.turbine2farm.Turbine2FarmModel", "foxes.models.model_book", "foxes.models.model_book.ModelBook", "foxes.models.partial_wakes", "foxes.models.partial_wakes.axiwake", "foxes.models.partial_wakes.axiwake.PartialAxiwake", "foxes.models.partial_wakes.distsliced", "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake", "foxes.models.partial_wakes.grid", "foxes.models.partial_wakes.grid.PartialGrid", "foxes.models.partial_wakes.mapped", "foxes.models.partial_wakes.mapped.Mapped", "foxes.models.partial_wakes.rotor_points", "foxes.models.partial_wakes.rotor_points.RotorPoints", "foxes.models.partial_wakes.top_hat", "foxes.models.partial_wakes.top_hat.PartialTopHat", "foxes.models.point_models", "foxes.models.point_models.set_uniform_data", "foxes.models.point_models.set_uniform_data.SetUniformData", "foxes.models.point_models.tke2ti", "foxes.models.point_models.tke2ti.TKE2TI", "foxes.models.point_models.wake_deltas", "foxes.models.point_models.wake_deltas.WakeDeltas", "foxes.models.rotor_models", "foxes.models.rotor_models.centre", "foxes.models.rotor_models.centre.CentreRotor", "foxes.models.rotor_models.grid", "foxes.models.rotor_models.grid.GridRotor", "foxes.models.turbine_models", "foxes.models.turbine_models.calculator", "foxes.models.turbine_models.calculator.Calculator", "foxes.models.turbine_models.kTI_model", "foxes.models.turbine_models.kTI_model.kTI", "foxes.models.turbine_models.power_mask", "foxes.models.turbine_models.power_mask.PowerMask", "foxes.models.turbine_models.rotor_centre_calc", "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc", "foxes.models.turbine_models.sector_management", "foxes.models.turbine_models.sector_management.SectorManagement", "foxes.models.turbine_models.set_XYHD", "foxes.models.turbine_models.set_XYHD.SetXYHD", "foxes.models.turbine_models.set_farm_vars", "foxes.models.turbine_models.set_farm_vars.SetFarmVars", "foxes.models.turbine_models.table_factors", "foxes.models.turbine_models.table_factors.TableFactors", "foxes.models.turbine_models.thrust2ct", "foxes.models.turbine_models.thrust2ct.Thrust2Ct", "foxes.models.turbine_models.yaw2yawm", "foxes.models.turbine_models.yaw2yawm.YAW2YAWM", "foxes.models.turbine_models.yawm2yaw", "foxes.models.turbine_models.yawm2yaw.YAWM2YAW", "foxes.models.turbine_types", "foxes.models.turbine_types.CpCt_file", "foxes.models.turbine_types.CpCt_file.CpCtFile", "foxes.models.turbine_types.CpCt_from_two", "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo", "foxes.models.turbine_types.PCt_file", "foxes.models.turbine_types.PCt_file.PCtFile", "foxes.models.turbine_types.PCt_from_two", "foxes.models.turbine_types.PCt_from_two.PCtFromTwo", "foxes.models.turbine_types.null_type", "foxes.models.turbine_types.null_type.NullType", "foxes.models.turbine_types.wsrho2PCt_two_files", "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles", "foxes.models.vertical_profiles", "foxes.models.vertical_profiles.abl_log", "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws", "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws", "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile", "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws", "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.abl_log.abl_log_ws", "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile", "foxes.models.vertical_profiles.abl_log.sheared_ws", "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile", "foxes.models.vertical_profiles.uniform", "foxes.models.vertical_profiles.uniform.UniformProfile", "foxes.models.wake_frames", "foxes.models.wake_frames.farm_order", "foxes.models.wake_frames.farm_order.FarmOrder", "foxes.models.wake_frames.rotor_wd", "foxes.models.wake_frames.rotor_wd.RotorWD", "foxes.models.wake_frames.streamlines", "foxes.models.wake_frames.streamlines.Streamlines", "foxes.models.wake_frames.yawed_wakes", "foxes.models.wake_frames.yawed_wakes.YawedWakes", "foxes.models.wake_models", "foxes.models.wake_models.axisymmetric", "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel", "foxes.models.wake_models.dist_sliced", "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel", "foxes.models.wake_models.gaussian", "foxes.models.wake_models.gaussian.GaussianWakeModel", "foxes.models.wake_models.ti", "foxes.models.wake_models.ti.crespo_hernandez", "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake", "foxes.models.wake_models.ti.iec_ti", "foxes.models.wake_models.ti.iec_ti.IECTIWake", "foxes.models.wake_models.top_hat", "foxes.models.wake_models.top_hat.TopHatWakeModel", "foxes.models.wake_models.wind", "foxes.models.wake_models.wind.bastankhah", "foxes.models.wake_models.wind.bastankhah.BastankhahWake", "foxes.models.wake_models.wind.jensen", "foxes.models.wake_models.wind.jensen.JensenWake", "foxes.models.wake_models.wind.porte_agel", "foxes.models.wake_models.wind.porte_agel.PorteAgelModel", "foxes.models.wake_models.wind.porte_agel.PorteAgelWake", "foxes.models.wake_models.wind.turbopark", "foxes.models.wake_models.wind.turbopark.TurbOParkWake", "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX", "foxes.models.wake_superpositions", "foxes.models.wake_superpositions.linear", "foxes.models.wake_superpositions.linear.LinearSuperposition", "foxes.models.wake_superpositions.max", "foxes.models.wake_superpositions.max.MaxSuperposition", "foxes.models.wake_superpositions.product", "foxes.models.wake_superpositions.product.ProductSuperposition", "foxes.models.wake_superpositions.quadratic", "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition", "foxes.models.wake_superpositions.ti_superp", "foxes.models.wake_superpositions.ti_superp.TISuperposition", "foxes.opt", "foxes.opt.constraints", "foxes.opt.constraints.area_geometry", "foxes.opt.constraints.area_geometry.AreaGeometryConstraint", "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint", "foxes.opt.constraints.min_dist", "foxes.opt.constraints.min_dist.MinDistConstraint", "foxes.opt.core", "foxes.opt.core.farm_constraint", "foxes.opt.core.farm_constraint.FarmConstraint", "foxes.opt.core.farm_objective", "foxes.opt.core.farm_objective.FarmObjective", "foxes.opt.core.farm_opt_problem", "foxes.opt.core.farm_opt_problem.FarmOptProblem", "foxes.opt.core.farm_vars_problem", "foxes.opt.core.farm_vars_problem.FarmVarsProblem", "foxes.opt.core.pop_states", "foxes.opt.core.pop_states.PopStates", "foxes.opt.objectives", "foxes.opt.objectives.farm_vars", "foxes.opt.objectives.farm_vars.FarmVarObjective", "foxes.opt.objectives.farm_vars.MaxFarmPower", "foxes.opt.objectives.farm_vars.MinimalMaxTI", "foxes.opt.objectives.max_n_turbines", "foxes.opt.objectives.max_n_turbines.MaxNTurbines", "foxes.opt.problems", "foxes.opt.problems.layout", "foxes.opt.problems.layout.farm_layout", "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem", "foxes.opt.problems.layout.geom_layouts", "foxes.opt.problems.layout.geom_layouts.constraints", "foxes.opt.problems.layout.geom_layouts.constraints.Boundary", "foxes.opt.problems.layout.geom_layouts.constraints.CFixN", "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN", "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity", "foxes.opt.problems.layout.geom_layouts.constraints.CMinN", "foxes.opt.problems.layout.geom_layouts.constraints.MinDist", "foxes.opt.problems.layout.geom_layouts.constraints.Valid", "foxes.opt.problems.layout.geom_layouts.geom_layout", "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout", "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded", "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded", "foxes.opt.problems.layout.geom_layouts.geom_reggrid", "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid", "foxes.opt.problems.layout.geom_layouts.geom_reggrids", "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids", "foxes.opt.problems.layout.geom_layouts.objectives", "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity", "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing", "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist", "foxes.opt.problems.layout.geom_layouts.objectives.OFixN", "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN", "foxes.opt.problems.layout.geom_layouts.objectives.OMinN", "foxes.opt.problems.layout.reggrids_layout", "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem", "foxes.opt.problems.layout.regular_layout", "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem", "foxes.opt.problems.opt_farm_vars", "foxes.opt.problems.opt_farm_vars.OptFarmVars", "foxes.output", "foxes.output.farm_layout", "foxes.output.farm_layout.FarmLayoutOutput", "foxes.output.farm_results_eval", "foxes.output.farm_results_eval.FarmResultsEval", "foxes.output.flow_plots_2d", "foxes.output.flow_plots_2d.FlowPlots2D", "foxes.output.output", "foxes.output.output.Output", "foxes.output.results_writer", "foxes.output.results_writer.ResultsWriter", "foxes.output.rose_plot", "foxes.output.rose_plot.RosePlotOutput", "foxes.output.rose_plot.StatesRosePlotOutput", "foxes.output.state_turbine_map", "foxes.output.state_turbine_map.StateTurbineMap", "foxes.output.turbine_type_curves", "foxes.output.turbine_type_curves.TurbineTypeCurves", "foxes.utils", "foxes.utils.abl", "foxes.utils.abl.neutral", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.cubic_roots", "foxes.utils.data_book", "foxes.utils.data_book.DataBook", "foxes.utils.dict", "foxes.utils.dict.Dict", "foxes.utils.geom2d", "foxes.utils.geom2d.area_geometry", "foxes.utils.geom2d.area_geometry.AreaGeometry", "foxes.utils.geom2d.area_geometry.AreaIntersection", "foxes.utils.geom2d.area_geometry.AreaUnion", "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry", "foxes.utils.geom2d.area_geometry.InvertedAreaUnion", "foxes.utils.geom2d.circle", "foxes.utils.geom2d.circle.Circle", "foxes.utils.geom2d.example_intersection", "foxes.utils.geom2d.example_union", "foxes.utils.geom2d.half_plane", "foxes.utils.geom2d.half_plane.HalfPlane", "foxes.utils.geom2d.polygon", "foxes.utils.geom2d.polygon.ClosedPolygon", "foxes.utils.geopandas_helpers", "foxes.utils.geopandas_helpers.check_import_gpd", "foxes.utils.geopandas_helpers.check_import_utm", "foxes.utils.geopandas_helpers.read_shp", "foxes.utils.geopandas_helpers.read_shp_polygons", "foxes.utils.geopandas_helpers.shp2csv", "foxes.utils.geopandas_helpers.shp2geom2d", "foxes.utils.pandas_helpers", "foxes.utils.pandas_helpers.PandasFileHelper", "foxes.utils.plotly_helpers", "foxes.utils.plotly_helpers.show_plotly_fig", "foxes.utils.runners", "foxes.utils.runners.DaskRunner", "foxes.utils.runners.DefaultRunner", "foxes.utils.runners.Runner", "foxes.utils.subclasses", "foxes.utils.subclasses.all_subclasses", "foxes.utils.two_circles", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.wind_dir", "foxes.utils.wind_dir.delta_wd", "foxes.utils.wind_dir.uv2wd", "foxes.utils.wind_dir.wd2uv", "foxes.utils.wind_dir.wd2wdvec", "foxes.utils.wind_dir.wdvec2wd", "foxes.variables", "API", "Examples", "History", "Welcome to FOXES", "Installation", "Static data", "Heterogeneous flow", "Layout optimization", "The model book", "Multi-height wind data", "Overview - how to setup foxes", "Power mask", "Wind sector management", "Single row of turbines", "Timeseries data", "Wind rose data", "Yawed rotor wakes"], "terms": {"defin": [0, 56, 204, 286, 288, 395, 398, 399, 400, 404], "main": [0, 3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 392, 393], "calcul": [0, 3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 318, 327, 328, 329, 331, 333, 334, 336, 338, 340, 348, 349, 350, 351, 352, 354, 358, 360, 379, 380, 382, 383, 384, 385, 386, 387, 390, 391, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404], "routin": [0, 3, 17, 31], "modul": [0, 1, 4, 15, 18, 29, 71, 80, 81, 94, 95, 111, 118, 119, 122, 127, 140, 147, 152, 175, 188, 189, 202, 211, 218, 225, 236, 247, 248, 254, 265, 272, 273, 276, 306, 324, 325, 346], "class": [2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 78, 79, 80, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 120, 121, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 359, 360, 368, 369, 372, 373, 374, 375, 377, 393, 396, 404], "sourc": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 362, 363, 364, 365, 366, 367, 369, 371, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 391, 392, 404], "base": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 79, 83, 91, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 329, 336, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 369, 373, 374, 375, 377, 390, 397, 398, 400, 402, 403, 404], "The": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 79, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 366, 367, 369, 373, 374, 375, 377, 379, 380, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "turbin": [3, 6, 8, 10, 12, 14, 17, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 74, 75, 81, 83, 85, 87, 89, 91, 93, 100, 102, 103, 105, 107, 109, 110, 115, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 152, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 175, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 286, 288, 290, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 323, 387, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404], "ar": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 64, 66, 68, 83, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 250, 251, 253, 256, 260, 262, 264, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 348, 349, 350, 351, 352, 354, 358, 360, 379, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "evalu": [3, 6, 10, 17, 46, 51, 62, 64, 66, 129, 131, 133, 135, 137, 139, 149, 151, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 310, 319, 327, 328, 331, 333, 334, 338, 390, 391, 398, 400, 401, 402], "onc": [3, 129, 394, 395, 401, 404], "order": [3, 6, 33, 64, 121, 126, 187, 204, 206, 208, 210, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 345, 387, 395, 399, 400, 401], "i": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 83, 87, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 267, 275, 286, 288, 290, 292, 301, 303, 305, 310, 314, 316, 321, 323, 345, 348, 349, 350, 351, 352, 354, 358, 360, 373, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "provid": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 314, 321, 323, 345, 390, 393, 394, 395, 396, 397, 398, 401, 402], "turbineord": [3, 126], "object": [3, 6, 8, 10, 12, 14, 17, 20, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 100, 102, 103, 105, 107, 109, 110, 113, 114, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305, 308, 312, 314, 318, 319, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 367, 369, 375, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404], "paramet": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 366, 367, 369, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 395, 398, 401, 402, 403], "mbook": [3, 31, 113, 114, 115, 319, 323, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "modelbook": [3, 31, 113, 114, 115, 319, 323, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "model": [3, 17, 28, 31, 35, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 83, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 389, 390, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "book": [3, 31, 56, 87, 113, 114, 115, 215, 220, 222, 224, 227, 229, 232, 234, 235, 319, 323, 343, 389, 391, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403], "farm": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 81, 83, 85, 87, 89, 91, 93, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 119, 121, 122, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 247, 248, 250, 251, 253, 254, 256, 258, 260, 262, 264, 265, 267, 268, 269, 271, 272, 273, 275, 276, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "windfarm": [3, 31, 83, 85, 87, 89, 91, 93, 113, 114, 115, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305, 308, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "wind": [3, 22, 28, 31, 37, 54, 56, 70, 81, 83, 85, 87, 89, 91, 93, 102, 105, 107, 113, 114, 115, 121, 158, 170, 177, 179, 181, 183, 187, 191, 193, 195, 197, 204, 206, 242, 247, 248, 250, 251, 253, 254, 256, 258, 260, 262, 265, 267, 268, 269, 271, 272, 273, 275, 276, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 318, 319, 323, 327, 328, 329, 331, 333, 334, 336, 338, 340, 382, 383, 384, 385, 386, 387, 389, 390, 391, 394, 395, 396, 398, 399, 401, 402, 404], "state": [3, 6, 8, 10, 12, 14, 17, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 56, 58, 60, 62, 64, 66, 68, 113, 114, 116, 117, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 267, 275, 301, 303, 305, 308, 310, 312, 319, 321, 387, 390, 391, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "core": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 89, 91, 93, 100, 102, 103, 105, 107, 109, 110, 113, 114, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 310, 319, 390], "ambient": [3, 12, 14, 17, 28, 46, 51, 54, 66, 68, 100, 129, 131, 133, 135, 137, 139, 146, 149, 151, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 310, 387, 390, 391, 397, 398, 399, 401, 402, 403], "wake_model": [3, 46, 126, 129, 131, 133, 135, 137, 139, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "list": [3, 6, 8, 10, 12, 14, 17, 21, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 70, 79, 83, 91, 93, 100, 102, 103, 105, 107, 109, 110, 115, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 316, 318, 319, 323, 343, 349, 350, 365, 369, 377, 387, 390, 393, 396, 399], "str": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 323, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 366, 367, 369, 373, 387, 390, 396], "wake": [3, 6, 8, 10, 17, 25, 27, 46, 64, 66, 68, 126, 127, 129, 131, 133, 135, 137, 139, 146, 156, 202, 204, 206, 208, 210, 211, 213, 215, 217, 218, 220, 222, 224, 225, 227, 229, 231, 232, 234, 235, 236, 238, 240, 242, 244, 246, 286, 288, 387, 389, 390, 391, 394, 398, 399, 401, 402, 403], "appli": [3, 66, 68, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 310, 395, 404], "all": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 365, 377, 380, 390, 392, 393, 394, 395, 396, 397, 398, 401, 403], "Will": 3, "look": [3, 215, 220, 222, 224, 227, 229, 232, 234, 235, 310, 393, 395, 398, 400, 403], "up": [3, 215, 220, 222, 224, 227, 229, 232, 234, 235, 310], "rotor_model": [3, 126, 129, 131, 133, 139, 394, 395, 396, 397, 399, 400, 402, 403, 404], "rotor": [3, 28, 37, 39, 46, 51, 56, 60, 83, 121, 126, 129, 131, 133, 137, 139, 147, 149, 151, 160, 164, 166, 206, 242, 250, 305, 308, 387, 389, 390, 391, 395, 398, 402], "wake_fram": [3, 46, 126, 129, 131, 133, 135, 137, 139, 394, 395, 396, 397, 399, 400, 402, 403, 404], "frame": [3, 6, 46, 51, 64, 66, 102, 126, 129, 131, 133, 135, 137, 139, 142, 149, 151, 202, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 364, 390, 394, 398, 404], "partial_wakes_model": [3, 394, 395, 397, 399, 400, 402, 403, 404], "partial": [3, 46, 126, 127, 129, 131, 133, 135, 137, 139, 213, 215, 398], "farm_control": [3, 126, 396], "control": [3, 119, 121, 126], "chunk": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 394, 397, 399, 400, 402, 403, 404], "dict": [3, 6, 8, 10, 12, 14, 17, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 74, 75, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 366, 367, 369, 373, 374, 375, 387, 394, 395, 400], "choic": [3, 31, 56, 60, 115, 246, 305, 308, 310, 373, 387, 398, 401, 402, 403, 404], "run": [3, 17, 27, 31, 35, 37, 39, 46, 58, 62, 121, 129, 131, 133, 135, 137, 139, 166, 191, 193, 195, 197, 199, 201, 260, 262, 275, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 373, 374, 375, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403], "parallel": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 373, 390, 391, 395, 398, 402, 403], "dask": [3, 17, 31, 35, 373, 390, 391, 402], "e": [3, 31, 33, 35, 97, 98, 142, 158, 172, 174, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 365, 367, 369, 390, 391, 392, 394, 395, 396, 397, 398, 404], "g": [3, 31, 158, 308, 310, 312, 314, 316, 318, 319, 321, 323, 365, 367, 369, 390, 391, 394, 397, 401, 404], "1000": [3, 31, 158, 310, 394, 395, 397, 399, 400, 402, 403, 404], "dbook": [3, 31, 87, 393], "databook": [3, 31, 79, 87], "option": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 83, 85, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 323, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 367, 369, 373, 390, 395, 397, 398, 400, 402, 403], "data": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 80, 83, 85, 87, 89, 97, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 329, 336, 340, 343, 364, 369, 389, 390, 391, 394, 395, 398, 399, 400, 401, 404], "none": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 79, 83, 87, 91, 93, 100, 102, 103, 105, 107, 109, 110, 115, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 323, 343, 345, 354, 358, 360, 365, 373, 394, 396, 397, 401, 404], "default": [3, 17, 23, 28, 31, 33, 53, 54, 87, 100, 102, 103, 105, 107, 109, 110, 113, 126, 129, 131, 133, 135, 137, 139, 156, 210, 231, 232, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 318, 319, 345, 365, 369, 374, 390, 393, 394, 395, 396, 397, 399, 401, 402, 404], "keep_model": [3, 17, 31, 260], "keep": [3, 31, 253, 392], "memori": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 390, 402], "do": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 116, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 395, 397, 402, 403], "final": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 373, 374, 375, 395, 400, 403], "them": [3, 31, 394, 403], "verbos": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 83, 87, 89, 91, 93, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 312, 316, 366, 373, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "int": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 83, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 115, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 365, 366, 373, 383, 384, 385, 386, 393], "level": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 83, 87, 89, 91, 93, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 312, 316, 366, 373, 390], "0": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 83, 87, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 323, 327, 329, 333, 336, 338, 340, 366, 373, 384, 385, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "mean": [3, 17, 27, 31, 37, 40, 49, 68, 121, 267, 268, 308, 310, 312, 318, 319, 390, 395, 397, 402, 403], "silent": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 83, 87, 89, 91, 93, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 316, 366, 373], "type": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 97, 100, 102, 103, 105, 107, 109, 110, 113, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 175, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 369, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 387, 390, 393, 394, 395, 396, 398, 399, 401, 402, 404], "wakemodel": [3, 46, 126, 129, 131, 133, 135, 137, 139, 215], "rotormodel": [3, 126, 129, 131, 133, 139, 149, 151], "wakefram": [3, 46, 126, 129, 131, 133, 135, 137, 139, 204, 206, 208, 210], "partialwakesmodel": [3, 129, 131, 135, 137, 139], "farmcontrol": [3, 121, 126], "n_state": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 262, 264, 275, 301, 303, 305, 401], "number": [3, 17, 27, 31, 51, 53, 54, 66, 70, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 129, 149, 151, 168, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 244, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 312, 318, 319, 373, 395, 396, 398], "__init__": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 369, 373, 374, 375], "centr": [3, 51, 151, 160, 208, 220, 222, 224, 229, 354, 358, 379, 380, 387, 390, 393, 395, 396, 399, 400, 401, 402, 403, 404], "rotor_wd": [3, 395, 396, 397, 399, 400, 402, 403], "auto": [3, 98, 394, 395, 396, 397, 399, 400, 402, 403, 404], "basic_ctrl": [3, 396], "1": [3, 17, 27, 51, 70, 83, 87, 89, 91, 93, 97, 98, 100, 115, 149, 151, 177, 179, 181, 183, 187, 220, 222, 234, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 323, 366, 373, 379, 380, 383, 384, 385, 386, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "method": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 79, 87, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 369, 373, 374, 375], "attribut": [3, 6, 8, 10, 12, 14, 17, 20, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 369, 373, 374, 375, 393], "farmwakescalcul": [3, 17], "farmdatamodel": [3, 6, 8, 12, 17, 25, 27, 37, 40, 42, 51, 58], "thi": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 310, 312, 314, 345, 354, 358, 360, 369, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "effect": [3, 8, 10, 17, 25, 46, 51, 139, 149, 151, 387, 398, 399, 400, 403, 404], "pre_rotor": [3, 6, 8, 17, 25, 37, 39, 42, 58, 121, 166, 172, 174, 262, 305], "fals": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 83, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 316, 348, 349, 350, 351, 352, 354, 358, 360, 365, 367, 390, 394], "algo": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 113, 114, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 275, 301, 303, 305, 310, 312, 394, 395, 397, 399, 400, 401, 402, 403, 404], "mdata": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264], "fdata": [3, 6, 8, 10, 12, 14, 17, 25, 27, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264], "function": [3, 6, 8, 10, 12, 14, 17, 25, 27, 29, 31, 35, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 64, 73, 80, 81, 82, 84, 86, 88, 90, 92, 96, 100, 102, 103, 105, 107, 109, 110, 111, 112, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 250, 251, 253, 254, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 306, 308, 310, 312, 314, 316, 318, 319, 321, 323, 325, 326, 330, 332, 333, 335, 337, 338, 339, 361, 370, 373, 374, 375, 376, 378, 379, 381, 390, 393, 395, 396, 403], "execut": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 53, 54, 58, 60, 64, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 264, 373, 374, 392], "singl": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 48, 49, 53, 54, 58, 60, 64, 93, 100, 102, 103, 105, 109, 110, 121, 124, 142, 144, 146, 149, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 318, 319, 389, 390, 391, 393, 397, 398], "comput": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 46, 48, 49, 53, 54, 58, 60, 64, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 232, 264, 319, 390, 398, 404], "should": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 380, 392, 394, 395, 399, 400, 402, 403, 404], "numpi": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 91, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 319, 348, 349, 350, 351, 352, 354, 358, 360, 379, 380, 382, 383, 384, 385, 386, 394, 395, 399, 401, 404], "arrai": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 365, 382, 383, 384, 385, 386, 394, 395, 404], "return": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 97, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 318, 319, 321, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 367, 369, 373, 374, 375, 377, 379, 380, 382, 383, 384, 385, 386, 401], "result": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 28, 35, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 318, 319, 321, 373, 374, 375, 390, 395, 397, 398, 399, 401, 402, 403, 404], "kei": [3, 6, 8, 10, 12, 14, 17, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 345, 365, 396], "output": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 70, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 366, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "variabl": [3, 6, 8, 10, 12, 14, 17, 22, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 97, 98, 100, 102, 103, 105, 107, 109, 110, 116, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 390, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "valu": [3, 6, 8, 10, 12, 14, 17, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 64, 66, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 197, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 312, 316, 318, 319, 323, 333, 335, 338, 339, 343, 345, 365, 373, 374, 375, 387, 390, 394, 399, 400, 404], "ndarrai": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 91, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 319, 348, 349, 350, 351, 352, 354, 358, 360, 365, 379, 380, 382, 383, 384, 385, 386, 404], "shape": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 91, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 319, 348, 349, 350, 351, 352, 354, 358, 360, 364, 365, 366, 380, 382, 383, 384, 385, 386, 390, 401, 404], "n_turbin": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 278, 283, 286, 288, 290, 308, 395, 397, 399, 400, 401], "get_data": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264, 318, 319], "st_sel": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "upcast": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "data_prio": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "accept_non": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "getter": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "entri": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369, 390, 393, 400], "either": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 253, 264, 305, 343, 345, 400], "given": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 327, 331, 333, 338, 343, 345, 373, 374, 375, 390, 400], "serv": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 393], "bool": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 79, 83, 89, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 316, 343, 348, 349, 350, 351, 352, 354, 358, 360, 365, 367, 373, 374, 375], "If": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 262, 264, 316, 318, 319, 345, 365, 399, 402], "get": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 318, 319, 343, 345, 348, 349, 350, 351, 352, 354, 358, 360, 390, 393], "specifi": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 345, 395, 402], "subset": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 390, 396], "point": [3, 6, 8, 10, 12, 14, 17, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 91, 93, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 140, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 286, 288, 290, 292, 301, 312, 318, 319, 348, 349, 350, 351, 352, 354, 358, 360, 365, 379, 380, 390, 393, 394, 395, 397, 398, 400, 401, 402, 403], "broadcast": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 380, 384, 385], "potenti": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "scalar": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dimens": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 310, 346, 385, 393, 395, 401, 404], "n_point": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264, 286, 288, 290, 292, 348, 349, 350, 351, 352, 354, 358, 360, 365, 401], "respect": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 91, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 393, 402, 403, 404], "first": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 75, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 345, 392, 395, 397, 402, 403, 404], "search": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 377, 390, 396, 397, 401, 402], "throw": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "an": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 345, 394, 400, 402, 404], "error": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 343, 362, 363, 402], "np": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 365, 394, 395, 399, 401, 404], "nan": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 264, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 310, 390, 399], "initi": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 373, 374, 375, 390, 395, 397], "includ": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 323, 343, 390, 392, 393, 395, 403, 404], "load": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 390, 394], "requir": [3, 6, 8, 10, 12, 14, 17, 22, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 391, 393, 394, 395, 396, 398, 402, 404], "from": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 74, 75, 79, 87, 89, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 115, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 345, 365, 377, 383, 384, 385, 386, 387, 390, 392, 394, 395, 397, 398, 399, 400, 401, 402, 404], "file": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 74, 75, 79, 83, 85, 87, 89, 98, 100, 102, 103, 105, 107, 109, 110, 111, 114, 115, 116, 117, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 364, 365, 366, 369, 390, 391, 392, 394, 395, 397, 400, 401, 402, 403], "part": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 393, 395, 397, 398, 400], "idata": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dictionari": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 369], "store": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 264, 396], "under": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 390, 391, 393, 394, 396, 399, 404], "self": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308], "reason": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dure": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 390, 395, 396, 402], "ha": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 345, 384, 385, 390, 391, 394, 397, 399, 400, 402], "exactli": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "two": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 91, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 346, 379, 380, 390, 394, 395, 398, 399, 400, 402, 404], "data_var": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "name_str": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dim_tupl": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "data_ndarrai": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "coord": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dim_name_str": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "dim_arrai": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "properti": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 70, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 373, 374, 375], "flag": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 89, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 343, 348, 349, 350, 351, 352, 354, 358, 360, 373, 374, 375, 392, 395], "true": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 23, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 79, 89, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 312, 343, 348, 349, 350, 351, 352, 354, 358, 360, 365, 373, 394, 395, 397, 399, 402, 403], "been": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 390, 391], "model_id": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "uniqu": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "id": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 83, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264], "output_farm_var": [3, 6, 8, 12, 17, 25, 27, 37, 39, 40, 42, 51, 58, 60, 121, 124, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187], "which": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 264, 267, 275, 286, 288, 290, 292, 301, 303, 305, 308, 312, 319, 383, 386, 391, 394, 395, 398, 401, 402, 403, 404], "being": [3, 6, 8, 10, 12, 14, 17, 25, 27, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 66, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305], "modifi": [3, 6, 8, 10, 12, 14, 17, 25, 27, 37, 39, 40, 42, 46, 48, 49, 51, 53, 54, 58, 60, 66, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 264], "output_var": [3, 6, 8, 10, 12, 14, 17, 25, 27, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 393, 394, 395, 397, 399, 400, 402, 403, 404], "name": [3, 6, 8, 10, 12, 14, 17, 20, 21, 22, 25, 27, 28, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 56, 58, 60, 62, 64, 66, 68, 70, 74, 75, 79, 83, 89, 91, 93, 97, 98, 100, 102, 103, 105, 107, 109, 110, 113, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 345, 365, 390, 392, 393, 394, 395, 396, 397, 399, 400, 402], "run_calcul": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264], "out_var": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264], "calc_par": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264], "start": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 83, 100, 102, 103, 105, 107, 109, 110, 115, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 210, 264, 343, 390, 393, 399, 401, 404], "via": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 83, 85, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369, 373, 390, 391, 395, 398, 399, 402, 404], "xarrai": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 308, 310, 312, 316, 318, 321, 390, 395, 401], "": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 131, 133, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 310, 312, 345, 387, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "apply_ufunc": [3, 6, 8, 10, 12, 14, 17, 25, 27, 33, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264], "typic": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305], "call": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 390, 392, 398, 399, 401, 404], "tupl": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 85, 87, 97, 98, 100, 102, 103, 105, 107, 109, 110, 121, 124, 135, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 217, 227, 234, 235, 264, 305, 308, 310, 312, 321, 323, 345, 367, 373, 374, 375], "dataset": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 308, 310, 312, 316, 318, 321, 390, 395, 401], "input": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 62, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 264, 366, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "addit": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 64, 83, 85, 100, 102, 103, 105, 107, 109, 110, 113, 114, 115, 116, 117, 121, 124, 131, 133, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 204, 206, 208, 210, 235, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 301, 303, 305, 316, 321, 323, 364, 365, 366, 400, 402, 403], "argument": [3, 6, 8, 10, 12, 14, 17, 25, 27, 35, 37, 39, 40, 42, 48, 49, 51, 53, 54, 58, 60, 100, 102, 103, 105, 107, 109, 110, 114, 116, 117, 121, 124, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 264, 286, 288, 290, 292, 305, 308, 310, 321, 323, 345, 367, 373, 374, 375, 393, 399, 402, 403], "var": [3, 6, 8, 10, 12, 14, 17, 25, 27, 28, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 310, 312, 318, 319], "v": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 345, 383, 384], "creat": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 33, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 305, 308, 318, 319, 321, 323, 345, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "specif": [3, 6, 8, 10, 12, 14, 17, 25, 27, 31, 35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 121, 124, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 264, 402], "pointwakescalcul": [3, 17], "pointdatamodel": [3, 10, 14, 17, 49, 53, 54, 126, 142, 144, 146], "interest": [3, 10, 17, 323, 398, 401], "point_var": [3, 10, 14, 17], "emodel": [3, 10, 17], "pointdatamodellist": [3, 10, 17, 53], "extra": [3, 10, 17, 312], "emodels_cpar": [3, 10, 17], "pdata": [3, 10, 14, 17, 48, 49, 53, 54, 100, 102, 103, 105, 107, 109, 110, 142, 144, 146, 264], "output_point_var": [3, 10, 14, 17, 48, 49, 53, 54, 100, 102, 103, 105, 107, 109, 110, 142, 144, 146, 264], "setambpointresult": [3, 17], "copi": [3, 12, 14, 17, 33, 51, 149, 151, 345], "treat": [3, 14, 17, 310], "vars_to_amb": [3, 12, 14, 17, 399], "pvar": [3, 14, 17], "calc_farm": [3, 17, 260, 394, 397, 399, 400, 401, 402, 403, 404], "calc_paramet": [3, 17], "persist": [3, 17], "switch": [3, 17, 51, 149, 151, 267, 390, 400], "forc": [3, 17, 170, 392], "after": [3, 17, 51, 53, 68, 83, 149, 151, 158, 238, 240, 242, 244, 246, 312, 395, 399], "instead": [3, 17, 83, 100, 102, 109, 220, 227, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 316, 390, 392, 397, 403, 404], "farm_result": [3, 17, 308, 310, 312, 316, 321, 394, 397, 399, 400, 401, 402, 403, 404], "have": [3, 17, 51, 149, 151, 154, 380, 390, 395, 397, 398, 399, 400, 401, 403], "calc_point": [3, 17, 312, 401], "point_model": [3, 17, 53, 126, 396], "persist_mdata": [3, 17], "persist_pdata": [3, 17], "set": [3, 17, 27, 33, 35, 37, 56, 60, 97, 98, 121, 142, 164, 166, 308, 345, 390, 393, 399, 400, 402, 403, 404], "3": [3, 17, 31, 51, 64, 66, 137, 139, 144, 149, 151, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 308, 319, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "kept": [3, 17, 31], "persist_fdata": [3, 17], "point_result": [3, 17, 401], "clear_mem": [3, 17, 31], "clear": [3, 17, 31, 33, 345, 398], "finalize_model": [3, 17, 31], "get_models_data": [3, 17, 31], "take": [3, 17, 31, 46, 312], "idata_mem": [3, 17, 31], "current": [3, 17, 20, 21, 22, 23, 31, 260, 262, 275, 301, 303, 305, 398, 400], "init_st": [3, 17], "need": [3, 17, 62, 191, 193, 195, 197, 199, 201, 395, 397, 399, 400, 403], "classmethod": [3, 17, 31, 46, 62, 129, 131, 133, 135, 137, 139, 191, 193, 195, 197, 199, 201, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369], "new": [3, 17, 31, 33, 46, 62, 68, 129, 131, 133, 135, 137, 139, 191, 193, 195, 197, 199, 201, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 390, 392, 395, 396], "algo_typ": [3, 17, 31, 113], "arg": [3, 17, 31, 85, 87, 305, 345, 367, 373, 374, 375, 403], "kwarg": [3, 17, 31, 33, 46, 62, 85, 87, 98, 115, 116, 117, 129, 131, 133, 135, 137, 139, 154, 191, 193, 195, 197, 199, 201, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 282, 283, 284, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 345, 364, 365, 367, 369, 373, 374, 375, 403], "time": [3, 17, 31, 46, 62, 100, 129, 131, 133, 135, 137, 139, 191, 193, 195, 197, 199, 201, 264, 308, 310, 312, 314, 316, 318, 319, 321, 323, 390, 392, 393, 394, 397, 398, 399, 402, 403], "factori": [3, 17, 31, 46, 62, 129, 131, 133, 135, 137, 139, 191, 193, 195, 197, 199, 201, 308, 310, 312, 314, 316, 318, 319, 321, 323], "select": [3, 17, 22, 28, 31, 37, 46, 56, 58, 60, 62, 68, 100, 102, 103, 109, 110, 121, 124, 126, 129, 131, 133, 135, 137, 139, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 390, 394, 395, 396, 397, 398, 401, 402], "deriv": [3, 17, 31, 46, 62, 129, 131, 133, 135, 137, 139, 191, 193, 195, 197, 199, 201, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 377], "constructor": [3, 17, 31, 113, 396, 402], "new_point_data": [3, 17, 31], "states_indic": [3, 17, 31], "contain": [3, 17, 31, 33, 79, 126, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 343, 365, 394, 395, 396, 398, 399, 401, 402], "onli": [3, 17, 31, 83, 129, 204, 217, 220, 222, 224, 227, 229, 234, 235, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 318, 319, 390, 392, 393, 396, 401, 402, 404], "array_lik": [3, 17, 31, 33, 35, 53, 54, 56, 91, 97, 98, 100, 102, 103, 105, 107, 109, 110, 264], "indic": [3, 17, 31, 51, 53, 54, 91, 93, 100, 102, 103, 105, 107, 109, 110, 149, 151, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 308, 316], "A": [3, 17, 21, 27, 31, 40, 42, 49, 79, 105, 107, 185, 234, 235, 246, 286, 288, 290, 292, 310, 343, 345, 393, 394, 396], "print": [3, 17, 31, 126, 250, 251, 253, 256, 258, 267, 268, 269, 271, 308, 310, 312, 314, 316, 318, 319, 321, 323, 373, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404], "update_idata": [3, 17, 31], "add": [3, 17, 21, 27, 31, 40, 49, 51, 53, 56, 66, 68, 70, 79, 83, 85, 87, 89, 91, 93, 149, 151, 166, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 312, 343, 348, 349, 350, 351, 352, 354, 358, 360, 395, 396, 399, 400, 401, 402], "updat": [3, 17, 31, 33, 46, 68, 129, 131, 133, 135, 137, 139, 158, 238, 240, 242, 244, 246, 260, 262, 275, 301, 303, 305, 345, 395, 404], "els": [3, 17, 31, 33, 51, 149, 151, 318, 319, 345], "update_n_turbin": [3, 17, 31], "reset": [3, 17, 31, 102, 103, 109, 110, 166, 397, 399], "accord": [3, 17, 31, 46, 87, 129, 131, 133, 135, 137, 139, 197, 369, 396, 400], "downwind": [17, 113, 390, 394, 395, 397, 399, 400, 401, 402, 403, 404], "repeat": [17, 305], "until": [17, 390], "converg": [17, 27, 390], "achiev": 17, "conv": [17, 27], "convcrit": [17, 21, 22, 27], "criteria": [17, 20, 21, 22, 23, 27], "max_it": [17, 27], "maxim": [17, 27, 151, 158, 208, 210, 220, 222, 224, 227, 229, 231, 232, 234, 235, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 323, 348, 349, 350, 351, 352, 354, 358, 360, 387, 390, 395, 399], "conv_error": [17, 27], "keyword": [17, 113, 305, 367, 373, 374, 375], "defaultconv": 17, "abstract": [20, 29, 31, 35, 39, 42, 46, 48, 51, 54, 58, 60, 62, 64, 66, 68, 213, 215, 217, 224, 254, 256, 258, 260, 262, 348, 349, 375, 390], "check_converg": [20, 21, 22, 23], "fdata0": [20, 21, 22, 23], "fdata1": [20, 21, 22, 23], "check": [20, 21, 22, 23, 79, 231, 250, 251, 253, 256, 260, 262, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305, 343, 362, 363, 379, 395, 402], "previou": [20, 21, 22, 23, 68, 238, 240, 242, 244, 246], "crit": 21, "add_crit": 21, "criterion": 21, "limit": [22, 210, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 242, 390], "float": [22, 28, 56, 60, 64, 102, 105, 107, 156, 158, 177, 179, 181, 183, 187, 204, 206, 208, 210, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 242, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 318, 319, 323, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 354, 379, 384, 385, 393, 395], "wd_var": [22, 318, 319], "direct": [22, 54, 105, 107, 151, 206, 312, 318, 319, 358, 382, 383, 384, 385, 386, 387, 390, 393, 394, 397, 398, 400, 401, 402, 403, 404], "unit": [22, 28, 60, 158, 220, 253, 310, 387, 393], "deg": [22, 393], "convvardelta": 23, "farmdatamodellist": [27, 37], "loop": [27, 33, 35], "within": [27, 162, 286, 288, 290, 292, 343, 379, 392, 395, 398], "each": [27, 35, 37, 40, 46, 49, 56, 64, 66, 68, 97, 98, 129, 131, 133, 135, 137, 139, 187, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 258, 267, 268, 269, 271, 294, 295, 296, 297, 298, 299, 310, 312, 323, 393, 395, 398, 399, 401, 402, 403, 404], "individu": [27, 35, 56, 60, 187, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 395, 398], "mlist": 27, "model_wflag": 27, "append": [27, 40, 49, 53], "wflag": 27, "one": [27, 40, 46, 49, 51, 64, 66, 68, 129, 131, 133, 135, 137, 139, 149, 151, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 321, 323, 380, 390, 393, 397, 403, 404], "identifi": [28, 390], "tname": [28, 395, 400, 401], "rpoint": [28, 51, 137, 139, 149, 151], "rweight": 28, "weight": [28, 51, 53, 54, 97, 98, 100, 102, 103, 105, 107, 109, 110, 129, 139, 149, 151, 264, 310, 312, 387, 393, 395, 400, 401, 403], "amb_rpoint_result": 28, "valid": [28, 181, 183, 227, 271, 286, 288, 290, 292, 391, 402], "tmodel": 28, "tmodels_sel": 28, "dtype": [28, 395], "alia": 28, "ityp": 28, "kappa": [28, 327, 329, 333, 336, 338, 340], "van": [28, 327, 329, 333, 336, 338, 340], "karman": [28, 327, 329, 333, 336, 338, 340], "w": [28, 60, 102, 107, 144, 177, 179, 181, 183, 187, 327, 331, 333, 338, 384, 385, 387, 390, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "watt": [28, 310], "kw": [28, 60, 158, 185, 310], "kilo": 28, "mw": [28, 60, 74, 75, 393, 397, 399, 402, 403], "mega": 28, "gw": [28, 60, 391], "giga": 28, "tw": 28, "terra": 28, "p_unit": [28, 60, 185, 390], "power": [28, 60, 126, 158, 177, 179, 181, 183, 187, 268, 310, 323, 387, 389, 390, 391, 395, 397, 398, 400, 402, 403, 404], "factor": [28, 158, 168, 220, 227, 234, 235, 267, 328, 334, 387, 390, 404], "rel": [28, 387], "pop": [28, 33, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 345], "popul": [28, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 393, 395], "collect": [31, 71, 118, 246, 312, 398, 401], "meant": 31, "top": [31, 139, 224, 404], "code": [31, 231, 390, 391, 392], "meta": 33, "us": [33, 35, 40, 49, 68, 83, 131, 135, 144, 158, 204, 210, 213, 215, 220, 227, 231, 232, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 316, 390, 392, 395, 396, 397, 398, 399, 401, 402, 403, 404], "usual": [33, 398], "dim": 33, "same": [33, 62, 191, 193, 195, 197, 199, 201, 305, 310, 380, 382, 402, 404], "loop_dim": [33, 35], "size": [33, 51, 53, 54, 64, 100, 102, 103, 105, 107, 109, 110, 149, 151, 204, 206, 208, 210, 235, 264, 308, 323, 394, 395, 402], "__new__": [33, 345, 349], "remov": [33, 166, 345, 392, 399], "item": [33, 345], "d": [33, 56, 60, 74, 75, 185, 220, 250, 253, 278, 286, 288, 290, 292, 308, 345, 379, 380, 387, 395, 401], "shallow": [33, 345], "fromkei": [33, 345], "iter": [33, 204, 345, 390], "like": [33, 345, 393, 398, 400], "view": [33, 345], "k": [33, 156, 210, 220, 222, 227, 229, 231, 232, 345, 387, 396, 402, 403], "correspond": [33, 46, 129, 131, 133, 135, 137, 139, 158, 345, 383, 386, 387, 392, 396, 397, 400], "found": [33, 37, 79, 343, 345, 396, 401, 402], "otherwis": [33, 79, 343, 345, 362, 363, 397], "keyerror": [33, 79, 343, 345], "rais": [33, 79, 100, 343, 345, 362, 363], "popitem": [33, 345], "pair": [33, 345], "2": [33, 56, 91, 93, 97, 98, 135, 144, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 286, 288, 290, 292, 308, 345, 348, 349, 350, 351, 352, 354, 358, 360, 365, 379, 380, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "lifo": [33, 345], "last": [33, 310, 345, 392], "out": [33, 151, 345, 400, 404], "empti": [33, 345], "setdefault": [33, 345], "insert": [33, 56, 345, 384, 385], "f": [33, 154, 345, 397, 399, 402, 403, 404], "present": [33, 345, 399], "doe": [33, 185, 286, 288, 290, 292, 345, 397, 399], "lack": [33, 345], "In": [33, 51, 149, 151, 227, 345, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "case": [33, 51, 79, 100, 113, 114, 149, 151, 310, 318, 319, 321, 323, 343, 345, 390, 395, 399, 400, 401, 402, 404], "follow": [33, 102, 208, 222, 345, 390, 393, 394, 395, 397, 398, 399, 400, 402, 403, 404], "thei": [35, 51, 56, 64, 66, 149, 151, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 390, 393, 394, 395, 396, 398, 402], "depend": [35, 51, 129, 135, 142, 149, 151, 181, 183, 187, 213, 215, 217, 220, 222, 224, 227, 229, 234, 235, 250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 305, 387, 390, 392, 394, 397, 398, 402, 404], "For": [35, 46, 56, 64, 66, 68, 97, 98, 129, 131, 133, 135, 137, 139, 158, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 323, 392, 393, 395, 397, 398, 399, 401, 402, 404], "algorithm": [35, 37, 39, 40, 42, 44, 46, 48, 49, 51, 53, 54, 58, 60, 62, 64, 66, 68, 100, 102, 103, 105, 107, 109, 110, 113, 114, 121, 124, 126, 129, 131, 133, 135, 137, 139, 142, 144, 146, 149, 151, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174, 177, 179, 181, 183, 185, 187, 191, 193, 195, 197, 199, 201, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 264, 301, 303, 310, 312, 390, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404], "out_core_var": 35, "fc": [35, 271, 394, 397, 399, 400, 402, 403, 404], "analys": [37, 113], "handl": [37, 390], "par": [37, 121, 231], "turbine_typ": [37, 126, 323, 393, 396, 400, 401, 402], "turbinetyp": [37, 126, 181, 183, 185, 187], "turbine_model_nam": 37, "turbine_model_sel": 37, "n_model": 37, "pre_rotor_model": 37, "pre": [37, 121, 392, 399], "post_rotor_model": 37, "without": [37, 121, 310, 395, 399, 401], "respecitv": 37, "post": [37, 121, 391, 398], "collect_model": [37, 121], "analyz": [37, 121], "gather": [37, 121], "set_par": [37, 121], "model_nam": [37, 121], "init_par": [37, 121], "final_par": [37, 121], "datacalcmodel": [39, 48, 390], "befor": [39, 66, 83, 166, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 260, 262, 271, 275, 301, 303, 305, 312, 395], "By": [40, 49, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 404], "togeth": [40, 49, 404], "common": [40, 49, 210, 231, 232], "oper": [42, 68, 238, 240, 242, 244, 246, 310, 399], "contrast": 42, "turbinemodel": [42, 56, 60, 124, 126, 154, 156, 158, 160, 162, 164, 166, 168, 170, 172, 174], "allow": [42, 97, 98, 390, 395], "applic": [42, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 391, 395], "quantiti": [46, 51, 398], "contribute_to_wake_delta": [46, 66, 129, 131, 133, 135, 137, 139, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "states_source_turbin": [46, 64, 66, 68, 129, 131, 133, 135, 137, 139, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246], "wake_delta": [46, 66, 68, 129, 131, 133, 135, 137, 139, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246], "delta": [46, 66, 68, 129, 131, 133, 135, 137, 139, 146, 172, 174, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 310, 382, 390, 398], "contribut": [46, 66, 68, 129, 131, 133, 135, 137, 139, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246], "index": [46, 53, 54, 56, 64, 66, 68, 83, 100, 102, 103, 105, 107, 109, 110, 129, 131, 133, 135, 137, 139, 162, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 312, 379, 390, 393, 399, 400, 402, 404], "caus": [46, 64, 66, 68, 129, 131, 133, 135, 137, 139, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 238, 240, 242, 244, 246, 390], "ani": [46, 129, 131, 133, 135, 137, 139, 185, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 373, 374, 375, 382, 383, 384, 385, 386, 392, 394, 398, 402, 404], "new_wake_delta": [46, 129, 131, 133, 135, 137, 139], "evaluate_result": [46, 129, 131, 133, 135, 137, 139], "states_turbin": [46, 51, 129, 131, 133, 135, 137, 139, 149, 151], "update_amb_r": [46, 129, 131, 133, 135, 137, 139], "place": [46, 129, 131, 133, 135, 137, 139, 301, 303, 305, 312, 394, 395, 399], "fill": [46, 79, 100, 129, 131, 133, 135, 137, 139, 348, 349, 350, 351, 352, 354, 358, 360], "pwake_typ": [46, 129, 131, 133, 135, 137, 139], "zero": [46, 129, 131, 133, 135, 137, 139, 156, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 373, 387, 401], "calc_var": [51, 149, 151, 160], "Their": [51, 151], "ad": [51, 66, 68, 81, 151, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 310, 390, 392, 395, 396, 400, 401, 402, 403, 404], "automat": [51, 149, 151, 308, 310, 312, 390, 402], "store_rpoint": [51, 149, 151], "store_rweight": [51, 149, 151], "store_amb_r": [51, 149, 151], "n_rpoint": [51, 149, 151], "reult": [51, 149, 151], "come": [51, 149, 151, 393, 400, 402], "per": [51, 102, 149, 151, 213, 301, 310, 373, 400], "design_point": [51, 149, 151], "design": [51, 149, 151], "formul": [51, 149, 151, 400], "plane": [51, 149, 151, 312, 358], "x": [51, 64, 83, 91, 100, 129, 149, 151, 164, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 231, 232, 234, 235, 308, 312, 323, 348, 349, 350, 351, 352, 354, 358, 360, 385, 386, 387, 391, 393, 394, 395, 397, 401, 402, 403, 404], "y": [51, 83, 91, 100, 149, 151, 164, 308, 312, 323, 348, 349, 350, 351, 352, 354, 358, 360, 385, 386, 387, 393, 394, 395, 401, 402], "z": [51, 149, 151, 312], "coordin": [51, 64, 66, 100, 149, 151, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 267, 286, 288, 290, 292, 308, 312, 365, 387, 393, 394, 395, 398, 401], "radiu": [51, 149, 151, 220, 222, 224, 227, 229, 250, 354, 379, 380], "n_rotor_axi": [51, 149, 151], "n_rotor_sid": [51, 149, 151], "n_rotor_up": [51, 149, 151], "dpoint": [51, 149, 151], "eval_rpoint_result": [51, 149, 151], "rpoint_result": [51, 149, 151], "copy_to_ambi": [51, 149, 151], "latter": [51, 129, 149, 151, 365, 390, 395, 399, 400, 402, 404], "expect": [51, 74, 75, 149, 151, 162, 168, 394, 397], "get_rotor_point": [51, 149, 151], "n_rotor_point": [51, 149, 151], "rotor_point_weight": [51, 149, 151], "extend": [53, 391], "pmodel": 53, "label": [53, 54, 56, 100, 102, 103, 105, 107, 109, 110, 264, 312, 323, 393, 400, 402], "integ": [53, 54, 100, 102, 103, 105, 107, 109, 110, 250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "total": [53, 54, 68, 70, 100, 102, 103, 105, 107, 109, 110, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 310, 390, 395], "statist": [53, 54, 100, 102, 103, 105, 107, 109, 110, 264, 387, 393, 403], "describ": [54, 393, 394, 401], "meteorolog": [54, 398], "speed": [54, 102, 105, 107, 158, 170, 177, 179, 181, 183, 187, 191, 193, 195, 197, 242, 323, 327, 328, 329, 331, 333, 334, 336, 338, 340, 384, 385, 387, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404], "turbul": [54, 218, 234, 387, 390, 394, 397, 398, 402, 403, 404], "intens": [54, 218, 387, 390, 394, 398, 402, 403, 404], "air": [54, 105, 107, 177, 179, 181, 183, 187, 323, 387, 390, 394, 397], "densiti": [54, 105, 107, 177, 179, 187, 323, 387, 390, 394, 397], "mere": 56, "basic": [56, 74, 75, 129, 164, 395, 397], "xy": [56, 286, 288, 290, 292, 312, 390, 394, 404], "ground": [56, 387], "posit": [56, 250, 251, 275, 390, 399], "turbine_model": [56, 83, 115, 124, 126, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "appear": [56, 222, 395, 397, 399, 402, 404], "models_state_sel": 56, "boolean": [56, 154, 250, 251, 253, 256, 260, 262, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305], "diamet": [56, 60, 83, 164, 220, 286, 288, 290, 292, 308, 387, 390, 395, 398], "overwrit": 56, "h": [56, 60, 74, 75, 100, 185, 308, 387, 393, 394, 395, 397, 401], "hub": [56, 60, 83, 390, 397, 398, 401], "height": [56, 60, 62, 83, 100, 102, 103, 164, 191, 193, 195, 197, 199, 201, 327, 328, 329, 331, 333, 334, 335, 336, 338, 339, 340, 387, 389, 390, 391, 393, 394, 398, 401], "mstates_sel": 56, "add_model": 56, "states_sel": [56, 102, 103, 109, 110], "insert_model": 56, "can": [60, 131, 142, 215, 231, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "overwritten": 60, "p_nomin": [60, 185, 310, 387, 390], "nomin": [60, 310, 399], "vertic": [62, 189, 312, 390, 397, 404], "profil": [62, 107, 109, 110, 188, 189, 191, 193, 195, 197, 199, 201, 328, 334, 390, 393, 397], "input_var": [62, 191, 193, 195, 197, 199, 201], "profile_typ": [62, 191, 193, 195, 197, 199, 201], "translat": [64, 113, 262, 275, 301, 303, 305, 398, 404], "global": [64, 393], "also": [64, 308, 390, 391, 393, 395, 398, 399, 400, 402, 404], "respons": [64, 398, 400], "calc_centreline_integr": [64, 204, 206, 208, 210], "dx": [64, 204, 206, 208, 210, 235, 396], "ipar": [64, 102, 103, 168, 204, 206, 208, 210, 235], "integr": [64, 151, 204, 206, 208, 210, 235, 390], "along": [64, 151, 204, 206, 208, 210, 390, 398, 401, 404], "centrelin": [64, 204, 206, 208, 210, 235, 390, 398], "upper": [64, 204, 206, 208, 210, 250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284], "bound": [64, 100, 204, 206, 208, 210, 250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284], "step": [64, 91, 93, 151, 204, 206, 208, 210, 235, 310, 323, 390, 394, 396, 397, 398, 403], "interpol": [64, 102, 168, 177, 179, 181, 183, 187, 204, 206, 208, 210], "n_var": [64, 204, 206, 208, 210, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "calc_ord": [64, 204, 206, 208, 210], "get_centreline_point": [64, 204, 206, 208, 210], "get_wake_coo": [64, 204, 206, 208, 210], "wake_coo": [64, 66, 204, 206, 208, 210, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "fly": [66, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "ob": [66, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "finalize_wake_delta": [66, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "amb_result": [66, 68, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246], "afterward": [66, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "init_wake_delta": [66, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "storag": [66, 208, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "superposit": [68, 126, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 236, 242, 246, 390, 396, 398, 403], "note": [68, 301, 308, 310, 312, 314, 316, 318, 319, 321, 323, 393, 394, 395, 397, 400, 401, 403, 404], "matter": [68, 399], "other": [68, 105, 260, 262, 275, 301, 303, 305, 321, 390, 392, 394, 396, 398, 399, 400, 404], "calc_final_wake_delta": [68, 238, 240, 242, 244, 246], "final_wake_delta": [68, 238, 240, 242, 244, 246], "simpl": [68, 238, 240, 242, 244, 246, 390, 394, 399, 401, 404], "plu": [68, 238, 240, 242, 244, 246, 365, 367], "calc_wakes_plus_wak": [68, 238, 240, 242, 244, 246], "sel_sp": [68, 238, 240, 242, 244, 246], "wake_model_result": [68, 238, 240, 242, 244, 246], "origin": [68, 238, 240, 242, 244, 246, 260, 262, 264, 275, 301, 303, 305, 351, 352, 391], "n_sel_sp": [68, 238, 240, 242, 244, 246], "wdelta": [68, 213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 238, 240, 242, 244, 246], "boundari": [70, 250, 251, 286, 288, 290, 292, 308, 325, 348, 349, 350, 351, 352, 354, 358, 360, 393, 395], "util": [70, 126, 250, 286, 288, 290, 292, 390, 395, 402, 403], "geom2d": [70, 250, 286, 288, 290, 292, 367, 395], "areageometri": [70, 250, 286, 288, 290, 292, 349, 350, 351, 354, 358, 360, 367], "add_turbin": [70, 83, 404], "turbine_nam": [70, 316], "static": [71, 79, 177, 179, 181, 183, 187, 343, 349, 390, 391, 394, 395, 397, 400, 401, 402, 403], "file_nam": [74, 79, 318, 319, 343], "format": [74, 75, 100, 102, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369, 393, 394], "csv": [74, 75, 83, 85, 102, 308, 316, 366, 390, 395, 397, 400, 401, 402, 403], "pathlib": [74, 75, 79, 343, 393], "path": [74, 75, 79, 87, 89, 98, 102, 109, 114, 115, 116, 117, 126, 162, 168, 177, 179, 181, 183, 187, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 360, 364, 365, 366, 369, 391, 402], "parsed_data": [74, 75], "file_name_a": 75, "file_name_b": 75, "second": [75, 387], "directori": 79, "add_data_packag": [79, 343], "context": [79, 343, 395], "packag": [79, 343, 390, 391, 392, 393, 395, 396, 398, 401, 404], "file_sfx": [79, 343], "locat": [79, 149, 343, 384, 385, 392, 393, 400, 404], "must": [79, 253, 343, 394], "init": [79, 124, 262, 275, 301, 303, 305, 343], "end": [79, 100, 310, 343, 369], "add_data_package_fil": [79, 343], "py": [79, 343], "file_man": [79, 343], "add_fil": [79, 343], "file_path": [79, 87, 89, 98, 308, 310, 312, 314, 316, 318, 319, 321, 323, 343, 369], "get_file_path": [79, 343, 393], "check_raw": [79, 343], "exist": [79, 162, 231, 250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284, 343, 398, 401, 404], "toc": [79, 343, 393], "content": [79, 126, 343, 391, 402], "definit": 80, "data_sourc": [83, 85, 100, 102, 103, 109, 110, 142, 162, 168, 177, 181, 393, 394, 395, 397, 399, 400, 402, 403, 404], "col_index": 83, "col_nam": 83, "col_x": 83, "col_i": 83, "col_h": 83, "col_d": 83, "col_id": 83, "cols_models_pr": 83, "cols_models_post": 83, "turbine_base_nam": 83, "t": [83, 170, 310, 387], "turbine_id": 83, "turbine_base_name_count_shift": 83, "turbine_paramet": [83, 89, 91, 93], "panda": [83, 85, 97, 98, 102, 103, 109, 110, 142, 162, 168, 177, 179, 181, 183, 187, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369, 390, 399, 400, 401, 402, 404], "datafram": [83, 85, 97, 98, 102, 109, 142, 162, 168, 177, 179, 181, 183, 187, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369, 390, 399, 400, 401, 402, 404], "column": [83, 97, 98, 102, 109, 142, 162, 168, 177, 179, 181, 183, 187, 308, 310, 312, 314, 316, 318, 319, 321, 323, 365, 369, 393, 397, 399, 400, 402], "enter": 83, "forward": [83, 87, 89, 91, 93, 124, 308, 310, 312, 314, 316, 318, 319, 321, 323, 369], "add_from_csv": 85, "infer": [87, 89, 401], "suffix": [87, 100], "set_farm_nam": 89, "turbim": 89, "json": [89, 308], "xy_bas": [91, 93, 394, 395, 397, 399, 400, 401, 403], "step_vector": [91, 394, 403], "regular": [91, 100, 151, 290, 292, 301, 303, 390, 403], "vector": [91, 93, 260, 262, 264, 275, 286, 288, 290, 292, 301, 303, 305, 312, 358, 383, 384, 385, 386, 387, 391, 395, 402, 403], "length": [91, 97, 98, 135, 208, 264, 327, 328, 329, 333, 334, 336, 338, 340, 387, 390, 393], "xy_step": [93, 395, 397, 399, 400, 401], "atmospher": [94, 325, 393], "cols_minmax": [97, 98], "var2col": [97, 98, 102, 103, 109, 110, 142, 393, 395, 397, 400, 402, 403], "mol_abs_rang": [97, 98], "50": [97, 98, 102, 393, 395, 396, 397, 400, 403], "5000": [97, 98, 395, 399, 402], "normal": [97, 98, 146, 206, 308, 393, 399, 403], "random": [97, 393], "abl": [97, 191, 193, 195, 197], "min": [97, 98, 162, 250, 251, 253, 256, 267, 278, 279, 280, 281, 282, 283, 284, 305, 308, 310, 312, 390, 400], "max": [97, 98, 162, 246, 250, 251, 253, 256, 267, 278, 279, 280, 281, 282, 283, 284, 305, 308, 310, 312, 390, 396, 400], "map": [97, 98, 100, 102, 109, 142, 162, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 310, 312, 314, 316, 318, 319, 321, 323, 387, 390, 396, 397, 400], "mol": [97, 98, 197, 335, 336, 339, 340, 387, 393], "exceed": [97, 98, 100], "neutral": [97, 98, 191, 197], "stratif": [97, 98], "digit": 98, "written": [98, 142, 316, 391], "to_csv": [98, 366], "heterogen": [100, 389, 391, 397], "horizont": [100, 312, 390, 393, 394, 397, 401], "grid": [100, 131, 288, 290, 292, 301, 303, 390, 394, 403], "netcdf": [100, 394], "pattern": [100, 390, 399], "nc": [100, 390, 394], "One": [100, 394], "mani": [100, 390, 391], "var2ncvar": [100, 394], "fixed_var": [100, 102, 103, 109, 110, 116, 393, 394, 395, 397, 399, 400, 402, 403, 404], "uniform": [100, 102, 107, 109, 116, 142, 156, 305, 390, 393, 401, 402, 404], "read": [100, 102, 109, 113, 114, 115, 116, 117, 142, 162, 168, 177, 179, 181, 183, 187, 364, 365, 366, 367, 369, 390, 394, 402], "states_coord": [100, 394], "x_coord": [100, 394], "y_coord": [100, 394], "h_coord": [100, 394], "pre_load": [100, 394], "weight_ncvar": 100, "bounds_error": [100, 394], "fill_valu": 100, "time_format": [100, 394], "datetim": 100, "pars": [100, 260, 262, 275, 301, 303, 305], "string": [100, 126, 308, 310, 312, 314, 316, 318, 319, 321, 323], "sel": [100, 305], "xr": 100, "ovar": [100, 102, 109, 142, 168], "utmx": [100, 394], "utmi": [100, 394], "m": [100, 102, 187, 208, 253, 312, 387, 392, 393, 394, 397, 401, 402, 403], "d_": 100, "multipl": [102, 213, 390, 391, 400], "taken": [102, 401], "exampl": [102, 323, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "60": [102, 395], "100": [102, 208, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "fix": [102, 105, 109, 116, 288, 390], "pd_read_par": [102, 103, 109, 110, 142], "slice": [102, 103, 109, 110, 131, 401], "rang": [102, 103, 109, 110, 162, 390, 399, 400, 404], "states_loc": [102, 103, 109, 110, 397], "loc": [102, 103, 109, 110, 399, 400], "scipi": [102, 168, 187], "interp1d": 102, "rdict": [102, 109], "multiheightst": [103, 390], "multi": [103, 215, 389, 390, 391], "timeseri": [103, 310, 389, 391, 397], "ws_list": 105, "wd": [105, 107, 162, 206, 383, 384, 385, 386, 387, 390, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "ti": [105, 107, 144, 156, 235, 246, 269, 323, 387, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "rho": [105, 107, 177, 179, 181, 183, 323, 387, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "verticalprofil": [107, 109, 191, 193, 195, 197, 199, 201], "profdata": 107, "profdict": [107, 109], "readabl": [109, 400, 402], "rpar": [109, 181], "statest": [110, 116, 393, 395, 399, 400, 403, 404], "usingin": 111, "yaml": [111, 114, 115, 116, 117, 390], "keymap": 113, "algo_par": [113, 395], "sub": [113, 262, 305, 390, 395], "case_yaml": 114, "site_par": 114, "farm_par": 114, "ana_par": 114, "read_sit": 114, "read_farm": 114, "read_analys": 114, "farm_yaml": 115, "layout": [115, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 305, 308, 318, 319, 389, 390, 391, 402], "add_from_df": [115, 390], "res_yaml": 116, "energi": [116, 397, 398], "resourc": 116, "occur": 116, "site_yaml": 117, "site": [117, 393, 395], "read_resourc": 117, "condit": [121, 162, 250, 379, 390, 395, 398, 400, 401, 404], "farmmodel": [124, 126], "wrapper": 124, "promot": 124, "simpli": [124, 146, 392, 393, 396, 400, 403], "kind": [126, 394, 404], "pct_file": 126, "ct": [126, 158, 170, 177, 179, 181, 183, 187, 210, 220, 222, 224, 227, 229, 231, 232, 234, 235, 323, 387, 390, 393, 399, 401, 404], "curv": [126, 177, 179, 181, 183, 187, 323, 390, 391, 399], "creation": [126, 318, 319, 403], "turbine_ord": 126, "farm_model": [126, 396], "partial_wak": [126, 396], "partialwakemodel": 126, "wake_superposit": [126, 396], "wakesuperposit": [126, 215, 238, 240, 242, 244, 246], "print_toc": [126, 396], "axial": 129, "idea": [129, 242, 399], "radial": [129, 213, 217, 220, 222, 224, 227, 229, 234, 235], "n": [129, 131, 133, 151, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 312, 358, 393, 396, 401, 402, 404], "radii": [129, 220, 222, 224, 229, 379], "cover": 129, "target": [129, 400], "disc": [129, 139, 250, 398], "overlap": [129, 139, 151], "circl": [129, 139, 286, 288, 290, 292, 379, 380, 395], "area": [129, 151, 250, 348, 349, 350, 351, 352, 354, 358, 360, 365, 380, 390, 395], "ones": [129, 131, 133, 135, 137, 139], "distanc": [131, 220, 253, 286, 288, 290, 292, 301, 348, 349, 350, 351, 352, 354, 358, 360, 379, 380, 395, 404], "make": [131, 371, 379, 392, 395, 402], "structur": [131, 187, 390, 397, 402], "optin": [131, 365], "done": [131, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "differ": [131, 133, 135, 393, 394, 400], "gridrotor": [131, 133, 396], "grotor": 131, "partialdistslicedwak": [133, 215, 396], "mai": [133, 158, 394, 404], "more": [135, 390, 400, 402], "than": [135, 242, 402], "invok": [135, 158, 204, 390, 391, 392, 395, 402, 403, 404], "wname2pwak": 135, "wtype2pwak": 135, "directli": [137, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 319, 343, 400], "get_wake_point": [137, 139], "hat": [139, 224, 404], "both": [142, 217, 227, 234, 235, 301, 399, 402, 403], "assum": [142, 379], "Or": 142, "independ": [142, 397], "tke": [144, 390, 393, 397, 398], "sqrt": 144, "subtract": [146, 395], "divid": [146, 312], "compos": 151, "possibli": 151, "kick": 151, "outsid": [151, 394], "reduc": [151, 310, 390], "reduct": 151, "actual": [151, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 390, 392, 397, 399, 401], "repres": [151, 168, 187, 308, 354, 358, 360, 393, 403, 404], "circ": 151, "recalcul": 151, "accordingli": 151, "nint": 151, "element": 151, "200": [151, 393, 395, 397, 399, 404], "in_var": 154, "vairabl": 154, "func": [154, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 373, 374, 375], "in0": 154, "in1": 154, "stsel": 154, "out0": 154, "ou1": 154, "where": [154, 308, 384, 385, 395, 397, 398, 400, 404], "inx": 154, "outi": 154, "linear": [156, 246, 396, 403], "kb": [156, 387, 390], "ti_var": [156, 235], "ti_val": 156, "k_var": [156, 210, 220, 222, 227, 229, 232], "derat": [158, 323, 387, 390, 399, 400], "below": [158, 312, 390, 392], "rate": 158, "higher": [158, 238, 242, 390], "boost": [158, 323, 387, 390, 399, 400], "introduc": [158, 390], "p": [158, 181, 183, 187, 308, 310, 312, 314, 316, 318, 319, 321, 323, 387, 390, 391, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "so": [158, 390, 398, 399, 401], "wise": [158, 168], "var_ws_p": [158, 181, 183, 187], "lookup": [158, 170, 181, 183, 187, 310], "factor_p": 158, "rews3": [158, 181, 183, 187, 387], "chang": [162, 390, 391, 392, 393, 397], "range_var": [162, 400], "target_var": [162, 400], "col_tind": 162, "col_tnam": [162, 400], "colmap": [162, 400], "var_period": 162, "period": 162, "pd_file_read_par": [162, 168, 177, 181], "amb_wd": [162, 318, 319, 387, 401], "360": 162, "set_xi": 164, "set_h": 164, "set_d": 164, "add_var": [166, 305, 399, 404], "multipli": [168, 220, 227, 234, 235, 390], "dimension": [168, 390], "tabl": [168, 390, 399, 400], "col_var": 168, "row_var": 168, "row": [168, 292, 301, 389, 391, 397, 399, 402], "onto": 168, "interpn": [168, 187], "thrust": [170, 387, 390, 391, 398, 399, 404], "thrust_var": 170, "var_ws_ct": [170, 181, 183, 187], "wsct": [170, 181, 183, 187], "rews2": [170, 181, 183, 187, 387], "yaw": [172, 174, 181, 183, 187, 210, 232, 387, 389, 390, 391, 396], "yawm": [172, 174, 210, 231, 232, 387, 404], "absolut": [172, 174, 387, 390, 404], "pctfile": [177, 179, 393, 396, 400, 401, 402], "cp": [177, 179, 390], "col_w": [177, 181, 183], "col_cp": [177, 179], "paramer": [177, 179, 181], "225": [177, 179, 187, 323, 393, 394, 395, 399, 400, 401, 402, 403, 404], "pctfromtwo": 179, "data_source_cp": 179, "data_source_ct": [179, 183, 187], "col_ws_cp_fil": 179, "pd_file_read_pars_cp": 179, "pd_file_read_pars_ct": [179, 183, 187], "col_p": [181, 183], "col_ct": [181, 183], "densitii": [181, 183], "correct": [181, 183, 204, 220, 222, 242, 390, 398, 399, 401], "p_ct": [181, 183, 187], "expon": [181, 183, 187, 331, 387, 390, 404], "p_p": [181, 183, 187, 404], "wsp": [181, 183, 187], "88": [181, 183, 187, 393, 395, 402, 404], "data_source_p": [183, 187], "col_ws_p_fil": 183, "col_ws_ct_fil": 183, "pd_file_read_pars_p": [183, 187], "source_p": [183, 187], "source_ct": [183, 187], "rpars_p": [183, 187], "rpars_ct": [183, 187], "950": [187, 395], "975": 187, "275": 187, "subsequ": [187, 398], "neccessarili": [187, 402], "interpn_pars_p": 187, "interpn_pars_ct": 187, "ipars_p": 187, "ipars_ct": 187, "verctic": 188, "logarithm": 189, "log": [191, 193, 195, 197, 328, 334], "stabl": [193, 197, 392], "unstabl": [195, 197], "pick": 197, "warn": 204, "test": [204, 348, 349, 350, 351, 352, 354, 358, 360, 390, 393], "purpos": [204, 393, 395, 401], "gener": [204, 235, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 312, 324, 390, 393, 395], "give": [204, 402], "when": [204, 390, 393, 394, 395, 399, 402], "base_fram": [204, 210], "rotorwd1": 204, "rotorwd": [204, 210, 396], "align": 206, "axi": [206, 250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 308, 312, 318, 319, 321, 323, 348, 349, 350, 351, 352, 354, 358, 360, 383, 384, 385, 386, 401, 404], "local": [206, 220, 391, 392, 393, 395, 398, 402], "var_wd": 206, "n_delstor": 208, "increas": 208, "max_length": 208, "cl_ipar": 208, "line": [208, 220, 222, 224, 229, 348, 349, 350, 351, 352, 354, 358, 360, 390, 392, 401], "100000": [208, 399], "bend": [210, 390, 404], "bastankhah": [210, 231, 232, 390, 404], "port": [210, 231, 232, 404], "agel": [210, 231, 232, 404], "2016": [210, 231, 232, 390], "http": [210, 220, 222, 227, 231, 232, 234, 235, 242, 371, 379, 390, 391, 392, 402], "doi": [210, 220, 227, 231, 232], "org": [210, 220, 227, 231, 232, 234, 235, 242], "10": [210, 220, 227, 231, 232, 234, 235, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "1017": [210, 231, 232], "jfm": [210, 231, 232], "595": [210, 231, 232], "growth": [210, 220, 222, 227, 229, 232, 234, 235, 387, 403], "here": [210, 220, 227, 229, 232, 390, 391, 393, 395, 397, 399, 400, 401, 402, 403, 404], "ct_max": [210, 220, 222, 224, 227, 229, 231, 232, 234, 235], "beyond": [210, 220, 222, 224, 227, 229, 231, 232, 234, 235], "9999": [210, 220, 222, 224, 227, 229, 231, 232, 234, 235], "alpha": [210, 231, 232, 391, 395], "determin": [210, 231, 232, 310, 390, 398], "onset": [210, 231, 232], "far": [210, 231, 232, 390], "region": [210, 231, 232], "beta": [210, 231, 232], "porteagelmodel": [210, 232], "misalign": [210, 232, 404], "58": [210, 231, 232, 393, 395], "07": [210, 231, 232, 394, 396], "distslicedwakemodel": [213, 232], "r": [213, 217, 220, 222, 224, 227, 229, 234, 235], "separ": [213, 215, 390, 398], "abil": [213, 215], "partialaxiwak": [213, 396], "calc_wakes_spsel_x_r": [213, 217, 220, 222, 224, 227, 229, 234, 235], "n_r_per_x": [213, 217, 220, 222, 224, 227, 229, 234, 235], "n_sp_sel": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "sp_sel": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "non": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 250, 251, 253, 256, 262, 275, 278, 279, 280, 281, 282, 283, 284, 301, 303, 305, 391, 392], "calc_wakes_spsel_x_yz": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "yz": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235, 312, 390], "n_yz_per_x": [213, 215, 217, 220, 222, 224, 227, 229, 232, 234, 235], "denpend": 215, "superp": 215, "axisymmetricwakemodel": [217, 224], "calc_amplitude_sigma_spsel": [217, 227, 234, 235], "amplitud": [217, 227, 234, 235], "sigma": [217, 227, 234, 235, 390], "amsi": [217, 227, 234, 235], "tophatwakemodel": [220, 222, 229], "crespo": 220, "hernandez": 220, "empir": 220, "correl": 220, "1016": [220, 227], "0167": 220, "6105": 220, "95": [220, 393, 395, 403], "00033": 220, "we": [220, 390, 391, 392, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "eqn": 220, "17": [220, 393, 395, 399, 403], "15": [220, 393, 394, 395, 397, 399, 400, 402, 403], "4": [220, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "5": [220, 234, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "1088": [220, 234, 235], "1742": [220, 234, 235], "6596": [220, 234, 235], "625": 220, "012039": 220, "use_ambti": 220, "sbeta_factor": [220, 227, 234, 235], "sbeta": [220, 227, 234, 235], "near_wake_d": 220, "a_near": 220, "a_far": 220, "e1": 220, "e2": 220, "e3": 220, "25": [220, 227, 234, 235, 393, 395, 397, 399, 401, 402], "362": 220, "73": [220, 395], "83": [220, 395], "0325": 220, "32": [220, 395], "calc_centreline_wake_delta": [220, 222, 224, 229], "wake_r": [220, 222, 224, 229], "cl_del": [220, 222, 224, 229], "varlu": [220, 222, 224, 229], "calc_wake_radiu": [220, 222, 224, 229], "iec": 222, "64100": 222, "2005": 222, "8": [222, 234, 242, 308, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "orbit": 222, "dtu": 222, "dk": 222, "3750291": 222, "2009_31": 222, "pdf": [222, 234, 235, 242], "v2": 222, "volluk": 222, "implement": [222, 395, 398], "document": [222, 390], "frandsen": [222, 234, 390], "2019": 222, "opening_angl": 222, "open": [222, 390], "angl": [222, 231, 387, 394, 404], "21": [222, 393, 395, 399], "6": [222, 391, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "iec_typ": 222, "deficit": [225, 242, 398, 402, 403, 404], "gaussianwakemodel": [227, 234, 235], "j": 227, "renen": 227, "2014": 227, "01": [227, 393, 395, 396, 397, 402], "002": 227, "modif": 227, "constant": [227, 327, 329, 333, 336, 338, 340, 390, 394, 397, 399, 400, 402, 403, 404], "fit": 227, "better": 227, "repetit": 231, "avoid": [231, 404], "calc_data": 231, "gamma": [231, 404], "radiant": [231, 404], "clean": 231, "has_data": 231, "porteagel": [232, 390], "iopscienc": [234, 235], "iop": [234, 235], "articl": [234, 235], "2265": [234, 235], "022063": [234, 235], "c1": [234, 296], "c2": [234, 296], "over": [235, 310, 318, 319, 387, 390, 395, 403], "streamlin": [235, 390, 394, 396, 398], "supersposit": [238, 240, 244], "rescal": [238, 240, 242, 244], "scale": [238, 240, 244, 267, 296, 394], "rule": [238, 240, 244, 267, 390, 400, 404], "source_turbin": [238, 240, 244], "source_turbine_amb": [238, 240, 244], "source_turbine_": [238, 240, 244], "lim_low": [238, 242], "lower": [238, 242, 250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284, 390], "lim_high": [238, 242], "maximum": [240, 312, 390, 403], "dimensionless": 242, "field": [242, 310, 394, 398, 401, 403, 404], "rather": 242, "equival": [242, 398, 402, 404], "arxiv": 242, "2010": 242, "03873": 242, "equat": [242, 390], "quadrat": [246, 396], "superp_to_amb": 246, "combin": [246, 404], "optim": [247, 248, 250, 251, 253, 254, 256, 258, 260, 262, 265, 267, 268, 269, 271, 272, 273, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 389, 390, 391], "farmconstraint": [250, 253], "constrain": [250, 251], "insid": [250, 251, 348, 349, 350, 351, 352, 354, 358, 360, 394], "geometri": [250, 286, 288, 290, 292, 346, 348, 349, 350, 351, 352, 354, 358, 360, 365, 367, 395], "problem": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 390, 395, 402], "farmoptproblem": [250, 251, 253, 256, 258, 262, 267, 268, 269, 271, 390], "underli": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 308, 310, 312, 314, 316, 318, 319, 321, 323], "sel_turbin": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305], "disc_insid": 250, "ensur": 250, "full": [250, 390, 393, 397], "iwopi": [250, 253, 256, 258, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 391, 395], "add_to_layout_figur": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305], "ax": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 308, 312, 321, 323, 348, 349, 350, 351, 352, 354, 358, 360, 393, 395, 397, 399, 400, 401, 402, 403], "figur": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 308, 312, 318, 319, 348, 349, 350, 351, 352, 354, 358, 360, 371, 390, 395, 397, 401, 402], "matplotlib": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305, 308, 312, 348, 349, 350, 351, 352, 354, 358, 360, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "pyplot": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 286, 288, 290, 292, 301, 303, 305, 308, 321, 323, 348, 349, 350, 351, 352, 354, 358, 360, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "ana_deriv": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "vars_int": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "vars_float": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "compon": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 383, 384, 386, 395], "analyt": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "possibl": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 400], "cannot": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "n_vars_int": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 395], "n_vars_float": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 395], "differenti": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "n_sel_compon": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "calc_individu": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "problem_result": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 395], "calc_popul": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "n_pop": [250, 251, 253, 256, 258, 260, 262, 264, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "check_individu": [250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284], "constraint_valu": [250, 251, 253, 256, 260, 262, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305], "fullfil": [250, 251, 253, 256, 260, 262, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305], "n_compon": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "check_popul": [250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284], "component_nam": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "finalize_individu": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "champion": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "finalize_popul": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "get_bound": [250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284], "express": [250, 251, 253, 256, 278, 279, 280, 281, 282, 283, 284, 310], "inf": [250, 251, 253, 256, 260, 262, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 301, 303, 305], "finish": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305, 395], "n_sel_turbin": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305], "numer": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 301, 303, 305], "print_model": [250, 251, 253, 256, 258, 267, 268, 269, 271, 308, 310, 312, 314, 316, 318, 319, 321, 323], "rename_vars_float": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "varmap": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "renam": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 390], "old": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "rename_vars_int": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "var_names_float": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "var_names_int": [250, 251, 253, 256, 258, 260, 262, 267, 268, 269, 271, 275, 278, 279, 280, 281, 282, 283, 284, 286, 288, 290, 292, 294, 295, 296, 297, 298, 299, 301, 303, 305], "vardeps_float": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "dep": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "vardeps_int": [250, 251, 253, 256, 258, 267, 268, 269, 271, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "areageometryconstraint": 251, "least": 253, "minim": [253, 260, 262, 267, 269, 275, 286, 288, 290, 292, 301, 303, 305, 323, 348, 349, 350, 351, 352, 354, 358, 360, 395], "spatial": [253, 390, 393], "min_dist_unit": [253, 395], "dist": [253, 348, 349, 350, 351, 352, 354, 358, 360], "constaint": [253, 283], "constraint": [256, 260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 395], "runner": [260, 262, 275, 301, 390, 395, 402, 403], "calc_farm_arg": [260, 262, 275], "add_constraint": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 395], "varmap_int": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "varmap_float": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "add_object": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 395], "all_turbin": [260, 262, 275, 301, 303, 305], "subject": [260, 262, 275, 301, 303, 305], "apply_individu": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "apply_popul": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "whole": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 390], "calc_gradi": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "ivar": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "fvar": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "vr": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "gradient": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "get_gradi": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "overload": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "consid": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 402], "optfunctionlist": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "wrt": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 348, 349, 350, 351, 352, 354, 358, 360], "n_vr": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "check_constraints_individu": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "check_constraints_popul": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "constraints_tol": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "toler": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "ctol": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "n_constraint": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 395], "counter": [260, 262, 275, 301, 303, 305], "evaluate_individu": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "ret_prob_r": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "addition": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "obj": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "n_object": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 395], "con": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "evaluate_popul": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "obtain": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 393, 397, 403], "link": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 391, 395, 402], "were": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 390, 398, 403, 404], "previous": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "cf": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305, 400], "problemdefaultfunc": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "initial_values_float": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "initial_values_int": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "drop_var": 260, "exclud": 260, "decid": [260, 392], "about": [260, 310, 395, 399], "drop": 260, "max_values_constraint": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "cma": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "max_values_float": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "unbound": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "max_values_int": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "int_inf": [260, 262, 275, 286, 290, 292, 301, 303, 305], "maximize_obj": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "min_values_constraint": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "cmi": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "min_values_float": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "min_values_int": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "sum": [260, 262, 267, 275, 286, 288, 290, 292, 301, 303, 305, 308, 310, 390, 402], "n_con": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "n_obj": [260, 262, 275, 286, 288, 290, 292, 301, 303, 305], "parse_tvar": [260, 262, 275, 301, 303, 305], "tvr": [260, 262, 275, 301, 303, 305], "turbine_i": [260, 262, 275, 301, 303, 305], "tvar": [260, 262, 275, 301, 303, 305], "update_problem_individu": [260, 262, 275, 301, 303, 305], "latest": [260, 262, 275, 301, 303, 305, 392], "update_problem_popul": [260, 262, 275, 301, 303, 305], "pre_rotor_var": 262, "post_rotor_var": 262, "post_rotor": 262, "super": [262, 275, 301, 303, 305], "opt2farm_vars_individu": [262, 275, 301, 303, 305], "farm_var": [262, 275, 301, 303, 305], "opt2farm_vars_popul": [262, 275, 301, 303, 305], "helper": [264, 314, 369], "artifici": 264, "farmobject": [267, 271], "contract_st": 267, "contract": [267, 310], "contract_turbin": 267, "farmvarobject": [268, 269], "maximize_pow": [268, 395], "minimize_ti": 269, "turrbin": 271, "check_valid": 271, "count": [271, 390], "farmvarsproblem": [275, 301, 303, 305, 390], "pure": [276, 286, 288, 312, 390], "geometr": [276, 286, 288, 390], "cmpnt": [278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299], "min_valu": 281, "dfactor": [281, 294], "min_dens": 281, "min_dist": [283, 286, 288, 290, 292, 294, 301, 395], "involv": [286, 288, 290, 292, 390], "between": [286, 288, 290, 292, 301, 379, 380, 387, 394, 395, 397], "fulli": [286, 288, 290, 292, 310, 391], "calc_valid": 286, "get_fig": [286, 288, 290, 292], "titl": [286, 288, 290, 292, 308, 312, 318, 319, 321, 323, 393, 397, 399, 400, 402, 403], "true_circl": [286, 288, 290, 292], "barg": [286, 288, 290, 292, 308], "plotli": [286, 288, 290, 292, 371, 390], "ndarari": [286, 288, 290, 292], "draw": [286, 288, 290, 292], "bar": [286, 288, 290, 292, 312, 373, 403], "plot": [286, 288, 290, 292, 308, 312, 318, 319, 321, 323, 348, 349, 350, 351, 352, 354, 358, 360, 371, 390, 394, 395, 399, 400, 401, 402, 403, 404], "background": [288, 390, 394, 395, 398], "grid_spac": 288, "space": [288, 301, 303, 312], "max_dist": [290, 292, 301], "n_grid": [292, 301], "n_max": 292, "n_row_max": [292, 301], "max_dens": 294, "max_dxdi": 295, "500": [296, 312, 393, 394, 395, 396, 397, 400, 403], "c3": 296, "mimamean": 296, "maxn": 298, "omaxn": 299, "sever": [301, 390], "mix": 301, "min_spac": [301, 303], "max_n_row": 301, "its": [303, 391, 398, 401], "typ": 305, "model_kei": 305, "tool": [306, 367, 402], "from_result": 308, "results_st": 308, "from_r": 308, "fre": 308, "get_figur": [308, 318, 319, 393, 395, 397, 400, 402, 403], "color_bi": [308, 397, 402, 403], "fontsiz": 308, "figsiz": [308, 312, 321, 323, 393, 394, 395, 397, 399, 400, 401, 402, 403], "annot": [308, 397, 402, 403], "fig": [308, 312, 371, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "normalize_d": 308, "ret_im": [308, 312], "scatter": [308, 390], "color": [308, 312, 348, 349, 350, 351, 352, 354, 358, 360, 390, 402], "mean_rew": [308, 397, 402, 403], "etc": [308, 395, 397], "plt": [308, 312, 321, 323, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "No": 308, "imag": [308, 312, 348, 349, 350, 351, 352, 354, 358, 360], "im": [308, 312], "pathcollect": 308, "get_layout_data": 308, "get_layout_dict": 308, "model_typ": [308, 310, 312, 314, 316, 318, 319, 321, 323], "write": [308, 310, 312, 314, 316, 318, 319, 321, 323, 366, 369, 390], "format_col2var": [308, 310, 312, 314, 316, 318, 319, 321, 323], "format_dict": [308, 310, 312, 314, 316, 318, 319, 321, 323, 369], "flappi": [308, 310, 312, 314, 316, 318, 319, 321, 323, 390, 391], "fv": [308, 310, 312, 314, 316, 318, 319, 321, 323, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "4f": [308, 310, 312, 314, 316, 318, 319, 321, 323, 369], "write_csv": [308, 316], "write_json": 308, "xyh": [308, 387], "write_plot": 308, "write_xyh": 308, "farm_calc": 310, "add_capac": [310, 402], "p_nom": 310, "capac": [310, 387, 390, 402], "add_effici": [310, 402, 403], "effici": [310, 387, 390, 397, 399, 402, 403], "calc_farm_effici": [310, 397, 402, 403], "eff": [310, 387, 402], "calc_farm_mean": 310, "calc_farm_sum": 310, "calc_farm_yield": [310, 397, 403], "turbine_yield": 310, "power_uncert": 310, "yield": [310, 312, 387, 390, 391, 397, 398, 402, 403], "p75": [310, 390], "p90": [310, 390], "uncertainti": 310, "trigger": 310, "calc_turbine_yield": [310, 402], "farm_yield": 310, "calc_mean_farm_pow": [310, 397, 399, 402, 403], "calc_states_mean": 310, "calc_states_std": 310, "standard": [310, 401], "deviat": 310, "_type_": 310, "_description_": 310, "calc_states_sum": 310, "calc_turbine_mean": 310, "calc_turbine_sum": 310, "annual": [310, 397, 402, 403], "hour": 310, "delta_t": 310, "p_unit_w": 310, "retur": 310, "durat": 310, "datetime64": 310, "seri": [310, 390, 398, 402], "gwh": [310, 387, 397, 402, 403], "reduce_al": 310, "states_op": 310, "turbines_op": 310, "some": [310, 377, 395, 398, 399, 404], "reduce_st": [310, 402], "vars_op": 310, "reduce_turbin": 310, "weinsum": 310, "rh": 310, "einstein": [310, 390], "It": [310, 391, 394, 397, 399, 400], "right": [310, 312], "hand": 310, "side": 310, "einsum": 310, "convent": 310, "mention": [310, 393, 397], "obligatori": 310, "2d": [312, 348, 358, 360, 403], "flow": [312, 389, 390, 391, 397, 398, 401], "gen_states_fig_xi": [312, 394, 401, 404], "resolut": [312, 394, 395, 397, 401, 403, 404], "xmin": [312, 395, 397, 404], "ymin": [312, 395, 404], "xmax": [312, 395, 397, 404], "ymax": [312, 395, 404], "xlabel": 312, "ylabel": 312, "xspace": [312, 394], "yspace": [312, 394], "var_min": 312, "var_max": 312, "normalize_xi": 312, "normalize_var": 312, "vlabel": 312, "add_bar": 312, "cmap": [312, 318, 319, 399], "quiver_n": [312, 394], "quiver_par": [312, 394], "ret_stat": 312, "contourf": 312, "minimum": 312, "colormap": 312, "th": 312, "quiver": 312, "si": 312, "quadmesh": 312, "quadcontourset": 312, "gen_states_fig_xz": [312, 397], "x_direct": [312, 397], "270": [312, 393, 397, 399, 401, 404], "zmin": [312, 397, 404], "zmax": [312, 397, 404], "zlabel": 312, "zspace": 312, "normalize_x": 312, "normalize_z": 312, "xz": [312, 390], "north": [312, 400], "abov": [312, 391, 395, 399, 400, 402, 404], "ech": 312, "gen_states_fig_yz": [312, 404], "normalize_i": 312, "left": 312, "get_mean_fig_xi": [312, 395, 403], "weight_turbin": 312, "get_mean_fig_xz": 312, "get_mean_fig_yz": 312, "job": 314, "handi": 314, "rose": [318, 319, 389, 390, 391, 393, 395, 400, 402], "sector": [318, 319, 389, 390, 391, 398, 402], "var_bin": [318, 319], "legend": [318, 319], "bin": [318, 319, 392, 393, 402, 403], "seper": [318, 319], "relev": [318, 319], "pd": [318, 319, 399, 400, 404], "get_data_info": [318, 319], "dname": [318, 319], "descript": [318, 319], "long": [318, 319, 390], "text": [318, 319], "turbo": [318, 319], "layout_dict": [318, 319], "title_dict": [318, 319], "px": [318, 319], "write_figur": [318, 319], "roseplotoutput": [319, 400], "ws_var": 319, "amb_rew": [319, 387, 394, 399, 401, 402], "heat": [321, 390], "plot_map": [321, 399], "subplot": [321, 323, 393, 395, 399, 401, 402, 403], "pcolormesh": 321, "plot_curv": [323, 393, 399], "p_max": [323, 348, 349, 350, 351, 352, 354, 358, 360, 395, 399], "x_label": 323, "y_label": 323, "ws_min": [323, 400], "ws_max": [323, 400], "30": [323, 393, 395, 402, 403, 404], "ws_step": 323, "05": [323, 393, 395, 397, 399, 400, 403, 404], "pmax_arg": 323, "mask": [323, 389, 390, 391, 400], "labl": 323, "layer": [325, 393], "z0": [327, 328, 329, 333, 334, 336, 338, 340, 387, 393], "ustar": [327, 333, 338], "41": [327, 329, 333, 336, 338, 340, 395], "rough": [327, 328, 329, 333, 334, 336, 338, 340, 387], "friction": [327, 329, 333, 336, 338, 340], "veloc": [327, 329, 333, 336, 338, 340], "lz": [328, 334], "ws_ref": [329, 336, 340], "h_ref": [329, 336, 340], "refer": [329, 331, 336, 340, 371, 393, 404], "height0": 331, "ws0": 331, "psi": [333, 338], "monin": [335, 336, 339, 340, 387, 393], "obukhov": [335, 336, 339, 340, 393], "dbase": 343, "slightli": [345, 400], "enhanc": 345, "pass": [345, 403], "close": [348, 360, 394], "add_to_figur": [348, 349, 350, 351, 352, 354, 358, 360, 395], "show_boundari": [348, 349, 350, 351, 352, 354, 358, 360], "fill_mod": [348, 349, 350, 351, 352, 354, 358, 360, 395], "inside_slategrai": [348, 349, 350, 351, 352], "pars_boundari": [348, 349, 350, 351, 352, 354, 358, 360], "pars_dist": [348, 349, 350, 351, 352, 354, 358, 360, 395], "dist_insid": [348, 349, 350, 351, 352, 354, 358, 360, 395], "dist_outsid": [348, 349, 350, 351, 352, 354, 358, 360, 395], "inside_": [348, 349, 350, 351, 352, 354, 358, 360], "outside_": [348, 349, 350, 351, 352, 354, 358, 360], "command": [348, 349, 350, 351, 352, 354, 358, 360, 392], "invers": [348, 349, 350, 351, 352, 354, 358, 360, 404], "invert": [348, 349, 350, 351, 352, 354, 358, 360], "invertedareageometri": [348, 349, 350, 352, 354, 358, 360], "p_min": [348, 349, 350, 351, 352, 354, 358, 360, 395], "points_dist": [348, 349, 350, 351, 352, 354, 358, 360], "return_nearest": [348, 349, 350, 351, 352, 354, 358, 360], "probe": [348, 349, 350, 351, 352, 354, 358, 360], "nearest": [348, 349, 350, 351, 352, 354, 358, 360], "bundari": [348, 349, 350, 351, 352, 354, 358, 360], "smallest": [348, 349, 350, 351, 352, 354, 358, 360], "p_nearest": [348, 349, 350, 351, 352, 354, 358, 360], "points_insid": [348, 349, 350, 351, 352, 354, 358, 360], "intersect": [349, 379, 380], "cl": [349, 377], "union": [350, 352], "areaunion": 352, "half": 358, "orthogon": 358, "poli": 360, "librari": [362, 363, 395, 401], "import": [362, 363, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "work": [362, 363, 390, 392, 394, 403], "fname": [364, 365], "shp": [364, 365, 366], "geopanda": [364, 365, 366], "read_fil": [364, 366, 369], "wsg84": 364, "geodatafram": 364, "name_col": 365, "geom_col": 365, "to_utm": 365, "ret_utm_zon": [365, 367], "polygon": [365, 395], "extract": 365, "convert": [365, 401], "utm": [365, 367], "zone": [365, 367], "letter": [365, 367], "32u": [365, 367], "read_shp": [365, 390], "point_dict_exterior": 365, "point_dict_interior": 365, "utm_zone_str": [365, 367], "utem": [365, 367], "ifil": 366, "ofil": 366, "in_kwarg": 366, "out_kwarg": 366, "inam": 366, "onam": 366, "shapefil": 367, "read_shp_polygon": [367, 390], "geom": 367, "help": 369, "default_reading_paramet": 369, "support": [369, 390, 391, 392, 398], "default_writing_paramet": 369, "data_file_format": 369, "export": 369, "default_format_dict": 369, "write_fil": 369, "displai": [371, 402, 403], "window": [371, 390], "stackoverflow": 371, "com": [371, 379, 390, 391, 392], "question": [371, 395], "53570384": 371, "how": [371, 389, 390, 391, 399, 402, 403], "standalon": 371, "schedul": [373, 390, 395, 402], "n_worker": 373, "worker": [373, 402], "threads_per_work": 373, "thread": [373, 402], "progress_bar": [373, 390], "show": [373, 390, 393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "progress": [373, 402, 403], "cluster_arg": 373, "explicit": [373, 390, 394], "cluster": [373, 391, 395, 402, 403], "setup": [373, 389, 390, 391, 395, 397, 399, 400, 401, 403, 404], "client_arg": 373, "client": 373, "process": [373, 398], "r1": [379, 380], "r2": [379, 380], "sure": [379, 392, 395, 402], "These": [379, 394, 395, 397, 404], "diego": 379, "assencio": 379, "8d6ca3d82151bad815f78addf9b5c1c6": 379, "anoth": [380, 403, 404], "wd_a": 382, "wd_b": 382, "uv": [383, 384], "u": [383, 384, 395], "degre": [384, 385, 387, 404], "against": [384, 385], "wdvec": [385, 386], "txyh": 387, "kg": 387, "m3": 387, "user": [387, 390, 398], "max_p": [387, 399, 400], "coeffici": [387, 398, 399], "temperatur": 387, "kelvin": 387, "yld": [387, 402], "equal": 387, "amb_p": [387, 394, 395, 399, 401, 402], "cap": [387, 402], "rew": [387, 394, 397, 399, 400, 401, 402, 403, 404], "moment": 387, "third": 387, "amb_w": [387, 393, 395, 397, 400, 401, 402, 403], "amb_ti": [387, 395, 396, 401], "amb_rho": [387, 395, 401], "amb_yaw": 387, "amb_yawm": 387, "amb_ct": [387, 395, 401], "amb_t": 387, "amb_yld": [387, 402], "amb_cap": [387, 402], "amb_rews2": 387, "amb_rews3": 387, "var2amb": 387, "kti": [387, 390, 396, 402], "ubukhof": 387, "shear": [387, 390], "overview": [389, 390, 391, 401], "fox": [389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "manag": [389, 390, 391, 398], "releas": [390, 392], "readi": [390, 396, 401, 404], "transfer": [390, 404], "fraunhof": [390, 391, 395], "iw": [390, 391, 393, 395], "hous": 390, "predecessor": [390, 391], "version": [390, 392], "yet": 390, "just": [390, 399], "enjoi": 390, "await": 390, "comment": 390, "issu": [390, 391], "thank": 390, "changelog": 390, "github": [390, 391, 392], "fraunhoferiw": [390, 391, 392], "commit": [390, 391], "style": 390, "black": 390, "small": [390, 393], "discov": 390, "flake8": 390, "now": [390, 394, 395, 396, 397, 399, 400, 401, 403, 404], "pytest": 390, "unittest": 390, "workflow": 390, "python": [390, 391, 398], "9": [390, 392, 393, 395, 396, 399, 400, 401, 402, 404], "docu": 390, "io": 390, "doc": [390, 402], "html": 390, "miss": 390, "wind_rot": [390, 394], "manifest": 390, "turboparkwak": [390, 396], "orst": 390, "pctsinglefil": 390, "iecti2019": 390, "iecti2005": 390, "concept": 390, "opt": [390, 395], "instal": [390, 391], "pip": [390, 391], "capabl": [390, 391], "As": [390, 392, 404], "see": [390, 395, 397, 398, 403], "thrust2ct": [390, 396], "nulltyp": [390, 396], "pcttwofil": 390, "windroseoutput": 390, "histogram": 390, "ambientwindroseoutput": 390, "improv": 390, "show_plotly_fig": 390, "browser": 390, "defaultrunn": 390, "daskrunn": [390, 394, 395, 402, 403], "featur": [390, 400], "folder": 390, "wind_ros": 390, "layout_single_st": 390, "layout_wind_ros": 390, "notebook": [390, 398], "layout_opt": [390, 395], "ipynb": 390, "demonstr": [390, 393, 395, 399, 401, 403, 404], "multiheighttimeseri": [390, 393, 397], "wrf": [390, 397, 398], "farmresultsev": [390, 397, 399, 402, 403], "resultswrit": 390, "ambientroseplotoutput": 390, "statesroseplotoutput": [390, 393, 395, 397, 400, 402, 403], "multi_height": 390, "usag": 390, "bug": 390, "veer": 390, "singlestatest": [390, 401], "powermask": [390, 396, 399], "power_mask": 390, "cubic_root": 390, "solv": [390, 395], "cubic": 390, "stateturbinemap": [390, 399], "turbinetypecurv": [390, 393, 399], "farmlayoutoutput": [390, 393, 395, 397, 400, 402, 403], "forgotten": 390, "api": [390, 391, 402], "hotfix": 390, "extendedst": 390, "fielddatanc": [390, 394], "wsrho2pcttwofil": 390, "sectormanag": [390, 400], "setuniformdata": 390, "sector_manag": 390, "sector_man": 390, "col_model": 390, "tablefactor": 390, "yaw2yawm": [390, 396, 404], "yawm2yaw": [390, 396, 404], "offset": 390, "tke2ti": [390, 396], "yawedwak": [390, 396], "linearsuperposit": [390, 396], "compare_wak": 390, "compar": [390, 399, 400], "yawed_wak": 390, "width": 390, "crespohernandeztiwak": [390, 396], "turbopark": 390, "doubl": 390, "simplifi": 390, "reach": 390, "accept": 390, "shearedprofil": 390, "flowplots2d": [390, 394, 395, 397, 401, 403, 404], "replac": [390, 392], "intuit": 390, "turboparkix": 390, "summar": 390, "bracket": 390, "eq": 390, "wrong": 390, "setfarmvar": [390, 399, 404], "regularlayoutoptproblem": 390, "geomreggrid": 390, "find": 390, "geomlayout": 390, "geomlayoutgrid": 390, "layout_regular_grid": 390, "geom_reggrid": 390, "shp2csv": 390, "affect": [390, 399], "geopandas_help": 390, "interior": 390, "11": [390, 392, 393, 395, 399, 402, 404], "interfac": [390, 395], "windio": 390, "cpctfile": 390, "cpctfromtwo": 390, "cleaner": 390, "treatment": 390, "slimmer": 390, "distribut": [390, 393, 395, 402], "move": [390, 395], "productsuperposit": [390, 396], "rotorcentrecalc": [390, 396], "irrespect": 390, "restart": 390, "complet": [390, 393, 396, 397, 400, 402, 403], "incomplet": 390, "softwar": [391, 393], "modular": 391, "steer": 391, "construct": 391, "analysi": 391, "studi": 391, "comparison": 391, "simul": [391, 393, 398], "complex": [391, 402], "chain": 391, "fast": 391, "perform": 391, "ow": 391, "remot": 391, "enabl": 391, "well": [391, 393, 395, 404], "repositori": 391, "tracker": 391, "pleas": 391, "report": 391, "licens": 391, "mit": 391, "conda": 391, "histori": 391, "v0": 391, "fork": [391, 392], "branch": [391, 392], "git": [391, 392, 394], "checkout": 391, "b": 391, "new_branch": 391, "your": [391, 392, 401], "am": 391, "awesom": 391, "messag": 391, "push": 391, "pull": 391, "request": 391, "develop": 391, "flapfoam": 391, "intern": 391, "public": [391, 404], "through": 391, "publicli": 391, "fund": 391, "research": 391, "project": 391, "particular": [391, 402], "feder": 391, "ministri": 391, "econom": 391, "affair": 391, "climat": 391, "action": [391, 398], "bmwk": 391, "roject": 391, "smart": 391, "grant": 391, "0325851b": 391, "0325397b": 391, "03ee3008a": 391, "educ": 391, "bmbf": 391, "framework": 391, "h2digit": 391, "03sf0635": 391, "7": [392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404], "c": [392, 404], "forg": 392, "Then": 392, "activ": 392, "everi": 392, "you": [392, 396, 397, 398, 401, 402, 404], "leav": 392, "deactiv": 392, "avail": [392, 393, 402], "channel": 392, "recommend": [392, 394], "while": 392, "again": [392, 395, 399], "build": 392, "clone": 392, "cd": 392, "whenev": 392, "concern": 392, "venv": 392, "choos": [392, 397, 399, 403], "conveni": [392, 401], "system": [392, 393, 398, 401, 402], "prefer": 392, "python3": 392, "altern": 392, "dev": 392, "egg": 392, "whose": 393, "Such": 393, "often": [393, 398], "terminologi": [393, 398, 401], "three": [393, 404], "67": [393, 395, 402], "randomli": 393, "t0": [393, 395, 399, 400, 401, 402, 404], "101872": [393, 402], "70": [393, 394, 395, 400, 402], "1004753": [393, 402], "57": [393, 395, 402], "t1": [393, 395, 399, 400, 401, 402, 404], "103659": [393, 402], "97": [393, 395, 402], "1002993": [393, 402], "29": [393, 395, 402], "t2": [393, 395, 399, 401, 402], "100780": [393, 402], "09": [393, 402, 403], "1000779": [393, 402], "t3": [393, 395, 399, 401, 402], "100290": [393, 402], "42": [393, 395, 402], "1004330": [393, 402], "t4": [393, 395, 399, 401], "103005": 393, "1003540": 393, "36": [393, 395, 402], "t5": [393, 395], "100102": 393, "92": [393, 395], "1004849": 393, "55": [393, 395], "t6": [393, 395], "104162": 393, "1001061": 393, "farm_layout": [393, 394, 395, 397, 399, 400, 401, 402, 403], "add_from_fil": [393, 402], "mesoscal": 393, "75": [393, 394, 395, 397, 402], "2009": [393, 397], "00": [393, 395, 397, 402], "37214": [393, 397], "42685": [393, 397], "28838": [393, 397], "31": [393, 394, 395, 397, 402], "23": [393, 395, 397, 402], "27767": [393, 397], "36368": [393, 397], "30095": [393, 397], "At": 393, "90": [393, 395, 397, 401], "150": [393, 395, 397, 402, 403], "250": [393, 395, 397, 400, 404], "o": [393, 394, 395, 397, 399, 400, 401, 402, 403, 404], "16": [393, 395, 397, 399, 400, 402, 403], "20": [393, 394, 395, 396, 397, 399, 400, 402, 403], "binnd": 393, "64": [393, 395, 402], "253": 393, "032": 393, "542331196166035e": 393, "65": [393, 395, 402, 403], "207": 393, "145": 393, "0001230528308906": 393, "49": [393, 394, 395], "46": [393, 395], "116": 393, "0001563449299843": 393, "72": [393, 394, 395, 399], "314": 393, "048": 393, "618827331554488e": 393, "18": [393, 395, 399], "302": 393, "027": 393, "694": 393, "98695302482496e": 393, "abllogwsprofil": 393, "3000": [393, 395, 399, 404], "2018": 393, "24": [393, 395, 399, 402], "172": 393, "27": [393, 395], "22": [393, 395, 399, 402], "51": [393, 395], "184": 393, "13": [393, 395, 397, 399], "52": [393, 395], "198": 393, "04": [393, 395, 396], "34": [393, 395], "209": [393, 395], "93": [393, 395], "19": [393, 395, 399, 402], "78": [393, 395, 403], "217": 393, "35": [393, 395], "223": 393, "26": [393, 394, 395, 402], "68": [393, 395], "227": 393, "02": [393, 395, 396], "8000": [393, 401, 402], "2017": [393, 402], "62": [393, 395, 402], "244": [393, 402], "06": [393, 395, 397, 402], "0504": [393, 402], "99": [393, 395, 400, 402], "243": [393, 402], "03": [393, 395, 401, 402], "0514": [393, 402], "0522": [393, 402], "33": [393, 395, 402, 403], "241": [393, 402], "0523": [393, 402], "0518": 393, "242": 393, "0513": 393, "coars": [393, 395, 403], "216": [393, 395, 403], "bremen": [393, 395, 400], "germani": [393, 395], "consist": [393, 399, 400, 401, 403], "00158": [393, 395, 403], "00244": [393, 395, 403], "00319": [393, 395, 403], "12": [393, 395, 399, 401, 402, 403, 404], "00367": 393, "00042": [393, 395, 403], "veri": [393, 394, 395, 402], "inhomogen": 393, "long_nam": 393, "rotat": 393, "subtitl": 393, "author": 393, "date": 393, "2021": 393, "300": [393, 395, 399, 404], "2500": [393, 394, 395], "180": 393, "220": 393, "120": 393, "dtu10": 393, "dtu10mw": [393, 396], "iea15": 393, "iea15mw": [393, 396], "iwt7": [393, 396], "nrel5": [393, 399, 401, 402], "nrel5mw": [393, 394, 395, 396, 397, 399, 401, 402, 403, 404], "staticdata": 393, "nstate": 393, "ncurv": 393, "pctcurv": 393, "39": [393, 394, 395, 401, 402], "categori": 393, "14": [393, 395, 399, 402], "relative_to": 393, "parent": 393, "lt": [393, 395, 401], "posixpath": 393, "gt": [393, 395, 401], "shown": 393, "printout": [393, 401], "feel": 393, "invit": 393, "yourself": 393, "best": [394, 395, 400], "wai": 394, "similar": 394, "claim": 394, "ident": [394, 404], "four": 394, "corner": 394, "associ": 394, "home": 394, "jona": 394, "netcfd": 394, "back": 394, "our": [394, 395, 396, 397, 399, 400, 403, 404], "let": [394, 395, 397, 399, 400, 402, 403, 404], "domain": 394, "rectangl": 394, "add_grid": [394, 403], "realiz": [394, 404], "instanc": 394, "streamlines_100": [394, 396], "grid16": [394, 396], "jensen_linear_k007": [394, 396, 401], "4000": [394, 395, 400, 403], "implicit": [394, 395, 402, 404], "fr": [394, 397, 399, 401, 402], "to_datafram": [394, 397, 399, 401, 402, 404], "scale_unit": 394, "201": 394, "158092": 394, "491089": 394, "1474": 394, "211367": 394, "208": [394, 395], "044994": 394, "673386": 394, "1580": 394, "523022": 394, "214": [394, 395], "523994": 394, "960601": 394, "1748": 394, "171047": 394, "218": 394, "242345": 394, "867297": 394, "1127": 394, "597810": 394, "222": 394, "297880": 394, "283373": 394, "1352": 394, "715530": 394, "899315": 394, "731909": 394, "808657": 394, "1614": 394, "607085": 394, "1101": 394, "211997": 394, "236": 394, "751304": 394, "932726": 394, "1156": 394, "958672": 394, "237": 394, "139685": 394, "375640": 394, "142662": 394, "1406": 394, "547918": 394, "801": 394, "751505": 394, "484049": 394, "818854": 394, "381124": 394, "1665": 394, "347000": 394, "908": 394, "970303": 394, "311353": 394, "703701": 394, "149847": 394, "1054": 394, "871543": 394, "454": 394, "760942": 394, "259090": 394, "995899": 394, "857833": 394, "1185": 394, "898485": 394, "690": 394, "639688": 394, "676969": 394, "357075": 394, "1396": 394, "122949": 394, "44": [394, 395], "537113": 394, "352448": 394, "263710": 394, "521": 394, "748653": 394, "492": 394, "140844": 394, "47": [394, 395, 403], "447853": 394, "960030": 394, "917024": 394, "724": 394, "421405": 394, "710": 394, "071241": 394, "815208": 394, "580130": 394, "998": 394, "581195": 394, "462887": 394, "352662": 394, "621921": 394, "552147": 394, "960214": 394, "363478": 394, "184792": 394, "580285": 394, "552663": 394, "organ": 396, "basicfarmcontrol": 396, "farm_pmask": 396, "turbine2farmmodel": 396, "pmask": [396, 399, 400], "farm_hubh_data": 396, "hubh_data": 396, "farm_kti": 396, "farm_kti_02": 396, "kti_02": [396, 402], "farm_kti_04": 396, "kti_04": 396, "farm_kti_05": 396, "kti_05": [396, 403, 404], "farm_kti_amb": 396, "kti_amb": 396, "farm_kti_amb_02": 396, "kti_amb_02": 396, "farm_kti_amb_04": 396, "kti_amb_04": 396, "farm_kti_amb_05": 396, "kti_amb_05": 396, "farm_thrust2ct": 396, "farm_yaw2yawm": 396, "farm_yawm2yaw": 396, "axiwake10": 396, "axiwake2": 396, "axiwake20": 396, "axiwake3": 396, "axiwake4": 396, "axiwake5": 396, "axiwake6": 396, "axiwake7": 396, "axiwake8": 396, "axiwake9": 396, "distslic": 396, "distsliced100": 396, "distsliced16": 396, "distsliced25": 396, "distsliced36": 396, "distsliced4": 396, "distsliced400": 396, "distsliced49": 396, "distsliced64": 396, "distsliced81": 396, "distsliced9": 396, "grid100": 396, "partialgrid": 396, "grid25": 396, "grid36": 396, "grid4": 396, "grid400": 396, "grid49": 396, "grid64": 396, "grid81": 396, "grid9": [396, 397], "rotor_point": 396, "rotorpoint": 396, "top_hat": 396, "partialtophat": 396, "centrerotor": 396, "5mw": [396, 400, 401, 402], "null_typ": 396, "rotor_wd_farmo": 396, "farmord": 396, "streamlines_1": 396, "streamlines_10": 396, "streamlines_100_farmo": 396, "streamlines_100_yaw": 396, "streamlines_10_farmo": 396, "streamlines_10_yaw": 396, "streamlines_1_farmo": 396, "streamlines_1_yaw": 396, "streamlines_5": 396, "streamlines_50": 396, "streamlines_500": 396, "streamlines_500_farmo": 396, "streamlines_500_yaw": 396, "streamlines_50_farmo": 396, "streamlines_50_yaw": 396, "streamlines_5_farmo": 396, "streamlines_5_yaw": 396, "bastankhah_linear": [396, 403], "bastankhahwak": 396, "sp": 396, "bastankhah_linear_amb": 396, "linear_amb": 396, "bastankhah_linear_amb_k002": 396, "bastankhah_linear_amb_k004": 396, "bastankhah_linear_k002": [395, 396, 397, 399, 400], "bastankhah_linear_k004": 396, "bastankhah_linear_lim": 396, "linear_lim": 396, "bastankhah_linear_lim_k002": 396, "bastankhah_linear_lim_k004": 396, "bastankhah_max": 396, "bastankhah_max_amb": 396, "max_amb": 396, "bastankhah_max_amb_k002": 396, "bastankhah_max_amb_k004": 396, "bastankhah_max_k002": 396, "bastankhah_max_k004": 396, "bastankhah_product": 396, "product": 396, "bastankhah_product_k002": 396, "bastankhah_product_k004": 396, "bastankhah_product_lim": 396, "product_lim": 396, "bastankhah_product_lim_k002": 396, "bastankhah_product_lim_k004": 396, "bastankhah_quadrat": [396, 402], "bastankhah_quadratic_amb": 396, "quadratic_amb": 396, "bastankhah_quadratic_amb_k002": 396, "bastankhah_quadratic_amb_k004": 396, "bastankhah_quadratic_k002": 396, "bastankhah_quadratic_k004": 396, "crespohernandez_ambti_linear": 396, "ti_linear": 396, "crespohernandez_ambti_max": 396, "ti_max": 396, "crespohernandez_ambti_quadrat": 396, "ti_quadrat": 396, "crespohernandez_linear": 396, "crespohernandez_linear_k002": 396, "crespohernandez_max": [396, 402, 403, 404], "crespohernandez_max_k002": 396, "crespohernandez_quadrat": 396, "crespohernandez_quadratic_k002": 396, "iecti2005_linear": 396, "iectiwak": 396, "19076020221856677": 396, "iecti2005_max": 396, "iecti2005_quadrat": 396, "iecti2019_linear": 396, "iecti2019_max": 396, "iecti2019_quadrat": 396, "jensen_linear": 396, "jensenwak": 396, "jensen_linear_amb": 396, "jensen_linear_amb_k002": 396, "jensen_linear_amb_k004": 396, "jensen_linear_amb_k007": 396, "jensen_linear_amb_k0075": 396, "075": 396, "jensen_linear_k002": 396, "jensen_linear_k004": 396, "jensen_linear_k0075": 396, "jensen_linear_lim": 396, "jensen_linear_lim_k002": 396, "jensen_linear_lim_k004": 396, "jensen_linear_lim_k007": 396, "jensen_linear_lim_k0075": 396, "jensen_max": 396, "jensen_max_amb": 396, "jensen_max_amb_k002": 396, "jensen_max_amb_k004": 396, "jensen_max_amb_k007": 396, "jensen_max_amb_k0075": 396, "jensen_max_k002": 396, "jensen_max_k004": 396, "jensen_max_k007": 396, "jensen_max_k0075": 396, "jensen_product": 396, "jensen_product_k002": 396, "jensen_product_k004": 396, "jensen_product_k007": 396, "jensen_product_k0075": 396, "jensen_product_lim": 396, "jensen_product_lim_k002": 396, "jensen_product_lim_k004": 396, "jensen_product_lim_k007": 396, "jensen_product_lim_k0075": 396, "jensen_quadrat": 396, "jensen_quadratic_amb": 396, "jensen_quadratic_amb_k002": 396, "jensen_quadratic_amb_k004": 396, "jensen_quadratic_amb_k007": 396, "jensen_quadratic_amb_k0075": 396, "jensen_quadratic_k002": 396, "jensen_quadratic_k004": 396, "jensen_quadratic_k007": 396, "jensen_quadratic_k0075": 396, "porteagel_linear": [396, 404], "porteagelwak": 396, "porteagel_linear_amb": 396, "porteagel_linear_amb_k002": 396, "porteagel_linear_amb_k004": 396, "porteagel_linear_k002": 396, "porteagel_linear_k004": 396, "porteagel_linear_lim": 396, "porteagel_linear_lim_k002": 396, "porteagel_linear_lim_k004": 396, "porteagel_max": 396, "porteagel_max_amb": 396, "porteagel_max_amb_k002": 396, "porteagel_max_amb_k004": 396, "porteagel_max_k002": 396, "porteagel_max_k004": 396, "porteagel_product": 396, "porteagel_product_k002": 396, "porteagel_product_k004": 396, "porteagel_product_lim": 396, "porteagel_product_lim_k002": 396, "porteagel_product_lim_k004": 396, "porteagel_quadrat": 396, "porteagel_quadratic_amb": 396, "porteagel_quadratic_amb_k002": 396, "porteagel_quadratic_amb_k004": 396, "porteagel_quadratic_k002": 396, "porteagel_quadratic_k004": 396, "turboparkix_linear_a002_dx001": 396, "turboparkwakeix": 396, "turboparkix_linear_a002_dx1": 396, "turboparkix_linear_a002_dx10": 396, "turboparkix_linear_a002_dx100": 396, "turboparkix_linear_a002_dx5": 396, "turboparkix_linear_a002_dx50": 396, "turboparkix_linear_a004_dx001": 396, "turboparkix_linear_a004_dx1": 396, "turboparkix_linear_a004_dx10": 396, "turboparkix_linear_a004_dx100": 396, "turboparkix_linear_a004_dx5": 396, "turboparkix_linear_a004_dx50": 396, "turboparkix_linear_amb_a002_dx001": 396, "turboparkix_linear_amb_a002_dx1": 396, "turboparkix_linear_amb_a002_dx10": 396, "turboparkix_linear_amb_a002_dx100": 396, "turboparkix_linear_amb_a002_dx5": 396, "turboparkix_linear_amb_a002_dx50": 396, "turboparkix_linear_amb_a004_dx001": 396, "turboparkix_linear_amb_a004_dx1": 396, "turboparkix_linear_amb_a004_dx10": 396, "turboparkix_linear_amb_a004_dx100": 396, "turboparkix_linear_amb_a004_dx5": 396, "turboparkix_linear_amb_a004_dx50": 396, "turboparkix_linear_lim_a002_dx001": 396, "turboparkix_linear_lim_a002_dx1": 396, "turboparkix_linear_lim_a002_dx10": 396, "turboparkix_linear_lim_a002_dx100": 396, "turboparkix_linear_lim_a002_dx5": 396, "turboparkix_linear_lim_a002_dx50": 396, "turboparkix_linear_lim_a004_dx001": 396, "turboparkix_linear_lim_a004_dx1": 396, "turboparkix_linear_lim_a004_dx10": 396, "turboparkix_linear_lim_a004_dx100": 396, "turboparkix_linear_lim_a004_dx5": 396, "turboparkix_linear_lim_a004_dx50": 396, "turboparkix_max_a002_dx001": 396, "turboparkix_max_a002_dx1": 396, "turboparkix_max_a002_dx10": 396, "turboparkix_max_a002_dx100": 396, "turboparkix_max_a002_dx5": 396, "turboparkix_max_a002_dx50": 396, "turboparkix_max_a004_dx001": 396, "turboparkix_max_a004_dx1": 396, "turboparkix_max_a004_dx10": 396, "turboparkix_max_a004_dx100": 396, "turboparkix_max_a004_dx5": 396, "turboparkix_max_a004_dx50": 396, "turboparkix_max_amb_a002_dx001": 396, "turboparkix_max_amb_a002_dx1": 396, "turboparkix_max_amb_a002_dx10": 396, "turboparkix_max_amb_a002_dx100": 396, "turboparkix_max_amb_a002_dx5": 396, "turboparkix_max_amb_a002_dx50": 396, "turboparkix_max_amb_a004_dx001": 396, "turboparkix_max_amb_a004_dx1": 396, "turboparkix_max_amb_a004_dx10": 396, "turboparkix_max_amb_a004_dx100": 396, "turboparkix_max_amb_a004_dx5": 396, "turboparkix_max_amb_a004_dx50": 396, "turboparkix_product_a002_dx001": 396, "turboparkix_product_a002_dx1": 396, "turboparkix_product_a002_dx10": 396, "turboparkix_product_a002_dx100": 396, "turboparkix_product_a002_dx5": 396, "turboparkix_product_a002_dx50": 396, "turboparkix_product_a004_dx001": 396, "turboparkix_product_a004_dx1": 396, "turboparkix_product_a004_dx10": 396, "turboparkix_product_a004_dx100": 396, "turboparkix_product_a004_dx5": 396, "turboparkix_product_a004_dx50": 396, "turboparkix_product_lim_a002_dx001": 396, "turboparkix_product_lim_a002_dx1": 396, "turboparkix_product_lim_a002_dx10": 396, "turboparkix_product_lim_a002_dx100": 396, "turboparkix_product_lim_a002_dx5": 396, "turboparkix_product_lim_a002_dx50": 396, "turboparkix_product_lim_a004_dx001": 396, "turboparkix_product_lim_a004_dx1": 396, "turboparkix_product_lim_a004_dx10": 396, "turboparkix_product_lim_a004_dx100": 396, "turboparkix_product_lim_a004_dx5": 396, "turboparkix_product_lim_a004_dx50": 396, "turboparkix_quadratic_a002_dx001": 396, "turboparkix_quadratic_a002_dx1": 396, "turboparkix_quadratic_a002_dx10": 396, "turboparkix_quadratic_a002_dx100": 396, "turboparkix_quadratic_a002_dx5": 396, "turboparkix_quadratic_a002_dx50": 396, "turboparkix_quadratic_a004_dx001": 396, "turboparkix_quadratic_a004_dx1": 396, "turboparkix_quadratic_a004_dx10": 396, "turboparkix_quadratic_a004_dx100": 396, "turboparkix_quadratic_a004_dx5": 396, "turboparkix_quadratic_a004_dx50": 396, "turboparkix_quadratic_amb_a002_dx001": 396, "turboparkix_quadratic_amb_a002_dx1": 396, "turboparkix_quadratic_amb_a002_dx10": 396, "turboparkix_quadratic_amb_a002_dx100": 396, "turboparkix_quadratic_amb_a002_dx5": 396, "turboparkix_quadratic_amb_a002_dx50": 396, "turboparkix_quadratic_amb_a004_dx001": 396, "turboparkix_quadratic_amb_a004_dx1": 396, "turboparkix_quadratic_amb_a004_dx10": 396, "turboparkix_quadratic_amb_a004_dx100": 396, "turboparkix_quadratic_amb_a004_dx5": 396, "turboparkix_quadratic_amb_a004_dx50": 396, "turbopark_linear_a002": 396, "turbopark_linear_a004": 396, "turbopark_linear_amb_a002": 396, "turbopark_linear_amb_a004": 396, "turbopark_linear_lim_a002": 396, "turbopark_linear_lim_a004": 396, "turbopark_max_a002": 396, "turbopark_max_a004": 396, "turbopark_max_amb_a002": 396, "turbopark_max_amb_a004": 396, "turbopark_product_a002": 396, "turbopark_product_a004": 396, "turbopark_product_lim_a002": 396, "turbopark_product_lim_a004": 396, "turbopark_quadratic_a002": 396, "turbopark_quadratic_a004": 396, "turbopark_quadratic_amb_a002": 396, "turbopark_quadratic_amb_a004": 396, "maxsuperposit": 396, "quadraticsuperposit": 396, "tisuperposit": 396, "my_jensen": 396, "042": 396, "jensen": 396, "jensenwake45": 396, "freshli": 396, "similarli": [396, 399, 404], "section": [396, 398, 401, 402, 404], "explor": 397, "download": 397, "newa": 397, "websit": 397, "4464": 397, "gz": [397, 402, 403], "stamp": 397, "mark": 397, "month": 397, "minut": 397, "kinet": [397, 398], "vari": 397, "assumpt": 397, "variat": 397, "neglect": 397, "inflow": [397, 402], "add_row": [395, 397, 399, 400, 401], "600": [395, 397, 399, 400], "manual": 397, "next": [395, 397, 399, 401, 402, 403], "alreadi": [397, 401], "howev": [397, 404], "neither": [397, 399], "goal": 397, "visual": [395, 397, 399, 400, 401, 402], "certain": 397, "approxim": 397, "west": [397, 400, 404], "undo": 397, "earlier": 397, "p0": [397, 399, 402, 403], "nfarm": [397, 399, 401, 402, 403, 404], "1f": [397, 399, 402, 403], "2f": [397, 399, 402, 403], "340": [397, 400], "14377": 397, "593022": 397, "1533": 397, "584614": 397, "86": [395, 397, 402], "83636": 397, "192504": 397, "1299": 397, "635898": 397, "299802": 397, "1362": 397, "286874": 397, "538688": 397, "1501": 397, "771092": 397, "226181": 397, "1940": 397, "207249": 397, "532676": 397, "4041": 397, "896723": 397, "22320": 397, "98": [395, 397], "131": 397, "84": [395, 397], "reflect": [398, 404], "script": 398, "inform": [398, 401, 402], "arbitrari": 398, "detail": [395, 398, 402], "becom": 398, "reli": 398, "averag": 398, "propag": 398, "could": [398, 400, 401, 403], "stem": 398, "henc": [398, 399, 400, 402], "approach": 398, "those": 398, "might": 398, "sdata": [399, 404], "exce": 399, "nor": 399, "pmax_": 399, "s_": 399, "pmax_4": 399, "6000": [399, 400], "pmax_2": 399, "pmax_0": 399, "pmax_1": 399, "pmax_3": 399, "notic": [395, 399, 400, 402, 404], "set_pmax": 399, "thought": 399, "sinc": 399, "od": 399, "furthermor": 399, "somewher": 399, "influenc": 399, "later": [395, 399, 402], "o1": 399, "maxp": [399, 400], "000000": [399, 401, 402, 404], "100622": 399, "403": 399, "460668": 399, "230759": 399, "160101": 399, "836726": 399, "448432": 399, "102": [399, 402, 403], "024826": 399, "1771": 399, "969501": 399, "727": 399, "422438": 399, "109672": 399, "440": 399, "497551": 399, "664896": 399, "328": 399, "099527": 399, "346418": 399, "256": 399, "059846": 399, "4562": 399, "500000": 399, "218395": 399, "1934": 399, "349917": 399, "026105": 399, "1202": 399, "442515": 399, "419438": 399, "926": 399, "179190": 399, "069268": 399, "768": 399, "743105": 399, "740422": 399, "265493": 399, "610241": 399, "4829": 399, "480538": 399, "737726": 399, "305147": 399, "704317": 399, "538785": 399, "001123": 399, "463783": 399, "027022": 399, "922952": 399, "572237": 399, "549852": 399, "200276": 399, "124457": 399, "856675": 399, "753726": 399, "552823": 399, "501976": 399, "340518": 399, "89": [395, 399], "71": [395, 399], "re": 399, "o0": 399, "edgecolor": 399, "white": 399, "ylorrd": 399, "vmin": 399, "vmax": 399, "nanmax": 399, "ylgn": 399, "produc": [399, 402], "off": 400, "wind_rose_bremen": [395, 400, 403], "persu": 400, "east": 400, "wd_min": 400, "wd_max": 400, "170": 400, "191": 400, "290": 400, "110": 400, "correspons": 400, "fulfil": 400, "ttype": 400, "nrel": [400, 401, 402], "d126": [400, 401, 402], "h90": [400, 401, 402], "sector_rul": 400, "rews_min": 400, "rews_max": 400, "due": 400, "orient": 400, "wa": 400, "2000": [395, 400], "5001": 400, "7000": 400, "high": 400, "westerli": 400, "south": 400, "summari": 401, "skip": 401, "own": 401, "800": [395, 401], "ask": 401, "int64": [395, 401], "float64": [395, 401], "6e": 401, "4e": 401, "2e": 401, "126": [395, 401], "519e": 401, "557e": 401, "107e": 401, "79": [395, 401], "u2": [395, 401], "easili": 401, "2518": 401, "600000": 401, "790000": 401, "633459": 401, "1557": 401, "076947": 401, "803665": 401, "176627": 401, "1290": 401, "332498": 401, "808234": 401, "955794": 401, "1167": 401, "325199": 401, "812210": 401, "821354": 401, "1106": 401, "880886": 401, "818932": 401, "linspac": 401, "15000": 401, "npoint": 401, "set_xlabel": 401, "set_ylabel": 401, "916": 401, "desir": [402, 404], "wish": [395, 402, 403, 404], "timeseries_8000": 402, "test_farm_67": 402, "further": 402, "alwai": 402, "form": [395, 402], "61": 395, "598951": 402, "307949": 402, "067607": 402, "522240": 402, "728003": 402, "299": 402, "208883": 402, "4868": 402, "2712": 402, "819583": 402, "63": [395, 402], "435150": 402, "4752": 402, "878044": 402, "700000": 402, "750000": 402, "607321": 402, "4828": 402, "202797": 402, "66": [395, 402], "769528": 402, "3234": 402, "107125": 402, "536000": 402, "turbine_result": 402, "nresult": 402, "3067": 402, "723397": 402, "2778": 402, "987770": 402, "613545": 402, "555798": 402, "825445": 402, "873257": 402, "2531": 402, "065918": 402, "506213": 402, "713413": 402, "2702": 402, "820210": 402, "540564": 402, "780747": 402, "2739": 402, "058250": 402, "547812": 402, "805992": 402, "2593": 402, "172270": 402, "518634": 402, "737070": 402, "2625": 402, "796799": 402, "525159": 402, "748704": 402, "2591": 402, "950988": 402, "518390": 402, "731988": 402, "2864": 402, "102273": 402, "572820": 402, "860799": 402, "2571": 402, "260829": 402, "514252": 402, "726062": 402, "2633": 402, "819847": 402, "526764": 402, "755245": 402, "343933": 402, "172137": 402, "676705": 402, "994150": 402, "716189": 402, "001980": 402, "705491": 402, "089536": 402, "524245": 402, "072262": 402, "177": 402, "205": 402, "87": [395, 402], "1558": 402, "seen": 402, "mean_eff": [402, 403], "fun": 402, "faster": 402, "overhead": 402, "But": 402, "extrem": 402, "realli": 402, "save": 402, "dai": 402, "nmean": 402, "launch": 402, "localclust": 402, "cfe687d5": [], "tcp": 402, "127": 402, "36203": [], "gib": 402, "dashboard": 402, "8787": 402, "statu": 402, "shut": 402, "down": 402, "54": [395, 402], "runtim": 402, "localhost": 402, "address": 402, "plenti": 402, "900": [395, 403], "80": [395, 403], "0036700002": [395, 403], "relat": 403, "101": 403, "202": [], "82": 395, "81": [395, 403], "91": [395, 403], "686": 403, "perfectli": 403, "fine": 403, "aim": 404, "set_yawm": 404, "want": 404, "sensit": 404, "continu": 404, "cross": 404, "downstream": 404, "750": [395, 404], "clearli": 404, "frontal": 404, "hit": 404, "farm_df": 404, "146549": 404, "042770": 404, "240": 404, "co": 404, "corect": 404, "fact": 404, "p_": 404, "crespohernandez": 404, "even": 404, "though": 404, "most": 404, "103": [], "f617ecfb": [], "37413": [], "38": 395, "40": 395, "48": 395, "task": 395, "pymoo": 395, "nice": 395, "genet": 395, "optimizer_pymoo": 395, "gm": 395, "farmlayoutoptproblem": 395, "farmboundaryconstraint": 395, "mindistconstraint": 395, "maxfarmpow": 395, "tackl": 395, "closedpolygon": 395, "1200": 395, "1500": 395, "700": 395, "t7": 395, "t8": 395, "t9": 395, "shortli": 395, "begin": 395, "n_obj_cmptn": 395, "n_con_cmptn": 395, "impli": 395, "ga": 395, "n_max_gen": 395, "pop_siz": 395, "solver": 395, "problem_par": 395, "seed": 395, "setup_par": 395, "term_par": 395, "ftol": 395, "1e": 395, "xtol": 395, "print_info": 395, "sampl": 395, "float_random": 395, "floatrandomsampl": 395, "termin": 395, "defaultsingleobjectivetermin": 395, "001": 395, "n_gen": 395, "n_eval": 395, "cv_min": 395, "cv_avg": 395, "f_avg": 395, "f_min": 395, "257950e": 395, "094916e": 395, "180418e": 395, "141625e": 395, "279782e": 395, "157184e": 395, "404513e": 395, "577682e": 395, "579169e": 395, "703733e": 395, "350": 395, "531147e": 395, "050876e": 395, "400": 395, "000000e": 395, "605222e": 395, "588240e": 395, "450": 395, "103920e": 395, "527620e": 395, "582192e": 395, "550": 395, "732673e": 395, "832754e": 395, "586968e": 395, "591846e": 395, "650": 395, "055741e": 395, "588486e": 395, "604179e": 395, "8416979966": 395, "586179e": 395, "0056020975": 395, "586244e": 395, "592827e": 395, "609887e": 395, "850": 395, "597835e": 395, "616432e": 395, "601994e": 395, "619099e": 395, "608318e": 395, "637494e": 395, "615190e": 395, "645683e": 395, "1050": 395, "622881e": 395, "646187e": 395, "1100": 395, "631506e": 395, "653047e": 395, "1150": 395, "640921e": 395, "655091e": 395, "648388e": 395, "657861e": 395, "1250": 395, "651988e": 395, "663615e": 395, "1300": 395, "655195e": 395, "1350": 395, "658165e": 395, "667660e": 395, "28": 395, "1400": 395, "660791e": 395, "671652e": 395, "1450": 395, "663724e": 395, "676832e": 395, "667884e": 395, "679974e": 395, "1550": 395, "672357e": 395, "685551e": 395, "1600": 395, "676653e": 395, "688468e": 395, "1650": 395, "681032e": 395, "688999e": 395, "1700": 395, "684254e": 395, "692540e": 395, "1750": 395, "686841e": 395, "1800": 395, "689011e": 395, "693343e": 395, "37": 395, "1850": 395, "690736e": 395, "700848e": 395, "1900": 395, "692806e": 395, "701437e": 395, "1950": 395, "695244e": 395, "702613e": 395, "698077e": 395, "714461e": 395, "2050": 395, "701772e": 395, "2100": 395, "705495e": 395, "716273e": 395, "43": 395, "2150": 395, "709527e": 395, "720787e": 395, "2200": 395, "712644e": 395, "721430e": 395, "45": 395, "2250": 395, "715937e": 395, "722818e": 395, "2300": 395, "719261e": 395, "726242e": 395, "2350": 395, "721874e": 395, "728699e": 395, "2400": 395, "724323e": 395, "729085e": 395, "2450": 395, "726669e": 395, "731540e": 395, "729169e": 395, "736498e": 395, "2550": 395, "731473e": 395, "2600": 395, "733755e": 395, "739439e": 395, "53": 395, "2650": 395, "736553e": 395, "741091e": 395, "2700": 395, "737859e": 395, "2750": 395, "739620e": 395, "746115e": 395, "56": 395, "2800": 395, "741132e": 395, "2850": 395, "742407e": 395, "2900": 395, "743667e": 395, "59": 395, "2950": 395, "744499e": 395, "747450e": 395, "745637e": 395, "749378e": 395, "3050": 395, "746819e": 395, "750740e": 395, "3100": 395, "748079e": 395, "751545e": 395, "3150": 395, "749500e": 395, "752455e": 395, "3200": 395, "750617e": 395, "3250": 395, "751276e": 395, "752688e": 395, "3300": 395, "751675e": 395, "753603e": 395, "3350": 395, "752037e": 395, "753628e": 395, "3400": 395, "752668e": 395, "754781e": 395, "69": 395, "3450": 395, "753223e": 395, "755507e": 395, "3500": 395, "753940e": 395, "755627e": 395, "3550": 395, "754475e": 395, "756641e": 395, "3600": 395, "754917e": 395, "756729e": 395, "3650": 395, "755482e": 395, "756732e": 395, "74": 395, "3700": 395, "755880e": 395, "756858e": 395, "3750": 395, "756292e": 395, "757238e": 395, "76": 395, "3800": 395, "756666e": 395, "757649e": 395, "77": 395, "3850": 395, "756985e": 395, "757750e": 395, "3900": 395, "757224e": 395, "757984e": 395, "3950": 395, "757503e": 395, "758511e": 395, "757798e": 395, "759081e": 395, "4050": 395, "758090e": 395, "4100": 395, "758474e": 395, "759855e": 395, "4150": 395, "758746e": 395, "759968e": 395, "4200": 395, "758965e": 395, "85": 395, "4250": 395, "759223e": 395, "4300": 395, "759449e": 395, "4350": 395, "759646e": 395, "759971e": 395, "4400": 395, "759774e": 395, "760032e": 395, "4450": 395, "759883e": 395, "760064e": 395, "4500": 395, "759951e": 395, "760100e": 395, "4550": 395, "760006e": 395, "760142e": 395, "4600": 395, "760062e": 395, "760593e": 395, "4650": 395, "760121e": 395, "760978e": 395, "94": 395, "4700": 395, "760182e": 395, "4750": 395, "760257e": 395, "96": 395, "4800": 395, "760395e": 395, "760997e": 395, "4850": 395, "760607e": 395, "761020e": 395, "4900": 395, "760797e": 395, "761706e": 395, "4950": 395, "760918e": 395, "761763e": 395, "761054e": 395, "success": 395, "28808": 395, "815290012986": 395, "x_0000": 395, "484848e": 395, "y_0000": 395, "387982e": 395, "x_0001": 395, "999400e": 395, "y_0001": 395, "193226e": 395, "x_0002": 395, "743332e": 395, "y_0002": 395, "853013e": 395, "x_0003": 395, "161273e": 395, "y_0003": 395, "356752e": 395, "x_0004": 395, "010384e": 395, "y_0004": 395, "495968e": 395, "x_0005": 395, "992900e": 395, "y_0005": 395, "499577e": 395, "x_0006": 395, "970308e": 395, "y_0006": 395, "893921e": 395, "x_0007": 395, "136647e": 395, "y_0007": 395, "198557e": 395, "x_0008": 395, "942851e": 395, "y_0008": 395, "147376e": 395, "x_0009": 395, "992843e": 395, "y_0009": 395, "559152e": 395, "880882e": 395, "boundary_0000": 395, "409687e": 395, "boundary_0001": 395, "001485e": 395, "boundary_0002": 395, "boundary_0003": 395, "212439e": 395, "boundary_0004": 395, "038416e": 395, "boundary_0005": 395, "227091e": 395, "boundary_0006": 395, "boundary_0007": 395, "boundary_0008": 395, "714927e": 395, "boundary_0009": 395, "156536e": 395, "dist_0_1": 395, "053034e": 395, "dist_0_2": 395, "133692e": 395, "dist_0_3": 395, "512186e": 395, "dist_0_4": 395, "063629e": 395, "dist_0_5": 395, "032833e": 395, "dist_0_6": 395, "912219e": 395, "dist_0_7": 395, "174197e": 395, "dist_0_8": 395, "235491e": 395, "dist_0_9": 395, "389174e": 395, "dist_1_2": 395, "810253e": 395, "dist_1_3": 395, "227849e": 395, "dist_1_4": 395, "346207e": 395, "dist_1_5": 395, "282549e": 395, "dist_1_6": 395, "644388e": 395, "dist_1_7": 395, "015225e": 395, "dist_1_8": 395, "760754e": 395, "dist_1_9": 395, "459327e": 395, "dist_2_3": 395, "734121e": 395, "dist_2_4": 395, "000907e": 395, "dist_2_5": 395, "035690e": 395, "dist_2_6": 395, "547630e": 395, "dist_2_7": 395, "612574e": 395, "dist_2_8": 395, "428297e": 395, "dist_2_9": 395, "480372e": 395, "dist_3_4": 395, "383697e": 395, "dist_3_5": 395, "427543e": 395, "dist_3_6": 395, "533256e": 395, "dist_3_7": 395, "217365e": 395, "dist_3_8": 395, "085619e": 395, "dist_3_9": 395, "184343e": 395, "dist_4_5": 395, "462646e": 395, "dist_4_6": 395, "321302e": 395, "dist_4_7": 395, "301324e": 395, "dist_4_8": 395, "519941e": 395, "dist_4_9": 395, "401477e": 395, "dist_5_6": 395, "244685e": 395, "dist_5_7": 395, "910567e": 395, "dist_5_8": 395, "002368e": 395, "dist_5_9": 395, "916621e": 395, "dist_6_7": 395, "304425e": 395, "dist_6_8": 395, "924854e": 395, "dist_6_9": 395, "010247e": 395, "dist_7_8": 395, "429886e": 395, "dist_7_9": 395, "403714e": 395, "dist_8_9": 395, "394927e": 395, "210": 395, "211": 395, "212": 395, "213": 395, "215": 395, "00013": 395, "448": 395, "999": 395, "743": 395, "6137": 395, "994": 395, "338": 395, "419": 395, "685": 395, "147e": 395, "755": 395, "5e": 395, "995": 395, "081": 395, "109": 395, "dpar": 395, "zorder": 395, "outside_whit": 395, "block": 395, "anyth": 395, "4707d090": 402, "36165": 402, "203": 403}, "objects": {"foxes": [[0, 0, 0, 1, "algorithms", ""], [28, 0, 0, 1, "constants", ""], [29, 0, 0, 1, "core", ""], [71, 0, 0, 1, "data", ""], [80, 0, 0, 1, "input", ""], [118, 0, 0, 1, "models", ""], [247, 0, 0, 1, "opt", ""], [306, 0, 0, 1, "output", ""], [324, 0, 0, 1, "utils", ""], [387, 0, 0, 1, "variables", ""]], "foxes.algorithms": [[1, 0, 0, 1, "downwind", ""], [15, 0, 0, 1, "iterative", ""]], "foxes.algorithms.downwind": [[2, 0, 0, 1, "downwind", ""], [4, 0, 0, 1, "models", ""]], "foxes.algorithms.downwind.downwind": [[3, 1, 1, 0, "Downwind", "Bases: Algorithm"]], "foxes.algorithms.downwind.downwind.Downwind": [[3, 1, 1, 0, "FarmWakesCalculation", "Bases: FarmDataModel"], [3, 1, 1, 0, "PointWakesCalculation", "Bases: PointDataModel"], [3, 1, 1, 0, "SetAmbPointResults", "Bases: PointDataModel"], [3, 2, 1, "id0", "__init__", ""], [3, 2, 1, 0, "calc_farm", "Calculate farm data."], [3, 2, 1, 0, "calc_points", "Calculate data at a given set of points."], [3, 5, 1, 0, "farm_controller", "The farm controller"], [3, 2, 1, 0, "finalize", "Finalizes the algorithm."], [3, 2, 1, 0, "finalize_model", "Call the finalization routine of the model, if not to be kept."], [3, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [3, 2, 1, 0, "get_models_data", "Creates xarray from model input data."], [3, 4, 1, 0, "idata_mem", "The current idata memory"], [3, 2, 1, 0, "init_states", "Initialize states, if needed."], [3, 2, 1, 0, "initialize", "Initializes the algorithm."], [3, 4, 1, 0, "initialized", "Initialization flag."], [3, 4, 1, 0, "model_id", "Unique id based on the model type."], [3, 5, 1, 0, "n_states", "The number of states"], [3, 2, 1, 0, "new", "Run-time algorithm factory."], [3, 2, 1, 0, "new_point_data", "Creates a point data xarray object, containing only points."], [3, 5, 1, 0, "partial_wakes_model", "The partial wakes model"], [3, 2, 1, 0, "print", "Print function, based on verbosity."], [3, 5, 1, 0, "rotor_model", "The rotor model, for all turbines"], [3, 5, 1, 0, "states", "The ambient states"], [3, 2, 1, 0, "update_idata", "Add to idata memory, optionally update and return idata object."], [3, 2, 1, 0, "update_n_turbines", "Reset the number of turbines, according to self.farm"], [3, 2, 1, 0, "var", "Creates a model specific variable name."], [3, 5, 1, 0, "wake_frame", "The wake frame"], [3, 5, 1, 0, "wake_models", "The wake models, applied to all turbines"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation": [[3, 2, 1, 0, "__init__", ""], [3, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [3, 2, 1, 0, "finalize", "Finalizes the model."], [3, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [3, 2, 1, 0, "initialize", "Initializes the model."], [3, 4, 1, 0, "initialized", "Initialization flag."], [3, 4, 1, 0, "model_id", "Unique id based on the model type."], [3, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [3, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [3, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.calculate": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "fdata", "The farm data"], [3, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.finalize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.get_data": [[3, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [3, 3, 2, 0, "data", "The data source"], [3, 3, 2, 0, "data_prio", "First search the data source, then the object"], [3, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [3, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [3, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.initialize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.output_farm_vars": [[3, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.run_calculation": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.var": [[3, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation": [[3, 2, 1, 0, "__init__", ""], [3, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [3, 5, 1, 0, "emodels", "The extra evaluation models"], [3, 5, 1, 0, "emodels_cpars", "The calculation parameters for extra models"], [3, 2, 1, 0, "finalize", "Finalizes the model."], [3, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [3, 2, 1, 0, "initialize", "Initializes the model."], [3, 4, 1, 0, "initialized", "Initialization flag."], [3, 4, 1, 0, "model_id", "Unique id based on the model type."], [3, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [3, 5, 1, 0, "point_vars", "The variables of interest"], [3, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [3, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.calculate": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "fdata", "The farm data"], [3, 3, 2, 0, "mdata", "The model data"], [3, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.finalize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.get_data": [[3, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [3, 3, 2, 0, "data", "The data source"], [3, 3, 2, 0, "data_prio", "First search the data source, then the object"], [3, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [3, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [3, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.initialize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.output_point_vars": [[3, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.run_calculation": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.var": [[3, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults": [[3, 2, 1, 0, "__init__", ""], [3, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [3, 2, 1, 0, "finalize", "Finalizes the model."], [3, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [3, 2, 1, 0, "initialize", "Initializes the model."], [3, 4, 1, 0, "initialized", "Initialization flag."], [3, 4, 1, 0, "model_id", "Unique id based on the model type."], [3, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [3, 5, 1, 0, "pvars", "The point variables to be treated"], [3, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [3, 2, 1, 0, "var", "Creates a model specific variable name."], [3, 5, 1, 0, "vars", "The variables to be copied to output"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.calculate": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "fdata", "The farm data"], [3, 3, 2, 0, "mdata", "The model data"], [3, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.finalize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.get_data": [[3, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [3, 3, 2, 0, "data", "The data source"], [3, 3, 2, 0, "data_prio", "First search the data source, then the object"], [3, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [3, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [3, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.initialize": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.output_point_vars": [[3, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.run_calculation": [[3, 3, 2, 0, "algo", "The calculation algorithm"], [3, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.var": [[3, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.downwind.Downwind.calc_farm": [[3, 3, 2, 0, "ambient", "Flag for ambient instead of waked calculation"], [3, 3, 2, 0, "calc_parameters", "Parameters for model calculation. Key: model name str, value: parameter dict"], [3, 3, 2, 0, "finalize", "Flag for finalization after calculation"], [3, 3, 2, 0, "persist", "Switch for forcing dask to load all model data into memory"], [3, 3, 2, 0, "vars_to_amb", "Variables for which ambient variables should be stored. None means all."]], "foxes.algorithms.downwind.downwind.Downwind.calc_points": [[3, 3, 2, 0, "ambient", "Flag for ambient instead of waked calculation"], [3, 3, 2, 0, "calc_parameters", "Parameters for model calculation. Key: model name str, value: parameter dict"], [3, 3, 2, 0, "farm_results", "The farm results. The calculated variables have dimensions (state, turbine)"], [3, 3, 2, 0, "finalize", "Flag for finalization after calculation"], [3, 3, 2, 0, "persist_mdata", "Switch for forcing dask to load all model data into memory"], [3, 3, 2, 0, "point_models", "Additional point models to be executed"], [3, 3, 2, 0, "points", "The points of interest, shape: (n_states, n_points, 3)"], [3, 3, 2, 0, "vars", "The variables that should be kept in the output, or None for all"], [3, 3, 2, 0, "vars_to_amb", "Variables for which ambient variables should be stored. None means all."]], "foxes.algorithms.downwind.downwind.Downwind.finalize": [[3, 3, 2, 0, "clear_mem", "Clear idata memory, including keep_models entries"]], "foxes.algorithms.downwind.downwind.Downwind.finalize_model": [[3, 3, 2, 0, "model", "The model to be finalized, if not in the keep_models list"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.get_data": [[3, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [3, 3, 2, 0, "data", "The data source"], [3, 3, 2, 0, "data_prio", "First search the data source, then the object"], [3, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [3, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [3, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.downwind.Downwind.get_models_data": [[3, 3, 2, 0, "idata", "The dict has exactly two entries: data_vars, a dict with entries name_str -> (dim_tuple, data_ndarray); and coords, a dict with entries dim_name_str -> dim_array. Take algorithm's idata object by default."]], "foxes.algorithms.downwind.downwind.Downwind.new": [[3, 3, 2, 0, "algo_type", "The selected derived class name"], [3, 3, 2, 0, "args", "Additional parameters for the constructor"], [3, 3, 2, 0, "kwargs", "Additional parameters for the constructor"]], "foxes.algorithms.downwind.downwind.Downwind.new_point_data": [[3, 3, 2, 0, "points", "The points, shape: (n_states, n_points, 3)"], [3, 3, 2, 0, "states_indices", "The indices of the states dimension"]], "foxes.algorithms.downwind.downwind.Downwind.update_idata": [[3, 3, 2, 0, "idata", "The idata dictionary to be updated, else only add to idata memory"], [3, 3, 2, 0, "models", "The models to initialize"], [3, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.downwind.Downwind.var": [[3, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.models": [[5, 0, 0, 1, "calc_order", ""], [7, 0, 0, 1, "farm_wakes_calc", ""], [9, 0, 0, 1, "point_wakes_calc", ""], [11, 0, 0, 1, "set_amb_farm_results", ""], [13, 0, 0, 1, "set_amb_point_results", ""]], "foxes.algorithms.downwind.models.calc_order": [[6, 1, 1, 0, "CalcOrder", "Bases: FarmDataModel"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder": [[6, 2, 1, "id0", "__init__", ""], [6, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [6, 2, 1, 0, "finalize", "Finalizes the model."], [6, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [6, 2, 1, 0, "initialize", "Initializes the model."], [6, 4, 1, 0, "initialized", "Initialization flag."], [6, 4, 1, 0, "model_id", "Unique id based on the model type."], [6, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [6, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [6, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.calculate": [[6, 3, 2, 0, "algo", "The calculation algorithm"], [6, 3, 2, 0, "fdata", "The farm data"], [6, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.finalize": [[6, 3, 2, 0, "algo", "The calculation algorithm"], [6, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.get_data": [[6, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [6, 3, 2, 0, "data", "The data source"], [6, 3, 2, 0, "data_prio", "First search the data source, then the object"], [6, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [6, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [6, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.initialize": [[6, 3, 2, 0, "algo", "The calculation algorithm"], [6, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.output_farm_vars": [[6, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.run_calculation": [[6, 3, 2, 0, "algo", "The calculation algorithm"], [6, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder.var": [[6, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.models.farm_wakes_calc": [[8, 1, 1, 0, "FarmWakesCalculation", "Bases: FarmDataModel"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation": [[8, 2, 1, "id0", "__init__", ""], [8, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [8, 2, 1, 0, "finalize", "Finalizes the model."], [8, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [8, 2, 1, 0, "initialize", "Initializes the model."], [8, 4, 1, 0, "initialized", "Initialization flag."], [8, 4, 1, 0, "model_id", "Unique id based on the model type."], [8, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [8, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [8, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.calculate": [[8, 3, 2, 0, "algo", "The calculation algorithm"], [8, 3, 2, 0, "fdata", "The farm data"], [8, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.finalize": [[8, 3, 2, 0, "algo", "The calculation algorithm"], [8, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.get_data": [[8, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [8, 3, 2, 0, "data", "The data source"], [8, 3, 2, 0, "data_prio", "First search the data source, then the object"], [8, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [8, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [8, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.initialize": [[8, 3, 2, 0, "algo", "The calculation algorithm"], [8, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.output_farm_vars": [[8, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.run_calculation": [[8, 3, 2, 0, "algo", "The calculation algorithm"], [8, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.var": [[8, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.models.point_wakes_calc": [[10, 1, 1, 0, "PointWakesCalculation", "Bases: PointDataModel"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation": [[10, 2, 1, "id0", "__init__", ""], [10, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [10, 5, 1, 0, "emodels", "The extra evaluation models"], [10, 5, 1, 0, "emodels_cpars", "The calculation parameters for extra models"], [10, 2, 1, 0, "finalize", "Finalizes the model."], [10, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [10, 2, 1, 0, "initialize", "Initializes the model."], [10, 4, 1, 0, "initialized", "Initialization flag."], [10, 4, 1, 0, "model_id", "Unique id based on the model type."], [10, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [10, 5, 1, 0, "point_vars", "The variables of interest"], [10, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [10, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.calculate": [[10, 3, 2, 0, "algo", "The calculation algorithm"], [10, 3, 2, 0, "fdata", "The farm data"], [10, 3, 2, 0, "mdata", "The model data"], [10, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.finalize": [[10, 3, 2, 0, "algo", "The calculation algorithm"], [10, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.get_data": [[10, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [10, 3, 2, 0, "data", "The data source"], [10, 3, 2, 0, "data_prio", "First search the data source, then the object"], [10, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [10, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [10, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.initialize": [[10, 3, 2, 0, "algo", "The calculation algorithm"], [10, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.output_point_vars": [[10, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.run_calculation": [[10, 3, 2, 0, "algo", "The calculation algorithm"], [10, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.var": [[10, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.models.set_amb_farm_results": [[12, 1, 1, 0, "SetAmbFarmResults", "Bases: FarmDataModel"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults": [[12, 2, 1, "id0", "__init__", ""], [12, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [12, 2, 1, 0, "finalize", "Finalizes the model."], [12, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [12, 2, 1, 0, "initialize", "Initializes the model."], [12, 4, 1, 0, "initialized", "Initialization flag."], [12, 4, 1, 0, "model_id", "Unique id based on the model type."], [12, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [12, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [12, 2, 1, 0, "var", "Creates a model specific variable name."], [12, 5, 1, 0, "vars", "The variables to be copied, or None for all"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.calculate": [[12, 3, 2, 0, "algo", "The calculation algorithm"], [12, 3, 2, 0, "fdata", "The farm data"], [12, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.finalize": [[12, 3, 2, 0, "algo", "The calculation algorithm"], [12, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.get_data": [[12, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [12, 3, 2, 0, "data", "The data source"], [12, 3, 2, 0, "data_prio", "First search the data source, then the object"], [12, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [12, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [12, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.initialize": [[12, 3, 2, 0, "algo", "The calculation algorithm"], [12, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.output_farm_vars": [[12, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.run_calculation": [[12, 3, 2, 0, "algo", "The calculation algorithm"], [12, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.var": [[12, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.downwind.models.set_amb_point_results": [[14, 1, 1, 0, "SetAmbPointResults", "Bases: PointDataModel"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults": [[14, 2, 1, "id0", "__init__", ""], [14, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [14, 2, 1, 0, "finalize", "Finalizes the model."], [14, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [14, 2, 1, 0, "initialize", "Initializes the model."], [14, 4, 1, 0, "initialized", "Initialization flag."], [14, 4, 1, 0, "model_id", "Unique id based on the model type."], [14, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [14, 5, 1, 0, "pvars", "The point variables to be treated"], [14, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [14, 2, 1, 0, "var", "Creates a model specific variable name."], [14, 5, 1, 0, "vars", "The variables to be copied to output"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.calculate": [[14, 3, 2, 0, "algo", "The calculation algorithm"], [14, 3, 2, 0, "fdata", "The farm data"], [14, 3, 2, 0, "mdata", "The model data"], [14, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.finalize": [[14, 3, 2, 0, "algo", "The calculation algorithm"], [14, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.get_data": [[14, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [14, 3, 2, 0, "data", "The data source"], [14, 3, 2, 0, "data_prio", "First search the data source, then the object"], [14, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [14, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [14, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.initialize": [[14, 3, 2, 0, "algo", "The calculation algorithm"], [14, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.output_point_vars": [[14, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.run_calculation": [[14, 3, 2, 0, "algo", "The calculation algorithm"], [14, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.var": [[14, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative": [[16, 0, 0, 1, "iterative", ""], [18, 0, 0, 1, "models", ""]], "foxes.algorithms.iterative.iterative": [[17, 1, 1, 0, "Iterative", "Bases: Downwind"]], "foxes.algorithms.iterative.iterative.Iterative": [[17, 1, 1, 0, "FarmWakesCalculation", "Bases: FarmDataModel"], [17, 1, 1, 0, "PointWakesCalculation", "Bases: PointDataModel"], [17, 1, 1, 0, "SetAmbPointResults", "Bases: PointDataModel"], [17, 2, 1, "id0", "__init__", ""], [17, 2, 1, 0, "calc_farm", "Calculate farm data."], [17, 2, 1, 0, "calc_points", "Calculate data at a given set of points."], [17, 5, 1, 0, "conv", "The convergence criteria"], [17, 5, 1, 0, "conv_error", "Throw error if not converging"], [17, 2, 1, 0, "finalize", "Finalizes the algorithm."], [17, 2, 1, 0, "finalize_model", "Call the finalization routine of the model, if not to be kept."], [17, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [17, 2, 1, 0, "get_models_data", "Creates xarray from model input data."], [17, 4, 1, 0, "idata_mem", "The current idata memory"], [17, 2, 1, 0, "init_states", "Initialize states, if needed."], [17, 2, 1, 0, "initialize", "Initializes the algorithm."], [17, 4, 1, 0, "initialized", "Initialization flag."], [17, 5, 1, 0, "max_its", "Set the maximal number of iterations, None means number of turbines + 1"], [17, 4, 1, 0, "model_id", "Unique id based on the model type."], [17, 2, 1, 0, "new", "Run-time algorithm factory."], [17, 2, 1, 0, "new_point_data", "Creates a point data xarray object, containing only points."], [17, 2, 1, 0, "print", "Print function, based on verbosity."], [17, 2, 1, 0, "update_idata", "Add to idata memory, optionally update and return idata object."], [17, 2, 1, 0, "update_n_turbines", "Reset the number of turbines, according to self.farm"], [17, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation": [[17, 2, 1, 0, "__init__", ""], [17, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [17, 2, 1, 0, "finalize", "Finalizes the model."], [17, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [17, 2, 1, 0, "initialize", "Initializes the model."], [17, 4, 1, 0, "initialized", "Initialization flag."], [17, 4, 1, 0, "model_id", "Unique id based on the model type."], [17, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [17, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [17, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.calculate": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "fdata", "The farm data"], [17, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.finalize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.get_data": [[17, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [17, 3, 2, 0, "data", "The data source"], [17, 3, 2, 0, "data_prio", "First search the data source, then the object"], [17, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [17, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [17, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.initialize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.output_farm_vars": [[17, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.run_calculation": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.var": [[17, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation": [[17, 2, 1, 0, "__init__", ""], [17, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [17, 5, 1, 0, "emodels", "The extra evaluation models"], [17, 5, 1, 0, "emodels_cpars", "The calculation parameters for extra models"], [17, 2, 1, 0, "finalize", "Finalizes the model."], [17, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [17, 2, 1, 0, "initialize", "Initializes the model."], [17, 4, 1, 0, "initialized", "Initialization flag."], [17, 4, 1, 0, "model_id", "Unique id based on the model type."], [17, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [17, 5, 1, 0, "point_vars", "The variables of interest"], [17, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [17, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.calculate": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "fdata", "The farm data"], [17, 3, 2, 0, "mdata", "The model data"], [17, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.finalize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.get_data": [[17, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [17, 3, 2, 0, "data", "The data source"], [17, 3, 2, 0, "data_prio", "First search the data source, then the object"], [17, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [17, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [17, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.initialize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.output_point_vars": [[17, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.run_calculation": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.var": [[17, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults": [[17, 2, 1, 0, "__init__", ""], [17, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [17, 2, 1, 0, "finalize", "Finalizes the model."], [17, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [17, 2, 1, 0, "initialize", "Initializes the model."], [17, 4, 1, 0, "initialized", "Initialization flag."], [17, 4, 1, 0, "model_id", "Unique id based on the model type."], [17, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [17, 5, 1, 0, "pvars", "The point variables to be treated"], [17, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [17, 2, 1, 0, "var", "Creates a model specific variable name."], [17, 5, 1, 0, "vars", "The variables to be copied to output"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.calculate": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "fdata", "The farm data"], [17, 3, 2, 0, "mdata", "The model data"], [17, 3, 2, 0, "pdata", "The point data"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.finalize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.get_data": [[17, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [17, 3, 2, 0, "data", "The data source"], [17, 3, 2, 0, "data_prio", "First search the data source, then the object"], [17, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [17, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [17, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.initialize": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.output_point_vars": [[17, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.run_calculation": [[17, 3, 2, 0, "algo", "The calculation algorithm"], [17, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.var": [[17, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative.iterative.Iterative.calc_farm": [[17, 3, 2, 0, "ambient", "Flag for ambient instead of waked calculation"], [17, 3, 2, 0, "calc_parameters", "Parameters for model calculation. Key: model name str, value: parameter dict"], [17, 3, 2, 0, "finalize", "Flag for finalization after calculation"], [17, 3, 2, 0, "persist", "Switch for forcing dask to load all model data into memory"], [17, 3, 2, 0, "vars_to_amb", "Variables for which ambient variables should be stored. None means all."]], "foxes.algorithms.iterative.iterative.Iterative.calc_points": [[17, 3, 2, 0, "ambient", "Flag for ambient instead of waked calculation"], [17, 3, 2, 0, "calc_parameters", "Parameters for model calculation. Key: model name str, value: parameter dict"], [17, 3, 2, 0, "farm_results", "The farm results. The calculated variables have dimensions (state, turbine)"], [17, 3, 2, 0, "finalize", "Flag for finalization after calculation"], [17, 3, 2, 0, "persist_mdata", "Switch for forcing dask to load all model data into memory"], [17, 3, 2, 0, "point_models", "Additional point models to be executed"], [17, 3, 2, 0, "points", "The points of interest, shape: (n_states, n_points, 3)"], [17, 3, 2, 0, "vars", "The variables that should be kept in the output, or None for all"], [17, 3, 2, 0, "vars_to_amb", "Variables for which ambient variables should be stored. None means all."]], "foxes.algorithms.iterative.iterative.Iterative.finalize": [[17, 3, 2, 0, "clear_mem", "Clear idata memory, including keep_models entries"]], "foxes.algorithms.iterative.iterative.Iterative.finalize_model": [[17, 3, 2, 0, "model", "The model to be finalized, if not in the keep_models list"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.get_data": [[17, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [17, 3, 2, 0, "data", "The data source"], [17, 3, 2, 0, "data_prio", "First search the data source, then the object"], [17, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [17, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [17, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.iterative.Iterative.get_models_data": [[17, 3, 2, 0, "idata", "The dict has exactly two entries: data_vars, a dict with entries name_str -> (dim_tuple, data_ndarray); and coords, a dict with entries dim_name_str -> dim_array. Take algorithm's idata object by default."]], "foxes.algorithms.iterative.iterative.Iterative.new": [[17, 3, 2, 0, "algo_type", "The selected derived class name"], [17, 3, 2, 0, "args", "Additional parameters for the constructor"], [17, 3, 2, 0, "kwargs", "Additional parameters for the constructor"]], "foxes.algorithms.iterative.iterative.Iterative.new_point_data": [[17, 3, 2, 0, "points", "The points, shape: (n_states, n_points, 3)"], [17, 3, 2, 0, "states_indices", "The indices of the states dimension"]], "foxes.algorithms.iterative.iterative.Iterative.update_idata": [[17, 3, 2, 0, "idata", "The idata dictionary to be updated, else only add to idata memory"], [17, 3, 2, 0, "models", "The models to initialize"], [17, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.iterative.Iterative.var": [[17, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative.models": [[19, 0, 0, 1, "convergence", ""], [24, 0, 0, 1, "farm_wakes_calc", ""], [26, 0, 0, 1, "loop_runner", ""]], "foxes.algorithms.iterative.models.convergence": [[20, 1, 1, 0, "ConvCrit", "Bases: object"], [21, 1, 1, 0, "ConvCritList", "Bases: ConvCrit"], [22, 1, 1, 0, "ConvVarDelta", "Bases: ConvCrit"], [23, 1, 1, 0, "DefaultConv", "Bases: ConvVarDelta"]], "foxes.algorithms.iterative.models.convergence.ConvCrit": [[20, 2, 1, "id0", "__init__", ""], [20, 2, 1, 0, "check_converged", "Check convergence criteria."]], "foxes.algorithms.iterative.models.convergence.ConvCrit.check_converged": [[20, 3, 2, 0, "algo", "The calculation algorithm"], [20, 3, 2, 0, "fdata0", "The farm data results of previous iteration, or None if first"], [20, 3, 2, 0, "fdata1", "The farm data results of current iteration, or None if first"], [20, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.convergence.ConvCritList": [[21, 2, 1, "id0", "__init__", ""], [21, 2, 1, 0, "add_crit", "Add a convergence criterion"], [21, 2, 1, 0, "check_converged", "Check convergence criteria."], [21, 5, 1, 0, "crits", "The criteria"]], "foxes.algorithms.iterative.models.convergence.ConvCritList.add_crit": [[21, 3, 2, 0, "crit", "The criterion"]], "foxes.algorithms.iterative.models.convergence.ConvCritList.check_converged": [[21, 3, 2, 0, "algo", "The calculation algorithm"], [21, 3, 2, 0, "fdata0", "The farm data results of previous iteration, or None if first"], [21, 3, 2, 0, "fdata1", "The farm data results of current iteration, or None if first"], [21, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.convergence.ConvVarDelta": [[22, 2, 1, "id0", "__init__", ""], [22, 2, 1, 0, "check_converged", "Check convergence criteria."], [22, 5, 1, 0, "limits", "The convergence limits. Keys: variables str, values: float values"], [22, 5, 1, 0, "wd_vars", "The wind direction type variables (unit deg)"]], "foxes.algorithms.iterative.models.convergence.ConvVarDelta.check_converged": [[22, 3, 2, 0, "algo", "The calculation algorithm"], [22, 3, 2, 0, "fdata0", "The farm data results of previous iteration, or None if first"], [22, 3, 2, 0, "fdata1", "The farm data results of current iteration, or None if first"], [22, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.convergence.DefaultConv": [[23, 2, 1, "id0", "__init__", ""], [23, 2, 1, 0, "check_converged", "Check convergence criteria."]], "foxes.algorithms.iterative.models.convergence.DefaultConv.check_converged": [[23, 3, 2, 0, "algo", "The calculation algorithm"], [23, 3, 2, 0, "fdata0", "The farm data results of previous iteration, or None if first"], [23, 3, 2, 0, "fdata1", "The farm data results of current iteration, or None if first"], [23, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.farm_wakes_calc": [[25, 1, 1, 0, "FarmWakesCalculation", "Bases: FarmDataModel"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation": [[25, 2, 1, "id0", "__init__", ""], [25, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [25, 2, 1, 0, "finalize", "Finalizes the model."], [25, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [25, 2, 1, 0, "initialize", "Initializes the model."], [25, 4, 1, 0, "initialized", "Initialization flag."], [25, 4, 1, 0, "model_id", "Unique id based on the model type."], [25, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [25, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [25, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.calculate": [[25, 3, 2, 0, "algo", "The calculation algorithm"], [25, 3, 2, 0, "fdata", "The farm data"], [25, 3, 2, 0, "mdata", "The model data"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.finalize": [[25, 3, 2, 0, "algo", "The calculation algorithm"], [25, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.get_data": [[25, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [25, 3, 2, 0, "data", "The data source"], [25, 3, 2, 0, "data_prio", "First search the data source, then the object"], [25, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [25, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [25, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.initialize": [[25, 3, 2, 0, "algo", "The calculation algorithm"], [25, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.output_farm_vars": [[25, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.run_calculation": [[25, 3, 2, 0, "algo", "The calculation algorithm"], [25, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.var": [[25, 3, 2, 0, "v", "The variable name"]], "foxes.algorithms.iterative.models.loop_runner": [[27, 1, 1, 0, "LoopRunner", "Bases: FarmDataModelList"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner": [[27, 2, 1, "id0", "__init__", ""], [27, 2, 1, 0, "append", "Add a model to the list"], [27, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [27, 5, 1, 0, "conv", "The convergence criteria"], [27, 5, 1, 0, "conv_error", "Throw error if not converging"], [27, 2, 1, 0, "finalize", "Finalizes the model."], [27, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [27, 2, 1, 0, "initialize", "Initializes the model."], [27, 4, 1, 0, "initialized", "Initialization flag."], [27, 5, 1, 0, "max_its", "Set the maximal number of iterations, None means number of turbines + 1"], [27, 4, 1, 0, "model_id", "Unique id based on the model type."], [27, 5, 1, 0, "model_wflag", "True for models that should be run during wake iterations"], [27, 5, 1, 0, "models", "The model list"], [27, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [27, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [27, 2, 1, 0, "var", "Creates a model specific variable name."], [27, 5, 1, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.append": [[27, 3, 2, 0, "model", "The model to add"], [27, 3, 2, 0, "wflag", "True if model should be run during wake iterations"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.calculate": [[27, 3, 2, 0, "algo", "The calculation algorithm"], [27, 3, 2, 0, "fdata", "The farm data"], [27, 3, 2, 0, "mdata", "The model data"], [27, 3, 2, 0, "parameters", "A list of parameter dicts, one for each model"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.finalize": [[27, 3, 2, 0, "algo", "The calculation algorithm"], [27, 3, 2, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.get_data": [[27, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [27, 3, 2, 0, "data", "The data source"], [27, 3, 2, 0, "data_prio", "First search the data source, then the object"], [27, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [27, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [27, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.initialize": [[27, 3, 2, 0, "algo", "The calculation algorithm"], [27, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.output_farm_vars": [[27, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.run_calculation": [[27, 3, 2, 0, "algo", "The calculation algorithm"], [27, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner.var": [[27, 3, 2, 0, "v", "The variable name"]], "foxes.constants": [[28, 5, 1, 0, "AMB_RPOINT_RESULTS", "Identified for ambient rotor point results"], [28, 5, 1, 0, "DTYPE", "Default data type for floats"], [28, 5, 1, 0, "FARM", "Wind farm identifier"], [28, 5, 1, 0, "GW", "The unit giga watt"], [28, 5, 1, 0, "ITYPE", "Default data type for int"], [28, 5, 1, 0, "KAPPA", "The Van-Karman constant"], [28, 5, 1, 0, "MW", "The unit mega watt"], [28, 5, 1, 0, "POINT", "Point identifier"], [28, 5, 1, 0, "POINTS", "Points identifier"], [28, 5, 1, 0, "POP", "Population identifier"], [28, 5, 1, 0, "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [28, 5, 1, 0, "RPOINT", "Rotor point identifier"], [28, 5, 1, 0, "RPOINTS", "Rotor points identifier"], [28, 5, 1, 0, "RWEIGHTS", "Rotor point weights identifier"], [28, 5, 1, 0, "STATE", "States identifier"], [28, 5, 1, 0, "TMODELS", "Turbine models identifier"], [28, 5, 1, 0, "TMODELS_SELS", "Selected turbine models identifier"], [28, 5, 1, 0, "TNAME", "Wind turbine name identifier"], [28, 5, 1, 0, "TURBINE", "Wind turbine identifier"], [28, 5, 1, 0, "TW", "The unit terra watt"], [28, 5, 1, 0, "VALID", "Validity identifier"], [28, 5, 1, 0, "VARS", "Variables identifier"], [28, 5, 1, 0, "W", "The unit watt"], [28, 5, 1, 0, "kW", "The unit kilo watt"]], "foxes.core": [[30, 0, 0, 1, "algorithm", ""], [32, 0, 0, 1, "data", ""], [34, 0, 0, 1, "data_calc_model", ""], [36, 0, 0, 1, "farm_controller", ""], [38, 0, 0, 1, "farm_data_model", ""], [41, 0, 0, 1, "farm_model", ""], [43, 0, 0, 1, "model", ""], [45, 0, 0, 1, "partial_wakes_model", ""], [47, 0, 0, 1, "point_data_model", ""], [50, 0, 0, 1, "rotor_model", ""], [52, 0, 0, 1, "states", ""], [55, 0, 0, 1, "turbine", ""], [57, 0, 0, 1, "turbine_model", ""], [59, 0, 0, 1, "turbine_type", ""], [61, 0, 0, 1, "vertical_profile", ""], [63, 0, 0, 1, "wake_frame", ""], [65, 0, 0, 1, "wake_model", ""], [67, 0, 0, 1, "wake_superposition", ""], [69, 0, 0, 1, "wind_farm", ""]], "foxes.core.algorithm": [[31, 1, 1, 0, "Algorithm", "Bases: Model"]], "foxes.core.algorithm.Algorithm": [[31, 2, 1, "id0", "__init__", ""], [31, 5, 1, 0, "chunks", "The chunks choice for running in parallel with dask, e.g. {\"state\": 1000} for chunks of 1000 states"], [31, 5, 1, 0, "dbook", "The data book, or None for default"], [31, 5, 1, 0, "farm", "The wind farm"], [31, 2, 1, 0, "finalize", "Finalizes the algorithm."], [31, 2, 1, 0, "finalize_model", "Call the finalization routine of the model, if not to be kept."], [31, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [31, 2, 1, 0, "get_models_data", "Creates xarray from model input data."], [31, 4, 1, 0, "idata_mem", "The current idata memory"], [31, 2, 1, 0, "initialize", "Initializes the algorithm."], [31, 4, 1, 0, "initialized", "Initialization flag."], [31, 5, 1, 0, "keep_models", "Keep these models data in memory and do not finalize them"], [31, 5, 1, 0, "mbook", "The model book"], [31, 4, 1, 0, "model_id", "Unique id based on the model type."], [31, 2, 1, 0, "new", "Run-time algorithm factory."], [31, 2, 1, 0, "new_point_data", "Creates a point data xarray object, containing only points."], [31, 2, 1, 0, "print", "Print function, based on verbosity."], [31, 2, 1, 0, "update_idata", "Add to idata memory, optionally update and return idata object."], [31, 2, 1, 0, "update_n_turbines", "Reset the number of turbines, according to self.farm"], [31, 2, 1, 0, "var", "Creates a model specific variable name."], [31, 5, 1, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.core.algorithm.Algorithm.finalize": [[31, 3, 2, 0, "clear_mem", "Clear idata memory, including keep_models entries"]], "foxes.core.algorithm.Algorithm.finalize_model": [[31, 3, 2, 0, "model", "The model to be finalized, if not in the keep_models list"], [31, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.algorithm.Algorithm.get_data": [[31, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [31, 3, 2, 0, "data", "The data source"], [31, 3, 2, 0, "data_prio", "First search the data source, then the object"], [31, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [31, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [31, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.algorithm.Algorithm.get_models_data": [[31, 3, 2, 0, "idata", "The dict has exactly two entries: data_vars, a dict with entries name_str -> (dim_tuple, data_ndarray); and coords, a dict with entries dim_name_str -> dim_array. Take algorithm's idata object by default."]], "foxes.core.algorithm.Algorithm.new": [[31, 3, 2, 0, "algo_type", "The selected derived class name"], [31, 3, 2, 0, "args", "Additional parameters for the constructor"], [31, 3, 2, 0, "kwargs", "Additional parameters for the constructor"]], "foxes.core.algorithm.Algorithm.new_point_data": [[31, 3, 2, 0, "points", "The points, shape: (n_states, n_points, 3)"], [31, 3, 2, 0, "states_indices", "The indices of the states dimension"]], "foxes.core.algorithm.Algorithm.update_idata": [[31, 3, 2, 0, "idata", "The idata dictionary to be updated, else only add to idata memory"], [31, 3, 2, 0, "models", "The models to initialize"], [31, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.algorithm.Algorithm.var": [[31, 3, 2, 0, "v", "The variable name"]], "foxes.core.data": [[33, 1, 1, 0, "Data", "Bases: Dict"]], "foxes.core.data.Data": [[33, 2, 1, "id0", "__init__", ""], [33, 2, 1, 0, "__new__", ""], [33, 2, 1, 0, "clear", ""], [33, 2, 1, 0, "copy", ""], [33, 5, 1, 0, "dims", "The dimensions tuples, same or subset of data keys"], [33, 2, 1, 0, "fromkeys", "Create a new dictionary with keys from iterable and values set to value."], [33, 2, 1, 0, "get", "Return the value for key if key is in the dictionary, else default."], [33, 2, 1, 0, "items", ""], [33, 2, 1, 0, "keys", ""], [33, 5, 1, 0, "loop_dims", "List of the loop dimensions during xarray's apply_ufunc calculations"], [33, 2, 1, 0, "pop", "If key is not found, d is returned if given, otherwise KeyError is raised"], [33, 2, 1, 0, "popitem", "Remove and return a (key, value) pair as a 2-tuple."], [33, 2, 1, 0, "setdefault", "Insert key with a value of default if key is not in the dictionary."], [33, 5, 1, 0, "sizes", "The dimension sizes"], [33, 2, 1, 0, "update", "If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k] If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v In either case, this is followed by: for k in F:  D[k] = F[k]"], [33, 2, 1, 0, "values", ""]], "foxes.core.data_calc_model": [[35, 1, 1, 0, "DataCalcModel", "Bases: Model"]], "foxes.core.data_calc_model.DataCalcModel": [[35, 2, 1, "id0", "__init__", ""], [35, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [35, 2, 1, 0, "finalize", "Finalizes the model."], [35, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [35, 2, 1, 0, "initialize", "Initializes the model."], [35, 4, 1, 0, "initialized", "Initialization flag."], [35, 4, 1, 0, "model_id", "Unique id based on the model type."], [35, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [35, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.data_calc_model.DataCalcModel.calculate": [[35, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.data_calc_model.DataCalcModel.finalize": [[35, 3, 2, 0, "algo", "The calculation algorithm"], [35, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.data_calc_model.DataCalcModel.get_data": [[35, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [35, 3, 2, 0, "data", "The data source"], [35, 3, 2, 0, "data_prio", "First search the data source, then the object"], [35, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [35, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [35, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.data_calc_model.DataCalcModel.initialize": [[35, 3, 2, 0, "algo", "The calculation algorithm"], [35, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.data_calc_model.DataCalcModel.run_calculation": [[35, 3, 2, 0, "algo", "The calculation algorithm"], [35, 3, 2, 0, "loop_dims", "List of the loop dimensions during xarray's apply_ufunc calculations"], [35, 3, 2, 0, "out_core_vars", "The core dimensions of the output data, use FC.VARS for variables dimension (required)"], [35, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.data_calc_model.DataCalcModel.var": [[35, 3, 2, 0, "v", "The variable name"]], "foxes.core.farm_controller": [[37, 1, 1, 0, "FarmController", "Bases: FarmDataModel"]], "foxes.core.farm_controller.FarmController": [[37, 2, 1, "id0", "__init__", ""], [37, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [37, 2, 1, 0, "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [37, 2, 1, 0, "finalize", "Finalizes the model."], [37, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [37, 2, 1, 0, "initialize", "Initializes the model."], [37, 4, 1, 0, "initialized", "Initialization flag."], [37, 4, 1, 0, "model_id", "Unique id based on the model type."], [37, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [37, 5, 1, 0, "pars", "Parameters for the turbine models, stored under their respecitve name"], [37, 5, 1, 0, "post_rotor_models", "The turbine models without pre-rotor flag"], [37, 5, 1, 0, "pre_rotor_models", "The turbine models with pre-rotor flag"], [37, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [37, 2, 1, 0, "set_pars", "Set parameters for a turbine model"], [37, 5, 1, 0, "turbine_model_names", "Names of all turbine models found in the farm"], [37, 5, 1, 0, "turbine_model_sels", "Selection flags for all turbine models, shape: (n_states, n_turbines, n_models)"], [37, 5, 1, 0, "turbine_types", "The turbine type of each turbine"], [37, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.farm_controller.FarmController.calculate": [[37, 3, 2, 0, "algo", "The calculation algorithm"], [37, 3, 2, 0, "fdata", "The farm data"], [37, 3, 2, 0, "mdata", "The model data"], [37, 3, 2, 0, "pre_rotor", "Flag for running pre-rotor or post-rotor models"], [37, 3, 2, 0, "st_sel", "Selection of states and turbines, shape: (n_states, n_turbines). None for all."]], "foxes.core.farm_controller.FarmController.collect_models": [[37, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.farm_controller.FarmController.finalize": [[37, 3, 2, 0, "algo", "The calculation algorithm"], [37, 3, 2, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.core.farm_controller.FarmController.get_data": [[37, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [37, 3, 2, 0, "data", "The data source"], [37, 3, 2, 0, "data_prio", "First search the data source, then the object"], [37, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [37, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [37, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.farm_controller.FarmController.initialize": [[37, 3, 2, 0, "algo", "The calculation algorithm"], [37, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_controller.FarmController.output_farm_vars": [[37, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.farm_controller.FarmController.run_calculation": [[37, 3, 2, 0, "algo", "The calculation algorithm"], [37, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.farm_controller.FarmController.set_pars": [[37, 3, 2, 0, "calc_pars", "Parameters for calculation"], [37, 3, 2, 0, "final_pars", "Parameters for finalization"], [37, 3, 2, 0, "init_pars", "Parameters for initialization"], [37, 3, 2, 0, "model_name", "Name of the model"]], "foxes.core.farm_controller.FarmController.var": [[37, 3, 2, 0, "v", "The variable name"]], "foxes.core.farm_data_model": [[39, 1, 1, 0, "FarmDataModel", "Bases: DataCalcModel"], [40, 1, 1, 0, "FarmDataModelList", "Bases: FarmDataModel"]], "foxes.core.farm_data_model.FarmDataModel": [[39, 2, 1, "id0", "__init__", ""], [39, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [39, 2, 1, 0, "finalize", "Finalizes the model."], [39, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [39, 2, 1, 0, "initialize", "Initializes the model."], [39, 4, 1, 0, "initialized", "Initialization flag."], [39, 4, 1, 0, "model_id", "Unique id based on the model type."], [39, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [39, 5, 1, 0, "pre_rotor", "Flag for running this model before running the rotor model."], [39, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [39, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.farm_data_model.FarmDataModel.calculate": [[39, 3, 2, 0, "algo", "The calculation algorithm"], [39, 3, 2, 0, "fdata", "The farm data"], [39, 3, 2, 0, "mdata", "The model data"]], "foxes.core.farm_data_model.FarmDataModel.finalize": [[39, 3, 2, 0, "algo", "The calculation algorithm"], [39, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_data_model.FarmDataModel.get_data": [[39, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [39, 3, 2, 0, "data", "The data source"], [39, 3, 2, 0, "data_prio", "First search the data source, then the object"], [39, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [39, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [39, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.farm_data_model.FarmDataModel.initialize": [[39, 3, 2, 0, "algo", "The calculation algorithm"], [39, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_data_model.FarmDataModel.output_farm_vars": [[39, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.farm_data_model.FarmDataModel.run_calculation": [[39, 3, 2, 0, "algo", "The calculation algorithm"], [39, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.farm_data_model.FarmDataModel.var": [[39, 3, 2, 0, "v", "The variable name"]], "foxes.core.farm_data_model.FarmDataModelList": [[40, 2, 1, "id0", "__init__", ""], [40, 2, 1, 0, "append", "Add a model to the list"], [40, 2, 1, 0, "calculate", "The main model calculation."], [40, 2, 1, 0, "finalize", "Finalizes the model."], [40, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [40, 2, 1, 0, "initialize", "Initializes the model."], [40, 4, 1, 0, "initialized", "Initialization flag."], [40, 4, 1, 0, "model_id", "Unique id based on the model type."], [40, 5, 1, 0, "models", "The model list"], [40, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [40, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [40, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.farm_data_model.FarmDataModelList.append": [[40, 3, 2, 0, "model", "The model to add"]], "foxes.core.farm_data_model.FarmDataModelList.calculate": [[40, 3, 2, 0, "algo", "The calculation algorithm"], [40, 3, 2, 0, "fdata", "The farm data"], [40, 3, 2, 0, "mdata", "The model data"], [40, 3, 2, 0, "parameters", "A list of parameter dicts, one for each model"]], "foxes.core.farm_data_model.FarmDataModelList.finalize": [[40, 3, 2, 0, "algo", "The calculation algorithm"], [40, 3, 2, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.core.farm_data_model.FarmDataModelList.get_data": [[40, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [40, 3, 2, 0, "data", "The data source"], [40, 3, 2, 0, "data_prio", "First search the data source, then the object"], [40, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [40, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [40, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.farm_data_model.FarmDataModelList.initialize": [[40, 3, 2, 0, "algo", "The calculation algorithm"], [40, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_data_model.FarmDataModelList.output_farm_vars": [[40, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.farm_data_model.FarmDataModelList.run_calculation": [[40, 3, 2, 0, "algo", "The calculation algorithm"], [40, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.farm_data_model.FarmDataModelList.var": [[40, 3, 2, 0, "v", "The variable name"]], "foxes.core.farm_model": [[42, 1, 1, 0, "FarmModel", "Bases: FarmDataModel"]], "foxes.core.farm_model.FarmModel": [[42, 2, 1, "id0", "__init__", ""], [42, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [42, 2, 1, 0, "finalize", "Finalizes the model."], [42, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [42, 2, 1, 0, "initialize", "Initializes the model."], [42, 4, 1, 0, "initialized", "Initialization flag."], [42, 4, 1, 0, "model_id", "Unique id based on the model type."], [42, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [42, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [42, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.farm_model.FarmModel.calculate": [[42, 3, 2, 0, "algo", "The calculation algorithm"], [42, 3, 2, 0, "fdata", "The farm data"], [42, 3, 2, 0, "mdata", "The model data"]], "foxes.core.farm_model.FarmModel.finalize": [[42, 3, 2, 0, "algo", "The calculation algorithm"], [42, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_model.FarmModel.get_data": [[42, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [42, 3, 2, 0, "data", "The data source"], [42, 3, 2, 0, "data_prio", "First search the data source, then the object"], [42, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [42, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [42, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.farm_model.FarmModel.initialize": [[42, 3, 2, 0, "algo", "The calculation algorithm"], [42, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.farm_model.FarmModel.output_farm_vars": [[42, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.farm_model.FarmModel.run_calculation": [[42, 3, 2, 0, "algo", "The calculation algorithm"], [42, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.farm_model.FarmModel.var": [[42, 3, 2, 0, "v", "The variable name"]], "foxes.core.model": [[44, 1, 1, 0, "Model", "Bases: object"]], "foxes.core.model.Model": [[44, 2, 1, "id0", "__init__", ""], [44, 2, 1, 0, "finalize", "Finalizes the model."], [44, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [44, 2, 1, 0, "initialize", "Initializes the model."], [44, 4, 1, 0, "initialized", "Initialization flag."], [44, 4, 1, 0, "model_id", "Unique id based on the model type."], [44, 5, 1, 0, "name", "The model name"], [44, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.model.Model.finalize": [[44, 3, 2, 0, "algo", "The calculation algorithm"], [44, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.model.Model.get_data": [[44, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [44, 3, 2, 0, "data", "The data source"], [44, 3, 2, 0, "data_prio", "First search the data source, then the object"], [44, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [44, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [44, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.model.Model.initialize": [[44, 3, 2, 0, "algo", "The calculation algorithm"], [44, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.model.Model.var": [[44, 3, 2, 0, "v", "The variable name"]], "foxes.core.partial_wakes_model": [[46, 1, 1, 0, "PartialWakesModel", "Bases: Model"]], "foxes.core.partial_wakes_model.PartialWakesModel": [[46, 2, 1, "id0", "__init__", ""], [46, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [46, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [46, 2, 1, 0, "finalize", "Finalizes the model."], [46, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [46, 2, 1, 0, "initialize", "Initializes the model."], [46, 4, 1, 0, "initialized", "Initialization flag."], [46, 4, 1, 0, "model_id", "Unique id based on the model type."], [46, 2, 1, 0, "new", "Run-time partial wakes factory."], [46, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [46, 2, 1, 0, "var", "Creates a model specific variable name."], [46, 5, 1, 0, "wake_frame", "The wake frame"], [46, 5, 1, 0, "wake_models", "The wake model selection"]], "foxes.core.partial_wakes_model.PartialWakesModel.contribute_to_wake_deltas": [[46, 3, 2, 0, "algo", "The calculation algorithm"], [46, 3, 2, 0, "fdata", "The farm data"], [46, 3, 2, 0, "mdata", "The model data"], [46, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [46, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.core.partial_wakes_model.PartialWakesModel.evaluate_results": [[46, 3, 2, 0, "algo", "The calculation algorithm"], [46, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [46, 3, 2, 0, "mdata", "The model data"], [46, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [46, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [46, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.core.partial_wakes_model.PartialWakesModel.finalize": [[46, 3, 2, 0, "algo", "The calculation algorithm"], [46, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.partial_wakes_model.PartialWakesModel.get_data": [[46, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [46, 3, 2, 0, "data", "The data source"], [46, 3, 2, 0, "data_prio", "First search the data source, then the object"], [46, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [46, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [46, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.partial_wakes_model.PartialWakesModel.initialize": [[46, 3, 2, 0, "algo", "The calculation algorithm"], [46, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.partial_wakes_model.PartialWakesModel.new": [[46, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.core.partial_wakes_model.PartialWakesModel.new_wake_deltas": [[46, 3, 2, 0, "algo", "The calculation algorithm"], [46, 3, 2, 0, "fdata", "The farm data"], [46, 3, 2, 0, "mdata", "The model data"]], "foxes.core.partial_wakes_model.PartialWakesModel.var": [[46, 3, 2, 0, "v", "The variable name"]], "foxes.core.point_data_model": [[48, 1, 1, 0, "PointDataModel", "Bases: DataCalcModel"], [49, 1, 1, 0, "PointDataModelList", "Bases: PointDataModel"]], "foxes.core.point_data_model.PointDataModel": [[48, 2, 1, "id0", "__init__", ""], [48, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [48, 2, 1, 0, "finalize", "Finalizes the model."], [48, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [48, 2, 1, 0, "initialize", "Initializes the model."], [48, 4, 1, 0, "initialized", "Initialization flag."], [48, 4, 1, 0, "model_id", "Unique id based on the model type."], [48, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [48, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [48, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.point_data_model.PointDataModel.calculate": [[48, 3, 2, 0, "algo", "The calculation algorithm"], [48, 3, 2, 0, "fdata", "The farm data"], [48, 3, 2, 0, "mdata", "The model data"], [48, 3, 2, 0, "pdata", "The point data"]], "foxes.core.point_data_model.PointDataModel.finalize": [[48, 3, 2, 0, "algo", "The calculation algorithm"], [48, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.point_data_model.PointDataModel.get_data": [[48, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [48, 3, 2, 0, "data", "The data source"], [48, 3, 2, 0, "data_prio", "First search the data source, then the object"], [48, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [48, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [48, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.point_data_model.PointDataModel.initialize": [[48, 3, 2, 0, "algo", "The calculation algorithm"], [48, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.point_data_model.PointDataModel.output_point_vars": [[48, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.point_data_model.PointDataModel.run_calculation": [[48, 3, 2, 0, "algo", "The calculation algorithm"], [48, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.point_data_model.PointDataModel.var": [[48, 3, 2, 0, "v", "The variable name"]], "foxes.core.point_data_model.PointDataModelList": [[49, 2, 1, "id0", "__init__", ""], [49, 2, 1, 0, "append", "Add a model to the list"], [49, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [49, 2, 1, 0, "finalize", "Finalizes the model."], [49, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [49, 2, 1, 0, "initialize", "Initializes the model."], [49, 4, 1, 0, "initialized", "Initialization flag."], [49, 4, 1, 0, "model_id", "Unique id based on the model type."], [49, 5, 1, 0, "models", "The model list"], [49, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [49, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [49, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.point_data_model.PointDataModelList.append": [[49, 3, 2, 0, "model", "The model to add"]], "foxes.core.point_data_model.PointDataModelList.calculate": [[49, 3, 2, 0, "algo", "The calculation algorithm"], [49, 3, 2, 0, "fdata", "The farm data"], [49, 3, 2, 0, "mdata", "The model data"], [49, 3, 2, 0, "parameters", "A list of parameter dicts, one for each model"], [49, 3, 2, 0, "pdata", "The point data"]], "foxes.core.point_data_model.PointDataModelList.finalize": [[49, 3, 2, 0, "algo", "The calculation algorithm"], [49, 3, 2, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.core.point_data_model.PointDataModelList.get_data": [[49, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [49, 3, 2, 0, "data", "The data source"], [49, 3, 2, 0, "data_prio", "First search the data source, then the object"], [49, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [49, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [49, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.point_data_model.PointDataModelList.initialize": [[49, 3, 2, 0, "algo", "The calculation algorithm"], [49, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.point_data_model.PointDataModelList.output_point_vars": [[49, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.point_data_model.PointDataModelList.run_calculation": [[49, 3, 2, 0, "algo", "The calculation algorithm"], [49, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.point_data_model.PointDataModelList.var": [[49, 3, 2, 0, "v", "The variable name"]], "foxes.core.rotor_model": [[51, 1, 1, 0, "RotorModel", "Bases: FarmDataModel"]], "foxes.core.rotor_model.RotorModel": [[51, 2, 1, "id0", "__init__", ""], [51, 5, 1, 0, "calc_vars", "The variables that are calculated by the model (Their ambients are added automatically)"], [51, 2, 1, 0, "calculate", "Calculate ambient rotor effective results."], [51, 2, 1, 0, "design_points", "The rotor model design points."], [51, 2, 1, 0, "eval_rpoint_results", "Evaluate rotor point results."], [51, 2, 1, 0, "finalize", "Finalizes the model."], [51, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [51, 2, 1, 0, "get_rotor_points", "Calculates rotor points from design points."], [51, 2, 1, 0, "initialize", "Initializes the model."], [51, 4, 1, 0, "initialized", "Initialization flag."], [51, 4, 1, 0, "model_id", "Unique id based on the model type."], [51, 2, 1, 0, "n_rotor_points", "The number of rotor points"], [51, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [51, 2, 1, 0, "rotor_point_weights", "The weights of the rotor points"], [51, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [51, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.rotor_model.RotorModel.calculate": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "fdata", "The farm data"], [51, 3, 2, 0, "mdata", "The model data"], [51, 3, 2, 0, "rpoints", "The rotor points, or None for automatic for this rotor. Shape: (n_states, n_turbines, n_rpoints, 3)"], [51, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [51, 3, 2, 0, "store_amb_res", "Switch for storing ambient rotor point reults as they come from the states to mdata"], [51, 3, 2, 0, "store_rpoints", "Switch for storing rotor points to mdata"], [51, 3, 2, 0, "store_rweights", "Switch for storing rotor point weights to mdata"], [51, 3, 2, 0, "weights", "The rotor point weights, or None for automatic for this rotor. Shape: (n_rpoints,)"]], "foxes.core.rotor_model.RotorModel.eval_rpoint_results": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "copy_to_ambient", "If True, the fdata results are copied to ambient variables after calculation"], [51, 3, 2, 0, "fdata", "The farm data"], [51, 3, 2, 0, "mdata", "The model data"], [51, 3, 2, 0, "rpoint_results", "The results at rotor points. Keys: variable str. Values: numpy.ndarray, shape if states_turbine is None: (n_states, n_turbines, n_rpoints). Else: (n_states, 1, n_rpoints)"], [51, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [51, 3, 2, 0, "weights", "The rotor point weights, shape: (n_rpoints,)"]], "foxes.core.rotor_model.RotorModel.finalize": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.rotor_model.RotorModel.get_data": [[51, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [51, 3, 2, 0, "data", "The data source"], [51, 3, 2, 0, "data_prio", "First search the data source, then the object"], [51, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [51, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [51, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.rotor_model.RotorModel.get_rotor_points": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "fdata", "The farm data"], [51, 3, 2, 0, "mdata", "The model data"]], "foxes.core.rotor_model.RotorModel.initialize": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.rotor_model.RotorModel.output_farm_vars": [[51, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.rotor_model.RotorModel.run_calculation": [[51, 3, 2, 0, "algo", "The calculation algorithm"], [51, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.rotor_model.RotorModel.var": [[51, 3, 2, 0, "v", "The variable name"]], "foxes.core.states": [[53, 1, 1, 0, "ExtendedStates", "Bases: States"], [54, 1, 1, 0, "States", "Bases: PointDataModel"]], "foxes.core.states.ExtendedStates": [[53, 2, 1, "id0", "__init__", ""], [53, 2, 1, 0, "append", "Add a model to the list"], [53, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [53, 2, 1, 0, "finalize", "Finalizes the model."], [53, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [53, 2, 1, 0, "index", "The index list"], [53, 2, 1, 0, "initialize", "Initializes the model."], [53, 4, 1, 0, "initialized", "Initialization flag."], [53, 4, 1, 0, "model_id", "Unique id based on the model type."], [53, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [53, 5, 1, 0, "pmodels", "The point models, including states as first model"], [53, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [53, 2, 1, 0, "size", "The total number of states."], [53, 5, 1, 0, "states", "The base states to start from"], [53, 2, 1, 0, "var", "Creates a model specific variable name."], [53, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.core.states.ExtendedStates.append": [[53, 3, 2, 0, "model", "The model to add"]], "foxes.core.states.ExtendedStates.calculate": [[53, 3, 2, 0, "algo", "The calculation algorithm"], [53, 3, 2, 0, "fdata", "The farm data"], [53, 3, 2, 0, "mdata", "The model data"], [53, 3, 2, 0, "pdata", "The point data"]], "foxes.core.states.ExtendedStates.finalize": [[53, 3, 2, 0, "algo", "The calculation algorithm"], [53, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.core.states.ExtendedStates.get_data": [[53, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [53, 3, 2, 0, "data", "The data source"], [53, 3, 2, 0, "data_prio", "First search the data source, then the object"], [53, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [53, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [53, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.states.ExtendedStates.initialize": [[53, 3, 2, 0, "algo", "The calculation algorithm"], [53, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.states.ExtendedStates.output_point_vars": [[53, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.states.ExtendedStates.run_calculation": [[53, 3, 2, 0, "algo", "The calculation algorithm"], [53, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.states.ExtendedStates.var": [[53, 3, 2, 0, "v", "The variable name"]], "foxes.core.states.ExtendedStates.weights": [[53, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.states.States": [[54, 2, 1, "id0", "__init__", ""], [54, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [54, 2, 1, 0, "finalize", "Finalizes the model."], [54, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [54, 2, 1, 0, "index", "The index list"], [54, 2, 1, 0, "initialize", "Initializes the model."], [54, 4, 1, 0, "initialized", "Initialization flag."], [54, 4, 1, 0, "model_id", "Unique id based on the model type."], [54, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [54, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [54, 2, 1, 0, "size", "The total number of states."], [54, 2, 1, 0, "var", "Creates a model specific variable name."], [54, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.core.states.States.calculate": [[54, 3, 2, 0, "algo", "The calculation algorithm"], [54, 3, 2, 0, "fdata", "The farm data"], [54, 3, 2, 0, "mdata", "The model data"], [54, 3, 2, 0, "pdata", "The point data"]], "foxes.core.states.States.finalize": [[54, 3, 2, 0, "algo", "The calculation algorithm"], [54, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.states.States.get_data": [[54, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [54, 3, 2, 0, "data", "The data source"], [54, 3, 2, 0, "data_prio", "First search the data source, then the object"], [54, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [54, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [54, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.states.States.initialize": [[54, 3, 2, 0, "algo", "The calculation algorithm"], [54, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.states.States.output_point_vars": [[54, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.states.States.run_calculation": [[54, 3, 2, 0, "algo", "The calculation algorithm"], [54, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.states.States.var": [[54, 3, 2, 0, "v", "The variable name"]], "foxes.core.states.States.weights": [[54, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.turbine": [[56, 1, 1, 0, "Turbine", "Bases: object"]], "foxes.core.turbine.Turbine": [[56, 5, 1, 0, "D", "The rotor diameter. Overwrites turbine type settings if given"], [56, 5, 1, 0, "H", "The hub height. Overwrites turbine type settings if given"], [56, 2, 1, "id0", "__init__", ""], [56, 2, 1, 0, "add_model", "Add a turbine model to the list."], [56, 5, 1, 0, "index", "The index in the wind farm"], [56, 2, 1, 0, "insert_model", "Insert a turbine model into the list of models."], [56, 5, 1, 0, "models", "The turbine model names, as they appear in the model book"], [56, 5, 1, 0, "mstates_sel", "For each turbine model, the state selection boolean array with shape (n_states,)"], [56, 5, 1, 0, "name", "The turbine name/label"], [56, 5, 1, 0, "xy", "The turbine ground position, shape: (2,)"]], "foxes.core.turbine.Turbine.add_model": [[56, 3, 2, 0, "model", "The model"], [56, 3, 2, 0, "states_sel", "The states selection for the model, shape: (n_states,)"]], "foxes.core.turbine.Turbine.insert_model": [[56, 3, 2, 0, "index", "The position in the model list"], [56, 3, 2, 0, "model", "The model"], [56, 3, 2, 0, "states_sel", "The states selection for the model, shape: (n_states,)"]], "foxes.core.turbine_model": [[58, 1, 1, 0, "TurbineModel", "Bases: FarmDataModel"]], "foxes.core.turbine_model.TurbineModel": [[58, 2, 1, "id0", "__init__", ""], [58, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [58, 2, 1, 0, "finalize", "Finalizes the model."], [58, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [58, 2, 1, 0, "initialize", "Initializes the model."], [58, 4, 1, 0, "initialized", "Initialization flag."], [58, 4, 1, 0, "model_id", "Unique id based on the model type."], [58, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [58, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [58, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.turbine_model.TurbineModel.calculate": [[58, 3, 2, 0, "algo", "The calculation algorithm"], [58, 3, 2, 0, "fdata", "The farm data"], [58, 3, 2, 0, "mdata", "The model data"], [58, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.core.turbine_model.TurbineModel.finalize": [[58, 3, 2, 0, "algo", "The calculation algorithm"], [58, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.turbine_model.TurbineModel.get_data": [[58, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [58, 3, 2, 0, "data", "The data source"], [58, 3, 2, 0, "data_prio", "First search the data source, then the object"], [58, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [58, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [58, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.turbine_model.TurbineModel.initialize": [[58, 3, 2, 0, "algo", "The calculation algorithm"], [58, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.turbine_model.TurbineModel.output_farm_vars": [[58, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.turbine_model.TurbineModel.run_calculation": [[58, 3, 2, 0, "algo", "The calculation algorithm"], [58, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.turbine_model.TurbineModel.var": [[58, 3, 2, 0, "v", "The variable name"]], "foxes.core.turbine_type": [[60, 1, 1, 0, "TurbineType", "Bases: TurbineModel"]], "foxes.core.turbine_type.TurbineType": [[60, 5, 1, 0, "D", "The rotor diameter"], [60, 5, 1, 0, "H", "The hub height"], [60, 5, 1, 0, "P_nominal", "The nominal power in kW"], [60, 5, 1, 0, "P_unit", "The unit of power"], [60, 2, 1, "id0", "__init__", ""], [60, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [60, 2, 1, 0, "finalize", "Finalizes the model."], [60, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [60, 2, 1, 0, "initialize", "Initializes the model."], [60, 4, 1, 0, "initialized", "Initialization flag."], [60, 4, 1, 0, "model_id", "Unique id based on the model type."], [60, 5, 1, 0, "name", "The model name"], [60, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [60, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [60, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.turbine_type.TurbineType.calculate": [[60, 3, 2, 0, "algo", "The calculation algorithm"], [60, 3, 2, 0, "fdata", "The farm data"], [60, 3, 2, 0, "mdata", "The model data"], [60, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.core.turbine_type.TurbineType.finalize": [[60, 3, 2, 0, "algo", "The calculation algorithm"], [60, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.turbine_type.TurbineType.get_data": [[60, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [60, 3, 2, 0, "data", "The data source"], [60, 3, 2, 0, "data_prio", "First search the data source, then the object"], [60, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [60, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [60, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.turbine_type.TurbineType.initialize": [[60, 3, 2, 0, "algo", "The calculation algorithm"], [60, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.turbine_type.TurbineType.output_farm_vars": [[60, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.core.turbine_type.TurbineType.run_calculation": [[60, 3, 2, 0, "algo", "The calculation algorithm"], [60, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.core.turbine_type.TurbineType.var": [[60, 3, 2, 0, "v", "The variable name"]], "foxes.core.vertical_profile": [[62, 1, 1, 0, "VerticalProfile", "Bases: Model"]], "foxes.core.vertical_profile.VerticalProfile": [[62, 2, 1, "id0", "__init__", ""], [62, 2, 1, 0, "calculate", "Run the profile calculation."], [62, 2, 1, 0, "finalize", "Finalizes the model."], [62, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [62, 2, 1, 0, "initialize", "Initializes the model."], [62, 4, 1, 0, "initialized", "Initialization flag."], [62, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [62, 4, 1, 0, "model_id", "Unique id based on the model type."], [62, 2, 1, 0, "new", "Run-time profile factory."], [62, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.vertical_profile.VerticalProfile.calculate": [[62, 3, 2, 0, "data", "The input data"], [62, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.core.vertical_profile.VerticalProfile.finalize": [[62, 3, 2, 0, "algo", "The calculation algorithm"], [62, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.vertical_profile.VerticalProfile.get_data": [[62, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [62, 3, 2, 0, "data", "The data source"], [62, 3, 2, 0, "data_prio", "First search the data source, then the object"], [62, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [62, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [62, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.vertical_profile.VerticalProfile.initialize": [[62, 3, 2, 0, "algo", "The calculation algorithm"], [62, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.vertical_profile.VerticalProfile.new": [[62, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.core.vertical_profile.VerticalProfile.var": [[62, 3, 2, 0, "v", "The variable name"]], "foxes.core.wake_frame": [[64, 1, 1, 0, "WakeFrame", "Bases: Model"]], "foxes.core.wake_frame.WakeFrame": [[64, 2, 1, "id0", "__init__", ""], [64, 2, 1, 0, "calc_centreline_integral", "Integrates variables along the centreline."], [64, 2, 1, 0, "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [64, 2, 1, 0, "finalize", "Finalizes the model."], [64, 2, 1, 0, "get_centreline_points", "Gets the points along the centreline for given values of x."], [64, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [64, 2, 1, 0, "get_wake_coos", "Calculate wake coordinates."], [64, 2, 1, 0, "initialize", "Initializes the model."], [64, 4, 1, 0, "initialized", "Initialization flag."], [64, 4, 1, 0, "model_id", "Unique id based on the model type."], [64, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.wake_frame.WakeFrame.calc_centreline_integral": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "dx", "The step size of the integral"], [64, 3, 2, 0, "fdata", "The farm data"], [64, 3, 2, 0, "ipars", "Additional interpolation parameters"], [64, 3, 2, 0, "mdata", "The model data"], [64, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [64, 3, 2, 0, "variables", "The variables to be integrated"], [64, 3, 2, 0, "x", "The wake frame x coordinates of the upper integral bounds, shape: (n_states, n_points)"]], "foxes.core.wake_frame.WakeFrame.calc_order": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "fdata", "The farm data"], [64, 3, 2, 0, "mdata", "The model data"]], "foxes.core.wake_frame.WakeFrame.finalize": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_frame.WakeFrame.get_centreline_points": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "fdata", "The farm data"], [64, 3, 2, 0, "mdata", "The model data"], [64, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [64, 3, 2, 0, "x", "The wake frame x coordinates, shape: (n_states, n_points)"]], "foxes.core.wake_frame.WakeFrame.get_data": [[64, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [64, 3, 2, 0, "data", "The data source"], [64, 3, 2, 0, "data_prio", "First search the data source, then the object"], [64, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [64, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [64, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.wake_frame.WakeFrame.get_wake_coos": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "fdata", "The farm data"], [64, 3, 2, 0, "mdata", "The model data"], [64, 3, 2, 0, "points", "The evaluation points, shape: (n_states, n_points, 3)"], [64, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"]], "foxes.core.wake_frame.WakeFrame.initialize": [[64, 3, 2, 0, "algo", "The calculation algorithm"], [64, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_frame.WakeFrame.var": [[64, 3, 2, 0, "v", "The variable name"]], "foxes.core.wake_model": [[66, 1, 1, 0, "WakeModel", "Bases: Model"]], "foxes.core.wake_model.WakeModel": [[66, 2, 1, "id0", "__init__", ""], [66, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [66, 2, 1, 0, "finalize", "Finalizes the model."], [66, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [66, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [66, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [66, 2, 1, 0, "initialize", "Initializes the model."], [66, 4, 1, 0, "initialized", "Initialization flag."], [66, 4, 1, 0, "model_id", "Unique id based on the model type."], [66, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.wake_model.WakeModel.contribute_to_wake_deltas": [[66, 3, 2, 0, "algo", "The calculation algorithm"], [66, 3, 2, 0, "fdata", "The farm data"], [66, 3, 2, 0, "mdata", "The model data"], [66, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [66, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [66, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.core.wake_model.WakeModel.finalize": [[66, 3, 2, 0, "algo", "The calculation algorithm"], [66, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_model.WakeModel.finalize_wake_deltas": [[66, 3, 2, 0, "algo", "The calculation algorithm"], [66, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [66, 3, 2, 0, "fdata", "The farm data"], [66, 3, 2, 0, "mdata", "The model data"], [66, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.core.wake_model.WakeModel.get_data": [[66, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [66, 3, 2, 0, "data", "The data source"], [66, 3, 2, 0, "data_prio", "First search the data source, then the object"], [66, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [66, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [66, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.wake_model.WakeModel.init_wake_deltas": [[66, 3, 2, 0, "algo", "The calculation algorithm"], [66, 3, 2, 0, "fdata", "The farm data"], [66, 3, 2, 0, "mdata", "The model data"], [66, 3, 2, 0, "n_points", "The number of wake evaluation points"], [66, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.core.wake_model.WakeModel.initialize": [[66, 3, 2, 0, "algo", "The calculation algorithm"], [66, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_model.WakeModel.var": [[66, 3, 2, 0, "v", "The variable name"]], "foxes.core.wake_superposition": [[68, 1, 1, 0, "WakeSuperposition", "Bases: Model"]], "foxes.core.wake_superposition.WakeSuperposition": [[68, 2, 1, "id0", "__init__", ""], [68, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [68, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [68, 2, 1, 0, "finalize", "Finalizes the model."], [68, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [68, 2, 1, 0, "initialize", "Initializes the model."], [68, 4, 1, 0, "initialized", "Initialization flag."], [68, 4, 1, 0, "model_id", "Unique id based on the model type."], [68, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.core.wake_superposition.WakeSuperposition.calc_final_wake_delta": [[68, 3, 2, 0, "algo", "The calculation algorithm"], [68, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [68, 3, 2, 0, "fdata", "The farm data"], [68, 3, 2, 0, "mdata", "The model data"], [68, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [68, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.core.wake_superposition.WakeSuperposition.calc_wakes_plus_wake": [[68, 3, 2, 0, "algo", "The calculation algorithm"], [68, 3, 2, 0, "fdata", "The farm data"], [68, 3, 2, 0, "mdata", "The model data"], [68, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [68, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [68, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [68, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [68, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.core.wake_superposition.WakeSuperposition.finalize": [[68, 3, 2, 0, "algo", "The calculation algorithm"], [68, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_superposition.WakeSuperposition.get_data": [[68, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [68, 3, 2, 0, "data", "The data source"], [68, 3, 2, 0, "data_prio", "First search the data source, then the object"], [68, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [68, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [68, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.core.wake_superposition.WakeSuperposition.initialize": [[68, 3, 2, 0, "algo", "The calculation algorithm"], [68, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.core.wake_superposition.WakeSuperposition.var": [[68, 3, 2, 0, "v", "The variable name"]], "foxes.core.wind_farm": [[70, 1, 1, 0, "WindFarm", "Bases: object"]], "foxes.core.wind_farm.WindFarm": [[70, 2, 1, "id0", "__init__", ""], [70, 2, 1, 0, "add_turbine", "Add a wind turbine to the list."], [70, 5, 1, 0, "boundary", "The wind farm boundary"], [70, 4, 1, 0, "n_turbines", "The number of turbines in the wind farm"], [70, 5, 1, 0, "name", "The wind farm name"], [70, 4, 1, 0, "turbine_names", "The list of names of all turbines"], [70, 5, 1, 0, "turbines", "The wind turbines"]], "foxes.core.wind_farm.WindFarm.add_turbine": [[70, 3, 2, 0, "turbine", "The wind turbine"], [70, 3, 2, 0, "verbosity", "The output verbosity, 0 = silent"]], "foxes.data": [[72, 0, 0, 1, "farms", ""], [73, 0, 0, 1, "parse", ""], [76, 0, 0, 1, "power_ct_curves", ""], [77, 0, 0, 1, "states", ""], [78, 0, 0, 1, "static_data", ""]], "foxes.data.parse": [[74, 6, 1, 0, "parse_Pct_file_name", "Parse basic turbine data from file name"], [75, 6, 1, 0, "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.parse.parse_Pct_file_name": [[74, 3, 2, 0, "file_name", "Path to the file"]], "foxes.data.parse.parse_Pct_two_files": [[75, 3, 2, 0, "file_name_A", "Path to the first file"], [75, 3, 2, 0, "file_name_B", "Path to the second file"]], "foxes.data.static_data": [[79, 1, 1, 0, "StaticData", "Bases: DataBook"]], "foxes.data.static_data.StaticData": [[79, 2, 1, "id0", "__init__", ""], [79, 2, 1, 0, "add_data_package", "Add static files from a package location."], [79, 2, 1, 0, "add_data_package_file", "Add a static file from a package location."], [79, 2, 1, 0, "add_file", "Add a file path"], [79, 2, 1, 0, "add_files", "Add file paths"], [79, 2, 1, 0, "get_file_path", "Get path of a file"], [79, 2, 1, 0, "toc", "Get list of contents"]], "foxes.data.static_data.StaticData.add_data_package": [[79, 3, 2, 0, "context", "The context"], [79, 3, 2, 0, "file_sfx", "File endings to include"], [79, 3, 2, 0, "package", "The package, must contain init file"]], "foxes.data.static_data.StaticData.add_data_package_file": [[79, 3, 2, 0, "context", "The context"], [79, 3, 2, 0, "package", "The package, must contain init.py` file"]], "foxes.data.static_data.StaticData.add_file": [[79, 3, 2, 0, "context", "The context"], [79, 3, 2, 0, "file_path", "The file path"]], "foxes.data.static_data.StaticData.add_files": [[79, 3, 2, 0, "context", "The context"], [79, 3, 2, 0, "file_paths", "The file paths"]], "foxes.data.static_data.StaticData.get_file_path": [[79, 3, 2, 0, "check_raw", "Check if file_name exists as given, and in that case return the path"], [79, 3, 2, 0, "context", "The context"], [79, 3, 2, 0, "errors", "Flag for raising KeyError, otherwise return None, if context of file_name not found"], [79, 3, 2, 0, "file_name", "The file name"]], "foxes.data.static_data.StaticData.toc": [[79, 3, 2, 0, "context", "The context"]], "foxes.input": [[81, 0, 0, 1, "farm_layout", ""], [94, 0, 0, 1, "states", ""], [111, 0, 0, 1, "windio", ""]], "foxes.input.farm_layout": [[82, 0, 0, 1, "from_csv", ""], [84, 0, 0, 1, "from_df", ""], [86, 0, 0, 1, "from_file", ""], [88, 0, 0, 1, "from_json", ""], [90, 0, 0, 1, "grid", ""], [92, 0, 0, 1, "row", ""]], "foxes.input.farm_layout.from_csv": [[83, 6, 1, 0, "add_from_csv", "Add turbines to wind farm via csv input file."]], "foxes.input.farm_layout.from_csv.add_from_csv": [[83, 3, 2, 0, "col_D", "The rotor diameter column"], [83, 3, 2, 0, "col_H", "The hub height column"], [83, 3, 2, 0, "col_id", "The id column"], [83, 3, 2, 0, "col_index", "The index column, or None"], [83, 3, 2, 0, "col_name", "The name column, or None"], [83, 3, 2, 0, "col_x", "The x column"], [83, 3, 2, 0, "col_y", "The y column"], [83, 3, 2, 0, "cols_models_post", "The turbine model columns, entered after turbine_models"], [83, 3, 2, 0, "cols_models_pre", "The turbine model columns, entered before turbine_models"], [83, 3, 2, 0, "data_source", "The input csv file or data source"], [83, 3, 2, 0, "farm", "The wind farm"], [83, 3, 2, 0, "turbine_base_name", "The turbine base name, only used if col_name is None"], [83, 3, 2, 0, "turbine_base_name_count_shift", "Start turbine names by 1 instead of 0"], [83, 3, 2, 0, "turbine_ids", "The turbine ids, or None for index"], [83, 3, 2, 0, "turbine_parameters", "Additional parameters are forwarded to the WindFarm.add_turbine()."], [83, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.farm_layout.from_df": [[85, 6, 1, 0, "add_from_df", "Add turbines to wind farm via pandas DataFrame."]], "foxes.input.farm_layout.from_df.add_from_df": [[85, 3, 2, 0, "args", "Additional parameters for add_from_csv()"], [85, 3, 2, 0, "data_source", "The input csv file or data source"], [85, 3, 2, 0, "farm", "The wind farm"], [85, 3, 2, 0, "kwargs", "Additional parameters for add_from_csv()"]], "foxes.input.farm_layout.from_file": [[87, 6, 1, 0, "add_from_file", "Add turbines from file."]], "foxes.input.farm_layout.from_file.add_from_file": [[87, 3, 2, 0, "args", "Parameters forwarded to the method"], [87, 3, 2, 0, "dbook", "The data book, or None for default"], [87, 3, 2, 0, "farm", "The wind farm"], [87, 3, 2, 0, "file_path", "Path to the file"], [87, 3, 2, 0, "kwargs", "Parameters forwarded to the method"], [87, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.farm_layout.from_json": [[89, 6, 1, 0, "add_from_json", "Add turbimes from a json file."]], "foxes.input.farm_layout.from_json.add_from_json": [[89, 3, 2, 0, "farm", "The wind farm"], [89, 3, 2, 0, "file_path", "Path to the file"], [89, 3, 2, 0, "set_farm_name", "Flag for inferring wind farm name from data"], [89, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.farm_layout.grid": [[91, 6, 1, 0, "add_grid", "Add a regular grid of turbines."]], "foxes.input.farm_layout.grid.add_grid": [[91, 3, 2, 0, "farm", "The wind farm"], [91, 3, 2, 0, "indices", "The turbine indices"], [91, 3, 2, 0, "names", "The turbine names"], [91, 3, 2, 0, "step_vectors", "The two step vectors in x and y, respectively, shape: (2, 2)"], [91, 3, 2, 0, "steps", "The steps in x, y. Length 2"], [91, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [91, 3, 2, 0, "xy_base", "The base point, shape: (2,)"]], "foxes.input.farm_layout.row": [[93, 6, 1, 0, "add_row", "Add a single row of turbines."]], "foxes.input.farm_layout.row.add_row": [[93, 3, 2, 0, "farm", "The wind farm"], [93, 3, 2, 0, "indices", "The turbine indices"], [93, 3, 2, 0, "n_turbines", "The number of turbines"], [93, 3, 2, 0, "names", "The turbine names"], [93, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [93, 3, 2, 0, "xy_base", "The base point, shape: (2,)"], [93, 3, 2, 0, "xy_step", "The step vector, shape: (2,)"]], "foxes.input.states": [[95, 0, 0, 1, "create", ""], [99, 0, 0, 1, "field_data_nc", ""], [101, 0, 0, 1, "multi_height", ""], [104, 0, 0, 1, "scan_ws", ""], [106, 0, 0, 1, "single", ""], [108, 0, 0, 1, "states_table", ""]], "foxes.input.states.create": [[96, 0, 0, 1, "random_abl_states", ""]], "foxes.input.states.create.random_abl_states": [[97, 6, 1, 0, "create_random_abl_states", "Create random abl states."], [98, 6, 1, 0, "write_random_abl_states", "Path to the file"]], "foxes.input.states.create.random_abl_states.create_random_abl_states": [[97, 3, 2, 0, "cols_minmax", "For each variable the min and max values, keys: variable name str, values: array_like with length 2"], [97, 3, 2, 0, "mol_abs_range", "Min and max of allowed MOL values, set to nan if exceeded (i.e., neutral stratification)"], [97, 3, 2, 0, "n_states", "The number of states"], [97, 3, 2, 0, "normalize", "Normalize weights to 1"], [97, 3, 2, 0, "var2col", "Mapping from variables to column names"]], "foxes.input.states.field_data_nc": [[100, 1, 1, 0, "FieldDataNC", "Bases: States"]], "foxes.input.states.field_data_nc.FieldDataNC": [[100, 2, 1, "id0", "__init__", ""], [100, 5, 1, 0, "bounds_error", "Flag for raising errors if bounds are exceeded"], [100, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [100, 5, 1, 0, "data_source", "The data or the file search pattern, should end with suffix '.nc'. One or many files."], [100, 5, 1, 0, "fill_value", "Fill value in case of exceeding bounds, if no bounds error"], [100, 2, 1, 0, "finalize", "Finalizes the model."], [100, 5, 1, 0, "fixed_vars", "Uniform values for output variables, instead of reading from data"], [100, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [100, 5, 1, 0, "h_coord", "The height coordinate name in the data"], [100, 2, 1, 0, "index", "The index list"], [100, 2, 1, 0, "initialize", "Initializes the model."], [100, 4, 1, 0, "initialized", "Initialization flag."], [100, 4, 1, 0, "model_id", "Unique id based on the model type."], [100, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [100, 5, 1, 0, "ovars", "The output variables"], [100, 5, 1, 0, "pre_load", "Flag for loading all data into memory during initialization"], [100, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [100, 5, 1, 0, "sel", "Subset selection via xr.Dataset.sel()"], [100, 2, 1, 0, "size", "The total number of states."], [100, 5, 1, 0, "states_coord", "The states coordinate name in the data"], [100, 5, 1, 0, "time_format", "The datetime parsing format string"], [100, 2, 1, 0, "var", "Creates a model specific variable name."], [100, 5, 1, 0, "var2ncvar", "Mapping from variable names to variable names in the nc file"], [100, 5, 1, 0, "weight_ncvar", "Name of the weight data variable in the nc file(s)"], [100, 2, 1, 0, "weights", "The statistical weights of all states."], [100, 5, 1, 0, "x_coord", "The x coordinate name in the data"], [100, 5, 1, 0, "y_coord", "The y coordinate name in the data"]], "foxes.input.states.field_data_nc.FieldDataNC.calculate": [[100, 3, 2, 0, "algo", "The calculation algorithm"], [100, 3, 2, 0, "fdata", "The farm data"], [100, 3, 2, 0, "mdata", "The model data"], [100, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.field_data_nc.FieldDataNC.finalize": [[100, 3, 2, 0, "algo", "The calculation algorithm"], [100, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.field_data_nc.FieldDataNC.get_data": [[100, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [100, 3, 2, 0, "data", "The data source"], [100, 3, 2, 0, "data_prio", "First search the data source, then the object"], [100, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [100, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [100, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.field_data_nc.FieldDataNC.initialize": [[100, 3, 2, 0, "algo", "The calculation algorithm"], [100, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.field_data_nc.FieldDataNC.output_point_vars": [[100, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.field_data_nc.FieldDataNC.run_calculation": [[100, 3, 2, 0, "algo", "The calculation algorithm"], [100, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.field_data_nc.FieldDataNC.var": [[100, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.field_data_nc.FieldDataNC.weights": [[100, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.multi_height": [[102, 1, 1, 0, "MultiHeightStates", "Bases: States"], [103, 1, 1, 0, "MultiHeightTimeseries", "Bases: MultiHeightStates"]], "foxes.input.states.multi_height.MultiHeightStates": [[102, 5, 1, 0, "RDICT", "Default pandas file reading parameters"], [102, 2, 1, "id0", "__init__", ""], [102, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [102, 5, 1, 0, "data_source", "Either path to a file or data"], [102, 2, 1, 0, "finalize", "Finalizes the model."], [102, 5, 1, 0, "fixed_vars", "Fixed uniform variable values, instead of reading from data"], [102, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [102, 5, 1, 0, "heights", "The heights at which to search data"], [102, 2, 1, 0, "index", "The index list"], [102, 2, 1, 0, "initialize", "Initializes the model."], [102, 4, 1, 0, "initialized", "Initialization flag."], [102, 4, 1, 0, "model_id", "Unique id based on the model type."], [102, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [102, 5, 1, 0, "ovars", "The output variables"], [102, 5, 1, 0, "pd_read_pars", "pandas file reading parameters"], [102, 2, 1, 0, "reset", "Reset the states, optionally select states"], [102, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [102, 2, 1, 0, "size", "The total number of states."], [102, 5, 1, 0, "states_loc", "State index selection via pandas loc function"], [102, 5, 1, 0, "states_sel", "States subset selection"], [102, 2, 1, 0, "var", "Creates a model specific variable name."], [102, 5, 1, 0, "var2col", "Mapping from variable names to data column names"], [102, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.input.states.multi_height.MultiHeightStates.calculate": [[102, 3, 2, 0, "algo", "The calculation algorithm"], [102, 3, 2, 0, "fdata", "The farm data"], [102, 3, 2, 0, "mdata", "The model data"], [102, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.multi_height.MultiHeightStates.finalize": [[102, 3, 2, 0, "algo", "The calculation algorithm"], [102, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.input.states.multi_height.MultiHeightStates.get_data": [[102, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [102, 3, 2, 0, "data", "The data source"], [102, 3, 2, 0, "data_prio", "First search the data source, then the object"], [102, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [102, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [102, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.multi_height.MultiHeightStates.initialize": [[102, 3, 2, 0, "algo", "The calculation algorithm"], [102, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.multi_height.MultiHeightStates.output_point_vars": [[102, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.multi_height.MultiHeightStates.reset": [[102, 3, 2, 0, "states_loc", "State index selection via pandas loc function"], [102, 3, 2, 0, "states_sel", "States subset selection"], [102, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.multi_height.MultiHeightStates.run_calculation": [[102, 3, 2, 0, "algo", "The calculation algorithm"], [102, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.multi_height.MultiHeightStates.var": [[102, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.multi_height.MultiHeightStates.weights": [[102, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.multi_height.MultiHeightTimeseries": [[103, 2, 1, "id0", "__init__", ""], [103, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [103, 2, 1, 0, "finalize", "Finalizes the model."], [103, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [103, 2, 1, 0, "index", "The index list"], [103, 2, 1, 0, "initialize", "Initializes the model."], [103, 4, 1, 0, "initialized", "Initialization flag."], [103, 4, 1, 0, "model_id", "Unique id based on the model type."], [103, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [103, 2, 1, 0, "reset", "Reset the states, optionally select states"], [103, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [103, 2, 1, 0, "size", "The total number of states."], [103, 2, 1, 0, "var", "Creates a model specific variable name."], [103, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.input.states.multi_height.MultiHeightTimeseries.calculate": [[103, 3, 2, 0, "algo", "The calculation algorithm"], [103, 3, 2, 0, "fdata", "The farm data"], [103, 3, 2, 0, "mdata", "The model data"], [103, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.multi_height.MultiHeightTimeseries.finalize": [[103, 3, 2, 0, "algo", "The calculation algorithm"], [103, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.input.states.multi_height.MultiHeightTimeseries.get_data": [[103, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [103, 3, 2, 0, "data", "The data source"], [103, 3, 2, 0, "data_prio", "First search the data source, then the object"], [103, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [103, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [103, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.multi_height.MultiHeightTimeseries.initialize": [[103, 3, 2, 0, "algo", "The calculation algorithm"], [103, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.multi_height.MultiHeightTimeseries.output_point_vars": [[103, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.multi_height.MultiHeightTimeseries.reset": [[103, 3, 2, 0, "states_loc", "State index selection via pandas loc function"], [103, 3, 2, 0, "states_sel", "States subset selection"], [103, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.multi_height.MultiHeightTimeseries.run_calculation": [[103, 3, 2, 0, "algo", "The calculation algorithm"], [103, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.multi_height.MultiHeightTimeseries.var": [[103, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.multi_height.MultiHeightTimeseries.weights": [[103, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.scan_ws": [[105, 1, 1, 0, "ScanWS", "Bases: States"]], "foxes.input.states.scan_ws.ScanWS": [[105, 2, 1, "id0", "__init__", ""], [105, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [105, 2, 1, 0, "finalize", "Finalizes the model."], [105, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [105, 2, 1, 0, "index", "The index list"], [105, 2, 1, 0, "initialize", "Initializes the model."], [105, 4, 1, 0, "initialized", "Initialization flag."], [105, 4, 1, 0, "model_id", "Unique id based on the model type."], [105, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [105, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [105, 2, 1, 0, "size", "The total number of states."], [105, 2, 1, 0, "var", "Creates a model specific variable name."], [105, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.input.states.scan_ws.ScanWS.calculate": [[105, 3, 2, 0, "algo", "The calculation algorithm"], [105, 3, 2, 0, "fdata", "The farm data"], [105, 3, 2, 0, "mdata", "The model data"], [105, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.scan_ws.ScanWS.finalize": [[105, 3, 2, 0, "algo", "The calculation algorithm"], [105, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.scan_ws.ScanWS.get_data": [[105, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [105, 3, 2, 0, "data", "The data source"], [105, 3, 2, 0, "data_prio", "First search the data source, then the object"], [105, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [105, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [105, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.scan_ws.ScanWS.initialize": [[105, 3, 2, 0, "algo", "The calculation algorithm"], [105, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.scan_ws.ScanWS.output_point_vars": [[105, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.scan_ws.ScanWS.run_calculation": [[105, 3, 2, 0, "algo", "The calculation algorithm"], [105, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.scan_ws.ScanWS.var": [[105, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.scan_ws.ScanWS.weights": [[105, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.single": [[107, 1, 1, 0, "SingleStateStates", "Bases: States"]], "foxes.input.states.single.SingleStateStates": [[107, 2, 1, "id0", "__init__", ""], [107, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [107, 2, 1, 0, "finalize", "Finalizes the model."], [107, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [107, 2, 1, 0, "index", "The index list"], [107, 2, 1, 0, "initialize", "Initializes the model."], [107, 4, 1, 0, "initialized", "Initialization flag."], [107, 4, 1, 0, "model_id", "Unique id based on the model type."], [107, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [107, 5, 1, 0, "profdata", "Additional data for profiles"], [107, 5, 1, 0, "profdicts", "Key: output variable name str, Value: str or dict or foxes.core.VerticalProfile"], [107, 5, 1, 0, "rho", "The air density"], [107, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [107, 2, 1, 0, "size", "The total number of states."], [107, 5, 1, 0, "ti", "The TI value"], [107, 2, 1, 0, "var", "Creates a model specific variable name."], [107, 5, 1, 0, "wd", "The wind direction"], [107, 2, 1, 0, "weights", "The statistical weights of all states."], [107, 5, 1, 0, "ws", "The wind speed"]], "foxes.input.states.single.SingleStateStates.calculate": [[107, 3, 2, 0, "algo", "The calculation algorithm"], [107, 3, 2, 0, "fdata", "The farm data"], [107, 3, 2, 0, "mdata", "The model data"], [107, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.single.SingleStateStates.finalize": [[107, 3, 2, 0, "algo", "The calculation algorithm"], [107, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.single.SingleStateStates.get_data": [[107, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [107, 3, 2, 0, "data", "The data source"], [107, 3, 2, 0, "data_prio", "First search the data source, then the object"], [107, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [107, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [107, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.single.SingleStateStates.initialize": [[107, 3, 2, 0, "algo", "The calculation algorithm"], [107, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.single.SingleStateStates.output_point_vars": [[107, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.single.SingleStateStates.run_calculation": [[107, 3, 2, 0, "algo", "The calculation algorithm"], [107, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.single.SingleStateStates.var": [[107, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.single.SingleStateStates.weights": [[107, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.states_table": [[109, 1, 1, 0, "StatesTable", "Bases: States"], [110, 1, 1, 0, "Timeseries", "Bases: StatesTable"]], "foxes.input.states.states_table.StatesTable": [[109, 5, 1, 0, "RDICT", "Default pandas file reading parameters"], [109, 2, 1, "id0", "__init__", ""], [109, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [109, 5, 1, 0, "data_source", "Either path to a file or data"], [109, 2, 1, 0, "finalize", "Finalizes the model."], [109, 5, 1, 0, "fixed_vars", "Fixed uniform variable values, instead of reading from data"], [109, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [109, 2, 1, 0, "index", "The index list"], [109, 2, 1, 0, "initialize", "Initializes the model."], [109, 4, 1, 0, "initialized", "Initialization flag."], [109, 4, 1, 0, "model_id", "Unique id based on the model type."], [109, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [109, 5, 1, 0, "ovars", "The output variables"], [109, 5, 1, 0, "profdicts", "Key: output variable name str, Value: str or dict or foxes.core.VerticalProfile"], [109, 2, 1, 0, "reset", "Reset the states, optionally select states"], [109, 5, 1, 0, "rpars", "pandas file reading parameters"], [109, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [109, 2, 1, 0, "size", "The total number of states."], [109, 5, 1, 0, "states_loc", "State index selection via pandas loc function"], [109, 5, 1, 0, "states_sel", "States subset selection"], [109, 2, 1, 0, "var", "Creates a model specific variable name."], [109, 5, 1, 0, "var2col", "Mapping from variable names to data column names"], [109, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.input.states.states_table.StatesTable.calculate": [[109, 3, 2, 0, "algo", "The calculation algorithm"], [109, 3, 2, 0, "fdata", "The farm data"], [109, 3, 2, 0, "mdata", "The model data"], [109, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.states_table.StatesTable.finalize": [[109, 3, 2, 0, "algo", "The calculation algorithm"], [109, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.input.states.states_table.StatesTable.get_data": [[109, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [109, 3, 2, 0, "data", "The data source"], [109, 3, 2, 0, "data_prio", "First search the data source, then the object"], [109, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [109, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [109, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.states_table.StatesTable.initialize": [[109, 3, 2, 0, "algo", "The calculation algorithm"], [109, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.states_table.StatesTable.output_point_vars": [[109, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.states_table.StatesTable.reset": [[109, 3, 2, 0, "states_loc", "State index selection via pandas loc function"], [109, 3, 2, 0, "states_sel", "States subset selection"], [109, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.states_table.StatesTable.run_calculation": [[109, 3, 2, 0, "algo", "The calculation algorithm"], [109, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.states_table.StatesTable.var": [[109, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.states_table.StatesTable.weights": [[109, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.states_table.Timeseries": [[110, 2, 1, "id0", "__init__", ""], [110, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [110, 2, 1, 0, "finalize", "Finalizes the model."], [110, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [110, 2, 1, 0, "index", "The index list"], [110, 2, 1, 0, "initialize", "Initializes the model."], [110, 4, 1, 0, "initialized", "Initialization flag."], [110, 4, 1, 0, "model_id", "Unique id based on the model type."], [110, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [110, 2, 1, 0, "reset", "Reset the states, optionally select states"], [110, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [110, 2, 1, 0, "size", "The total number of states."], [110, 2, 1, 0, "var", "Creates a model specific variable name."], [110, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.input.states.states_table.Timeseries.calculate": [[110, 3, 2, 0, "algo", "The calculation algorithm"], [110, 3, 2, 0, "fdata", "The farm data"], [110, 3, 2, 0, "mdata", "The model data"], [110, 3, 2, 0, "pdata", "The point data"]], "foxes.input.states.states_table.Timeseries.finalize": [[110, 3, 2, 0, "algo", "The calculation algorithm"], [110, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.input.states.states_table.Timeseries.get_data": [[110, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [110, 3, 2, 0, "data", "The data source"], [110, 3, 2, 0, "data_prio", "First search the data source, then the object"], [110, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [110, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [110, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.input.states.states_table.Timeseries.initialize": [[110, 3, 2, 0, "algo", "The calculation algorithm"], [110, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.states_table.Timeseries.output_point_vars": [[110, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.states.states_table.Timeseries.reset": [[110, 3, 2, 0, "states_loc", "State index selection via pandas loc function"], [110, 3, 2, 0, "states_sel", "States subset selection"], [110, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.input.states.states_table.Timeseries.run_calculation": [[110, 3, 2, 0, "algo", "The calculation algorithm"], [110, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.input.states.states_table.Timeseries.var": [[110, 3, 2, 0, "v", "The variable name"]], "foxes.input.states.states_table.Timeseries.weights": [[110, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.input.windio": [[112, 0, 0, 1, "windio", ""]], "foxes.input.windio.windio": [[113, 6, 1, 0, "read_anlyses", "Reads a WindIO wind farm"], [114, 6, 1, 0, "read_case", "Reads a WindIO case"], [115, 6, 1, 0, "read_farm", "Reads a WindIO wind farm"], [116, 6, 1, 0, "read_resource", "Reads a WindIO energy resource"], [117, 6, 1, 0, "read_site", "Reads a WindIO site"]], "foxes.input.windio.windio.read_anlyses": [[113, 3, 2, 0, "algo_pars", "Additional parameters for the algorithm constructor"], [113, 3, 2, 0, "algo_type", "The default algorithm class name"], [113, 3, 2, 0, "analyses", "The analyses sub-dict of the case"], [113, 3, 2, 0, "farm", "The wind farm"], [113, 3, 2, 0, "keymap", "Translation from windio to foxes keywords"], [113, 3, 2, 0, "mbook", "The model book"], [113, 3, 2, 0, "states", "The states object"]], "foxes.input.windio.windio.read_case": [[114, 3, 2, 0, "ana_pars", "Additional arguments for read_analyses"], [114, 3, 2, 0, "case_yaml", "Path to the yaml file"], [114, 3, 2, 0, "farm_pars", "Additional arguments for read_farm"], [114, 3, 2, 0, "site_pars", "Additional arguments for read_site"]], "foxes.input.windio.windio.read_farm": [[115, 3, 2, 0, "farm_yaml", "Path to the yaml file"], [115, 3, 2, 0, "kwargs", "Additional parameters for add_from_df()"], [115, 3, 2, 0, "layout", "The layout choice"], [115, 3, 2, 0, "mbook", "The model book to start from"], [115, 3, 2, 0, "turbine_models", "Additional turbine models"]], "foxes.input.windio.windio.read_resource": [[116, 3, 2, 0, "fixed_vars", "Additional fixes variables that do not occur in the yaml"], [116, 3, 2, 0, "kwargs", "Additional arguments for StatesTable"], [116, 3, 2, 0, "res_yaml", "Path to the yaml file"]], "foxes.input.windio.windio.read_site": [[117, 3, 2, 0, "kwargs", "Additional arguments for read_resource"], [117, 3, 2, 0, "site_yaml", "Path to the yaml file"]], "foxes.models": [[119, 0, 0, 1, "farm_controllers", ""], [122, 0, 0, 1, "farm_models", ""], [125, 0, 0, 1, "model_book", ""], [127, 0, 0, 1, "partial_wakes", ""], [140, 0, 0, 1, "point_models", ""], [147, 0, 0, 1, "rotor_models", ""], [152, 0, 0, 1, "turbine_models", ""], [175, 0, 0, 1, "turbine_types", ""], [188, 0, 0, 1, "vertical_profiles", ""], [202, 0, 0, 1, "wake_frames", ""], [211, 0, 0, 1, "wake_models", ""], [236, 0, 0, 1, "wake_superpositions", ""]], "foxes.models.farm_controllers": [[120, 0, 0, 1, "basic", ""]], "foxes.models.farm_controllers.basic": [[121, 1, 1, 0, "BasicFarmController", "Bases: FarmController"]], "foxes.models.farm_controllers.basic.BasicFarmController": [[121, 2, 1, "id0", "__init__", ""], [121, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [121, 2, 1, 0, "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [121, 2, 1, 0, "finalize", "Finalizes the model."], [121, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [121, 2, 1, 0, "initialize", "Initializes the model."], [121, 4, 1, 0, "initialized", "Initialization flag."], [121, 4, 1, 0, "model_id", "Unique id based on the model type."], [121, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [121, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [121, 2, 1, 0, "set_pars", "Set parameters for a turbine model"], [121, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.farm_controllers.basic.BasicFarmController.calculate": [[121, 3, 2, 0, "algo", "The calculation algorithm"], [121, 3, 2, 0, "fdata", "The farm data"], [121, 3, 2, 0, "mdata", "The model data"], [121, 3, 2, 0, "pre_rotor", "Flag for running pre-rotor or post-rotor models"], [121, 3, 2, 0, "st_sel", "Selection of states and turbines, shape: (n_states, n_turbines). None for all."]], "foxes.models.farm_controllers.basic.BasicFarmController.collect_models": [[121, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.farm_controllers.basic.BasicFarmController.finalize": [[121, 3, 2, 0, "algo", "The calculation algorithm"], [121, 3, 2, 0, "verbosity", "The verbosity level, 0 means silent"]], "foxes.models.farm_controllers.basic.BasicFarmController.get_data": [[121, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [121, 3, 2, 0, "data", "The data source"], [121, 3, 2, 0, "data_prio", "First search the data source, then the object"], [121, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [121, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [121, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.farm_controllers.basic.BasicFarmController.initialize": [[121, 3, 2, 0, "algo", "The calculation algorithm"], [121, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.farm_controllers.basic.BasicFarmController.output_farm_vars": [[121, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.farm_controllers.basic.BasicFarmController.run_calculation": [[121, 3, 2, 0, "algo", "The calculation algorithm"], [121, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.farm_controllers.basic.BasicFarmController.set_pars": [[121, 3, 2, 0, "calc_pars", "Parameters for calculation"], [121, 3, 2, 0, "final_pars", "Parameters for finalization"], [121, 3, 2, 0, "init_pars", "Parameters for initialization"], [121, 3, 2, 0, "model_name", "Name of the model"]], "foxes.models.farm_controllers.basic.BasicFarmController.var": [[121, 3, 2, 0, "v", "The variable name"]], "foxes.models.farm_models": [[123, 0, 0, 1, "turbine2farm", ""]], "foxes.models.farm_models.turbine2farm": [[124, 1, 1, 0, "Turbine2FarmModel", "Bases: FarmModel"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel": [[124, 2, 1, "id0", "__init__", ""], [124, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [124, 2, 1, 0, "finalize", "Finalizes the model."], [124, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [124, 2, 1, 0, "initialize", "Initializes the model."], [124, 4, 1, 0, "initialized", "Initialization flag."], [124, 4, 1, 0, "model_id", "Unique id based on the model type."], [124, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [124, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [124, 5, 1, 0, "turbine_model", "The turbine model"], [124, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.calculate": [[124, 3, 2, 0, "algo", "The calculation algorithm"], [124, 3, 2, 0, "fdata", "The farm data"], [124, 3, 2, 0, "mdata", "The model data"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.finalize": [[124, 3, 2, 0, "algo", "The calculation algorithm"], [124, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.get_data": [[124, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [124, 3, 2, 0, "data", "The data source"], [124, 3, 2, 0, "data_prio", "First search the data source, then the object"], [124, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [124, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [124, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.initialize": [[124, 3, 2, 0, "algo", "The calculation algorithm"], [124, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.output_farm_vars": [[124, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.run_calculation": [[124, 3, 2, 0, "algo", "The calculation algorithm"], [124, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.var": [[124, 3, 2, 0, "v", "The variable name"]], "foxes.models.model_book": [[126, 1, 1, 0, "ModelBook", "Bases: object"]], "foxes.models.model_book.ModelBook": [[126, 2, 1, "id0", "__init__", ""], [126, 5, 1, 0, "farm_controllers", "The farm controllers. Keys: model name str, values: foxes.core.FarmController"], [126, 5, 1, 0, "farm_models", "The farm models. Keys: model name str, values: foxes.core.FarmModel"], [126, 2, 1, 0, "finalize", "Finalizes the model."], [126, 5, 1, 0, "partial_wakes", "The partial wakes. Keys: model name str, values: foxes.core.PartialWakeModel"], [126, 5, 1, 0, "point_models", "The point models. Keys: model name str, values: foxes.core.PointDataModel"], [126, 2, 1, 0, "print_toc", "Print the contents."], [126, 5, 1, 0, "rotor_models", "The rotor models. Keys: model name str, values: foxes.core.RotorModel"], [126, 5, 1, 0, "sources", "All sources dict"], [126, 5, 1, 0, "turbine_models", "The turbine models. Keys: model name str, values: foxes.core.TurbineModel"], [126, 5, 1, 0, "turbine_orders", "The turbine orders. Keys: model name str, values: foxes.core.TurbineOrder"], [126, 5, 1, 0, "turbine_types", "The turbine type models. Keys: model name str, values: foxes.core.TurbineType"], [126, 5, 1, 0, "wake_frames", "The wake frames. Keys: model name str, values: foxes.core.WakeFrame"], [126, 5, 1, 0, "wake_models", "The wake models. Keys: model name str, values: foxes.core.WakeModel"], [126, 5, 1, 0, "wake_superpositions", "The wake superposition models. Keys: model name str, values: foxes.core.WakeSuperposition"]], "foxes.models.model_book.ModelBook.finalize": [[126, 3, 2, 0, "algo", "The calculation algorithm"], [126, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.model_book.ModelBook.print_toc": [[126, 3, 2, 0, "search", "String that has to be part of the model name"], [126, 3, 2, 0, "subset", "Selection of model types"]], "foxes.models.partial_wakes": [[128, 0, 0, 1, "axiwake", ""], [130, 0, 0, 1, "distsliced", ""], [132, 0, 0, 1, "grid", ""], [134, 0, 0, 1, "mapped", ""], [136, 0, 0, 1, "rotor_points", ""], [138, 0, 0, 1, "top_hat", ""]], "foxes.models.partial_wakes.axiwake": [[129, 1, 1, 0, "PartialAxiwake", "Bases: PartialWakesModel"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake": [[129, 2, 1, "id0", "__init__", ""], [129, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [129, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [129, 2, 1, 0, "finalize", "Finalizes the model."], [129, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [129, 2, 1, 0, "initialize", "Initializes the model."], [129, 4, 1, 0, "initialized", "Initialization flag."], [129, 4, 1, 0, "model_id", "Unique id based on the model type."], [129, 5, 1, 0, "n", "The number of radial evaluation points"], [129, 2, 1, 0, "new", "Run-time partial wakes factory."], [129, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [129, 5, 1, 0, "rotor_model", "The rotor model, default is the one from the algorithm"], [129, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.contribute_to_wake_deltas": [[129, 3, 2, 0, "algo", "The calculation algorithm"], [129, 3, 2, 0, "fdata", "The farm data"], [129, 3, 2, 0, "mdata", "The model data"], [129, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [129, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.evaluate_results": [[129, 3, 2, 0, "algo", "The calculation algorithm"], [129, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [129, 3, 2, 0, "mdata", "The model data"], [129, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [129, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [129, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.finalize": [[129, 3, 2, 0, "algo", "The calculation algorithm"], [129, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.get_data": [[129, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [129, 3, 2, 0, "data", "The data source"], [129, 3, 2, 0, "data_prio", "First search the data source, then the object"], [129, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [129, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [129, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.initialize": [[129, 3, 2, 0, "algo", "The calculation algorithm"], [129, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.new": [[129, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.new_wake_deltas": [[129, 3, 2, 0, "algo", "The calculation algorithm"], [129, 3, 2, 0, "fdata", "The farm data"], [129, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake.var": [[129, 3, 2, 0, "v", "The variable name"]], "foxes.models.partial_wakes.distsliced": [[131, 1, 1, 0, "PartialDistSlicedWake", "Bases: PartialWakesModel"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake": [[131, 2, 1, "id0", "__init__", ""], [131, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [131, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [131, 2, 1, 0, "finalize", "Finalizes the model."], [131, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [131, 5, 1, 0, "grotor", "The grid rotor model"], [131, 2, 1, 0, "initialize", "Initializes the model."], [131, 4, 1, 0, "initialized", "Initialization flag."], [131, 4, 1, 0, "model_id", "Unique id based on the model type."], [131, 2, 1, 0, "new", "Run-time partial wakes factory."], [131, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [131, 5, 1, 0, "rotor_model", "The rotor model, default is the one from the algorithm"], [131, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.contribute_to_wake_deltas": [[131, 3, 2, 0, "algo", "The calculation algorithm"], [131, 3, 2, 0, "fdata", "The farm data"], [131, 3, 2, 0, "mdata", "The model data"], [131, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [131, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.evaluate_results": [[131, 3, 2, 0, "algo", "The calculation algorithm"], [131, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [131, 3, 2, 0, "mdata", "The model data"], [131, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [131, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [131, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.finalize": [[131, 3, 2, 0, "algo", "The calculation algorithm"], [131, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.get_data": [[131, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [131, 3, 2, 0, "data", "The data source"], [131, 3, 2, 0, "data_prio", "First search the data source, then the object"], [131, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [131, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [131, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.initialize": [[131, 3, 2, 0, "algo", "The calculation algorithm"], [131, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.new": [[131, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.new_wake_deltas": [[131, 3, 2, 0, "algo", "The calculation algorithm"], [131, 3, 2, 0, "fdata", "The farm data"], [131, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.var": [[131, 3, 2, 0, "v", "The variable name"]], "foxes.models.partial_wakes.grid": [[133, 1, 1, 0, "PartialGrid", "Bases: PartialDistSlicedWake"]], "foxes.models.partial_wakes.grid.PartialGrid": [[133, 2, 1, "id0", "__init__", ""], [133, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [133, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [133, 2, 1, 0, "finalize", "Finalizes the model."], [133, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [133, 2, 1, 0, "initialize", "Initializes the model."], [133, 4, 1, 0, "initialized", "Initialization flag."], [133, 4, 1, 0, "model_id", "Unique id based on the model type."], [133, 2, 1, 0, "new", "Run-time partial wakes factory."], [133, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [133, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.partial_wakes.grid.PartialGrid.contribute_to_wake_deltas": [[133, 3, 2, 0, "algo", "The calculation algorithm"], [133, 3, 2, 0, "fdata", "The farm data"], [133, 3, 2, 0, "mdata", "The model data"], [133, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [133, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.grid.PartialGrid.evaluate_results": [[133, 3, 2, 0, "algo", "The calculation algorithm"], [133, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [133, 3, 2, 0, "mdata", "The model data"], [133, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [133, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [133, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.grid.PartialGrid.finalize": [[133, 3, 2, 0, "algo", "The calculation algorithm"], [133, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.partial_wakes.grid.PartialGrid.get_data": [[133, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [133, 3, 2, 0, "data", "The data source"], [133, 3, 2, 0, "data_prio", "First search the data source, then the object"], [133, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [133, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [133, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.grid.PartialGrid.initialize": [[133, 3, 2, 0, "algo", "The calculation algorithm"], [133, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.grid.PartialGrid.new": [[133, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.grid.PartialGrid.new_wake_deltas": [[133, 3, 2, 0, "algo", "The calculation algorithm"], [133, 3, 2, 0, "fdata", "The farm data"], [133, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.grid.PartialGrid.var": [[133, 3, 2, 0, "v", "The variable name"]], "foxes.models.partial_wakes.mapped": [[135, 1, 1, 0, "Mapped", "Bases: PartialWakesModel"]], "foxes.models.partial_wakes.mapped.Mapped": [[135, 2, 1, "id0", "__init__", ""], [135, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [135, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [135, 2, 1, 0, "finalize", "Finalizes the model."], [135, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [135, 2, 1, 0, "initialize", "Initializes the model."], [135, 4, 1, 0, "initialized", "Initialization flag."], [135, 4, 1, 0, "model_id", "Unique id based on the model type."], [135, 2, 1, 0, "new", "Run-time partial wakes factory."], [135, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [135, 2, 1, 0, "var", "Creates a model specific variable name."], [135, 5, 1, 0, "wname2pwake", "Mapping from wake model name to partial wakes. Key: model name str, value: Tuple of length 2, (Partial wake class name, parameter dict)"], [135, 5, 1, 0, "wtype2pwake", "Mapping from wake model class name to partial wakes. Key: wake model class name str, value: Tuple of length 2, (Partial wake class name, parameter dict)"]], "foxes.models.partial_wakes.mapped.Mapped.contribute_to_wake_deltas": [[135, 3, 2, 0, "algo", "The calculation algorithm"], [135, 3, 2, 0, "fdata", "The farm data"], [135, 3, 2, 0, "mdata", "The model data"], [135, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [135, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.mapped.Mapped.evaluate_results": [[135, 3, 2, 0, "algo", "The calculation algorithm"], [135, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [135, 3, 2, 0, "mdata", "The model data"], [135, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [135, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [135, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.mapped.Mapped.finalize": [[135, 3, 2, 0, "algo", "The calculation algorithm"], [135, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.partial_wakes.mapped.Mapped.get_data": [[135, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [135, 3, 2, 0, "data", "The data source"], [135, 3, 2, 0, "data_prio", "First search the data source, then the object"], [135, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [135, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [135, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.mapped.Mapped.initialize": [[135, 3, 2, 0, "algo", "The calculation algorithm"], [135, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.mapped.Mapped.new": [[135, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.mapped.Mapped.new_wake_deltas": [[135, 3, 2, 0, "algo", "The calculation algorithm"], [135, 3, 2, 0, "fdata", "The farm data"], [135, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.mapped.Mapped.var": [[135, 3, 2, 0, "v", "The variable name"]], "foxes.models.partial_wakes.rotor_points": [[137, 1, 1, 0, "RotorPoints", "Bases: PartialWakesModel"]], "foxes.models.partial_wakes.rotor_points.RotorPoints": [[137, 2, 1, "id0", "__init__", ""], [137, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [137, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [137, 2, 1, 0, "finalize", "Finalizes the model."], [137, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [137, 2, 1, 0, "get_wake_points", "Get the wake calculation points."], [137, 2, 1, 0, "initialize", "Initializes the model."], [137, 4, 1, 0, "initialized", "Initialization flag."], [137, 4, 1, 0, "model_id", "Unique id based on the model type."], [137, 2, 1, 0, "new", "Run-time partial wakes factory."], [137, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [137, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.partial_wakes.rotor_points.RotorPoints.contribute_to_wake_deltas": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "fdata", "The farm data"], [137, 3, 2, 0, "mdata", "The model data"], [137, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [137, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.evaluate_results": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [137, 3, 2, 0, "mdata", "The model data"], [137, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [137, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [137, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.finalize": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.get_data": [[137, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [137, 3, 2, 0, "data", "The data source"], [137, 3, 2, 0, "data_prio", "First search the data source, then the object"], [137, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [137, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [137, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.get_wake_points": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "fdata", "The farm data"], [137, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.initialize": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.new": [[137, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.new_wake_deltas": [[137, 3, 2, 0, "algo", "The calculation algorithm"], [137, 3, 2, 0, "fdata", "The farm data"], [137, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.rotor_points.RotorPoints.var": [[137, 3, 2, 0, "v", "The variable name"]], "foxes.models.partial_wakes.top_hat": [[139, 1, 1, 0, "PartialTopHat", "Bases: PartialWakesModel"]], "foxes.models.partial_wakes.top_hat.PartialTopHat": [[139, 2, 1, "id0", "__init__", ""], [139, 2, 1, 0, "contribute_to_wake_deltas", "Modifies wake deltas by contributions from the specified wake source turbines."], [139, 2, 1, 0, "evaluate_results", "Updates the farm data according to the wake deltas."], [139, 2, 1, 0, "finalize", "Finalizes the model."], [139, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [139, 2, 1, 0, "get_wake_points", "Get the wake calculation points."], [139, 2, 1, 0, "initialize", "Initializes the model."], [139, 4, 1, 0, "initialized", "Initialization flag."], [139, 4, 1, 0, "model_id", "Unique id based on the model type."], [139, 2, 1, 0, "new", "Run-time partial wakes factory."], [139, 2, 1, 0, "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [139, 5, 1, 0, "rotor_model", "The rotor model, default is the one from the algorithm"], [139, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.partial_wakes.top_hat.PartialTopHat.contribute_to_wake_deltas": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "fdata", "The farm data"], [139, 3, 2, 0, "mdata", "The model data"], [139, 3, 2, 0, "states_source_turbine", "For each state, one turbine index corresponding to the wake causing turbine. Shape: (n_states,)"], [139, 3, 2, 0, "wake_deltas", "The wake deltas object created by the new_wake_deltas function"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.evaluate_results": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "fdata", "The farm data Modified in-place by this function"], [139, 3, 2, 0, "mdata", "The model data"], [139, 3, 2, 0, "states_turbine", "For each state, the index of one turbine for which to evaluate the wake deltas. Shape: (n_states,)"], [139, 3, 2, 0, "update_amb_res", "Flag for updating ambient results"], [139, 3, 2, 0, "wake_deltas", "The wake deltas object, created by the new_wake_deltas function and filled by contribute_to_wake_deltas"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.finalize": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.get_data": [[139, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [139, 3, 2, 0, "data", "The data source"], [139, 3, 2, 0, "data_prio", "First search the data source, then the object"], [139, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [139, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [139, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.get_wake_points": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "fdata", "The farm data"], [139, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.initialize": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.new": [[139, 3, 2, 0, "pwake_type", "The selected derived class name"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.new_wake_deltas": [[139, 3, 2, 0, "algo", "The calculation algorithm"], [139, 3, 2, 0, "fdata", "The farm data"], [139, 3, 2, 0, "mdata", "The model data"]], "foxes.models.partial_wakes.top_hat.PartialTopHat.var": [[139, 3, 2, 0, "v", "The variable name"]], "foxes.models.point_models": [[141, 0, 0, 1, "set_uniform_data", ""], [143, 0, 0, 1, "tke2ti", ""], [145, 0, 0, 1, "wake_deltas", ""]], "foxes.models.point_models.set_uniform_data": [[142, 1, 1, 0, "SetUniformData", "Bases: PointDataModel"]], "foxes.models.point_models.set_uniform_data.SetUniformData": [[142, 2, 1, "id0", "__init__", ""], [142, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [142, 5, 1, 0, "data_source", "Either a file name, or a data frame, both assuming state dependent data. Or a dict for state independent uniform data (i.e., scalars)"], [142, 2, 1, 0, "finalize", "Finalizes the model."], [142, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [142, 2, 1, 0, "initialize", "Initializes the model."], [142, 4, 1, 0, "initialized", "Initialization flag."], [142, 4, 1, 0, "model_id", "Unique id based on the model type."], [142, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [142, 5, 1, 0, "ovars", "The variables to be written"], [142, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [142, 2, 1, 0, "var", "Creates a model specific variable name."], [142, 5, 1, 0, "var2col", "Mapping from variable names to data column names"]], "foxes.models.point_models.set_uniform_data.SetUniformData.calculate": [[142, 3, 2, 0, "algo", "The calculation algorithm"], [142, 3, 2, 0, "fdata", "The farm data"], [142, 3, 2, 0, "mdata", "The model data"], [142, 3, 2, 0, "pdata", "The point data"]], "foxes.models.point_models.set_uniform_data.SetUniformData.finalize": [[142, 3, 2, 0, "algo", "The calculation algorithm"], [142, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.set_uniform_data.SetUniformData.get_data": [[142, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [142, 3, 2, 0, "data", "The data source"], [142, 3, 2, 0, "data_prio", "First search the data source, then the object"], [142, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [142, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [142, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.point_models.set_uniform_data.SetUniformData.initialize": [[142, 3, 2, 0, "algo", "The calculation algorithm"], [142, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.set_uniform_data.SetUniformData.output_point_vars": [[142, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.point_models.set_uniform_data.SetUniformData.run_calculation": [[142, 3, 2, 0, "algo", "The calculation algorithm"], [142, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.point_models.set_uniform_data.SetUniformData.var": [[142, 3, 2, 0, "v", "The variable name"]], "foxes.models.point_models.tke2ti": [[144, 1, 1, 0, "TKE2TI", "Bases: PointDataModel"]], "foxes.models.point_models.tke2ti.TKE2TI": [[144, 2, 1, "id0", "__init__", ""], [144, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [144, 2, 1, 0, "finalize", "Finalizes the model."], [144, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [144, 2, 1, 0, "initialize", "Initializes the model."], [144, 4, 1, 0, "initialized", "Initialization flag."], [144, 4, 1, 0, "model_id", "Unique id based on the model type."], [144, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [144, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [144, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.point_models.tke2ti.TKE2TI.calculate": [[144, 3, 2, 0, "algo", "The calculation algorithm"], [144, 3, 2, 0, "fdata", "The farm data"], [144, 3, 2, 0, "mdata", "The model data"], [144, 3, 2, 0, "pdata", "The point data"]], "foxes.models.point_models.tke2ti.TKE2TI.finalize": [[144, 3, 2, 0, "algo", "The calculation algorithm"], [144, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.tke2ti.TKE2TI.get_data": [[144, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [144, 3, 2, 0, "data", "The data source"], [144, 3, 2, 0, "data_prio", "First search the data source, then the object"], [144, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [144, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [144, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.point_models.tke2ti.TKE2TI.initialize": [[144, 3, 2, 0, "algo", "The calculation algorithm"], [144, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.tke2ti.TKE2TI.output_point_vars": [[144, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.point_models.tke2ti.TKE2TI.run_calculation": [[144, 3, 2, 0, "algo", "The calculation algorithm"], [144, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.point_models.tke2ti.TKE2TI.var": [[144, 3, 2, 0, "v", "The variable name"]], "foxes.models.point_models.wake_deltas": [[146, 1, 1, 0, "WakeDeltas", "Bases: PointDataModel"]], "foxes.models.point_models.wake_deltas.WakeDeltas": [[146, 2, 1, "id0", "__init__", ""], [146, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [146, 2, 1, 0, "finalize", "Finalizes the model."], [146, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [146, 2, 1, 0, "initialize", "Initializes the model."], [146, 4, 1, 0, "initialized", "Initialization flag."], [146, 4, 1, 0, "model_id", "Unique id based on the model type."], [146, 5, 1, 0, "normalize", "Divide resulting deltas by ambient values"], [146, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [146, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [146, 2, 1, 0, "var", "Creates a model specific variable name."], [146, 5, 1, 0, "vars", "The variables"]], "foxes.models.point_models.wake_deltas.WakeDeltas.calculate": [[146, 3, 2, 0, "algo", "The calculation algorithm"], [146, 3, 2, 0, "fdata", "The farm data"], [146, 3, 2, 0, "mdata", "The model data"], [146, 3, 2, 0, "pdata", "The point data"]], "foxes.models.point_models.wake_deltas.WakeDeltas.finalize": [[146, 3, 2, 0, "algo", "The calculation algorithm"], [146, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.wake_deltas.WakeDeltas.get_data": [[146, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [146, 3, 2, 0, "data", "The data source"], [146, 3, 2, 0, "data_prio", "First search the data source, then the object"], [146, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [146, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [146, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.point_models.wake_deltas.WakeDeltas.initialize": [[146, 3, 2, 0, "algo", "The calculation algorithm"], [146, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.point_models.wake_deltas.WakeDeltas.output_point_vars": [[146, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.point_models.wake_deltas.WakeDeltas.run_calculation": [[146, 3, 2, 0, "algo", "The calculation algorithm"], [146, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.point_models.wake_deltas.WakeDeltas.var": [[146, 3, 2, 0, "v", "The variable name"]], "foxes.models.rotor_models": [[148, 0, 0, 1, "centre", ""], [150, 0, 0, 1, "grid", ""]], "foxes.models.rotor_models.centre": [[149, 1, 1, 0, "CentreRotor", "Bases: RotorModel"]], "foxes.models.rotor_models.centre.CentreRotor": [[149, 2, 1, "id0", "__init__", ""], [149, 2, 1, 0, "calculate", "Calculate ambient rotor effective results."], [149, 2, 1, 0, "design_points", "The rotor model design points."], [149, 2, 1, 0, "eval_rpoint_results", "Evaluate rotor point results."], [149, 2, 1, 0, "finalize", "Finalizes the model."], [149, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [149, 2, 1, 0, "get_rotor_points", "Calculates rotor points from design points."], [149, 2, 1, 0, "initialize", "Initializes the model."], [149, 4, 1, 0, "initialized", "Initialization flag."], [149, 4, 1, 0, "model_id", "Unique id based on the model type."], [149, 2, 1, 0, "n_rotor_points", "The number of rotor points"], [149, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [149, 2, 1, 0, "rotor_point_weights", "The weights of the rotor points"], [149, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [149, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.rotor_models.centre.CentreRotor.calculate": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "fdata", "The farm data"], [149, 3, 2, 0, "mdata", "The model data"], [149, 3, 2, 0, "rpoints", "The rotor points, or None for automatic for this rotor. Shape: (n_states, n_turbines, n_rpoints, 3)"], [149, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [149, 3, 2, 0, "store_amb_res", "Switch for storing ambient rotor point reults as they come from the states to mdata"], [149, 3, 2, 0, "store_rpoints", "Switch for storing rotor points to mdata"], [149, 3, 2, 0, "store_rweights", "Switch for storing rotor point weights to mdata"], [149, 3, 2, 0, "weights", "The rotor point weights, or None for automatic for this rotor. Shape: (n_rpoints,)"]], "foxes.models.rotor_models.centre.CentreRotor.eval_rpoint_results": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "copy_to_ambient", "If True, the fdata results are copied to ambient variables after calculation"], [149, 3, 2, 0, "fdata", "The farm data"], [149, 3, 2, 0, "mdata", "The model data"], [149, 3, 2, 0, "rpoint_results", "The results at rotor points. Keys: variable str. Values: numpy.ndarray, shape if states_turbine is None: (n_states, n_turbines, n_rpoints). Else: (n_states, 1, n_rpoints)"], [149, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [149, 3, 2, 0, "weights", "The rotor point weights, shape: (n_rpoints,)"]], "foxes.models.rotor_models.centre.CentreRotor.finalize": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.rotor_models.centre.CentreRotor.get_data": [[149, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [149, 3, 2, 0, "data", "The data source"], [149, 3, 2, 0, "data_prio", "First search the data source, then the object"], [149, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [149, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [149, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.rotor_models.centre.CentreRotor.get_rotor_points": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "fdata", "The farm data"], [149, 3, 2, 0, "mdata", "The model data"]], "foxes.models.rotor_models.centre.CentreRotor.initialize": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.rotor_models.centre.CentreRotor.output_farm_vars": [[149, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.rotor_models.centre.CentreRotor.run_calculation": [[149, 3, 2, 0, "algo", "The calculation algorithm"], [149, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.rotor_models.centre.CentreRotor.var": [[149, 3, 2, 0, "v", "The variable name"]], "foxes.models.rotor_models.grid": [[151, 1, 1, 0, "GridRotor", "Bases: RotorModel"]], "foxes.models.rotor_models.grid.GridRotor": [[151, 2, 1, "id0", "__init__", ""], [151, 2, 1, 0, "calculate", "Calculate ambient rotor effective results."], [151, 2, 1, 0, "design_points", "The rotor model design points."], [151, 2, 1, 0, "eval_rpoint_results", "Evaluate rotor point results."], [151, 2, 1, 0, "finalize", "Finalizes the model."], [151, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [151, 2, 1, 0, "get_rotor_points", "Calculates rotor points from design points."], [151, 2, 1, 0, "initialize", "Initializes the model."], [151, 4, 1, 0, "initialized", "Initialization flag."], [151, 4, 1, 0, "model_id", "Unique id based on the model type."], [151, 5, 1, 0, "n", "The number of points along one direction, maximal number of points is N = n * n"], [151, 2, 1, 0, "n_rotor_points", "The number of rotor points"], [151, 5, 1, 0, "nint", "Integration steps per element"], [151, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [151, 5, 1, 0, "reduce", "Flag for reduction to points actually representing an area with overlap with the circe, recalculating the self.weights accordingly"], [151, 2, 1, 0, "rotor_point_weights", "The weights of the rotor points"], [151, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [151, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.rotor_models.grid.GridRotor.calculate": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "fdata", "The farm data"], [151, 3, 2, 0, "mdata", "The model data"], [151, 3, 2, 0, "rpoints", "The rotor points, or None for automatic for this rotor. Shape: (n_states, n_turbines, n_rpoints, 3)"], [151, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [151, 3, 2, 0, "store_amb_res", "Switch for storing ambient rotor point reults as they come from the states to mdata"], [151, 3, 2, 0, "store_rpoints", "Switch for storing rotor points to mdata"], [151, 3, 2, 0, "store_rweights", "Switch for storing rotor point weights to mdata"], [151, 3, 2, 0, "weights", "The rotor point weights, or None for automatic for this rotor. Shape: (n_rpoints,)"]], "foxes.models.rotor_models.grid.GridRotor.eval_rpoint_results": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "copy_to_ambient", "If True, the fdata results are copied to ambient variables after calculation"], [151, 3, 2, 0, "fdata", "The farm data"], [151, 3, 2, 0, "mdata", "The model data"], [151, 3, 2, 0, "rpoint_results", "The results at rotor points. Keys: variable str. Values: numpy.ndarray, shape if states_turbine is None: (n_states, n_turbines, n_rpoints). Else: (n_states, 1, n_rpoints)"], [151, 3, 2, 0, "states_turbine", "The turbine indices, one per state. Shape: (n_states,)"], [151, 3, 2, 0, "weights", "The rotor point weights, shape: (n_rpoints,)"]], "foxes.models.rotor_models.grid.GridRotor.finalize": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.rotor_models.grid.GridRotor.get_data": [[151, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [151, 3, 2, 0, "data", "The data source"], [151, 3, 2, 0, "data_prio", "First search the data source, then the object"], [151, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [151, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [151, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.rotor_models.grid.GridRotor.get_rotor_points": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "fdata", "The farm data"], [151, 3, 2, 0, "mdata", "The model data"]], "foxes.models.rotor_models.grid.GridRotor.initialize": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.rotor_models.grid.GridRotor.output_farm_vars": [[151, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.rotor_models.grid.GridRotor.run_calculation": [[151, 3, 2, 0, "algo", "The calculation algorithm"], [151, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.rotor_models.grid.GridRotor.var": [[151, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models": [[153, 0, 0, 1, "calculator", ""], [155, 0, 0, 1, "kTI_model", ""], [157, 0, 0, 1, "power_mask", ""], [159, 0, 0, 1, "rotor_centre_calc", ""], [161, 0, 0, 1, "sector_management", ""], [163, 0, 0, 1, "set_XYHD", ""], [165, 0, 0, 1, "set_farm_vars", ""], [167, 0, 0, 1, "table_factors", ""], [169, 0, 0, 1, "thrust2ct", ""], [171, 0, 0, 1, "yaw2yawm", ""], [173, 0, 0, 1, "yawm2yaw", ""]], "foxes.models.turbine_models.calculator": [[154, 1, 1, 0, "Calculator", "Bases: TurbineModel"]], "foxes.models.turbine_models.calculator.Calculator": [[154, 2, 1, "id0", "__init__", ""], [154, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [154, 2, 1, 0, "finalize", "Finalizes the model."], [154, 5, 1, 0, "func", "The function: f(in0, in1, ..., stsel) -> (out0, ou1, ...) where inX and outY are numpy.ndarrays and st_sel is the boolean state-turbine selection. All arrays have shape (n_states, n_turbines)."], [154, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [154, 5, 1, 0, "in_vars", "The input farm vairables"], [154, 2, 1, 0, "initialize", "Initializes the model."], [154, 4, 1, 0, "initialized", "Initialization flag."], [154, 4, 1, 0, "model_id", "Unique id based on the model type."], [154, 5, 1, 0, "out_vars", "The output variables"], [154, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [154, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [154, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.calculator.Calculator.calculate": [[154, 3, 2, 0, "algo", "The calculation algorithm"], [154, 3, 2, 0, "fdata", "The farm data"], [154, 3, 2, 0, "mdata", "The model data"], [154, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.calculator.Calculator.finalize": [[154, 3, 2, 0, "algo", "The calculation algorithm"], [154, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.calculator.Calculator.get_data": [[154, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [154, 3, 2, 0, "data", "The data source"], [154, 3, 2, 0, "data_prio", "First search the data source, then the object"], [154, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [154, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [154, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.calculator.Calculator.initialize": [[154, 3, 2, 0, "algo", "The calculation algorithm"], [154, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.calculator.Calculator.output_farm_vars": [[154, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.calculator.Calculator.run_calculation": [[154, 3, 2, 0, "algo", "The calculation algorithm"], [154, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.calculator.Calculator.var": [[154, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.kTI_model": [[156, 1, 1, 0, "kTI", "Bases: TurbineModel"]], "foxes.models.turbine_models.kTI_model.kTI": [[156, 2, 1, "id0", "__init__", ""], [156, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [156, 2, 1, 0, "finalize", "Finalizes the model."], [156, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [156, 2, 1, 0, "initialize", "Initializes the model."], [156, 4, 1, 0, "initialized", "Initialization flag."], [156, 5, 1, 0, "k_var", "The variable name for k"], [156, 4, 1, 0, "model_id", "Unique id based on the model type."], [156, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [156, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [156, 5, 1, 0, "ti_var", "The TI variable name"], [156, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.kTI_model.kTI.calculate": [[156, 3, 2, 0, "algo", "The calculation algorithm"], [156, 3, 2, 0, "fdata", "The farm data"], [156, 3, 2, 0, "mdata", "The model data"], [156, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.kTI_model.kTI.finalize": [[156, 3, 2, 0, "algo", "The calculation algorithm"], [156, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.kTI_model.kTI.get_data": [[156, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [156, 3, 2, 0, "data", "The data source"], [156, 3, 2, 0, "data_prio", "First search the data source, then the object"], [156, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [156, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [156, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.kTI_model.kTI.initialize": [[156, 3, 2, 0, "algo", "The calculation algorithm"], [156, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.kTI_model.kTI.output_farm_vars": [[156, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.kTI_model.kTI.run_calculation": [[156, 3, 2, 0, "algo", "The calculation algorithm"], [156, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.kTI_model.kTI.var": [[156, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.power_mask": [[158, 1, 1, 0, "PowerMask", "Bases: TurbineModel"]], "foxes.models.turbine_models.power_mask.PowerMask": [[158, 2, 1, "id0", "__init__", ""], [158, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [158, 5, 1, 0, "factor_P", "The power unit factor, e.g. 1000 for kW"], [158, 2, 1, 0, "finalize", "Finalizes the model."], [158, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [158, 2, 1, 0, "initialize", "Initializes the model."], [158, 4, 1, 0, "initialized", "Initialization flag."], [158, 4, 1, 0, "model_id", "Unique id based on the model type."], [158, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [158, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [158, 2, 1, 0, "var", "Creates a model specific variable name."], [158, 5, 1, 0, "var_ws_P", "The wind speed variable for power lookup"]], "foxes.models.turbine_models.power_mask.PowerMask.calculate": [[158, 3, 2, 0, "algo", "The calculation algorithm"], [158, 3, 2, 0, "fdata", "The farm data"], [158, 3, 2, 0, "mdata", "The model data"], [158, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.power_mask.PowerMask.finalize": [[158, 3, 2, 0, "algo", "The calculation algorithm"], [158, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.power_mask.PowerMask.get_data": [[158, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [158, 3, 2, 0, "data", "The data source"], [158, 3, 2, 0, "data_prio", "First search the data source, then the object"], [158, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [158, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [158, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.power_mask.PowerMask.initialize": [[158, 3, 2, 0, "algo", "The calculation algorithm"], [158, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.power_mask.PowerMask.output_farm_vars": [[158, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.power_mask.PowerMask.run_calculation": [[158, 3, 2, 0, "algo", "The calculation algorithm"], [158, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.power_mask.PowerMask.var": [[158, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.rotor_centre_calc": [[160, 1, 1, 0, "RotorCentreCalc", "Bases: TurbineModel"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc": [[160, 2, 1, "id0", "__init__", ""], [160, 5, 1, 0, "calc_vars", "The variables that are calculated by the model, keys: var names, values: rotor var names"], [160, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [160, 2, 1, 0, "finalize", "Finalizes the model."], [160, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [160, 2, 1, 0, "initialize", "Initializes the model."], [160, 4, 1, 0, "initialized", "Initialization flag."], [160, 4, 1, 0, "model_id", "Unique id based on the model type."], [160, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [160, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [160, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.calculate": [[160, 3, 2, 0, "algo", "The calculation algorithm"], [160, 3, 2, 0, "fdata", "The farm data"], [160, 3, 2, 0, "mdata", "The model data"], [160, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.finalize": [[160, 3, 2, 0, "algo", "The calculation algorithm"], [160, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.get_data": [[160, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [160, 3, 2, 0, "data", "The data source"], [160, 3, 2, 0, "data_prio", "First search the data source, then the object"], [160, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [160, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [160, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.initialize": [[160, 3, 2, 0, "algo", "The calculation algorithm"], [160, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.output_farm_vars": [[160, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.run_calculation": [[160, 3, 2, 0, "algo", "The calculation algorithm"], [160, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.var": [[160, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.sector_management": [[162, 1, 1, 0, "SectorManagement", "Bases: TurbineModel"]], "foxes.models.turbine_models.sector_management.SectorManagement": [[162, 2, 1, "id0", "__init__", ""], [162, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [162, 2, 1, 0, "finalize", "Finalizes the model."], [162, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [162, 2, 1, 0, "initialize", "Initializes the model."], [162, 4, 1, 0, "initialized", "Initialization flag."], [162, 4, 1, 0, "model_id", "Unique id based on the model type."], [162, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [162, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [162, 5, 1, 0, "source", "The file path or data"], [162, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.sector_management.SectorManagement.calculate": [[162, 3, 2, 0, "algo", "The calculation algorithm"], [162, 3, 2, 0, "fdata", "The farm data"], [162, 3, 2, 0, "mdata", "The model data"], [162, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.sector_management.SectorManagement.finalize": [[162, 3, 2, 0, "algo", "The calculation algorithm"], [162, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.sector_management.SectorManagement.get_data": [[162, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [162, 3, 2, 0, "data", "The data source"], [162, 3, 2, 0, "data_prio", "First search the data source, then the object"], [162, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [162, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [162, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.sector_management.SectorManagement.initialize": [[162, 3, 2, 0, "algo", "The calculation algorithm"], [162, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.sector_management.SectorManagement.output_farm_vars": [[162, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.sector_management.SectorManagement.run_calculation": [[162, 3, 2, 0, "algo", "The calculation algorithm"], [162, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.sector_management.SectorManagement.var": [[162, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.set_XYHD": [[164, 1, 1, 0, "SetXYHD", "Bases: TurbineModel"]], "foxes.models.turbine_models.set_XYHD.SetXYHD": [[164, 2, 1, "id0", "__init__", ""], [164, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [164, 2, 1, 0, "finalize", "Finalizes the model."], [164, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [164, 2, 1, 0, "initialize", "Initializes the model."], [164, 4, 1, 0, "initialized", "Initialization flag."], [164, 4, 1, 0, "model_id", "Unique id based on the model type."], [164, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [164, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [164, 5, 1, 0, "set_D", "Flag for rotor diameter data"], [164, 5, 1, 0, "set_H", "Flag for height data"], [164, 5, 1, 0, "set_XY", "Flag for (x,y) data"], [164, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.set_XYHD.SetXYHD.calculate": [[164, 3, 2, 0, "algo", "The calculation algorithm"], [164, 3, 2, 0, "fdata", "The farm data"], [164, 3, 2, 0, "mdata", "The model data"], [164, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.finalize": [[164, 3, 2, 0, "algo", "The calculation algorithm"], [164, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.get_data": [[164, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [164, 3, 2, 0, "data", "The data source"], [164, 3, 2, 0, "data_prio", "First search the data source, then the object"], [164, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [164, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [164, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.initialize": [[164, 3, 2, 0, "algo", "The calculation algorithm"], [164, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.output_farm_vars": [[164, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.run_calculation": [[164, 3, 2, 0, "algo", "The calculation algorithm"], [164, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.set_XYHD.SetXYHD.var": [[164, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.set_farm_vars": [[166, 1, 1, 0, "SetFarmVars", "Bases: TurbineModel"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars": [[166, 2, 1, "id0", "__init__", ""], [166, 2, 1, 0, "add_var", "Add data for a variable."], [166, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [166, 2, 1, 0, "finalize", "Finalizes the model."], [166, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [166, 2, 1, 0, "initialize", "Initializes the model."], [166, 4, 1, 0, "initialized", "Initialization flag."], [166, 4, 1, 0, "model_id", "Unique id based on the model type."], [166, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [166, 2, 1, 0, "reset", "Remove all variables."], [166, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [166, 2, 1, 0, "var", "Creates a model specific variable name."], [166, 5, 1, 0, "vars", "The variables to be set"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.add_var": [[166, 3, 2, 0, "data", "The data, shape: (n_states, n_turbines)"], [166, 3, 2, 0, "var", "The variable name"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.calculate": [[166, 3, 2, 0, "algo", "The calculation algorithm"], [166, 3, 2, 0, "fdata", "The farm data"], [166, 3, 2, 0, "mdata", "The model data"], [166, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.finalize": [[166, 3, 2, 0, "algo", "The calculation algorithm"], [166, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.get_data": [[166, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [166, 3, 2, 0, "data", "The data source"], [166, 3, 2, 0, "data_prio", "First search the data source, then the object"], [166, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [166, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [166, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.initialize": [[166, 3, 2, 0, "algo", "The calculation algorithm"], [166, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.output_farm_vars": [[166, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.run_calculation": [[166, 3, 2, 0, "algo", "The calculation algorithm"], [166, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars.var": [[166, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.table_factors": [[168, 1, 1, 0, "TableFactors", "Bases: TurbineModel"]], "foxes.models.turbine_models.table_factors.TableFactors": [[168, 2, 1, "id0", "__init__", ""], [168, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [168, 5, 1, 0, "col_var", "The column-wise variable"], [168, 5, 1, 0, "data_source", "Either path to a file or data"], [168, 2, 1, 0, "finalize", "Finalizes the model."], [168, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [168, 2, 1, 0, "initialize", "Initializes the model."], [168, 4, 1, 0, "initialized", "Initialization flag."], [168, 4, 1, 0, "model_id", "Unique id based on the model type."], [168, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [168, 5, 1, 0, "ovars", "The variables onto which the factors are multiplied"], [168, 5, 1, 0, "row_var", "The row-wise variable"], [168, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [168, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.table_factors.TableFactors.calculate": [[168, 3, 2, 0, "algo", "The calculation algorithm"], [168, 3, 2, 0, "fdata", "The farm data"], [168, 3, 2, 0, "mdata", "The model data"], [168, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.table_factors.TableFactors.finalize": [[168, 3, 2, 0, "algo", "The calculation algorithm"], [168, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.table_factors.TableFactors.get_data": [[168, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [168, 3, 2, 0, "data", "The data source"], [168, 3, 2, 0, "data_prio", "First search the data source, then the object"], [168, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [168, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [168, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.table_factors.TableFactors.initialize": [[168, 3, 2, 0, "algo", "The calculation algorithm"], [168, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.table_factors.TableFactors.output_farm_vars": [[168, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.table_factors.TableFactors.run_calculation": [[168, 3, 2, 0, "algo", "The calculation algorithm"], [168, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.table_factors.TableFactors.var": [[168, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.thrust2ct": [[170, 1, 1, 0, "Thrust2Ct", "Bases: TurbineModel"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct": [[170, 5, 1, 0, "WSCT", "The wind speed variable for ct lookup"], [170, 2, 1, "id0", "__init__", ""], [170, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [170, 2, 1, 0, "finalize", "Finalizes the model."], [170, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [170, 2, 1, 0, "initialize", "Initializes the model."], [170, 4, 1, 0, "initialized", "Initialization flag."], [170, 4, 1, 0, "model_id", "Unique id based on the model type."], [170, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [170, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [170, 5, 1, 0, "thrust_var", "Name of the thrust variable"], [170, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.calculate": [[170, 3, 2, 0, "algo", "The calculation algorithm"], [170, 3, 2, 0, "fdata", "The farm data"], [170, 3, 2, 0, "mdata", "The model data"], [170, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.finalize": [[170, 3, 2, 0, "algo", "The calculation algorithm"], [170, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.get_data": [[170, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [170, 3, 2, 0, "data", "The data source"], [170, 3, 2, 0, "data_prio", "First search the data source, then the object"], [170, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [170, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [170, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.initialize": [[170, 3, 2, 0, "algo", "The calculation algorithm"], [170, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.output_farm_vars": [[170, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.run_calculation": [[170, 3, 2, 0, "algo", "The calculation algorithm"], [170, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct.var": [[170, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.yaw2yawm": [[172, 1, 1, 0, "YAW2YAWM", "Bases: TurbineModel"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM": [[172, 2, 1, "id0", "__init__", ""], [172, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [172, 2, 1, 0, "finalize", "Finalizes the model."], [172, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [172, 2, 1, 0, "initialize", "Initializes the model."], [172, 4, 1, 0, "initialized", "Initialization flag."], [172, 4, 1, 0, "model_id", "Unique id based on the model type."], [172, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [172, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [172, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.calculate": [[172, 3, 2, 0, "algo", "The calculation algorithm"], [172, 3, 2, 0, "fdata", "The farm data"], [172, 3, 2, 0, "mdata", "The model data"], [172, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.finalize": [[172, 3, 2, 0, "algo", "The calculation algorithm"], [172, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.get_data": [[172, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [172, 3, 2, 0, "data", "The data source"], [172, 3, 2, 0, "data_prio", "First search the data source, then the object"], [172, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [172, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [172, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.initialize": [[172, 3, 2, 0, "algo", "The calculation algorithm"], [172, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.output_farm_vars": [[172, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.run_calculation": [[172, 3, 2, 0, "algo", "The calculation algorithm"], [172, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.var": [[172, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_models.yawm2yaw": [[174, 1, 1, 0, "YAWM2YAW", "Bases: TurbineModel"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW": [[174, 2, 1, "id0", "__init__", ""], [174, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [174, 2, 1, 0, "finalize", "Finalizes the model."], [174, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [174, 2, 1, 0, "initialize", "Initializes the model."], [174, 4, 1, 0, "initialized", "Initialization flag."], [174, 4, 1, 0, "model_id", "Unique id based on the model type."], [174, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [174, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [174, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.calculate": [[174, 3, 2, 0, "algo", "The calculation algorithm"], [174, 3, 2, 0, "fdata", "The farm data"], [174, 3, 2, 0, "mdata", "The model data"], [174, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.finalize": [[174, 3, 2, 0, "algo", "The calculation algorithm"], [174, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.get_data": [[174, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [174, 3, 2, 0, "data", "The data source"], [174, 3, 2, 0, "data_prio", "First search the data source, then the object"], [174, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [174, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [174, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.initialize": [[174, 3, 2, 0, "algo", "The calculation algorithm"], [174, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.output_farm_vars": [[174, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.run_calculation": [[174, 3, 2, 0, "algo", "The calculation algorithm"], [174, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.var": [[174, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types": [[176, 0, 0, 1, "CpCt_file", ""], [178, 0, 0, 1, "CpCt_from_two", ""], [180, 0, 0, 1, "PCt_file", ""], [182, 0, 0, 1, "PCt_from_two", ""], [184, 0, 0, 1, "null_type", ""], [186, 0, 0, 1, "wsrho2PCt_two_files", ""]], "foxes.models.turbine_types.CpCt_file": [[177, 1, 1, 0, "CpCtFile", "Bases: PCtFile"]], "foxes.models.turbine_types.CpCt_file.CpCtFile": [[177, 2, 1, "id0", "__init__", ""], [177, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [177, 2, 1, 0, "finalize", "Finalizes the model."], [177, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [177, 2, 1, 0, "initialize", "Initializes the model."], [177, 4, 1, 0, "initialized", "Initialization flag."], [177, 4, 1, 0, "model_id", "Unique id based on the model type."], [177, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [177, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [177, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.CpCt_file.CpCtFile.calculate": [[177, 3, 2, 0, "algo", "The calculation algorithm"], [177, 3, 2, 0, "fdata", "The farm data"], [177, 3, 2, 0, "mdata", "The model data"], [177, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.finalize": [[177, 3, 2, 0, "algo", "The calculation algorithm"], [177, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.get_data": [[177, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [177, 3, 2, 0, "data", "The data source"], [177, 3, 2, 0, "data_prio", "First search the data source, then the object"], [177, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [177, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [177, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.initialize": [[177, 3, 2, 0, "algo", "The calculation algorithm"], [177, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.output_farm_vars": [[177, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.run_calculation": [[177, 3, 2, 0, "algo", "The calculation algorithm"], [177, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.CpCt_file.CpCtFile.var": [[177, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types.CpCt_from_two": [[179, 1, 1, 0, "CpCtFromTwo", "Bases: PCtFromTwo"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo": [[179, 2, 1, "id0", "__init__", ""], [179, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [179, 2, 1, 0, "finalize", "Finalizes the model."], [179, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [179, 2, 1, 0, "initialize", "Initializes the model."], [179, 4, 1, 0, "initialized", "Initialization flag."], [179, 4, 1, 0, "model_id", "Unique id based on the model type."], [179, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [179, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [179, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.calculate": [[179, 3, 2, 0, "algo", "The calculation algorithm"], [179, 3, 2, 0, "fdata", "The farm data"], [179, 3, 2, 0, "mdata", "The model data"], [179, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.finalize": [[179, 3, 2, 0, "algo", "The calculation algorithm"], [179, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.get_data": [[179, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [179, 3, 2, 0, "data", "The data source"], [179, 3, 2, 0, "data_prio", "First search the data source, then the object"], [179, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [179, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [179, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.initialize": [[179, 3, 2, 0, "algo", "The calculation algorithm"], [179, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.output_farm_vars": [[179, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.run_calculation": [[179, 3, 2, 0, "algo", "The calculation algorithm"], [179, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.var": [[179, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types.PCt_file": [[181, 1, 1, 0, "PCtFile", "Bases: TurbineType"]], "foxes.models.turbine_types.PCt_file.PCtFile": [[181, 5, 1, 0, "WSCT", "The wind speed variable for ct lookup"], [181, 5, 1, 0, "WSP", "The wind speed variable for power lookup"], [181, 2, 1, "id0", "__init__", ""], [181, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [181, 5, 1, 0, "col_P", "The power column"], [181, 5, 1, 0, "col_ct", "The ct column"], [181, 5, 1, 0, "col_ws", "The wind speed column"], [181, 2, 1, 0, "finalize", "Finalizes the model."], [181, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [181, 2, 1, 0, "initialize", "Initializes the model."], [181, 4, 1, 0, "initialized", "Initialization flag."], [181, 4, 1, 0, "model_id", "Unique id based on the model type."], [181, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [181, 5, 1, 0, "rho", "The air densitiy for which the data is valid or None for no correction"], [181, 5, 1, 0, "rpars", "Parameters for pandas file reading"], [181, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [181, 5, 1, 0, "source", "The file path, static name, or data"], [181, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.PCt_file.PCtFile.calculate": [[181, 3, 2, 0, "algo", "The calculation algorithm"], [181, 3, 2, 0, "fdata", "The farm data"], [181, 3, 2, 0, "mdata", "The model data"], [181, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.PCt_file.PCtFile.finalize": [[181, 3, 2, 0, "algo", "The calculation algorithm"], [181, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.turbine_types.PCt_file.PCtFile.get_data": [[181, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [181, 3, 2, 0, "data", "The data source"], [181, 3, 2, 0, "data_prio", "First search the data source, then the object"], [181, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [181, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [181, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.PCt_file.PCtFile.initialize": [[181, 3, 2, 0, "algo", "The calculation algorithm"], [181, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.PCt_file.PCtFile.output_farm_vars": [[181, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.PCt_file.PCtFile.run_calculation": [[181, 3, 2, 0, "algo", "The calculation algorithm"], [181, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.PCt_file.PCtFile.var": [[181, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types.PCt_from_two": [[183, 1, 1, 0, "PCtFromTwo", "Bases: TurbineType"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo": [[183, 5, 1, 0, "WSCT", "The wind speed variable for ct lookup"], [183, 5, 1, 0, "WSP", "The wind speed variable for power lookup"], [183, 2, 1, "id0", "__init__", ""], [183, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [183, 5, 1, 0, "col_P", "The power column"], [183, 5, 1, 0, "col_ct", "The ct column"], [183, 5, 1, 0, "col_ws", "The wind speed column"], [183, 2, 1, 0, "finalize", "Finalizes the model."], [183, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [183, 2, 1, 0, "initialize", "Initializes the model."], [183, 4, 1, 0, "initialized", "Initialization flag."], [183, 4, 1, 0, "model_id", "Unique id based on the model type."], [183, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [183, 5, 1, 0, "rho", "The air densitiy for which the data is valid or None for no correction"], [183, 5, 1, 0, "rpars_P", "Parameters for pandas power file reading"], [183, 5, 1, 0, "rpars_ct", "Parameters for pandas ct file reading"], [183, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [183, 5, 1, 0, "source_P", "The file path for the power curve, static name, or data"], [183, 5, 1, 0, "source_ct", "The file path for the ct curve, static name, or data"], [183, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.calculate": [[183, 3, 2, 0, "algo", "The calculation algorithm"], [183, 3, 2, 0, "fdata", "The farm data"], [183, 3, 2, 0, "mdata", "The model data"], [183, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.finalize": [[183, 3, 2, 0, "algo", "The calculation algorithm"], [183, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.get_data": [[183, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [183, 3, 2, 0, "data", "The data source"], [183, 3, 2, 0, "data_prio", "First search the data source, then the object"], [183, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [183, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [183, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.initialize": [[183, 3, 2, 0, "algo", "The calculation algorithm"], [183, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.output_farm_vars": [[183, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.run_calculation": [[183, 3, 2, 0, "algo", "The calculation algorithm"], [183, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.var": [[183, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types.null_type": [[185, 1, 1, 0, "NullType", "Bases: TurbineType"]], "foxes.models.turbine_types.null_type.NullType": [[185, 2, 1, "id0", "__init__", ""], [185, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [185, 2, 1, 0, "finalize", "Finalizes the model."], [185, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [185, 2, 1, 0, "initialize", "Initializes the model."], [185, 4, 1, 0, "initialized", "Initialization flag."], [185, 4, 1, 0, "model_id", "Unique id based on the model type."], [185, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [185, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [185, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.null_type.NullType.calculate": [[185, 3, 2, 0, "algo", "The calculation algorithm"], [185, 3, 2, 0, "fdata", "The farm data"], [185, 3, 2, 0, "mdata", "The model data"], [185, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.null_type.NullType.finalize": [[185, 3, 2, 0, "algo", "The calculation algorithm"], [185, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.null_type.NullType.get_data": [[185, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [185, 3, 2, 0, "data", "The data source"], [185, 3, 2, 0, "data_prio", "First search the data source, then the object"], [185, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [185, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [185, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.null_type.NullType.initialize": [[185, 3, 2, 0, "algo", "The calculation algorithm"], [185, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.null_type.NullType.output_farm_vars": [[185, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.null_type.NullType.run_calculation": [[185, 3, 2, 0, "algo", "The calculation algorithm"], [185, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.null_type.NullType.var": [[185, 3, 2, 0, "v", "The variable name"]], "foxes.models.turbine_types.wsrho2PCt_two_files": [[187, 1, 1, 0, "WsRho2PCtTwoFiles", "Bases: TurbineType"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles": [[187, 5, 1, 0, "WSCT", "The wind speed variable for ct lookup"], [187, 5, 1, 0, "WSP", "The wind speed variable for power lookup"], [187, 2, 1, "id0", "__init__", ""], [187, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [187, 2, 1, 0, "finalize", "Finalizes the model."], [187, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [187, 2, 1, 0, "initialize", "Initializes the model."], [187, 4, 1, 0, "initialized", "Initialization flag."], [187, 5, 1, 0, "ipars_P", "Parameters for scipy.interpolate.interpn()"], [187, 5, 1, 0, "ipars_ct", "Parameters for scipy.interpolate.interpn()"], [187, 4, 1, 0, "model_id", "Unique id based on the model type."], [187, 2, 1, 0, "output_farm_vars", "The variables which are being modified by the model."], [187, 5, 1, 0, "rpars_P", "Parameters for pandas power file reading"], [187, 5, 1, 0, "rpars_ct", "Parameters for pandas ct file reading"], [187, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [187, 5, 1, 0, "source_P", "The file path for the power curve, static name, or data"], [187, 5, 1, 0, "source_ct", "The file path for the ct curve, static name, or data"], [187, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.calculate": [[187, 3, 2, 0, "algo", "The calculation algorithm"], [187, 3, 2, 0, "fdata", "The farm data"], [187, 3, 2, 0, "mdata", "The model data"], [187, 3, 2, 0, "st_sel", "The state-turbine selection, shape: (n_states, n_turbines)"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.finalize": [[187, 3, 2, 0, "algo", "The calculation algorithm"], [187, 3, 2, 0, "verbosity", "The verbosity level"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.get_data": [[187, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [187, 3, 2, 0, "data", "The data source"], [187, 3, 2, 0, "data_prio", "First search the data source, then the object"], [187, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [187, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [187, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.initialize": [[187, 3, 2, 0, "algo", "The calculation algorithm"], [187, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.output_farm_vars": [[187, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.run_calculation": [[187, 3, 2, 0, "algo", "The calculation algorithm"], [187, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.var": [[187, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles": [[189, 0, 0, 1, "abl_log", ""], [200, 0, 0, 1, "uniform", ""]], "foxes.models.vertical_profiles.abl_log": [[190, 0, 0, 1, "abl_log_neutral_ws", ""], [192, 0, 0, 1, "abl_log_stable_ws", ""], [194, 0, 0, 1, "abl_log_unstable_ws", ""], [196, 0, 0, 1, "abl_log_ws", ""], [198, 0, 0, 1, "sheared_ws", ""]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws": [[191, 1, 1, 0, "ABLLogNeutralWsProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile": [[191, 2, 1, "id0", "__init__", ""], [191, 2, 1, 0, "calculate", "Run the profile calculation."], [191, 2, 1, 0, "finalize", "Finalizes the model."], [191, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [191, 2, 1, 0, "initialize", "Initializes the model."], [191, 4, 1, 0, "initialized", "Initialization flag."], [191, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [191, 4, 1, 0, "model_id", "Unique id based on the model type."], [191, 2, 1, 0, "new", "Run-time profile factory."], [191, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.calculate": [[191, 3, 2, 0, "data", "The input data"], [191, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.finalize": [[191, 3, 2, 0, "algo", "The calculation algorithm"], [191, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.get_data": [[191, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [191, 3, 2, 0, "data", "The data source"], [191, 3, 2, 0, "data_prio", "First search the data source, then the object"], [191, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [191, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [191, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.initialize": [[191, 3, 2, 0, "algo", "The calculation algorithm"], [191, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.new": [[191, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.var": [[191, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws": [[193, 1, 1, 0, "ABLLogStableWsProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile": [[193, 2, 1, "id0", "__init__", ""], [193, 2, 1, 0, "calculate", "Run the profile calculation."], [193, 2, 1, 0, "finalize", "Finalizes the model."], [193, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [193, 2, 1, 0, "initialize", "Initializes the model."], [193, 4, 1, 0, "initialized", "Initialization flag."], [193, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [193, 4, 1, 0, "model_id", "Unique id based on the model type."], [193, 2, 1, 0, "new", "Run-time profile factory."], [193, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.calculate": [[193, 3, 2, 0, "data", "The input data"], [193, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.finalize": [[193, 3, 2, 0, "algo", "The calculation algorithm"], [193, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.get_data": [[193, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [193, 3, 2, 0, "data", "The data source"], [193, 3, 2, 0, "data_prio", "First search the data source, then the object"], [193, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [193, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [193, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.initialize": [[193, 3, 2, 0, "algo", "The calculation algorithm"], [193, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.new": [[193, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.var": [[193, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws": [[195, 1, 1, 0, "ABLLogUnstableWsProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile": [[195, 2, 1, "id0", "__init__", ""], [195, 2, 1, 0, "calculate", "Run the profile calculation."], [195, 2, 1, 0, "finalize", "Finalizes the model."], [195, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [195, 2, 1, 0, "initialize", "Initializes the model."], [195, 4, 1, 0, "initialized", "Initialization flag."], [195, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [195, 4, 1, 0, "model_id", "Unique id based on the model type."], [195, 2, 1, 0, "new", "Run-time profile factory."], [195, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.calculate": [[195, 3, 2, 0, "data", "The input data"], [195, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.finalize": [[195, 3, 2, 0, "algo", "The calculation algorithm"], [195, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.get_data": [[195, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [195, 3, 2, 0, "data", "The data source"], [195, 3, 2, 0, "data_prio", "First search the data source, then the object"], [195, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [195, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [195, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.initialize": [[195, 3, 2, 0, "algo", "The calculation algorithm"], [195, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.new": [[195, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.var": [[195, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws": [[197, 1, 1, 0, "ABLLogWsProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile": [[197, 2, 1, "id0", "__init__", ""], [197, 2, 1, 0, "calculate", "Run the profile calculation."], [197, 2, 1, 0, "finalize", "Finalizes the model."], [197, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [197, 2, 1, 0, "initialize", "Initializes the model."], [197, 4, 1, 0, "initialized", "Initialization flag."], [197, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [197, 4, 1, 0, "model_id", "Unique id based on the model type."], [197, 2, 1, 0, "new", "Run-time profile factory."], [197, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.calculate": [[197, 3, 2, 0, "data", "The input data"], [197, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.finalize": [[197, 3, 2, 0, "algo", "The calculation algorithm"], [197, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.get_data": [[197, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [197, 3, 2, 0, "data", "The data source"], [197, 3, 2, 0, "data_prio", "First search the data source, then the object"], [197, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [197, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [197, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.initialize": [[197, 3, 2, 0, "algo", "The calculation algorithm"], [197, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.new": [[197, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.var": [[197, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles.abl_log.sheared_ws": [[199, 1, 1, 0, "ShearedProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile": [[199, 2, 1, "id0", "__init__", ""], [199, 2, 1, 0, "calculate", "Run the profile calculation."], [199, 2, 1, 0, "finalize", "Finalizes the model."], [199, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [199, 2, 1, 0, "initialize", "Initializes the model."], [199, 4, 1, 0, "initialized", "Initialization flag."], [199, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [199, 4, 1, 0, "model_id", "Unique id based on the model type."], [199, 2, 1, 0, "new", "Run-time profile factory."], [199, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.calculate": [[199, 3, 2, 0, "data", "The input data"], [199, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.finalize": [[199, 3, 2, 0, "algo", "The calculation algorithm"], [199, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.get_data": [[199, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [199, 3, 2, 0, "data", "The data source"], [199, 3, 2, 0, "data_prio", "First search the data source, then the object"], [199, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [199, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [199, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.initialize": [[199, 3, 2, 0, "algo", "The calculation algorithm"], [199, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.new": [[199, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.var": [[199, 3, 2, 0, "v", "The variable name"]], "foxes.models.vertical_profiles.uniform": [[201, 1, 1, 0, "UniformProfile", "Bases: VerticalProfile"]], "foxes.models.vertical_profiles.uniform.UniformProfile": [[201, 2, 1, "id0", "__init__", ""], [201, 2, 1, 0, "calculate", "Run the profile calculation."], [201, 2, 1, 0, "finalize", "Finalizes the model."], [201, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [201, 2, 1, 0, "initialize", "Initializes the model."], [201, 4, 1, 0, "initialized", "Initialization flag."], [201, 2, 1, 0, "input_vars", "The input variables needed for the profile calculation."], [201, 4, 1, 0, "model_id", "Unique id based on the model type."], [201, 2, 1, 0, "new", "Run-time profile factory."], [201, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.vertical_profiles.uniform.UniformProfile.calculate": [[201, 3, 2, 0, "data", "The input data"], [201, 3, 2, 0, "heights", "The evaluation heights"]], "foxes.models.vertical_profiles.uniform.UniformProfile.finalize": [[201, 3, 2, 0, "algo", "The calculation algorithm"], [201, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.uniform.UniformProfile.get_data": [[201, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [201, 3, 2, 0, "data", "The data source"], [201, 3, 2, 0, "data_prio", "First search the data source, then the object"], [201, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [201, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [201, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.vertical_profiles.uniform.UniformProfile.initialize": [[201, 3, 2, 0, "algo", "The calculation algorithm"], [201, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.vertical_profiles.uniform.UniformProfile.new": [[201, 3, 2, 0, "profile_type", "The selected derived class name"]], "foxes.models.vertical_profiles.uniform.UniformProfile.var": [[201, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_frames": [[203, 0, 0, 1, "farm_order", ""], [205, 0, 0, 1, "rotor_wd", ""], [207, 0, 0, 1, "streamlines", ""], [209, 0, 0, 1, "yawed_wakes", ""]], "foxes.models.wake_frames.farm_order": [[204, 1, 1, 0, "FarmOrder", "Bases: WakeFrame"]], "foxes.models.wake_frames.farm_order.FarmOrder": [[204, 2, 1, "id0", "__init__", ""], [204, 5, 1, 0, "base_frame", "The wake frame from which to start"], [204, 2, 1, 0, "calc_centreline_integral", "Integrates variables along the centreline."], [204, 2, 1, 0, "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [204, 2, 1, 0, "finalize", "Finalizes the model."], [204, 2, 1, 0, "get_centreline_points", "Gets the points along the centreline for given values of x."], [204, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [204, 2, 1, 0, "get_wake_coos", "Calculate wake coordinates."], [204, 2, 1, 0, "initialize", "Initializes the model."], [204, 4, 1, 0, "initialized", "Initialization flag."], [204, 4, 1, 0, "model_id", "Unique id based on the model type."], [204, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_frames.farm_order.FarmOrder.calc_centreline_integral": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "dx", "The step size of the integral"], [204, 3, 2, 0, "fdata", "The farm data"], [204, 3, 2, 0, "ipars", "Additional interpolation parameters"], [204, 3, 2, 0, "mdata", "The model data"], [204, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [204, 3, 2, 0, "variables", "The variables to be integrated"], [204, 3, 2, 0, "x", "The wake frame x coordinates of the upper integral bounds, shape: (n_states, n_points)"]], "foxes.models.wake_frames.farm_order.FarmOrder.calc_order": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "fdata", "The farm data"], [204, 3, 2, 0, "mdata", "The model data"]], "foxes.models.wake_frames.farm_order.FarmOrder.finalize": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.farm_order.FarmOrder.get_centreline_points": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "fdata", "The farm data"], [204, 3, 2, 0, "mdata", "The model data"], [204, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [204, 3, 2, 0, "x", "The wake frame x coordinates, shape: (n_states, n_points)"]], "foxes.models.wake_frames.farm_order.FarmOrder.get_data": [[204, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [204, 3, 2, 0, "data", "The data source"], [204, 3, 2, 0, "data_prio", "First search the data source, then the object"], [204, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [204, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [204, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_frames.farm_order.FarmOrder.get_wake_coos": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "fdata", "The farm data"], [204, 3, 2, 0, "mdata", "The model data"], [204, 3, 2, 0, "points", "The evaluation points, shape: (n_states, n_points, 3)"], [204, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"]], "foxes.models.wake_frames.farm_order.FarmOrder.initialize": [[204, 3, 2, 0, "algo", "The calculation algorithm"], [204, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.farm_order.FarmOrder.var": [[204, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_frames.rotor_wd": [[206, 1, 1, 0, "RotorWD", "Bases: WakeFrame"]], "foxes.models.wake_frames.rotor_wd.RotorWD": [[206, 2, 1, "id0", "__init__", ""], [206, 2, 1, 0, "calc_centreline_integral", "Integrates variables along the centreline."], [206, 2, 1, 0, "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [206, 2, 1, 0, "finalize", "Finalizes the model."], [206, 2, 1, 0, "get_centreline_points", "Gets the points along the centreline for given values of x."], [206, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [206, 2, 1, 0, "get_wake_coos", "Calculate wake coordinates."], [206, 2, 1, 0, "initialize", "Initializes the model."], [206, 4, 1, 0, "initialized", "Initialization flag."], [206, 4, 1, 0, "model_id", "Unique id based on the model type."], [206, 2, 1, 0, "var", "Creates a model specific variable name."], [206, 5, 1, 0, "var_wd", "The wind direction variable"]], "foxes.models.wake_frames.rotor_wd.RotorWD.calc_centreline_integral": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "dx", "The step size of the integral"], [206, 3, 2, 0, "fdata", "The farm data"], [206, 3, 2, 0, "ipars", "Additional interpolation parameters"], [206, 3, 2, 0, "mdata", "The model data"], [206, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [206, 3, 2, 0, "variables", "The variables to be integrated"], [206, 3, 2, 0, "x", "The wake frame x coordinates of the upper integral bounds, shape: (n_states, n_points)"]], "foxes.models.wake_frames.rotor_wd.RotorWD.calc_order": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "fdata", "The farm data"], [206, 3, 2, 0, "mdata", "The model data"]], "foxes.models.wake_frames.rotor_wd.RotorWD.finalize": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.rotor_wd.RotorWD.get_centreline_points": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "fdata", "The farm data"], [206, 3, 2, 0, "mdata", "The model data"], [206, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [206, 3, 2, 0, "x", "The wake frame x coordinates, shape: (n_states, n_points)"]], "foxes.models.wake_frames.rotor_wd.RotorWD.get_data": [[206, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [206, 3, 2, 0, "data", "The data source"], [206, 3, 2, 0, "data_prio", "First search the data source, then the object"], [206, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [206, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [206, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_frames.rotor_wd.RotorWD.get_wake_coos": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "fdata", "The farm data"], [206, 3, 2, 0, "mdata", "The model data"], [206, 3, 2, 0, "points", "The evaluation points, shape: (n_states, n_points, 3)"], [206, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"]], "foxes.models.wake_frames.rotor_wd.RotorWD.initialize": [[206, 3, 2, 0, "algo", "The calculation algorithm"], [206, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.rotor_wd.RotorWD.var": [[206, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_frames.streamlines": [[208, 1, 1, 0, "Streamlines", "Bases: WakeFrame"]], "foxes.models.wake_frames.streamlines.Streamlines": [[208, 2, 1, "id0", "__init__", ""], [208, 2, 1, 0, "calc_centreline_integral", "Integrates variables along the centreline."], [208, 2, 1, 0, "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [208, 5, 1, 0, "cl_ipars", "Interpolation parameters for centre line point interpolation"], [208, 2, 1, 0, "finalize", "Finalizes the model."], [208, 2, 1, 0, "get_centreline_points", "Gets the points along the centreline for given values of x."], [208, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [208, 2, 1, 0, "get_wake_coos", "Calculate wake coordinates."], [208, 2, 1, 0, "initialize", "Initializes the model."], [208, 4, 1, 0, "initialized", "Initialization flag."], [208, 5, 1, 0, "max_length", "The maximal streamline length"], [208, 4, 1, 0, "model_id", "Unique id based on the model type."], [208, 5, 1, 0, "n_delstor", "The streamline point storage increase"], [208, 5, 1, 0, "step", "The streamline step size in m"], [208, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_frames.streamlines.Streamlines.calc_centreline_integral": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "dx", "The step size of the integral"], [208, 3, 2, 0, "fdata", "The farm data"], [208, 3, 2, 0, "ipars", "Additional interpolation parameters"], [208, 3, 2, 0, "mdata", "The model data"], [208, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [208, 3, 2, 0, "variables", "The variables to be integrated"], [208, 3, 2, 0, "x", "The wake frame x coordinates of the upper integral bounds, shape: (n_states, n_points)"]], "foxes.models.wake_frames.streamlines.Streamlines.calc_order": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "fdata", "The farm data"], [208, 3, 2, 0, "mdata", "The model data"]], "foxes.models.wake_frames.streamlines.Streamlines.finalize": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.streamlines.Streamlines.get_centreline_points": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "fdata", "The farm data"], [208, 3, 2, 0, "mdata", "The model data"], [208, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [208, 3, 2, 0, "x", "The wake frame x coordinates, shape: (n_states, n_points)"]], "foxes.models.wake_frames.streamlines.Streamlines.get_data": [[208, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [208, 3, 2, 0, "data", "The data source"], [208, 3, 2, 0, "data_prio", "First search the data source, then the object"], [208, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [208, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [208, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_frames.streamlines.Streamlines.get_wake_coos": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "fdata", "The farm data"], [208, 3, 2, 0, "mdata", "The model data"], [208, 3, 2, 0, "points", "The evaluation points, shape: (n_states, n_points, 3)"], [208, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"]], "foxes.models.wake_frames.streamlines.Streamlines.initialize": [[208, 3, 2, 0, "algo", "The calculation algorithm"], [208, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.streamlines.Streamlines.var": [[208, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_frames.yawed_wakes": [[210, 1, 1, 0, "YawedWakes", "Bases: WakeFrame"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes": [[210, 5, 1, 0, "K", "The wake growth parameter k. If not given here it will be searched in the farm data."], [210, 5, 1, 0, "YAWM", "The yaw misalignment YAWM. If not given here it will be searched in the farm data."], [210, 2, 1, "id0", "__init__", ""], [210, 5, 1, 0, "base_frame", "The wake frame from which to start"], [210, 2, 1, 0, "calc_centreline_integral", "Integrates variables along the centreline."], [210, 2, 1, 0, "calc_order", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [210, 2, 1, 0, "finalize", "Finalizes the model."], [210, 2, 1, 0, "get_centreline_points", "Gets the points along the centreline for given values of x."], [210, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [210, 2, 1, 0, "get_wake_coos", "Calculate wake coordinates."], [210, 2, 1, 0, "initialize", "Initializes the model."], [210, 4, 1, 0, "initialized", "Initialization flag."], [210, 5, 1, 0, "k_var", "The variable name for k"], [210, 5, 1, 0, "model", "The model for computing common data"], [210, 4, 1, 0, "model_id", "Unique id based on the model type."], [210, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.calc_centreline_integral": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "dx", "The step size of the integral"], [210, 3, 2, 0, "fdata", "The farm data"], [210, 3, 2, 0, "ipars", "Additional interpolation parameters"], [210, 3, 2, 0, "mdata", "The model data"], [210, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [210, 3, 2, 0, "variables", "The variables to be integrated"], [210, 3, 2, 0, "x", "The wake frame x coordinates of the upper integral bounds, shape: (n_states, n_points)"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.calc_order": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "fdata", "The farm data"], [210, 3, 2, 0, "mdata", "The model data"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.finalize": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_centreline_points": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "fdata", "The farm data"], [210, 3, 2, 0, "mdata", "The model data"], [210, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [210, 3, 2, 0, "x", "The wake frame x coordinates, shape: (n_states, n_points)"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_data": [[210, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [210, 3, 2, 0, "data", "The data source"], [210, 3, 2, 0, "data_prio", "First search the data source, then the object"], [210, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [210, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [210, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_wake_coos": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "fdata", "The farm data"], [210, 3, 2, 0, "mdata", "The model data"], [210, 3, 2, 0, "points", "The evaluation points, shape: (n_states, n_points, 3)"], [210, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.initialize": [[210, 3, 2, 0, "algo", "The calculation algorithm"], [210, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes.var": [[210, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models": [[212, 0, 0, 1, "axisymmetric", ""], [214, 0, 0, 1, "dist_sliced", ""], [216, 0, 0, 1, "gaussian", ""], [218, 0, 0, 1, "ti", ""], [223, 0, 0, 1, "top_hat", ""], [225, 0, 0, 1, "wind", ""]], "foxes.models.wake_models.axisymmetric": [[213, 1, 1, 0, "AxisymmetricWakeModel", "Bases: DistSlicedWakeModel"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel": [[213, 2, 1, "id0", "__init__", ""], [213, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [213, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [213, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [213, 2, 1, 0, "finalize", "Finalizes the model."], [213, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [213, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [213, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [213, 2, 1, 0, "initialize", "Initializes the model."], [213, 4, 1, 0, "initialized", "Initialization flag."], [213, 4, 1, 0, "model_id", "Unique id based on the model type."], [213, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.calc_wakes_spsel_x_r": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "fdata", "The farm data"], [213, 3, 2, 0, "mdata", "The model data"], [213, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x, 2)"], [213, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [213, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.calc_wakes_spsel_x_yz": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "fdata", "The farm data"], [213, 3, 2, 0, "mdata", "The model data"], [213, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [213, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [213, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.contribute_to_wake_deltas": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "fdata", "The farm data"], [213, 3, 2, 0, "mdata", "The model data"], [213, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [213, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [213, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.finalize": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.finalize_wake_deltas": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [213, 3, 2, 0, "fdata", "The farm data"], [213, 3, 2, 0, "mdata", "The model data"], [213, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.get_data": [[213, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [213, 3, 2, 0, "data", "The data source"], [213, 3, 2, 0, "data_prio", "First search the data source, then the object"], [213, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [213, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [213, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.init_wake_deltas": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "fdata", "The farm data"], [213, 3, 2, 0, "mdata", "The model data"], [213, 3, 2, 0, "n_points", "The number of wake evaluation points"], [213, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.initialize": [[213, 3, 2, 0, "algo", "The calculation algorithm"], [213, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.var": [[213, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.dist_sliced": [[215, 1, 1, 0, "DistSlicedWakeModel", "Bases: WakeModel"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel": [[215, 2, 1, "id0", "__init__", ""], [215, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [215, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [215, 2, 1, 0, "finalize", "Finalizes the model."], [215, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [215, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [215, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [215, 2, 1, 0, "initialize", "Initializes the model."], [215, 4, 1, 0, "initialized", "Initialization flag."], [215, 4, 1, 0, "model_id", "Unique id based on the model type."], [215, 5, 1, 0, "superp", "The superposition dict, key: variable name str, value: foxes.core.WakeSuperposition"], [215, 5, 1, 0, "superpositions", "The superpositions. Key: variable name str, value: The wake superposition model name, will be looked up in model book"], [215, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.calc_wakes_spsel_x_yz": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "fdata", "The farm data"], [215, 3, 2, 0, "mdata", "The model data"], [215, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [215, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [215, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.contribute_to_wake_deltas": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "fdata", "The farm data"], [215, 3, 2, 0, "mdata", "The model data"], [215, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [215, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [215, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.finalize": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.finalize_wake_deltas": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [215, 3, 2, 0, "fdata", "The farm data"], [215, 3, 2, 0, "mdata", "The model data"], [215, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.get_data": [[215, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [215, 3, 2, 0, "data", "The data source"], [215, 3, 2, 0, "data_prio", "First search the data source, then the object"], [215, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [215, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [215, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.init_wake_deltas": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "fdata", "The farm data"], [215, 3, 2, 0, "mdata", "The model data"], [215, 3, 2, 0, "n_points", "The number of wake evaluation points"], [215, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.initialize": [[215, 3, 2, 0, "algo", "The calculation algorithm"], [215, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.var": [[215, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.gaussian": [[217, 1, 1, 0, "GaussianWakeModel", "Bases: AxisymmetricWakeModel"]], "foxes.models.wake_models.gaussian.GaussianWakeModel": [[217, 2, 1, "id0", "__init__", ""], [217, 2, 1, 0, "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [217, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [217, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [217, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [217, 2, 1, 0, "finalize", "Finalizes the model."], [217, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [217, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [217, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [217, 2, 1, 0, "initialize", "Initializes the model."], [217, 4, 1, 0, "initialized", "Initialization flag."], [217, 4, 1, 0, "model_id", "Unique id based on the model type."], [217, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_amplitude_sigma_spsel": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [217, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_wakes_spsel_x_r": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x)"], [217, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [217, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_wakes_spsel_x_yz": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [217, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [217, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.contribute_to_wake_deltas": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [217, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [217, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.finalize": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.finalize_wake_deltas": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.get_data": [[217, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [217, 3, 2, 0, "data", "The data source"], [217, 3, 2, 0, "data_prio", "First search the data source, then the object"], [217, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [217, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [217, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.init_wake_deltas": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "fdata", "The farm data"], [217, 3, 2, 0, "mdata", "The model data"], [217, 3, 2, 0, "n_points", "The number of wake evaluation points"], [217, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.initialize": [[217, 3, 2, 0, "algo", "The calculation algorithm"], [217, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.gaussian.GaussianWakeModel.var": [[217, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.ti": [[219, 0, 0, 1, "crespo_hernandez", ""], [221, 0, 0, 1, "iec_ti", ""]], "foxes.models.wake_models.ti.crespo_hernandez": [[220, 1, 1, 0, "CrespoHernandezTIWake", "Bases: TopHatWakeModel"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake": [[220, 2, 1, "id0", "__init__", ""], [220, 5, 1, 0, "a_far", "Model parameter"], [220, 5, 1, 0, "a_near", "Model parameter"], [220, 2, 1, 0, "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [220, 2, 1, 0, "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [220, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [220, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [220, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [220, 5, 1, 0, "e1", "Model parameter"], [220, 5, 1, 0, "e2", "Model parameter"], [220, 5, 1, 0, "e3", "Model parameter"], [220, 2, 1, 0, "finalize", "Finalizes the model."], [220, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [220, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [220, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [220, 2, 1, 0, "initialize", "Initializes the model."], [220, 4, 1, 0, "initialized", "Initialization flag."], [220, 5, 1, 0, "k", "The wake growth parameter k. If not given here it will be searched in the farm data."], [220, 5, 1, 0, "k_var", "The variable name for k"], [220, 4, 1, 0, "model_id", "Unique id based on the model type."], [220, 5, 1, 0, "near_wake_D", "The near wake distance in units of D, calculated from TI and ct if None"], [220, 5, 1, 0, "sbeta_factor", "Factor multiplying sbeta"], [220, 5, 1, 0, "use_ambti", "Flag for using ambient TI instead of local wake corrected TI"], [220, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_centreline_wake_deltas": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_sp_sel,)"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "sp_sel", "The state-point selection, for which the wake is non-zero, shape: (n_states, n_points)"], [220, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [220, 3, 2, 0, "wake_r", "The wake radii, shape: (n_sp_sel,)"], [220, 3, 2, 0, "x", "The x values, shape: (n_sp_sel,)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wake_radius": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_states, n_points)"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [220, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wakes_spsel_x_r": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x, 2)"], [220, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [220, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wakes_spsel_x_yz": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [220, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [220, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.contribute_to_wake_deltas": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [220, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [220, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.finalize": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.finalize_wake_deltas": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.get_data": [[220, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [220, 3, 2, 0, "data", "The data source"], [220, 3, 2, 0, "data_prio", "First search the data source, then the object"], [220, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [220, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [220, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.init_wake_deltas": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "fdata", "The farm data"], [220, 3, 2, 0, "mdata", "The model data"], [220, 3, 2, 0, "n_points", "The number of wake evaluation points"], [220, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.initialize": [[220, 3, 2, 0, "algo", "The calculation algorithm"], [220, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.var": [[220, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.ti.iec_ti": [[222, 1, 1, 0, "IECTIWake", "Bases: TopHatWakeModel"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake": [[222, 2, 1, "id0", "__init__", ""], [222, 2, 1, 0, "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [222, 2, 1, 0, "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [222, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [222, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [222, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [222, 2, 1, 0, "finalize", "Finalizes the model."], [222, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [222, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [222, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [222, 2, 1, 0, "initialize", "Initializes the model."], [222, 4, 1, 0, "initialized", "Initialization flag."], [222, 5, 1, 0, "k_var", "The variable name for k"], [222, 4, 1, 0, "model_id", "Unique id based on the model type."], [222, 5, 1, 0, "opening_angle", "The wake opening angle. The wake growth parameter k is calculated based on the wake opening angle."], [222, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_centreline_wake_deltas": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_sp_sel,)"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "sp_sel", "The state-point selection, for which the wake is non-zero, shape: (n_states, n_points)"], [222, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [222, 3, 2, 0, "wake_r", "The wake radii, shape: (n_sp_sel,)"], [222, 3, 2, 0, "x", "The x values, shape: (n_sp_sel,)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wake_radius": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_states, n_points)"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [222, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wakes_spsel_x_r": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x, 2)"], [222, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [222, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wakes_spsel_x_yz": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [222, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [222, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.contribute_to_wake_deltas": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [222, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [222, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.finalize": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.finalize_wake_deltas": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.get_data": [[222, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [222, 3, 2, 0, "data", "The data source"], [222, 3, 2, 0, "data_prio", "First search the data source, then the object"], [222, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [222, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [222, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.init_wake_deltas": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "fdata", "The farm data"], [222, 3, 2, 0, "mdata", "The model data"], [222, 3, 2, 0, "n_points", "The number of wake evaluation points"], [222, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.initialize": [[222, 3, 2, 0, "algo", "The calculation algorithm"], [222, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake.var": [[222, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.top_hat": [[224, 1, 1, 0, "TopHatWakeModel", "Bases: AxisymmetricWakeModel"]], "foxes.models.wake_models.top_hat.TopHatWakeModel": [[224, 2, 1, "id0", "__init__", ""], [224, 2, 1, 0, "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [224, 2, 1, 0, "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [224, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [224, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [224, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [224, 2, 1, 0, "finalize", "Finalizes the model."], [224, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [224, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [224, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [224, 2, 1, 0, "initialize", "Initializes the model."], [224, 4, 1, 0, "initialized", "Initialization flag."], [224, 4, 1, 0, "model_id", "Unique id based on the model type."], [224, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_centreline_wake_deltas": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_sp_sel,)"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "sp_sel", "The state-point selection, for which the wake is non-zero, shape: (n_states, n_points)"], [224, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [224, 3, 2, 0, "wake_r", "The wake radii, shape: (n_sp_sel,)"], [224, 3, 2, 0, "x", "The x values, shape: (n_sp_sel,)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wake_radius": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_states, n_points)"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [224, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wakes_spsel_x_r": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x, 2)"], [224, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [224, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wakes_spsel_x_yz": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [224, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [224, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.contribute_to_wake_deltas": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [224, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [224, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.finalize": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.finalize_wake_deltas": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.get_data": [[224, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [224, 3, 2, 0, "data", "The data source"], [224, 3, 2, 0, "data_prio", "First search the data source, then the object"], [224, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [224, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [224, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.init_wake_deltas": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "fdata", "The farm data"], [224, 3, 2, 0, "mdata", "The model data"], [224, 3, 2, 0, "n_points", "The number of wake evaluation points"], [224, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.initialize": [[224, 3, 2, 0, "algo", "The calculation algorithm"], [224, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.top_hat.TopHatWakeModel.var": [[224, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.wind": [[226, 0, 0, 1, "bastankhah", ""], [228, 0, 0, 1, "jensen", ""], [230, 0, 0, 1, "porte_agel", ""], [233, 0, 0, 1, "turbopark", ""]], "foxes.models.wake_models.wind.bastankhah": [[227, 1, 1, 0, "BastankhahWake", "Bases: GaussianWakeModel"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake": [[227, 2, 1, "id0", "__init__", ""], [227, 2, 1, 0, "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [227, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [227, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [227, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [227, 5, 1, 0, "ct_max", "The maximal value for ct, values beyond will be limited to this number"], [227, 2, 1, 0, "finalize", "Finalizes the model."], [227, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [227, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [227, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [227, 2, 1, 0, "initialize", "Initializes the model."], [227, 4, 1, 0, "initialized", "Initialization flag."], [227, 5, 1, 0, "k", "The wake growth parameter k. If not given here it will be searched in the farm data."], [227, 5, 1, 0, "k_var", "The variable name for k"], [227, 4, 1, 0, "model_id", "Unique id based on the model type."], [227, 5, 1, 0, "sbeta_factor", "Factor multiplying sbeta"], [227, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_amplitude_sigma_spsel": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [227, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_wakes_spsel_x_r": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x)"], [227, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [227, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_wakes_spsel_x_yz": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [227, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [227, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.contribute_to_wake_deltas": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [227, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [227, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.finalize": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.finalize_wake_deltas": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.get_data": [[227, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [227, 3, 2, 0, "data", "The data source"], [227, 3, 2, 0, "data_prio", "First search the data source, then the object"], [227, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [227, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [227, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.init_wake_deltas": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "fdata", "The farm data"], [227, 3, 2, 0, "mdata", "The model data"], [227, 3, 2, 0, "n_points", "The number of wake evaluation points"], [227, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.initialize": [[227, 3, 2, 0, "algo", "The calculation algorithm"], [227, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake.var": [[227, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.wind.jensen": [[229, 1, 1, 0, "JensenWake", "Bases: TopHatWakeModel"]], "foxes.models.wake_models.wind.jensen.JensenWake": [[229, 2, 1, "id0", "__init__", ""], [229, 2, 1, 0, "calc_centreline_wake_deltas", "Calculate centre line results of wake deltas."], [229, 2, 1, 0, "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [229, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [229, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [229, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [229, 2, 1, 0, "finalize", "Finalizes the model."], [229, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [229, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [229, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [229, 2, 1, 0, "initialize", "Initializes the model."], [229, 4, 1, 0, "initialized", "Initialization flag."], [229, 5, 1, 0, "k", "The wake growth parameter k. If not given here it will be searched in the farm data."], [229, 5, 1, 0, "k_var", "The variable name for k"], [229, 4, 1, 0, "model_id", "Unique id based on the model type."], [229, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.wind.jensen.JensenWake.calc_centreline_wake_deltas": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_sp_sel,)"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "sp_sel", "The state-point selection, for which the wake is non-zero, shape: (n_states, n_points)"], [229, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [229, 3, 2, 0, "wake_r", "The wake radii, shape: (n_sp_sel,)"], [229, 3, 2, 0, "x", "The x values, shape: (n_sp_sel,)"]], "foxes.models.wake_models.wind.jensen.JensenWake.calc_wake_radius": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "ct", "The ct values of the wake-causing turbines, shape: (n_states, n_points)"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [229, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.jensen.JensenWake.calc_wakes_spsel_x_r": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x, 2)"], [229, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [229, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.jensen.JensenWake.calc_wakes_spsel_x_yz": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [229, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [229, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.wind.jensen.JensenWake.contribute_to_wake_deltas": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [229, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [229, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.jensen.JensenWake.finalize": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.jensen.JensenWake.finalize_wake_deltas": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.wind.jensen.JensenWake.get_data": [[229, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [229, 3, 2, 0, "data", "The data source"], [229, 3, 2, 0, "data_prio", "First search the data source, then the object"], [229, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [229, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [229, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.wind.jensen.JensenWake.init_wake_deltas": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "fdata", "The farm data"], [229, 3, 2, 0, "mdata", "The model data"], [229, 3, 2, 0, "n_points", "The number of wake evaluation points"], [229, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.jensen.JensenWake.initialize": [[229, 3, 2, 0, "algo", "The calculation algorithm"], [229, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.jensen.JensenWake.var": [[229, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.wind.porte_agel": [[231, 1, 1, 0, "PorteAgelModel", "Bases: object"], [232, 1, 1, 0, "PorteAgelWake", "Bases: DistSlicedWakeModel"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelModel": [[231, 2, 1, "id0", "__init__", ""], [231, 5, 1, 0, "alpha", "model parameter used to determine onset of far wake region"], [231, 5, 1, 0, "beta", "model parameter used to determine onset of far wake region"], [231, 2, 1, 0, "calc_data", "Calculate common model data, store it in mdata."], [231, 2, 1, 0, "clean", "Clean all data"], [231, 5, 1, 0, "ct_max", "The maximal value for ct, values beyond will be limited to this number, by default 0.9999"], [231, 2, 1, 0, "get_data", "Return data entry"], [231, 2, 1, 0, "has_data", "Check if data exists"], [231, 4, 1, 0, "pars", "Dictionary of the model parameters"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.calc_data": [[231, 3, 2, 0, "fdata", "The farm data"], [231, 3, 2, 0, "gamma", "The YAWM angles in radiants, shape: (n_states, n_points)"], [231, 3, 2, 0, "k", "The k parameter values, shape: (n_states, n_points)"], [231, 3, 2, 0, "mdata", "The model data"], [231, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [231, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.get_data": [[231, 3, 2, 0, "key", "The data key"], [231, 3, 2, 0, "mdata", "The model data"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.has_data": [[231, 3, 2, 0, "mdata", "The model data"], [231, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [231, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake": [[232, 5, 1, 0, "K", "The wake growth parameter k. If not given here it will be searched in the farm data."], [232, 5, 1, 0, "YAWM", "The yaw misalignment YAWM. If not given here it will be searched in the farm data."], [232, 2, 1, "id0", "__init__", ""], [232, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [232, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [232, 2, 1, 0, "finalize", "Finalizes the model."], [232, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [232, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [232, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [232, 2, 1, 0, "initialize", "Initializes the model."], [232, 4, 1, 0, "initialized", "Initialization flag."], [232, 5, 1, 0, "k_var", "The variable name for k"], [232, 5, 1, 0, "model", "The model for computing common data"], [232, 4, 1, 0, "model_id", "Unique id based on the model type."], [232, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.calc_wakes_spsel_x_yz": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "fdata", "The farm data"], [232, 3, 2, 0, "mdata", "The model data"], [232, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [232, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [232, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.contribute_to_wake_deltas": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "fdata", "The farm data"], [232, 3, 2, 0, "mdata", "The model data"], [232, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [232, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [232, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.finalize": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.finalize_wake_deltas": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [232, 3, 2, 0, "fdata", "The farm data"], [232, 3, 2, 0, "mdata", "The model data"], [232, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.get_data": [[232, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [232, 3, 2, 0, "data", "The data source"], [232, 3, 2, 0, "data_prio", "First search the data source, then the object"], [232, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [232, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [232, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.init_wake_deltas": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "fdata", "The farm data"], [232, 3, 2, 0, "mdata", "The model data"], [232, 3, 2, 0, "n_points", "The number of wake evaluation points"], [232, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.initialize": [[232, 3, 2, 0, "algo", "The calculation algorithm"], [232, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.var": [[232, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.wind.turbopark": [[234, 1, 1, 0, "TurbOParkWake", "Bases: GaussianWakeModel"], [235, 1, 1, 0, "TurbOParkWakeIX", "Bases: GaussianWakeModel"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake": [[234, 5, 1, 0, "A", "The wake growth parameter A."], [234, 2, 1, "id0", "__init__", ""], [234, 5, 1, 0, "c1", "Factor from Frandsen turbulence model"], [234, 5, 1, 0, "c2", "Factor from Frandsen turbulence model"], [234, 2, 1, 0, "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [234, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [234, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [234, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [234, 5, 1, 0, "ct_max", "The maximal value for ct, values beyond will be limited to this number"], [234, 2, 1, 0, "finalize", "Finalizes the model."], [234, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [234, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [234, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [234, 2, 1, 0, "initialize", "Initializes the model."], [234, 4, 1, 0, "initialized", "Initialization flag."], [234, 4, 1, 0, "model_id", "Unique id based on the model type."], [234, 5, 1, 0, "sbeta_factor", "Factor multiplying sbeta"], [234, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_amplitude_sigma_spsel": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [234, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_wakes_spsel_x_r": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x)"], [234, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [234, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_wakes_spsel_x_yz": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [234, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [234, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.contribute_to_wake_deltas": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [234, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [234, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.finalize": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.finalize_wake_deltas": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.get_data": [[234, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [234, 3, 2, 0, "data", "The data source"], [234, 3, 2, 0, "data_prio", "First search the data source, then the object"], [234, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [234, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [234, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.init_wake_deltas": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "fdata", "The farm data"], [234, 3, 2, 0, "mdata", "The model data"], [234, 3, 2, 0, "n_points", "The number of wake evaluation points"], [234, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.initialize": [[234, 3, 2, 0, "algo", "The calculation algorithm"], [234, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake.var": [[234, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX": [[235, 5, 1, 0, "A", "The wake growth parameter A."], [235, 2, 1, "id0", "__init__", ""], [235, 2, 1, 0, "calc_amplitude_sigma_spsel", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [235, 2, 1, 0, "calc_wakes_spsel_x_r", "Calculate wake deltas."], [235, 2, 1, 0, "calc_wakes_spsel_x_yz", "Calculate wake deltas."], [235, 2, 1, 0, "contribute_to_wake_deltas", "Calculate the contribution to the wake deltas by this wake model."], [235, 5, 1, 0, "ct_max", "The maximal value for ct, values beyond will be limited to this number"], [235, 5, 1, 0, "dx", "The step size of the integral"], [235, 2, 1, 0, "finalize", "Finalizes the model."], [235, 2, 1, 0, "finalize_wake_deltas", "Finalize the wake calculation."], [235, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [235, 2, 1, 0, "init_wake_deltas", "Initialize wake delta storage."], [235, 2, 1, 0, "initialize", "Initializes the model."], [235, 4, 1, 0, "initialized", "Initialization flag."], [235, 5, 1, 0, "ipars", "Additional parameters for centreline integration"], [235, 4, 1, 0, "model_id", "Unique id based on the model type."], [235, 5, 1, 0, "sbeta_factor", "Factor multiplying sbeta"], [235, 5, 1, 0, "ti_var", "The TI variable"], [235, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_amplitude_sigma_spsel": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [235, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_wakes_spsel_x_r": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "r", "The radial values for each x value, shape: (n_states, n_points, n_r_per_x)"], [235, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [235, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_wakes_spsel_x_yz": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [235, 3, 2, 0, "x", "The x values, shape: (n_states, n_points)"], [235, 3, 2, 0, "yz", "The yz values for each x value, shape: (n_states, n_points, n_yz_per_x, 2)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.contribute_to_wake_deltas": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [235, 3, 2, 0, "wake_coos", "The wake frame coordinates of the evaluation points, shape: (n_states, n_points, 3)"], [235, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.finalize": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.finalize_wake_deltas": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "amb_results", "The ambient results, key: variable name str, values: numpy.ndarray with shape (n_states, n_points)"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "wake_deltas", "The wake deltas, are being modified ob the fly. Key: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...) before evaluation, numpy.ndarray with shape (n_states, n_points) afterwards"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.get_data": [[235, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [235, 3, 2, 0, "data", "The data source"], [235, 3, 2, 0, "data_prio", "First search the data source, then the object"], [235, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [235, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [235, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.init_wake_deltas": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "fdata", "The farm data"], [235, 3, 2, 0, "mdata", "The model data"], [235, 3, 2, 0, "n_points", "The number of wake evaluation points"], [235, 3, 2, 0, "wake_deltas", "The wake deltas storage, add wake deltas on the fly. Keys: Variable name str, for which the wake delta applies, values: numpy.ndarray with shape (n_states, n_points, ...)"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.initialize": [[235, 3, 2, 0, "algo", "The calculation algorithm"], [235, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.var": [[235, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_superpositions": [[237, 0, 0, 1, "linear", ""], [239, 0, 0, 1, "max", ""], [241, 0, 0, 1, "product", ""], [243, 0, 0, 1, "quadratic", ""], [245, 0, 0, 1, "ti_superp", ""]], "foxes.models.wake_superpositions.linear": [[238, 1, 1, 0, "LinearSuperposition", "Bases: WakeSuperposition"]], "foxes.models.wake_superpositions.linear.LinearSuperposition": [[238, 2, 1, "id0", "__init__", ""], [238, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [238, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [238, 2, 1, 0, "finalize", "Finalizes the model."], [238, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [238, 2, 1, 0, "initialize", "Initializes the model."], [238, 4, 1, 0, "initialized", "Initialization flag."], [238, 5, 1, 0, "lim_high", "Higher limits of the final wake deltas. Key: variable str, value: float"], [238, 5, 1, 0, "lim_low", "Lower limits of the final wake deltas. Key: variable str, value: float"], [238, 4, 1, 0, "model_id", "Unique id based on the model type."], [238, 5, 1, 0, "scalings", "The scaling rules"], [238, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_superpositions.linear.LinearSuperposition.calc_final_wake_delta": [[238, 3, 2, 0, "algo", "The calculation algorithm"], [238, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [238, 3, 2, 0, "fdata", "The farm data"], [238, 3, 2, 0, "mdata", "The model data"], [238, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [238, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.models.wake_superpositions.linear.LinearSuperposition.calc_wakes_plus_wake": [[238, 3, 2, 0, "algo", "The calculation algorithm"], [238, 3, 2, 0, "fdata", "The farm data"], [238, 3, 2, 0, "mdata", "The model data"], [238, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [238, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [238, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [238, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [238, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.models.wake_superpositions.linear.LinearSuperposition.finalize": [[238, 3, 2, 0, "algo", "The calculation algorithm"], [238, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.linear.LinearSuperposition.get_data": [[238, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [238, 3, 2, 0, "data", "The data source"], [238, 3, 2, 0, "data_prio", "First search the data source, then the object"], [238, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [238, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [238, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_superpositions.linear.LinearSuperposition.initialize": [[238, 3, 2, 0, "algo", "The calculation algorithm"], [238, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.linear.LinearSuperposition.var": [[238, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_superpositions.max": [[240, 1, 1, 0, "MaxSuperposition", "Bases: WakeSuperposition"]], "foxes.models.wake_superpositions.max.MaxSuperposition": [[240, 2, 1, "id0", "__init__", ""], [240, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [240, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [240, 2, 1, 0, "finalize", "Finalizes the model."], [240, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [240, 2, 1, 0, "initialize", "Initializes the model."], [240, 4, 1, 0, "initialized", "Initialization flag."], [240, 4, 1, 0, "model_id", "Unique id based on the model type."], [240, 5, 1, 0, "scalings", "The scaling rules"], [240, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_superpositions.max.MaxSuperposition.calc_final_wake_delta": [[240, 3, 2, 0, "algo", "The calculation algorithm"], [240, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [240, 3, 2, 0, "fdata", "The farm data"], [240, 3, 2, 0, "mdata", "The model data"], [240, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [240, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.models.wake_superpositions.max.MaxSuperposition.calc_wakes_plus_wake": [[240, 3, 2, 0, "algo", "The calculation algorithm"], [240, 3, 2, 0, "fdata", "The farm data"], [240, 3, 2, 0, "mdata", "The model data"], [240, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [240, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [240, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [240, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [240, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.models.wake_superpositions.max.MaxSuperposition.finalize": [[240, 3, 2, 0, "algo", "The calculation algorithm"], [240, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.max.MaxSuperposition.get_data": [[240, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [240, 3, 2, 0, "data", "The data source"], [240, 3, 2, 0, "data_prio", "First search the data source, then the object"], [240, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [240, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [240, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_superpositions.max.MaxSuperposition.initialize": [[240, 3, 2, 0, "algo", "The calculation algorithm"], [240, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.max.MaxSuperposition.var": [[240, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_superpositions.product": [[242, 1, 1, 0, "ProductSuperposition", "Bases: WakeSuperposition"]], "foxes.models.wake_superpositions.product.ProductSuperposition": [[242, 2, 1, "id0", "__init__", ""], [242, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [242, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [242, 2, 1, 0, "finalize", "Finalizes the model."], [242, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [242, 2, 1, 0, "initialize", "Initializes the model."], [242, 4, 1, 0, "initialized", "Initialization flag."], [242, 5, 1, 0, "lim_high", "Higher limits of the final wake deltas. Key: variable str, value: float"], [242, 5, 1, 0, "lim_low", "Lower limits of the final wake deltas. Key: variable str, value: float"], [242, 4, 1, 0, "model_id", "Unique id based on the model type."], [242, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_superpositions.product.ProductSuperposition.calc_final_wake_delta": [[242, 3, 2, 0, "algo", "The calculation algorithm"], [242, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [242, 3, 2, 0, "fdata", "The farm data"], [242, 3, 2, 0, "mdata", "The model data"], [242, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [242, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.models.wake_superpositions.product.ProductSuperposition.calc_wakes_plus_wake": [[242, 3, 2, 0, "algo", "The calculation algorithm"], [242, 3, 2, 0, "fdata", "The farm data"], [242, 3, 2, 0, "mdata", "The model data"], [242, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [242, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [242, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [242, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [242, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.models.wake_superpositions.product.ProductSuperposition.finalize": [[242, 3, 2, 0, "algo", "The calculation algorithm"], [242, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.product.ProductSuperposition.get_data": [[242, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [242, 3, 2, 0, "data", "The data source"], [242, 3, 2, 0, "data_prio", "First search the data source, then the object"], [242, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [242, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [242, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_superpositions.product.ProductSuperposition.initialize": [[242, 3, 2, 0, "algo", "The calculation algorithm"], [242, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.product.ProductSuperposition.var": [[242, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_superpositions.quadratic": [[244, 1, 1, 0, "QuadraticSuperposition", "Bases: WakeSuperposition"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition": [[244, 2, 1, "id0", "__init__", ""], [244, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [244, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [244, 2, 1, 0, "finalize", "Finalizes the model."], [244, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [244, 2, 1, 0, "initialize", "Initializes the model."], [244, 4, 1, 0, "initialized", "Initialization flag."], [244, 4, 1, 0, "model_id", "Unique id based on the model type."], [244, 5, 1, 0, "scalings", "The scaling rules"], [244, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.calc_final_wake_delta": [[244, 3, 2, 0, "algo", "The calculation algorithm"], [244, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [244, 3, 2, 0, "fdata", "The farm data"], [244, 3, 2, 0, "mdata", "The model data"], [244, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [244, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.calc_wakes_plus_wake": [[244, 3, 2, 0, "algo", "The calculation algorithm"], [244, 3, 2, 0, "fdata", "The farm data"], [244, 3, 2, 0, "mdata", "The model data"], [244, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [244, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [244, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [244, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [244, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.finalize": [[244, 3, 2, 0, "algo", "The calculation algorithm"], [244, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.get_data": [[244, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [244, 3, 2, 0, "data", "The data source"], [244, 3, 2, 0, "data_prio", "First search the data source, then the object"], [244, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [244, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [244, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.initialize": [[244, 3, 2, 0, "algo", "The calculation algorithm"], [244, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.var": [[244, 3, 2, 0, "v", "The variable name"]], "foxes.models.wake_superpositions.ti_superp": [[246, 1, 1, 0, "TISuperposition", "Bases: WakeSuperposition"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition": [[246, 2, 1, "id0", "__init__", ""], [246, 2, 1, 0, "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [246, 2, 1, 0, "calc_wakes_plus_wake", "Add a wake delta to previous wake deltas."], [246, 2, 1, 0, "finalize", "Finalizes the model."], [246, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [246, 2, 1, 0, "initialize", "Initializes the model."], [246, 4, 1, 0, "initialized", "Initialization flag."], [246, 4, 1, 0, "model_id", "Unique id based on the model type."], [246, 5, 1, 0, "superp_to_amb", "The method for combining ambient with wake deltas: linear or quadratic"], [246, 5, 1, 0, "ti_superp", "The method choice: linear, quadratic, max"], [246, 2, 1, 0, "var", "Creates a model specific variable name."]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.calc_final_wake_delta": [[246, 3, 2, 0, "algo", "The calculation algorithm"], [246, 3, 2, 0, "amb_results", "The ambient results, shape: (n_states, n_points)"], [246, 3, 2, 0, "fdata", "The farm data"], [246, 3, 2, 0, "mdata", "The model data"], [246, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [246, 3, 2, 0, "wake_delta", "The wake deltas, shape: (n_states, n_points)"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.calc_wakes_plus_wake": [[246, 3, 2, 0, "algo", "The calculation algorithm"], [246, 3, 2, 0, "fdata", "The farm data"], [246, 3, 2, 0, "mdata", "The model data"], [246, 3, 2, 0, "sel_sp", "The selection of points, shape: (n_states, n_points)"], [246, 3, 2, 0, "states_source_turbine", "For each state, one turbine index for the wake causing turbine. Shape: (n_states,)"], [246, 3, 2, 0, "variable", "The variable name for which the wake deltas applies"], [246, 3, 2, 0, "wake_delta", "The original wake deltas, shape: (n_states, n_points)"], [246, 3, 2, 0, "wake_model_result", "The new wake deltas of the selected points, shape: (n_sel_sp,)"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.finalize": [[246, 3, 2, 0, "algo", "The calculation algorithm"], [246, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.get_data": [[246, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [246, 3, 2, 0, "data", "The data source"], [246, 3, 2, 0, "data_prio", "First search the data source, then the object"], [246, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [246, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [246, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.initialize": [[246, 3, 2, 0, "algo", "The calculation algorithm"], [246, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition.var": [[246, 3, 2, 0, "v", "The variable name"]], "foxes.opt": [[248, 0, 0, 1, "constraints", ""], [254, 0, 0, 1, "core", ""], [265, 0, 0, 1, "objectives", ""], [272, 0, 0, 1, "problems", ""]], "foxes.opt.constraints": [[249, 0, 0, 1, "area_geometry", ""], [252, 0, 0, 1, "min_dist", ""]], "foxes.opt.constraints.area_geometry": [[250, 1, 1, 0, "AreaGeometryConstraint", "Bases: FarmConstraint"], [251, 1, 1, 0, "FarmBoundaryConstraint", "Bases: AreaGeometryConstraint"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint": [[250, 5, 1, 0, "D", "Use this radius for rotor disc inside condition"], [250, 2, 1, "id0", "__init__", ""], [250, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [250, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [250, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [250, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [250, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [250, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [250, 4, 1, 0, "component_names", "The names of the components"], [250, 5, 1, 0, "disc_inside", "Ensure full rotor disc inside boundary"], [250, 4, 1, "id1", "farm", "The wind farm"], [250, 2, 1, 0, "finalize", "Finalize the object."], [250, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [250, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [250, 5, 1, 0, "geometry", "The area geometry"], [250, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [250, 2, 1, 0, "initialize", "Initialize the object."], [250, 4, 1, 0, "initialized", "Flag for finished initialization"], [250, 2, 1, 0, "n_components", "Returns the number of components of the function."], [250, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [250, 4, 1, 0, "n_vars_float", "The number of float variables"], [250, 4, 1, 0, "n_vars_int", "The number of int variables"], [250, 2, 1, 0, "print_models", "Prints all model names."], [250, 2, 1, 0, "rename_vars_float", "Rename float variables."], [250, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [250, 4, 1, "id2", "sel_turbines", "The list of selected turbines"], [250, 4, 1, 0, "var_names_float", "The names of the float variables"], [250, 4, 1, 0, "var_names_int", "The names of the integer variables"], [250, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [250, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.add_to_layout_figure": [[250, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.ana_deriv": [[250, 3, 2, 0, "components", "The selected components, or None for all"], [250, 3, 2, 0, "var", "The index of the differentiation float variable"], [250, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [250, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.calc_individual": [[250, 3, 2, 0, "components", "The selected components or None for all"], [250, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [250, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [250, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.calc_population": [[250, 3, 2, 0, "components", "The selected components or None for all"], [250, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [250, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [250, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.check_individual": [[250, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.check_population": [[250, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize": [[250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize_individual": [[250, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [250, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [250, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize_population": [[250, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [250, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [250, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.initialize": [[250, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.rename_vars_float": [[250, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.rename_vars_int": [[250, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint": [[251, 2, 1, "id0", "__init__", ""], [251, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [251, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [251, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [251, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [251, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [251, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [251, 4, 1, 0, "component_names", "The names of the components"], [251, 4, 1, 0, "farm", "The wind farm"], [251, 2, 1, 0, "finalize", "Finalize the object."], [251, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [251, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [251, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [251, 2, 1, 0, "initialize", "Initialize the object."], [251, 4, 1, 0, "initialized", "Flag for finished initialization"], [251, 2, 1, 0, "n_components", "Returns the number of components of the function."], [251, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [251, 4, 1, 0, "n_vars_float", "The number of float variables"], [251, 4, 1, 0, "n_vars_int", "The number of int variables"], [251, 2, 1, 0, "print_models", "Prints all model names."], [251, 2, 1, 0, "rename_vars_float", "Rename float variables."], [251, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [251, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [251, 4, 1, 0, "var_names_float", "The names of the float variables"], [251, 4, 1, 0, "var_names_int", "The names of the integer variables"], [251, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [251, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.add_to_layout_figure": [[251, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.ana_deriv": [[251, 3, 2, 0, "components", "The selected components, or None for all"], [251, 3, 2, 0, "var", "The index of the differentiation float variable"], [251, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [251, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.calc_individual": [[251, 3, 2, 0, "components", "The selected components or None for all"], [251, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [251, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [251, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.calc_population": [[251, 3, 2, 0, "components", "The selected components or None for all"], [251, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [251, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [251, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.check_individual": [[251, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.check_population": [[251, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize": [[251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize_individual": [[251, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [251, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [251, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize_population": [[251, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [251, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [251, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.initialize": [[251, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.rename_vars_float": [[251, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.rename_vars_int": [[251, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.constraints.min_dist": [[253, 1, 1, 0, "MinDistConstraint", "Bases: FarmConstraint"]], "foxes.opt.constraints.min_dist.MinDistConstraint": [[253, 2, 1, "id0", "__init__", ""], [253, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [253, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [253, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [253, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [253, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [253, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [253, 4, 1, 0, "component_names", "The names of the components"], [253, 4, 1, "id1", "farm", "The wind farm"], [253, 2, 1, 0, "finalize", "Finalize the object."], [253, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [253, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [253, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [253, 2, 1, 0, "initialize", "Initialize the constaint."], [253, 4, 1, 0, "initialized", "Flag for finished initialization"], [253, 5, 1, 0, "min_dist", "The minimal distance"], [253, 5, 1, 0, "min_dist_unit", "The minimal distance unit, either m or D"], [253, 2, 1, 0, "n_components", "Returns the number of components of the function."], [253, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [253, 4, 1, 0, "n_vars_float", "The number of float variables"], [253, 4, 1, 0, "n_vars_int", "The number of int variables"], [253, 2, 1, 0, "print_models", "Prints all model names."], [253, 2, 1, 0, "rename_vars_float", "Rename float variables."], [253, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [253, 4, 1, "id2", "sel_turbines", "The list of selected turbines"], [253, 4, 1, 0, "var_names_float", "The names of the float variables"], [253, 4, 1, 0, "var_names_int", "The names of the integer variables"], [253, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [253, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.constraints.min_dist.MinDistConstraint.add_to_layout_figure": [[253, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.constraints.min_dist.MinDistConstraint.ana_deriv": [[253, 3, 2, 0, "components", "The selected components, or None for all"], [253, 3, 2, 0, "var", "The index of the differentiation float variable"], [253, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [253, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.min_dist.MinDistConstraint.calc_individual": [[253, 3, 2, 0, "components", "The selected components or None for all"], [253, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [253, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [253, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.constraints.min_dist.MinDistConstraint.calc_population": [[253, 3, 2, 0, "components", "The selected components or None for all"], [253, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [253, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [253, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.constraints.min_dist.MinDistConstraint.check_individual": [[253, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.check_population": [[253, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.finalize": [[253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.finalize_individual": [[253, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [253, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [253, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.finalize_population": [[253, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [253, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [253, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.initialize": [[253, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.constraints.min_dist.MinDistConstraint.rename_vars_float": [[253, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.constraints.min_dist.MinDistConstraint.rename_vars_int": [[253, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.core": [[255, 0, 0, 1, "farm_constraint", ""], [257, 0, 0, 1, "farm_objective", ""], [259, 0, 0, 1, "farm_opt_problem", ""], [261, 0, 0, 1, "farm_vars_problem", ""], [263, 0, 0, 1, "pop_states", ""]], "foxes.opt.core.farm_constraint": [[256, 1, 1, 0, "FarmConstraint", "Bases: Constraint"]], "foxes.opt.core.farm_constraint.FarmConstraint": [[256, 2, 1, "id0", "__init__", ""], [256, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [256, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [256, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [256, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [256, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [256, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [256, 4, 1, 0, "component_names", "The names of the components"], [256, 4, 1, 0, "farm", "The wind farm"], [256, 2, 1, 0, "finalize", "Finalize the object."], [256, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [256, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [256, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [256, 2, 1, 0, "initialize", "Initialize the object."], [256, 4, 1, 0, "initialized", "Flag for finished initialization"], [256, 2, 1, 0, "n_components", "Returns the number of components of the function."], [256, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [256, 4, 1, 0, "n_vars_float", "The number of float variables"], [256, 4, 1, 0, "n_vars_int", "The number of int variables"], [256, 2, 1, 0, "print_models", "Prints all model names."], [256, 2, 1, 0, "rename_vars_float", "Rename float variables."], [256, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [256, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [256, 4, 1, 0, "var_names_float", "The names of the float variables"], [256, 4, 1, 0, "var_names_int", "The names of the integer variables"], [256, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [256, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.core.farm_constraint.FarmConstraint.add_to_layout_figure": [[256, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.core.farm_constraint.FarmConstraint.ana_deriv": [[256, 3, 2, 0, "components", "The selected components, or None for all"], [256, 3, 2, 0, "var", "The index of the differentiation float variable"], [256, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [256, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_constraint.FarmConstraint.calc_individual": [[256, 3, 2, 0, "components", "The selected components or None for all"], [256, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [256, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [256, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_constraint.FarmConstraint.calc_population": [[256, 3, 2, 0, "components", "The selected components or None for all"], [256, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [256, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [256, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_constraint.FarmConstraint.check_individual": [[256, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.check_population": [[256, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.finalize": [[256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.finalize_individual": [[256, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [256, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [256, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.finalize_population": [[256, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [256, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [256, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.initialize": [[256, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_constraint.FarmConstraint.rename_vars_float": [[256, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.core.farm_constraint.FarmConstraint.rename_vars_int": [[256, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.core.farm_objective": [[258, 1, 1, 0, "FarmObjective", "Bases: Objective"]], "foxes.opt.core.farm_objective.FarmObjective": [[258, 2, 1, "id0", "__init__", ""], [258, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [258, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [258, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [258, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [258, 4, 1, 0, "component_names", "The names of the components"], [258, 4, 1, 0, "farm", "The wind farm"], [258, 2, 1, 0, "finalize", "Finalize the object."], [258, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [258, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [258, 2, 1, 0, "initialize", "Initialize the object."], [258, 4, 1, 0, "initialized", "Flag for finished initialization"], [258, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [258, 2, 1, 0, "n_components", "Returns the number of components of the function."], [258, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [258, 4, 1, 0, "n_vars_float", "The number of float variables"], [258, 4, 1, 0, "n_vars_int", "The number of int variables"], [258, 2, 1, 0, "print_models", "Prints all model names."], [258, 2, 1, 0, "rename_vars_float", "Rename float variables."], [258, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [258, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [258, 4, 1, 0, "var_names_float", "The names of the float variables"], [258, 4, 1, 0, "var_names_int", "The names of the integer variables"], [258, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [258, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.core.farm_objective.FarmObjective.add_to_layout_figure": [[258, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.core.farm_objective.FarmObjective.ana_deriv": [[258, 3, 2, 0, "components", "The selected components, or None for all"], [258, 3, 2, 0, "var", "The index of the differentiation float variable"], [258, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [258, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_objective.FarmObjective.calc_individual": [[258, 3, 2, 0, "components", "The selected components or None for all"], [258, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [258, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [258, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_objective.FarmObjective.calc_population": [[258, 3, 2, 0, "components", "The selected components or None for all"], [258, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [258, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [258, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_objective.FarmObjective.finalize": [[258, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_objective.FarmObjective.finalize_individual": [[258, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [258, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [258, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [258, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_objective.FarmObjective.finalize_population": [[258, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [258, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [258, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [258, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_objective.FarmObjective.initialize": [[258, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_objective.FarmObjective.rename_vars_float": [[258, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.core.farm_objective.FarmObjective.rename_vars_int": [[258, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.core.farm_opt_problem": [[260, 1, 1, 0, "FarmOptProblem", "Bases: Problem"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem": [[260, 2, 1, "id0", "__init__", ""], [260, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [260, 2, 1, 0, "add_objective", "Add an objective to the problem."], [260, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [260, 5, 1, 0, "algo", "The algorithm"], [260, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [260, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [260, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [260, 5, 1, 0, "calc_farm_args", "Additional parameters for algo.calc_farm()"], [260, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [260, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [260, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [260, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [260, 4, 1, 0, "counter", "The current value of the application counter"], [260, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [260, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [260, 4, 1, 0, "farm", "The wind farm"], [260, 2, 1, 0, "finalize", "Finalize the object."], [260, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [260, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [260, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [260, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [260, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [260, 2, 1, 0, "initialize", "Initialize the object."], [260, 4, 1, 0, "initialized", "Flag for finished initialization"], [260, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [260, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [260, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [260, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [260, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [260, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [260, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [260, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [260, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [260, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [260, 4, 1, 0, "n_vars_float", "The number of float variables"], [260, 4, 1, 0, "n_vars_int", "The number of int variables"], [260, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [260, 5, 1, 0, "runner", "The runner for running the algorithm"], [260, 4, 1, 0, "sel_turbines", "The selected turbines"], [260, 2, 1, 0, "tvar", "Gets turbine variable name"], [260, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [260, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [260, 2, 1, 0, "var_names_float", "The names of float variables."], [260, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_constraint": [[260, 3, 2, 0, "constraint", "The constraint"], [260, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [260, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_objective": [[260, 3, 2, 0, "objective", "The objective"], [260, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [260, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_to_layout_figure": [[260, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.apply_individual": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.apply_population": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.calc_gradients": [[260, 3, 2, 0, "components", "The function's component selection, or None for all"], [260, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [260, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [260, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [260, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [260, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.check_constraints_individual": [[260, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.check_constraints_population": [[260, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.evaluate_individual": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.evaluate_population": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize": [[260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize_individual": [[260, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize_population": [[260, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [260, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.get_gradients": [[260, 3, 2, 0, "components", "The function's component selection, or None for all"], [260, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [260, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [260, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.initialize": [[260, 3, 2, 0, "drop_vars", "Variables that decide about dropping model from algo.keep_models"], [260, 3, 2, 0, "exclude", "The model names to be excluded, default is original states and problem model names"], [260, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.parse_tvar": [[260, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.tvar": [[260, 3, 2, 0, "turbine_i", "The turbine index"], [260, 3, 2, 0, "var", "The variable name"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.update_problem_individual": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem.update_problem_population": [[260, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [260, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.opt.core.farm_vars_problem": [[262, 1, 1, 0, "FarmVarsProblem", "Bases: FarmOptProblem"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem": [[262, 2, 1, "id0", "__init__", ""], [262, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [262, 2, 1, 0, "add_objective", "Add an objective to the problem."], [262, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [262, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [262, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [262, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [262, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [262, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [262, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [262, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [262, 4, 1, 0, "counter", "The current value of the application counter"], [262, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [262, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [262, 4, 1, 0, "farm", "The wind farm"], [262, 2, 1, 0, "finalize", "Finalize the object."], [262, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [262, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [262, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [262, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [262, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [262, 2, 1, 0, "initialize", "Initialize the object."], [262, 4, 1, 0, "initialized", "Flag for finished initialization"], [262, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [262, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [262, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [262, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [262, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [262, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [262, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [262, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [262, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [262, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [262, 4, 1, 0, "n_vars_float", "The number of float variables"], [262, 4, 1, 0, "n_vars_int", "The number of int variables"], [262, 2, 1, 0, "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [262, 2, 1, 0, "opt2farm_vars_population", "Translates optimization variables to farm variables"], [262, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [262, 4, 1, 0, "sel_turbines", "The selected turbines"], [262, 2, 1, 0, "tvar", "Gets turbine variable name"], [262, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [262, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [262, 2, 1, 0, "var_names_float", "The names of float variables."], [262, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_constraint": [[262, 3, 2, 0, "constraint", "The constraint"], [262, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [262, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_objective": [[262, 3, 2, 0, "objective", "The objective"], [262, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [262, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_to_layout_figure": [[262, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.apply_individual": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.apply_population": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.calc_gradients": [[262, 3, 2, 0, "components", "The function's component selection, or None for all"], [262, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [262, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [262, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [262, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [262, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.check_constraints_individual": [[262, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.check_constraints_population": [[262, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.evaluate_individual": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.evaluate_population": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize": [[262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize_individual": [[262, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize_population": [[262, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [262, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.get_gradients": [[262, 3, 2, 0, "components", "The function's component selection, or None for all"], [262, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [262, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [262, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.initialize": [[262, 3, 2, 0, "kwargs", "Additional parameters for super class init"], [262, 3, 2, 0, "post_rotor_vars", "The post_rotor farm variables. If dict, then key: sub-model str, value: var names as list of str"], [262, 3, 2, 0, "pre_rotor_vars", "The pre_rotor farm variables. If dict, then key: sub-model str, value: var names as list of str"], [262, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.opt2farm_vars_individual": [[262, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.opt2farm_vars_population": [[262, 3, 2, 0, "n_states", "The number of original (non-pop) states"], [262, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_pop, n_vars_float)"], [262, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.parse_tvar": [[262, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.tvar": [[262, 3, 2, 0, "turbine_i", "The turbine index"], [262, 3, 2, 0, "var", "The variable name"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.update_problem_individual": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem.update_problem_population": [[262, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [262, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.opt.core.pop_states": [[264, 1, 1, 0, "PopStates", "Bases: States"]], "foxes.opt.core.pop_states.PopStates": [[264, 2, 1, "id0", "__init__", ""], [264, 2, 1, 0, "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [264, 2, 1, 0, "finalize", "Finalizes the model."], [264, 2, 1, 0, "get_data", "Getter for a data entry in either the given data source, or the model object."], [264, 2, 1, 0, "index", "The index list"], [264, 2, 1, 0, "initialize", "Initializes the model."], [264, 4, 1, 0, "initialized", "Initialization flag."], [264, 4, 1, 0, "model_id", "Unique id based on the model type."], [264, 5, 1, 0, "n_pop", "The population size"], [264, 2, 1, 0, "output_point_vars", "The variables which are being modified by the model."], [264, 2, 1, 0, "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [264, 2, 1, 0, "size", "The total number of states."], [264, 5, 1, 0, "states", "The original states"], [264, 2, 1, 0, "var", "Creates a model specific variable name."], [264, 2, 1, 0, "weights", "The statistical weights of all states."]], "foxes.opt.core.pop_states.PopStates.calculate": [[264, 3, 2, 0, "algo", "The calculation algorithm"], [264, 3, 2, 0, "fdata", "The farm data"], [264, 3, 2, 0, "mdata", "The model data"], [264, 3, 2, 0, "pdata", "The point data"]], "foxes.opt.core.pop_states.PopStates.finalize": [[264, 3, 2, 0, "algo", "The calculation algorithm"], [264, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.pop_states.PopStates.get_data": [[264, 3, 2, 0, "accept_none", "Do not throw an error if data entry is None or np.nan"], [264, 3, 2, 0, "data", "The data source"], [264, 3, 2, 0, "data_prio", "First search the data source, then the object"], [264, 3, 2, 0, "st_sel", "If given, get the specified state-turbine subset"], [264, 3, 2, 0, "upcast", "Either 'farm' or 'points', broadcasts potential scalar data to numpy.ndarray with dimensions (n_states, n_turbines) or (n_states, n_points), respectively"], [264, 3, 2, 0, "variable", "The variable, serves as data key"]], "foxes.opt.core.pop_states.PopStates.initialize": [[264, 3, 2, 0, "algo", "The calculation algorithm"], [264, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.core.pop_states.PopStates.output_point_vars": [[264, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.opt.core.pop_states.PopStates.run_calculation": [[264, 3, 2, 0, "algo", "The calculation algorithm"], [264, 3, 2, 0, "out_vars", "The calculation output variables"]], "foxes.opt.core.pop_states.PopStates.var": [[264, 3, 2, 0, "v", "The variable name"]], "foxes.opt.core.pop_states.PopStates.weights": [[264, 3, 2, 0, "algo", "The calculation algorithm"]], "foxes.opt.objectives": [[266, 0, 0, 1, "farm_vars", ""], [270, 0, 0, 1, "max_n_turbines", ""]], "foxes.opt.objectives.farm_vars": [[267, 1, 1, 0, "FarmVarObjective", "Bases: FarmObjective"], [268, 1, 1, 0, "MaxFarmPower", "Bases: FarmVarObjective"], [269, 1, 1, 0, "MinimalMaxTI", "Bases: FarmVarObjective"]], "foxes.opt.objectives.farm_vars.FarmVarObjective": [[267, 2, 1, "id0", "__init__", ""], [267, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [267, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [267, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [267, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [267, 4, 1, 0, "component_names", "The names of the components"], [267, 5, 1, 0, "deps", "The foxes variables on which the variable depends, or None for all"], [267, 4, 1, 0, "farm", "The wind farm"], [267, 2, 1, 0, "finalize", "Finalize the object."], [267, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [267, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [267, 2, 1, 0, "initialize", "Initialize the object."], [267, 4, 1, 0, "initialized", "Flag for finished initialization"], [267, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [267, 5, 1, 0, "minimize", "Switch for maximizing or minimizing"], [267, 2, 1, 0, "n_components", "Returns the number of components of the function."], [267, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [267, 4, 1, 0, "n_vars_float", "The number of float variables"], [267, 4, 1, 0, "n_vars_int", "The number of int variables"], [267, 2, 1, 0, "print_models", "Prints all model names."], [267, 2, 1, 0, "rename_vars_float", "Rename float variables."], [267, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [267, 5, 1, 0, "rules", "Contraction rules. Key: coordinate name str, value is str: min, max, sum, mean"], [267, 5, 1, 0, "scale", "The scaling factor"], [267, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [267, 4, 1, 0, "var_names_float", "The names of the float variables"], [267, 4, 1, 0, "var_names_int", "The names of the integer variables"], [267, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [267, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"], [267, 5, 1, 0, "variable", "The variable name"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.add_to_layout_figure": [[267, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.ana_deriv": [[267, 3, 2, 0, "components", "The selected components, or None for all"], [267, 3, 2, 0, "var", "The index of the differentiation float variable"], [267, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [267, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.calc_individual": [[267, 3, 2, 0, "components", "The selected components or None for all"], [267, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [267, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [267, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.calc_population": [[267, 3, 2, 0, "components", "The selected components or None for all"], [267, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [267, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [267, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize": [[267, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize_individual": [[267, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [267, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [267, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [267, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize_population": [[267, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [267, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [267, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [267, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.initialize": [[267, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.rename_vars_float": [[267, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.farm_vars.FarmVarObjective.rename_vars_int": [[267, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.farm_vars.MaxFarmPower": [[268, 2, 1, "id0", "__init__", ""], [268, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [268, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [268, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [268, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [268, 4, 1, 0, "component_names", "The names of the components"], [268, 4, 1, 0, "farm", "The wind farm"], [268, 2, 1, 0, "finalize", "Finalize the object."], [268, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [268, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [268, 2, 1, 0, "initialize", "Initialize the object."], [268, 4, 1, 0, "initialized", "Flag for finished initialization"], [268, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [268, 2, 1, 0, "n_components", "Returns the number of components of the function."], [268, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [268, 4, 1, 0, "n_vars_float", "The number of float variables"], [268, 4, 1, 0, "n_vars_int", "The number of int variables"], [268, 2, 1, 0, "print_models", "Prints all model names."], [268, 2, 1, 0, "rename_vars_float", "Rename float variables."], [268, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [268, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [268, 4, 1, 0, "var_names_float", "The names of the float variables"], [268, 4, 1, 0, "var_names_int", "The names of the integer variables"], [268, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [268, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.add_to_layout_figure": [[268, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.ana_deriv": [[268, 3, 2, 0, "components", "The selected components, or None for all"], [268, 3, 2, 0, "var", "The index of the differentiation float variable"], [268, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [268, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.calc_individual": [[268, 3, 2, 0, "components", "The selected components or None for all"], [268, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [268, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [268, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.calc_population": [[268, 3, 2, 0, "components", "The selected components or None for all"], [268, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [268, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [268, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize": [[268, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize_individual": [[268, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [268, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [268, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [268, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize_population": [[268, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [268, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [268, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [268, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.initialize": [[268, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.rename_vars_float": [[268, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.farm_vars.MaxFarmPower.rename_vars_int": [[268, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI": [[269, 2, 1, "id0", "__init__", ""], [269, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [269, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [269, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [269, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [269, 4, 1, 0, "component_names", "The names of the components"], [269, 4, 1, 0, "farm", "The wind farm"], [269, 2, 1, 0, "finalize", "Finalize the object."], [269, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [269, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [269, 2, 1, 0, "initialize", "Initialize the object."], [269, 4, 1, 0, "initialized", "Flag for finished initialization"], [269, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [269, 2, 1, 0, "n_components", "Returns the number of components of the function."], [269, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [269, 4, 1, 0, "n_vars_float", "The number of float variables"], [269, 4, 1, 0, "n_vars_int", "The number of int variables"], [269, 2, 1, 0, "print_models", "Prints all model names."], [269, 2, 1, 0, "rename_vars_float", "Rename float variables."], [269, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [269, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [269, 4, 1, 0, "var_names_float", "The names of the float variables"], [269, 4, 1, 0, "var_names_int", "The names of the integer variables"], [269, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [269, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.add_to_layout_figure": [[269, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.ana_deriv": [[269, 3, 2, 0, "components", "The selected components, or None for all"], [269, 3, 2, 0, "var", "The index of the differentiation float variable"], [269, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [269, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.calc_individual": [[269, 3, 2, 0, "components", "The selected components or None for all"], [269, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [269, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [269, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.calc_population": [[269, 3, 2, 0, "components", "The selected components or None for all"], [269, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [269, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [269, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize": [[269, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize_individual": [[269, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [269, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [269, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [269, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize_population": [[269, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [269, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [269, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [269, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.initialize": [[269, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.rename_vars_float": [[269, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI.rename_vars_int": [[269, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.max_n_turbines": [[271, 1, 1, 0, "MaxNTurbines", "Bases: FarmObjective"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines": [[271, 2, 1, "id0", "__init__", ""], [271, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [271, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [271, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [271, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [271, 5, 1, 0, "check_valid", "Check FC.VALID variable before counting"], [271, 4, 1, 0, "component_names", "The names of the components"], [271, 4, 1, 0, "farm", "The wind farm"], [271, 2, 1, 0, "finalize", "Finalize the object."], [271, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [271, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [271, 2, 1, 0, "initialize", "Initialize the object."], [271, 4, 1, 0, "initialized", "Flag for finished initialization"], [271, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [271, 2, 1, 0, "n_components", "Returns the number of components of the function."], [271, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [271, 4, 1, 0, "n_vars_float", "The number of float variables"], [271, 4, 1, 0, "n_vars_int", "The number of int variables"], [271, 2, 1, 0, "print_models", "Prints all model names."], [271, 2, 1, 0, "rename_vars_float", "Rename float variables."], [271, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [271, 4, 1, 0, "sel_turbines", "The list of selected turbines"], [271, 4, 1, 0, "var_names_float", "The names of the float variables"], [271, 4, 1, 0, "var_names_int", "The names of the integer variables"], [271, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [271, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.add_to_layout_figure": [[271, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.ana_deriv": [[271, 3, 2, 0, "components", "The selected components, or None for all"], [271, 3, 2, 0, "var", "The index of the differentiation float variable"], [271, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [271, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.calc_individual": [[271, 3, 2, 0, "components", "The selected components or None for all"], [271, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [271, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [271, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.calc_population": [[271, 3, 2, 0, "components", "The selected components or None for all"], [271, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [271, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [271, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize": [[271, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize_individual": [[271, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [271, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [271, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [271, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize_population": [[271, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [271, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [271, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [271, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.initialize": [[271, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.rename_vars_float": [[271, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines.rename_vars_int": [[271, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems": [[273, 0, 0, 1, "layout", ""], [304, 0, 0, 1, "opt_farm_vars", ""]], "foxes.opt.problems.layout": [[274, 0, 0, 1, "farm_layout", ""], [276, 0, 0, 1, "geom_layouts", ""], [300, 0, 0, 1, "reggrids_layout", ""], [302, 0, 0, 1, "regular_layout", ""]], "foxes.opt.problems.layout.farm_layout": [[275, 1, 1, 0, "FarmLayoutOptProblem", "Bases: FarmVarsProblem"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem": [[275, 2, 1, "id0", "__init__", ""], [275, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [275, 2, 1, 0, "add_objective", "Add an objective to the problem."], [275, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [275, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [275, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [275, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [275, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [275, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [275, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [275, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [275, 4, 1, 0, "counter", "The current value of the application counter"], [275, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [275, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [275, 4, 1, 0, "farm", "The wind farm"], [275, 2, 1, 0, "finalize", "Finalize the object."], [275, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [275, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [275, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [275, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [275, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [275, 2, 1, 0, "initialize", "Initialize the object."], [275, 4, 1, 0, "initialized", "Flag for finished initialization"], [275, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [275, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [275, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [275, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [275, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [275, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [275, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [275, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [275, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [275, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [275, 4, 1, 0, "n_vars_float", "The number of float variables"], [275, 4, 1, 0, "n_vars_int", "The number of int variables"], [275, 2, 1, 0, "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [275, 2, 1, 0, "opt2farm_vars_population", "Translates optimization variables to farm variables"], [275, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [275, 4, 1, 0, "sel_turbines", "The selected turbines"], [275, 2, 1, 0, "tvar", "Gets turbine variable name"], [275, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [275, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [275, 2, 1, 0, "var_names_float", "The names of float variables."], [275, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_constraint": [[275, 3, 2, 0, "constraint", "The constraint"], [275, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [275, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_objective": [[275, 3, 2, 0, "objective", "The objective"], [275, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [275, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_to_layout_figure": [[275, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.apply_individual": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.apply_population": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.calc_gradients": [[275, 3, 2, 0, "components", "The function's component selection, or None for all"], [275, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [275, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [275, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [275, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [275, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.check_constraints_individual": [[275, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.check_constraints_population": [[275, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.evaluate_individual": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.evaluate_population": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize": [[275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize_individual": [[275, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize_population": [[275, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [275, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.get_gradients": [[275, 3, 2, 0, "components", "The function's component selection, or None for all"], [275, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [275, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [275, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.initialize": [[275, 3, 2, 0, "kwargs", "Additional parameters for super class init"], [275, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.opt2farm_vars_individual": [[275, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.opt2farm_vars_population": [[275, 3, 2, 0, "n_states", "The number of original (non-pop) states"], [275, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_pop, n_vars_float)"], [275, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.parse_tvar": [[275, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.tvar": [[275, 3, 2, 0, "turbine_i", "The turbine index"], [275, 3, 2, 0, "var", "The variable name"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.update_problem_individual": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.update_problem_population": [[275, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [275, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts": [[277, 0, 0, 1, "constraints", ""], [285, 0, 0, 1, "geom_layout", ""], [287, 0, 0, 1, "geom_layout_gridded", ""], [289, 0, 0, 1, "geom_reggrid", ""], [291, 0, 0, 1, "geom_reggrids", ""], [293, 0, 0, 1, "objectives", ""]], "foxes.opt.problems.layout.geom_layouts.constraints": [[278, 1, 1, 0, "Boundary", "Bases: Constraint"], [279, 1, 1, 0, "CFixN", "Bases: Constraint"], [280, 1, 1, 0, "CMaxN", "Bases: Constraint"], [281, 1, 1, 0, "CMinDensity", "Bases: Constraint"], [282, 1, 1, 0, "CMinN", "Bases: Constraint"], [283, 1, 1, 0, "MinDist", "Bases: Constraint"], [284, 1, 1, 0, "Valid", "Bases: Constraint"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary": [[278, 2, 1, "id0", "__init__", ""], [278, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [278, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [278, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [278, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [278, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [278, 4, 1, 0, "component_names", "The names of the components"], [278, 2, 1, 0, "finalize", "Finalize the object."], [278, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [278, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [278, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [278, 2, 1, 0, "initialize", "Initialize the object."], [278, 4, 1, 0, "initialized", "Flag for finished initialization"], [278, 2, 1, 0, "n_components", "Returns the number of components of the function."], [278, 4, 1, 0, "n_vars_float", "The number of float variables"], [278, 4, 1, 0, "n_vars_int", "The number of int variables"], [278, 2, 1, 0, "rename_vars_float", "Rename float variables."], [278, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [278, 4, 1, 0, "var_names_float", "The names of the float variables"], [278, 4, 1, 0, "var_names_int", "The names of the integer variables"], [278, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [278, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.ana_deriv": [[278, 3, 2, 0, "components", "The selected components, or None for all"], [278, 3, 2, 0, "var", "The index of the differentiation float variable"], [278, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [278, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_individual": [[278, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [278, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [278, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_population": [[278, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [278, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [278, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.check_individual": [[278, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.check_population": [[278, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize": [[278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize_individual": [[278, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [278, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [278, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize_population": [[278, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [278, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [278, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.initialize": [[278, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.rename_vars_float": [[278, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.rename_vars_int": [[278, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN": [[279, 2, 1, "id0", "__init__", ""], [279, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [279, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [279, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [279, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [279, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [279, 4, 1, 0, "component_names", "The names of the components"], [279, 2, 1, 0, "finalize", "Finalize the object."], [279, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [279, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [279, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [279, 2, 1, 0, "initialize", "Initialize the object."], [279, 4, 1, 0, "initialized", "Flag for finished initialization"], [279, 2, 1, 0, "n_components", "Returns the number of components of the function."], [279, 4, 1, 0, "n_vars_float", "The number of float variables"], [279, 4, 1, 0, "n_vars_int", "The number of int variables"], [279, 2, 1, 0, "rename_vars_float", "Rename float variables."], [279, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [279, 4, 1, 0, "var_names_float", "The names of the float variables"], [279, 4, 1, 0, "var_names_int", "The names of the integer variables"], [279, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [279, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.ana_deriv": [[279, 3, 2, 0, "components", "The selected components, or None for all"], [279, 3, 2, 0, "var", "The index of the differentiation float variable"], [279, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [279, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_individual": [[279, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [279, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [279, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_population": [[279, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [279, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [279, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.check_individual": [[279, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.check_population": [[279, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize": [[279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize_individual": [[279, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [279, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [279, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize_population": [[279, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [279, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [279, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.initialize": [[279, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.rename_vars_float": [[279, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.rename_vars_int": [[279, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN": [[280, 2, 1, "id0", "__init__", ""], [280, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [280, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [280, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [280, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [280, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [280, 4, 1, 0, "component_names", "The names of the components"], [280, 2, 1, 0, "finalize", "Finalize the object."], [280, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [280, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [280, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [280, 2, 1, 0, "initialize", "Initialize the object."], [280, 4, 1, 0, "initialized", "Flag for finished initialization"], [280, 2, 1, 0, "n_components", "Returns the number of components of the function."], [280, 4, 1, 0, "n_vars_float", "The number of float variables"], [280, 4, 1, 0, "n_vars_int", "The number of int variables"], [280, 2, 1, 0, "rename_vars_float", "Rename float variables."], [280, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [280, 4, 1, 0, "var_names_float", "The names of the float variables"], [280, 4, 1, 0, "var_names_int", "The names of the integer variables"], [280, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [280, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.ana_deriv": [[280, 3, 2, 0, "components", "The selected components, or None for all"], [280, 3, 2, 0, "var", "The index of the differentiation float variable"], [280, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [280, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_individual": [[280, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [280, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [280, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_population": [[280, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [280, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [280, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.check_individual": [[280, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.check_population": [[280, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize": [[280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize_individual": [[280, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [280, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [280, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize_population": [[280, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [280, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [280, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.initialize": [[280, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.rename_vars_float": [[280, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.rename_vars_int": [[280, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity": [[281, 2, 1, "id0", "__init__", ""], [281, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [281, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [281, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [281, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [281, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [281, 4, 1, 0, "component_names", "The names of the components"], [281, 2, 1, 0, "finalize", "Finalize the object."], [281, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [281, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [281, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [281, 2, 1, 0, "initialize", "Initialize the object."], [281, 4, 1, 0, "initialized", "Flag for finished initialization"], [281, 2, 1, 0, "n_components", "Returns the number of components of the function."], [281, 4, 1, 0, "n_vars_float", "The number of float variables"], [281, 4, 1, 0, "n_vars_int", "The number of int variables"], [281, 2, 1, 0, "rename_vars_float", "Rename float variables."], [281, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [281, 4, 1, 0, "var_names_float", "The names of the float variables"], [281, 4, 1, 0, "var_names_int", "The names of the integer variables"], [281, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [281, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.ana_deriv": [[281, 3, 2, 0, "components", "The selected components, or None for all"], [281, 3, 2, 0, "var", "The index of the differentiation float variable"], [281, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [281, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_individual": [[281, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [281, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [281, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_population": [[281, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [281, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [281, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.check_individual": [[281, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.check_population": [[281, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize": [[281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize_individual": [[281, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [281, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [281, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize_population": [[281, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [281, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [281, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialize": [[281, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.rename_vars_float": [[281, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.rename_vars_int": [[281, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN": [[282, 2, 1, "id0", "__init__", ""], [282, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [282, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [282, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [282, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [282, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [282, 4, 1, 0, "component_names", "The names of the components"], [282, 2, 1, 0, "finalize", "Finalize the object."], [282, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [282, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [282, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [282, 2, 1, 0, "initialize", "Initialize the object."], [282, 4, 1, 0, "initialized", "Flag for finished initialization"], [282, 2, 1, 0, "n_components", "Returns the number of components of the function."], [282, 4, 1, 0, "n_vars_float", "The number of float variables"], [282, 4, 1, 0, "n_vars_int", "The number of int variables"], [282, 2, 1, 0, "rename_vars_float", "Rename float variables."], [282, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [282, 4, 1, 0, "var_names_float", "The names of the float variables"], [282, 4, 1, 0, "var_names_int", "The names of the integer variables"], [282, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [282, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.ana_deriv": [[282, 3, 2, 0, "components", "The selected components, or None for all"], [282, 3, 2, 0, "var", "The index of the differentiation float variable"], [282, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [282, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_individual": [[282, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [282, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [282, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_population": [[282, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [282, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [282, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.check_individual": [[282, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.check_population": [[282, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize": [[282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize_individual": [[282, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [282, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [282, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize_population": [[282, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [282, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [282, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.initialize": [[282, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.rename_vars_float": [[282, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.rename_vars_int": [[282, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist": [[283, 2, 1, "id0", "__init__", ""], [283, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [283, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [283, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [283, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [283, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [283, 4, 1, 0, "component_names", "The names of the components"], [283, 2, 1, 0, "finalize", "Finalize the object."], [283, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [283, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [283, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [283, 2, 1, 0, "initialize", "Initialize the constaint."], [283, 4, 1, 0, "initialized", "Flag for finished initialization"], [283, 2, 1, 0, "n_components", "Returns the number of components of the function."], [283, 4, 1, 0, "n_vars_float", "The number of float variables"], [283, 4, 1, 0, "n_vars_int", "The number of int variables"], [283, 2, 1, 0, "rename_vars_float", "Rename float variables."], [283, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [283, 4, 1, 0, "var_names_float", "The names of the float variables"], [283, 4, 1, 0, "var_names_int", "The names of the integer variables"], [283, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [283, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.ana_deriv": [[283, 3, 2, 0, "components", "The selected components, or None for all"], [283, 3, 2, 0, "var", "The index of the differentiation float variable"], [283, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [283, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_individual": [[283, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [283, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [283, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_population": [[283, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [283, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [283, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.check_individual": [[283, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.check_population": [[283, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize": [[283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize_individual": [[283, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [283, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [283, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize_population": [[283, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [283, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [283, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialize": [[283, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.rename_vars_float": [[283, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.rename_vars_int": [[283, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid": [[284, 2, 1, "id0", "__init__", ""], [284, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [284, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [284, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [284, 2, 1, 0, "check_individual", "Check if the constraints are fullfilled for the given individual."], [284, 2, 1, 0, "check_population", "Check if the constraints are fullfilled for the given population."], [284, 4, 1, 0, "component_names", "The names of the components"], [284, 2, 1, 0, "finalize", "Finalize the object."], [284, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [284, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [284, 2, 1, 0, "get_bounds", "Returns the bounds for all components."], [284, 2, 1, 0, "initialize", "Initialize the object."], [284, 4, 1, 0, "initialized", "Flag for finished initialization"], [284, 2, 1, 0, "n_components", "Returns the number of components of the function."], [284, 4, 1, 0, "n_vars_float", "The number of float variables"], [284, 4, 1, 0, "n_vars_int", "The number of int variables"], [284, 2, 1, 0, "rename_vars_float", "Rename float variables."], [284, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [284, 4, 1, 0, "var_names_float", "The names of the float variables"], [284, 4, 1, 0, "var_names_int", "The names of the integer variables"], [284, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [284, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.ana_deriv": [[284, 3, 2, 0, "components", "The selected components, or None for all"], [284, 3, 2, 0, "var", "The index of the differentiation float variable"], [284, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [284, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_individual": [[284, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [284, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [284, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_population": [[284, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [284, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [284, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.check_individual": [[284, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.check_population": [[284, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components,)"], [284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize": [[284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize_individual": [[284, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [284, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [284, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize_population": [[284, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [284, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [284, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.initialize": [[284, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.rename_vars_float": [[284, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid.rename_vars_int": [[284, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.geom_layout": [[286, 1, 1, 0, "GeomLayout", "Bases: Problem"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout": [[286, 5, 1, 0, "D", "The diameter of circle fully within boundary"], [286, 2, 1, "id0", "__init__", ""], [286, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [286, 2, 1, 0, "add_objective", "Add an objective to the problem."], [286, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [286, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [286, 5, 1, 0, "boundary", "The boundary geometry"], [286, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [286, 5, 1, 0, "calc_valid", "Evaluate validity"], [286, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [286, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [286, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [286, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [286, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [286, 2, 1, 0, "finalize", "Finalize the object."], [286, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [286, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [286, 2, 1, 0, "get_fig", "Return plotly figure axis."], [286, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [286, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [286, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [286, 2, 1, 0, "initialize", "Initialize the object."], [286, 4, 1, 0, "initialized", "Flag for finished initialization"], [286, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [286, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [286, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [286, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [286, 5, 1, 0, "min_dist", "The minimal distance between points"], [286, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [286, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [286, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [286, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [286, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [286, 5, 1, 0, "n_turbines", "The number of turbines in the layout"], [286, 4, 1, 0, "n_vars_float", "The number of float variables"], [286, 4, 1, 0, "n_vars_int", "The number of int variables"], [286, 2, 1, 0, "var_names_float", "The names of float variables."], [286, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.add_constraint": [[286, 3, 2, 0, "constraint", "The constraint"], [286, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [286, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.add_objective": [[286, 3, 2, 0, "objective", "The objective"], [286, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [286, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.apply_individual": [[286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.apply_population": [[286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.calc_gradients": [[286, 3, 2, 0, "components", "The function's component selection, or None for all"], [286, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [286, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [286, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [286, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [286, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.check_constraints_individual": [[286, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.check_constraints_population": [[286, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.evaluate_individual": [[286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.evaluate_population": [[286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize": [[286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize_individual": [[286, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [286, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize_population": [[286, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [286, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.get_fig": [[286, 3, 2, 0, "ax", "The figure axis"], [286, 3, 2, 0, "title", "The figure title"], [286, 3, 2, 0, "true_circle", "Draw points as circles with diameter self.D"], [286, 3, 2, 0, "valid", "Boolean array of validity, shape: (n_points,)"], [286, 3, 2, 0, "xy", "The xy coordinate array, shape: (n_points, 2)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.get_gradients": [[286, 3, 2, 0, "components", "The function's component selection, or None for all"], [286, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [286, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [286, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [286, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [286, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.initialize": [[286, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded": [[288, 1, 1, 0, "GeomLayoutGridded", "Bases: Problem"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded": [[288, 5, 1, 0, "D", "The diameter of circle fully within boundary"], [288, 2, 1, "id0", "__init__", ""], [288, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [288, 2, 1, 0, "add_objective", "Add an objective to the problem."], [288, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [288, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [288, 5, 1, 0, "boundary", "The boundary geometry"], [288, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [288, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [288, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [288, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [288, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [288, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [288, 2, 1, 0, "finalize", "Finalize the object."], [288, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [288, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [288, 2, 1, 0, "get_fig", "Return plotly figure axis."], [288, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [288, 5, 1, 0, "grid_spacing", "The background grid spacing"], [288, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [288, 2, 1, 0, "initial_values_int", "The initial values of the int variables."], [288, 2, 1, 0, "initialize", "Initialize the object."], [288, 4, 1, 0, "initialized", "Flag for finished initialization"], [288, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [288, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [288, 2, 1, 0, "max_values_int", "The maximal values of the int variables."], [288, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [288, 5, 1, 0, "min_dist", "The minimal distance between points"], [288, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [288, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [288, 2, 1, 0, "min_values_int", "The minimal values of the int variables."], [288, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [288, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [288, 5, 1, 0, "n_turbines", "The number of turbines in the layout"], [288, 4, 1, 0, "n_vars_float", "The number of float variables"], [288, 4, 1, 0, "n_vars_int", "The number of int variables"], [288, 2, 1, 0, "var_names_float", "The names of float variables."], [288, 2, 1, 0, "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.add_constraint": [[288, 3, 2, 0, "constraint", "The constraint"], [288, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [288, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.add_objective": [[288, 3, 2, 0, "objective", "The objective"], [288, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [288, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.apply_individual": [[288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.apply_population": [[288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.calc_gradients": [[288, 3, 2, 0, "components", "The function's component selection, or None for all"], [288, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [288, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [288, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [288, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [288, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.check_constraints_individual": [[288, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.check_constraints_population": [[288, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.evaluate_individual": [[288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.evaluate_population": [[288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize": [[288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize_individual": [[288, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [288, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize_population": [[288, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [288, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.get_fig": [[288, 3, 2, 0, "ax", "The figure axis"], [288, 3, 2, 0, "title", "The figure title"], [288, 3, 2, 0, "true_circle", "Draw points as circles with diameter self.D"], [288, 3, 2, 0, "valid", "Boolean array of validity, shape: (n_points,)"], [288, 3, 2, 0, "xy", "The xy coordinate array, shape: (n_points, 2)"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.get_gradients": [[288, 3, 2, 0, "components", "The function's component selection, or None for all"], [288, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [288, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [288, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [288, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [288, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.initialize": [[288, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid": [[290, 1, 1, 0, "GeomRegGrid", "Bases: Problem"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid": [[290, 5, 1, 0, "D", "The diameter of circle fully within boundary"], [290, 2, 1, "id0", "__init__", ""], [290, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [290, 2, 1, 0, "add_objective", "Add an objective to the problem."], [290, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [290, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [290, 5, 1, 0, "boundary", "The boundary geometry"], [290, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [290, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [290, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [290, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [290, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [290, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [290, 2, 1, 0, "finalize", "Finalize the object."], [290, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [290, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [290, 2, 1, 0, "get_fig", "Return plotly figure axis."], [290, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [290, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [290, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [290, 2, 1, 0, "initialize", "Initialize the object."], [290, 4, 1, 0, "initialized", "Flag for finished initialization"], [290, 5, 1, 0, "max_dist", "The maximal distance between points"], [290, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [290, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [290, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [290, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [290, 5, 1, 0, "min_dist", "The minimal distance between points"], [290, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [290, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [290, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [290, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [290, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [290, 5, 1, 0, "n_turbines", "The number of turbines in the layout"], [290, 4, 1, 0, "n_vars_float", "The number of float variables"], [290, 4, 1, 0, "n_vars_int", "The number of int variables"], [290, 2, 1, 0, "var_names_float", "The names of float variables."], [290, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.add_constraint": [[290, 3, 2, 0, "constraint", "The constraint"], [290, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [290, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.add_objective": [[290, 3, 2, 0, "objective", "The objective"], [290, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [290, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.apply_individual": [[290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.apply_population": [[290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.calc_gradients": [[290, 3, 2, 0, "components", "The function's component selection, or None for all"], [290, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [290, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [290, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [290, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [290, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.check_constraints_individual": [[290, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.check_constraints_population": [[290, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.evaluate_individual": [[290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.evaluate_population": [[290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize": [[290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize_individual": [[290, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [290, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize_population": [[290, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [290, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.get_fig": [[290, 3, 2, 0, "ax", "The figure axis"], [290, 3, 2, 0, "title", "The figure title"], [290, 3, 2, 0, "true_circle", "Draw points as circles with diameter self.D"], [290, 3, 2, 0, "valid", "Boolean array of validity, shape: (n_points,)"], [290, 3, 2, 0, "xy", "The xy coordinate array, shape: (n_points, 2)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.get_gradients": [[290, 3, 2, 0, "components", "The function's component selection, or None for all"], [290, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [290, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [290, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [290, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [290, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.initialize": [[290, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids": [[292, 1, 1, 0, "GeomRegGrids", "Bases: Problem"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids": [[292, 5, 1, 0, "D", "The diameter of circle fully within boundary"], [292, 2, 1, "id0", "__init__", ""], [292, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [292, 2, 1, 0, "add_objective", "Add an objective to the problem."], [292, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [292, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [292, 5, 1, 0, "boundary", "The boundary geometry"], [292, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [292, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [292, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [292, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [292, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [292, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [292, 2, 1, 0, "finalize", "Finalize the object."], [292, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [292, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [292, 2, 1, 0, "get_fig", "Return plotly figure axis."], [292, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [292, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [292, 2, 1, 0, "initial_values_int", "The initial values of the int variables."], [292, 2, 1, 0, "initialize", "Initialize the object."], [292, 4, 1, 0, "initialized", "Flag for finished initialization"], [292, 5, 1, 0, "max_dist", "The maximal distance between points"], [292, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [292, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [292, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [292, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [292, 5, 1, 0, "min_dist", "The minimal distance between points"], [292, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [292, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [292, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [292, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [292, 5, 1, 0, "n_grids", "The number of grids"], [292, 5, 1, 0, "n_max", "The maximal number of points"], [292, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [292, 5, 1, 0, "n_row_max", "The maximal number of points in a row"], [292, 4, 1, 0, "n_vars_float", "The number of float variables"], [292, 4, 1, 0, "n_vars_int", "The number of int variables"], [292, 2, 1, 0, "var_names_float", "The names of float variables."], [292, 2, 1, 0, "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.add_constraint": [[292, 3, 2, 0, "constraint", "The constraint"], [292, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [292, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.add_objective": [[292, 3, 2, 0, "objective", "The objective"], [292, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [292, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.apply_individual": [[292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.apply_population": [[292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.calc_gradients": [[292, 3, 2, 0, "components", "The function's component selection, or None for all"], [292, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [292, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [292, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [292, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [292, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.check_constraints_individual": [[292, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.check_constraints_population": [[292, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.evaluate_individual": [[292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.evaluate_population": [[292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize": [[292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize_individual": [[292, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [292, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize_population": [[292, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [292, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.get_fig": [[292, 3, 2, 0, "ax", "The figure axis"], [292, 3, 2, 0, "title", "The figure title"], [292, 3, 2, 0, "true_circle", "Draw points as circles with diameter self.D"], [292, 3, 2, 0, "valid", "Boolean array of validity, shape: (n_points,)"], [292, 3, 2, 0, "xy", "The xy coordinate array, shape: (n_points, 2)"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.get_gradients": [[292, 3, 2, 0, "components", "The function's component selection, or None for all"], [292, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [292, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [292, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [292, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [292, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.initialize": [[292, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[294, 1, 1, 0, "MaxDensity", "Bases: Objective"], [295, 1, 1, 0, "MaxGridSpacing", "Bases: Objective"], [296, 1, 1, 0, "MeMiMaDist", "Bases: Objective"], [297, 1, 1, 0, "OFixN", "Bases: Objective"], [298, 1, 1, 0, "OMaxN", "Bases: Objective"], [299, 1, 1, 0, "OMinN", "Bases: OMaxN"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity": [[294, 2, 1, "id0", "__init__", ""], [294, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [294, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [294, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [294, 4, 1, 0, "component_names", "The names of the components"], [294, 2, 1, 0, "finalize", "Finalize the object."], [294, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [294, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [294, 2, 1, 0, "initialize", "Initialize the object."], [294, 4, 1, 0, "initialized", "Flag for finished initialization"], [294, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [294, 2, 1, 0, "n_components", "Returns the number of components of the function."], [294, 4, 1, 0, "n_vars_float", "The number of float variables"], [294, 4, 1, 0, "n_vars_int", "The number of int variables"], [294, 2, 1, 0, "rename_vars_float", "Rename float variables."], [294, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [294, 4, 1, 0, "var_names_float", "The names of the float variables"], [294, 4, 1, 0, "var_names_int", "The names of the integer variables"], [294, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [294, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.ana_deriv": [[294, 3, 2, 0, "components", "The selected components, or None for all"], [294, 3, 2, 0, "var", "The index of the differentiation float variable"], [294, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [294, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_individual": [[294, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [294, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [294, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_population": [[294, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [294, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [294, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize": [[294, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize_individual": [[294, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [294, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [294, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [294, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize_population": [[294, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [294, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [294, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [294, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialize": [[294, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.rename_vars_float": [[294, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.rename_vars_int": [[294, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing": [[295, 2, 1, "id0", "__init__", ""], [295, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [295, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [295, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [295, 4, 1, 0, "component_names", "The names of the components"], [295, 2, 1, 0, "finalize", "Finalize the object."], [295, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [295, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [295, 2, 1, 0, "initialize", "Initialize the object."], [295, 4, 1, 0, "initialized", "Flag for finished initialization"], [295, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [295, 2, 1, 0, "n_components", "Returns the number of components of the function."], [295, 4, 1, 0, "n_vars_float", "The number of float variables"], [295, 4, 1, 0, "n_vars_int", "The number of int variables"], [295, 2, 1, 0, "rename_vars_float", "Rename float variables."], [295, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [295, 4, 1, 0, "var_names_float", "The names of the float variables"], [295, 4, 1, 0, "var_names_int", "The names of the integer variables"], [295, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [295, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.ana_deriv": [[295, 3, 2, 0, "components", "The selected components, or None for all"], [295, 3, 2, 0, "var", "The index of the differentiation float variable"], [295, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [295, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_individual": [[295, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [295, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [295, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_population": [[295, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [295, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [295, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize": [[295, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize_individual": [[295, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [295, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [295, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [295, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize_population": [[295, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [295, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [295, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [295, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.initialize": [[295, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.rename_vars_float": [[295, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.rename_vars_int": [[295, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist": [[296, 2, 1, "id0", "__init__", ""], [296, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [296, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [296, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [296, 4, 1, 0, "component_names", "The names of the components"], [296, 2, 1, 0, "finalize", "Finalize the object."], [296, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [296, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [296, 2, 1, 0, "initialize", "Initialize the object."], [296, 4, 1, 0, "initialized", "Flag for finished initialization"], [296, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [296, 2, 1, 0, "n_components", "Returns the number of components of the function."], [296, 4, 1, 0, "n_vars_float", "The number of float variables"], [296, 4, 1, 0, "n_vars_int", "The number of int variables"], [296, 2, 1, 0, "rename_vars_float", "Rename float variables."], [296, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [296, 4, 1, 0, "var_names_float", "The names of the float variables"], [296, 4, 1, 0, "var_names_int", "The names of the integer variables"], [296, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [296, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.ana_deriv": [[296, 3, 2, 0, "components", "The selected components, or None for all"], [296, 3, 2, 0, "var", "The index of the differentiation float variable"], [296, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [296, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_individual": [[296, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [296, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [296, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_population": [[296, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [296, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [296, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize": [[296, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize_individual": [[296, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [296, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [296, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [296, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize_population": [[296, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [296, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [296, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [296, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.initialize": [[296, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.rename_vars_float": [[296, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.rename_vars_int": [[296, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN": [[297, 2, 1, "id0", "__init__", ""], [297, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [297, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [297, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [297, 4, 1, 0, "component_names", "The names of the components"], [297, 2, 1, 0, "finalize", "Finalize the object."], [297, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [297, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [297, 2, 1, 0, "initialize", "Initialize the object."], [297, 4, 1, 0, "initialized", "Flag for finished initialization"], [297, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [297, 2, 1, 0, "n_components", "Returns the number of components of the function."], [297, 4, 1, 0, "n_vars_float", "The number of float variables"], [297, 4, 1, 0, "n_vars_int", "The number of int variables"], [297, 2, 1, 0, "rename_vars_float", "Rename float variables."], [297, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [297, 4, 1, 0, "var_names_float", "The names of the float variables"], [297, 4, 1, 0, "var_names_int", "The names of the integer variables"], [297, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [297, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.ana_deriv": [[297, 3, 2, 0, "components", "The selected components, or None for all"], [297, 3, 2, 0, "var", "The index of the differentiation float variable"], [297, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [297, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_individual": [[297, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [297, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [297, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_population": [[297, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [297, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [297, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize": [[297, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize_individual": [[297, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [297, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [297, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [297, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize_population": [[297, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [297, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [297, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [297, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.initialize": [[297, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.rename_vars_float": [[297, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.rename_vars_int": [[297, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN": [[298, 2, 1, "id0", "__init__", ""], [298, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [298, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [298, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [298, 4, 1, 0, "component_names", "The names of the components"], [298, 2, 1, 0, "finalize", "Finalize the object."], [298, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [298, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [298, 2, 1, 0, "initialize", "Initialize the object."], [298, 4, 1, 0, "initialized", "Flag for finished initialization"], [298, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [298, 2, 1, 0, "n_components", "Returns the number of components of the function."], [298, 4, 1, 0, "n_vars_float", "The number of float variables"], [298, 4, 1, 0, "n_vars_int", "The number of int variables"], [298, 2, 1, 0, "rename_vars_float", "Rename float variables."], [298, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [298, 4, 1, 0, "var_names_float", "The names of the float variables"], [298, 4, 1, 0, "var_names_int", "The names of the integer variables"], [298, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [298, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.ana_deriv": [[298, 3, 2, 0, "components", "The selected components, or None for all"], [298, 3, 2, 0, "var", "The index of the differentiation float variable"], [298, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [298, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_individual": [[298, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [298, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [298, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_population": [[298, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [298, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [298, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize": [[298, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize_individual": [[298, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [298, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [298, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [298, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize_population": [[298, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [298, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [298, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [298, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.initialize": [[298, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.rename_vars_float": [[298, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.rename_vars_int": [[298, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN": [[299, 2, 1, "id0", "__init__", ""], [299, 2, 1, 0, "ana_deriv", "Calculates the analytic derivative, if possible."], [299, 2, 1, 0, "calc_individual", "Calculate values for a single individual of the underlying problem."], [299, 2, 1, 0, "calc_population", "Calculate values for all individuals of a population."], [299, 4, 1, 0, "component_names", "The names of the components"], [299, 2, 1, 0, "finalize", "Finalize the object."], [299, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [299, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [299, 2, 1, 0, "initialize", "Initialize the object."], [299, 4, 1, 0, "initialized", "Flag for finished initialization"], [299, 2, 1, 0, "maximize", "Returns flag for maximization of each component."], [299, 2, 1, 0, "n_components", "Returns the number of components of the function."], [299, 4, 1, 0, "n_vars_float", "The number of float variables"], [299, 4, 1, 0, "n_vars_int", "The number of int variables"], [299, 2, 1, 0, "rename_vars_float", "Rename float variables."], [299, 2, 1, 0, "rename_vars_int", "Rename integer variables."], [299, 4, 1, 0, "var_names_float", "The names of the float variables"], [299, 4, 1, 0, "var_names_int", "The names of the integer variables"], [299, 2, 1, 0, "vardeps_float", "Gets the dependencies of all components on the function float variables"], [299, 2, 1, 0, "vardeps_int", "Gets the dependencies of all components on the function int variables"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.ana_deriv": [[299, 3, 2, 0, "components", "The selected components, or None for all"], [299, 3, 2, 0, "var", "The index of the differentiation float variable"], [299, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [299, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.calc_individual": [[299, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [299, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [299, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.calc_population": [[299, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [299, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [299, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize": [[299, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize_individual": [[299, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [299, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [299, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [299, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize_population": [[299, 3, 2, 0, "problem_results", "The results of the variable application to the problem"], [299, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [299, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [299, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.initialize": [[299, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.rename_vars_float": [[299, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.rename_vars_int": [[299, 3, 2, 0, "varmap", "The name mapping. Key: old name str, Value: new name str"]], "foxes.opt.problems.layout.reggrids_layout": [[301, 1, 1, 0, "RegGridsLayoutOptProblem", "Bases: FarmVarsProblem"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem": [[301, 2, 1, "id0", "__init__", ""], [301, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [301, 2, 1, 0, "add_objective", "Add an objective to the problem."], [301, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [301, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [301, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [301, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [301, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [301, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [301, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [301, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [301, 4, 1, 0, "counter", "The current value of the application counter"], [301, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [301, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [301, 4, 1, 0, "farm", "The wind farm"], [301, 2, 1, 0, "finalize", "Finalize the object."], [301, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [301, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [301, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [301, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [301, 2, 1, 0, "initial_values_int", "The initial values of the int variables."], [301, 2, 1, 0, "initialize", "Initialize the object."], [301, 4, 1, 0, "initialized", "Flag for finished initialization"], [301, 5, 1, 0, "max_n_row", "The maximal number of turbines per grid and row"], [301, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [301, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [301, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [301, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [301, 5, 1, 0, "min_spacing", "The minimal turbine spacing"], [301, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [301, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [301, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [301, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [301, 5, 1, 0, "n_grids", "The number of grids"], [301, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [301, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [301, 4, 1, 0, "n_vars_float", "The number of float variables"], [301, 4, 1, 0, "n_vars_int", "The number of int variables"], [301, 2, 1, 0, "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [301, 2, 1, 0, "opt2farm_vars_population", "Translates optimization variables to farm variables"], [301, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [301, 4, 1, 0, "sel_turbines", "The selected turbines"], [301, 2, 1, 0, "tvar", "Gets turbine variable name"], [301, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [301, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [301, 2, 1, 0, "var_names_float", "The names of float variables."], [301, 2, 1, 0, "var_names_int", "The names of int variables."]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_constraint": [[301, 3, 2, 0, "constraint", "The constraint"], [301, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [301, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_objective": [[301, 3, 2, 0, "objective", "The objective"], [301, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [301, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_to_layout_figure": [[301, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.apply_individual": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.apply_population": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.calc_gradients": [[301, 3, 2, 0, "components", "The function's component selection, or None for all"], [301, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [301, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [301, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [301, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [301, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.check_constraints_individual": [[301, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.check_constraints_population": [[301, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.evaluate_individual": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.evaluate_population": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize": [[301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize_individual": [[301, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize_population": [[301, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [301, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.get_gradients": [[301, 3, 2, 0, "components", "The function's component selection, or None for all"], [301, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [301, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [301, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.initialize": [[301, 3, 2, 0, "kwargs", "Additional parameters for super class init"], [301, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.opt2farm_vars_individual": [[301, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.opt2farm_vars_population": [[301, 3, 2, 0, "n_states", "The number of original (non-pop) states"], [301, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_pop, n_vars_float)"], [301, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.parse_tvar": [[301, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.tvar": [[301, 3, 2, 0, "turbine_i", "The turbine index"], [301, 3, 2, 0, "var", "The variable name"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.update_problem_individual": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.update_problem_population": [[301, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [301, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.opt.problems.layout.regular_layout": [[303, 1, 1, 0, "RegularLayoutOptProblem", "Bases: FarmVarsProblem"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem": [[303, 2, 1, "id0", "__init__", ""], [303, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [303, 2, 1, 0, "add_objective", "Add an objective to the problem."], [303, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [303, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [303, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [303, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [303, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [303, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [303, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [303, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [303, 4, 1, 0, "counter", "The current value of the application counter"], [303, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [303, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [303, 4, 1, 0, "farm", "The wind farm"], [303, 2, 1, 0, "finalize", "Finalize the object."], [303, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [303, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [303, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [303, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [303, 2, 1, 0, "initial_values_int", "The initial values of the integer variables."], [303, 2, 1, 0, "initialize", "Initialize the object."], [303, 4, 1, 0, "initialized", "Flag for finished initialization"], [303, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [303, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [303, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [303, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [303, 5, 1, 0, "min_spacing", "The minimal turbine spacing"], [303, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [303, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [303, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [303, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [303, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [303, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [303, 4, 1, 0, "n_vars_float", "The number of float variables"], [303, 4, 1, 0, "n_vars_int", "The number of int variables"], [303, 2, 1, 0, "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [303, 2, 1, 0, "opt2farm_vars_population", "Translates optimization variables to farm variables"], [303, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [303, 4, 1, 0, "sel_turbines", "The selected turbines"], [303, 2, 1, 0, "tvar", "Gets turbine variable name"], [303, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [303, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [303, 2, 1, 0, "var_names_float", "The names of float variables."], [303, 2, 1, 0, "var_names_int", "The names of integer variables."]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_constraint": [[303, 3, 2, 0, "constraint", "The constraint"], [303, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [303, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_objective": [[303, 3, 2, 0, "objective", "The objective"], [303, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [303, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_to_layout_figure": [[303, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.apply_individual": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.apply_population": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.calc_gradients": [[303, 3, 2, 0, "components", "The function's component selection, or None for all"], [303, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [303, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [303, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [303, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [303, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.check_constraints_individual": [[303, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.check_constraints_population": [[303, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.evaluate_individual": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.evaluate_population": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize": [[303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize_individual": [[303, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize_population": [[303, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [303, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.get_gradients": [[303, 3, 2, 0, "components", "The function's component selection, or None for all"], [303, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [303, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [303, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.initialize": [[303, 3, 2, 0, "kwargs", "Additional parameters for super class init"], [303, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.opt2farm_vars_individual": [[303, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.opt2farm_vars_population": [[303, 3, 2, 0, "n_states", "The number of original (non-pop) states"], [303, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_pop, n_vars_float)"], [303, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.parse_tvar": [[303, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.tvar": [[303, 3, 2, 0, "turbine_i", "The turbine index"], [303, 3, 2, 0, "var", "The variable name"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.update_problem_individual": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.update_problem_population": [[303, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [303, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.opt.problems.opt_farm_vars": [[305, 1, 1, 0, "OptFarmVars", "Bases: FarmVarsProblem"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars": [[305, 2, 1, "id0", "__init__", ""], [305, 2, 1, 0, "add_constraint", "Add a constraint to the problem."], [305, 2, 1, 0, "add_objective", "Add an objective to the problem."], [305, 2, 1, 0, "add_to_layout_figure", "Add to a layout figure"], [305, 2, 1, 0, "add_var", "Add a variable."], [305, 4, 1, 0, "all_turbines", "Flag for all turbines optimization"], [305, 2, 1, 0, "apply_individual", "Apply new variables to the problem."], [305, 2, 1, 0, "apply_population", "Apply new variables to the problem, for a whole population."], [305, 2, 1, 0, "calc_gradients", "The actual gradient calculation, not to be called directly (call get_gradients instead)."], [305, 2, 1, 0, "check_constraints_individual", "Check if the constraints are fullfilled for the given individual."], [305, 2, 1, 0, "check_constraints_population", "Check if the constraints are fullfilled for the given population."], [305, 4, 1, 0, "constraints_tol", "Gets the tolerance values of constraints"], [305, 4, 1, 0, "counter", "The current value of the application counter"], [305, 2, 1, 0, "evaluate_individual", "Evaluate a single individual of the problem."], [305, 2, 1, 0, "evaluate_population", "Evaluate all individuals of a population."], [305, 4, 1, 0, "farm", "The wind farm"], [305, 2, 1, 0, "finalize", "Finalize the object."], [305, 2, 1, 0, "finalize_individual", "Finalization, given the champion data."], [305, 2, 1, 0, "finalize_population", "Finalization, given the final population data."], [305, 2, 1, 0, "get_gradients", "Obtain gradients of a function that is linked to the problem."], [305, 2, 1, 0, "initial_values_float", "The initial values of the float variables."], [305, 2, 1, 0, "initial_values_int", "The initial values of the int variables."], [305, 2, 1, 0, "initialize", "Initialize the object."], [305, 4, 1, 0, "initialized", "Flag for finished initialization"], [305, 4, 1, 0, "max_values_constraints", "Gets the maximal values of constraints"], [305, 2, 1, 0, "max_values_float", "The maximal values of the float variables."], [305, 2, 1, 0, "max_values_int", "The maximal values of the integer variables."], [305, 4, 1, 0, "maximize_objs", "Flags for objective maximization"], [305, 4, 1, 0, "min_values_constraints", "Gets the minimal values of constraints"], [305, 2, 1, 0, "min_values_float", "The minimal values of the float variables."], [305, 2, 1, 0, "min_values_int", "The minimal values of the integer variables."], [305, 4, 1, 0, "n_constraints", "The total number of constraints, i.e., the sum of all components"], [305, 4, 1, 0, "n_objectives", "The total number of objectives, i.e., the sum of all components"], [305, 4, 1, 0, "n_sel_turbines", "The numer of selected turbines"], [305, 4, 1, 0, "n_vars_float", "The number of float variables"], [305, 4, 1, 0, "n_vars_int", "The number of int variables"], [305, 2, 1, 0, "opt2farm_vars_individual", "Translates optimization variables to farm variables"], [305, 2, 1, 0, "opt2farm_vars_population", "Translates optimization variables to farm variables"], [305, 2, 1, 0, "parse_tvar", "Parse foxes variable name and turbine index from turbine variable"], [305, 4, 1, 0, "sel_turbines", "The selected turbines"], [305, 2, 1, 0, "tvar", "Gets turbine variable name"], [305, 2, 1, 0, "update_problem_individual", "Update the algo and other data using the latest optimization variables."], [305, 2, 1, 0, "update_problem_population", "Update the algo and other data using the latest optimization variables."], [305, 2, 1, 0, "var_names_float", "The names of float variables."], [305, 2, 1, 0, "var_names_int", "The names of int variables."]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_constraint": [[305, 3, 2, 0, "constraint", "The constraint"], [305, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [305, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_objective": [[305, 3, 2, 0, "objective", "The objective"], [305, 3, 2, 0, "varmap_float", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [305, 3, 2, 0, "varmap_int", "Mapping from objective variables to problem variables. Key: str or int, value: str or int"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_to_layout_figure": [[305, 3, 2, 0, "ax", "The figure axis"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_var": [[305, 3, 2, 0, "init", "The initial value"], [305, 3, 2, 0, "level", "Choices: uniform, state, turbine, state-turbine"], [305, 3, 2, 0, "max", "The max value"], [305, 3, 2, 0, "min", "The min value"], [305, 3, 2, 0, "model_key", "Creates sub-model which can then be placed in the turbine model list. Repeated keys are added to the same turbine model"], [305, 3, 2, 0, "name", "The foxes farm variable name"], [305, 3, 2, 0, "pre_rotor", "Apply this variable before rotor model"], [305, 3, 2, 0, "sel", "States/turbines/state-turbine selection, depending on the level"], [305, 3, 2, 0, "typ", "The variable type, either float or int"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.apply_individual": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.apply_population": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.calc_gradients": [[305, 3, 2, 0, "components", "The function's component selection, or None for all"], [305, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [305, 3, 2, 0, "fvars", "The indices of the function float variables in the problem"], [305, 3, 2, 0, "ivars", "The indices of the function int variables in the problem"], [305, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"], [305, 3, 2, 0, "vrs", "The function float variable indices wrt which the derivatives are to be calculated"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.check_constraints_individual": [[305, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_components,)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.check_constraints_population": [[305, 3, 2, 0, "constraint_values", "The constraint values, shape: (n_pop, n_components)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.evaluate_individual": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.evaluate_population": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize": [[305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize_individual": [[305, 3, 2, 0, "vars_float", "The optimal float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The optimal integer variable values, shape: (n_vars_int,)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize_population": [[305, 3, 2, 0, "vars_float", "The float variable values of the final generation, shape: (n_pop, n_vars_float)"], [305, 3, 2, 0, "vars_int", "The integer variable values of the final generation, shape: (n_pop, n_vars_int)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.get_gradients": [[305, 3, 2, 0, "components", "The function's component selection, or None for all"], [305, 3, 2, 0, "func", "The functions to be differentiated, or None for a list of all objectives and all constraints (in that order)"], [305, 3, 2, 0, "pop", "Flag for vectorizing calculations via population"], [305, 3, 2, 0, "vars", "The float variables wrt which the derivatives are to be calculated, or None for all"], [305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.initialize": [[305, 3, 2, 0, "kwargs", "Additional parameters for super class init"], [305, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.opt2farm_vars_individual": [[305, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.opt2farm_vars_population": [[305, 3, 2, 0, "n_states", "The number of original (non-pop) states"], [305, 3, 2, 0, "vars_float", "The float optimization variable values, shape: (n_pop, n_vars_float)"], [305, 3, 2, 0, "vars_int", "The integer optimization variable values, shape: (n_pop, n_vars_int)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.parse_tvar": [[305, 3, 2, 0, "tvr", "The turbine variable name"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.tvar": [[305, 3, 2, 0, "turbine_i", "The turbine index"], [305, 3, 2, 0, "var", "The variable name"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.update_problem_individual": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_vars_int,)"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars.update_problem_population": [[305, 3, 2, 0, "vars_float", "The float variable values, shape: (n_pop, n_vars_float,)"], [305, 3, 2, 0, "vars_int", "The integer variable values, shape: (n_pop, n_vars_int,)"]], "foxes.output": [[307, 0, 0, 1, "farm_layout", ""], [309, 0, 0, 1, "farm_results_eval", ""], [311, 0, 0, 1, "flow_plots_2d", ""], [313, 0, 0, 1, "output", ""], [315, 0, 0, 1, "results_writer", ""], [317, 0, 0, 1, "rose_plot", ""], [320, 0, 0, 1, "state_turbine_map", ""], [322, 0, 0, 1, "turbine_type_curves", ""]], "foxes.output.farm_layout": [[308, 1, 1, 0, "FarmLayoutOutput", "Bases: Output"]], "foxes.output.farm_layout.FarmLayoutOutput": [[308, 5, 1, 0, "D", "The rotor diameter, if not from data"], [308, 2, 1, "id0", "__init__", ""], [308, 5, 1, 0, "farm", "The wind farm"], [308, 5, 1, 0, "fres", "The wind farm calculation results"], [308, 5, 1, 0, "from_res", "Flag for coordinates from results data"], [308, 2, 1, 0, "get_figure", "Creates farm layout figure."], [308, 2, 1, 0, "get_layout_data", "Returns wind farm layout."], [308, 2, 1, 0, "get_layout_dict", "Returns wind farm layout."], [308, 2, 1, 0, "new", "Run-time output model factory."], [308, 2, 1, 0, "print_models", "Prints all model names."], [308, 5, 1, 0, "results_state", "The state index, for from_res"], [308, 2, 1, 0, "write", "Writes data to file via pandas."], [308, 2, 1, 0, "write_csv", "Writes csv layout file."], [308, 2, 1, 0, "write_json", "Writes xyh layout file."], [308, 2, 1, 0, "write_plot", "Writes the layout plot to file."], [308, 2, 1, 0, "write_xyh", "Writes xyh layout file."]], "foxes.output.farm_layout.FarmLayoutOutput.get_figure": [[308, 3, 2, 0, "annotate", "Turbine index printing, Choices: 0 = No annotation 1 = Turbine indices 2 = Turbine names"], [308, 3, 2, 0, "ax", "The axis object, to which to add"], [308, 3, 2, 0, "bargs", "Arguments for boundary plotting"], [308, 3, 2, 0, "color_by", "Set scatter color by variable results. Use \"mean_REWS\" etc for means, also min, max, sum. All wrt states"], [308, 3, 2, 0, "fig", "The figure object to which to add"], [308, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [308, 3, 2, 0, "fontsize", "Size of the turbine numbers"], [308, 3, 2, 0, "kwargs", "Parameters forwarded to matplotlib.pyplot.scatter"], [308, 3, 2, 0, "normalize_D", "Normalize x, y wrt rotor diameter"], [308, 3, 2, 0, "ret_im", "Flag for returned image object"], [308, 3, 2, 0, "title", "The plot title, or None for automatic"]], "foxes.output.farm_layout.FarmLayoutOutput.new": [[308, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.farm_layout.FarmLayoutOutput.write": [[308, 3, 2, 0, "data", "The data"], [308, 3, 2, 0, "file_path", "The path to the output file"], [308, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [308, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.farm_layout.FarmLayoutOutput.write_csv": [[308, 3, 2, 0, "file_path", "The file into which to plot, or None for default"]], "foxes.output.farm_layout.FarmLayoutOutput.write_json": [[308, 3, 2, 0, "file_path", "The file into which to plot, or None for default"]], "foxes.output.farm_layout.FarmLayoutOutput.write_plot": [[308, 3, 2, 0, "file_path", "The file into which to plot, or None for default"], [308, 3, 2, 0, "fontsize", "Size of the turbine numbers"]], "foxes.output.farm_layout.FarmLayoutOutput.write_xyh": [[308, 3, 2, 0, "file_path", "The file into which to plot, or None for default"]], "foxes.output.farm_results_eval": [[310, 1, 1, 0, "FarmResultsEval", "Bases: Output"]], "foxes.output.farm_results_eval.FarmResultsEval": [[310, 2, 1, "id0", "__init__", ""], [310, 2, 1, 0, "add_capacity", "Adds capacity to the farm results"], [310, 2, 1, 0, "add_efficiency", "Adds efficiency to the farm results"], [310, 2, 1, 0, "calc_farm_efficiency", "Calculates farm efficiency"], [310, 2, 1, 0, "calc_farm_mean", "Calculates the mean over states and turbines."], [310, 2, 1, 0, "calc_farm_sum", "Calculates the sum over states and turbines."], [310, 2, 1, 0, "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [310, 2, 1, 0, "calc_mean_farm_power", "Calculates the mean total farm power."], [310, 2, 1, 0, "calc_states_mean", "Calculates the mean wrt states."], [310, 2, 1, 0, "calc_states_std", "Calculates the standard deviation wrt states."], [310, 2, 1, 0, "calc_states_sum", "Calculates the sum wrt states."], [310, 2, 1, 0, "calc_turbine_mean", "Calculates the mean wrt turbines."], [310, 2, 1, 0, "calc_turbine_sum", "Calculates the sum wrt turbines."], [310, 2, 1, 0, "calc_turbine_yield", "Calculates the yield per turbine"], [310, 2, 1, 0, "new", "Run-time output model factory."], [310, 2, 1, 0, "print_models", "Prints all model names."], [310, 2, 1, 0, "reduce_all", "Reduces states and turbine dimension by some operation"], [310, 2, 1, 0, "reduce_states", "Reduces the states dimension by some operation"], [310, 2, 1, 0, "reduce_turbines", "Reduces the turbine dimension by some operation"], [310, 5, 1, 0, "results", "The farm results"], [310, 2, 1, 0, "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."], [310, 2, 1, 0, "write", "Writes data to file via pandas."]], "foxes.output.farm_results_eval.FarmResultsEval.add_capacity": [[310, 3, 2, 0, "P_nom", "Nominal power values for each turbine, if algo not given"], [310, 3, 2, 0, "algo", "The algorithm, for nominal power calculation"], [310, 3, 2, 0, "ambient", "Flag for calculating ambient capacity, by default False"], [310, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.output.farm_results_eval.FarmResultsEval.add_efficiency": [[310, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_mean": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_sum": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_yield": [[310, 3, 2, 0, "kwargs", "Parameters for calc_turbine_yield(). Apply if turbine_yield is not given"], [310, 3, 2, 0, "power_uncert", "Uncertainty in the power value. Triggers P75 and P90 outputs"], [310, 3, 2, 0, "turbine_yield", "Yield values by turbine"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_mean_farm_power": [[310, 3, 2, 0, "ambient", "Flag for ambient power"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_states_mean": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_states_std": [[310, 3, 2, 0, "vars", "_description_"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_states_sum": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_mean": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_sum": [[310, 3, 2, 0, "vars", "The variables"]], "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_yield": [[310, 3, 2, 0, "P_unit_W", "The power unit in Watts, 1000 for kW. Looked up in algorithm if not given"], [310, 3, 2, 0, "algo", "The algorithm, for P_nominal lookup"], [310, 3, 2, 0, "ambient", "Flag for ambient power, by default False"], [310, 3, 2, 0, "annual", "Flag for returing annual results, by default False"], [310, 3, 2, 0, "delta_t", "The time delta step in case of time series data, by default automatically determined"], [310, 3, 2, 0, "hours", "The duration time in hours, if not timeseries states"]], "foxes.output.farm_results_eval.FarmResultsEval.new": [[310, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.farm_results_eval.FarmResultsEval.reduce_all": [[310, 3, 2, 0, "states_op", "The states contraction operations. Key: str, the variable name. Value: str, the operation, choices are: sum, mean, min, max."], [310, 3, 2, 0, "turbines_op", "The turbines contraction operations. Key: str, the variable name. Value: str, the operation, choices are: sum, mean, min, max."]], "foxes.output.farm_results_eval.FarmResultsEval.reduce_states": [[310, 3, 2, 0, "vars_op", "The operation per variable. Key: str, the variable name. Value: str, the operation, choices are: sum, mean, min, max."]], "foxes.output.farm_results_eval.FarmResultsEval.reduce_turbines": [[310, 3, 2, 0, "vars_op", "The operation per variable. Key: str, the variable name. Value: str, the operation, choices are: sum, mean, min, max."]], "foxes.output.farm_results_eval.FarmResultsEval.weinsum": [[310, 3, 2, 0, "rhs", "The right-hand side of the einsum expression. Convention: 's' for states, 't' for turbines"], [310, 3, 2, 0, "vars", "The variables mentioned in the expression, but without the obligatory weights that will be added at the end"]], "foxes.output.farm_results_eval.FarmResultsEval.write": [[310, 3, 2, 0, "data", "The data"], [310, 3, 2, 0, "file_path", "The path to the output file"], [310, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [310, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.flow_plots_2d": [[312, 1, 1, 0, "FlowPlots2D", "Bases: Output"]], "foxes.output.flow_plots_2d.FlowPlots2D": [[312, 2, 1, "id0", "__init__", ""], [312, 5, 1, 0, "algo", "The algorithm for point calculation"], [312, 5, 1, 0, "farm_results", "The farm results"], [312, 2, 1, 0, "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [312, 2, 1, 0, "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [312, 2, 1, 0, "gen_states_fig_yz", "Generates 2D farm flow figure in a plane."], [312, 2, 1, 0, "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [312, 2, 1, 0, "get_mean_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [312, 2, 1, 0, "get_mean_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [312, 2, 1, 0, "new", "Run-time output model factory."], [312, 2, 1, 0, "print_models", "Prints all model names."], [312, 2, 1, 0, "write", "Writes data to file via pandas."]], "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_xy": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_xy", "Divide x and y by this value"], [312, 3, 2, 0, "quiver_n", "Place a vector at each `n`th point"], [312, 3, 2, 0, "quiver_pars", "Parameters for plt.quiver"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "xlabel", "The x axis label"], [312, 3, 2, 0, "xmax", "The max x coordinate, or None for automatic"], [312, 3, 2, 0, "xmin", "The min x coordinate, or None for automatic"], [312, 3, 2, 0, "xspace", "The extra space in x direction, before and after wind farm"], [312, 3, 2, 0, "ylabel", "The y axis label"], [312, 3, 2, 0, "ymax", "The max y coordinate, or None for automatic"], [312, 3, 2, 0, "ymin", "The min y coordinate, or None for automatic"], [312, 3, 2, 0, "yspace", "The extra space in y direction, before and after wind farm"], [312, 3, 2, 0, "z", "The z coordinate of the plane"]], "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_xz": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_x", "Divide x by this value"], [312, 3, 2, 0, "normalize_z", "Divide z by this value"], [312, 3, 2, 0, "quiver_n", "Place a vector at ech `n`th point"], [312, 3, 2, 0, "quiver_pars", "Parameters for plt.quiver"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "x_direction", "The direction of the x axis, 0 = north"], [312, 3, 2, 0, "xlabel", "The x axis label"], [312, 3, 2, 0, "xmax", "The max x coordinate, or None for automatic"], [312, 3, 2, 0, "xmin", "The min x coordinate, or None for automatic"], [312, 3, 2, 0, "xspace", "The extra space in x direction, before and after wind farm"], [312, 3, 2, 0, "y", "The y coordinate of the plane"], [312, 3, 2, 0, "zlabel", "The z axis label"], [312, 3, 2, 0, "zmax", "The max z coordinate, or None for automatic"], [312, 3, 2, 0, "zmin", "The min z coordinate"], [312, 3, 2, 0, "zspace", "The extra space in z direction, below and above wind farm"]], "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_yz": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_y", "Divide y by this value"], [312, 3, 2, 0, "normalize_z", "Divide z by this value"], [312, 3, 2, 0, "quiver_n", "Place a vector at ech `n`th point"], [312, 3, 2, 0, "quiver_pars", "Parameters for plt.quiver"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "x", "The x coordinate of the plane"], [312, 3, 2, 0, "x_direction", "The direction of the x axis, 0 = north"], [312, 3, 2, 0, "ylabel", "The y axis label"], [312, 3, 2, 0, "ymax", "The max y coordinate, or None for automatic"], [312, 3, 2, 0, "ymin", "The min y coordinate, or None for automatic"], [312, 3, 2, 0, "yspace", "The extra space in y direction, left and right of wind farm"], [312, 3, 2, 0, "zlabel", "The z axis label"], [312, 3, 2, 0, "zmax", "The max z coordinate, or None for automatic"], [312, 3, 2, 0, "zmin", "The min z coordinate"], [312, 3, 2, 0, "zspace", "The extra space in z direction, below and above wind farm"]], "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_xy": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_xy", "Divide x and y by this value"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "weight_turbine", "Index of the turbine from which to take the weight"], [312, 3, 2, 0, "xlabel", "The x axis label"], [312, 3, 2, 0, "xmax", "The max x coordinate, or None for automatic"], [312, 3, 2, 0, "xmin", "The min x coordinate, or None for automatic"], [312, 3, 2, 0, "xspace", "The extra space in x direction, before and after wind farm"], [312, 3, 2, 0, "ylabel", "The y axis label"], [312, 3, 2, 0, "ymax", "The max y coordinate, or None for automatic"], [312, 3, 2, 0, "ymin", "The min y coordinate, or None for automatic"], [312, 3, 2, 0, "yspace", "The extra space in y direction, before and after wind farm"], [312, 3, 2, 0, "z", "The z coordinate of the plane"]], "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_xz": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_x", "Divide x by this value"], [312, 3, 2, 0, "normalize_z", "Divide z by this value"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "weight_turbine", "Index of the turbine from which to take the weight"], [312, 3, 2, 0, "x_direction", "The direction of the x axis, 0 = north"], [312, 3, 2, 0, "xlabel", "The x axis label"], [312, 3, 2, 0, "xmax", "The max x coordinate, or None for automatic"], [312, 3, 2, 0, "xmin", "The min x coordinate, or None for automatic"], [312, 3, 2, 0, "xspace", "The extra space in x direction, before and after wind farm"], [312, 3, 2, 0, "y", "The y coordinate of the plane"], [312, 3, 2, 0, "zlabel", "The z axis label"], [312, 3, 2, 0, "zmax", "The max z coordinate, or None for automatic"], [312, 3, 2, 0, "zmin", "The min z coordinate"], [312, 3, 2, 0, "zspace", "The extra space in z direction, below and above wind farm"]], "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_yz": [[312, 3, 2, 0, "add_bar", "Add a color bar"], [312, 3, 2, 0, "ax", "The figure axes"], [312, 3, 2, 0, "cmap", "The colormap"], [312, 3, 2, 0, "fig", "The figure object"], [312, 3, 2, 0, "figsize", "The figsize for plt.Figure"], [312, 3, 2, 0, "kwargs", "Parameters forwarded to the algorithm's calc_points function."], [312, 3, 2, 0, "levels", "The number of levels for the contourf plot, or None for pure image"], [312, 3, 2, 0, "normalize_var", "Divide the variable by this value"], [312, 3, 2, 0, "normalize_y", "Divide y by this value"], [312, 3, 2, 0, "normalize_z", "Divide z by this value"], [312, 3, 2, 0, "resolution", "The resolution in m"], [312, 3, 2, 0, "ret_im", "Flag for image return"], [312, 3, 2, 0, "ret_state", "Flag for state index return"], [312, 3, 2, 0, "title", "The title"], [312, 3, 2, 0, "var", "The variable name"], [312, 3, 2, 0, "var_max", "Maximum variable value"], [312, 3, 2, 0, "var_min", "Minimum variable value"], [312, 3, 2, 0, "verbosity", "The verbosity level"], [312, 3, 2, 0, "vlabel", "The variable label"], [312, 3, 2, 0, "weight_turbine", "Index of the turbine from which to take the weight"], [312, 3, 2, 0, "x", "The x coordinate of the plane"], [312, 3, 2, 0, "x_direction", "The direction of the x axis, 0 = north"], [312, 3, 2, 0, "ylabel", "The y axis label"], [312, 3, 2, 0, "ymax", "The max y coordinate, or None for automatic"], [312, 3, 2, 0, "ymin", "The min y coordinate, or None for automatic"], [312, 3, 2, 0, "yspace", "The extra space in y direction, before and after wind farm"], [312, 3, 2, 0, "zlabel", "The z axis label"], [312, 3, 2, 0, "zmax", "The max z coordinate, or None for automatic"], [312, 3, 2, 0, "zmin", "The min z coordinate"], [312, 3, 2, 0, "zspace", "The extra space in z direction, below and above wind farm"]], "foxes.output.flow_plots_2d.FlowPlots2D.new": [[312, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.flow_plots_2d.FlowPlots2D.write": [[312, 3, 2, 0, "data", "The data"], [312, 3, 2, 0, "file_path", "The path to the output file"], [312, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [312, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.output": [[314, 1, 1, 0, "Output", "Bases: object"]], "foxes.output.output.Output": [[314, 2, 1, 0, "__init__", ""], [314, 2, 1, 0, "new", "Run-time output model factory."], [314, 2, 1, 0, "print_models", "Prints all model names."], [314, 2, 1, 0, "write", "Writes data to file via pandas."]], "foxes.output.output.Output.new": [[314, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.output.Output.write": [[314, 3, 2, 0, "data", "The data"], [314, 3, 2, 0, "file_path", "The path to the output file"], [314, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [314, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.results_writer": [[316, 1, 1, 0, "ResultsWriter", "Bases: Output"]], "foxes.output.results_writer.ResultsWriter": [[316, 2, 1, "id0", "__init__", ""], [316, 5, 1, 0, "data", "The farm results"], [316, 2, 1, 0, "new", "Run-time output model factory."], [316, 2, 1, 0, "print_models", "Prints all model names."], [316, 2, 1, 0, "write", "Writes data to file via pandas."], [316, 2, 1, 0, "write_csv", "Writes a csv file"]], "foxes.output.results_writer.ResultsWriter.new": [[316, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.results_writer.ResultsWriter.write": [[316, 3, 2, 0, "data", "The data"], [316, 3, 2, 0, "file_path", "The path to the output file"], [316, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [316, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.results_writer.ResultsWriter.write_csv": [[316, 3, 2, 0, "file_path", "Path the the csv file"], [316, 3, 2, 0, "kwargs", "Additional parameters for Output.write()"], [316, 3, 2, 0, "turbine_names", "Use turbine names instead of turbine indices"], [316, 3, 2, 0, "variables", "The variables to be written. If a dict, then the keys are the foxes variables and the values the column names. If None, then all data will be written."], [316, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.output.rose_plot": [[318, 1, 1, 0, "RosePlotOutput", "Bases: Output"], [319, 1, 1, 0, "StatesRosePlotOutput", "Bases: RosePlotOutput"]], "foxes.output.rose_plot.RosePlotOutput": [[318, 2, 1, "id0", "__init__", ""], [318, 2, 1, 0, "get_data", "Get pandas DataFrame with wind rose data."], [318, 2, 1, 0, "get_data_info", "Returns default description for a variable."], [318, 2, 1, 0, "get_figure", "Creates px figure object"], [318, 2, 1, 0, "new", "Run-time output model factory."], [318, 2, 1, 0, "print_models", "Prints all model names."], [318, 5, 1, 0, "results", "The calculation results (farm or points)"], [318, 2, 1, 0, "write", "Writes data to file via pandas."], [318, 2, 1, 0, "write_figure", "Write rose plot to file"]], "foxes.output.rose_plot.RosePlotOutput.get_data": [[318, 3, 2, 0, "legend", "The data legend string"], [318, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [318, 3, 2, 0, "sectors", "The number of wind direction sectors"], [318, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [318, 3, 2, 0, "var", "The data variable name"], [318, 3, 2, 0, "var_bins", "The variable bin seperation values"], [318, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.rose_plot.RosePlotOutput.get_data_info": [[318, 3, 2, 0, "dname", "The variable name"]], "foxes.output.rose_plot.RosePlotOutput.get_figure": [[318, 3, 2, 0, "layout_dict", "Optional parameters for the px figure layout"], [318, 3, 2, 0, "legend", "The data legend string"], [318, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [318, 3, 2, 0, "sectors", "The number of wind direction sectors"], [318, 3, 2, 0, "title_dict", "Optional parameters for the px title layout"], [318, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [318, 3, 2, 0, "var", "The data variable name"], [318, 3, 2, 0, "var_bins", "The variable bin seperation values"], [318, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.rose_plot.RosePlotOutput.new": [[318, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.rose_plot.RosePlotOutput.write": [[318, 3, 2, 0, "data", "The data"], [318, 3, 2, 0, "file_path", "The path to the output file"], [318, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [318, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.rose_plot.RosePlotOutput.write_figure": [[318, 3, 2, 0, "file_name", "Path to the output file"], [318, 3, 2, 0, "layout_dict", "Optional parameters for the px figure layout"], [318, 3, 2, 0, "legend", "The data legend string"], [318, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [318, 3, 2, 0, "sectors", "The number of wind direction sectors"], [318, 3, 2, 0, "title_dict", "Optional parameters for the px title layout"], [318, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [318, 3, 2, 0, "var", "The data variable name"], [318, 3, 2, 0, "var_bins", "The variable bin seperation values"], [318, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.rose_plot.StatesRosePlotOutput": [[319, 2, 1, "id0", "__init__", ""], [319, 2, 1, 0, "get_data", "Get pandas DataFrame with wind rose data."], [319, 2, 1, 0, "get_data_info", "Returns default description for a variable."], [319, 2, 1, 0, "get_figure", "Creates px figure object"], [319, 2, 1, 0, "new", "Run-time output model factory."], [319, 2, 1, 0, "print_models", "Prints all model names."], [319, 2, 1, 0, "write", "Writes data to file via pandas."], [319, 2, 1, 0, "write_figure", "Write rose plot to file"]], "foxes.output.rose_plot.StatesRosePlotOutput.get_data": [[319, 3, 2, 0, "legend", "The data legend string"], [319, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [319, 3, 2, 0, "sectors", "The number of wind direction sectors"], [319, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [319, 3, 2, 0, "var", "The data variable name"], [319, 3, 2, 0, "var_bins", "The variable bin seperation values"], [319, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.rose_plot.StatesRosePlotOutput.get_data_info": [[319, 3, 2, 0, "dname", "The variable name"]], "foxes.output.rose_plot.StatesRosePlotOutput.get_figure": [[319, 3, 2, 0, "layout_dict", "Optional parameters for the px figure layout"], [319, 3, 2, 0, "legend", "The data legend string"], [319, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [319, 3, 2, 0, "sectors", "The number of wind direction sectors"], [319, 3, 2, 0, "title_dict", "Optional parameters for the px title layout"], [319, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [319, 3, 2, 0, "var", "The data variable name"], [319, 3, 2, 0, "var_bins", "The variable bin seperation values"], [319, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.rose_plot.StatesRosePlotOutput.new": [[319, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.rose_plot.StatesRosePlotOutput.write": [[319, 3, 2, 0, "data", "The data"], [319, 3, 2, 0, "file_path", "The path to the output file"], [319, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [319, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.rose_plot.StatesRosePlotOutput.write_figure": [[319, 3, 2, 0, "file_name", "Path to the output file"], [319, 3, 2, 0, "layout_dict", "Optional parameters for the px figure layout"], [319, 3, 2, 0, "legend", "The data legend string"], [319, 3, 2, 0, "point", "Only relevant in case of point results. If None, mean over all points. Else, data from a single point"], [319, 3, 2, 0, "sectors", "The number of wind direction sectors"], [319, 3, 2, 0, "title_dict", "Optional parameters for the px title layout"], [319, 3, 2, 0, "turbine", "Only relevant in case of farm results. If None, mean over all turbines. Else, data from a single turbine"], [319, 3, 2, 0, "var", "The data variable name"], [319, 3, 2, 0, "var_bins", "The variable bin seperation values"], [319, 3, 2, 0, "wd_var", "The wind direction variable name"]], "foxes.output.state_turbine_map": [[321, 1, 1, 0, "StateTurbineMap", "Bases: Output"]], "foxes.output.state_turbine_map.StateTurbineMap": [[321, 2, 1, "id0", "__init__", ""], [321, 2, 1, 0, "new", "Run-time output model factory."], [321, 2, 1, 0, "plot_map", "Plot the heat map for the selected variable."], [321, 2, 1, 0, "print_models", "Prints all model names."], [321, 5, 1, 0, "results", "The farm results"], [321, 2, 1, 0, "write", "Writes data to file via pandas."]], "foxes.output.state_turbine_map.StateTurbineMap.new": [[321, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.state_turbine_map.StateTurbineMap.plot_map": [[321, 3, 2, 0, "ax", "The axis"], [321, 3, 2, 0, "figsize", "The figsize argument for plt.subplots() in case ax is not provided"], [321, 3, 2, 0, "kwargs", "Additional parameters for plt.pcolormesh()"], [321, 3, 2, 0, "title", "The plot title"], [321, 3, 2, 0, "variable", "The variable to plot"]], "foxes.output.state_turbine_map.StateTurbineMap.write": [[321, 3, 2, 0, "data", "The data"], [321, 3, 2, 0, "file_path", "The path to the output file"], [321, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [321, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.output.turbine_type_curves": [[323, 1, 1, 0, "TurbineTypeCurves", "Bases: Output"]], "foxes.output.turbine_type_curves.TurbineTypeCurves": [[323, 2, 1, "id0", "__init__", ""], [323, 5, 1, 0, "mbook", "The model book"], [323, 2, 1, 0, "new", "Run-time output model factory."], [323, 2, 1, 0, "plot_curves", "Plot the power or ct curve."], [323, 2, 1, 0, "print_models", "Prints all model names."], [323, 2, 1, 0, "write", "Writes data to file via pandas."]], "foxes.output.turbine_type_curves.TurbineTypeCurves.new": [[323, 3, 2, 0, "model_type", "The selected derived class name"]], "foxes.output.turbine_type_curves.TurbineTypeCurves.plot_curves": [[323, 3, 2, 0, "P_max", "The power mask value, if of interest"], [323, 3, 2, 0, "axs", "The axis, one for each variable"], [323, 3, 2, 0, "figsize", "The figsize argument for plt.subplots() in case ax is not provided"], [323, 3, 2, 0, "kwargs", "Additional parameters for plt.plot()"], [323, 3, 2, 0, "pmax_args", "Additionals parameters for plt.plot() for power mask case"], [323, 3, 2, 0, "rho", "The air density value"], [323, 3, 2, 0, "ti", "The TI value"], [323, 3, 2, 0, "titles", "The plot titles, one for each variable"], [323, 3, 2, 0, "turbine_type", "The turbine type name from the model book"], [323, 3, 2, 0, "variables", "For example FV.P or FV.CT"], [323, 3, 2, 0, "ws_max", "The maximal wind speed"], [323, 3, 2, 0, "ws_min", "The minimal wind speed"], [323, 3, 2, 0, "ws_step", "The wind speed step size"], [323, 3, 2, 0, "x_label", "The x axis label"], [323, 3, 2, 0, "y_labels", "The y axis lables, one for each variable"]], "foxes.output.turbine_type_curves.TurbineTypeCurves.write": [[323, 3, 2, 0, "data", "The data"], [323, 3, 2, 0, "file_path", "The path to the output file"], [323, 3, 2, 0, "format_col2var", "Mapping from column names to flappy variables, for formatting"], [323, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. {FV.P: '{:.4f}'}. Note that the keys are flappy variables"]], "foxes.utils": [[325, 0, 0, 1, "abl", ""], [341, 0, 0, 1, "cubic_roots", ""], [342, 0, 0, 1, "data_book", ""], [344, 0, 0, 1, "dict", ""], [346, 0, 0, 1, "geom2d", ""], [361, 0, 0, 1, "geopandas_helpers", ""], [368, 0, 0, 1, "pandas_helpers", ""], [370, 0, 0, 1, "plotly_helpers", ""], [372, 0, 0, 1, "runners", ""], [376, 0, 0, 1, "subclasses", ""], [378, 0, 0, 1, "two_circles", ""], [381, 0, 0, 1, "wind_dir", ""]], "foxes.utils.abl": [[326, 0, 0, 1, "neutral", ""], [330, 0, 0, 1, "sheared", ""], [332, 0, 0, 1, "stable", ""], [337, 0, 0, 1, "unstable", ""]], "foxes.utils.abl.neutral": [[327, 6, 1, 0, "calc_ws", "Calculate wind speeds at given height"], [328, 6, 1, 0, "logz", "Calculates the log factor for wind speed profiles."], [329, 6, 1, 0, "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.neutral.calc_ws": [[327, 3, 2, 0, "height", "The evaluation height"], [327, 3, 2, 0, "kappa", "The van-Karman constant"], [327, 3, 2, 0, "ustar", "The friction velocity"], [327, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.neutral.logz": [[328, 3, 2, 0, "height", "The evaluation height"], [328, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.neutral.ustar": [[329, 3, 2, 0, "h_ref", "The reference height"], [329, 3, 2, 0, "kappa", "The van-Karman constant"], [329, 3, 2, 0, "ws_ref", "The reference wind speed"], [329, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.sheared": [[331, 6, 1, 0, "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.sheared.calc_ws": [[331, 3, 2, 0, "WS0", "Reference wind speed"], [331, 3, 2, 0, "height", "The evaluation height"], [331, 3, 2, 0, "height0", "Reference height"], [331, 3, 2, 0, "shear", "Shear exponent"]], "foxes.utils.abl.stable": [[333, 6, 1, 0, "calc_ws", "Calculate wind speeds at given height"], [334, 6, 1, 0, "logz", "Calculates the log factor for wind speed profiles."], [335, 6, 1, 0, "psi", "The Psi function"], [336, 6, 1, 0, "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.stable.calc_ws": [[333, 3, 2, 0, "height", "The evaluation height"], [333, 3, 2, 0, "kappa", "The van-Karman constant"], [333, 3, 2, 0, "psi", "The Psi function values"], [333, 3, 2, 0, "ustar", "The friction velocity"], [333, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.stable.logz": [[334, 3, 2, 0, "height", "The evaluation height"], [334, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.stable.psi": [[335, 3, 2, 0, "height", "The height value"], [335, 3, 2, 0, "mol", "The Monin-Obukhov height"]], "foxes.utils.abl.stable.ustar": [[336, 3, 2, 0, "h_ref", "The reference height"], [336, 3, 2, 0, "kappa", "The van-Karman constant"], [336, 3, 2, 0, "mol", "The Monin-Obukhov height"], [336, 3, 2, 0, "ws_ref", "The reference wind speed"], [336, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.unstable": [[338, 6, 1, 0, "calc_ws", "Calculate wind speeds at given height"], [339, 6, 1, 0, "psi", "The Psi function"], [340, 6, 1, 0, "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable.calc_ws": [[338, 3, 2, 0, "height", "The evaluation height"], [338, 3, 2, 0, "kappa", "The van-Karman constant"], [338, 3, 2, 0, "psi", "The Psi function values"], [338, 3, 2, 0, "ustar", "The friction velocity"], [338, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.abl.unstable.psi": [[339, 3, 2, 0, "height", "The height value"], [339, 3, 2, 0, "mol", "The Monin-Obukhov height"]], "foxes.utils.abl.unstable.ustar": [[340, 3, 2, 0, "h_ref", "The reference height"], [340, 3, 2, 0, "kappa", "The van-Karman constant"], [340, 3, 2, 0, "mol", "The Monin-Obukhov height"], [340, 3, 2, 0, "ws_ref", "The reference wind speed"], [340, 3, 2, 0, "z0", "The roughness length"]], "foxes.utils.data_book": [[343, 1, 1, 0, "DataBook", "Bases: object"]], "foxes.utils.data_book.DataBook": [[343, 2, 1, "id0", "__init__", ""], [343, 2, 1, 0, "add_data_package", "Add static files from a package location."], [343, 2, 1, 0, "add_data_package_file", "Add a static file from a package location."], [343, 2, 1, 0, "add_file", "Add a file path"], [343, 2, 1, 0, "add_files", "Add file paths"], [343, 5, 1, 0, "dbase", "The data base. Key: context str, value: dict (file name str to pathlib.Path)"], [343, 2, 1, 0, "get_file_path", "Get path of a file"], [343, 2, 1, 0, "toc", "Get list of contents"]], "foxes.utils.data_book.DataBook.add_data_package": [[343, 3, 2, 0, "context", "The context"], [343, 3, 2, 0, "file_sfx", "File endings to include"], [343, 3, 2, 0, "package", "The package, must contain init file"]], "foxes.utils.data_book.DataBook.add_data_package_file": [[343, 3, 2, 0, "context", "The context"], [343, 3, 2, 0, "package", "The package, must contain init.py` file"]], "foxes.utils.data_book.DataBook.add_file": [[343, 3, 2, 0, "context", "The context"], [343, 3, 2, 0, "file_path", "The file path"]], "foxes.utils.data_book.DataBook.add_files": [[343, 3, 2, 0, "context", "The context"], [343, 3, 2, 0, "file_paths", "The file paths"]], "foxes.utils.data_book.DataBook.get_file_path": [[343, 3, 2, 0, "check_raw", "Check if file_name exists as given, and in that case return the path"], [343, 3, 2, 0, "context", "The context"], [343, 3, 2, 0, "errors", "Flag for raising KeyError, otherwise return None, if context of file_name not found"], [343, 3, 2, 0, "file_name", "The file name"]], "foxes.utils.data_book.DataBook.toc": [[343, 3, 2, 0, "context", "The context"]], "foxes.utils.dict": [[345, 1, 1, 0, "Dict", "Bases: dict"]], "foxes.utils.dict.Dict": [[345, 2, 1, "id0", "__init__", ""], [345, 2, 1, 0, "__new__", ""], [345, 2, 1, 0, "clear", ""], [345, 2, 1, 0, "copy", ""], [345, 2, 1, 0, "fromkeys", "Create a new dictionary with keys from iterable and values set to value."], [345, 2, 1, 0, "get", "Return the value for key if key is in the dictionary, else default."], [345, 2, 1, 0, "items", ""], [345, 2, 1, 0, "keys", ""], [345, 5, 1, 0, "name", "The dictionary name"], [345, 2, 1, 0, "pop", "If key is not found, d is returned if given, otherwise KeyError is raised"], [345, 2, 1, 0, "popitem", "Remove and return a (key, value) pair as a 2-tuple."], [345, 2, 1, 0, "setdefault", "Insert key with a value of default if key is not in the dictionary."], [345, 2, 1, 0, "update", "If E is present and has a .keys() method, then does:  for k in E: D[k] = E[k] If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] = v In either case, this is followed by: for k in F:  D[k] = F[k]"], [345, 2, 1, 0, "values", ""]], "foxes.utils.geom2d": [[347, 0, 0, 1, "area_geometry", ""], [353, 0, 0, 1, "circle", ""], [355, 0, 0, 1, "example_intersection", ""], [356, 0, 0, 1, "example_union", ""], [357, 0, 0, 1, "half_plane", ""], [359, 0, 0, 1, "polygon", ""]], "foxes.utils.geom2d.area_geometry": [[348, 1, 1, 0, "AreaGeometry", "Bases: object"], [349, 1, 1, 0, "AreaIntersection", "Bases: AreaGeometry"], [350, 1, 1, 0, "AreaUnion", "Bases: AreaGeometry"], [351, 1, 1, 0, "InvertedAreaGeometry", "Bases: AreaGeometry"], [352, 1, 1, 0, "InvertedAreaUnion", "Bases: InvertedAreaGeometry"]], "foxes.utils.geom2d.area_geometry.AreaGeometry": [[348, 2, 1, 0, "__init__", ""], [348, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [348, 2, 1, 0, "inverse", "Get the inverted geometry"], [348, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [348, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [348, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [348, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.area_geometry.AreaGeometry.add_to_figure": [[348, 3, 2, 0, "ax", "The axis object"], [348, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [348, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [348, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [348, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.area_geometry.AreaGeometry.points_distance": [[348, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [348, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.area_geometry.AreaGeometry.points_inside": [[348, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.area_geometry.AreaIntersection": [[349, 2, 1, 0, "__init__", ""], [349, 2, 1, 0, "__new__", ""], [349, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [349, 2, 1, 0, "inverse", "Get the inverted geometry"], [349, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [349, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [349, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [349, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.area_geometry.AreaIntersection.add_to_figure": [[349, 3, 2, 0, "ax", "The axis object"], [349, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [349, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [349, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [349, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.area_geometry.AreaIntersection.points_distance": [[349, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [349, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.area_geometry.AreaIntersection.points_inside": [[349, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.area_geometry.AreaUnion": [[350, 2, 1, "id0", "__init__", ""], [350, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [350, 5, 1, 0, "geometries", "The geometries"], [350, 2, 1, 0, "inverse", "Get the inverted geometry"], [350, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [350, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [350, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [350, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.area_geometry.AreaUnion.add_to_figure": [[350, 3, 2, 0, "ax", "The axis object"], [350, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [350, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [350, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [350, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.area_geometry.AreaUnion.points_distance": [[350, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [350, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.area_geometry.AreaUnion.points_inside": [[350, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry": [[351, 2, 1, "id0", "__init__", ""], [351, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [351, 2, 1, 0, "inverse", "Get the inverted geometry"], [351, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [351, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [351, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [351, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.add_to_figure": [[351, 3, 2, 0, "ax", "The axis object"], [351, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [351, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [351, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [351, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.points_distance": [[351, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [351, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.points_inside": [[351, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.area_geometry.InvertedAreaUnion": [[352, 2, 1, "id0", "__init__", ""], [352, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [352, 2, 1, 0, "inverse", "Get the inverted geometry"], [352, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [352, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [352, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [352, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.add_to_figure": [[352, 3, 2, 0, "ax", "The axis object"], [352, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [352, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [352, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [352, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.points_distance": [[352, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [352, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.points_inside": [[352, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.circle": [[354, 1, 1, 0, "Circle", "Bases: AreaGeometry"]], "foxes.utils.geom2d.circle.Circle": [[354, 2, 1, "id0", "__init__", ""], [354, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [354, 5, 1, 0, "centre", "The centre point, shape: (2,)"], [354, 2, 1, 0, "inverse", "Get the inverted geometry"], [354, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [354, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [354, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [354, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."], [354, 5, 1, 0, "radius", "The radius"]], "foxes.utils.geom2d.circle.Circle.add_to_figure": [[354, 3, 2, 0, "ax", "The axis object"], [354, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [354, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [354, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [354, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.circle.Circle.points_distance": [[354, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [354, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.circle.Circle.points_inside": [[354, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.half_plane": [[358, 1, 1, 0, "HalfPlane", "Bases: AreaGeometry"]], "foxes.utils.geom2d.half_plane.HalfPlane": [[358, 2, 1, "id1", "__init__", ""], [358, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [358, 5, 1, 0, "centre", "The centre point, shape: (2,)"], [358, 2, 1, 0, "inverse", "Get the inverted geometry"], [358, 5, 1, "id0", "n", "The direction vector orthogonal to n, shape: (2,)"], [358, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [358, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [358, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [358, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.half_plane.HalfPlane.add_to_figure": [[358, 3, 2, 0, "ax", "The axis object"], [358, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [358, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [358, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [358, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.half_plane.HalfPlane.points_distance": [[358, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [358, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.half_plane.HalfPlane.points_inside": [[358, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geom2d.polygon": [[360, 1, 1, 0, "ClosedPolygon", "Bases: AreaGeometry"]], "foxes.utils.geom2d.polygon.ClosedPolygon": [[360, 2, 1, "id0", "__init__", ""], [360, 2, 1, 0, "add_to_figure", "Add image to (x,y) figure."], [360, 2, 1, 0, "inverse", "Get the inverted geometry"], [360, 2, 1, 0, "p_max", "Returns maximal (x,y) point."], [360, 2, 1, 0, "p_min", "Returns minimal (x,y) point."], [360, 5, 1, 0, "points", "The polygon points"], [360, 2, 1, 0, "points_distance", "Calculates point distances wrt boundary."], [360, 2, 1, 0, "points_inside", "Tests if points are inside the geometry."], [360, 5, 1, 0, "poly", "The closed polygon geometry"]], "foxes.utils.geom2d.polygon.ClosedPolygon.add_to_figure": [[360, 3, 2, 0, "ax", "The axis object"], [360, 3, 2, 0, "fill_mode", "Fill the area. Options: dist, dist_inside, dist_outside, inside_<color>, outside_<color>"], [360, 3, 2, 0, "pars_boundary", "Parameters for boundary plotting command"], [360, 3, 2, 0, "pars_distance", "Parameters for distance plotting command"], [360, 3, 2, 0, "show_boundary", "Add the boundary line to the image"]], "foxes.utils.geom2d.polygon.ClosedPolygon.points_distance": [[360, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"], [360, 3, 2, 0, "return_nearest", "Flag for return of the nearest point on bundary"]], "foxes.utils.geom2d.polygon.ClosedPolygon.points_inside": [[360, 3, 2, 0, "points", "The probe points, shape (n_points, 2)"]], "foxes.utils.geopandas_helpers": [[362, 6, 1, 0, "check_import_gpd", "Checks if library import worked, raises error otherwise."], [363, 6, 1, 0, "check_import_utm", "Checks if library import worked, raises error otherwise."], [364, 6, 1, 0, "read_shp", "Read a shape file"], [365, 6, 1, 0, "read_shp_polygons", "Reads the polygon points from a shp file."], [366, 6, 1, 0, "shp2csv", "Read shape file, write csv file"], [367, 6, 1, 0, "shp2geom2d", "Read shapefile into geom2d geometry"]], "foxes.utils.geopandas_helpers.read_shp": [[364, 3, 2, 0, "fname", "Path to the .shp file"], [364, 3, 2, 0, "kwargs", "Additional parameters for geopandas.read_file()"]], "foxes.utils.geopandas_helpers.read_shp_polygons": [[365, 3, 2, 0, "fname", "Path to the .shp file"], [365, 3, 2, 0, "geom_col", "The geometry column"], [365, 3, 2, 0, "kwargs", "Additional parameters for geopandas.read_shp()"], [365, 3, 2, 0, "name_col", "Column that contains the area names"], [365, 3, 2, 0, "names", "The names of the polygons to be extracted. All by default"], [365, 3, 2, 0, "ret_utm_zone", "Return UTM zone plus letter as str"], [365, 3, 2, 0, "to_utm", "Convert to UTM coordinates. If str, then UTM zone plus letter, e.g. \"32U\""]], "foxes.utils.geopandas_helpers.shp2csv": [[366, 3, 2, 0, "in_kwargs", "Additional parameters for geopandas.read_file()"], [366, 3, 2, 0, "out_kwargs", "Additional parameters for geopandas to_csv()"], [366, 3, 2, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.utils.geopandas_helpers.shp2geom2d": [[367, 3, 2, 0, "args", "Arguments for read_shp_polygons()"], [367, 3, 2, 0, "kwargs", "Keyword arguments for read_shp_polygons()"], [367, 3, 2, 0, "ret_utm_zone", "Return UTM zone plus letter as str"]], "foxes.utils.pandas_helpers": [[369, 1, 1, 0, "PandasFileHelper", "Bases: object"]], "foxes.utils.pandas_helpers.PandasFileHelper": [[369, 5, 1, 0, "DATA_FILE_FORMAT", "The supported file formats for data export"], [369, 5, 1, 0, "DEFAULT_FORMAT_DICT", "Default column formatting"], [369, 5, 1, 0, "DEFAULT_READING_PARAMETERS", "Default parameters for file reading for the supported file formats"], [369, 5, 1, 0, "DEFAULT_WRITING_PARAMETERS", "Default parameters for file writing for the supported file formats"], [369, 2, 1, 0, "__init__", ""], [369, 2, 1, 0, "read_file", "Helper for reading data according to file ending."], [369, 2, 1, 0, "write_file", "Helper for writing data according to file ending."]], "foxes.utils.pandas_helpers.PandasFileHelper.read_file": [[369, 3, 2, 0, "file_path", "The path to the file"]], "foxes.utils.pandas_helpers.PandasFileHelper.write_file": [[369, 3, 2, 0, "data", "The data"], [369, 3, 2, 0, "file_path", "The path to the file"], [369, 3, 2, 0, "format_dict", "Dictionary with format entries for columns, e.g. '{:.4f}'"]], "foxes.utils.plotly_helpers": [[371, 6, 1, 0, "show_plotly_fig", "Displays a plotly figure in a window"]], "foxes.utils.runners": [[373, 1, 1, 0, "DaskRunner", "Bases: Runner"], [374, 1, 1, 0, "DefaultRunner", "Bases: Runner"], [375, 1, 1, 0, "Runner", "Bases: object"]], "foxes.utils.runners.DaskRunner": [[373, 2, 1, "id0", "__init__", ""], [373, 5, 1, 0, "client_args", "Explicit arguments for the client setup"], [373, 5, 1, 0, "cluster_args", "Explicit arguments for the cluster setup"], [373, 2, 1, 0, "finalize", "Finallize the runner"], [373, 2, 1, 0, "initialize", "Initialize the runner"], [373, 4, 1, 0, "initialized", "Initialization flag"], [373, 2, 1, 0, "print", "Prints if verbosity is not zero"], [373, 5, 1, 0, "progress_bar", "Flag for showing progress bar"], [373, 2, 1, 0, "run", "Runs the given function."], [373, 5, 1, 0, "scheduler", "The dask scheduler choice"], [373, 5, 1, 0, "verbosity", "The verbosity level, 0 = silent"]], "foxes.utils.runners.DaskRunner.run": [[373, 3, 2, 0, "args", "The function arguments"], [373, 3, 2, 0, "func", "The function to be run"], [373, 3, 2, 0, "kwargs", "The function keyword arguments"]], "foxes.utils.runners.DefaultRunner": [[374, 2, 1, "id0", "__init__", ""], [374, 2, 1, 0, "finalize", "Finalize the runner"], [374, 2, 1, 0, "initialize", "Initialize the runner"], [374, 4, 1, 0, "initialized", "Initialization flag"], [374, 2, 1, 0, "run", "Runs the given function."]], "foxes.utils.runners.DefaultRunner.run": [[374, 3, 2, 0, "args", "The function arguments"], [374, 3, 2, 0, "func", "The function to be run"], [374, 3, 2, 0, "kwargs", "The function keyword arguments"]], "foxes.utils.runners.Runner": [[375, 2, 1, "id0", "__init__", ""], [375, 2, 1, 0, "finalize", "Finalize the runner"], [375, 2, 1, 0, "initialize", "Initialize the runner"], [375, 4, 1, 0, "initialized", "Initialization flag"], [375, 2, 1, 0, "run", "Runs the given function."]], "foxes.utils.runners.Runner.run": [[375, 3, 2, 0, "args", "The function arguments"], [375, 3, 2, 0, "func", "The function to be run"], [375, 3, 2, 0, "kwargs", "The function keyword arguments"]], "foxes.utils.subclasses": [[377, 6, 1, 0, "all_subclasses", "Searches all classes derived from some base class."]], "foxes.utils.subclasses.all_subclasses": [[377, 3, 2, 0, "cls", "The base class"]], "foxes.utils.two_circles": [[379, 6, 1, 0, "area", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [380, 6, 1, 0, "calc_area", "Calculates the intersection of two circles."]], "foxes.utils.two_circles.area": [[379, 3, 2, 0, "d", "The distance between the centre points of the two circles"], [379, 3, 2, 0, "r1", "The radius of circle 1"], [379, 3, 2, 0, "r2", "The radius of circle 2"]], "foxes.utils.two_circles.calc_area": [[380, 3, 2, 0, "d", "The distance between the centre points of the two circles"], [380, 3, 2, 0, "r1", "The radius of circle 1"], [380, 3, 2, 0, "r2", "The radius of circle 2"]], "foxes.utils.wind_dir": [[382, 6, 1, 0, "delta_wd", "Calculates wd_b - wd_a."], [383, 6, 1, 0, "uv2wd", "Calculate wind direction from wind vectors."], [384, 6, 1, 0, "wd2uv", "Calculate wind vectors from wind directions in degrees."], [385, 6, 1, 0, "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [386, 6, 1, 0, "wdvec2wd", "Calculate wind direction from wind direction vectors."]], "foxes.utils.wind_dir.delta_wd": [[382, 3, 2, 0, "wd_a", "Array of wind directions. Shape: any shape"], [382, 3, 2, 0, "wd_b", "Array of wind directions. Shape: same as wd_a"]], "foxes.utils.wind_dir.uv2wd": [[383, 3, 2, 0, "axis", "The axis which corresponds to (u, v) components"], [383, 3, 2, 0, "uv", "The wind vectors, any shape"]], "foxes.utils.wind_dir.wd2uv": [[384, 3, 2, 0, "axis", "Axis location where to insert the (u, v) components into the shape of wd"], [384, 3, 2, 0, "wd", "Wind direction array (any shape)"], [384, 3, 2, 0, "ws", "The wind speed. Has to broadcast against wd."]], "foxes.utils.wind_dir.wd2wdvec": [[385, 3, 2, 0, "axis", "Location where to insert the (x, y) dimension into the shape of wd"], [385, 3, 2, 0, "wd", "Wind direction array (any shape)"], [385, 3, 2, 0, "ws", "The wind speed. Has to broadcast against wd."]], "foxes.utils.wind_dir.wdvec2wd": [[386, 3, 2, 0, "axis", "The axis which corresponds to (x, y) components"], [386, 3, 2, 0, "wdvec", "The wind direction vectors, any shape"]], "foxes.variables": [[387, 5, 1, 0, "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [387, 5, 1, 0, "AMB_CT", "The ambient thrust coefficient"], [387, 5, 1, 0, "AMB_P", "The ambient power, unit depends on user choice"], [387, 5, 1, 0, "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [387, 5, 1, 0, "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [387, 5, 1, 0, "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [387, 5, 1, 0, "AMB_RHO", "The ambient air density in kg/m3"], [387, 5, 1, 0, "AMB_T", "The ambient temperature in Kelvin"], [387, 5, 1, 0, "AMB_TI", "The ambient turbulence intensity"], [387, 5, 1, 0, "AMB_WD", "The ambient wind direction in degrees"], [387, 5, 1, 0, "AMB_WS", "The ambient wind speed in m/s"], [387, 5, 1, 0, "AMB_YAW", "The ambient absolute yaw angle of a turbine in degrees"], [387, 5, 1, 0, "AMB_YAWM", "The ambient relative yaw angle of a turbine in degrees"], [387, 5, 1, 0, "AMB_YLD", "Ambient yield in GWh/a"], [387, 5, 1, 0, "CAP", "Capacity, equals P/P_nominal"], [387, 5, 1, 0, "CT", "The thrust coefficient"], [387, 5, 1, 0, "D", "The rotor diameter in m"], [387, 5, 1, 0, "EFF", "Efficiency, equals P/AMB_P"], [387, 5, 1, 0, "H", "The height over ground in m"], [387, 5, 1, 0, "K", "Wake growth parameter"], [387, 5, 1, 0, "KB", "KTI value for zero TI, K = KB + KTI*TI"], [387, 5, 1, 0, "KTI", "Factor between K and TI, K = KB + KTI*TI"], [387, 5, 1, 0, "MAX_P", "The maximal power, for derating/boost"], [387, 5, 1, 0, "MOL", "The Monin-Ubukhof length in m"], [387, 5, 1, 0, "ORDER", "The turbine order"], [387, 5, 1, 0, "P", "The power, unit depends on user choice"], [387, 5, 1, 0, "REWS", "Rotor effective wind speed in m/s"], [387, 5, 1, 0, "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [387, 5, 1, 0, "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [387, 5, 1, 0, "RHO", "The air density in kg/m3"], [387, 5, 1, 0, "SHEAR", "The shear exponent"], [387, 5, 1, 0, "T", "The temperature in Kelvin"], [387, 5, 1, 0, "TI", "The turbulence intensity"], [387, 5, 1, 0, "TXYH", "The turbine rotor centre coordinate vector (x, y, height)"], [387, 5, 1, 0, "WD", "The wind direction in degrees"], [387, 5, 1, 0, "WEIGHT", "The statistical weight of a state"], [387, 5, 1, 0, "WS", "The wind speed in m/s"], [387, 5, 1, 0, "X", "The x coordinate in m"], [387, 5, 1, 0, "XYH", "The vector (x, y, height)"], [387, 5, 1, 0, "Y", "The y coordinate in m"], [387, 5, 1, 0, "YAW", "The absolute yaw angle of a turbine in degrees"], [387, 5, 1, 0, "YAWM", "The relative yaw angle of a turbine in degrees"], [387, 5, 1, 0, "YLD", "Yield in GWh/a"], [387, 5, 1, 0, "Z0", "The roughness length in m"], [387, 5, 1, "id0", "var2amb", "Mapping from ambient variable to the corresponding waked variable"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:parameter", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 391, 398], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31], "downwind": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14], "model": [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 43, 44, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 396], "calc_ord": [5, 6], "calcord": 6, "farm_wakes_calc": [7, 8, 24, 25], "farmwakescalcul": [8, 25], "point_wakes_calc": [9, 10], "pointwakescalcul": 10, "set_amb_farm_result": [11, 12], "setambfarmresult": 12, "set_amb_point_result": [13, 14], "setambpointresult": 14, "iter": [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27], "converg": [19, 20, 21, 22, 23], "convcrit": 20, "convcritlist": 21, "convvardelta": 22, "defaultconv": 23, "loop_runn": [26, 27], "looprunn": 27, "constant": 28, "core": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264], "data": [32, 33, 71, 72, 73, 74, 75, 76, 77, 78, 79, 393, 397, 402, 403], "data_calc_model": [34, 35], "datacalcmodel": 35, "farm_control": [36, 37, 119, 120, 121], "farmcontrol": 37, "farm_data_model": [38, 39, 40], "farmdatamodel": 39, "farmdatamodellist": 40, "farm_model": [41, 42, 122, 123, 124], "farmmodel": 42, "partial_wakes_model": [45, 46], "partialwakesmodel": 46, "point_data_model": [47, 48, 49], "pointdatamodel": 48, "pointdatamodellist": 49, "rotor_model": [50, 51, 147, 148, 149, 150, 151], "rotormodel": 51, "state": [52, 53, 54, 77, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 393], "extendedst": 53, "turbin": [55, 56, 401], "turbine_model": [57, 58, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174], "turbinemodel": 58, "turbine_typ": [59, 60, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "turbinetyp": 60, "vertical_profil": [61, 62, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "verticalprofil": 62, "wake_fram": [63, 64, 202, 203, 204, 205, 206, 207, 208, 209, 210], "wakefram": 64, "wake_model": [65, 66, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "wakemodel": 66, "wake_superposit": [67, 68, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "wakesuperposit": 68, "wind_farm": [69, 70], "windfarm": 70, "farm": [72, 393], "pars": [73, 74, 75], "parse_pct_file_nam": 74, "parse_pct_two_fil": 75, "power_ct_curv": 76, "static_data": [78, 79], "staticdata": 79, "input": [80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "farm_layout": [81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 274, 275, 307, 308], "from_csv": [82, 83], "add_from_csv": 83, "from_df": [84, 85], "add_from_df": 85, "from_fil": [86, 87], "add_from_fil": 87, "from_json": [88, 89], "add_from_json": 89, "grid": [90, 91, 132, 133, 150, 151], "add_grid": 91, "row": [92, 93, 401], "add_row": 93, "creat": [95, 96, 97, 98], "random_abl_st": [96, 97, 98], "create_random_abl_st": 97, "write_random_abl_st": 98, "field_data_nc": [99, 100], "fielddatanc": 100, "multi_height": [101, 102, 103], "multiheightst": 102, "multiheighttimeseri": 103, "scan_w": [104, 105], "scanw": 105, "singl": [106, 107, 401], "singlestatest": 107, "states_t": [108, 109, 110], "statest": 109, "timeseri": [110, 393, 402], "windio": [111, 112, 113, 114, 115, 116, 117], "read_anlys": 113, "read_cas": 114, "read_farm": 115, "read_resourc": 116, "read_sit": 117, "basic": [120, 121], "basicfarmcontrol": 121, "turbine2farm": [123, 124], "turbine2farmmodel": 124, "model_book": [125, 126], "modelbook": 126, "partial_wak": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "axiwak": [128, 129], "partialaxiwak": 129, "distslic": [130, 131], "partialdistslicedwak": 131, "partialgrid": 133, "map": [134, 135], "rotor_point": [136, 137], "rotorpoint": 137, "top_hat": [138, 139, 223, 224], "partialtophat": 139, "point_model": [140, 141, 142, 143, 144, 145, 146], "set_uniform_data": [141, 142], "setuniformdata": 142, "tke2ti": [143, 144], "wake_delta": [145, 146], "wakedelta": 146, "centr": [148, 149], "centrerotor": 149, "gridrotor": 151, "calcul": [153, 154], "kti_model": [155, 156], "kti": 156, "power_mask": [157, 158], "powermask": 158, "rotor_centre_calc": [159, 160], "rotorcentrecalc": 160, "sector_manag": [161, 162], "sectormanag": 162, "set_xyhd": [163, 164], "setxyhd": 164, "set_farm_var": [165, 166], "setfarmvar": 166, "table_factor": [167, 168], "tablefactor": 168, "thrust2ct": [169, 170], "yaw2yawm": [171, 172], "yawm2yaw": [173, 174], "cpct_file": [176, 177], "cpctfile": 177, "cpct_from_two": [178, 179], "cpctfromtwo": 179, "pct_file": [180, 181], "pctfile": 181, "pct_from_two": [182, 183], "pctfromtwo": 183, "null_typ": [184, 185], "nulltyp": 185, "wsrho2pct_two_fil": [186, 187], "wsrho2pcttwofil": 187, "abl_log": [189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "abl_log_neutral_w": [190, 191], "abllogneutralwsprofil": 191, "abl_log_stable_w": [192, 193], "abllogstablewsprofil": 193, "abl_log_unstable_w": [194, 195], "abllogunstablewsprofil": 195, "abl_log_w": [196, 197], "abllogwsprofil": 197, "sheared_w": [198, 199], "shearedprofil": 199, "uniform": [200, 201], "uniformprofil": 201, "farm_ord": [203, 204], "farmord": 204, "rotor_wd": [205, 206], "rotorwd": 206, "streamlin": [207, 208], "yawed_wak": [209, 210], "yawedwak": 210, "axisymmetr": [212, 213], "axisymmetricwakemodel": 213, "dist_slic": [214, 215], "distslicedwakemodel": 215, "gaussian": [216, 217], "gaussianwakemodel": 217, "ti": [218, 219, 220, 221, 222], "crespo_hernandez": [219, 220], "crespohernandeztiwak": 220, "iec_ti": [221, 222], "iectiwak": 222, "tophatwakemodel": 224, "wind": [225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 393, 397, 400, 403], "bastankhah": [226, 227], "bastankhahwak": 227, "jensen": [228, 229], "jensenwak": 229, "porte_agel": [230, 231, 232], "porteagelmodel": 231, "porteagelwak": 232, "turbopark": [233, 234, 235], "turboparkwak": 234, "turboparkwakeix": 235, "linear": [237, 238], "linearsuperposit": 238, "max": [239, 240], "maxsuperposit": 240, "product": [241, 242], "productsuperposit": 242, "quadrat": [243, 244], "quadraticsuperposit": 244, "ti_superp": [245, 246], "tisuperposit": 246, "opt": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "constraint": [248, 249, 250, 251, 252, 253, 277, 278, 279, 280, 281, 282, 283, 284], "area_geometri": [249, 250, 251, 347, 348, 349, 350, 351, 352], "areageometryconstraint": 250, "farmboundaryconstraint": 251, "min_dist": [252, 253], "mindistconstraint": 253, "farm_constraint": [255, 256], "farmconstraint": 256, "farm_object": [257, 258], "farmobject": 258, "farm_opt_problem": [259, 260], "farmoptproblem": 260, "farm_vars_problem": [261, 262], "farmvarsproblem": 262, "pop_stat": [263, 264], "popstat": 264, "object": [265, 266, 267, 268, 269, 270, 271, 293, 294, 295, 296, 297, 298, 299], "farm_var": [266, 267, 268, 269], "farmvarobject": 267, "maxfarmpow": 268, "minimalmaxti": 269, "max_n_turbin": [270, 271], "maxnturbin": 271, "problem": [272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "layout": [273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 393, 395], "farmlayoutoptproblem": 275, "geom_layout": [276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "boundari": 278, "cfixn": 279, "cmaxn": 280, "cmindens": 281, "cminn": 282, "mindist": 283, "valid": 284, "geomlayout": 286, "geom_layout_grid": [287, 288], "geomlayoutgrid": 288, "geom_reggrid": [289, 290, 291, 292], "geomreggrid": [290, 292], "maxdens": 294, "maxgridspac": 295, "memimadist": 296, "ofixn": 297, "omaxn": 298, "ominn": 299, "reggrids_layout": [300, 301], "reggridslayoutoptproblem": 301, "regular_layout": [302, 303], "regularlayoutoptproblem": 303, "opt_farm_var": [304, 305], "optfarmvar": 305, "output": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "farmlayoutoutput": 308, "farm_results_ev": [309, 310], "farmresultsev": 310, "flow_plots_2d": [311, 312], "flowplots2d": 312, "results_writ": [315, 316], "resultswrit": 316, "rose_plot": [317, 318, 319], "roseplotoutput": 318, "statesroseplotoutput": 319, "state_turbine_map": [320, 321], "stateturbinemap": 321, "turbine_type_curv": [322, 323], "turbinetypecurv": 323, "util": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386], "abl": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340], "neutral": [326, 327, 328, 329], "calc_w": [327, 331, 333, 338], "logz": [328, 334], "ustar": [329, 336, 340], "shear": [330, 331], "stabl": [332, 333, 334, 335, 336], "psi": [335, 339], "unstabl": [337, 338, 339, 340], "cubic_root": 341, "data_book": [342, 343], "databook": 343, "dict": [344, 345], "geom2d": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360], "areageometri": 348, "areaintersect": 349, "areaunion": 350, "invertedareageometri": 351, "invertedareaunion": 352, "circl": [353, 354], "example_intersect": 355, "example_union": 356, "half_plan": [357, 358], "halfplan": 358, "polygon": [359, 360], "closedpolygon": 360, "geopandas_help": [361, 362, 363, 364, 365, 366, 367], "check_import_gpd": 362, "check_import_utm": 363, "read_shp": 364, "read_shp_polygon": 365, "shp2csv": 366, "shp2geom2d": 367, "pandas_help": [368, 369], "pandasfilehelp": 369, "plotly_help": [370, 371], "show_plotly_fig": 371, "runner": [372, 373, 374, 375], "daskrunn": 373, "defaultrunn": 374, "subclass": [376, 377], "all_subclass": 377, "two_circl": [378, 379, 380], "area": 379, "calc_area": 380, "wind_dir": [381, 382, 383, 384, 385, 386], "delta_wd": 382, "uv2wd": 383, "wd2uv": 384, "wd2wdvec": 385, "wdvec2wd": 386, "variabl": 387, "api": 388, "exampl": 389, "histori": 390, "v0": 390, "1": 390, "0": 390, "alpha": 390, "2": 390, "3": 390, "4": 390, "5": 390, "6": 390, "welcom": 391, "contribut": 391, "acknowledg": 391, "instal": 392, "requir": 392, "via": 392, "conda": 392, "virtual": 392, "python": 392, "environ": 392, "standard": 392, "user": 392, "develop": 392, "pip": 392, "static": 393, "test_farm_67": 393, "csv": 393, "ambient": 393, "wrf": 393, "4464": 393, "gz": 393, "abl_states_6000": 393, "timeseries_3000": 393, "timeseries_8000": 393, "wind_rose_bremen": 393, "wind_rot": 393, "nc": 393, "power": [393, 399], "thrust": 393, "curv": 393, "dtu": 393, "10mw": 393, "d178d3": 393, "h119": 393, "iea": 393, "15mw": 393, "d240": 393, "h150": 393, "iwt": 393, "7d5mw": 393, "d164": 393, "h100": 393, "nrel": 393, "5mw": 393, "d126": 393, "h90": 393, "file": 393, "path": 393, "heterogen": 394, "flow": 394, "The": 396, "book": 396, "multi": 397, "height": 397, "overview": 398, "how": 398, "setup": 398, "mask": 399, "sector": 400, "manag": 400, "rose": 403, "yaw": 404, "rotor": 404, "wake": 404, "optim": 395}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"foxes.algorithms": [[0, "module-foxes.algorithms"]], "foxes.algorithms.downwind": [[1, "module-foxes.algorithms.downwind"]], "foxes.algorithms.downwind.downwind": [[2, "module-foxes.algorithms.downwind.downwind"]], "foxes.algorithms.downwind.downwind.Downwind": [[3, "foxes-algorithms-downwind-downwind-downwind"]], "foxes.algorithms.downwind.models": [[4, "module-foxes.algorithms.downwind.models"]], "foxes.algorithms.downwind.models.calc_order": [[5, "module-foxes.algorithms.downwind.models.calc_order"]], "foxes.algorithms.downwind.models.calc_order.CalcOrder": [[6, "foxes-algorithms-downwind-models-calc-order-calcorder"]], "foxes.algorithms.downwind.models.farm_wakes_calc": [[7, "module-foxes.algorithms.downwind.models.farm_wakes_calc"]], "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation": [[8, "foxes-algorithms-downwind-models-farm-wakes-calc-farmwakescalculation"]], "foxes.algorithms.downwind.models.point_wakes_calc": [[9, "module-foxes.algorithms.downwind.models.point_wakes_calc"]], "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation": [[10, "foxes-algorithms-downwind-models-point-wakes-calc-pointwakescalculation"]], "foxes.algorithms.downwind.models.set_amb_farm_results": [[11, "module-foxes.algorithms.downwind.models.set_amb_farm_results"]], "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults": [[12, "foxes-algorithms-downwind-models-set-amb-farm-results-setambfarmresults"]], "foxes.algorithms.downwind.models.set_amb_point_results": [[13, "module-foxes.algorithms.downwind.models.set_amb_point_results"]], "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults": [[14, "foxes-algorithms-downwind-models-set-amb-point-results-setambpointresults"]], "foxes.algorithms.iterative": [[15, "module-foxes.algorithms.iterative"]], "foxes.algorithms.iterative.iterative": [[16, "module-foxes.algorithms.iterative.iterative"]], "foxes.algorithms.iterative.iterative.Iterative": [[17, "foxes-algorithms-iterative-iterative-iterative"]], "foxes.algorithms.iterative.models": [[18, "module-foxes.algorithms.iterative.models"]], "foxes.algorithms.iterative.models.convergence": [[19, "module-foxes.algorithms.iterative.models.convergence"]], "foxes.algorithms.iterative.models.convergence.ConvCrit": [[20, "foxes-algorithms-iterative-models-convergence-convcrit"]], "foxes.algorithms.iterative.models.convergence.ConvCritList": [[21, "foxes-algorithms-iterative-models-convergence-convcritlist"]], "foxes.algorithms.iterative.models.convergence.ConvVarDelta": [[22, "foxes-algorithms-iterative-models-convergence-convvardelta"]], "foxes.algorithms.iterative.models.convergence.DefaultConv": [[23, "foxes-algorithms-iterative-models-convergence-defaultconv"]], "foxes.algorithms.iterative.models.farm_wakes_calc": [[24, "module-foxes.algorithms.iterative.models.farm_wakes_calc"]], "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation": [[25, "foxes-algorithms-iterative-models-farm-wakes-calc-farmwakescalculation"]], "foxes.algorithms.iterative.models.loop_runner": [[26, "module-foxes.algorithms.iterative.models.loop_runner"]], "foxes.algorithms.iterative.models.loop_runner.LoopRunner": [[27, "foxes-algorithms-iterative-models-loop-runner-looprunner"]], "foxes.constants": [[28, "module-foxes.constants"]], "foxes.core": [[29, "module-foxes.core"]], "foxes.core.algorithm": [[30, "module-foxes.core.algorithm"]], "foxes.core.algorithm.Algorithm": [[31, "foxes-core-algorithm-algorithm"]], "foxes.core.data": [[32, "module-foxes.core.data"]], "foxes.core.data.Data": [[33, "foxes-core-data-data"]], "foxes.core.data_calc_model": [[34, "module-foxes.core.data_calc_model"]], "foxes.core.data_calc_model.DataCalcModel": [[35, "foxes-core-data-calc-model-datacalcmodel"]], "foxes.core.farm_controller": [[36, "module-foxes.core.farm_controller"]], "foxes.core.farm_controller.FarmController": [[37, "foxes-core-farm-controller-farmcontroller"]], "foxes.core.farm_data_model": [[38, "module-foxes.core.farm_data_model"]], "foxes.core.farm_data_model.FarmDataModel": [[39, "foxes-core-farm-data-model-farmdatamodel"]], "foxes.core.farm_data_model.FarmDataModelList": [[40, "foxes-core-farm-data-model-farmdatamodellist"]], "foxes.core.farm_model": [[41, "module-foxes.core.farm_model"]], "foxes.core.farm_model.FarmModel": [[42, "foxes-core-farm-model-farmmodel"]], "foxes.core.model": [[43, "module-foxes.core.model"]], "foxes.core.model.Model": [[44, "foxes-core-model-model"]], "foxes.core.partial_wakes_model": [[45, "module-foxes.core.partial_wakes_model"]], "foxes.core.partial_wakes_model.PartialWakesModel": [[46, "foxes-core-partial-wakes-model-partialwakesmodel"]], "foxes.core.point_data_model": [[47, "module-foxes.core.point_data_model"]], "foxes.core.point_data_model.PointDataModel": [[48, "foxes-core-point-data-model-pointdatamodel"]], "foxes.core.point_data_model.PointDataModelList": [[49, "foxes-core-point-data-model-pointdatamodellist"]], "foxes.core.rotor_model": [[50, "module-foxes.core.rotor_model"]], "foxes.core.rotor_model.RotorModel": [[51, "foxes-core-rotor-model-rotormodel"]], "foxes.core.states": [[52, "module-foxes.core.states"]], "foxes.core.states.ExtendedStates": [[53, "foxes-core-states-extendedstates"]], "foxes.core.states.States": [[54, "foxes-core-states-states"]], "foxes.core.turbine": [[55, "module-foxes.core.turbine"]], "foxes.core.turbine.Turbine": [[56, "foxes-core-turbine-turbine"]], "foxes.core.turbine_model": [[57, "module-foxes.core.turbine_model"]], "foxes.core.turbine_model.TurbineModel": [[58, "foxes-core-turbine-model-turbinemodel"]], "foxes.core.turbine_type": [[59, "module-foxes.core.turbine_type"]], "foxes.core.turbine_type.TurbineType": [[60, "foxes-core-turbine-type-turbinetype"]], "foxes.core.vertical_profile": [[61, "module-foxes.core.vertical_profile"]], "foxes.core.vertical_profile.VerticalProfile": [[62, "foxes-core-vertical-profile-verticalprofile"]], "foxes.core.wake_frame": [[63, "module-foxes.core.wake_frame"]], "foxes.core.wake_frame.WakeFrame": [[64, "foxes-core-wake-frame-wakeframe"]], "foxes.core.wake_model": [[65, "module-foxes.core.wake_model"]], "foxes.core.wake_model.WakeModel": [[66, "foxes-core-wake-model-wakemodel"]], "foxes.core.wake_superposition": [[67, "module-foxes.core.wake_superposition"]], "foxes.core.wake_superposition.WakeSuperposition": [[68, "foxes-core-wake-superposition-wakesuperposition"]], "foxes.core.wind_farm": [[69, "module-foxes.core.wind_farm"]], "foxes.core.wind_farm.WindFarm": [[70, "foxes-core-wind-farm-windfarm"]], "foxes.data": [[71, "module-foxes.data"]], "foxes.data.farms": [[72, "module-foxes.data.farms"]], "foxes.data.parse": [[73, "module-foxes.data.parse"]], "foxes.data.parse.parse_Pct_file_name": [[74, "foxes-data-parse-parse-pct-file-name"]], "foxes.data.parse.parse_Pct_two_files": [[75, "foxes-data-parse-parse-pct-two-files"]], "foxes.data.power_ct_curves": [[76, "module-foxes.data.power_ct_curves"]], "foxes.data.states": [[77, "module-foxes.data.states"]], "foxes.data.static_data": [[78, "module-foxes.data.static_data"]], "foxes.data.static_data.StaticData": [[79, "foxes-data-static-data-staticdata"]], "foxes.input": [[80, "module-foxes.input"]], "foxes.input.farm_layout": [[81, "module-foxes.input.farm_layout"]], "foxes.input.farm_layout.from_csv": [[82, "module-foxes.input.farm_layout.from_csv"]], "foxes.input.farm_layout.from_csv.add_from_csv": [[83, "foxes-input-farm-layout-from-csv-add-from-csv"]], "foxes.input.farm_layout.from_df": [[84, "module-foxes.input.farm_layout.from_df"]], "foxes.input.farm_layout.from_df.add_from_df": [[85, "foxes-input-farm-layout-from-df-add-from-df"]], "foxes.input.farm_layout.from_file": [[86, "module-foxes.input.farm_layout.from_file"]], "foxes.input.farm_layout.from_file.add_from_file": [[87, "foxes-input-farm-layout-from-file-add-from-file"]], "foxes.input.farm_layout.from_json": [[88, "module-foxes.input.farm_layout.from_json"]], "foxes.input.farm_layout.from_json.add_from_json": [[89, "foxes-input-farm-layout-from-json-add-from-json"]], "foxes.input.farm_layout.grid": [[90, "module-foxes.input.farm_layout.grid"]], "foxes.input.farm_layout.grid.add_grid": [[91, "foxes-input-farm-layout-grid-add-grid"]], "foxes.input.farm_layout.row": [[92, "module-foxes.input.farm_layout.row"]], "foxes.input.farm_layout.row.add_row": [[93, "foxes-input-farm-layout-row-add-row"]], "foxes.input.states": [[94, "module-foxes.input.states"]], "foxes.input.states.create": [[95, "module-foxes.input.states.create"]], "foxes.input.states.create.random_abl_states": [[96, "module-foxes.input.states.create.random_abl_states"]], "foxes.input.states.create.random_abl_states.create_random_abl_states": [[97, "foxes-input-states-create-random-abl-states-create-random-abl-states"]], "foxes.input.states.create.random_abl_states.write_random_abl_states": [[98, "foxes-input-states-create-random-abl-states-write-random-abl-states"]], "foxes.input.states.field_data_nc": [[99, "module-foxes.input.states.field_data_nc"]], "foxes.input.states.field_data_nc.FieldDataNC": [[100, "foxes-input-states-field-data-nc-fielddatanc"]], "foxes.input.states.multi_height": [[101, "module-foxes.input.states.multi_height"]], "foxes.input.states.multi_height.MultiHeightStates": [[102, "foxes-input-states-multi-height-multiheightstates"]], "foxes.input.states.multi_height.MultiHeightTimeseries": [[103, "foxes-input-states-multi-height-multiheighttimeseries"]], "foxes.input.states.scan_ws": [[104, "module-foxes.input.states.scan_ws"]], "foxes.input.states.scan_ws.ScanWS": [[105, "foxes-input-states-scan-ws-scanws"]], "foxes.input.states.single": [[106, "module-foxes.input.states.single"]], "foxes.input.states.single.SingleStateStates": [[107, "foxes-input-states-single-singlestatestates"]], "foxes.input.states.states_table": [[108, "module-foxes.input.states.states_table"]], "foxes.input.states.states_table.StatesTable": [[109, "foxes-input-states-states-table-statestable"]], "foxes.input.states.states_table.Timeseries": [[110, "foxes-input-states-states-table-timeseries"]], "foxes.input.windio": [[111, "module-foxes.input.windio"]], "foxes.input.windio.windio": [[112, "module-foxes.input.windio.windio"]], "foxes.input.windio.windio.read_anlyses": [[113, "foxes-input-windio-windio-read-anlyses"]], "foxes.input.windio.windio.read_case": [[114, "foxes-input-windio-windio-read-case"]], "foxes.input.windio.windio.read_farm": [[115, "foxes-input-windio-windio-read-farm"]], "foxes.input.windio.windio.read_resource": [[116, "foxes-input-windio-windio-read-resource"]], "foxes.input.windio.windio.read_site": [[117, "foxes-input-windio-windio-read-site"]], "foxes.models": [[118, "module-foxes.models"]], "foxes.models.farm_controllers": [[119, "module-foxes.models.farm_controllers"]], "foxes.models.farm_controllers.basic": [[120, "module-foxes.models.farm_controllers.basic"]], "foxes.models.farm_controllers.basic.BasicFarmController": [[121, "foxes-models-farm-controllers-basic-basicfarmcontroller"]], "foxes.models.farm_models": [[122, "module-foxes.models.farm_models"]], "foxes.models.farm_models.turbine2farm": [[123, "module-foxes.models.farm_models.turbine2farm"]], "foxes.models.farm_models.turbine2farm.Turbine2FarmModel": [[124, "foxes-models-farm-models-turbine2farm-turbine2farmmodel"]], "foxes.models.model_book": [[125, "module-foxes.models.model_book"]], "foxes.models.model_book.ModelBook": [[126, "foxes-models-model-book-modelbook"]], "foxes.models.partial_wakes": [[127, "module-foxes.models.partial_wakes"]], "foxes.models.partial_wakes.axiwake": [[128, "module-foxes.models.partial_wakes.axiwake"]], "foxes.models.partial_wakes.axiwake.PartialAxiwake": [[129, "foxes-models-partial-wakes-axiwake-partialaxiwake"]], "foxes.models.partial_wakes.distsliced": [[130, "module-foxes.models.partial_wakes.distsliced"]], "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake": [[131, "foxes-models-partial-wakes-distsliced-partialdistslicedwake"]], "foxes.models.partial_wakes.grid": [[132, "module-foxes.models.partial_wakes.grid"]], "foxes.models.partial_wakes.grid.PartialGrid": [[133, "foxes-models-partial-wakes-grid-partialgrid"]], "foxes.models.partial_wakes.mapped": [[134, "module-foxes.models.partial_wakes.mapped"]], "foxes.models.partial_wakes.mapped.Mapped": [[135, "foxes-models-partial-wakes-mapped-mapped"]], "foxes.models.partial_wakes.rotor_points": [[136, "module-foxes.models.partial_wakes.rotor_points"]], "foxes.models.partial_wakes.rotor_points.RotorPoints": [[137, "foxes-models-partial-wakes-rotor-points-rotorpoints"]], "foxes.models.partial_wakes.top_hat": [[138, "module-foxes.models.partial_wakes.top_hat"]], "foxes.models.partial_wakes.top_hat.PartialTopHat": [[139, "foxes-models-partial-wakes-top-hat-partialtophat"]], "foxes.models.point_models": [[140, "module-foxes.models.point_models"]], "foxes.models.point_models.set_uniform_data": [[141, "module-foxes.models.point_models.set_uniform_data"]], "foxes.models.point_models.set_uniform_data.SetUniformData": [[142, "foxes-models-point-models-set-uniform-data-setuniformdata"]], "foxes.models.point_models.tke2ti": [[143, "module-foxes.models.point_models.tke2ti"]], "foxes.models.point_models.tke2ti.TKE2TI": [[144, "foxes-models-point-models-tke2ti-tke2ti"]], "foxes.models.point_models.wake_deltas": [[145, "module-foxes.models.point_models.wake_deltas"]], "foxes.models.point_models.wake_deltas.WakeDeltas": [[146, "foxes-models-point-models-wake-deltas-wakedeltas"]], "foxes.models.rotor_models": [[147, "module-foxes.models.rotor_models"]], "foxes.models.rotor_models.centre": [[148, "module-foxes.models.rotor_models.centre"]], "foxes.models.rotor_models.centre.CentreRotor": [[149, "foxes-models-rotor-models-centre-centrerotor"]], "foxes.models.rotor_models.grid": [[150, "module-foxes.models.rotor_models.grid"]], "foxes.models.rotor_models.grid.GridRotor": [[151, "foxes-models-rotor-models-grid-gridrotor"]], "foxes.models.turbine_models": [[152, "module-foxes.models.turbine_models"]], "foxes.models.turbine_models.calculator": [[153, "module-foxes.models.turbine_models.calculator"]], "foxes.models.turbine_models.calculator.Calculator": [[154, "foxes-models-turbine-models-calculator-calculator"]], "foxes.models.turbine_models.kTI_model": [[155, "module-foxes.models.turbine_models.kTI_model"]], "foxes.models.turbine_models.kTI_model.kTI": [[156, "foxes-models-turbine-models-kti-model-kti"]], "foxes.models.turbine_models.power_mask": [[157, "module-foxes.models.turbine_models.power_mask"]], "foxes.models.turbine_models.power_mask.PowerMask": [[158, "foxes-models-turbine-models-power-mask-powermask"]], "foxes.models.turbine_models.rotor_centre_calc": [[159, "module-foxes.models.turbine_models.rotor_centre_calc"]], "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc": [[160, "foxes-models-turbine-models-rotor-centre-calc-rotorcentrecalc"]], "foxes.models.turbine_models.sector_management": [[161, "module-foxes.models.turbine_models.sector_management"]], "foxes.models.turbine_models.sector_management.SectorManagement": [[162, "foxes-models-turbine-models-sector-management-sectormanagement"]], "foxes.models.turbine_models.set_XYHD": [[163, "module-foxes.models.turbine_models.set_XYHD"]], "foxes.models.turbine_models.set_XYHD.SetXYHD": [[164, "foxes-models-turbine-models-set-xyhd-setxyhd"]], "foxes.models.turbine_models.set_farm_vars": [[165, "module-foxes.models.turbine_models.set_farm_vars"]], "foxes.models.turbine_models.set_farm_vars.SetFarmVars": [[166, "foxes-models-turbine-models-set-farm-vars-setfarmvars"]], "foxes.models.turbine_models.table_factors": [[167, "module-foxes.models.turbine_models.table_factors"]], "foxes.models.turbine_models.table_factors.TableFactors": [[168, "foxes-models-turbine-models-table-factors-tablefactors"]], "foxes.models.turbine_models.thrust2ct": [[169, "module-foxes.models.turbine_models.thrust2ct"]], "foxes.models.turbine_models.thrust2ct.Thrust2Ct": [[170, "foxes-models-turbine-models-thrust2ct-thrust2ct"]], "foxes.models.turbine_models.yaw2yawm": [[171, "module-foxes.models.turbine_models.yaw2yawm"]], "foxes.models.turbine_models.yaw2yawm.YAW2YAWM": [[172, "foxes-models-turbine-models-yaw2yawm-yaw2yawm"]], "foxes.models.turbine_models.yawm2yaw": [[173, "module-foxes.models.turbine_models.yawm2yaw"]], "foxes.models.turbine_models.yawm2yaw.YAWM2YAW": [[174, "foxes-models-turbine-models-yawm2yaw-yawm2yaw"]], "foxes.models.turbine_types": [[175, "module-foxes.models.turbine_types"]], "foxes.models.turbine_types.CpCt_file": [[176, "module-foxes.models.turbine_types.CpCt_file"]], "foxes.models.turbine_types.CpCt_file.CpCtFile": [[177, "foxes-models-turbine-types-cpct-file-cpctfile"]], "foxes.models.turbine_types.CpCt_from_two": [[178, "module-foxes.models.turbine_types.CpCt_from_two"]], "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo": [[179, "foxes-models-turbine-types-cpct-from-two-cpctfromtwo"]], "foxes.models.turbine_types.PCt_file": [[180, "module-foxes.models.turbine_types.PCt_file"]], "foxes.models.turbine_types.PCt_file.PCtFile": [[181, "foxes-models-turbine-types-pct-file-pctfile"]], "foxes.models.turbine_types.PCt_from_two": [[182, "module-foxes.models.turbine_types.PCt_from_two"]], "foxes.models.turbine_types.PCt_from_two.PCtFromTwo": [[183, "foxes-models-turbine-types-pct-from-two-pctfromtwo"]], "foxes.models.turbine_types.null_type": [[184, "module-foxes.models.turbine_types.null_type"]], "foxes.models.turbine_types.null_type.NullType": [[185, "foxes-models-turbine-types-null-type-nulltype"]], "foxes.models.turbine_types.wsrho2PCt_two_files": [[186, "module-foxes.models.turbine_types.wsrho2PCt_two_files"]], "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles": [[187, "foxes-models-turbine-types-wsrho2pct-two-files-wsrho2pcttwofiles"]], "foxes.models.vertical_profiles": [[188, "module-foxes.models.vertical_profiles"]], "foxes.models.vertical_profiles.abl_log": [[189, "module-foxes.models.vertical_profiles.abl_log"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws": [[190, "module-foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile": [[191, "foxes-models-vertical-profiles-abl-log-abl-log-neutral-ws-abllogneutralwsprofile"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws": [[192, "module-foxes.models.vertical_profiles.abl_log.abl_log_stable_ws"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile": [[193, "foxes-models-vertical-profiles-abl-log-abl-log-stable-ws-abllogstablewsprofile"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws": [[194, "module-foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile": [[195, "foxes-models-vertical-profiles-abl-log-abl-log-unstable-ws-abllogunstablewsprofile"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws": [[196, "module-foxes.models.vertical_profiles.abl_log.abl_log_ws"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile": [[197, "foxes-models-vertical-profiles-abl-log-abl-log-ws-abllogwsprofile"]], "foxes.models.vertical_profiles.abl_log.sheared_ws": [[198, "module-foxes.models.vertical_profiles.abl_log.sheared_ws"]], "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile": [[199, "foxes-models-vertical-profiles-abl-log-sheared-ws-shearedprofile"]], "foxes.models.vertical_profiles.uniform": [[200, "module-foxes.models.vertical_profiles.uniform"]], "foxes.models.vertical_profiles.uniform.UniformProfile": [[201, "foxes-models-vertical-profiles-uniform-uniformprofile"]], "foxes.models.wake_frames": [[202, "module-foxes.models.wake_frames"]], "foxes.models.wake_frames.farm_order": [[203, "module-foxes.models.wake_frames.farm_order"]], "foxes.models.wake_frames.farm_order.FarmOrder": [[204, "foxes-models-wake-frames-farm-order-farmorder"]], "foxes.models.wake_frames.rotor_wd": [[205, "module-foxes.models.wake_frames.rotor_wd"]], "foxes.models.wake_frames.rotor_wd.RotorWD": [[206, "foxes-models-wake-frames-rotor-wd-rotorwd"]], "foxes.models.wake_frames.streamlines": [[207, "module-foxes.models.wake_frames.streamlines"]], "foxes.models.wake_frames.streamlines.Streamlines": [[208, "foxes-models-wake-frames-streamlines-streamlines"]], "foxes.models.wake_frames.yawed_wakes": [[209, "module-foxes.models.wake_frames.yawed_wakes"]], "foxes.models.wake_frames.yawed_wakes.YawedWakes": [[210, "foxes-models-wake-frames-yawed-wakes-yawedwakes"]], "foxes.models.wake_models": [[211, "module-foxes.models.wake_models"]], "foxes.models.wake_models.axisymmetric": [[212, "module-foxes.models.wake_models.axisymmetric"]], "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel": [[213, "foxes-models-wake-models-axisymmetric-axisymmetricwakemodel"]], "foxes.models.wake_models.dist_sliced": [[214, "module-foxes.models.wake_models.dist_sliced"]], "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel": [[215, "foxes-models-wake-models-dist-sliced-distslicedwakemodel"]], "foxes.models.wake_models.gaussian": [[216, "module-foxes.models.wake_models.gaussian"]], "foxes.models.wake_models.gaussian.GaussianWakeModel": [[217, "foxes-models-wake-models-gaussian-gaussianwakemodel"]], "foxes.models.wake_models.ti": [[218, "module-foxes.models.wake_models.ti"]], "foxes.models.wake_models.ti.crespo_hernandez": [[219, "module-foxes.models.wake_models.ti.crespo_hernandez"]], "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake": [[220, "foxes-models-wake-models-ti-crespo-hernandez-crespohernandeztiwake"]], "foxes.models.wake_models.ti.iec_ti": [[221, "module-foxes.models.wake_models.ti.iec_ti"]], "foxes.models.wake_models.ti.iec_ti.IECTIWake": [[222, "foxes-models-wake-models-ti-iec-ti-iectiwake"]], "foxes.models.wake_models.top_hat": [[223, "module-foxes.models.wake_models.top_hat"]], "foxes.models.wake_models.top_hat.TopHatWakeModel": [[224, "foxes-models-wake-models-top-hat-tophatwakemodel"]], "foxes.models.wake_models.wind": [[225, "module-foxes.models.wake_models.wind"]], "foxes.models.wake_models.wind.bastankhah": [[226, "module-foxes.models.wake_models.wind.bastankhah"]], "foxes.models.wake_models.wind.bastankhah.BastankhahWake": [[227, "foxes-models-wake-models-wind-bastankhah-bastankhahwake"]], "foxes.models.wake_models.wind.jensen": [[228, "module-foxes.models.wake_models.wind.jensen"]], "foxes.models.wake_models.wind.jensen.JensenWake": [[229, "foxes-models-wake-models-wind-jensen-jensenwake"]], "foxes.models.wake_models.wind.porte_agel": [[230, "module-foxes.models.wake_models.wind.porte_agel"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelModel": [[231, "foxes-models-wake-models-wind-porte-agel-porteagelmodel"]], "foxes.models.wake_models.wind.porte_agel.PorteAgelWake": [[232, "foxes-models-wake-models-wind-porte-agel-porteagelwake"]], "foxes.models.wake_models.wind.turbopark": [[233, "module-foxes.models.wake_models.wind.turbopark"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWake": [[234, "foxes-models-wake-models-wind-turbopark-turboparkwake"]], "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX": [[235, "foxes-models-wake-models-wind-turbopark-turboparkwakeix"]], "foxes.models.wake_superpositions": [[236, "module-foxes.models.wake_superpositions"]], "foxes.models.wake_superpositions.linear": [[237, "module-foxes.models.wake_superpositions.linear"]], "foxes.models.wake_superpositions.linear.LinearSuperposition": [[238, "foxes-models-wake-superpositions-linear-linearsuperposition"]], "foxes.models.wake_superpositions.max": [[239, "module-foxes.models.wake_superpositions.max"]], "foxes.models.wake_superpositions.max.MaxSuperposition": [[240, "foxes-models-wake-superpositions-max-maxsuperposition"]], "foxes.models.wake_superpositions.product": [[241, "module-foxes.models.wake_superpositions.product"]], "foxes.models.wake_superpositions.product.ProductSuperposition": [[242, "foxes-models-wake-superpositions-product-productsuperposition"]], "foxes.models.wake_superpositions.quadratic": [[243, "module-foxes.models.wake_superpositions.quadratic"]], "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition": [[244, "foxes-models-wake-superpositions-quadratic-quadraticsuperposition"]], "foxes.models.wake_superpositions.ti_superp": [[245, "module-foxes.models.wake_superpositions.ti_superp"]], "foxes.models.wake_superpositions.ti_superp.TISuperposition": [[246, "foxes-models-wake-superpositions-ti-superp-tisuperposition"]], "foxes.opt": [[247, "module-foxes.opt"]], "foxes.opt.constraints": [[248, "module-foxes.opt.constraints"]], "foxes.opt.constraints.area_geometry": [[249, "module-foxes.opt.constraints.area_geometry"]], "foxes.opt.constraints.area_geometry.AreaGeometryConstraint": [[250, "foxes-opt-constraints-area-geometry-areageometryconstraint"]], "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint": [[251, "foxes-opt-constraints-area-geometry-farmboundaryconstraint"]], "foxes.opt.constraints.min_dist": [[252, "module-foxes.opt.constraints.min_dist"]], "foxes.opt.constraints.min_dist.MinDistConstraint": [[253, "foxes-opt-constraints-min-dist-mindistconstraint"]], "foxes.opt.core": [[254, "module-foxes.opt.core"]], "foxes.opt.core.farm_constraint": [[255, "module-foxes.opt.core.farm_constraint"]], "foxes.opt.core.farm_constraint.FarmConstraint": [[256, "foxes-opt-core-farm-constraint-farmconstraint"]], "foxes.opt.core.farm_objective": [[257, "module-foxes.opt.core.farm_objective"]], "foxes.opt.core.farm_objective.FarmObjective": [[258, "foxes-opt-core-farm-objective-farmobjective"]], "foxes.opt.core.farm_opt_problem": [[259, "module-foxes.opt.core.farm_opt_problem"]], "foxes.opt.core.farm_opt_problem.FarmOptProblem": [[260, "foxes-opt-core-farm-opt-problem-farmoptproblem"]], "foxes.opt.core.farm_vars_problem": [[261, "module-foxes.opt.core.farm_vars_problem"]], "foxes.opt.core.farm_vars_problem.FarmVarsProblem": [[262, "foxes-opt-core-farm-vars-problem-farmvarsproblem"]], "foxes.opt.core.pop_states": [[263, "module-foxes.opt.core.pop_states"]], "foxes.opt.core.pop_states.PopStates": [[264, "foxes-opt-core-pop-states-popstates"]], "foxes.opt.objectives": [[265, "module-foxes.opt.objectives"]], "foxes.opt.objectives.farm_vars": [[266, "module-foxes.opt.objectives.farm_vars"]], "foxes.opt.objectives.farm_vars.FarmVarObjective": [[267, "foxes-opt-objectives-farm-vars-farmvarobjective"]], "foxes.opt.objectives.farm_vars.MaxFarmPower": [[268, "foxes-opt-objectives-farm-vars-maxfarmpower"]], "foxes.opt.objectives.farm_vars.MinimalMaxTI": [[269, "foxes-opt-objectives-farm-vars-minimalmaxti"]], "foxes.opt.objectives.max_n_turbines": [[270, "module-foxes.opt.objectives.max_n_turbines"]], "foxes.opt.objectives.max_n_turbines.MaxNTurbines": [[271, "foxes-opt-objectives-max-n-turbines-maxnturbines"]], "foxes.opt.problems": [[272, "module-foxes.opt.problems"]], "foxes.opt.problems.layout": [[273, "module-foxes.opt.problems.layout"]], "foxes.opt.problems.layout.farm_layout": [[274, "module-foxes.opt.problems.layout.farm_layout"]], "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem": [[275, "foxes-opt-problems-layout-farm-layout-farmlayoutoptproblem"]], "foxes.opt.problems.layout.geom_layouts": [[276, "module-foxes.opt.problems.layout.geom_layouts"]], "foxes.opt.problems.layout.geom_layouts.constraints": [[277, "module-foxes.opt.problems.layout.geom_layouts.constraints"]], "foxes.opt.problems.layout.geom_layouts.constraints.Boundary": [[278, "foxes-opt-problems-layout-geom-layouts-constraints-boundary"]], "foxes.opt.problems.layout.geom_layouts.constraints.CFixN": [[279, "foxes-opt-problems-layout-geom-layouts-constraints-cfixn"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN": [[280, "foxes-opt-problems-layout-geom-layouts-constraints-cmaxn"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity": [[281, "foxes-opt-problems-layout-geom-layouts-constraints-cmindensity"]], "foxes.opt.problems.layout.geom_layouts.constraints.CMinN": [[282, "foxes-opt-problems-layout-geom-layouts-constraints-cminn"]], "foxes.opt.problems.layout.geom_layouts.constraints.MinDist": [[283, "foxes-opt-problems-layout-geom-layouts-constraints-mindist"]], "foxes.opt.problems.layout.geom_layouts.constraints.Valid": [[284, "foxes-opt-problems-layout-geom-layouts-constraints-valid"]], "foxes.opt.problems.layout.geom_layouts.geom_layout": [[285, "module-foxes.opt.problems.layout.geom_layouts.geom_layout"]], "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout": [[286, "foxes-opt-problems-layout-geom-layouts-geom-layout-geomlayout"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded": [[287, "module-foxes.opt.problems.layout.geom_layouts.geom_layout_gridded"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded": [[288, "foxes-opt-problems-layout-geom-layouts-geom-layout-gridded-geomlayoutgridded"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid": [[289, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrid"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid": [[290, "foxes-opt-problems-layout-geom-layouts-geom-reggrid-geomreggrid"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids": [[291, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrids"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids": [[292, "foxes-opt-problems-layout-geom-layouts-geom-reggrids-geomreggrids"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[293, "module-foxes.opt.problems.layout.geom_layouts.objectives"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity": [[294, "foxes-opt-problems-layout-geom-layouts-objectives-maxdensity"]], "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing": [[295, "foxes-opt-problems-layout-geom-layouts-objectives-maxgridspacing"]], "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist": [[296, "foxes-opt-problems-layout-geom-layouts-objectives-memimadist"]], "foxes.opt.problems.layout.geom_layouts.objectives.OFixN": [[297, "foxes-opt-problems-layout-geom-layouts-objectives-ofixn"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN": [[298, "foxes-opt-problems-layout-geom-layouts-objectives-omaxn"]], "foxes.opt.problems.layout.geom_layouts.objectives.OMinN": [[299, "foxes-opt-problems-layout-geom-layouts-objectives-ominn"]], "foxes.opt.problems.layout.reggrids_layout": [[300, "module-foxes.opt.problems.layout.reggrids_layout"]], "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem": [[301, "foxes-opt-problems-layout-reggrids-layout-reggridslayoutoptproblem"]], "foxes.opt.problems.layout.regular_layout": [[302, "module-foxes.opt.problems.layout.regular_layout"]], "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem": [[303, "foxes-opt-problems-layout-regular-layout-regularlayoutoptproblem"]], "foxes.opt.problems.opt_farm_vars": [[304, "module-foxes.opt.problems.opt_farm_vars"]], "foxes.opt.problems.opt_farm_vars.OptFarmVars": [[305, "foxes-opt-problems-opt-farm-vars-optfarmvars"]], "foxes.output": [[306, "module-foxes.output"]], "foxes.output.farm_layout": [[307, "module-foxes.output.farm_layout"]], "foxes.output.farm_layout.FarmLayoutOutput": [[308, "foxes-output-farm-layout-farmlayoutoutput"]], "foxes.output.farm_results_eval": [[309, "module-foxes.output.farm_results_eval"]], "foxes.output.farm_results_eval.FarmResultsEval": [[310, "foxes-output-farm-results-eval-farmresultseval"]], "foxes.output.flow_plots_2d": [[311, "module-foxes.output.flow_plots_2d"]], "foxes.output.flow_plots_2d.FlowPlots2D": [[312, "foxes-output-flow-plots-2d-flowplots2d"]], "foxes.output.output": [[313, "module-foxes.output.output"]], "foxes.output.output.Output": [[314, "foxes-output-output-output"]], "foxes.output.results_writer": [[315, "module-foxes.output.results_writer"]], "foxes.output.results_writer.ResultsWriter": [[316, "foxes-output-results-writer-resultswriter"]], "foxes.output.rose_plot": [[317, "module-foxes.output.rose_plot"]], "foxes.output.rose_plot.RosePlotOutput": [[318, "foxes-output-rose-plot-roseplotoutput"]], "foxes.output.rose_plot.StatesRosePlotOutput": [[319, "foxes-output-rose-plot-statesroseplotoutput"]], "foxes.output.state_turbine_map": [[320, "module-foxes.output.state_turbine_map"]], "foxes.output.state_turbine_map.StateTurbineMap": [[321, "foxes-output-state-turbine-map-stateturbinemap"]], "foxes.output.turbine_type_curves": [[322, "module-foxes.output.turbine_type_curves"]], "foxes.output.turbine_type_curves.TurbineTypeCurves": [[323, "foxes-output-turbine-type-curves-turbinetypecurves"]], "foxes.utils": [[324, "module-foxes.utils"]], "foxes.utils.abl": [[325, "module-foxes.utils.abl"]], "foxes.utils.abl.neutral": [[326, "module-foxes.utils.abl.neutral"]], "foxes.utils.abl.neutral.calc_ws": [[327, "foxes-utils-abl-neutral-calc-ws"]], "foxes.utils.abl.neutral.logz": [[328, "foxes-utils-abl-neutral-logz"]], "foxes.utils.abl.neutral.ustar": [[329, "foxes-utils-abl-neutral-ustar"]], "foxes.utils.abl.sheared": [[330, "module-foxes.utils.abl.sheared"]], "foxes.utils.abl.sheared.calc_ws": [[331, "foxes-utils-abl-sheared-calc-ws"]], "foxes.utils.abl.stable": [[332, "module-foxes.utils.abl.stable"]], "foxes.utils.abl.stable.calc_ws": [[333, "foxes-utils-abl-stable-calc-ws"]], "foxes.utils.abl.stable.logz": [[334, "foxes-utils-abl-stable-logz"]], "foxes.utils.abl.stable.psi": [[335, "foxes-utils-abl-stable-psi"]], "foxes.utils.abl.stable.ustar": [[336, "foxes-utils-abl-stable-ustar"]], "foxes.utils.abl.unstable": [[337, "module-foxes.utils.abl.unstable"]], "foxes.utils.abl.unstable.calc_ws": [[338, "foxes-utils-abl-unstable-calc-ws"]], "foxes.utils.abl.unstable.psi": [[339, "foxes-utils-abl-unstable-psi"]], "foxes.utils.abl.unstable.ustar": [[340, "foxes-utils-abl-unstable-ustar"]], "foxes.utils.cubic_roots": [[341, "module-foxes.utils.cubic_roots"]], "foxes.utils.data_book": [[342, "module-foxes.utils.data_book"]], "foxes.utils.data_book.DataBook": [[343, "foxes-utils-data-book-databook"]], "foxes.utils.dict": [[344, "module-foxes.utils.dict"]], "foxes.utils.dict.Dict": [[345, "foxes-utils-dict-dict"]], "foxes.utils.geom2d": [[346, "module-foxes.utils.geom2d"]], "foxes.utils.geom2d.area_geometry": [[347, "module-foxes.utils.geom2d.area_geometry"]], "foxes.utils.geom2d.area_geometry.AreaGeometry": [[348, "foxes-utils-geom2d-area-geometry-areageometry"]], "foxes.utils.geom2d.area_geometry.AreaIntersection": [[349, "foxes-utils-geom2d-area-geometry-areaintersection"]], "foxes.utils.geom2d.area_geometry.AreaUnion": [[350, "foxes-utils-geom2d-area-geometry-areaunion"]], "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry": [[351, "foxes-utils-geom2d-area-geometry-invertedareageometry"]], "foxes.utils.geom2d.area_geometry.InvertedAreaUnion": [[352, "foxes-utils-geom2d-area-geometry-invertedareaunion"]], "foxes.utils.geom2d.circle": [[353, "module-foxes.utils.geom2d.circle"]], "foxes.utils.geom2d.circle.Circle": [[354, "foxes-utils-geom2d-circle-circle"]], "foxes.utils.geom2d.example_intersection": [[355, "module-foxes.utils.geom2d.example_intersection"]], "foxes.utils.geom2d.example_union": [[356, "module-foxes.utils.geom2d.example_union"]], "foxes.utils.geom2d.half_plane": [[357, "module-foxes.utils.geom2d.half_plane"]], "foxes.utils.geom2d.half_plane.HalfPlane": [[358, "foxes-utils-geom2d-half-plane-halfplane"]], "foxes.utils.geom2d.polygon": [[359, "module-foxes.utils.geom2d.polygon"]], "foxes.utils.geom2d.polygon.ClosedPolygon": [[360, "foxes-utils-geom2d-polygon-closedpolygon"]], "foxes.utils.geopandas_helpers": [[361, "module-foxes.utils.geopandas_helpers"]], "foxes.utils.geopandas_helpers.check_import_gpd": [[362, "foxes-utils-geopandas-helpers-check-import-gpd"]], "foxes.utils.geopandas_helpers.check_import_utm": [[363, "foxes-utils-geopandas-helpers-check-import-utm"]], "foxes.utils.geopandas_helpers.read_shp": [[364, "foxes-utils-geopandas-helpers-read-shp"]], "foxes.utils.geopandas_helpers.read_shp_polygons": [[365, "foxes-utils-geopandas-helpers-read-shp-polygons"]], "foxes.utils.geopandas_helpers.shp2csv": [[366, "foxes-utils-geopandas-helpers-shp2csv"]], "foxes.utils.geopandas_helpers.shp2geom2d": [[367, "foxes-utils-geopandas-helpers-shp2geom2d"]], "foxes.utils.pandas_helpers": [[368, "module-foxes.utils.pandas_helpers"]], "foxes.utils.pandas_helpers.PandasFileHelper": [[369, "foxes-utils-pandas-helpers-pandasfilehelper"]], "foxes.utils.plotly_helpers": [[370, "module-foxes.utils.plotly_helpers"]], "foxes.utils.plotly_helpers.show_plotly_fig": [[371, "foxes-utils-plotly-helpers-show-plotly-fig"]], "foxes.utils.runners": [[372, "module-foxes.utils.runners"]], "foxes.utils.runners.DaskRunner": [[373, "foxes-utils-runners-daskrunner"]], "foxes.utils.runners.DefaultRunner": [[374, "foxes-utils-runners-defaultrunner"]], "foxes.utils.runners.Runner": [[375, "foxes-utils-runners-runner"]], "foxes.utils.subclasses": [[376, "module-foxes.utils.subclasses"]], "foxes.utils.subclasses.all_subclasses": [[377, "foxes-utils-subclasses-all-subclasses"]], "foxes.utils.two_circles": [[378, "module-foxes.utils.two_circles"]], "foxes.utils.two_circles.area": [[379, "foxes-utils-two-circles-area"]], "foxes.utils.two_circles.calc_area": [[380, "foxes-utils-two-circles-calc-area"]], "foxes.utils.wind_dir": [[381, "module-foxes.utils.wind_dir"]], "foxes.utils.wind_dir.delta_wd": [[382, "foxes-utils-wind-dir-delta-wd"]], "foxes.utils.wind_dir.uv2wd": [[383, "foxes-utils-wind-dir-uv2wd"]], "foxes.utils.wind_dir.wd2uv": [[384, "foxes-utils-wind-dir-wd2uv"]], "foxes.utils.wind_dir.wd2wdvec": [[385, "foxes-utils-wind-dir-wd2wdvec"]], "foxes.utils.wind_dir.wdvec2wd": [[386, "foxes-utils-wind-dir-wdvec2wd"]], "foxes.variables": [[387, "module-foxes.variables"]], "API": [[388, "api"]], "Examples": [[389, "examples"]], "History": [[390, "history"]], "v0.1.0-alpha": [[390, "v0-1-0-alpha"]], "v0.1.1-alpha": [[390, "v0-1-1-alpha"]], "v0.1.2-alpha": [[390, "v0-1-2-alpha"]], "v0.1.3-alpha": [[390, "v0-1-3-alpha"]], "v0.1.4-alpha": [[390, "v0-1-4-alpha"]], "v0.2.0-alpha": [[390, "v0-2-0-alpha"]], "v0.2.1-alpha": [[390, "v0-2-1-alpha"]], "v0.2.2-alpha": [[390, "v0-2-2-alpha"]], "v0.2.3-alpha": [[390, "v0-2-3-alpha"]], "v0.2.4-alpha": [[390, "v0-2-4-alpha"]], "v0.2.5-alpha": [[390, "v0-2-5-alpha"]], "v0.2.6-alpha": [[390, "v0-2-6-alpha"]], "v0.3.0-alpha": [[390, "v0-3-0-alpha"]], "v0.3.1-alpha": [[390, "v0-3-1-alpha"]], "v0.3.2-alpha": [[390, "v0-3-2-alpha"]], "v0.3.3-alpha": [[390, "v0-3-3-alpha"]], "v0.3.4-alpha": [[390, "v0-3-4-alpha"]], "v0.3.5-alpha": [[390, "v0-3-5-alpha"]], "Welcome to FOXES": [[391, "welcome-to-foxes"]], "Contributing": [[391, "contributing"]], "Acknowledgements": [[391, "acknowledgements"]], "Installation": [[392, "installation"]], "Requirements": [[392, "requirements"]], "Installation via conda": [[392, "installation-via-conda"]], "Virtual Python environment": [[392, "virtual-python-environment"], [392, "id1"]], "Standard users": [[392, "standard-users"], [392, "id2"]], "Developers": [[392, "developers"], [392, "id3"]], "Installation via pip": [[392, "installation-via-pip"]], "Static data": [[393, "Static-data"]], "Wind farm layout data": [[393, "Wind-farm-layout-data"]], "test_farm_67.csv": [[393, "test_farm_67.csv"]], "Ambient states data": [[393, "Ambient-states-data"]], "WRF-Timeseries-4464.csv.gz": [[393, "WRF-Timeseries-4464.csv.gz"]], "abl_states_6000.csv.gz": [[393, "abl_states_6000.csv.gz"]], "timeseries_3000.csv.gz": [[393, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[393, "timeseries_8000.csv.gz"]], "wind_rose_bremen.csv": [[393, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[393, "wind_rotation.nc"]], "Power and thrust curves": [[393, "Power-and-thrust-curves"]], "DTU-10MW-D178d3-H119.csv": [[393, "DTU-10MW-D178d3-H119.csv"]], "IEA-15MW-D240-H150.csv": [[393, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[393, "IWT-7d5MW-D164-H100.csv"]], "NREL-5MW-D126-H90.csv": [[393, "NREL-5MW-D126-H90.csv"]], "File paths": [[393, "File-paths"]], "Heterogeneous flow": [[394, "Heterogeneous-flow"]], "Layout optimization": [[395, "Layout-optimization"]], "The model book": [[396, "The-model-book"]], "Multi-height wind data": [[397, "Multi-height-wind-data"]], "Overview - how to setup foxes": [[398, "Overview---how-to-setup-foxes"]], "Power mask": [[399, "Power-mask"]], "Wind sector management": [[400, "Wind-sector-management"]], "Single row of turbines": [[401, "Single-row-of-turbines"]], "Timeseries data": [[402, "Timeseries-data"]], "Wind rose data": [[403, "Wind-rose-data"]], "Yawed rotor wakes": [[404, "Yawed-rotor-wakes"]]}, "indexentries": {"foxes.algorithms": [[0, "module-foxes.algorithms"]], "module": [[0, "module-foxes.algorithms"], [1, "module-foxes.algorithms.downwind"], [2, "module-foxes.algorithms.downwind.downwind"], [4, "module-foxes.algorithms.downwind.models"], [5, "module-foxes.algorithms.downwind.models.calc_order"], [7, "module-foxes.algorithms.downwind.models.farm_wakes_calc"], [9, "module-foxes.algorithms.downwind.models.point_wakes_calc"], [11, "module-foxes.algorithms.downwind.models.set_amb_farm_results"], [13, "module-foxes.algorithms.downwind.models.set_amb_point_results"], [15, "module-foxes.algorithms.iterative"], [16, "module-foxes.algorithms.iterative.iterative"], [18, "module-foxes.algorithms.iterative.models"], [19, "module-foxes.algorithms.iterative.models.convergence"], [24, "module-foxes.algorithms.iterative.models.farm_wakes_calc"], [26, "module-foxes.algorithms.iterative.models.loop_runner"], [28, "module-foxes.constants"], [29, "module-foxes.core"], [30, "module-foxes.core.algorithm"], [32, "module-foxes.core.data"], [34, "module-foxes.core.data_calc_model"], [36, "module-foxes.core.farm_controller"], [38, "module-foxes.core.farm_data_model"], [41, "module-foxes.core.farm_model"], [43, "module-foxes.core.model"], [45, "module-foxes.core.partial_wakes_model"], [47, "module-foxes.core.point_data_model"], [50, "module-foxes.core.rotor_model"], [52, "module-foxes.core.states"], [55, "module-foxes.core.turbine"], [57, "module-foxes.core.turbine_model"], [59, "module-foxes.core.turbine_type"], [61, "module-foxes.core.vertical_profile"], [63, "module-foxes.core.wake_frame"], [65, "module-foxes.core.wake_model"], [67, "module-foxes.core.wake_superposition"], [69, "module-foxes.core.wind_farm"], [71, "module-foxes.data"], [72, "module-foxes.data.farms"], [73, "module-foxes.data.parse"], [76, "module-foxes.data.power_ct_curves"], [77, "module-foxes.data.states"], [78, "module-foxes.data.static_data"], [80, "module-foxes.input"], [81, "module-foxes.input.farm_layout"], [82, "module-foxes.input.farm_layout.from_csv"], [84, "module-foxes.input.farm_layout.from_df"], [86, "module-foxes.input.farm_layout.from_file"], [88, "module-foxes.input.farm_layout.from_json"], [90, "module-foxes.input.farm_layout.grid"], [92, "module-foxes.input.farm_layout.row"], [94, "module-foxes.input.states"], [95, "module-foxes.input.states.create"], [96, "module-foxes.input.states.create.random_abl_states"], [99, "module-foxes.input.states.field_data_nc"], [101, "module-foxes.input.states.multi_height"], [104, "module-foxes.input.states.scan_ws"], [106, "module-foxes.input.states.single"], [108, "module-foxes.input.states.states_table"], [111, "module-foxes.input.windio"], [112, "module-foxes.input.windio.windio"], [118, "module-foxes.models"], [119, "module-foxes.models.farm_controllers"], [120, "module-foxes.models.farm_controllers.basic"], [122, "module-foxes.models.farm_models"], [123, "module-foxes.models.farm_models.turbine2farm"], [125, "module-foxes.models.model_book"], [127, "module-foxes.models.partial_wakes"], [128, "module-foxes.models.partial_wakes.axiwake"], [130, "module-foxes.models.partial_wakes.distsliced"], [132, "module-foxes.models.partial_wakes.grid"], [134, "module-foxes.models.partial_wakes.mapped"], [136, "module-foxes.models.partial_wakes.rotor_points"], [138, "module-foxes.models.partial_wakes.top_hat"], [140, "module-foxes.models.point_models"], [141, "module-foxes.models.point_models.set_uniform_data"], [143, "module-foxes.models.point_models.tke2ti"], [145, "module-foxes.models.point_models.wake_deltas"], [147, "module-foxes.models.rotor_models"], [148, "module-foxes.models.rotor_models.centre"], [150, "module-foxes.models.rotor_models.grid"], [152, "module-foxes.models.turbine_models"], [153, "module-foxes.models.turbine_models.calculator"], [155, "module-foxes.models.turbine_models.kTI_model"], [157, "module-foxes.models.turbine_models.power_mask"], [159, "module-foxes.models.turbine_models.rotor_centre_calc"], [161, "module-foxes.models.turbine_models.sector_management"], [163, "module-foxes.models.turbine_models.set_XYHD"], [165, "module-foxes.models.turbine_models.set_farm_vars"], [167, "module-foxes.models.turbine_models.table_factors"], [169, "module-foxes.models.turbine_models.thrust2ct"], [171, "module-foxes.models.turbine_models.yaw2yawm"], [173, "module-foxes.models.turbine_models.yawm2yaw"], [175, "module-foxes.models.turbine_types"], [176, "module-foxes.models.turbine_types.CpCt_file"], [178, "module-foxes.models.turbine_types.CpCt_from_two"], [180, "module-foxes.models.turbine_types.PCt_file"], [182, "module-foxes.models.turbine_types.PCt_from_two"], [184, "module-foxes.models.turbine_types.null_type"], [186, "module-foxes.models.turbine_types.wsrho2PCt_two_files"], [188, "module-foxes.models.vertical_profiles"], [189, "module-foxes.models.vertical_profiles.abl_log"], [190, "module-foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws"], [192, "module-foxes.models.vertical_profiles.abl_log.abl_log_stable_ws"], [194, "module-foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws"], [196, "module-foxes.models.vertical_profiles.abl_log.abl_log_ws"], [198, "module-foxes.models.vertical_profiles.abl_log.sheared_ws"], [200, "module-foxes.models.vertical_profiles.uniform"], [202, "module-foxes.models.wake_frames"], [203, "module-foxes.models.wake_frames.farm_order"], [205, "module-foxes.models.wake_frames.rotor_wd"], [207, "module-foxes.models.wake_frames.streamlines"], [209, "module-foxes.models.wake_frames.yawed_wakes"], [211, "module-foxes.models.wake_models"], [212, "module-foxes.models.wake_models.axisymmetric"], [214, "module-foxes.models.wake_models.dist_sliced"], [216, "module-foxes.models.wake_models.gaussian"], [218, "module-foxes.models.wake_models.ti"], [219, "module-foxes.models.wake_models.ti.crespo_hernandez"], [221, "module-foxes.models.wake_models.ti.iec_ti"], [223, "module-foxes.models.wake_models.top_hat"], [225, "module-foxes.models.wake_models.wind"], [226, "module-foxes.models.wake_models.wind.bastankhah"], [228, "module-foxes.models.wake_models.wind.jensen"], [230, "module-foxes.models.wake_models.wind.porte_agel"], [233, "module-foxes.models.wake_models.wind.turbopark"], [236, "module-foxes.models.wake_superpositions"], [237, "module-foxes.models.wake_superpositions.linear"], [239, "module-foxes.models.wake_superpositions.max"], [241, "module-foxes.models.wake_superpositions.product"], [243, "module-foxes.models.wake_superpositions.quadratic"], [245, "module-foxes.models.wake_superpositions.ti_superp"], [247, "module-foxes.opt"], [248, "module-foxes.opt.constraints"], [249, "module-foxes.opt.constraints.area_geometry"], [252, "module-foxes.opt.constraints.min_dist"], [254, "module-foxes.opt.core"], [255, "module-foxes.opt.core.farm_constraint"], [257, "module-foxes.opt.core.farm_objective"], [259, "module-foxes.opt.core.farm_opt_problem"], [261, "module-foxes.opt.core.farm_vars_problem"], [263, "module-foxes.opt.core.pop_states"], [265, "module-foxes.opt.objectives"], [266, "module-foxes.opt.objectives.farm_vars"], [270, "module-foxes.opt.objectives.max_n_turbines"], [272, "module-foxes.opt.problems"], [273, "module-foxes.opt.problems.layout"], [274, "module-foxes.opt.problems.layout.farm_layout"], [276, "module-foxes.opt.problems.layout.geom_layouts"], [277, "module-foxes.opt.problems.layout.geom_layouts.constraints"], [285, "module-foxes.opt.problems.layout.geom_layouts.geom_layout"], [287, "module-foxes.opt.problems.layout.geom_layouts.geom_layout_gridded"], [289, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrid"], [291, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrids"], [293, "module-foxes.opt.problems.layout.geom_layouts.objectives"], [300, "module-foxes.opt.problems.layout.reggrids_layout"], [302, "module-foxes.opt.problems.layout.regular_layout"], [304, "module-foxes.opt.problems.opt_farm_vars"], [306, "module-foxes.output"], [307, "module-foxes.output.farm_layout"], [309, "module-foxes.output.farm_results_eval"], [311, "module-foxes.output.flow_plots_2d"], [313, "module-foxes.output.output"], [315, "module-foxes.output.results_writer"], [317, "module-foxes.output.rose_plot"], [320, "module-foxes.output.state_turbine_map"], [322, "module-foxes.output.turbine_type_curves"], [324, "module-foxes.utils"], [325, "module-foxes.utils.abl"], [326, "module-foxes.utils.abl.neutral"], [330, "module-foxes.utils.abl.sheared"], [332, "module-foxes.utils.abl.stable"], [337, "module-foxes.utils.abl.unstable"], [341, "module-foxes.utils.cubic_roots"], [342, "module-foxes.utils.data_book"], [344, "module-foxes.utils.dict"], [346, "module-foxes.utils.geom2d"], [347, "module-foxes.utils.geom2d.area_geometry"], [353, "module-foxes.utils.geom2d.circle"], [355, "module-foxes.utils.geom2d.example_intersection"], [356, "module-foxes.utils.geom2d.example_union"], [357, "module-foxes.utils.geom2d.half_plane"], [359, "module-foxes.utils.geom2d.polygon"], [361, "module-foxes.utils.geopandas_helpers"], [368, "module-foxes.utils.pandas_helpers"], [370, "module-foxes.utils.plotly_helpers"], [372, "module-foxes.utils.runners"], [376, "module-foxes.utils.subclasses"], [378, "module-foxes.utils.two_circles"], [381, "module-foxes.utils.wind_dir"], [387, "module-foxes.variables"]], "foxes.algorithms.downwind": [[1, "module-foxes.algorithms.downwind"]], "foxes.algorithms.downwind.downwind": [[2, "module-foxes.algorithms.downwind.downwind"]], "downwind (class in foxes.algorithms.downwind.downwind)": [[3, "foxes.algorithms.downwind.downwind.Downwind"]], "downwind.farmwakescalculation (class in foxes.algorithms.downwind.downwind)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation"]], "downwind.pointwakescalculation (class in foxes.algorithms.downwind.downwind)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation"]], "downwind.setambpointresults (class in foxes.algorithms.downwind.downwind)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults"]], "__init__() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.__init__"], [3, "id0"]], "__init__() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.__init__"]], "__init__() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.__init__"]], "__init__() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.__init__"]], "calc_farm() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.calc_farm"]], "calc_points() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.calc_points"]], "calculate() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.calculate"]], "calculate() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.calculate"]], "calculate() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.calculate"]], "emodels (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.emodels"]], "emodels_cpars (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.emodels_cpars"]], "farm_controller (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.farm_controller"]], "finalize() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.finalize"]], "finalize() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.finalize"]], "finalize() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.finalize"]], "finalize() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.finalize"]], "finalize_model() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.finalize_model"]], "get_data() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.get_data"]], "get_data() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.get_data"]], "get_data() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.get_data"]], "get_data() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.get_data"]], "get_models_data() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.get_models_data"]], "idata_mem (foxes.algorithms.downwind.downwind.downwind property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.idata_mem"]], "init_states() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.init_states"]], "initialize() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.initialize"]], "initialize() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.initialize"]], "initialize() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.initialize"]], "initialize() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.initialize"]], "initialized (foxes.algorithms.downwind.downwind.downwind property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.initialized"]], "initialized (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.initialized"]], "initialized (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.initialized"]], "initialized (foxes.algorithms.downwind.downwind.downwind.setambpointresults property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.initialized"]], "model_id (foxes.algorithms.downwind.downwind.downwind property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.model_id"]], "model_id (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.model_id"]], "model_id (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.model_id"]], "model_id (foxes.algorithms.downwind.downwind.downwind.setambpointresults property)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.model_id"]], "n_states (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.n_states"]], "new() (foxes.algorithms.downwind.downwind.downwind class method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.new"]], "new_point_data() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.new_point_data"]], "output_farm_vars() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.output_farm_vars"]], "output_point_vars() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.output_point_vars"]], "output_point_vars() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.output_point_vars"]], "partial_wakes_model (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.partial_wakes_model"]], "point_vars (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.point_vars"]], "print() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.print"]], "pvars (foxes.algorithms.downwind.downwind.downwind.setambpointresults attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.pvars"]], "rotor_model (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.rotor_model"]], "run_calculation() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.run_calculation"]], "run_calculation() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.run_calculation"]], "run_calculation() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.run_calculation"]], "states (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.states"]], "update_idata() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.update_idata"]], "update_n_turbines() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.update_n_turbines"]], "var() (foxes.algorithms.downwind.downwind.downwind method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.var"]], "var() (foxes.algorithms.downwind.downwind.downwind.farmwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.FarmWakesCalculation.var"]], "var() (foxes.algorithms.downwind.downwind.downwind.pointwakescalculation method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.PointWakesCalculation.var"]], "var() (foxes.algorithms.downwind.downwind.downwind.setambpointresults method)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.var"]], "vars (foxes.algorithms.downwind.downwind.downwind.setambpointresults attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.SetAmbPointResults.vars"]], "wake_frame (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.wake_frame"]], "wake_models (foxes.algorithms.downwind.downwind.downwind attribute)": [[3, "foxes.algorithms.downwind.downwind.Downwind.wake_models"]], "foxes.algorithms.downwind.models": [[4, "module-foxes.algorithms.downwind.models"]], "foxes.algorithms.downwind.models.calc_order": [[5, "module-foxes.algorithms.downwind.models.calc_order"]], "calcorder (class in foxes.algorithms.downwind.models.calc_order)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder"]], "__init__() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.__init__"], [6, "id0"]], "calculate() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.calculate"]], "finalize() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.finalize"]], "get_data() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.get_data"]], "initialize() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.initialize"]], "initialized (foxes.algorithms.downwind.models.calc_order.calcorder property)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.initialized"]], "model_id (foxes.algorithms.downwind.models.calc_order.calcorder property)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.model_id"]], "output_farm_vars() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.output_farm_vars"]], "run_calculation() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.run_calculation"]], "var() (foxes.algorithms.downwind.models.calc_order.calcorder method)": [[6, "foxes.algorithms.downwind.models.calc_order.CalcOrder.var"]], "foxes.algorithms.downwind.models.farm_wakes_calc": [[7, "module-foxes.algorithms.downwind.models.farm_wakes_calc"]], "farmwakescalculation (class in foxes.algorithms.downwind.models.farm_wakes_calc)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation"]], "__init__() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.__init__"], [8, "id0"]], "calculate() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.calculate"]], "finalize() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.finalize"]], "get_data() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.get_data"]], "initialize() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.initialize"]], "initialized (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation property)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.initialized"]], "model_id (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation property)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.model_id"]], "output_farm_vars() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.output_farm_vars"]], "run_calculation() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.run_calculation"]], "var() (foxes.algorithms.downwind.models.farm_wakes_calc.farmwakescalculation method)": [[8, "foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.var"]], "foxes.algorithms.downwind.models.point_wakes_calc": [[9, "module-foxes.algorithms.downwind.models.point_wakes_calc"]], "pointwakescalculation (class in foxes.algorithms.downwind.models.point_wakes_calc)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation"]], "__init__() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.__init__"], [10, "id0"]], "calculate() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.calculate"]], "emodels (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation attribute)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.emodels"]], "emodels_cpars (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation attribute)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.emodels_cpars"]], "finalize() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.finalize"]], "get_data() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.get_data"]], "initialize() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.initialize"]], "initialized (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation property)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.initialized"]], "model_id (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation property)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.model_id"]], "output_point_vars() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.output_point_vars"]], "point_vars (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation attribute)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.point_vars"]], "run_calculation() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.run_calculation"]], "var() (foxes.algorithms.downwind.models.point_wakes_calc.pointwakescalculation method)": [[10, "foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.var"]], "foxes.algorithms.downwind.models.set_amb_farm_results": [[11, "module-foxes.algorithms.downwind.models.set_amb_farm_results"]], "setambfarmresults (class in foxes.algorithms.downwind.models.set_amb_farm_results)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults"]], "__init__() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.__init__"], [12, "id0"]], "calculate() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.calculate"]], "finalize() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.finalize"]], "get_data() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.get_data"]], "initialize() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.initialize"]], "initialized (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults property)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.initialized"]], "model_id (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults property)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.model_id"]], "output_farm_vars() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.output_farm_vars"]], "run_calculation() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.run_calculation"]], "var() (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults method)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.var"]], "vars (foxes.algorithms.downwind.models.set_amb_farm_results.setambfarmresults attribute)": [[12, "foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.vars"]], "foxes.algorithms.downwind.models.set_amb_point_results": [[13, "module-foxes.algorithms.downwind.models.set_amb_point_results"]], "setambpointresults (class in foxes.algorithms.downwind.models.set_amb_point_results)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults"]], "__init__() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.__init__"], [14, "id0"]], "calculate() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.calculate"]], "finalize() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.finalize"]], "get_data() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.get_data"]], "initialize() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.initialize"]], "initialized (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults property)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.initialized"]], "model_id (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults property)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.model_id"]], "output_point_vars() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.output_point_vars"]], "pvars (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults attribute)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.pvars"]], "run_calculation() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.run_calculation"]], "var() (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults method)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.var"]], "vars (foxes.algorithms.downwind.models.set_amb_point_results.setambpointresults attribute)": [[14, "foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.vars"]], "foxes.algorithms.iterative": [[15, "module-foxes.algorithms.iterative"]], "foxes.algorithms.iterative.iterative": [[16, "module-foxes.algorithms.iterative.iterative"]], "iterative (class in foxes.algorithms.iterative.iterative)": [[17, "foxes.algorithms.iterative.iterative.Iterative"]], "iterative.farmwakescalculation (class in foxes.algorithms.iterative.iterative)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation"]], "iterative.pointwakescalculation (class in foxes.algorithms.iterative.iterative)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation"]], "iterative.setambpointresults (class in foxes.algorithms.iterative.iterative)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults"]], "__init__() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.__init__"], [17, "id0"]], "__init__() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.__init__"]], "__init__() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.__init__"]], "__init__() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.__init__"]], "calc_farm() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.calc_farm"]], "calc_points() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.calc_points"]], "calculate() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.calculate"]], "calculate() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.calculate"]], "calculate() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.calculate"]], "conv (foxes.algorithms.iterative.iterative.iterative attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.conv"]], "conv_error (foxes.algorithms.iterative.iterative.iterative attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.conv_error"]], "emodels (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.emodels"]], "emodels_cpars (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.emodels_cpars"]], "finalize() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.finalize"]], "finalize() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.finalize"]], "finalize() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.finalize"]], "finalize() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.finalize"]], "finalize_model() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.finalize_model"]], "get_data() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.get_data"]], "get_data() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.get_data"]], "get_data() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.get_data"]], "get_data() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.get_data"]], "get_models_data() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.get_models_data"]], "idata_mem (foxes.algorithms.iterative.iterative.iterative property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.idata_mem"]], "init_states() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.init_states"]], "initialize() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.initialize"]], "initialize() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.initialize"]], "initialize() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.initialize"]], "initialize() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.initialize"]], "initialized (foxes.algorithms.iterative.iterative.iterative property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.initialized"]], "initialized (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.initialized"]], "initialized (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.initialized"]], "initialized (foxes.algorithms.iterative.iterative.iterative.setambpointresults property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.initialized"]], "max_its (foxes.algorithms.iterative.iterative.iterative attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.max_its"]], "model_id (foxes.algorithms.iterative.iterative.iterative property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.model_id"]], "model_id (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.model_id"]], "model_id (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.model_id"]], "model_id (foxes.algorithms.iterative.iterative.iterative.setambpointresults property)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.model_id"]], "new() (foxes.algorithms.iterative.iterative.iterative class method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.new"]], "new_point_data() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.new_point_data"]], "output_farm_vars() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.output_farm_vars"]], "output_point_vars() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.output_point_vars"]], "output_point_vars() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.output_point_vars"]], "point_vars (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.point_vars"]], "print() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.print"]], "pvars (foxes.algorithms.iterative.iterative.iterative.setambpointresults attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.pvars"]], "run_calculation() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.run_calculation"]], "run_calculation() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.run_calculation"]], "run_calculation() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.run_calculation"]], "update_idata() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.update_idata"]], "update_n_turbines() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.update_n_turbines"]], "var() (foxes.algorithms.iterative.iterative.iterative method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.var"]], "var() (foxes.algorithms.iterative.iterative.iterative.farmwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.FarmWakesCalculation.var"]], "var() (foxes.algorithms.iterative.iterative.iterative.pointwakescalculation method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.PointWakesCalculation.var"]], "var() (foxes.algorithms.iterative.iterative.iterative.setambpointresults method)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.var"]], "vars (foxes.algorithms.iterative.iterative.iterative.setambpointresults attribute)": [[17, "foxes.algorithms.iterative.iterative.Iterative.SetAmbPointResults.vars"]], "foxes.algorithms.iterative.models": [[18, "module-foxes.algorithms.iterative.models"]], "foxes.algorithms.iterative.models.convergence": [[19, "module-foxes.algorithms.iterative.models.convergence"]], "convcrit (class in foxes.algorithms.iterative.models.convergence)": [[20, "foxes.algorithms.iterative.models.convergence.ConvCrit"]], "__init__() (foxes.algorithms.iterative.models.convergence.convcrit method)": [[20, "foxes.algorithms.iterative.models.convergence.ConvCrit.__init__"], [20, "id0"]], "check_converged() (foxes.algorithms.iterative.models.convergence.convcrit method)": [[20, "foxes.algorithms.iterative.models.convergence.ConvCrit.check_converged"]], "convcritlist (class in foxes.algorithms.iterative.models.convergence)": [[21, "foxes.algorithms.iterative.models.convergence.ConvCritList"]], "__init__() (foxes.algorithms.iterative.models.convergence.convcritlist method)": [[21, "foxes.algorithms.iterative.models.convergence.ConvCritList.__init__"], [21, "id0"]], "add_crit() (foxes.algorithms.iterative.models.convergence.convcritlist method)": [[21, "foxes.algorithms.iterative.models.convergence.ConvCritList.add_crit"]], "check_converged() (foxes.algorithms.iterative.models.convergence.convcritlist method)": [[21, "foxes.algorithms.iterative.models.convergence.ConvCritList.check_converged"]], "crits (foxes.algorithms.iterative.models.convergence.convcritlist attribute)": [[21, "foxes.algorithms.iterative.models.convergence.ConvCritList.crits"]], "convvardelta (class in foxes.algorithms.iterative.models.convergence)": [[22, "foxes.algorithms.iterative.models.convergence.ConvVarDelta"]], "__init__() (foxes.algorithms.iterative.models.convergence.convvardelta method)": [[22, "foxes.algorithms.iterative.models.convergence.ConvVarDelta.__init__"], [22, "id0"]], "check_converged() (foxes.algorithms.iterative.models.convergence.convvardelta method)": [[22, "foxes.algorithms.iterative.models.convergence.ConvVarDelta.check_converged"]], "limits (foxes.algorithms.iterative.models.convergence.convvardelta attribute)": [[22, "foxes.algorithms.iterative.models.convergence.ConvVarDelta.limits"]], "wd_vars (foxes.algorithms.iterative.models.convergence.convvardelta attribute)": [[22, "foxes.algorithms.iterative.models.convergence.ConvVarDelta.wd_vars"]], "defaultconv (class in foxes.algorithms.iterative.models.convergence)": [[23, "foxes.algorithms.iterative.models.convergence.DefaultConv"]], "__init__() (foxes.algorithms.iterative.models.convergence.defaultconv method)": [[23, "foxes.algorithms.iterative.models.convergence.DefaultConv.__init__"], [23, "id0"]], "check_converged() (foxes.algorithms.iterative.models.convergence.defaultconv method)": [[23, "foxes.algorithms.iterative.models.convergence.DefaultConv.check_converged"]], "foxes.algorithms.iterative.models.farm_wakes_calc": [[24, "module-foxes.algorithms.iterative.models.farm_wakes_calc"]], "farmwakescalculation (class in foxes.algorithms.iterative.models.farm_wakes_calc)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation"]], "__init__() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.__init__"], [25, "id0"]], "calculate() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.calculate"]], "finalize() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.finalize"]], "get_data() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.get_data"]], "initialize() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.initialize"]], "initialized (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation property)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.initialized"]], "model_id (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation property)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.model_id"]], "output_farm_vars() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.output_farm_vars"]], "run_calculation() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.run_calculation"]], "var() (foxes.algorithms.iterative.models.farm_wakes_calc.farmwakescalculation method)": [[25, "foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.var"]], "foxes.algorithms.iterative.models.loop_runner": [[26, "module-foxes.algorithms.iterative.models.loop_runner"]], "looprunner (class in foxes.algorithms.iterative.models.loop_runner)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner"]], "__init__() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.__init__"], [27, "id0"]], "append() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.append"]], "calculate() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.calculate"]], "conv (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.conv"]], "conv_error (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.conv_error"]], "finalize() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.finalize"]], "get_data() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.get_data"]], "initialize() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.initialize"]], "initialized (foxes.algorithms.iterative.models.loop_runner.looprunner property)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.initialized"]], "max_its (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.max_its"]], "model_id (foxes.algorithms.iterative.models.loop_runner.looprunner property)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.model_id"]], "model_wflag (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.model_wflag"]], "models (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.models"]], "output_farm_vars() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.output_farm_vars"]], "run_calculation() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.run_calculation"]], "var() (foxes.algorithms.iterative.models.loop_runner.looprunner method)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.var"]], "verbosity (foxes.algorithms.iterative.models.loop_runner.looprunner attribute)": [[27, "foxes.algorithms.iterative.models.loop_runner.LoopRunner.verbosity"]], "amb_rpoint_results (in module foxes.constants)": [[28, "foxes.constants.AMB_RPOINT_RESULTS"]], "dtype (in module foxes.constants)": [[28, "foxes.constants.DTYPE"]], "farm (in module foxes.constants)": [[28, "foxes.constants.FARM"]], "gw (in module foxes.constants)": [[28, "foxes.constants.GW"]], "itype (in module foxes.constants)": [[28, "foxes.constants.ITYPE"]], "kappa (in module foxes.constants)": [[28, "foxes.constants.KAPPA"]], "mw (in module foxes.constants)": [[28, "foxes.constants.MW"]], "point (in module foxes.constants)": [[28, "foxes.constants.POINT"]], "points (in module foxes.constants)": [[28, "foxes.constants.POINTS"]], "pop (in module foxes.constants)": [[28, "foxes.constants.POP"]], "p_units (in module foxes.constants)": [[28, "foxes.constants.P_UNITS"]], "rpoint (in module foxes.constants)": [[28, "foxes.constants.RPOINT"]], "rpoints (in module foxes.constants)": [[28, "foxes.constants.RPOINTS"]], "rweights (in module foxes.constants)": [[28, "foxes.constants.RWEIGHTS"]], "state (in module foxes.constants)": [[28, "foxes.constants.STATE"]], "tmodels (in module foxes.constants)": [[28, "foxes.constants.TMODELS"]], "tmodels_sels (in module foxes.constants)": [[28, "foxes.constants.TMODELS_SELS"]], "tname (in module foxes.constants)": [[28, "foxes.constants.TNAME"]], "turbine (in module foxes.constants)": [[28, "foxes.constants.TURBINE"]], "tw (in module foxes.constants)": [[28, "foxes.constants.TW"]], "valid (in module foxes.constants)": [[28, "foxes.constants.VALID"]], "vars (in module foxes.constants)": [[28, "foxes.constants.VARS"]], "w (in module foxes.constants)": [[28, "foxes.constants.W"]], "foxes.constants": [[28, "module-foxes.constants"]], "kw (in module foxes.constants)": [[28, "foxes.constants.kW"]], "foxes.core": [[29, "module-foxes.core"]], "foxes.core.algorithm": [[30, "module-foxes.core.algorithm"]], "algorithm (class in foxes.core.algorithm)": [[31, "foxes.core.algorithm.Algorithm"]], "__init__() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.__init__"], [31, "id0"]], "chunks (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.chunks"]], "dbook (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.dbook"]], "farm (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.farm"]], "finalize() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.finalize"]], "finalize_model() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.finalize_model"]], "get_data() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.get_data"]], "get_models_data() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.get_models_data"]], "idata_mem (foxes.core.algorithm.algorithm property)": [[31, "foxes.core.algorithm.Algorithm.idata_mem"]], "initialize() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.initialize"]], "initialized (foxes.core.algorithm.algorithm property)": [[31, "foxes.core.algorithm.Algorithm.initialized"]], "keep_models (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.keep_models"]], "mbook (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.mbook"]], "model_id (foxes.core.algorithm.algorithm property)": [[31, "foxes.core.algorithm.Algorithm.model_id"]], "new() (foxes.core.algorithm.algorithm class method)": [[31, "foxes.core.algorithm.Algorithm.new"]], "new_point_data() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.new_point_data"]], "print() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.print"]], "update_idata() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.update_idata"]], "update_n_turbines() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.update_n_turbines"]], "var() (foxes.core.algorithm.algorithm method)": [[31, "foxes.core.algorithm.Algorithm.var"]], "verbosity (foxes.core.algorithm.algorithm attribute)": [[31, "foxes.core.algorithm.Algorithm.verbosity"]], "foxes.core.data": [[32, "module-foxes.core.data"]], "data (class in foxes.core.data)": [[33, "foxes.core.data.Data"]], "__init__() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.__init__"], [33, "id0"]], "__new__() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.__new__"]], "clear() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.clear"]], "copy() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.copy"]], "dims (foxes.core.data.data attribute)": [[33, "foxes.core.data.Data.dims"]], "fromkeys() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.fromkeys"]], "get() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.get"]], "items() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.items"]], "keys() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.keys"]], "loop_dims (foxes.core.data.data attribute)": [[33, "foxes.core.data.Data.loop_dims"]], "pop() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.pop"]], "popitem() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.popitem"]], "setdefault() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.setdefault"]], "sizes (foxes.core.data.data attribute)": [[33, "foxes.core.data.Data.sizes"]], "update() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.update"]], "values() (foxes.core.data.data method)": [[33, "foxes.core.data.Data.values"]], "foxes.core.data_calc_model": [[34, "module-foxes.core.data_calc_model"]], "datacalcmodel (class in foxes.core.data_calc_model)": [[35, "foxes.core.data_calc_model.DataCalcModel"]], "__init__() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.__init__"], [35, "id0"]], "calculate() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.calculate"]], "finalize() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.finalize"]], "get_data() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.get_data"]], "initialize() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.initialize"]], "initialized (foxes.core.data_calc_model.datacalcmodel property)": [[35, "foxes.core.data_calc_model.DataCalcModel.initialized"]], "model_id (foxes.core.data_calc_model.datacalcmodel property)": [[35, "foxes.core.data_calc_model.DataCalcModel.model_id"]], "run_calculation() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.run_calculation"]], "var() (foxes.core.data_calc_model.datacalcmodel method)": [[35, "foxes.core.data_calc_model.DataCalcModel.var"]], "foxes.core.farm_controller": [[36, "module-foxes.core.farm_controller"]], "farmcontroller (class in foxes.core.farm_controller)": [[37, "foxes.core.farm_controller.FarmController"]], "__init__() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.__init__"], [37, "id0"]], "calculate() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.calculate"]], "collect_models() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.collect_models"]], "finalize() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.finalize"]], "get_data() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.get_data"]], "initialize() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.initialize"]], "initialized (foxes.core.farm_controller.farmcontroller property)": [[37, "foxes.core.farm_controller.FarmController.initialized"]], "model_id (foxes.core.farm_controller.farmcontroller property)": [[37, "foxes.core.farm_controller.FarmController.model_id"]], "output_farm_vars() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.output_farm_vars"]], "pars (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.pars"]], "post_rotor_models (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.post_rotor_models"]], "pre_rotor_models (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.pre_rotor_models"]], "run_calculation() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.run_calculation"]], "set_pars() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.set_pars"]], "turbine_model_names (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.turbine_model_names"]], "turbine_model_sels (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.turbine_model_sels"]], "turbine_types (foxes.core.farm_controller.farmcontroller attribute)": [[37, "foxes.core.farm_controller.FarmController.turbine_types"]], "var() (foxes.core.farm_controller.farmcontroller method)": [[37, "foxes.core.farm_controller.FarmController.var"]], "foxes.core.farm_data_model": [[38, "module-foxes.core.farm_data_model"]], "farmdatamodel (class in foxes.core.farm_data_model)": [[39, "foxes.core.farm_data_model.FarmDataModel"]], "__init__() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.__init__"], [39, "id0"]], "calculate() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.calculate"]], "finalize() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.finalize"]], "get_data() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.get_data"]], "initialize() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.initialize"]], "initialized (foxes.core.farm_data_model.farmdatamodel property)": [[39, "foxes.core.farm_data_model.FarmDataModel.initialized"]], "model_id (foxes.core.farm_data_model.farmdatamodel property)": [[39, "foxes.core.farm_data_model.FarmDataModel.model_id"]], "output_farm_vars() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.output_farm_vars"]], "pre_rotor (foxes.core.farm_data_model.farmdatamodel attribute)": [[39, "foxes.core.farm_data_model.FarmDataModel.pre_rotor"]], "run_calculation() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.run_calculation"]], "var() (foxes.core.farm_data_model.farmdatamodel method)": [[39, "foxes.core.farm_data_model.FarmDataModel.var"]], "farmdatamodellist (class in foxes.core.farm_data_model)": [[40, "foxes.core.farm_data_model.FarmDataModelList"]], "__init__() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.__init__"], [40, "id0"]], "append() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.append"]], "calculate() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.calculate"]], "finalize() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.finalize"]], "get_data() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.get_data"]], "initialize() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.initialize"]], "initialized (foxes.core.farm_data_model.farmdatamodellist property)": [[40, "foxes.core.farm_data_model.FarmDataModelList.initialized"]], "model_id (foxes.core.farm_data_model.farmdatamodellist property)": [[40, "foxes.core.farm_data_model.FarmDataModelList.model_id"]], "models (foxes.core.farm_data_model.farmdatamodellist attribute)": [[40, "foxes.core.farm_data_model.FarmDataModelList.models"]], "output_farm_vars() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.output_farm_vars"]], "run_calculation() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.run_calculation"]], "var() (foxes.core.farm_data_model.farmdatamodellist method)": [[40, "foxes.core.farm_data_model.FarmDataModelList.var"]], "foxes.core.farm_model": [[41, "module-foxes.core.farm_model"]], "farmmodel (class in foxes.core.farm_model)": [[42, "foxes.core.farm_model.FarmModel"]], "__init__() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.__init__"], [42, "id0"]], "calculate() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.calculate"]], "finalize() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.finalize"]], "get_data() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.get_data"]], "initialize() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.initialize"]], "initialized (foxes.core.farm_model.farmmodel property)": [[42, "foxes.core.farm_model.FarmModel.initialized"]], "model_id (foxes.core.farm_model.farmmodel property)": [[42, "foxes.core.farm_model.FarmModel.model_id"]], "output_farm_vars() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.output_farm_vars"]], "run_calculation() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.run_calculation"]], "var() (foxes.core.farm_model.farmmodel method)": [[42, "foxes.core.farm_model.FarmModel.var"]], "foxes.core.model": [[43, "module-foxes.core.model"]], "model (class in foxes.core.model)": [[44, "foxes.core.model.Model"]], "__init__() (foxes.core.model.model method)": [[44, "foxes.core.model.Model.__init__"], [44, "id0"]], "finalize() (foxes.core.model.model method)": [[44, "foxes.core.model.Model.finalize"]], "get_data() (foxes.core.model.model method)": [[44, "foxes.core.model.Model.get_data"]], "initialize() (foxes.core.model.model method)": [[44, "foxes.core.model.Model.initialize"]], "initialized (foxes.core.model.model property)": [[44, "foxes.core.model.Model.initialized"]], "model_id (foxes.core.model.model property)": [[44, "foxes.core.model.Model.model_id"]], "name (foxes.core.model.model attribute)": [[44, "foxes.core.model.Model.name"]], "var() (foxes.core.model.model method)": [[44, "foxes.core.model.Model.var"]], "foxes.core.partial_wakes_model": [[45, "module-foxes.core.partial_wakes_model"]], "partialwakesmodel (class in foxes.core.partial_wakes_model)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel"]], "__init__() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.__init__"], [46, "id0"]], "contribute_to_wake_deltas() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.contribute_to_wake_deltas"]], "evaluate_results() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.evaluate_results"]], "finalize() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.finalize"]], "get_data() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.get_data"]], "initialize() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.initialize"]], "initialized (foxes.core.partial_wakes_model.partialwakesmodel property)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.initialized"]], "model_id (foxes.core.partial_wakes_model.partialwakesmodel property)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.model_id"]], "new() (foxes.core.partial_wakes_model.partialwakesmodel class method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.new"]], "new_wake_deltas() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.new_wake_deltas"]], "var() (foxes.core.partial_wakes_model.partialwakesmodel method)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.var"]], "wake_frame (foxes.core.partial_wakes_model.partialwakesmodel attribute)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.wake_frame"]], "wake_models (foxes.core.partial_wakes_model.partialwakesmodel attribute)": [[46, "foxes.core.partial_wakes_model.PartialWakesModel.wake_models"]], "foxes.core.point_data_model": [[47, "module-foxes.core.point_data_model"]], "pointdatamodel (class in foxes.core.point_data_model)": [[48, "foxes.core.point_data_model.PointDataModel"]], "__init__() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.__init__"], [48, "id0"]], "calculate() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.calculate"]], "finalize() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.finalize"]], "get_data() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.get_data"]], "initialize() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.initialize"]], "initialized (foxes.core.point_data_model.pointdatamodel property)": [[48, "foxes.core.point_data_model.PointDataModel.initialized"]], "model_id (foxes.core.point_data_model.pointdatamodel property)": [[48, "foxes.core.point_data_model.PointDataModel.model_id"]], "output_point_vars() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.output_point_vars"]], "run_calculation() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.run_calculation"]], "var() (foxes.core.point_data_model.pointdatamodel method)": [[48, "foxes.core.point_data_model.PointDataModel.var"]], "pointdatamodellist (class in foxes.core.point_data_model)": [[49, "foxes.core.point_data_model.PointDataModelList"]], "__init__() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.__init__"], [49, "id0"]], "append() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.append"]], "calculate() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.calculate"]], "finalize() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.finalize"]], "get_data() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.get_data"]], "initialize() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.initialize"]], "initialized (foxes.core.point_data_model.pointdatamodellist property)": [[49, "foxes.core.point_data_model.PointDataModelList.initialized"]], "model_id (foxes.core.point_data_model.pointdatamodellist property)": [[49, "foxes.core.point_data_model.PointDataModelList.model_id"]], "models (foxes.core.point_data_model.pointdatamodellist attribute)": [[49, "foxes.core.point_data_model.PointDataModelList.models"]], "output_point_vars() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.output_point_vars"]], "run_calculation() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.run_calculation"]], "var() (foxes.core.point_data_model.pointdatamodellist method)": [[49, "foxes.core.point_data_model.PointDataModelList.var"]], "foxes.core.rotor_model": [[50, "module-foxes.core.rotor_model"]], "rotormodel (class in foxes.core.rotor_model)": [[51, "foxes.core.rotor_model.RotorModel"]], "__init__() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.__init__"], [51, "id0"]], "calc_vars (foxes.core.rotor_model.rotormodel attribute)": [[51, "foxes.core.rotor_model.RotorModel.calc_vars"]], "calculate() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.calculate"]], "design_points() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.design_points"]], "eval_rpoint_results() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.eval_rpoint_results"]], "finalize() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.finalize"]], "get_data() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.get_data"]], "get_rotor_points() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.get_rotor_points"]], "initialize() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.initialize"]], "initialized (foxes.core.rotor_model.rotormodel property)": [[51, "foxes.core.rotor_model.RotorModel.initialized"]], "model_id (foxes.core.rotor_model.rotormodel property)": [[51, "foxes.core.rotor_model.RotorModel.model_id"]], "n_rotor_points() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.n_rotor_points"]], "output_farm_vars() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.output_farm_vars"]], "rotor_point_weights() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.rotor_point_weights"]], "run_calculation() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.run_calculation"]], "var() (foxes.core.rotor_model.rotormodel method)": [[51, "foxes.core.rotor_model.RotorModel.var"]], "foxes.core.states": [[52, "module-foxes.core.states"]], "extendedstates (class in foxes.core.states)": [[53, "foxes.core.states.ExtendedStates"]], "__init__() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.__init__"], [53, "id0"]], "append() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.append"]], "calculate() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.calculate"]], "finalize() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.finalize"]], "get_data() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.get_data"]], "index() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.index"]], "initialize() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.initialize"]], "initialized (foxes.core.states.extendedstates property)": [[53, "foxes.core.states.ExtendedStates.initialized"]], "model_id (foxes.core.states.extendedstates property)": [[53, "foxes.core.states.ExtendedStates.model_id"]], "output_point_vars() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.output_point_vars"]], "pmodels (foxes.core.states.extendedstates attribute)": [[53, "foxes.core.states.ExtendedStates.pmodels"]], "run_calculation() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.run_calculation"]], "size() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.size"]], "states (foxes.core.states.extendedstates attribute)": [[53, "foxes.core.states.ExtendedStates.states"]], "var() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.var"]], "weights() (foxes.core.states.extendedstates method)": [[53, "foxes.core.states.ExtendedStates.weights"]], "states (class in foxes.core.states)": [[54, "foxes.core.states.States"]], "__init__() (foxes.core.states.states method)": [[54, "foxes.core.states.States.__init__"], [54, "id0"]], "calculate() (foxes.core.states.states method)": [[54, "foxes.core.states.States.calculate"]], "finalize() (foxes.core.states.states method)": [[54, "foxes.core.states.States.finalize"]], "get_data() (foxes.core.states.states method)": [[54, "foxes.core.states.States.get_data"]], "index() (foxes.core.states.states method)": [[54, "foxes.core.states.States.index"]], "initialize() (foxes.core.states.states method)": [[54, "foxes.core.states.States.initialize"]], "initialized (foxes.core.states.states property)": [[54, "foxes.core.states.States.initialized"]], "model_id (foxes.core.states.states property)": [[54, "foxes.core.states.States.model_id"]], "output_point_vars() (foxes.core.states.states method)": [[54, "foxes.core.states.States.output_point_vars"]], "run_calculation() (foxes.core.states.states method)": [[54, "foxes.core.states.States.run_calculation"]], "size() (foxes.core.states.states method)": [[54, "foxes.core.states.States.size"]], "var() (foxes.core.states.states method)": [[54, "foxes.core.states.States.var"]], "weights() (foxes.core.states.states method)": [[54, "foxes.core.states.States.weights"]], "foxes.core.turbine": [[55, "module-foxes.core.turbine"]], "d (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.D"]], "h (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.H"]], "turbine (class in foxes.core.turbine)": [[56, "foxes.core.turbine.Turbine"]], "__init__() (foxes.core.turbine.turbine method)": [[56, "foxes.core.turbine.Turbine.__init__"], [56, "id0"]], "add_model() (foxes.core.turbine.turbine method)": [[56, "foxes.core.turbine.Turbine.add_model"]], "index (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.index"]], "insert_model() (foxes.core.turbine.turbine method)": [[56, "foxes.core.turbine.Turbine.insert_model"]], "models (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.models"]], "mstates_sel (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.mstates_sel"]], "name (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.name"]], "xy (foxes.core.turbine.turbine attribute)": [[56, "foxes.core.turbine.Turbine.xy"]], "foxes.core.turbine_model": [[57, "module-foxes.core.turbine_model"]], "turbinemodel (class in foxes.core.turbine_model)": [[58, "foxes.core.turbine_model.TurbineModel"]], "__init__() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.__init__"], [58, "id0"]], "calculate() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.calculate"]], "finalize() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.finalize"]], "get_data() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.get_data"]], "initialize() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.initialize"]], "initialized (foxes.core.turbine_model.turbinemodel property)": [[58, "foxes.core.turbine_model.TurbineModel.initialized"]], "model_id (foxes.core.turbine_model.turbinemodel property)": [[58, "foxes.core.turbine_model.TurbineModel.model_id"]], "output_farm_vars() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.output_farm_vars"]], "run_calculation() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.run_calculation"]], "var() (foxes.core.turbine_model.turbinemodel method)": [[58, "foxes.core.turbine_model.TurbineModel.var"]], "foxes.core.turbine_type": [[59, "module-foxes.core.turbine_type"]], "d (foxes.core.turbine_type.turbinetype attribute)": [[60, "foxes.core.turbine_type.TurbineType.D"]], "h (foxes.core.turbine_type.turbinetype attribute)": [[60, "foxes.core.turbine_type.TurbineType.H"]], "p_nominal (foxes.core.turbine_type.turbinetype attribute)": [[60, "foxes.core.turbine_type.TurbineType.P_nominal"]], "p_unit (foxes.core.turbine_type.turbinetype attribute)": [[60, "foxes.core.turbine_type.TurbineType.P_unit"]], "turbinetype (class in foxes.core.turbine_type)": [[60, "foxes.core.turbine_type.TurbineType"]], "__init__() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.__init__"], [60, "id0"]], "calculate() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.calculate"]], "finalize() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.finalize"]], "get_data() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.get_data"]], "initialize() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.initialize"]], "initialized (foxes.core.turbine_type.turbinetype property)": [[60, "foxes.core.turbine_type.TurbineType.initialized"]], "model_id (foxes.core.turbine_type.turbinetype property)": [[60, "foxes.core.turbine_type.TurbineType.model_id"]], "name (foxes.core.turbine_type.turbinetype attribute)": [[60, "foxes.core.turbine_type.TurbineType.name"]], "output_farm_vars() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.output_farm_vars"]], "run_calculation() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.run_calculation"]], "var() (foxes.core.turbine_type.turbinetype method)": [[60, "foxes.core.turbine_type.TurbineType.var"]], "foxes.core.vertical_profile": [[61, "module-foxes.core.vertical_profile"]], "verticalprofile (class in foxes.core.vertical_profile)": [[62, "foxes.core.vertical_profile.VerticalProfile"]], "__init__() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.__init__"], [62, "id0"]], "calculate() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.calculate"]], "finalize() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.finalize"]], "get_data() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.get_data"]], "initialize() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.initialize"]], "initialized (foxes.core.vertical_profile.verticalprofile property)": [[62, "foxes.core.vertical_profile.VerticalProfile.initialized"]], "input_vars() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.input_vars"]], "model_id (foxes.core.vertical_profile.verticalprofile property)": [[62, "foxes.core.vertical_profile.VerticalProfile.model_id"]], "new() (foxes.core.vertical_profile.verticalprofile class method)": [[62, "foxes.core.vertical_profile.VerticalProfile.new"]], "var() (foxes.core.vertical_profile.verticalprofile method)": [[62, "foxes.core.vertical_profile.VerticalProfile.var"]], "foxes.core.wake_frame": [[63, "module-foxes.core.wake_frame"]], "wakeframe (class in foxes.core.wake_frame)": [[64, "foxes.core.wake_frame.WakeFrame"]], "__init__() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.__init__"], [64, "id0"]], "calc_centreline_integral() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.calc_centreline_integral"]], "calc_order() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.calc_order"]], "finalize() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.finalize"]], "get_centreline_points() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.get_centreline_points"]], "get_data() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.get_data"]], "get_wake_coos() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.get_wake_coos"]], "initialize() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.initialize"]], "initialized (foxes.core.wake_frame.wakeframe property)": [[64, "foxes.core.wake_frame.WakeFrame.initialized"]], "model_id (foxes.core.wake_frame.wakeframe property)": [[64, "foxes.core.wake_frame.WakeFrame.model_id"]], "var() (foxes.core.wake_frame.wakeframe method)": [[64, "foxes.core.wake_frame.WakeFrame.var"]], "foxes.core.wake_model": [[65, "module-foxes.core.wake_model"]], "wakemodel (class in foxes.core.wake_model)": [[66, "foxes.core.wake_model.WakeModel"]], "__init__() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.__init__"], [66, "id0"]], "contribute_to_wake_deltas() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.contribute_to_wake_deltas"]], "finalize() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.finalize"]], "finalize_wake_deltas() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.finalize_wake_deltas"]], "get_data() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.get_data"]], "init_wake_deltas() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.init_wake_deltas"]], "initialize() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.initialize"]], "initialized (foxes.core.wake_model.wakemodel property)": [[66, "foxes.core.wake_model.WakeModel.initialized"]], "model_id (foxes.core.wake_model.wakemodel property)": [[66, "foxes.core.wake_model.WakeModel.model_id"]], "var() (foxes.core.wake_model.wakemodel method)": [[66, "foxes.core.wake_model.WakeModel.var"]], "foxes.core.wake_superposition": [[67, "module-foxes.core.wake_superposition"]], "wakesuperposition (class in foxes.core.wake_superposition)": [[68, "foxes.core.wake_superposition.WakeSuperposition"]], "__init__() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.__init__"], [68, "id0"]], "calc_final_wake_delta() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.finalize"]], "get_data() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.get_data"]], "initialize() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.initialize"]], "initialized (foxes.core.wake_superposition.wakesuperposition property)": [[68, "foxes.core.wake_superposition.WakeSuperposition.initialized"]], "model_id (foxes.core.wake_superposition.wakesuperposition property)": [[68, "foxes.core.wake_superposition.WakeSuperposition.model_id"]], "var() (foxes.core.wake_superposition.wakesuperposition method)": [[68, "foxes.core.wake_superposition.WakeSuperposition.var"]], "foxes.core.wind_farm": [[69, "module-foxes.core.wind_farm"]], "windfarm (class in foxes.core.wind_farm)": [[70, "foxes.core.wind_farm.WindFarm"]], "__init__() (foxes.core.wind_farm.windfarm method)": [[70, "foxes.core.wind_farm.WindFarm.__init__"], [70, "id0"]], "add_turbine() (foxes.core.wind_farm.windfarm method)": [[70, "foxes.core.wind_farm.WindFarm.add_turbine"]], "boundary (foxes.core.wind_farm.windfarm attribute)": [[70, "foxes.core.wind_farm.WindFarm.boundary"]], "n_turbines (foxes.core.wind_farm.windfarm property)": [[70, "foxes.core.wind_farm.WindFarm.n_turbines"]], "name (foxes.core.wind_farm.windfarm attribute)": [[70, "foxes.core.wind_farm.WindFarm.name"]], "turbine_names (foxes.core.wind_farm.windfarm property)": [[70, "foxes.core.wind_farm.WindFarm.turbine_names"]], "turbines (foxes.core.wind_farm.windfarm attribute)": [[70, "foxes.core.wind_farm.WindFarm.turbines"]], "foxes.data": [[71, "module-foxes.data"]], "foxes.data.farms": [[72, "module-foxes.data.farms"]], "foxes.data.parse": [[73, "module-foxes.data.parse"]], "parse_pct_file_name() (in module foxes.data.parse)": [[74, "foxes.data.parse.parse_Pct_file_name"]], "parse_pct_two_files() (in module foxes.data.parse)": [[75, "foxes.data.parse.parse_Pct_two_files"]], "foxes.data.power_ct_curves": [[76, "module-foxes.data.power_ct_curves"]], "foxes.data.states": [[77, "module-foxes.data.states"]], "foxes.data.static_data": [[78, "module-foxes.data.static_data"]], "staticdata (class in foxes.data.static_data)": [[79, "foxes.data.static_data.StaticData"]], "__init__() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.__init__"], [79, "id0"]], "add_data_package() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.add_data_package"]], "add_data_package_file() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.add_data_package_file"]], "add_file() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.add_file"]], "add_files() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.add_files"]], "get_file_path() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.get_file_path"]], "toc() (foxes.data.static_data.staticdata method)": [[79, "foxes.data.static_data.StaticData.toc"]], "foxes.input": [[80, "module-foxes.input"]], "foxes.input.farm_layout": [[81, "module-foxes.input.farm_layout"]], "foxes.input.farm_layout.from_csv": [[82, "module-foxes.input.farm_layout.from_csv"]], "add_from_csv() (in module foxes.input.farm_layout.from_csv)": [[83, "foxes.input.farm_layout.from_csv.add_from_csv"]], "foxes.input.farm_layout.from_df": [[84, "module-foxes.input.farm_layout.from_df"]], "add_from_df() (in module foxes.input.farm_layout.from_df)": [[85, "foxes.input.farm_layout.from_df.add_from_df"]], "foxes.input.farm_layout.from_file": [[86, "module-foxes.input.farm_layout.from_file"]], "add_from_file() (in module foxes.input.farm_layout.from_file)": [[87, "foxes.input.farm_layout.from_file.add_from_file"]], "foxes.input.farm_layout.from_json": [[88, "module-foxes.input.farm_layout.from_json"]], "add_from_json() (in module foxes.input.farm_layout.from_json)": [[89, "foxes.input.farm_layout.from_json.add_from_json"]], "foxes.input.farm_layout.grid": [[90, "module-foxes.input.farm_layout.grid"]], "add_grid() (in module foxes.input.farm_layout.grid)": [[91, "foxes.input.farm_layout.grid.add_grid"]], "foxes.input.farm_layout.row": [[92, "module-foxes.input.farm_layout.row"]], "add_row() (in module foxes.input.farm_layout.row)": [[93, "foxes.input.farm_layout.row.add_row"]], "foxes.input.states": [[94, "module-foxes.input.states"]], "foxes.input.states.create": [[95, "module-foxes.input.states.create"]], "foxes.input.states.create.random_abl_states": [[96, "module-foxes.input.states.create.random_abl_states"]], "create_random_abl_states() (in module foxes.input.states.create.random_abl_states)": [[97, "foxes.input.states.create.random_abl_states.create_random_abl_states"]], "write_random_abl_states() (in module foxes.input.states.create.random_abl_states)": [[98, "foxes.input.states.create.random_abl_states.write_random_abl_states"]], "foxes.input.states.field_data_nc": [[99, "module-foxes.input.states.field_data_nc"]], "fielddatanc (class in foxes.input.states.field_data_nc)": [[100, "foxes.input.states.field_data_nc.FieldDataNC"]], "__init__() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.__init__"], [100, "id0"]], "bounds_error (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.bounds_error"]], "calculate() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.calculate"]], "data_source (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.data_source"]], "fill_value (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.fill_value"]], "finalize() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.finalize"]], "fixed_vars (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.fixed_vars"]], "get_data() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.get_data"]], "h_coord (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.h_coord"]], "index() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.index"]], "initialize() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.initialize"]], "initialized (foxes.input.states.field_data_nc.fielddatanc property)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.initialized"]], "model_id (foxes.input.states.field_data_nc.fielddatanc property)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.model_id"]], "output_point_vars() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.output_point_vars"]], "ovars (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.ovars"]], "pre_load (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.pre_load"]], "run_calculation() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.run_calculation"]], "sel (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.sel"]], "size() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.size"]], "states_coord (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.states_coord"]], "time_format (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.time_format"]], "var() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.var"]], "var2ncvar (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.var2ncvar"]], "weight_ncvar (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.weight_ncvar"]], "weights() (foxes.input.states.field_data_nc.fielddatanc method)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.weights"]], "x_coord (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.x_coord"]], "y_coord (foxes.input.states.field_data_nc.fielddatanc attribute)": [[100, "foxes.input.states.field_data_nc.FieldDataNC.y_coord"]], "foxes.input.states.multi_height": [[101, "module-foxes.input.states.multi_height"]], "multiheightstates (class in foxes.input.states.multi_height)": [[102, "foxes.input.states.multi_height.MultiHeightStates"]], "rdict (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.RDICT"]], "__init__() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.__init__"], [102, "id0"]], "calculate() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.calculate"]], "data_source (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.data_source"]], "finalize() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.finalize"]], "fixed_vars (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.fixed_vars"]], "get_data() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.get_data"]], "heights (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.heights"]], "index() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.index"]], "initialize() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.initialize"]], "initialized (foxes.input.states.multi_height.multiheightstates property)": [[102, "foxes.input.states.multi_height.MultiHeightStates.initialized"]], "model_id (foxes.input.states.multi_height.multiheightstates property)": [[102, "foxes.input.states.multi_height.MultiHeightStates.model_id"]], "output_point_vars() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.output_point_vars"]], "ovars (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.ovars"]], "pd_read_pars (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.pd_read_pars"]], "reset() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.reset"]], "run_calculation() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.run_calculation"]], "size() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.size"]], "states_loc (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.states_loc"]], "states_sel (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.states_sel"]], "var() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.var"]], "var2col (foxes.input.states.multi_height.multiheightstates attribute)": [[102, "foxes.input.states.multi_height.MultiHeightStates.var2col"]], "weights() (foxes.input.states.multi_height.multiheightstates method)": [[102, "foxes.input.states.multi_height.MultiHeightStates.weights"]], "multiheighttimeseries (class in foxes.input.states.multi_height)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries"]], "__init__() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.__init__"], [103, "id0"]], "calculate() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.calculate"]], "finalize() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.finalize"]], "get_data() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.get_data"]], "index() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.index"]], "initialize() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.initialize"]], "initialized (foxes.input.states.multi_height.multiheighttimeseries property)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.initialized"]], "model_id (foxes.input.states.multi_height.multiheighttimeseries property)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.model_id"]], "output_point_vars() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.output_point_vars"]], "reset() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.reset"]], "run_calculation() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.run_calculation"]], "size() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.size"]], "var() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.var"]], "weights() (foxes.input.states.multi_height.multiheighttimeseries method)": [[103, "foxes.input.states.multi_height.MultiHeightTimeseries.weights"]], "foxes.input.states.scan_ws": [[104, "module-foxes.input.states.scan_ws"]], "scanws (class in foxes.input.states.scan_ws)": [[105, "foxes.input.states.scan_ws.ScanWS"]], "__init__() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.__init__"], [105, "id0"]], "calculate() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.calculate"]], "finalize() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.finalize"]], "get_data() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.get_data"]], "index() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.index"]], "initialize() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.initialize"]], "initialized (foxes.input.states.scan_ws.scanws property)": [[105, "foxes.input.states.scan_ws.ScanWS.initialized"]], "model_id (foxes.input.states.scan_ws.scanws property)": [[105, "foxes.input.states.scan_ws.ScanWS.model_id"]], "output_point_vars() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.output_point_vars"]], "run_calculation() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.run_calculation"]], "size() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.size"]], "var() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.var"]], "weights() (foxes.input.states.scan_ws.scanws method)": [[105, "foxes.input.states.scan_ws.ScanWS.weights"]], "foxes.input.states.single": [[106, "module-foxes.input.states.single"]], "singlestatestates (class in foxes.input.states.single)": [[107, "foxes.input.states.single.SingleStateStates"]], "__init__() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.__init__"], [107, "id0"]], "calculate() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.calculate"]], "finalize() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.finalize"]], "get_data() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.get_data"]], "index() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.index"]], "initialize() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.initialize"]], "initialized (foxes.input.states.single.singlestatestates property)": [[107, "foxes.input.states.single.SingleStateStates.initialized"]], "model_id (foxes.input.states.single.singlestatestates property)": [[107, "foxes.input.states.single.SingleStateStates.model_id"]], "output_point_vars() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.output_point_vars"]], "profdata (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.profdata"]], "profdicts (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.profdicts"]], "rho (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.rho"]], "run_calculation() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.run_calculation"]], "size() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.size"]], "ti (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.ti"]], "var() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.var"]], "wd (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.wd"]], "weights() (foxes.input.states.single.singlestatestates method)": [[107, "foxes.input.states.single.SingleStateStates.weights"]], "ws (foxes.input.states.single.singlestatestates attribute)": [[107, "foxes.input.states.single.SingleStateStates.ws"]], "foxes.input.states.states_table": [[108, "module-foxes.input.states.states_table"]], "rdict (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.RDICT"]], "statestable (class in foxes.input.states.states_table)": [[109, "foxes.input.states.states_table.StatesTable"]], "__init__() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.__init__"], [109, "id0"]], "calculate() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.calculate"]], "data_source (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.data_source"]], "finalize() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.finalize"]], "fixed_vars (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.fixed_vars"]], "get_data() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.get_data"]], "index() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.index"]], "initialize() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.initialize"]], "initialized (foxes.input.states.states_table.statestable property)": [[109, "foxes.input.states.states_table.StatesTable.initialized"]], "model_id (foxes.input.states.states_table.statestable property)": [[109, "foxes.input.states.states_table.StatesTable.model_id"]], "output_point_vars() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.output_point_vars"]], "ovars (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.ovars"]], "profdicts (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.profdicts"]], "reset() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.reset"]], "rpars (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.rpars"]], "run_calculation() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.run_calculation"]], "size() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.size"]], "states_loc (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.states_loc"]], "states_sel (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.states_sel"]], "var() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.var"]], "var2col (foxes.input.states.states_table.statestable attribute)": [[109, "foxes.input.states.states_table.StatesTable.var2col"]], "weights() (foxes.input.states.states_table.statestable method)": [[109, "foxes.input.states.states_table.StatesTable.weights"]], "timeseries (class in foxes.input.states.states_table)": [[110, "foxes.input.states.states_table.Timeseries"]], "__init__() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.__init__"], [110, "id0"]], "calculate() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.calculate"]], "finalize() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.finalize"]], "get_data() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.get_data"]], "index() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.index"]], "initialize() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.initialize"]], "initialized (foxes.input.states.states_table.timeseries property)": [[110, "foxes.input.states.states_table.Timeseries.initialized"]], "model_id (foxes.input.states.states_table.timeseries property)": [[110, "foxes.input.states.states_table.Timeseries.model_id"]], "output_point_vars() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.output_point_vars"]], "reset() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.reset"]], "run_calculation() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.run_calculation"]], "size() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.size"]], "var() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.var"]], "weights() (foxes.input.states.states_table.timeseries method)": [[110, "foxes.input.states.states_table.Timeseries.weights"]], "foxes.input.windio": [[111, "module-foxes.input.windio"]], "foxes.input.windio.windio": [[112, "module-foxes.input.windio.windio"]], "read_anlyses() (in module foxes.input.windio.windio)": [[113, "foxes.input.windio.windio.read_anlyses"]], "read_case() (in module foxes.input.windio.windio)": [[114, "foxes.input.windio.windio.read_case"]], "read_farm() (in module foxes.input.windio.windio)": [[115, "foxes.input.windio.windio.read_farm"]], "read_resource() (in module foxes.input.windio.windio)": [[116, "foxes.input.windio.windio.read_resource"]], "read_site() (in module foxes.input.windio.windio)": [[117, "foxes.input.windio.windio.read_site"]], "foxes.models": [[118, "module-foxes.models"]], "foxes.models.farm_controllers": [[119, "module-foxes.models.farm_controllers"]], "foxes.models.farm_controllers.basic": [[120, "module-foxes.models.farm_controllers.basic"]], "basicfarmcontroller (class in foxes.models.farm_controllers.basic)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController"]], "__init__() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.__init__"], [121, "id0"]], "calculate() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.calculate"]], "collect_models() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.collect_models"]], "finalize() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.finalize"]], "get_data() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.get_data"]], "initialize() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.initialize"]], "initialized (foxes.models.farm_controllers.basic.basicfarmcontroller property)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.initialized"]], "model_id (foxes.models.farm_controllers.basic.basicfarmcontroller property)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.model_id"]], "output_farm_vars() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.output_farm_vars"]], "run_calculation() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.run_calculation"]], "set_pars() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.set_pars"]], "var() (foxes.models.farm_controllers.basic.basicfarmcontroller method)": [[121, "foxes.models.farm_controllers.basic.BasicFarmController.var"]], "foxes.models.farm_models": [[122, "module-foxes.models.farm_models"]], "foxes.models.farm_models.turbine2farm": [[123, "module-foxes.models.farm_models.turbine2farm"]], "turbine2farmmodel (class in foxes.models.farm_models.turbine2farm)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel"]], "__init__() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.__init__"], [124, "id0"]], "calculate() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.calculate"]], "finalize() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.finalize"]], "get_data() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.get_data"]], "initialize() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.initialize"]], "initialized (foxes.models.farm_models.turbine2farm.turbine2farmmodel property)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.initialized"]], "model_id (foxes.models.farm_models.turbine2farm.turbine2farmmodel property)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.model_id"]], "output_farm_vars() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.output_farm_vars"]], "run_calculation() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.run_calculation"]], "turbine_model (foxes.models.farm_models.turbine2farm.turbine2farmmodel attribute)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.turbine_model"]], "var() (foxes.models.farm_models.turbine2farm.turbine2farmmodel method)": [[124, "foxes.models.farm_models.turbine2farm.Turbine2FarmModel.var"]], "foxes.models.model_book": [[125, "module-foxes.models.model_book"]], "modelbook (class in foxes.models.model_book)": [[126, "foxes.models.model_book.ModelBook"]], "__init__() (foxes.models.model_book.modelbook method)": [[126, "foxes.models.model_book.ModelBook.__init__"], [126, "id0"]], "farm_controllers (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.farm_controllers"]], "farm_models (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.farm_models"]], "finalize() (foxes.models.model_book.modelbook method)": [[126, "foxes.models.model_book.ModelBook.finalize"]], "partial_wakes (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.partial_wakes"]], "point_models (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.point_models"]], "print_toc() (foxes.models.model_book.modelbook method)": [[126, "foxes.models.model_book.ModelBook.print_toc"]], "rotor_models (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.rotor_models"]], "sources (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.sources"]], "turbine_models (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.turbine_models"]], "turbine_orders (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.turbine_orders"]], "turbine_types (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.turbine_types"]], "wake_frames (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.wake_frames"]], "wake_models (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.wake_models"]], "wake_superpositions (foxes.models.model_book.modelbook attribute)": [[126, "foxes.models.model_book.ModelBook.wake_superpositions"]], "foxes.models.partial_wakes": [[127, "module-foxes.models.partial_wakes"]], "foxes.models.partial_wakes.axiwake": [[128, "module-foxes.models.partial_wakes.axiwake"]], "partialaxiwake (class in foxes.models.partial_wakes.axiwake)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake"]], "__init__() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.__init__"], [129, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.evaluate_results"]], "finalize() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.finalize"]], "get_data() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.get_data"]], "initialize() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.initialize"]], "initialized (foxes.models.partial_wakes.axiwake.partialaxiwake property)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.initialized"]], "model_id (foxes.models.partial_wakes.axiwake.partialaxiwake property)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.model_id"]], "n (foxes.models.partial_wakes.axiwake.partialaxiwake attribute)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.n"]], "new() (foxes.models.partial_wakes.axiwake.partialaxiwake class method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.new"]], "new_wake_deltas() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.new_wake_deltas"]], "rotor_model (foxes.models.partial_wakes.axiwake.partialaxiwake attribute)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.rotor_model"]], "var() (foxes.models.partial_wakes.axiwake.partialaxiwake method)": [[129, "foxes.models.partial_wakes.axiwake.PartialAxiwake.var"]], "foxes.models.partial_wakes.distsliced": [[130, "module-foxes.models.partial_wakes.distsliced"]], "partialdistslicedwake (class in foxes.models.partial_wakes.distsliced)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake"]], "__init__() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.__init__"], [131, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.evaluate_results"]], "finalize() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.finalize"]], "get_data() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.get_data"]], "grotor (foxes.models.partial_wakes.distsliced.partialdistslicedwake attribute)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.grotor"]], "initialize() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.initialize"]], "initialized (foxes.models.partial_wakes.distsliced.partialdistslicedwake property)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.initialized"]], "model_id (foxes.models.partial_wakes.distsliced.partialdistslicedwake property)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.model_id"]], "new() (foxes.models.partial_wakes.distsliced.partialdistslicedwake class method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.new"]], "new_wake_deltas() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.new_wake_deltas"]], "rotor_model (foxes.models.partial_wakes.distsliced.partialdistslicedwake attribute)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.rotor_model"]], "var() (foxes.models.partial_wakes.distsliced.partialdistslicedwake method)": [[131, "foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.var"]], "foxes.models.partial_wakes.grid": [[132, "module-foxes.models.partial_wakes.grid"]], "partialgrid (class in foxes.models.partial_wakes.grid)": [[133, "foxes.models.partial_wakes.grid.PartialGrid"]], "__init__() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.__init__"], [133, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.evaluate_results"]], "finalize() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.finalize"]], "get_data() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.get_data"]], "initialize() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.initialize"]], "initialized (foxes.models.partial_wakes.grid.partialgrid property)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.initialized"]], "model_id (foxes.models.partial_wakes.grid.partialgrid property)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.model_id"]], "new() (foxes.models.partial_wakes.grid.partialgrid class method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.new"]], "new_wake_deltas() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.new_wake_deltas"]], "var() (foxes.models.partial_wakes.grid.partialgrid method)": [[133, "foxes.models.partial_wakes.grid.PartialGrid.var"]], "foxes.models.partial_wakes.mapped": [[134, "module-foxes.models.partial_wakes.mapped"]], "mapped (class in foxes.models.partial_wakes.mapped)": [[135, "foxes.models.partial_wakes.mapped.Mapped"]], "__init__() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.__init__"], [135, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.evaluate_results"]], "finalize() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.finalize"]], "get_data() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.get_data"]], "initialize() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.initialize"]], "initialized (foxes.models.partial_wakes.mapped.mapped property)": [[135, "foxes.models.partial_wakes.mapped.Mapped.initialized"]], "model_id (foxes.models.partial_wakes.mapped.mapped property)": [[135, "foxes.models.partial_wakes.mapped.Mapped.model_id"]], "new() (foxes.models.partial_wakes.mapped.mapped class method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.new"]], "new_wake_deltas() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.new_wake_deltas"]], "var() (foxes.models.partial_wakes.mapped.mapped method)": [[135, "foxes.models.partial_wakes.mapped.Mapped.var"]], "wname2pwake (foxes.models.partial_wakes.mapped.mapped attribute)": [[135, "foxes.models.partial_wakes.mapped.Mapped.wname2pwake"]], "wtype2pwake (foxes.models.partial_wakes.mapped.mapped attribute)": [[135, "foxes.models.partial_wakes.mapped.Mapped.wtype2pwake"]], "foxes.models.partial_wakes.rotor_points": [[136, "module-foxes.models.partial_wakes.rotor_points"]], "rotorpoints (class in foxes.models.partial_wakes.rotor_points)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints"]], "__init__() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.__init__"], [137, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.evaluate_results"]], "finalize() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.finalize"]], "get_data() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.get_data"]], "get_wake_points() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.get_wake_points"]], "initialize() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.initialize"]], "initialized (foxes.models.partial_wakes.rotor_points.rotorpoints property)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.initialized"]], "model_id (foxes.models.partial_wakes.rotor_points.rotorpoints property)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.model_id"]], "new() (foxes.models.partial_wakes.rotor_points.rotorpoints class method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.new"]], "new_wake_deltas() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.new_wake_deltas"]], "var() (foxes.models.partial_wakes.rotor_points.rotorpoints method)": [[137, "foxes.models.partial_wakes.rotor_points.RotorPoints.var"]], "foxes.models.partial_wakes.top_hat": [[138, "module-foxes.models.partial_wakes.top_hat"]], "partialtophat (class in foxes.models.partial_wakes.top_hat)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat"]], "__init__() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.__init__"], [139, "id0"]], "contribute_to_wake_deltas() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.contribute_to_wake_deltas"]], "evaluate_results() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.evaluate_results"]], "finalize() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.finalize"]], "get_data() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.get_data"]], "get_wake_points() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.get_wake_points"]], "initialize() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.initialize"]], "initialized (foxes.models.partial_wakes.top_hat.partialtophat property)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.initialized"]], "model_id (foxes.models.partial_wakes.top_hat.partialtophat property)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.model_id"]], "new() (foxes.models.partial_wakes.top_hat.partialtophat class method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.new"]], "new_wake_deltas() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.new_wake_deltas"]], "rotor_model (foxes.models.partial_wakes.top_hat.partialtophat attribute)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.rotor_model"]], "var() (foxes.models.partial_wakes.top_hat.partialtophat method)": [[139, "foxes.models.partial_wakes.top_hat.PartialTopHat.var"]], "foxes.models.point_models": [[140, "module-foxes.models.point_models"]], "foxes.models.point_models.set_uniform_data": [[141, "module-foxes.models.point_models.set_uniform_data"]], "setuniformdata (class in foxes.models.point_models.set_uniform_data)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData"]], "__init__() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.__init__"], [142, "id0"]], "calculate() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.calculate"]], "data_source (foxes.models.point_models.set_uniform_data.setuniformdata attribute)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.data_source"]], "finalize() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.finalize"]], "get_data() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.get_data"]], "initialize() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.initialize"]], "initialized (foxes.models.point_models.set_uniform_data.setuniformdata property)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.initialized"]], "model_id (foxes.models.point_models.set_uniform_data.setuniformdata property)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.model_id"]], "output_point_vars() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.output_point_vars"]], "ovars (foxes.models.point_models.set_uniform_data.setuniformdata attribute)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.ovars"]], "run_calculation() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.run_calculation"]], "var() (foxes.models.point_models.set_uniform_data.setuniformdata method)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.var"]], "var2col (foxes.models.point_models.set_uniform_data.setuniformdata attribute)": [[142, "foxes.models.point_models.set_uniform_data.SetUniformData.var2col"]], "foxes.models.point_models.tke2ti": [[143, "module-foxes.models.point_models.tke2ti"]], "tke2ti (class in foxes.models.point_models.tke2ti)": [[144, "foxes.models.point_models.tke2ti.TKE2TI"]], "__init__() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.__init__"], [144, "id0"]], "calculate() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.calculate"]], "finalize() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.finalize"]], "get_data() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.get_data"]], "initialize() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.initialize"]], "initialized (foxes.models.point_models.tke2ti.tke2ti property)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.initialized"]], "model_id (foxes.models.point_models.tke2ti.tke2ti property)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.model_id"]], "output_point_vars() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.output_point_vars"]], "run_calculation() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.run_calculation"]], "var() (foxes.models.point_models.tke2ti.tke2ti method)": [[144, "foxes.models.point_models.tke2ti.TKE2TI.var"]], "foxes.models.point_models.wake_deltas": [[145, "module-foxes.models.point_models.wake_deltas"]], "wakedeltas (class in foxes.models.point_models.wake_deltas)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas"]], "__init__() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.__init__"], [146, "id0"]], "calculate() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.calculate"]], "finalize() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.finalize"]], "get_data() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.get_data"]], "initialize() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.initialize"]], "initialized (foxes.models.point_models.wake_deltas.wakedeltas property)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.initialized"]], "model_id (foxes.models.point_models.wake_deltas.wakedeltas property)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.model_id"]], "normalize (foxes.models.point_models.wake_deltas.wakedeltas attribute)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.normalize"]], "output_point_vars() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.output_point_vars"]], "run_calculation() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.run_calculation"]], "var() (foxes.models.point_models.wake_deltas.wakedeltas method)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.var"]], "vars (foxes.models.point_models.wake_deltas.wakedeltas attribute)": [[146, "foxes.models.point_models.wake_deltas.WakeDeltas.vars"]], "foxes.models.rotor_models": [[147, "module-foxes.models.rotor_models"]], "foxes.models.rotor_models.centre": [[148, "module-foxes.models.rotor_models.centre"]], "centrerotor (class in foxes.models.rotor_models.centre)": [[149, "foxes.models.rotor_models.centre.CentreRotor"]], "__init__() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.__init__"], [149, "id0"]], "calculate() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.calculate"]], "design_points() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.design_points"]], "eval_rpoint_results() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.eval_rpoint_results"]], "finalize() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.finalize"]], "get_data() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.get_data"]], "get_rotor_points() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.get_rotor_points"]], "initialize() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.initialize"]], "initialized (foxes.models.rotor_models.centre.centrerotor property)": [[149, "foxes.models.rotor_models.centre.CentreRotor.initialized"]], "model_id (foxes.models.rotor_models.centre.centrerotor property)": [[149, "foxes.models.rotor_models.centre.CentreRotor.model_id"]], "n_rotor_points() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.n_rotor_points"]], "output_farm_vars() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.output_farm_vars"]], "rotor_point_weights() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.rotor_point_weights"]], "run_calculation() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.run_calculation"]], "var() (foxes.models.rotor_models.centre.centrerotor method)": [[149, "foxes.models.rotor_models.centre.CentreRotor.var"]], "foxes.models.rotor_models.grid": [[150, "module-foxes.models.rotor_models.grid"]], "gridrotor (class in foxes.models.rotor_models.grid)": [[151, "foxes.models.rotor_models.grid.GridRotor"]], "__init__() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.__init__"], [151, "id0"]], "calculate() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.calculate"]], "design_points() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.design_points"]], "eval_rpoint_results() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.eval_rpoint_results"]], "finalize() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.finalize"]], "get_data() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.get_data"]], "get_rotor_points() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.get_rotor_points"]], "initialize() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.initialize"]], "initialized (foxes.models.rotor_models.grid.gridrotor property)": [[151, "foxes.models.rotor_models.grid.GridRotor.initialized"]], "model_id (foxes.models.rotor_models.grid.gridrotor property)": [[151, "foxes.models.rotor_models.grid.GridRotor.model_id"]], "n (foxes.models.rotor_models.grid.gridrotor attribute)": [[151, "foxes.models.rotor_models.grid.GridRotor.n"]], "n_rotor_points() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.n_rotor_points"]], "nint (foxes.models.rotor_models.grid.gridrotor attribute)": [[151, "foxes.models.rotor_models.grid.GridRotor.nint"]], "output_farm_vars() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.output_farm_vars"]], "reduce (foxes.models.rotor_models.grid.gridrotor attribute)": [[151, "foxes.models.rotor_models.grid.GridRotor.reduce"]], "rotor_point_weights() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.rotor_point_weights"]], "run_calculation() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.run_calculation"]], "var() (foxes.models.rotor_models.grid.gridrotor method)": [[151, "foxes.models.rotor_models.grid.GridRotor.var"]], "foxes.models.turbine_models": [[152, "module-foxes.models.turbine_models"]], "foxes.models.turbine_models.calculator": [[153, "module-foxes.models.turbine_models.calculator"]], "calculator (class in foxes.models.turbine_models.calculator)": [[154, "foxes.models.turbine_models.calculator.Calculator"]], "__init__() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.__init__"], [154, "id0"]], "calculate() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.calculate"]], "finalize() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.finalize"]], "func (foxes.models.turbine_models.calculator.calculator attribute)": [[154, "foxes.models.turbine_models.calculator.Calculator.func"]], "get_data() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.get_data"]], "in_vars (foxes.models.turbine_models.calculator.calculator attribute)": [[154, "foxes.models.turbine_models.calculator.Calculator.in_vars"]], "initialize() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.initialize"]], "initialized (foxes.models.turbine_models.calculator.calculator property)": [[154, "foxes.models.turbine_models.calculator.Calculator.initialized"]], "model_id (foxes.models.turbine_models.calculator.calculator property)": [[154, "foxes.models.turbine_models.calculator.Calculator.model_id"]], "out_vars (foxes.models.turbine_models.calculator.calculator attribute)": [[154, "foxes.models.turbine_models.calculator.Calculator.out_vars"]], "output_farm_vars() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.run_calculation"]], "var() (foxes.models.turbine_models.calculator.calculator method)": [[154, "foxes.models.turbine_models.calculator.Calculator.var"]], "foxes.models.turbine_models.kti_model": [[155, "module-foxes.models.turbine_models.kTI_model"]], "__init__() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.__init__"], [156, "id0"]], "calculate() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.calculate"]], "finalize() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.finalize"]], "get_data() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.get_data"]], "initialize() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.initialize"]], "initialized (foxes.models.turbine_models.kti_model.kti property)": [[156, "foxes.models.turbine_models.kTI_model.kTI.initialized"]], "kti (class in foxes.models.turbine_models.kti_model)": [[156, "foxes.models.turbine_models.kTI_model.kTI"]], "k_var (foxes.models.turbine_models.kti_model.kti attribute)": [[156, "foxes.models.turbine_models.kTI_model.kTI.k_var"]], "model_id (foxes.models.turbine_models.kti_model.kti property)": [[156, "foxes.models.turbine_models.kTI_model.kTI.model_id"]], "output_farm_vars() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.run_calculation"]], "ti_var (foxes.models.turbine_models.kti_model.kti attribute)": [[156, "foxes.models.turbine_models.kTI_model.kTI.ti_var"]], "var() (foxes.models.turbine_models.kti_model.kti method)": [[156, "foxes.models.turbine_models.kTI_model.kTI.var"]], "foxes.models.turbine_models.power_mask": [[157, "module-foxes.models.turbine_models.power_mask"]], "powermask (class in foxes.models.turbine_models.power_mask)": [[158, "foxes.models.turbine_models.power_mask.PowerMask"]], "__init__() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.__init__"], [158, "id0"]], "calculate() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.calculate"]], "factor_p (foxes.models.turbine_models.power_mask.powermask attribute)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.factor_P"]], "finalize() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.finalize"]], "get_data() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.get_data"]], "initialize() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.initialize"]], "initialized (foxes.models.turbine_models.power_mask.powermask property)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.initialized"]], "model_id (foxes.models.turbine_models.power_mask.powermask property)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.model_id"]], "output_farm_vars() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.run_calculation"]], "var() (foxes.models.turbine_models.power_mask.powermask method)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.var"]], "var_ws_p (foxes.models.turbine_models.power_mask.powermask attribute)": [[158, "foxes.models.turbine_models.power_mask.PowerMask.var_ws_P"]], "foxes.models.turbine_models.rotor_centre_calc": [[159, "module-foxes.models.turbine_models.rotor_centre_calc"]], "rotorcentrecalc (class in foxes.models.turbine_models.rotor_centre_calc)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc"]], "__init__() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.__init__"], [160, "id0"]], "calc_vars (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc attribute)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.calc_vars"]], "calculate() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.calculate"]], "finalize() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.finalize"]], "get_data() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.get_data"]], "initialize() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.initialize"]], "initialized (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc property)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.initialized"]], "model_id (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc property)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.model_id"]], "output_farm_vars() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.run_calculation"]], "var() (foxes.models.turbine_models.rotor_centre_calc.rotorcentrecalc method)": [[160, "foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.var"]], "foxes.models.turbine_models.sector_management": [[161, "module-foxes.models.turbine_models.sector_management"]], "sectormanagement (class in foxes.models.turbine_models.sector_management)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement"]], "__init__() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.__init__"], [162, "id0"]], "calculate() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.calculate"]], "finalize() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.finalize"]], "get_data() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.get_data"]], "initialize() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.initialize"]], "initialized (foxes.models.turbine_models.sector_management.sectormanagement property)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.initialized"]], "model_id (foxes.models.turbine_models.sector_management.sectormanagement property)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.model_id"]], "output_farm_vars() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.run_calculation"]], "source (foxes.models.turbine_models.sector_management.sectormanagement attribute)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.source"]], "var() (foxes.models.turbine_models.sector_management.sectormanagement method)": [[162, "foxes.models.turbine_models.sector_management.SectorManagement.var"]], "foxes.models.turbine_models.set_xyhd": [[163, "module-foxes.models.turbine_models.set_XYHD"]], "setxyhd (class in foxes.models.turbine_models.set_xyhd)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD"]], "__init__() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.__init__"], [164, "id0"]], "calculate() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.calculate"]], "finalize() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.finalize"]], "get_data() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.get_data"]], "initialize() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.initialize"]], "initialized (foxes.models.turbine_models.set_xyhd.setxyhd property)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.initialized"]], "model_id (foxes.models.turbine_models.set_xyhd.setxyhd property)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.model_id"]], "output_farm_vars() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.run_calculation"]], "set_d (foxes.models.turbine_models.set_xyhd.setxyhd attribute)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.set_D"]], "set_h (foxes.models.turbine_models.set_xyhd.setxyhd attribute)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.set_H"]], "set_xy (foxes.models.turbine_models.set_xyhd.setxyhd attribute)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.set_XY"]], "var() (foxes.models.turbine_models.set_xyhd.setxyhd method)": [[164, "foxes.models.turbine_models.set_XYHD.SetXYHD.var"]], "foxes.models.turbine_models.set_farm_vars": [[165, "module-foxes.models.turbine_models.set_farm_vars"]], "setfarmvars (class in foxes.models.turbine_models.set_farm_vars)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars"]], "__init__() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.__init__"], [166, "id0"]], "add_var() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.add_var"]], "calculate() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.calculate"]], "finalize() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.finalize"]], "get_data() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.get_data"]], "initialize() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.initialize"]], "initialized (foxes.models.turbine_models.set_farm_vars.setfarmvars property)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.initialized"]], "model_id (foxes.models.turbine_models.set_farm_vars.setfarmvars property)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.model_id"]], "output_farm_vars() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.output_farm_vars"]], "reset() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.reset"]], "run_calculation() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.run_calculation"]], "var() (foxes.models.turbine_models.set_farm_vars.setfarmvars method)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.var"]], "vars (foxes.models.turbine_models.set_farm_vars.setfarmvars attribute)": [[166, "foxes.models.turbine_models.set_farm_vars.SetFarmVars.vars"]], "foxes.models.turbine_models.table_factors": [[167, "module-foxes.models.turbine_models.table_factors"]], "tablefactors (class in foxes.models.turbine_models.table_factors)": [[168, "foxes.models.turbine_models.table_factors.TableFactors"]], "__init__() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.__init__"], [168, "id0"]], "calculate() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.calculate"]], "col_var (foxes.models.turbine_models.table_factors.tablefactors attribute)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.col_var"]], "data_source (foxes.models.turbine_models.table_factors.tablefactors attribute)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.data_source"]], "finalize() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.finalize"]], "get_data() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.get_data"]], "initialize() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.initialize"]], "initialized (foxes.models.turbine_models.table_factors.tablefactors property)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.initialized"]], "model_id (foxes.models.turbine_models.table_factors.tablefactors property)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.model_id"]], "output_farm_vars() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.output_farm_vars"]], "ovars (foxes.models.turbine_models.table_factors.tablefactors attribute)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.ovars"]], "row_var (foxes.models.turbine_models.table_factors.tablefactors attribute)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.row_var"]], "run_calculation() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.run_calculation"]], "var() (foxes.models.turbine_models.table_factors.tablefactors method)": [[168, "foxes.models.turbine_models.table_factors.TableFactors.var"]], "foxes.models.turbine_models.thrust2ct": [[169, "module-foxes.models.turbine_models.thrust2ct"]], "thrust2ct (class in foxes.models.turbine_models.thrust2ct)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct"]], "wsct (foxes.models.turbine_models.thrust2ct.thrust2ct attribute)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.WSCT"]], "__init__() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.__init__"], [170, "id0"]], "calculate() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.calculate"]], "finalize() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.finalize"]], "get_data() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.get_data"]], "initialize() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.initialize"]], "initialized (foxes.models.turbine_models.thrust2ct.thrust2ct property)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.initialized"]], "model_id (foxes.models.turbine_models.thrust2ct.thrust2ct property)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.model_id"]], "output_farm_vars() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.run_calculation"]], "thrust_var (foxes.models.turbine_models.thrust2ct.thrust2ct attribute)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.thrust_var"]], "var() (foxes.models.turbine_models.thrust2ct.thrust2ct method)": [[170, "foxes.models.turbine_models.thrust2ct.Thrust2Ct.var"]], "foxes.models.turbine_models.yaw2yawm": [[171, "module-foxes.models.turbine_models.yaw2yawm"]], "yaw2yawm (class in foxes.models.turbine_models.yaw2yawm)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM"]], "__init__() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.__init__"], [172, "id0"]], "calculate() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.calculate"]], "finalize() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.finalize"]], "get_data() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.get_data"]], "initialize() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.initialize"]], "initialized (foxes.models.turbine_models.yaw2yawm.yaw2yawm property)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.initialized"]], "model_id (foxes.models.turbine_models.yaw2yawm.yaw2yawm property)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.model_id"]], "output_farm_vars() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.run_calculation"]], "var() (foxes.models.turbine_models.yaw2yawm.yaw2yawm method)": [[172, "foxes.models.turbine_models.yaw2yawm.YAW2YAWM.var"]], "foxes.models.turbine_models.yawm2yaw": [[173, "module-foxes.models.turbine_models.yawm2yaw"]], "yawm2yaw (class in foxes.models.turbine_models.yawm2yaw)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW"]], "__init__() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.__init__"], [174, "id0"]], "calculate() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.calculate"]], "finalize() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.finalize"]], "get_data() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.get_data"]], "initialize() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.initialize"]], "initialized (foxes.models.turbine_models.yawm2yaw.yawm2yaw property)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.initialized"]], "model_id (foxes.models.turbine_models.yawm2yaw.yawm2yaw property)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.model_id"]], "output_farm_vars() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.output_farm_vars"]], "run_calculation() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.run_calculation"]], "var() (foxes.models.turbine_models.yawm2yaw.yawm2yaw method)": [[174, "foxes.models.turbine_models.yawm2yaw.YAWM2YAW.var"]], "foxes.models.turbine_types": [[175, "module-foxes.models.turbine_types"]], "foxes.models.turbine_types.cpct_file": [[176, "module-foxes.models.turbine_types.CpCt_file"]], "cpctfile (class in foxes.models.turbine_types.cpct_file)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile"]], "__init__() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.__init__"], [177, "id0"]], "calculate() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.calculate"]], "finalize() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.finalize"]], "get_data() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.get_data"]], "initialize() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.initialize"]], "initialized (foxes.models.turbine_types.cpct_file.cpctfile property)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.initialized"]], "model_id (foxes.models.turbine_types.cpct_file.cpctfile property)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.model_id"]], "output_farm_vars() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.output_farm_vars"]], "run_calculation() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.run_calculation"]], "var() (foxes.models.turbine_types.cpct_file.cpctfile method)": [[177, "foxes.models.turbine_types.CpCt_file.CpCtFile.var"]], "foxes.models.turbine_types.cpct_from_two": [[178, "module-foxes.models.turbine_types.CpCt_from_two"]], "cpctfromtwo (class in foxes.models.turbine_types.cpct_from_two)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo"]], "__init__() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.__init__"], [179, "id0"]], "calculate() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.calculate"]], "finalize() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.finalize"]], "get_data() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.get_data"]], "initialize() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.initialize"]], "initialized (foxes.models.turbine_types.cpct_from_two.cpctfromtwo property)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.initialized"]], "model_id (foxes.models.turbine_types.cpct_from_two.cpctfromtwo property)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.model_id"]], "output_farm_vars() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.output_farm_vars"]], "run_calculation() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.run_calculation"]], "var() (foxes.models.turbine_types.cpct_from_two.cpctfromtwo method)": [[179, "foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.var"]], "foxes.models.turbine_types.pct_file": [[180, "module-foxes.models.turbine_types.PCt_file"]], "pctfile (class in foxes.models.turbine_types.pct_file)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile"]], "wsct (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.WSCT"]], "wsp (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.WSP"]], "__init__() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.__init__"], [181, "id0"]], "calculate() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.calculate"]], "col_p (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.col_P"]], "col_ct (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.col_ct"]], "col_ws (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.col_ws"]], "finalize() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.finalize"]], "get_data() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.get_data"]], "initialize() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.initialize"]], "initialized (foxes.models.turbine_types.pct_file.pctfile property)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.initialized"]], "model_id (foxes.models.turbine_types.pct_file.pctfile property)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.model_id"]], "output_farm_vars() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.output_farm_vars"]], "rho (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.rho"]], "rpars (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.rpars"]], "run_calculation() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.run_calculation"]], "source (foxes.models.turbine_types.pct_file.pctfile attribute)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.source"]], "var() (foxes.models.turbine_types.pct_file.pctfile method)": [[181, "foxes.models.turbine_types.PCt_file.PCtFile.var"]], "foxes.models.turbine_types.pct_from_two": [[182, "module-foxes.models.turbine_types.PCt_from_two"]], "pctfromtwo (class in foxes.models.turbine_types.pct_from_two)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo"]], "wsct (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.WSCT"]], "wsp (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.WSP"]], "__init__() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.__init__"], [183, "id0"]], "calculate() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.calculate"]], "col_p (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.col_P"]], "col_ct (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.col_ct"]], "col_ws (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.col_ws"]], "finalize() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.finalize"]], "get_data() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.get_data"]], "initialize() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.initialize"]], "initialized (foxes.models.turbine_types.pct_from_two.pctfromtwo property)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.initialized"]], "model_id (foxes.models.turbine_types.pct_from_two.pctfromtwo property)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.model_id"]], "output_farm_vars() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.output_farm_vars"]], "rho (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.rho"]], "rpars_p (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.rpars_P"]], "rpars_ct (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.rpars_ct"]], "run_calculation() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.run_calculation"]], "source_p (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.source_P"]], "source_ct (foxes.models.turbine_types.pct_from_two.pctfromtwo attribute)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.source_ct"]], "var() (foxes.models.turbine_types.pct_from_two.pctfromtwo method)": [[183, "foxes.models.turbine_types.PCt_from_two.PCtFromTwo.var"]], "foxes.models.turbine_types.null_type": [[184, "module-foxes.models.turbine_types.null_type"]], "nulltype (class in foxes.models.turbine_types.null_type)": [[185, "foxes.models.turbine_types.null_type.NullType"]], "__init__() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.__init__"], [185, "id0"]], "calculate() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.calculate"]], "finalize() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.finalize"]], "get_data() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.get_data"]], "initialize() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.initialize"]], "initialized (foxes.models.turbine_types.null_type.nulltype property)": [[185, "foxes.models.turbine_types.null_type.NullType.initialized"]], "model_id (foxes.models.turbine_types.null_type.nulltype property)": [[185, "foxes.models.turbine_types.null_type.NullType.model_id"]], "output_farm_vars() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.output_farm_vars"]], "run_calculation() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.run_calculation"]], "var() (foxes.models.turbine_types.null_type.nulltype method)": [[185, "foxes.models.turbine_types.null_type.NullType.var"]], "foxes.models.turbine_types.wsrho2pct_two_files": [[186, "module-foxes.models.turbine_types.wsrho2PCt_two_files"]], "wsct (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.WSCT"]], "wsp (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.WSP"]], "wsrho2pcttwofiles (class in foxes.models.turbine_types.wsrho2pct_two_files)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles"]], "__init__() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.__init__"], [187, "id0"]], "calculate() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.calculate"]], "finalize() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.finalize"]], "get_data() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.get_data"]], "initialize() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.initialize"]], "initialized (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles property)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.initialized"]], "ipars_p (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.ipars_P"]], "ipars_ct (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.ipars_ct"]], "model_id (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles property)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.model_id"]], "output_farm_vars() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.output_farm_vars"]], "rpars_p (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.rpars_P"]], "rpars_ct (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.rpars_ct"]], "run_calculation() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.run_calculation"]], "source_p (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.source_P"]], "source_ct (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles attribute)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.source_ct"]], "var() (foxes.models.turbine_types.wsrho2pct_two_files.wsrho2pcttwofiles method)": [[187, "foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.var"]], "foxes.models.vertical_profiles": [[188, "module-foxes.models.vertical_profiles"]], "foxes.models.vertical_profiles.abl_log": [[189, "module-foxes.models.vertical_profiles.abl_log"]], "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws": [[190, "module-foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws"]], "abllogneutralwsprofile (class in foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile"]], "__init__() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.__init__"], [191, "id0"]], "calculate() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.initialize"]], "initialized (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile property)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile property)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.model_id"]], "new() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile class method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.new"]], "var() (foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.abllogneutralwsprofile method)": [[191, "foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.var"]], "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws": [[192, "module-foxes.models.vertical_profiles.abl_log.abl_log_stable_ws"]], "abllogstablewsprofile (class in foxes.models.vertical_profiles.abl_log.abl_log_stable_ws)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile"]], "__init__() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.__init__"], [193, "id0"]], "calculate() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.initialize"]], "initialized (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile property)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile property)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.model_id"]], "new() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile class method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.new"]], "var() (foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.abllogstablewsprofile method)": [[193, "foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.var"]], "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws": [[194, "module-foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws"]], "abllogunstablewsprofile (class in foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile"]], "__init__() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.__init__"], [195, "id0"]], "calculate() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.initialize"]], "initialized (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile property)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile property)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.model_id"]], "new() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile class method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.new"]], "var() (foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.abllogunstablewsprofile method)": [[195, "foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.var"]], "foxes.models.vertical_profiles.abl_log.abl_log_ws": [[196, "module-foxes.models.vertical_profiles.abl_log.abl_log_ws"]], "abllogwsprofile (class in foxes.models.vertical_profiles.abl_log.abl_log_ws)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile"]], "__init__() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.__init__"], [197, "id0"]], "calculate() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.initialize"]], "initialized (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile property)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile property)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.model_id"]], "new() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile class method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.new"]], "var() (foxes.models.vertical_profiles.abl_log.abl_log_ws.abllogwsprofile method)": [[197, "foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.var"]], "foxes.models.vertical_profiles.abl_log.sheared_ws": [[198, "module-foxes.models.vertical_profiles.abl_log.sheared_ws"]], "shearedprofile (class in foxes.models.vertical_profiles.abl_log.sheared_ws)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile"]], "__init__() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.__init__"], [199, "id0"]], "calculate() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.initialize"]], "initialized (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile property)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile property)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.model_id"]], "new() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile class method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.new"]], "var() (foxes.models.vertical_profiles.abl_log.sheared_ws.shearedprofile method)": [[199, "foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.var"]], "foxes.models.vertical_profiles.uniform": [[200, "module-foxes.models.vertical_profiles.uniform"]], "uniformprofile (class in foxes.models.vertical_profiles.uniform)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile"]], "__init__() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.__init__"], [201, "id0"]], "calculate() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.calculate"]], "finalize() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.finalize"]], "get_data() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.get_data"]], "initialize() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.initialize"]], "initialized (foxes.models.vertical_profiles.uniform.uniformprofile property)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.initialized"]], "input_vars() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.input_vars"]], "model_id (foxes.models.vertical_profiles.uniform.uniformprofile property)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.model_id"]], "new() (foxes.models.vertical_profiles.uniform.uniformprofile class method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.new"]], "var() (foxes.models.vertical_profiles.uniform.uniformprofile method)": [[201, "foxes.models.vertical_profiles.uniform.UniformProfile.var"]], "foxes.models.wake_frames": [[202, "module-foxes.models.wake_frames"]], "foxes.models.wake_frames.farm_order": [[203, "module-foxes.models.wake_frames.farm_order"]], "farmorder (class in foxes.models.wake_frames.farm_order)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder"]], "__init__() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.__init__"], [204, "id0"]], "base_frame (foxes.models.wake_frames.farm_order.farmorder attribute)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.base_frame"]], "calc_centreline_integral() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.calc_centreline_integral"]], "calc_order() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.calc_order"]], "finalize() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.finalize"]], "get_centreline_points() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.get_centreline_points"]], "get_data() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.get_data"]], "get_wake_coos() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.get_wake_coos"]], "initialize() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.initialize"]], "initialized (foxes.models.wake_frames.farm_order.farmorder property)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.initialized"]], "model_id (foxes.models.wake_frames.farm_order.farmorder property)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.model_id"]], "var() (foxes.models.wake_frames.farm_order.farmorder method)": [[204, "foxes.models.wake_frames.farm_order.FarmOrder.var"]], "foxes.models.wake_frames.rotor_wd": [[205, "module-foxes.models.wake_frames.rotor_wd"]], "rotorwd (class in foxes.models.wake_frames.rotor_wd)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD"]], "__init__() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.__init__"], [206, "id0"]], "calc_centreline_integral() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.calc_centreline_integral"]], "calc_order() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.calc_order"]], "finalize() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.finalize"]], "get_centreline_points() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.get_centreline_points"]], "get_data() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.get_data"]], "get_wake_coos() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.get_wake_coos"]], "initialize() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.initialize"]], "initialized (foxes.models.wake_frames.rotor_wd.rotorwd property)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.initialized"]], "model_id (foxes.models.wake_frames.rotor_wd.rotorwd property)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.model_id"]], "var() (foxes.models.wake_frames.rotor_wd.rotorwd method)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.var"]], "var_wd (foxes.models.wake_frames.rotor_wd.rotorwd attribute)": [[206, "foxes.models.wake_frames.rotor_wd.RotorWD.var_wd"]], "foxes.models.wake_frames.streamlines": [[207, "module-foxes.models.wake_frames.streamlines"]], "streamlines (class in foxes.models.wake_frames.streamlines)": [[208, "foxes.models.wake_frames.streamlines.Streamlines"]], "__init__() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.__init__"], [208, "id0"]], "calc_centreline_integral() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.calc_centreline_integral"]], "calc_order() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.calc_order"]], "cl_ipars (foxes.models.wake_frames.streamlines.streamlines attribute)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.cl_ipars"]], "finalize() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.finalize"]], "get_centreline_points() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.get_centreline_points"]], "get_data() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.get_data"]], "get_wake_coos() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.get_wake_coos"]], "initialize() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.initialize"]], "initialized (foxes.models.wake_frames.streamlines.streamlines property)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.initialized"]], "max_length (foxes.models.wake_frames.streamlines.streamlines attribute)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.max_length"]], "model_id (foxes.models.wake_frames.streamlines.streamlines property)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.model_id"]], "n_delstor (foxes.models.wake_frames.streamlines.streamlines attribute)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.n_delstor"]], "step (foxes.models.wake_frames.streamlines.streamlines attribute)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.step"]], "var() (foxes.models.wake_frames.streamlines.streamlines method)": [[208, "foxes.models.wake_frames.streamlines.Streamlines.var"]], "foxes.models.wake_frames.yawed_wakes": [[209, "module-foxes.models.wake_frames.yawed_wakes"]], "k (foxes.models.wake_frames.yawed_wakes.yawedwakes attribute)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.K"]], "yawm (foxes.models.wake_frames.yawed_wakes.yawedwakes attribute)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.YAWM"]], "yawedwakes (class in foxes.models.wake_frames.yawed_wakes)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes"]], "__init__() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.__init__"], [210, "id0"]], "base_frame (foxes.models.wake_frames.yawed_wakes.yawedwakes attribute)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.base_frame"]], "calc_centreline_integral() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.calc_centreline_integral"]], "calc_order() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.calc_order"]], "finalize() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.finalize"]], "get_centreline_points() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_centreline_points"]], "get_data() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_data"]], "get_wake_coos() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.get_wake_coos"]], "initialize() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.initialize"]], "initialized (foxes.models.wake_frames.yawed_wakes.yawedwakes property)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.initialized"]], "k_var (foxes.models.wake_frames.yawed_wakes.yawedwakes attribute)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.k_var"]], "model (foxes.models.wake_frames.yawed_wakes.yawedwakes attribute)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.model"]], "model_id (foxes.models.wake_frames.yawed_wakes.yawedwakes property)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.model_id"]], "var() (foxes.models.wake_frames.yawed_wakes.yawedwakes method)": [[210, "foxes.models.wake_frames.yawed_wakes.YawedWakes.var"]], "foxes.models.wake_models": [[211, "module-foxes.models.wake_models"]], "foxes.models.wake_models.axisymmetric": [[212, "module-foxes.models.wake_models.axisymmetric"]], "axisymmetricwakemodel (class in foxes.models.wake_models.axisymmetric)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel"]], "__init__() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.__init__"], [213, "id0"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.get_data"]], "init_wake_deltas() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.init_wake_deltas"]], "initialize() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.initialize"]], "initialized (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel property)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.initialized"]], "model_id (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel property)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.model_id"]], "var() (foxes.models.wake_models.axisymmetric.axisymmetricwakemodel method)": [[213, "foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.var"]], "foxes.models.wake_models.dist_sliced": [[214, "module-foxes.models.wake_models.dist_sliced"]], "distslicedwakemodel (class in foxes.models.wake_models.dist_sliced)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel"]], "__init__() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.__init__"], [215, "id0"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.get_data"]], "init_wake_deltas() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.init_wake_deltas"]], "initialize() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.initialize"]], "initialized (foxes.models.wake_models.dist_sliced.distslicedwakemodel property)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.initialized"]], "model_id (foxes.models.wake_models.dist_sliced.distslicedwakemodel property)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.model_id"]], "superp (foxes.models.wake_models.dist_sliced.distslicedwakemodel attribute)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.superp"]], "superpositions (foxes.models.wake_models.dist_sliced.distslicedwakemodel attribute)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.superpositions"]], "var() (foxes.models.wake_models.dist_sliced.distslicedwakemodel method)": [[215, "foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.var"]], "foxes.models.wake_models.gaussian": [[216, "module-foxes.models.wake_models.gaussian"]], "gaussianwakemodel (class in foxes.models.wake_models.gaussian)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel"]], "__init__() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.__init__"], [217, "id0"]], "calc_amplitude_sigma_spsel() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_amplitude_sigma_spsel"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.get_data"]], "init_wake_deltas() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.init_wake_deltas"]], "initialize() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.initialize"]], "initialized (foxes.models.wake_models.gaussian.gaussianwakemodel property)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.initialized"]], "model_id (foxes.models.wake_models.gaussian.gaussianwakemodel property)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.model_id"]], "var() (foxes.models.wake_models.gaussian.gaussianwakemodel method)": [[217, "foxes.models.wake_models.gaussian.GaussianWakeModel.var"]], "foxes.models.wake_models.ti": [[218, "module-foxes.models.wake_models.ti"]], "foxes.models.wake_models.ti.crespo_hernandez": [[219, "module-foxes.models.wake_models.ti.crespo_hernandez"]], "crespohernandeztiwake (class in foxes.models.wake_models.ti.crespo_hernandez)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake"]], "__init__() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.__init__"], [220, "id0"]], "a_far (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.a_far"]], "a_near (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.a_near"]], "calc_centreline_wake_deltas() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_centreline_wake_deltas"]], "calc_wake_radius() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wake_radius"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.contribute_to_wake_deltas"]], "e1 (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.e1"]], "e2 (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.e2"]], "e3 (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.e3"]], "finalize() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.initialize"]], "initialized (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake property)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.initialized"]], "k (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.k"]], "k_var (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.k_var"]], "model_id (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake property)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.model_id"]], "near_wake_d (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.near_wake_D"]], "sbeta_factor (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.sbeta_factor"]], "use_ambti (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake attribute)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.use_ambti"]], "var() (foxes.models.wake_models.ti.crespo_hernandez.crespohernandeztiwake method)": [[220, "foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.var"]], "foxes.models.wake_models.ti.iec_ti": [[221, "module-foxes.models.wake_models.ti.iec_ti"]], "iectiwake (class in foxes.models.wake_models.ti.iec_ti)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake"]], "__init__() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.__init__"], [222, "id0"]], "calc_centreline_wake_deltas() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_centreline_wake_deltas"]], "calc_wake_radius() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wake_radius"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.initialize"]], "initialized (foxes.models.wake_models.ti.iec_ti.iectiwake property)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.initialized"]], "k_var (foxes.models.wake_models.ti.iec_ti.iectiwake attribute)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.k_var"]], "model_id (foxes.models.wake_models.ti.iec_ti.iectiwake property)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.model_id"]], "opening_angle (foxes.models.wake_models.ti.iec_ti.iectiwake attribute)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.opening_angle"]], "var() (foxes.models.wake_models.ti.iec_ti.iectiwake method)": [[222, "foxes.models.wake_models.ti.iec_ti.IECTIWake.var"]], "foxes.models.wake_models.top_hat": [[223, "module-foxes.models.wake_models.top_hat"]], "tophatwakemodel (class in foxes.models.wake_models.top_hat)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel"]], "__init__() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.__init__"], [224, "id0"]], "calc_centreline_wake_deltas() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_centreline_wake_deltas"]], "calc_wake_radius() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wake_radius"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.get_data"]], "init_wake_deltas() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.init_wake_deltas"]], "initialize() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.initialize"]], "initialized (foxes.models.wake_models.top_hat.tophatwakemodel property)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.initialized"]], "model_id (foxes.models.wake_models.top_hat.tophatwakemodel property)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.model_id"]], "var() (foxes.models.wake_models.top_hat.tophatwakemodel method)": [[224, "foxes.models.wake_models.top_hat.TopHatWakeModel.var"]], "foxes.models.wake_models.wind": [[225, "module-foxes.models.wake_models.wind"]], "foxes.models.wake_models.wind.bastankhah": [[226, "module-foxes.models.wake_models.wind.bastankhah"]], "bastankhahwake (class in foxes.models.wake_models.wind.bastankhah)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake"]], "__init__() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.__init__"], [227, "id0"]], "calc_amplitude_sigma_spsel() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_amplitude_sigma_spsel"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.contribute_to_wake_deltas"]], "ct_max (foxes.models.wake_models.wind.bastankhah.bastankhahwake attribute)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.ct_max"]], "finalize() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.initialize"]], "initialized (foxes.models.wake_models.wind.bastankhah.bastankhahwake property)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.initialized"]], "k (foxes.models.wake_models.wind.bastankhah.bastankhahwake attribute)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.k"]], "k_var (foxes.models.wake_models.wind.bastankhah.bastankhahwake attribute)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.k_var"]], "model_id (foxes.models.wake_models.wind.bastankhah.bastankhahwake property)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.model_id"]], "sbeta_factor (foxes.models.wake_models.wind.bastankhah.bastankhahwake attribute)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.sbeta_factor"]], "var() (foxes.models.wake_models.wind.bastankhah.bastankhahwake method)": [[227, "foxes.models.wake_models.wind.bastankhah.BastankhahWake.var"]], "foxes.models.wake_models.wind.jensen": [[228, "module-foxes.models.wake_models.wind.jensen"]], "jensenwake (class in foxes.models.wake_models.wind.jensen)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake"]], "__init__() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.__init__"], [229, "id0"]], "calc_centreline_wake_deltas() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.calc_centreline_wake_deltas"]], "calc_wake_radius() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.calc_wake_radius"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.initialize"]], "initialized (foxes.models.wake_models.wind.jensen.jensenwake property)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.initialized"]], "k (foxes.models.wake_models.wind.jensen.jensenwake attribute)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.k"]], "k_var (foxes.models.wake_models.wind.jensen.jensenwake attribute)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.k_var"]], "model_id (foxes.models.wake_models.wind.jensen.jensenwake property)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.model_id"]], "var() (foxes.models.wake_models.wind.jensen.jensenwake method)": [[229, "foxes.models.wake_models.wind.jensen.JensenWake.var"]], "foxes.models.wake_models.wind.porte_agel": [[230, "module-foxes.models.wake_models.wind.porte_agel"]], "porteagelmodel (class in foxes.models.wake_models.wind.porte_agel)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel"]], "__init__() (foxes.models.wake_models.wind.porte_agel.porteagelmodel method)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.__init__"], [231, "id0"]], "alpha (foxes.models.wake_models.wind.porte_agel.porteagelmodel attribute)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.alpha"]], "beta (foxes.models.wake_models.wind.porte_agel.porteagelmodel attribute)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.beta"]], "calc_data() (foxes.models.wake_models.wind.porte_agel.porteagelmodel method)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.calc_data"]], "clean() (foxes.models.wake_models.wind.porte_agel.porteagelmodel method)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.clean"]], "ct_max (foxes.models.wake_models.wind.porte_agel.porteagelmodel attribute)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.ct_max"]], "get_data() (foxes.models.wake_models.wind.porte_agel.porteagelmodel method)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.get_data"]], "has_data() (foxes.models.wake_models.wind.porte_agel.porteagelmodel method)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.has_data"]], "pars (foxes.models.wake_models.wind.porte_agel.porteagelmodel property)": [[231, "foxes.models.wake_models.wind.porte_agel.PorteAgelModel.pars"]], "k (foxes.models.wake_models.wind.porte_agel.porteagelwake attribute)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.K"]], "porteagelwake (class in foxes.models.wake_models.wind.porte_agel)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake"]], "yawm (foxes.models.wake_models.wind.porte_agel.porteagelwake attribute)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.YAWM"]], "__init__() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.__init__"], [232, "id0"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.contribute_to_wake_deltas"]], "finalize() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.initialize"]], "initialized (foxes.models.wake_models.wind.porte_agel.porteagelwake property)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.initialized"]], "k_var (foxes.models.wake_models.wind.porte_agel.porteagelwake attribute)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.k_var"]], "model (foxes.models.wake_models.wind.porte_agel.porteagelwake attribute)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.model"]], "model_id (foxes.models.wake_models.wind.porte_agel.porteagelwake property)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.model_id"]], "var() (foxes.models.wake_models.wind.porte_agel.porteagelwake method)": [[232, "foxes.models.wake_models.wind.porte_agel.PorteAgelWake.var"]], "foxes.models.wake_models.wind.turbopark": [[233, "module-foxes.models.wake_models.wind.turbopark"]], "a (foxes.models.wake_models.wind.turbopark.turboparkwake attribute)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.A"]], "turboparkwake (class in foxes.models.wake_models.wind.turbopark)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake"]], "__init__() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.__init__"], [234, "id0"]], "c1 (foxes.models.wake_models.wind.turbopark.turboparkwake attribute)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.c1"]], "c2 (foxes.models.wake_models.wind.turbopark.turboparkwake attribute)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.c2"]], "calc_amplitude_sigma_spsel() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_amplitude_sigma_spsel"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.contribute_to_wake_deltas"]], "ct_max (foxes.models.wake_models.wind.turbopark.turboparkwake attribute)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.ct_max"]], "finalize() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.get_data"]], "init_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.init_wake_deltas"]], "initialize() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.initialize"]], "initialized (foxes.models.wake_models.wind.turbopark.turboparkwake property)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.initialized"]], "model_id (foxes.models.wake_models.wind.turbopark.turboparkwake property)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.model_id"]], "sbeta_factor (foxes.models.wake_models.wind.turbopark.turboparkwake attribute)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.sbeta_factor"]], "var() (foxes.models.wake_models.wind.turbopark.turboparkwake method)": [[234, "foxes.models.wake_models.wind.turbopark.TurbOParkWake.var"]], "a (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.A"]], "turboparkwakeix (class in foxes.models.wake_models.wind.turbopark)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX"]], "__init__() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.__init__"], [235, "id0"]], "calc_amplitude_sigma_spsel() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_amplitude_sigma_spsel"]], "calc_wakes_spsel_x_r() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_wakes_spsel_x_r"]], "calc_wakes_spsel_x_yz() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.calc_wakes_spsel_x_yz"]], "contribute_to_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.contribute_to_wake_deltas"]], "ct_max (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.ct_max"]], "dx (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.dx"]], "finalize() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.finalize"]], "finalize_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.finalize_wake_deltas"]], "get_data() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.get_data"]], "init_wake_deltas() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.init_wake_deltas"]], "initialize() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.initialize"]], "initialized (foxes.models.wake_models.wind.turbopark.turboparkwakeix property)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.initialized"]], "ipars (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.ipars"]], "model_id (foxes.models.wake_models.wind.turbopark.turboparkwakeix property)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.model_id"]], "sbeta_factor (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.sbeta_factor"]], "ti_var (foxes.models.wake_models.wind.turbopark.turboparkwakeix attribute)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.ti_var"]], "var() (foxes.models.wake_models.wind.turbopark.turboparkwakeix method)": [[235, "foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.var"]], "foxes.models.wake_superpositions": [[236, "module-foxes.models.wake_superpositions"]], "foxes.models.wake_superpositions.linear": [[237, "module-foxes.models.wake_superpositions.linear"]], "linearsuperposition (class in foxes.models.wake_superpositions.linear)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition"]], "__init__() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.__init__"], [238, "id0"]], "calc_final_wake_delta() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.finalize"]], "get_data() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.get_data"]], "initialize() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.initialize"]], "initialized (foxes.models.wake_superpositions.linear.linearsuperposition property)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.initialized"]], "lim_high (foxes.models.wake_superpositions.linear.linearsuperposition attribute)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.lim_high"]], "lim_low (foxes.models.wake_superpositions.linear.linearsuperposition attribute)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.lim_low"]], "model_id (foxes.models.wake_superpositions.linear.linearsuperposition property)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.model_id"]], "scalings (foxes.models.wake_superpositions.linear.linearsuperposition attribute)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.scalings"]], "var() (foxes.models.wake_superpositions.linear.linearsuperposition method)": [[238, "foxes.models.wake_superpositions.linear.LinearSuperposition.var"]], "foxes.models.wake_superpositions.max": [[239, "module-foxes.models.wake_superpositions.max"]], "maxsuperposition (class in foxes.models.wake_superpositions.max)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition"]], "__init__() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.__init__"], [240, "id0"]], "calc_final_wake_delta() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.finalize"]], "get_data() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.get_data"]], "initialize() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.initialize"]], "initialized (foxes.models.wake_superpositions.max.maxsuperposition property)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.initialized"]], "model_id (foxes.models.wake_superpositions.max.maxsuperposition property)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.model_id"]], "scalings (foxes.models.wake_superpositions.max.maxsuperposition attribute)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.scalings"]], "var() (foxes.models.wake_superpositions.max.maxsuperposition method)": [[240, "foxes.models.wake_superpositions.max.MaxSuperposition.var"]], "foxes.models.wake_superpositions.product": [[241, "module-foxes.models.wake_superpositions.product"]], "productsuperposition (class in foxes.models.wake_superpositions.product)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition"]], "__init__() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.__init__"], [242, "id0"]], "calc_final_wake_delta() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.finalize"]], "get_data() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.get_data"]], "initialize() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.initialize"]], "initialized (foxes.models.wake_superpositions.product.productsuperposition property)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.initialized"]], "lim_high (foxes.models.wake_superpositions.product.productsuperposition attribute)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.lim_high"]], "lim_low (foxes.models.wake_superpositions.product.productsuperposition attribute)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.lim_low"]], "model_id (foxes.models.wake_superpositions.product.productsuperposition property)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.model_id"]], "var() (foxes.models.wake_superpositions.product.productsuperposition method)": [[242, "foxes.models.wake_superpositions.product.ProductSuperposition.var"]], "foxes.models.wake_superpositions.quadratic": [[243, "module-foxes.models.wake_superpositions.quadratic"]], "quadraticsuperposition (class in foxes.models.wake_superpositions.quadratic)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition"]], "__init__() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.__init__"], [244, "id0"]], "calc_final_wake_delta() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.finalize"]], "get_data() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.get_data"]], "initialize() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.initialize"]], "initialized (foxes.models.wake_superpositions.quadratic.quadraticsuperposition property)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.initialized"]], "model_id (foxes.models.wake_superpositions.quadratic.quadraticsuperposition property)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.model_id"]], "scalings (foxes.models.wake_superpositions.quadratic.quadraticsuperposition attribute)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.scalings"]], "var() (foxes.models.wake_superpositions.quadratic.quadraticsuperposition method)": [[244, "foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.var"]], "foxes.models.wake_superpositions.ti_superp": [[245, "module-foxes.models.wake_superpositions.ti_superp"]], "tisuperposition (class in foxes.models.wake_superpositions.ti_superp)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition"]], "__init__() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.__init__"], [246, "id0"]], "calc_final_wake_delta() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.calc_final_wake_delta"]], "calc_wakes_plus_wake() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.calc_wakes_plus_wake"]], "finalize() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.finalize"]], "get_data() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.get_data"]], "initialize() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.initialize"]], "initialized (foxes.models.wake_superpositions.ti_superp.tisuperposition property)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.initialized"]], "model_id (foxes.models.wake_superpositions.ti_superp.tisuperposition property)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.model_id"]], "superp_to_amb (foxes.models.wake_superpositions.ti_superp.tisuperposition attribute)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.superp_to_amb"]], "ti_superp (foxes.models.wake_superpositions.ti_superp.tisuperposition attribute)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.ti_superp"]], "var() (foxes.models.wake_superpositions.ti_superp.tisuperposition method)": [[246, "foxes.models.wake_superpositions.ti_superp.TISuperposition.var"]], "foxes.opt": [[247, "module-foxes.opt"]], "foxes.opt.constraints": [[248, "module-foxes.opt.constraints"]], "foxes.opt.constraints.area_geometry": [[249, "module-foxes.opt.constraints.area_geometry"]], "areageometryconstraint (class in foxes.opt.constraints.area_geometry)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint"]], "d (foxes.opt.constraints.area_geometry.areageometryconstraint attribute)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.D"]], "__init__() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.__init__"], [250, "id0"]], "add_to_layout_figure() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.add_to_layout_figure"]], "ana_deriv() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.ana_deriv"]], "calc_individual() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.calc_individual"]], "calc_population() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.calc_population"]], "check_individual() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.check_individual"]], "check_population() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.check_population"]], "component_names (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.component_names"]], "disc_inside (foxes.opt.constraints.area_geometry.areageometryconstraint attribute)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.disc_inside"]], "farm (foxes.opt.constraints.area_geometry.areageometryconstraint attribute)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.farm"]], "farm (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "id1"]], "finalize() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize"]], "finalize_individual() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize_individual"]], "finalize_population() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.finalize_population"]], "geometry (foxes.opt.constraints.area_geometry.areageometryconstraint attribute)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.geometry"]], "get_bounds() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.get_bounds"]], "initialize() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.initialize"]], "initialized (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.initialized"]], "n_components() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.n_components"]], "n_sel_turbines (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.n_sel_turbines"]], "n_vars_float (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.n_vars_float"]], "n_vars_int (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.n_vars_int"]], "print_models() (foxes.opt.constraints.area_geometry.areageometryconstraint class method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.print_models"]], "rename_vars_float() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.rename_vars_float"]], "rename_vars_int() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.rename_vars_int"]], "sel_turbines (foxes.opt.constraints.area_geometry.areageometryconstraint attribute)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.sel_turbines"]], "sel_turbines (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "id2"]], "var_names_float (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.var_names_float"]], "var_names_int (foxes.opt.constraints.area_geometry.areageometryconstraint property)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.var_names_int"]], "vardeps_float() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.vardeps_float"]], "vardeps_int() (foxes.opt.constraints.area_geometry.areageometryconstraint method)": [[250, "foxes.opt.constraints.area_geometry.AreaGeometryConstraint.vardeps_int"]], "farmboundaryconstraint (class in foxes.opt.constraints.area_geometry)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint"]], "__init__() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.__init__"], [251, "id0"]], "add_to_layout_figure() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.add_to_layout_figure"]], "ana_deriv() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.ana_deriv"]], "calc_individual() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.calc_individual"]], "calc_population() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.calc_population"]], "check_individual() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.check_individual"]], "check_population() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.check_population"]], "component_names (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.component_names"]], "farm (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.farm"]], "finalize() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize"]], "finalize_individual() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize_individual"]], "finalize_population() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.finalize_population"]], "get_bounds() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.get_bounds"]], "initialize() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.initialize"]], "initialized (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.initialized"]], "n_components() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.n_components"]], "n_sel_turbines (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.n_sel_turbines"]], "n_vars_float (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.n_vars_float"]], "n_vars_int (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.n_vars_int"]], "print_models() (foxes.opt.constraints.area_geometry.farmboundaryconstraint class method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.print_models"]], "rename_vars_float() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.rename_vars_float"]], "rename_vars_int() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.rename_vars_int"]], "sel_turbines (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.sel_turbines"]], "var_names_float (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.var_names_float"]], "var_names_int (foxes.opt.constraints.area_geometry.farmboundaryconstraint property)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.var_names_int"]], "vardeps_float() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.vardeps_float"]], "vardeps_int() (foxes.opt.constraints.area_geometry.farmboundaryconstraint method)": [[251, "foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.vardeps_int"]], "foxes.opt.constraints.min_dist": [[252, "module-foxes.opt.constraints.min_dist"]], "mindistconstraint (class in foxes.opt.constraints.min_dist)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint"]], "__init__() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.__init__"], [253, "id0"]], "add_to_layout_figure() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.add_to_layout_figure"]], "ana_deriv() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.ana_deriv"]], "calc_individual() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.calc_individual"]], "calc_population() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.calc_population"]], "check_individual() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.check_individual"]], "check_population() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.check_population"]], "component_names (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.component_names"]], "farm (foxes.opt.constraints.min_dist.mindistconstraint attribute)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.farm"]], "farm (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "id1"]], "finalize() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.finalize"]], "finalize_individual() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.finalize_individual"]], "finalize_population() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.finalize_population"]], "get_bounds() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.get_bounds"]], "initialize() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.initialize"]], "initialized (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.initialized"]], "min_dist (foxes.opt.constraints.min_dist.mindistconstraint attribute)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.min_dist"]], "min_dist_unit (foxes.opt.constraints.min_dist.mindistconstraint attribute)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.min_dist_unit"]], "n_components() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.n_components"]], "n_sel_turbines (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.n_sel_turbines"]], "n_vars_float (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.n_vars_float"]], "n_vars_int (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.n_vars_int"]], "print_models() (foxes.opt.constraints.min_dist.mindistconstraint class method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.print_models"]], "rename_vars_float() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.rename_vars_float"]], "rename_vars_int() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.rename_vars_int"]], "sel_turbines (foxes.opt.constraints.min_dist.mindistconstraint attribute)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.sel_turbines"]], "sel_turbines (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "id2"]], "var_names_float (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.var_names_float"]], "var_names_int (foxes.opt.constraints.min_dist.mindistconstraint property)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.var_names_int"]], "vardeps_float() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.vardeps_float"]], "vardeps_int() (foxes.opt.constraints.min_dist.mindistconstraint method)": [[253, "foxes.opt.constraints.min_dist.MinDistConstraint.vardeps_int"]], "foxes.opt.core": [[254, "module-foxes.opt.core"]], "foxes.opt.core.farm_constraint": [[255, "module-foxes.opt.core.farm_constraint"]], "farmconstraint (class in foxes.opt.core.farm_constraint)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint"]], "__init__() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.__init__"], [256, "id0"]], "add_to_layout_figure() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.add_to_layout_figure"]], "ana_deriv() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.ana_deriv"]], "calc_individual() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.calc_individual"]], "calc_population() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.calc_population"]], "check_individual() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.check_individual"]], "check_population() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.check_population"]], "component_names (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.component_names"]], "farm (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.farm"]], "finalize() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.finalize"]], "finalize_individual() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.finalize_individual"]], "finalize_population() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.finalize_population"]], "get_bounds() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.get_bounds"]], "initialize() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.initialize"]], "initialized (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.initialized"]], "n_components() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.n_components"]], "n_sel_turbines (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.n_sel_turbines"]], "n_vars_float (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.n_vars_float"]], "n_vars_int (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.n_vars_int"]], "print_models() (foxes.opt.core.farm_constraint.farmconstraint class method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.print_models"]], "rename_vars_float() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.rename_vars_float"]], "rename_vars_int() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.rename_vars_int"]], "sel_turbines (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.sel_turbines"]], "var_names_float (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.var_names_float"]], "var_names_int (foxes.opt.core.farm_constraint.farmconstraint property)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.var_names_int"]], "vardeps_float() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.vardeps_float"]], "vardeps_int() (foxes.opt.core.farm_constraint.farmconstraint method)": [[256, "foxes.opt.core.farm_constraint.FarmConstraint.vardeps_int"]], "foxes.opt.core.farm_objective": [[257, "module-foxes.opt.core.farm_objective"]], "farmobjective (class in foxes.opt.core.farm_objective)": [[258, "foxes.opt.core.farm_objective.FarmObjective"]], "__init__() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.__init__"], [258, "id0"]], "add_to_layout_figure() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.add_to_layout_figure"]], "ana_deriv() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.ana_deriv"]], "calc_individual() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.calc_individual"]], "calc_population() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.calc_population"]], "component_names (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.component_names"]], "farm (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.farm"]], "finalize() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.finalize"]], "finalize_individual() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.finalize_individual"]], "finalize_population() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.finalize_population"]], "initialize() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.initialize"]], "initialized (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.initialized"]], "maximize() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.maximize"]], "n_components() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.n_components"]], "n_sel_turbines (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.n_sel_turbines"]], "n_vars_float (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.n_vars_float"]], "n_vars_int (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.n_vars_int"]], "print_models() (foxes.opt.core.farm_objective.farmobjective class method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.print_models"]], "rename_vars_float() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.rename_vars_float"]], "rename_vars_int() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.rename_vars_int"]], "sel_turbines (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.sel_turbines"]], "var_names_float (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.var_names_float"]], "var_names_int (foxes.opt.core.farm_objective.farmobjective property)": [[258, "foxes.opt.core.farm_objective.FarmObjective.var_names_int"]], "vardeps_float() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.vardeps_float"]], "vardeps_int() (foxes.opt.core.farm_objective.farmobjective method)": [[258, "foxes.opt.core.farm_objective.FarmObjective.vardeps_int"]], "foxes.opt.core.farm_opt_problem": [[259, "module-foxes.opt.core.farm_opt_problem"]], "farmoptproblem (class in foxes.opt.core.farm_opt_problem)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem"]], "__init__() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.__init__"], [260, "id0"]], "add_constraint() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_constraint"]], "add_objective() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_objective"]], "add_to_layout_figure() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.add_to_layout_figure"]], "algo (foxes.opt.core.farm_opt_problem.farmoptproblem attribute)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.algo"]], "all_turbines (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.all_turbines"]], "apply_individual() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.apply_individual"]], "apply_population() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.apply_population"]], "calc_farm_args (foxes.opt.core.farm_opt_problem.farmoptproblem attribute)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.calc_farm_args"]], "calc_gradients() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.calc_gradients"]], "check_constraints_individual() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.check_constraints_individual"]], "check_constraints_population() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.check_constraints_population"]], "constraints_tol (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.constraints_tol"]], "counter (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.counter"]], "evaluate_individual() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.evaluate_individual"]], "evaluate_population() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.evaluate_population"]], "farm (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.farm"]], "finalize() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize"]], "finalize_individual() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize_individual"]], "finalize_population() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.finalize_population"]], "get_gradients() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.get_gradients"]], "initial_values_float() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.initial_values_float"]], "initial_values_int() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.initial_values_int"]], "initialize() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.initialize"]], "initialized (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.initialized"]], "max_values_constraints (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.max_values_constraints"]], "max_values_float() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.max_values_float"]], "max_values_int() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.max_values_int"]], "maximize_objs (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.maximize_objs"]], "min_values_constraints (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.min_values_constraints"]], "min_values_float() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.min_values_float"]], "min_values_int() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.min_values_int"]], "n_constraints (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.n_constraints"]], "n_objectives (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.n_objectives"]], "n_sel_turbines (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.n_sel_turbines"]], "n_vars_float (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.n_vars_float"]], "n_vars_int (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.n_vars_int"]], "parse_tvar() (foxes.opt.core.farm_opt_problem.farmoptproblem class method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.parse_tvar"]], "runner (foxes.opt.core.farm_opt_problem.farmoptproblem attribute)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.runner"]], "sel_turbines (foxes.opt.core.farm_opt_problem.farmoptproblem property)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.sel_turbines"]], "tvar() (foxes.opt.core.farm_opt_problem.farmoptproblem class method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.tvar"]], "update_problem_individual() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.update_problem_individual"]], "update_problem_population() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.update_problem_population"]], "var_names_float() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.var_names_float"]], "var_names_int() (foxes.opt.core.farm_opt_problem.farmoptproblem method)": [[260, "foxes.opt.core.farm_opt_problem.FarmOptProblem.var_names_int"]], "foxes.opt.core.farm_vars_problem": [[261, "module-foxes.opt.core.farm_vars_problem"]], "farmvarsproblem (class in foxes.opt.core.farm_vars_problem)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem"]], "__init__() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.__init__"], [262, "id0"]], "add_constraint() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_constraint"]], "add_objective() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_objective"]], "add_to_layout_figure() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.add_to_layout_figure"]], "all_turbines (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.all_turbines"]], "apply_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.apply_individual"]], "apply_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.apply_population"]], "calc_gradients() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.calc_gradients"]], "check_constraints_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.check_constraints_individual"]], "check_constraints_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.check_constraints_population"]], "constraints_tol (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.constraints_tol"]], "counter (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.counter"]], "evaluate_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.evaluate_individual"]], "evaluate_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.evaluate_population"]], "farm (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.farm"]], "finalize() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize"]], "finalize_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize_individual"]], "finalize_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.finalize_population"]], "get_gradients() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.get_gradients"]], "initial_values_float() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.initial_values_float"]], "initial_values_int() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.initial_values_int"]], "initialize() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.initialize"]], "initialized (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.initialized"]], "max_values_constraints (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.max_values_constraints"]], "max_values_float() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.max_values_float"]], "max_values_int() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.max_values_int"]], "maximize_objs (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.maximize_objs"]], "min_values_constraints (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.min_values_constraints"]], "min_values_float() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.min_values_float"]], "min_values_int() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.min_values_int"]], "n_constraints (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.n_constraints"]], "n_objectives (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.n_objectives"]], "n_sel_turbines (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.n_sel_turbines"]], "n_vars_float (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.n_vars_float"]], "n_vars_int (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.n_vars_int"]], "opt2farm_vars_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.opt2farm_vars_individual"]], "opt2farm_vars_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.opt2farm_vars_population"]], "parse_tvar() (foxes.opt.core.farm_vars_problem.farmvarsproblem class method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.parse_tvar"]], "sel_turbines (foxes.opt.core.farm_vars_problem.farmvarsproblem property)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.sel_turbines"]], "tvar() (foxes.opt.core.farm_vars_problem.farmvarsproblem class method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.tvar"]], "update_problem_individual() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.update_problem_individual"]], "update_problem_population() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.update_problem_population"]], "var_names_float() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.var_names_float"]], "var_names_int() (foxes.opt.core.farm_vars_problem.farmvarsproblem method)": [[262, "foxes.opt.core.farm_vars_problem.FarmVarsProblem.var_names_int"]], "foxes.opt.core.pop_states": [[263, "module-foxes.opt.core.pop_states"]], "popstates (class in foxes.opt.core.pop_states)": [[264, "foxes.opt.core.pop_states.PopStates"]], "__init__() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.__init__"], [264, "id0"]], "calculate() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.calculate"]], "finalize() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.finalize"]], "get_data() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.get_data"]], "index() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.index"]], "initialize() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.initialize"]], "initialized (foxes.opt.core.pop_states.popstates property)": [[264, "foxes.opt.core.pop_states.PopStates.initialized"]], "model_id (foxes.opt.core.pop_states.popstates property)": [[264, "foxes.opt.core.pop_states.PopStates.model_id"]], "n_pop (foxes.opt.core.pop_states.popstates attribute)": [[264, "foxes.opt.core.pop_states.PopStates.n_pop"]], "output_point_vars() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.output_point_vars"]], "run_calculation() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.run_calculation"]], "size() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.size"]], "states (foxes.opt.core.pop_states.popstates attribute)": [[264, "foxes.opt.core.pop_states.PopStates.states"]], "var() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.var"]], "weights() (foxes.opt.core.pop_states.popstates method)": [[264, "foxes.opt.core.pop_states.PopStates.weights"]], "foxes.opt.objectives": [[265, "module-foxes.opt.objectives"]], "foxes.opt.objectives.farm_vars": [[266, "module-foxes.opt.objectives.farm_vars"]], "farmvarobjective (class in foxes.opt.objectives.farm_vars)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective"]], "__init__() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.__init__"], [267, "id0"]], "add_to_layout_figure() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.add_to_layout_figure"]], "ana_deriv() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.ana_deriv"]], "calc_individual() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.calc_individual"]], "calc_population() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.calc_population"]], "component_names (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.component_names"]], "deps (foxes.opt.objectives.farm_vars.farmvarobjective attribute)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.deps"]], "farm (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.farm"]], "finalize() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize"]], "finalize_individual() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize_individual"]], "finalize_population() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.finalize_population"]], "initialize() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.initialize"]], "initialized (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.initialized"]], "maximize() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.maximize"]], "minimize (foxes.opt.objectives.farm_vars.farmvarobjective attribute)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.minimize"]], "n_components() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.n_components"]], "n_sel_turbines (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.n_sel_turbines"]], "n_vars_float (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.n_vars_float"]], "n_vars_int (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.n_vars_int"]], "print_models() (foxes.opt.objectives.farm_vars.farmvarobjective class method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.print_models"]], "rename_vars_float() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.rename_vars_float"]], "rename_vars_int() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.rename_vars_int"]], "rules (foxes.opt.objectives.farm_vars.farmvarobjective attribute)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.rules"]], "scale (foxes.opt.objectives.farm_vars.farmvarobjective attribute)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.scale"]], "sel_turbines (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.sel_turbines"]], "var_names_float (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.var_names_float"]], "var_names_int (foxes.opt.objectives.farm_vars.farmvarobjective property)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.var_names_int"]], "vardeps_float() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.vardeps_float"]], "vardeps_int() (foxes.opt.objectives.farm_vars.farmvarobjective method)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.vardeps_int"]], "variable (foxes.opt.objectives.farm_vars.farmvarobjective attribute)": [[267, "foxes.opt.objectives.farm_vars.FarmVarObjective.variable"]], "maxfarmpower (class in foxes.opt.objectives.farm_vars)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower"]], "__init__() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.__init__"], [268, "id0"]], "add_to_layout_figure() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.add_to_layout_figure"]], "ana_deriv() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.ana_deriv"]], "calc_individual() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.calc_individual"]], "calc_population() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.calc_population"]], "component_names (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.component_names"]], "farm (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.farm"]], "finalize() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize"]], "finalize_individual() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize_individual"]], "finalize_population() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.finalize_population"]], "initialize() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.initialize"]], "initialized (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.initialized"]], "maximize() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.maximize"]], "n_components() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.n_components"]], "n_sel_turbines (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.n_sel_turbines"]], "n_vars_float (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.n_vars_float"]], "n_vars_int (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.n_vars_int"]], "print_models() (foxes.opt.objectives.farm_vars.maxfarmpower class method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.print_models"]], "rename_vars_float() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.rename_vars_float"]], "rename_vars_int() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.rename_vars_int"]], "sel_turbines (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.sel_turbines"]], "var_names_float (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.var_names_float"]], "var_names_int (foxes.opt.objectives.farm_vars.maxfarmpower property)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.var_names_int"]], "vardeps_float() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.vardeps_float"]], "vardeps_int() (foxes.opt.objectives.farm_vars.maxfarmpower method)": [[268, "foxes.opt.objectives.farm_vars.MaxFarmPower.vardeps_int"]], "minimalmaxti (class in foxes.opt.objectives.farm_vars)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI"]], "__init__() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.__init__"], [269, "id0"]], "add_to_layout_figure() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.add_to_layout_figure"]], "ana_deriv() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.ana_deriv"]], "calc_individual() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.calc_individual"]], "calc_population() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.calc_population"]], "component_names (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.component_names"]], "farm (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.farm"]], "finalize() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize"]], "finalize_individual() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize_individual"]], "finalize_population() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.finalize_population"]], "initialize() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.initialize"]], "initialized (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.initialized"]], "maximize() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.maximize"]], "n_components() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.n_components"]], "n_sel_turbines (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.n_sel_turbines"]], "n_vars_float (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.n_vars_float"]], "n_vars_int (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.n_vars_int"]], "print_models() (foxes.opt.objectives.farm_vars.minimalmaxti class method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.print_models"]], "rename_vars_float() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.rename_vars_float"]], "rename_vars_int() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.rename_vars_int"]], "sel_turbines (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.sel_turbines"]], "var_names_float (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.var_names_float"]], "var_names_int (foxes.opt.objectives.farm_vars.minimalmaxti property)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.var_names_int"]], "vardeps_float() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.vardeps_float"]], "vardeps_int() (foxes.opt.objectives.farm_vars.minimalmaxti method)": [[269, "foxes.opt.objectives.farm_vars.MinimalMaxTI.vardeps_int"]], "foxes.opt.objectives.max_n_turbines": [[270, "module-foxes.opt.objectives.max_n_turbines"]], "maxnturbines (class in foxes.opt.objectives.max_n_turbines)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines"]], "__init__() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.__init__"], [271, "id0"]], "add_to_layout_figure() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.add_to_layout_figure"]], "ana_deriv() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.ana_deriv"]], "calc_individual() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.calc_individual"]], "calc_population() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.calc_population"]], "check_valid (foxes.opt.objectives.max_n_turbines.maxnturbines attribute)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.check_valid"]], "component_names (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.component_names"]], "farm (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.farm"]], "finalize() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize"]], "finalize_individual() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize_individual"]], "finalize_population() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.finalize_population"]], "initialize() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.initialize"]], "initialized (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.initialized"]], "maximize() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.maximize"]], "n_components() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.n_components"]], "n_sel_turbines (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.n_sel_turbines"]], "n_vars_float (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.n_vars_float"]], "n_vars_int (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.n_vars_int"]], "print_models() (foxes.opt.objectives.max_n_turbines.maxnturbines class method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.print_models"]], "rename_vars_float() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.rename_vars_float"]], "rename_vars_int() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.rename_vars_int"]], "sel_turbines (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.sel_turbines"]], "var_names_float (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.var_names_float"]], "var_names_int (foxes.opt.objectives.max_n_turbines.maxnturbines property)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.var_names_int"]], "vardeps_float() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.vardeps_float"]], "vardeps_int() (foxes.opt.objectives.max_n_turbines.maxnturbines method)": [[271, "foxes.opt.objectives.max_n_turbines.MaxNTurbines.vardeps_int"]], "foxes.opt.problems": [[272, "module-foxes.opt.problems"]], "foxes.opt.problems.layout": [[273, "module-foxes.opt.problems.layout"]], "foxes.opt.problems.layout.farm_layout": [[274, "module-foxes.opt.problems.layout.farm_layout"]], "farmlayoutoptproblem (class in foxes.opt.problems.layout.farm_layout)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem"]], "__init__() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.__init__"], [275, "id0"]], "add_constraint() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_constraint"]], "add_objective() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_objective"]], "add_to_layout_figure() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.add_to_layout_figure"]], "all_turbines (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.all_turbines"]], "apply_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.apply_individual"]], "apply_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.apply_population"]], "calc_gradients() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.constraints_tol"]], "counter (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.counter"]], "evaluate_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.evaluate_population"]], "farm (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.farm"]], "finalize() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize"]], "finalize_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.finalize_population"]], "get_gradients() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.initial_values_int"]], "initialize() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.initialize"]], "initialized (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.initialized"]], "max_values_constraints (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.maximize_objs"]], "min_values_constraints (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.min_values_int"]], "n_constraints (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.n_constraints"]], "n_objectives (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.n_objectives"]], "n_sel_turbines (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.n_sel_turbines"]], "n_vars_float (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.n_vars_int"]], "opt2farm_vars_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.opt2farm_vars_individual"]], "opt2farm_vars_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.opt2farm_vars_population"]], "parse_tvar() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem class method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.parse_tvar"]], "sel_turbines (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem property)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.sel_turbines"]], "tvar() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem class method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.tvar"]], "update_problem_individual() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.update_problem_individual"]], "update_problem_population() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.update_problem_population"]], "var_names_float() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.farm_layout.farmlayoutoptproblem method)": [[275, "foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.var_names_int"]], "foxes.opt.problems.layout.geom_layouts": [[276, "module-foxes.opt.problems.layout.geom_layouts"]], "foxes.opt.problems.layout.geom_layouts.constraints": [[277, "module-foxes.opt.problems.layout.geom_layouts.constraints"]], "boundary (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.__init__"], [278, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.boundary property)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.boundary method)": [[278, "foxes.opt.problems.layout.geom_layouts.constraints.Boundary.vardeps_int"]], "cfixn (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.__init__"], [279, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.cfixn property)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.cfixn method)": [[279, "foxes.opt.problems.layout.geom_layouts.constraints.CFixN.vardeps_int"]], "cmaxn (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.__init__"], [280, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn property)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.cmaxn method)": [[280, "foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.vardeps_int"]], "cmindensity (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.__init__"], [281, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity property)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.cmindensity method)": [[281, "foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.vardeps_int"]], "cminn (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.__init__"], [282, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.cminn property)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.cminn method)": [[282, "foxes.opt.problems.layout.geom_layouts.constraints.CMinN.vardeps_int"]], "mindist (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.__init__"], [283, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.mindist property)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.mindist method)": [[283, "foxes.opt.problems.layout.geom_layouts.constraints.MinDist.vardeps_int"]], "valid (class in foxes.opt.problems.layout.geom_layouts.constraints)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid"]], "__init__() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.__init__"], [284, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.calc_population"]], "check_individual() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.check_individual"]], "check_population() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.check_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.finalize_population"]], "get_bounds() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.get_bounds"]], "initialize() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.initialized"]], "n_components() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.constraints.valid property)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.constraints.valid method)": [[284, "foxes.opt.problems.layout.geom_layouts.constraints.Valid.vardeps_int"]], "foxes.opt.problems.layout.geom_layouts.geom_layout": [[285, "module-foxes.opt.problems.layout.geom_layouts.geom_layout"]], "d (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout attribute)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.D"]], "geomlayout (class in foxes.opt.problems.layout.geom_layouts.geom_layout)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout"]], "__init__() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.__init__"], [286, "id0"]], "add_constraint() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.add_constraint"]], "add_objective() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.add_objective"]], "apply_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.apply_individual"]], "apply_population() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.apply_population"]], "boundary (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout attribute)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.boundary"]], "calc_gradients() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.calc_gradients"]], "calc_valid (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout attribute)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.calc_valid"]], "check_constraints_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.constraints_tol"]], "evaluate_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.evaluate_population"]], "finalize() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.finalize_population"]], "get_fig() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.get_fig"]], "get_gradients() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.initial_values_int"]], "initialize() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.initialized"]], "max_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.maximize_objs"]], "min_dist (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout attribute)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.min_dist"]], "min_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.min_values_int"]], "n_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.n_constraints"]], "n_objectives (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.n_objectives"]], "n_turbines (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout attribute)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.n_turbines"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout property)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.n_vars_int"]], "var_names_float() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.geom_layouts.geom_layout.geomlayout method)": [[286, "foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.var_names_int"]], "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded": [[287, "module-foxes.opt.problems.layout.geom_layouts.geom_layout_gridded"]], "d (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded attribute)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.D"]], "geomlayoutgridded (class in foxes.opt.problems.layout.geom_layouts.geom_layout_gridded)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded"]], "__init__() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.__init__"], [288, "id0"]], "add_constraint() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.add_constraint"]], "add_objective() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.add_objective"]], "apply_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.apply_individual"]], "apply_population() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.apply_population"]], "boundary (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded attribute)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.boundary"]], "calc_gradients() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.constraints_tol"]], "evaluate_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.evaluate_population"]], "finalize() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.finalize_population"]], "get_fig() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.get_fig"]], "get_gradients() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.get_gradients"]], "grid_spacing (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded attribute)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.grid_spacing"]], "initial_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.initial_values_int"]], "initialize() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.initialized"]], "max_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.maximize_objs"]], "min_dist (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded attribute)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.min_dist"]], "min_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.min_values_int"]], "n_constraints (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.n_constraints"]], "n_objectives (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.n_objectives"]], "n_turbines (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded attribute)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.n_turbines"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded property)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.n_vars_int"]], "var_names_float() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.geomlayoutgridded method)": [[288, "foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.var_names_int"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrid": [[289, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrid"]], "d (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid attribute)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.D"]], "geomreggrid (class in foxes.opt.problems.layout.geom_layouts.geom_reggrid)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid"]], "__init__() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.__init__"], [290, "id0"]], "add_constraint() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.add_constraint"]], "add_objective() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.add_objective"]], "apply_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.apply_individual"]], "apply_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.apply_population"]], "boundary (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid attribute)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.boundary"]], "calc_gradients() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.constraints_tol"]], "evaluate_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.evaluate_population"]], "finalize() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.finalize_population"]], "get_fig() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.get_fig"]], "get_gradients() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.initial_values_int"]], "initialize() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.initialized"]], "max_dist (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid attribute)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.max_dist"]], "max_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.maximize_objs"]], "min_dist (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid attribute)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.min_dist"]], "min_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.min_values_int"]], "n_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.n_constraints"]], "n_objectives (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.n_objectives"]], "n_turbines (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid attribute)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.n_turbines"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid property)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.n_vars_int"]], "var_names_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrid.geomreggrid method)": [[290, "foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.var_names_int"]], "foxes.opt.problems.layout.geom_layouts.geom_reggrids": [[291, "module-foxes.opt.problems.layout.geom_layouts.geom_reggrids"]], "d (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.D"]], "geomreggrids (class in foxes.opt.problems.layout.geom_layouts.geom_reggrids)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids"]], "__init__() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.__init__"], [292, "id0"]], "add_constraint() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.add_constraint"]], "add_objective() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.add_objective"]], "apply_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.apply_individual"]], "apply_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.apply_population"]], "boundary (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.boundary"]], "calc_gradients() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.constraints_tol"]], "evaluate_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.evaluate_population"]], "finalize() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.finalize_population"]], "get_fig() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.get_fig"]], "get_gradients() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.initial_values_int"]], "initialize() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.initialized"]], "max_dist (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.max_dist"]], "max_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.maximize_objs"]], "min_dist (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.min_dist"]], "min_values_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.min_values_int"]], "n_constraints (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_constraints"]], "n_grids (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_grids"]], "n_max (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_max"]], "n_objectives (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_objectives"]], "n_row_max (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids attribute)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_row_max"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids property)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.n_vars_int"]], "var_names_float() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.geom_layouts.geom_reggrids.geomreggrids method)": [[292, "foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.var_names_int"]], "foxes.opt.problems.layout.geom_layouts.objectives": [[293, "module-foxes.opt.problems.layout.geom_layouts.objectives"]], "maxdensity (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.__init__"], [294, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity property)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.maxdensity method)": [[294, "foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.vardeps_int"]], "maxgridspacing (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.__init__"], [295, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing property)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.maxgridspacing method)": [[295, "foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.vardeps_int"]], "memimadist (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.__init__"], [296, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.memimadist property)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.memimadist method)": [[296, "foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.vardeps_int"]], "ofixn (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.__init__"], [297, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.ofixn property)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.ofixn method)": [[297, "foxes.opt.problems.layout.geom_layouts.objectives.OFixN.vardeps_int"]], "omaxn (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.__init__"], [298, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.omaxn property)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.omaxn method)": [[298, "foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.vardeps_int"]], "ominn (class in foxes.opt.problems.layout.geom_layouts.objectives)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN"]], "__init__() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.__init__"], [299, "id0"]], "ana_deriv() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.ana_deriv"]], "calc_individual() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.calc_individual"]], "calc_population() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.calc_population"]], "component_names (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.component_names"]], "finalize() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize"]], "finalize_individual() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.finalize_population"]], "initialize() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.initialize"]], "initialized (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.initialized"]], "maximize() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.maximize"]], "n_components() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.n_components"]], "n_vars_float (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.n_vars_int"]], "rename_vars_float() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.rename_vars_float"]], "rename_vars_int() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.rename_vars_int"]], "var_names_float (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.var_names_float"]], "var_names_int (foxes.opt.problems.layout.geom_layouts.objectives.ominn property)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.var_names_int"]], "vardeps_float() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.vardeps_float"]], "vardeps_int() (foxes.opt.problems.layout.geom_layouts.objectives.ominn method)": [[299, "foxes.opt.problems.layout.geom_layouts.objectives.OMinN.vardeps_int"]], "foxes.opt.problems.layout.reggrids_layout": [[300, "module-foxes.opt.problems.layout.reggrids_layout"]], "reggridslayoutoptproblem (class in foxes.opt.problems.layout.reggrids_layout)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem"]], "__init__() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.__init__"], [301, "id0"]], "add_constraint() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_constraint"]], "add_objective() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_objective"]], "add_to_layout_figure() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.add_to_layout_figure"]], "all_turbines (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.all_turbines"]], "apply_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.apply_individual"]], "apply_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.apply_population"]], "calc_gradients() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.constraints_tol"]], "counter (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.counter"]], "evaluate_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.evaluate_population"]], "farm (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.farm"]], "finalize() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize"]], "finalize_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.finalize_population"]], "get_gradients() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.initial_values_int"]], "initialize() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.initialize"]], "initialized (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.initialized"]], "max_n_row (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem attribute)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.max_n_row"]], "max_values_constraints (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.maximize_objs"]], "min_spacing (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem attribute)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.min_spacing"]], "min_values_constraints (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.min_values_int"]], "n_constraints (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_constraints"]], "n_grids (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem attribute)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_grids"]], "n_objectives (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_objectives"]], "n_sel_turbines (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_sel_turbines"]], "n_vars_float (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.n_vars_int"]], "opt2farm_vars_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.opt2farm_vars_individual"]], "opt2farm_vars_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.opt2farm_vars_population"]], "parse_tvar() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem class method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.parse_tvar"]], "sel_turbines (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem property)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.sel_turbines"]], "tvar() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem class method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.tvar"]], "update_problem_individual() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.update_problem_individual"]], "update_problem_population() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.update_problem_population"]], "var_names_float() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.reggrids_layout.reggridslayoutoptproblem method)": [[301, "foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.var_names_int"]], "foxes.opt.problems.layout.regular_layout": [[302, "module-foxes.opt.problems.layout.regular_layout"]], "regularlayoutoptproblem (class in foxes.opt.problems.layout.regular_layout)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem"]], "__init__() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.__init__"], [303, "id0"]], "add_constraint() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_constraint"]], "add_objective() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_objective"]], "add_to_layout_figure() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.add_to_layout_figure"]], "all_turbines (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.all_turbines"]], "apply_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.apply_individual"]], "apply_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.apply_population"]], "calc_gradients() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.check_constraints_population"]], "constraints_tol (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.constraints_tol"]], "counter (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.counter"]], "evaluate_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.evaluate_population"]], "farm (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.farm"]], "finalize() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize"]], "finalize_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize_individual"]], "finalize_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.finalize_population"]], "get_gradients() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.get_gradients"]], "initial_values_float() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.initial_values_float"]], "initial_values_int() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.initial_values_int"]], "initialize() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.initialize"]], "initialized (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.initialized"]], "max_values_constraints (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.max_values_constraints"]], "max_values_float() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.max_values_float"]], "max_values_int() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.max_values_int"]], "maximize_objs (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.maximize_objs"]], "min_spacing (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem attribute)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.min_spacing"]], "min_values_constraints (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.min_values_constraints"]], "min_values_float() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.min_values_float"]], "min_values_int() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.min_values_int"]], "n_constraints (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.n_constraints"]], "n_objectives (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.n_objectives"]], "n_sel_turbines (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.n_sel_turbines"]], "n_vars_float (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.n_vars_float"]], "n_vars_int (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.n_vars_int"]], "opt2farm_vars_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.opt2farm_vars_individual"]], "opt2farm_vars_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.opt2farm_vars_population"]], "parse_tvar() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem class method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.parse_tvar"]], "sel_turbines (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem property)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.sel_turbines"]], "tvar() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem class method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.tvar"]], "update_problem_individual() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.update_problem_individual"]], "update_problem_population() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.update_problem_population"]], "var_names_float() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.var_names_float"]], "var_names_int() (foxes.opt.problems.layout.regular_layout.regularlayoutoptproblem method)": [[303, "foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.var_names_int"]], "foxes.opt.problems.opt_farm_vars": [[304, "module-foxes.opt.problems.opt_farm_vars"]], "optfarmvars (class in foxes.opt.problems.opt_farm_vars)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars"]], "__init__() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.__init__"], [305, "id0"]], "add_constraint() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_constraint"]], "add_objective() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_objective"]], "add_to_layout_figure() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_to_layout_figure"]], "add_var() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.add_var"]], "all_turbines (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.all_turbines"]], "apply_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.apply_individual"]], "apply_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.apply_population"]], "calc_gradients() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.calc_gradients"]], "check_constraints_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.check_constraints_individual"]], "check_constraints_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.check_constraints_population"]], "constraints_tol (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.constraints_tol"]], "counter (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.counter"]], "evaluate_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.evaluate_individual"]], "evaluate_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.evaluate_population"]], "farm (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.farm"]], "finalize() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize"]], "finalize_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize_individual"]], "finalize_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.finalize_population"]], "get_gradients() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.get_gradients"]], "initial_values_float() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.initial_values_float"]], "initial_values_int() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.initial_values_int"]], "initialize() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.initialize"]], "initialized (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.initialized"]], "max_values_constraints (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.max_values_constraints"]], "max_values_float() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.max_values_float"]], "max_values_int() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.max_values_int"]], "maximize_objs (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.maximize_objs"]], "min_values_constraints (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.min_values_constraints"]], "min_values_float() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.min_values_float"]], "min_values_int() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.min_values_int"]], "n_constraints (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.n_constraints"]], "n_objectives (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.n_objectives"]], "n_sel_turbines (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.n_sel_turbines"]], "n_vars_float (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.n_vars_float"]], "n_vars_int (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.n_vars_int"]], "opt2farm_vars_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.opt2farm_vars_individual"]], "opt2farm_vars_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.opt2farm_vars_population"]], "parse_tvar() (foxes.opt.problems.opt_farm_vars.optfarmvars class method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.parse_tvar"]], "sel_turbines (foxes.opt.problems.opt_farm_vars.optfarmvars property)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.sel_turbines"]], "tvar() (foxes.opt.problems.opt_farm_vars.optfarmvars class method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.tvar"]], "update_problem_individual() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.update_problem_individual"]], "update_problem_population() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.update_problem_population"]], "var_names_float() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.var_names_float"]], "var_names_int() (foxes.opt.problems.opt_farm_vars.optfarmvars method)": [[305, "foxes.opt.problems.opt_farm_vars.OptFarmVars.var_names_int"]], "foxes.output": [[306, "module-foxes.output"]], "foxes.output.farm_layout": [[307, "module-foxes.output.farm_layout"]], "d (foxes.output.farm_layout.farmlayoutoutput attribute)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.D"]], "farmlayoutoutput (class in foxes.output.farm_layout)": [[308, "foxes.output.farm_layout.FarmLayoutOutput"]], "__init__() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.__init__"], [308, "id0"]], "farm (foxes.output.farm_layout.farmlayoutoutput attribute)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.farm"]], "fres (foxes.output.farm_layout.farmlayoutoutput attribute)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.fres"]], "from_res (foxes.output.farm_layout.farmlayoutoutput attribute)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.from_res"]], "get_figure() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.get_figure"]], "get_layout_data() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.get_layout_data"]], "get_layout_dict() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.get_layout_dict"]], "new() (foxes.output.farm_layout.farmlayoutoutput class method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.new"]], "print_models() (foxes.output.farm_layout.farmlayoutoutput class method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.print_models"]], "results_state (foxes.output.farm_layout.farmlayoutoutput attribute)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.results_state"]], "write() (foxes.output.farm_layout.farmlayoutoutput class method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.write"]], "write_csv() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.write_csv"]], "write_json() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.write_json"]], "write_plot() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.write_plot"]], "write_xyh() (foxes.output.farm_layout.farmlayoutoutput method)": [[308, "foxes.output.farm_layout.FarmLayoutOutput.write_xyh"]], "foxes.output.farm_results_eval": [[309, "module-foxes.output.farm_results_eval"]], "farmresultseval (class in foxes.output.farm_results_eval)": [[310, "foxes.output.farm_results_eval.FarmResultsEval"]], "__init__() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.__init__"], [310, "id0"]], "add_capacity() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.add_capacity"]], "add_efficiency() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.add_efficiency"]], "calc_farm_efficiency() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_efficiency"]], "calc_farm_mean() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_mean"]], "calc_farm_sum() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_sum"]], "calc_farm_yield() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_farm_yield"]], "calc_mean_farm_power() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_mean_farm_power"]], "calc_states_mean() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_states_mean"]], "calc_states_std() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_states_std"]], "calc_states_sum() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_states_sum"]], "calc_turbine_mean() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_mean"]], "calc_turbine_sum() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_sum"]], "calc_turbine_yield() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.calc_turbine_yield"]], "new() (foxes.output.farm_results_eval.farmresultseval class method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.new"]], "print_models() (foxes.output.farm_results_eval.farmresultseval class method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.print_models"]], "reduce_all() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.reduce_all"]], "reduce_states() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.reduce_states"]], "reduce_turbines() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.reduce_turbines"]], "results (foxes.output.farm_results_eval.farmresultseval attribute)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.results"]], "weinsum() (foxes.output.farm_results_eval.farmresultseval method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.weinsum"]], "write() (foxes.output.farm_results_eval.farmresultseval class method)": [[310, "foxes.output.farm_results_eval.FarmResultsEval.write"]], "foxes.output.flow_plots_2d": [[311, "module-foxes.output.flow_plots_2d"]], "flowplots2d (class in foxes.output.flow_plots_2d)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D"]], "__init__() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.__init__"], [312, "id0"]], "algo (foxes.output.flow_plots_2d.flowplots2d attribute)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.algo"]], "farm_results (foxes.output.flow_plots_2d.flowplots2d attribute)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.farm_results"]], "gen_states_fig_xy() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_xy"]], "gen_states_fig_xz() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_xz"]], "gen_states_fig_yz() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.gen_states_fig_yz"]], "get_mean_fig_xy() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_xy"]], "get_mean_fig_xz() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_xz"]], "get_mean_fig_yz() (foxes.output.flow_plots_2d.flowplots2d method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.get_mean_fig_yz"]], "new() (foxes.output.flow_plots_2d.flowplots2d class method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.new"]], "print_models() (foxes.output.flow_plots_2d.flowplots2d class method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.print_models"]], "write() (foxes.output.flow_plots_2d.flowplots2d class method)": [[312, "foxes.output.flow_plots_2d.FlowPlots2D.write"]], "foxes.output.output": [[313, "module-foxes.output.output"]], "output (class in foxes.output.output)": [[314, "foxes.output.output.Output"]], "__init__() (foxes.output.output.output method)": [[314, "foxes.output.output.Output.__init__"]], "new() (foxes.output.output.output class method)": [[314, "foxes.output.output.Output.new"]], "print_models() (foxes.output.output.output class method)": [[314, "foxes.output.output.Output.print_models"]], "write() (foxes.output.output.output class method)": [[314, "foxes.output.output.Output.write"]], "foxes.output.results_writer": [[315, "module-foxes.output.results_writer"]], "resultswriter (class in foxes.output.results_writer)": [[316, "foxes.output.results_writer.ResultsWriter"]], "__init__() (foxes.output.results_writer.resultswriter method)": [[316, "foxes.output.results_writer.ResultsWriter.__init__"], [316, "id0"]], "data (foxes.output.results_writer.resultswriter attribute)": [[316, "foxes.output.results_writer.ResultsWriter.data"]], "new() (foxes.output.results_writer.resultswriter class method)": [[316, "foxes.output.results_writer.ResultsWriter.new"]], "print_models() (foxes.output.results_writer.resultswriter class method)": [[316, "foxes.output.results_writer.ResultsWriter.print_models"]], "write() (foxes.output.results_writer.resultswriter class method)": [[316, "foxes.output.results_writer.ResultsWriter.write"]], "write_csv() (foxes.output.results_writer.resultswriter method)": [[316, "foxes.output.results_writer.ResultsWriter.write_csv"]], "foxes.output.rose_plot": [[317, "module-foxes.output.rose_plot"]], "roseplotoutput (class in foxes.output.rose_plot)": [[318, "foxes.output.rose_plot.RosePlotOutput"]], "__init__() (foxes.output.rose_plot.roseplotoutput method)": [[318, "foxes.output.rose_plot.RosePlotOutput.__init__"], [318, "id0"]], "get_data() (foxes.output.rose_plot.roseplotoutput method)": [[318, "foxes.output.rose_plot.RosePlotOutput.get_data"]], "get_data_info() (foxes.output.rose_plot.roseplotoutput class method)": [[318, "foxes.output.rose_plot.RosePlotOutput.get_data_info"]], "get_figure() (foxes.output.rose_plot.roseplotoutput method)": [[318, "foxes.output.rose_plot.RosePlotOutput.get_figure"]], "new() (foxes.output.rose_plot.roseplotoutput class method)": [[318, "foxes.output.rose_plot.RosePlotOutput.new"]], "print_models() (foxes.output.rose_plot.roseplotoutput class method)": [[318, "foxes.output.rose_plot.RosePlotOutput.print_models"]], "results (foxes.output.rose_plot.roseplotoutput attribute)": [[318, "foxes.output.rose_plot.RosePlotOutput.results"]], "write() (foxes.output.rose_plot.roseplotoutput class method)": [[318, "foxes.output.rose_plot.RosePlotOutput.write"]], "write_figure() (foxes.output.rose_plot.roseplotoutput method)": [[318, "foxes.output.rose_plot.RosePlotOutput.write_figure"]], "statesroseplotoutput (class in foxes.output.rose_plot)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput"]], "__init__() (foxes.output.rose_plot.statesroseplotoutput method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.__init__"], [319, "id0"]], "get_data() (foxes.output.rose_plot.statesroseplotoutput method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.get_data"]], "get_data_info() (foxes.output.rose_plot.statesroseplotoutput class method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.get_data_info"]], "get_figure() (foxes.output.rose_plot.statesroseplotoutput method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.get_figure"]], "new() (foxes.output.rose_plot.statesroseplotoutput class method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.new"]], "print_models() (foxes.output.rose_plot.statesroseplotoutput class method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.print_models"]], "write() (foxes.output.rose_plot.statesroseplotoutput class method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.write"]], "write_figure() (foxes.output.rose_plot.statesroseplotoutput method)": [[319, "foxes.output.rose_plot.StatesRosePlotOutput.write_figure"]], "foxes.output.state_turbine_map": [[320, "module-foxes.output.state_turbine_map"]], "stateturbinemap (class in foxes.output.state_turbine_map)": [[321, "foxes.output.state_turbine_map.StateTurbineMap"]], "__init__() (foxes.output.state_turbine_map.stateturbinemap method)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.__init__"], [321, "id0"]], "new() (foxes.output.state_turbine_map.stateturbinemap class method)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.new"]], "plot_map() (foxes.output.state_turbine_map.stateturbinemap method)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.plot_map"]], "print_models() (foxes.output.state_turbine_map.stateturbinemap class method)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.print_models"]], "results (foxes.output.state_turbine_map.stateturbinemap attribute)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.results"]], "write() (foxes.output.state_turbine_map.stateturbinemap class method)": [[321, "foxes.output.state_turbine_map.StateTurbineMap.write"]], "foxes.output.turbine_type_curves": [[322, "module-foxes.output.turbine_type_curves"]], "turbinetypecurves (class in foxes.output.turbine_type_curves)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves"]], "__init__() (foxes.output.turbine_type_curves.turbinetypecurves method)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.__init__"], [323, "id0"]], "mbook (foxes.output.turbine_type_curves.turbinetypecurves attribute)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.mbook"]], "new() (foxes.output.turbine_type_curves.turbinetypecurves class method)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.new"]], "plot_curves() (foxes.output.turbine_type_curves.turbinetypecurves method)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.plot_curves"]], "print_models() (foxes.output.turbine_type_curves.turbinetypecurves class method)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.print_models"]], "write() (foxes.output.turbine_type_curves.turbinetypecurves class method)": [[323, "foxes.output.turbine_type_curves.TurbineTypeCurves.write"]], "foxes.utils": [[324, "module-foxes.utils"]], "foxes.utils.abl": [[325, "module-foxes.utils.abl"]], "foxes.utils.abl.neutral": [[326, "module-foxes.utils.abl.neutral"]], "calc_ws() (in module foxes.utils.abl.neutral)": [[327, "foxes.utils.abl.neutral.calc_ws"]], "logz() (in module foxes.utils.abl.neutral)": [[328, "foxes.utils.abl.neutral.logz"]], "ustar() (in module foxes.utils.abl.neutral)": [[329, "foxes.utils.abl.neutral.ustar"]], "foxes.utils.abl.sheared": [[330, "module-foxes.utils.abl.sheared"]], "calc_ws() (in module foxes.utils.abl.sheared)": [[331, "foxes.utils.abl.sheared.calc_ws"]], "foxes.utils.abl.stable": [[332, "module-foxes.utils.abl.stable"]], "calc_ws() (in module foxes.utils.abl.stable)": [[333, "foxes.utils.abl.stable.calc_ws"]], "logz() (in module foxes.utils.abl.stable)": [[334, "foxes.utils.abl.stable.logz"]], "psi() (in module foxes.utils.abl.stable)": [[335, "foxes.utils.abl.stable.psi"]], "ustar() (in module foxes.utils.abl.stable)": [[336, "foxes.utils.abl.stable.ustar"]], "foxes.utils.abl.unstable": [[337, "module-foxes.utils.abl.unstable"]], "calc_ws() (in module foxes.utils.abl.unstable)": [[338, "foxes.utils.abl.unstable.calc_ws"]], "psi() (in module foxes.utils.abl.unstable)": [[339, "foxes.utils.abl.unstable.psi"]], "ustar() (in module foxes.utils.abl.unstable)": [[340, "foxes.utils.abl.unstable.ustar"]], "foxes.utils.cubic_roots": [[341, "module-foxes.utils.cubic_roots"]], "foxes.utils.data_book": [[342, "module-foxes.utils.data_book"]], "databook (class in foxes.utils.data_book)": [[343, "foxes.utils.data_book.DataBook"]], "__init__() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.__init__"], [343, "id0"]], "add_data_package() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.add_data_package"]], "add_data_package_file() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.add_data_package_file"]], "add_file() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.add_file"]], "add_files() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.add_files"]], "dbase (foxes.utils.data_book.databook attribute)": [[343, "foxes.utils.data_book.DataBook.dbase"]], "get_file_path() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.get_file_path"]], "toc() (foxes.utils.data_book.databook method)": [[343, "foxes.utils.data_book.DataBook.toc"]], "foxes.utils.dict": [[344, "module-foxes.utils.dict"]], "dict (class in foxes.utils.dict)": [[345, "foxes.utils.dict.Dict"]], "__init__() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.__init__"], [345, "id0"]], "__new__() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.__new__"]], "clear() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.clear"]], "copy() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.copy"]], "fromkeys() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.fromkeys"]], "get() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.get"]], "items() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.items"]], "keys() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.keys"]], "name (foxes.utils.dict.dict attribute)": [[345, "foxes.utils.dict.Dict.name"]], "pop() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.pop"]], "popitem() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.popitem"]], "setdefault() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.setdefault"]], "update() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.update"]], "values() (foxes.utils.dict.dict method)": [[345, "foxes.utils.dict.Dict.values"]], "foxes.utils.geom2d": [[346, "module-foxes.utils.geom2d"]], "foxes.utils.geom2d.area_geometry": [[347, "module-foxes.utils.geom2d.area_geometry"]], "areageometry (class in foxes.utils.geom2d.area_geometry)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry"]], "__init__() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.__init__"]], "add_to_figure() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.add_to_figure"]], "inverse() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.inverse"]], "p_max() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.p_max"]], "p_min() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.p_min"]], "points_distance() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.points_distance"]], "points_inside() (foxes.utils.geom2d.area_geometry.areageometry method)": [[348, "foxes.utils.geom2d.area_geometry.AreaGeometry.points_inside"]], "areaintersection (class in foxes.utils.geom2d.area_geometry)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection"]], "__init__() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.__init__"]], "__new__() (foxes.utils.geom2d.area_geometry.areaintersection static method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.__new__"]], "add_to_figure() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.add_to_figure"]], "inverse() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.inverse"]], "p_max() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.p_max"]], "p_min() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.p_min"]], "points_distance() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.points_distance"]], "points_inside() (foxes.utils.geom2d.area_geometry.areaintersection method)": [[349, "foxes.utils.geom2d.area_geometry.AreaIntersection.points_inside"]], "areaunion (class in foxes.utils.geom2d.area_geometry)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion"]], "__init__() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.__init__"], [350, "id0"]], "add_to_figure() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.add_to_figure"]], "geometries (foxes.utils.geom2d.area_geometry.areaunion attribute)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.geometries"]], "inverse() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.inverse"]], "p_max() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.p_max"]], "p_min() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.p_min"]], "points_distance() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.points_distance"]], "points_inside() (foxes.utils.geom2d.area_geometry.areaunion method)": [[350, "foxes.utils.geom2d.area_geometry.AreaUnion.points_inside"]], "invertedareageometry (class in foxes.utils.geom2d.area_geometry)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry"]], "__init__() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.__init__"], [351, "id0"]], "add_to_figure() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.add_to_figure"]], "inverse() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.inverse"]], "p_max() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.p_max"]], "p_min() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.p_min"]], "points_distance() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.points_distance"]], "points_inside() (foxes.utils.geom2d.area_geometry.invertedareageometry method)": [[351, "foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.points_inside"]], "invertedareaunion (class in foxes.utils.geom2d.area_geometry)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion"]], "__init__() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.__init__"], [352, "id0"]], "add_to_figure() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.add_to_figure"]], "inverse() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.inverse"]], "p_max() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.p_max"]], "p_min() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.p_min"]], "points_distance() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.points_distance"]], "points_inside() (foxes.utils.geom2d.area_geometry.invertedareaunion method)": [[352, "foxes.utils.geom2d.area_geometry.InvertedAreaUnion.points_inside"]], "foxes.utils.geom2d.circle": [[353, "module-foxes.utils.geom2d.circle"]], "circle (class in foxes.utils.geom2d.circle)": [[354, "foxes.utils.geom2d.circle.Circle"]], "__init__() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.__init__"], [354, "id0"]], "add_to_figure() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.add_to_figure"]], "centre (foxes.utils.geom2d.circle.circle attribute)": [[354, "foxes.utils.geom2d.circle.Circle.centre"]], "inverse() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.inverse"]], "p_max() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.p_max"]], "p_min() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.p_min"]], "points_distance() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.points_distance"]], "points_inside() (foxes.utils.geom2d.circle.circle method)": [[354, "foxes.utils.geom2d.circle.Circle.points_inside"]], "radius (foxes.utils.geom2d.circle.circle attribute)": [[354, "foxes.utils.geom2d.circle.Circle.radius"]], "foxes.utils.geom2d.example_intersection": [[355, "module-foxes.utils.geom2d.example_intersection"]], "foxes.utils.geom2d.example_union": [[356, "module-foxes.utils.geom2d.example_union"]], "foxes.utils.geom2d.half_plane": [[357, "module-foxes.utils.geom2d.half_plane"]], "halfplane (class in foxes.utils.geom2d.half_plane)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane"]], "__init__() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.__init__"], [358, "id1"]], "add_to_figure() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.add_to_figure"]], "centre (foxes.utils.geom2d.half_plane.halfplane attribute)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.centre"]], "inverse() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.inverse"]], "n (foxes.utils.geom2d.half_plane.halfplane attribute)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.n"], [358, "id0"]], "p_max() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.p_max"]], "p_min() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.p_min"]], "points_distance() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.points_distance"]], "points_inside() (foxes.utils.geom2d.half_plane.halfplane method)": [[358, "foxes.utils.geom2d.half_plane.HalfPlane.points_inside"]], "foxes.utils.geom2d.polygon": [[359, "module-foxes.utils.geom2d.polygon"]], "closedpolygon (class in foxes.utils.geom2d.polygon)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon"]], "__init__() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.__init__"], [360, "id0"]], "add_to_figure() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.add_to_figure"]], "inverse() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.inverse"]], "p_max() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.p_max"]], "p_min() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.p_min"]], "points (foxes.utils.geom2d.polygon.closedpolygon attribute)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.points"]], "points_distance() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.points_distance"]], "points_inside() (foxes.utils.geom2d.polygon.closedpolygon method)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.points_inside"]], "poly (foxes.utils.geom2d.polygon.closedpolygon attribute)": [[360, "foxes.utils.geom2d.polygon.ClosedPolygon.poly"]], "foxes.utils.geopandas_helpers": [[361, "module-foxes.utils.geopandas_helpers"]], "check_import_gpd() (in module foxes.utils.geopandas_helpers)": [[362, "foxes.utils.geopandas_helpers.check_import_gpd"]], "check_import_utm() (in module foxes.utils.geopandas_helpers)": [[363, "foxes.utils.geopandas_helpers.check_import_utm"]], "read_shp() (in module foxes.utils.geopandas_helpers)": [[364, "foxes.utils.geopandas_helpers.read_shp"]], "read_shp_polygons() (in module foxes.utils.geopandas_helpers)": [[365, "foxes.utils.geopandas_helpers.read_shp_polygons"]], "shp2csv() (in module foxes.utils.geopandas_helpers)": [[366, "foxes.utils.geopandas_helpers.shp2csv"]], "shp2geom2d() (in module foxes.utils.geopandas_helpers)": [[367, "foxes.utils.geopandas_helpers.shp2geom2d"]], "foxes.utils.pandas_helpers": [[368, "module-foxes.utils.pandas_helpers"]], "data_file_format (foxes.utils.pandas_helpers.pandasfilehelper attribute)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.DATA_FILE_FORMAT"]], "default_format_dict (foxes.utils.pandas_helpers.pandasfilehelper attribute)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.DEFAULT_FORMAT_DICT"]], "default_reading_parameters (foxes.utils.pandas_helpers.pandasfilehelper attribute)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.DEFAULT_READING_PARAMETERS"]], "default_writing_parameters (foxes.utils.pandas_helpers.pandasfilehelper attribute)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.DEFAULT_WRITING_PARAMETERS"]], "pandasfilehelper (class in foxes.utils.pandas_helpers)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper"]], "__init__() (foxes.utils.pandas_helpers.pandasfilehelper method)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.__init__"]], "read_file() (foxes.utils.pandas_helpers.pandasfilehelper class method)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.read_file"]], "write_file() (foxes.utils.pandas_helpers.pandasfilehelper class method)": [[369, "foxes.utils.pandas_helpers.PandasFileHelper.write_file"]], "foxes.utils.plotly_helpers": [[370, "module-foxes.utils.plotly_helpers"]], "show_plotly_fig() (in module foxes.utils.plotly_helpers)": [[371, "foxes.utils.plotly_helpers.show_plotly_fig"]], "foxes.utils.runners": [[372, "module-foxes.utils.runners"]], "daskrunner (class in foxes.utils.runners)": [[373, "foxes.utils.runners.DaskRunner"]], "__init__() (foxes.utils.runners.daskrunner method)": [[373, "foxes.utils.runners.DaskRunner.__init__"], [373, "id0"]], "client_args (foxes.utils.runners.daskrunner attribute)": [[373, "foxes.utils.runners.DaskRunner.client_args"]], "cluster_args (foxes.utils.runners.daskrunner attribute)": [[373, "foxes.utils.runners.DaskRunner.cluster_args"]], "finalize() (foxes.utils.runners.daskrunner method)": [[373, "foxes.utils.runners.DaskRunner.finalize"]], "initialize() (foxes.utils.runners.daskrunner method)": [[373, "foxes.utils.runners.DaskRunner.initialize"]], "initialized (foxes.utils.runners.daskrunner property)": [[373, "foxes.utils.runners.DaskRunner.initialized"]], "print() (foxes.utils.runners.daskrunner method)": [[373, "foxes.utils.runners.DaskRunner.print"]], "progress_bar (foxes.utils.runners.daskrunner attribute)": [[373, "foxes.utils.runners.DaskRunner.progress_bar"]], "run() (foxes.utils.runners.daskrunner method)": [[373, "foxes.utils.runners.DaskRunner.run"]], "scheduler (foxes.utils.runners.daskrunner attribute)": [[373, "foxes.utils.runners.DaskRunner.scheduler"]], "verbosity (foxes.utils.runners.daskrunner attribute)": [[373, "foxes.utils.runners.DaskRunner.verbosity"]], "defaultrunner (class in foxes.utils.runners)": [[374, "foxes.utils.runners.DefaultRunner"]], "__init__() (foxes.utils.runners.defaultrunner method)": [[374, "foxes.utils.runners.DefaultRunner.__init__"], [374, "id0"]], "finalize() (foxes.utils.runners.defaultrunner method)": [[374, "foxes.utils.runners.DefaultRunner.finalize"]], "initialize() (foxes.utils.runners.defaultrunner method)": [[374, "foxes.utils.runners.DefaultRunner.initialize"]], "initialized (foxes.utils.runners.defaultrunner property)": [[374, "foxes.utils.runners.DefaultRunner.initialized"]], "run() (foxes.utils.runners.defaultrunner method)": [[374, "foxes.utils.runners.DefaultRunner.run"]], "runner (class in foxes.utils.runners)": [[375, "foxes.utils.runners.Runner"]], "__init__() (foxes.utils.runners.runner method)": [[375, "foxes.utils.runners.Runner.__init__"], [375, "id0"]], "finalize() (foxes.utils.runners.runner method)": [[375, "foxes.utils.runners.Runner.finalize"]], "initialize() (foxes.utils.runners.runner method)": [[375, "foxes.utils.runners.Runner.initialize"]], "initialized (foxes.utils.runners.runner property)": [[375, "foxes.utils.runners.Runner.initialized"]], "run() (foxes.utils.runners.runner method)": [[375, "foxes.utils.runners.Runner.run"]], "foxes.utils.subclasses": [[376, "module-foxes.utils.subclasses"]], "all_subclasses() (in module foxes.utils.subclasses)": [[377, "foxes.utils.subclasses.all_subclasses"]], "foxes.utils.two_circles": [[378, "module-foxes.utils.two_circles"]], "area() (in module foxes.utils.two_circles)": [[379, "foxes.utils.two_circles.area"]], "calc_area() (in module foxes.utils.two_circles)": [[380, "foxes.utils.two_circles.calc_area"]], "foxes.utils.wind_dir": [[381, "module-foxes.utils.wind_dir"]], "delta_wd() (in module foxes.utils.wind_dir)": [[382, "foxes.utils.wind_dir.delta_wd"]], "uv2wd() (in module foxes.utils.wind_dir)": [[383, "foxes.utils.wind_dir.uv2wd"]], "wd2uv() (in module foxes.utils.wind_dir)": [[384, "foxes.utils.wind_dir.wd2uv"]], "wd2wdvec() (in module foxes.utils.wind_dir)": [[385, "foxes.utils.wind_dir.wd2wdvec"]], "wdvec2wd() (in module foxes.utils.wind_dir)": [[386, "foxes.utils.wind_dir.wdvec2wd"]], "amb_cap (in module foxes.variables)": [[387, "foxes.variables.AMB_CAP"]], "amb_ct (in module foxes.variables)": [[387, "foxes.variables.AMB_CT"]], "amb_p (in module foxes.variables)": [[387, "foxes.variables.AMB_P"]], "amb_rews (in module foxes.variables)": [[387, "foxes.variables.AMB_REWS"]], "amb_rews2 (in module foxes.variables)": [[387, "foxes.variables.AMB_REWS2"]], "amb_rews3 (in module foxes.variables)": [[387, "foxes.variables.AMB_REWS3"]], "amb_rho (in module foxes.variables)": [[387, "foxes.variables.AMB_RHO"]], "amb_t (in module foxes.variables)": [[387, "foxes.variables.AMB_T"]], "amb_ti (in module foxes.variables)": [[387, "foxes.variables.AMB_TI"]], "amb_wd (in module foxes.variables)": [[387, "foxes.variables.AMB_WD"]], "amb_ws (in module foxes.variables)": [[387, "foxes.variables.AMB_WS"]], "amb_yaw (in module foxes.variables)": [[387, "foxes.variables.AMB_YAW"]], "amb_yawm (in module foxes.variables)": [[387, "foxes.variables.AMB_YAWM"]], "amb_yld (in module foxes.variables)": [[387, "foxes.variables.AMB_YLD"]], "cap (in module foxes.variables)": [[387, "foxes.variables.CAP"]], "ct (in module foxes.variables)": [[387, "foxes.variables.CT"]], "d (in module foxes.variables)": [[387, "foxes.variables.D"]], "eff (in module foxes.variables)": [[387, "foxes.variables.EFF"]], "h (in module foxes.variables)": [[387, "foxes.variables.H"]], "k (in module foxes.variables)": [[387, "foxes.variables.K"]], "kb (in module foxes.variables)": [[387, "foxes.variables.KB"]], "kti (in module foxes.variables)": [[387, "foxes.variables.KTI"]], "max_p (in module foxes.variables)": [[387, "foxes.variables.MAX_P"]], "mol (in module foxes.variables)": [[387, "foxes.variables.MOL"]], "order (in module foxes.variables)": [[387, "foxes.variables.ORDER"]], "p (in module foxes.variables)": [[387, "foxes.variables.P"]], "rews (in module foxes.variables)": [[387, "foxes.variables.REWS"]], "rews2 (in module foxes.variables)": [[387, "foxes.variables.REWS2"]], "rews3 (in module foxes.variables)": [[387, "foxes.variables.REWS3"]], "rho (in module foxes.variables)": [[387, "foxes.variables.RHO"]], "shear (in module foxes.variables)": [[387, "foxes.variables.SHEAR"]], "t (in module foxes.variables)": [[387, "foxes.variables.T"]], "ti (in module foxes.variables)": [[387, "foxes.variables.TI"]], "txyh (in module foxes.variables)": [[387, "foxes.variables.TXYH"]], "wd (in module foxes.variables)": [[387, "foxes.variables.WD"]], "weight (in module foxes.variables)": [[387, "foxes.variables.WEIGHT"]], "ws (in module foxes.variables)": [[387, "foxes.variables.WS"]], "x (in module foxes.variables)": [[387, "foxes.variables.X"]], "xyh (in module foxes.variables)": [[387, "foxes.variables.XYH"]], "y (in module foxes.variables)": [[387, "foxes.variables.Y"]], "yaw (in module foxes.variables)": [[387, "foxes.variables.YAW"]], "yawm (in module foxes.variables)": [[387, "foxes.variables.YAWM"]], "yld (in module foxes.variables)": [[387, "foxes.variables.YLD"]], "z0 (in module foxes.variables)": [[387, "foxes.variables.Z0"]], "foxes.variables": [[387, "module-foxes.variables"]], "var2amb (in module foxes.variables)": [[387, "foxes.variables.var2amb"], [387, "id0"]]}, "docurls": ["_autosummary/foxes.algorithms.html", "_autosummary/foxes.algorithms.downwind.html", "_autosummary/foxes.algorithms.downwind.downwind.html", "_autosummary/foxes.algorithms.downwind.downwind.Downwind.html", "_autosummary/foxes.algorithms.downwind.models.html", "_autosummary/foxes.algorithms.downwind.models.calc_order.html", "_autosummary/foxes.algorithms.downwind.models.calc_order.CalcOrder.html", "_autosummary/foxes.algorithms.downwind.models.farm_wakes_calc.html", "_autosummary/foxes.algorithms.downwind.models.farm_wakes_calc.FarmWakesCalculation.html", "_autosummary/foxes.algorithms.downwind.models.point_wakes_calc.html", "_autosummary/foxes.algorithms.downwind.models.point_wakes_calc.PointWakesCalculation.html", "_autosummary/foxes.algorithms.downwind.models.set_amb_farm_results.html", "_autosummary/foxes.algorithms.downwind.models.set_amb_farm_results.SetAmbFarmResults.html", "_autosummary/foxes.algorithms.downwind.models.set_amb_point_results.html", "_autosummary/foxes.algorithms.downwind.models.set_amb_point_results.SetAmbPointResults.html", "_autosummary/foxes.algorithms.iterative.html", "_autosummary/foxes.algorithms.iterative.iterative.html", "_autosummary/foxes.algorithms.iterative.iterative.Iterative.html", "_autosummary/foxes.algorithms.iterative.models.html", "_autosummary/foxes.algorithms.iterative.models.convergence.html", "_autosummary/foxes.algorithms.iterative.models.convergence.ConvCrit.html", "_autosummary/foxes.algorithms.iterative.models.convergence.ConvCritList.html", "_autosummary/foxes.algorithms.iterative.models.convergence.ConvVarDelta.html", "_autosummary/foxes.algorithms.iterative.models.convergence.DefaultConv.html", "_autosummary/foxes.algorithms.iterative.models.farm_wakes_calc.html", "_autosummary/foxes.algorithms.iterative.models.farm_wakes_calc.FarmWakesCalculation.html", "_autosummary/foxes.algorithms.iterative.models.loop_runner.html", "_autosummary/foxes.algorithms.iterative.models.loop_runner.LoopRunner.html", "_autosummary/foxes.constants.html", "_autosummary/foxes.core.html", "_autosummary/foxes.core.algorithm.html", "_autosummary/foxes.core.algorithm.Algorithm.html", "_autosummary/foxes.core.data.html", "_autosummary/foxes.core.data.Data.html", "_autosummary/foxes.core.data_calc_model.html", "_autosummary/foxes.core.data_calc_model.DataCalcModel.html", "_autosummary/foxes.core.farm_controller.html", "_autosummary/foxes.core.farm_controller.FarmController.html", "_autosummary/foxes.core.farm_data_model.html", "_autosummary/foxes.core.farm_data_model.FarmDataModel.html", "_autosummary/foxes.core.farm_data_model.FarmDataModelList.html", "_autosummary/foxes.core.farm_model.html", "_autosummary/foxes.core.farm_model.FarmModel.html", "_autosummary/foxes.core.model.html", "_autosummary/foxes.core.model.Model.html", "_autosummary/foxes.core.partial_wakes_model.html", "_autosummary/foxes.core.partial_wakes_model.PartialWakesModel.html", "_autosummary/foxes.core.point_data_model.html", "_autosummary/foxes.core.point_data_model.PointDataModel.html", "_autosummary/foxes.core.point_data_model.PointDataModelList.html", "_autosummary/foxes.core.rotor_model.html", "_autosummary/foxes.core.rotor_model.RotorModel.html", "_autosummary/foxes.core.states.html", "_autosummary/foxes.core.states.ExtendedStates.html", "_autosummary/foxes.core.states.States.html", "_autosummary/foxes.core.turbine.html", "_autosummary/foxes.core.turbine.Turbine.html", "_autosummary/foxes.core.turbine_model.html", "_autosummary/foxes.core.turbine_model.TurbineModel.html", "_autosummary/foxes.core.turbine_type.html", "_autosummary/foxes.core.turbine_type.TurbineType.html", "_autosummary/foxes.core.vertical_profile.html", "_autosummary/foxes.core.vertical_profile.VerticalProfile.html", "_autosummary/foxes.core.wake_frame.html", "_autosummary/foxes.core.wake_frame.WakeFrame.html", "_autosummary/foxes.core.wake_model.html", "_autosummary/foxes.core.wake_model.WakeModel.html", "_autosummary/foxes.core.wake_superposition.html", "_autosummary/foxes.core.wake_superposition.WakeSuperposition.html", "_autosummary/foxes.core.wind_farm.html", "_autosummary/foxes.core.wind_farm.WindFarm.html", "_autosummary/foxes.data.html", "_autosummary/foxes.data.farms.html", "_autosummary/foxes.data.parse.html", "_autosummary/foxes.data.parse.parse_Pct_file_name.html", "_autosummary/foxes.data.parse.parse_Pct_two_files.html", "_autosummary/foxes.data.power_ct_curves.html", "_autosummary/foxes.data.states.html", "_autosummary/foxes.data.static_data.html", "_autosummary/foxes.data.static_data.StaticData.html", "_autosummary/foxes.input.html", "_autosummary/foxes.input.farm_layout.html", "_autosummary/foxes.input.farm_layout.from_csv.html", "_autosummary/foxes.input.farm_layout.from_csv.add_from_csv.html", "_autosummary/foxes.input.farm_layout.from_df.html", "_autosummary/foxes.input.farm_layout.from_df.add_from_df.html", "_autosummary/foxes.input.farm_layout.from_file.html", "_autosummary/foxes.input.farm_layout.from_file.add_from_file.html", "_autosummary/foxes.input.farm_layout.from_json.html", "_autosummary/foxes.input.farm_layout.from_json.add_from_json.html", "_autosummary/foxes.input.farm_layout.grid.html", "_autosummary/foxes.input.farm_layout.grid.add_grid.html", "_autosummary/foxes.input.farm_layout.row.html", "_autosummary/foxes.input.farm_layout.row.add_row.html", "_autosummary/foxes.input.states.html", "_autosummary/foxes.input.states.create.html", "_autosummary/foxes.input.states.create.random_abl_states.html", "_autosummary/foxes.input.states.create.random_abl_states.create_random_abl_states.html", "_autosummary/foxes.input.states.create.random_abl_states.write_random_abl_states.html", "_autosummary/foxes.input.states.field_data_nc.html", "_autosummary/foxes.input.states.field_data_nc.FieldDataNC.html", "_autosummary/foxes.input.states.multi_height.html", "_autosummary/foxes.input.states.multi_height.MultiHeightStates.html", "_autosummary/foxes.input.states.multi_height.MultiHeightTimeseries.html", "_autosummary/foxes.input.states.scan_ws.html", "_autosummary/foxes.input.states.scan_ws.ScanWS.html", "_autosummary/foxes.input.states.single.html", "_autosummary/foxes.input.states.single.SingleStateStates.html", "_autosummary/foxes.input.states.states_table.html", "_autosummary/foxes.input.states.states_table.StatesTable.html", "_autosummary/foxes.input.states.states_table.Timeseries.html", "_autosummary/foxes.input.windio.html", "_autosummary/foxes.input.windio.windio.html", "_autosummary/foxes.input.windio.windio.read_anlyses.html", "_autosummary/foxes.input.windio.windio.read_case.html", "_autosummary/foxes.input.windio.windio.read_farm.html", "_autosummary/foxes.input.windio.windio.read_resource.html", "_autosummary/foxes.input.windio.windio.read_site.html", "_autosummary/foxes.models.html", "_autosummary/foxes.models.farm_controllers.html", "_autosummary/foxes.models.farm_controllers.basic.html", "_autosummary/foxes.models.farm_controllers.basic.BasicFarmController.html", "_autosummary/foxes.models.farm_models.html", "_autosummary/foxes.models.farm_models.turbine2farm.html", "_autosummary/foxes.models.farm_models.turbine2farm.Turbine2FarmModel.html", "_autosummary/foxes.models.model_book.html", "_autosummary/foxes.models.model_book.ModelBook.html", "_autosummary/foxes.models.partial_wakes.html", "_autosummary/foxes.models.partial_wakes.axiwake.html", "_autosummary/foxes.models.partial_wakes.axiwake.PartialAxiwake.html", "_autosummary/foxes.models.partial_wakes.distsliced.html", "_autosummary/foxes.models.partial_wakes.distsliced.PartialDistSlicedWake.html", "_autosummary/foxes.models.partial_wakes.grid.html", "_autosummary/foxes.models.partial_wakes.grid.PartialGrid.html", "_autosummary/foxes.models.partial_wakes.mapped.html", "_autosummary/foxes.models.partial_wakes.mapped.Mapped.html", "_autosummary/foxes.models.partial_wakes.rotor_points.html", "_autosummary/foxes.models.partial_wakes.rotor_points.RotorPoints.html", "_autosummary/foxes.models.partial_wakes.top_hat.html", "_autosummary/foxes.models.partial_wakes.top_hat.PartialTopHat.html", "_autosummary/foxes.models.point_models.html", "_autosummary/foxes.models.point_models.set_uniform_data.html", "_autosummary/foxes.models.point_models.set_uniform_data.SetUniformData.html", "_autosummary/foxes.models.point_models.tke2ti.html", "_autosummary/foxes.models.point_models.tke2ti.TKE2TI.html", "_autosummary/foxes.models.point_models.wake_deltas.html", "_autosummary/foxes.models.point_models.wake_deltas.WakeDeltas.html", "_autosummary/foxes.models.rotor_models.html", "_autosummary/foxes.models.rotor_models.centre.html", "_autosummary/foxes.models.rotor_models.centre.CentreRotor.html", "_autosummary/foxes.models.rotor_models.grid.html", "_autosummary/foxes.models.rotor_models.grid.GridRotor.html", "_autosummary/foxes.models.turbine_models.html", "_autosummary/foxes.models.turbine_models.calculator.html", "_autosummary/foxes.models.turbine_models.calculator.Calculator.html", "_autosummary/foxes.models.turbine_models.kTI_model.html", "_autosummary/foxes.models.turbine_models.kTI_model.kTI.html", "_autosummary/foxes.models.turbine_models.power_mask.html", "_autosummary/foxes.models.turbine_models.power_mask.PowerMask.html", "_autosummary/foxes.models.turbine_models.rotor_centre_calc.html", "_autosummary/foxes.models.turbine_models.rotor_centre_calc.RotorCentreCalc.html", "_autosummary/foxes.models.turbine_models.sector_management.html", "_autosummary/foxes.models.turbine_models.sector_management.SectorManagement.html", "_autosummary/foxes.models.turbine_models.set_XYHD.html", "_autosummary/foxes.models.turbine_models.set_XYHD.SetXYHD.html", "_autosummary/foxes.models.turbine_models.set_farm_vars.html", "_autosummary/foxes.models.turbine_models.set_farm_vars.SetFarmVars.html", "_autosummary/foxes.models.turbine_models.table_factors.html", "_autosummary/foxes.models.turbine_models.table_factors.TableFactors.html", "_autosummary/foxes.models.turbine_models.thrust2ct.html", "_autosummary/foxes.models.turbine_models.thrust2ct.Thrust2Ct.html", "_autosummary/foxes.models.turbine_models.yaw2yawm.html", "_autosummary/foxes.models.turbine_models.yaw2yawm.YAW2YAWM.html", "_autosummary/foxes.models.turbine_models.yawm2yaw.html", "_autosummary/foxes.models.turbine_models.yawm2yaw.YAWM2YAW.html", "_autosummary/foxes.models.turbine_types.html", "_autosummary/foxes.models.turbine_types.CpCt_file.html", "_autosummary/foxes.models.turbine_types.CpCt_file.CpCtFile.html", "_autosummary/foxes.models.turbine_types.CpCt_from_two.html", "_autosummary/foxes.models.turbine_types.CpCt_from_two.CpCtFromTwo.html", "_autosummary/foxes.models.turbine_types.PCt_file.html", "_autosummary/foxes.models.turbine_types.PCt_file.PCtFile.html", "_autosummary/foxes.models.turbine_types.PCt_from_two.html", "_autosummary/foxes.models.turbine_types.PCt_from_two.PCtFromTwo.html", "_autosummary/foxes.models.turbine_types.null_type.html", "_autosummary/foxes.models.turbine_types.null_type.NullType.html", "_autosummary/foxes.models.turbine_types.wsrho2PCt_two_files.html", "_autosummary/foxes.models.turbine_types.wsrho2PCt_two_files.WsRho2PCtTwoFiles.html", "_autosummary/foxes.models.vertical_profiles.html", "_autosummary/foxes.models.vertical_profiles.abl_log.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_neutral_ws.ABLLogNeutralWsProfile.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_stable_ws.ABLLogStableWsProfile.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_unstable_ws.ABLLogUnstableWsProfile.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_ws.html", "_autosummary/foxes.models.vertical_profiles.abl_log.abl_log_ws.ABLLogWsProfile.html", "_autosummary/foxes.models.vertical_profiles.abl_log.sheared_ws.html", "_autosummary/foxes.models.vertical_profiles.abl_log.sheared_ws.ShearedProfile.html", "_autosummary/foxes.models.vertical_profiles.uniform.html", "_autosummary/foxes.models.vertical_profiles.uniform.UniformProfile.html", "_autosummary/foxes.models.wake_frames.html", "_autosummary/foxes.models.wake_frames.farm_order.html", "_autosummary/foxes.models.wake_frames.farm_order.FarmOrder.html", "_autosummary/foxes.models.wake_frames.rotor_wd.html", "_autosummary/foxes.models.wake_frames.rotor_wd.RotorWD.html", "_autosummary/foxes.models.wake_frames.streamlines.html", "_autosummary/foxes.models.wake_frames.streamlines.Streamlines.html", "_autosummary/foxes.models.wake_frames.yawed_wakes.html", "_autosummary/foxes.models.wake_frames.yawed_wakes.YawedWakes.html", "_autosummary/foxes.models.wake_models.html", "_autosummary/foxes.models.wake_models.axisymmetric.html", "_autosummary/foxes.models.wake_models.axisymmetric.AxisymmetricWakeModel.html", "_autosummary/foxes.models.wake_models.dist_sliced.html", "_autosummary/foxes.models.wake_models.dist_sliced.DistSlicedWakeModel.html", "_autosummary/foxes.models.wake_models.gaussian.html", "_autosummary/foxes.models.wake_models.gaussian.GaussianWakeModel.html", "_autosummary/foxes.models.wake_models.ti.html", "_autosummary/foxes.models.wake_models.ti.crespo_hernandez.html", "_autosummary/foxes.models.wake_models.ti.crespo_hernandez.CrespoHernandezTIWake.html", "_autosummary/foxes.models.wake_models.ti.iec_ti.html", "_autosummary/foxes.models.wake_models.ti.iec_ti.IECTIWake.html", "_autosummary/foxes.models.wake_models.top_hat.html", "_autosummary/foxes.models.wake_models.top_hat.TopHatWakeModel.html", "_autosummary/foxes.models.wake_models.wind.html", "_autosummary/foxes.models.wake_models.wind.bastankhah.html", "_autosummary/foxes.models.wake_models.wind.bastankhah.BastankhahWake.html", "_autosummary/foxes.models.wake_models.wind.jensen.html", "_autosummary/foxes.models.wake_models.wind.jensen.JensenWake.html", "_autosummary/foxes.models.wake_models.wind.porte_agel.html", "_autosummary/foxes.models.wake_models.wind.porte_agel.PorteAgelModel.html", "_autosummary/foxes.models.wake_models.wind.porte_agel.PorteAgelWake.html", "_autosummary/foxes.models.wake_models.wind.turbopark.html", "_autosummary/foxes.models.wake_models.wind.turbopark.TurbOParkWake.html", "_autosummary/foxes.models.wake_models.wind.turbopark.TurbOParkWakeIX.html", "_autosummary/foxes.models.wake_superpositions.html", "_autosummary/foxes.models.wake_superpositions.linear.html", "_autosummary/foxes.models.wake_superpositions.linear.LinearSuperposition.html", "_autosummary/foxes.models.wake_superpositions.max.html", "_autosummary/foxes.models.wake_superpositions.max.MaxSuperposition.html", "_autosummary/foxes.models.wake_superpositions.product.html", "_autosummary/foxes.models.wake_superpositions.product.ProductSuperposition.html", "_autosummary/foxes.models.wake_superpositions.quadratic.html", "_autosummary/foxes.models.wake_superpositions.quadratic.QuadraticSuperposition.html", "_autosummary/foxes.models.wake_superpositions.ti_superp.html", "_autosummary/foxes.models.wake_superpositions.ti_superp.TISuperposition.html", "_autosummary/foxes.opt.html", "_autosummary/foxes.opt.constraints.html", "_autosummary/foxes.opt.constraints.area_geometry.html", "_autosummary/foxes.opt.constraints.area_geometry.AreaGeometryConstraint.html", "_autosummary/foxes.opt.constraints.area_geometry.FarmBoundaryConstraint.html", "_autosummary/foxes.opt.constraints.min_dist.html", "_autosummary/foxes.opt.constraints.min_dist.MinDistConstraint.html", "_autosummary/foxes.opt.core.html", "_autosummary/foxes.opt.core.farm_constraint.html", "_autosummary/foxes.opt.core.farm_constraint.FarmConstraint.html", "_autosummary/foxes.opt.core.farm_objective.html", "_autosummary/foxes.opt.core.farm_objective.FarmObjective.html", "_autosummary/foxes.opt.core.farm_opt_problem.html", "_autosummary/foxes.opt.core.farm_opt_problem.FarmOptProblem.html", "_autosummary/foxes.opt.core.farm_vars_problem.html", "_autosummary/foxes.opt.core.farm_vars_problem.FarmVarsProblem.html", "_autosummary/foxes.opt.core.pop_states.html", "_autosummary/foxes.opt.core.pop_states.PopStates.html", "_autosummary/foxes.opt.objectives.html", "_autosummary/foxes.opt.objectives.farm_vars.html", "_autosummary/foxes.opt.objectives.farm_vars.FarmVarObjective.html", "_autosummary/foxes.opt.objectives.farm_vars.MaxFarmPower.html", "_autosummary/foxes.opt.objectives.farm_vars.MinimalMaxTI.html", "_autosummary/foxes.opt.objectives.max_n_turbines.html", "_autosummary/foxes.opt.objectives.max_n_turbines.MaxNTurbines.html", "_autosummary/foxes.opt.problems.html", "_autosummary/foxes.opt.problems.layout.html", "_autosummary/foxes.opt.problems.layout.farm_layout.html", "_autosummary/foxes.opt.problems.layout.farm_layout.FarmLayoutOptProblem.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.Boundary.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.CFixN.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.CMaxN.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.CMinDensity.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.CMinN.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.MinDist.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.constraints.Valid.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_layout.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_layout.GeomLayout.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_layout_gridded.GeomLayoutGridded.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_reggrid.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_reggrid.GeomRegGrid.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_reggrids.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.geom_reggrids.GeomRegGrids.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.MaxDensity.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.MaxGridSpacing.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.MeMiMaDist.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.OFixN.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.OMaxN.html", "_autosummary/foxes.opt.problems.layout.geom_layouts.objectives.OMinN.html", "_autosummary/foxes.opt.problems.layout.reggrids_layout.html", "_autosummary/foxes.opt.problems.layout.reggrids_layout.RegGridsLayoutOptProblem.html", "_autosummary/foxes.opt.problems.layout.regular_layout.html", "_autosummary/foxes.opt.problems.layout.regular_layout.RegularLayoutOptProblem.html", "_autosummary/foxes.opt.problems.opt_farm_vars.html", "_autosummary/foxes.opt.problems.opt_farm_vars.OptFarmVars.html", "_autosummary/foxes.output.html", "_autosummary/foxes.output.farm_layout.html", "_autosummary/foxes.output.farm_layout.FarmLayoutOutput.html", "_autosummary/foxes.output.farm_results_eval.html", "_autosummary/foxes.output.farm_results_eval.FarmResultsEval.html", "_autosummary/foxes.output.flow_plots_2d.html", "_autosummary/foxes.output.flow_plots_2d.FlowPlots2D.html", "_autosummary/foxes.output.output.html", "_autosummary/foxes.output.output.Output.html", "_autosummary/foxes.output.results_writer.html", "_autosummary/foxes.output.results_writer.ResultsWriter.html", "_autosummary/foxes.output.rose_plot.html", "_autosummary/foxes.output.rose_plot.RosePlotOutput.html", "_autosummary/foxes.output.rose_plot.StatesRosePlotOutput.html", "_autosummary/foxes.output.state_turbine_map.html", "_autosummary/foxes.output.state_turbine_map.StateTurbineMap.html", "_autosummary/foxes.output.turbine_type_curves.html", "_autosummary/foxes.output.turbine_type_curves.TurbineTypeCurves.html", "_autosummary/foxes.utils.html", "_autosummary/foxes.utils.abl.html", "_autosummary/foxes.utils.abl.neutral.html", "_autosummary/foxes.utils.abl.neutral.calc_ws.html", "_autosummary/foxes.utils.abl.neutral.logz.html", "_autosummary/foxes.utils.abl.neutral.ustar.html", "_autosummary/foxes.utils.abl.sheared.html", "_autosummary/foxes.utils.abl.sheared.calc_ws.html", "_autosummary/foxes.utils.abl.stable.html", "_autosummary/foxes.utils.abl.stable.calc_ws.html", "_autosummary/foxes.utils.abl.stable.logz.html", "_autosummary/foxes.utils.abl.stable.psi.html", "_autosummary/foxes.utils.abl.stable.ustar.html", "_autosummary/foxes.utils.abl.unstable.html", "_autosummary/foxes.utils.abl.unstable.calc_ws.html", "_autosummary/foxes.utils.abl.unstable.psi.html", "_autosummary/foxes.utils.abl.unstable.ustar.html", "_autosummary/foxes.utils.cubic_roots.html", "_autosummary/foxes.utils.data_book.html", "_autosummary/foxes.utils.data_book.DataBook.html", "_autosummary/foxes.utils.dict.html", "_autosummary/foxes.utils.dict.Dict.html", "_autosummary/foxes.utils.geom2d.html", "_autosummary/foxes.utils.geom2d.area_geometry.html", "_autosummary/foxes.utils.geom2d.area_geometry.AreaGeometry.html", "_autosummary/foxes.utils.geom2d.area_geometry.AreaIntersection.html", "_autosummary/foxes.utils.geom2d.area_geometry.AreaUnion.html", "_autosummary/foxes.utils.geom2d.area_geometry.InvertedAreaGeometry.html", "_autosummary/foxes.utils.geom2d.area_geometry.InvertedAreaUnion.html", "_autosummary/foxes.utils.geom2d.circle.html", "_autosummary/foxes.utils.geom2d.circle.Circle.html", "_autosummary/foxes.utils.geom2d.example_intersection.html", "_autosummary/foxes.utils.geom2d.example_union.html", "_autosummary/foxes.utils.geom2d.half_plane.html", "_autosummary/foxes.utils.geom2d.half_plane.HalfPlane.html", "_autosummary/foxes.utils.geom2d.polygon.html", "_autosummary/foxes.utils.geom2d.polygon.ClosedPolygon.html", "_autosummary/foxes.utils.geopandas_helpers.html", "_autosummary/foxes.utils.geopandas_helpers.check_import_gpd.html", "_autosummary/foxes.utils.geopandas_helpers.check_import_utm.html", "_autosummary/foxes.utils.geopandas_helpers.read_shp.html", "_autosummary/foxes.utils.geopandas_helpers.read_shp_polygons.html", "_autosummary/foxes.utils.geopandas_helpers.shp2csv.html", "_autosummary/foxes.utils.geopandas_helpers.shp2geom2d.html", "_autosummary/foxes.utils.pandas_helpers.html", "_autosummary/foxes.utils.pandas_helpers.PandasFileHelper.html", "_autosummary/foxes.utils.plotly_helpers.html", "_autosummary/foxes.utils.plotly_helpers.show_plotly_fig.html", "_autosummary/foxes.utils.runners.html", "_autosummary/foxes.utils.runners.DaskRunner.html", "_autosummary/foxes.utils.runners.DefaultRunner.html", "_autosummary/foxes.utils.runners.Runner.html", "_autosummary/foxes.utils.subclasses.html", "_autosummary/foxes.utils.subclasses.all_subclasses.html", "_autosummary/foxes.utils.two_circles.html", "_autosummary/foxes.utils.two_circles.area.html", "_autosummary/foxes.utils.two_circles.calc_area.html", "_autosummary/foxes.utils.wind_dir.html", "_autosummary/foxes.utils.wind_dir.delta_wd.html", "_autosummary/foxes.utils.wind_dir.uv2wd.html", "_autosummary/foxes.utils.wind_dir.wd2uv.html", "_autosummary/foxes.utils.wind_dir.wd2wdvec.html", "_autosummary/foxes.utils.wind_dir.wdvec2wd.html", "_autosummary/foxes.variables.html", "api.html", "examples.html", "history.html", "index.html", "installation.html", "notebooks/data.html", "notebooks/heterogeneous.html", "notebooks/layout_opt.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/overview.html", "notebooks/power_mask.html", "notebooks/sector_man.html", "notebooks/single_row.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html"]})