Search.setIndex({"alltitles": {"API": [[1692, null]], "Acknowledgements": [[1713, "acknowledgements"]], "Ambient inflow states": [[1714, "ambient-inflow-states"]], "Ambient states data": [[1719, "Ambient-states-data"]], "Attributes": [[1, null], [17, null], [27, null], [53, null], [59, null], [63, null], [67, null], [72, null], [76, null], [81, null], [87, null], [92, null], [102, null], [157, null], [187, null], [198, null], [213, null], [225, null], [237, null], [244, null], [262, null], [276, null], [289, null], [296, null], [323, null], [332, null], [343, null], [351, null], [367, null], [388, null], [416, null], [427, null], [432, null], [453, null], [477, null], [485, null], [496, null], [530, null], [537, null], [540, "attributes"], [544, null], [553, null], [557, null], [566, null], [572, null], [581, null], [589, null], [599, null], [606, null], [613, null], [618, null], [623, null], [630, null], [636, null], [641, null], [651, null], [656, null], [667, null], [676, null], [692, null], [702, null], [714, null], [722, null], [731, null], [735, null], [739, null], [743, null], [747, null], [754, null], [758, null], [764, null], [771, null], [776, null], [784, null], [791, null], [801, "attributes"], [812, null], [829, "attributes"], [837, "attributes"], [845, "attributes"], [854, "attributes"], [862, "attributes"], [869, "attributes"], [876, "attributes"], [882, "attributes"], [888, "attributes"], [911, null], [916, "attributes"], [922, null], [930, null], [935, null], [940, null], [945, null], [950, null], [956, null], [962, null], [968, null], [974, null], [980, null], [986, null], [992, null], [998, null], [1004, null], [1009, null], [1018, null], [1045, null], [1051, null], [1054, null], [1064, null], [1067, null], [1072, null], [1077, null], [1085, null], [1088, null], [1093, null], [1097, "attributes"], [1105, null], [1111, null], [1118, null], [1127, null], [1559, null], [1586, null], [1594, null], [1601, null], [1608, null]], "Available engines": [[1724, "Available-engines"]], "Blockage modelling 1": [[1718, null]], "Blockage modelling 2": [[1717, null]], "CentreRotor": [[1727, "CentreRotor"]], "Citation": [[1711, null]], "Classes": [[1134, "classes"]], "Command line applications": [[1710, null]], "Contents": [[1713, "contents"]], "Contributing": [[1713, "contributing"]], "DTU-10MW-D178d3-H119.csv": [[1719, "DTU-10MW-D178d3-H119.csv"]], "Default engine": [[1724, "Default-engine"]], "Developers": [[1715, "developers"], [1715, "id6"]], "Discouraged": [[1363, null], [1378, null], [1502, null], [1511, null], [1511, null], [1518, null], [1518, null], [1535, null]], "Downwind algorithm": [[1694, null]], "Downwind algorithm models": [[1694, "downwind-algorithm-models"]], "Dynamic Wakes 1": [[1720, null]], "Dynamic Wakes 2": [[1731, null]], "Dynamic Wakes 3": [[1729, null]], "Engine selection through a with-block": [[1724, "Engine-selection-through-a-with-block"]], "Engine selection through the algorithm": [[1724, "Engine-selection-through-the-algorithm"]], "Examples": [[391, null], [522, null], [523, null], [712, null], [1252, "examples"], [1258, "examples"], [1261, "examples"], [1262, "examples"], [1263, "examples"], [1292, "examples"], [1406, "examples"], [1413, "examples"], [1443, "examples"], [1444, "examples"], [1480, "examples"], [1508, "examples"], [1515, "examples"], [1531, null], [1535, "examples"], [1537, "examples"], [1712, null]], "File paths": [[1719, "File-paths"]], "GridRotor": [[1727, "GridRotor"]], "Ground models": [[1716, "ground-models"]], "Heterogeneous flow": [[1721, null]], "Hint": [[1424, null], [1426, null]], "History": [[0, null]], "Horizontally homogeneous wake propagation": [[1731, "Horizontally-homogeneous-wake-propagation"]], "IEA-15MW-D240-H150.csv": [[1719, "IEA-15MW-D240-H150.csv"]], "IWT-7d5MW-D164-H100.csv": [[1719, "IWT-7d5MW-D164-H100.csv"]], "Induction model comparison": [[1717, "Induction-model-comparison"]], "Inputs": [[1714, null]], "Installation": [[1715, null]], "Installation via conda": [[1715, "installation-via-conda"]], "Installation via pip": [[1715, "installation-via-pip"]], "Iterative algorithm": [[1695, null]], "Iterative algorithm models": [[1695, "iterative-algorithm-models"]], "Journal paper": [[1711, "journal-paper"]], "LevelRotor": [[1727, "LevelRotor"]], "License": [[1713, "license"]], "Manual engine selection": [[1724, "Manual-engine-selection"]], "Model types": [[1716, "model-types"]], "Models": [[1716, null]], "Multi-height wind data": [[1723, null]], "NREL-5MW-D126-H90.csv": [[1719, "NREL-5MW-D126-H90.csv"]], "Note": [[1155, null], [1218, null], [1252, null], [1269, null], [1271, null], [1298, null], [1318, null], [1366, null], [1381, null], [1431, null], [1530, null], [1539, null], [1539, null], [1540, null], [1540, null]], "Notes": [[540, null], [801, null], [829, null], [837, null], [845, null], [853, null], [854, null], [862, null], [869, null], [876, null], [882, null], [888, null], [916, null], [1240, "notes"], [1252, "notes"], [1253, "notes"], [1256, "notes"], [1260, "notes"], [1267, "notes"], [1285, "notes"], [1286, "notes"], [1287, "notes"], [1289, "notes"], [1290, null], [1292, "notes"], [1293, "notes"], [1364, "notes"], [1365, "notes"], [1370, "notes"], [1379, "notes"], [1380, "notes"], [1385, "notes"], [1394, "notes"], [1398, "notes"], [1399, "notes"], [1402, "notes"], [1416, "notes"], [1417, "notes"], [1424, "notes"], [1426, "notes"], [1430, "notes"], [1431, "notes"], [1432, "notes"], [1434, "notes"], [1435, "notes"], [1442, "notes"], [1448, "notes"], [1460, "notes"], [1464, "notes"], [1508, "notes"], [1510, "notes"], [1512, "notes"], [1515, "notes"], [1517, "notes"], [1519, "notes"], [1523, "notes"], [1528, "notes"], [1529, "notes"], [1540, "notes"], [1543, "notes"], [1544, "notes"], [1555, "notes"]], "Optimization": [[1735, null]], "Optional dependencies": [[1715, "optional-dependencies"]], "Other Parameters": [[1240, "other-parameters"], [1250, "other-parameters"], [1258, "other-parameters"], [1259, "other-parameters"], [1261, "other-parameters"], [1262, "other-parameters"], [1263, "other-parameters"], [1264, "other-parameters"], [1266, "other-parameters"], [1267, "other-parameters"], [1268, "other-parameters"], [1269, "other-parameters"], [1270, "other-parameters"], [1277, "other-parameters"], [1281, "other-parameters"], [1282, "other-parameters"], [1285, "other-parameters"], [1289, "other-parameters"], [1291, "other-parameters"], [1293, "other-parameters"], [1294, "other-parameters"], [1295, "other-parameters"], [1397, "other-parameters"], [1398, "other-parameters"], [1399, "other-parameters"], [1400, "other-parameters"], [1402, "other-parameters"], [1411, "other-parameters"], [1413, "other-parameters"], [1415, "other-parameters"], [1417, "other-parameters"], [1424, "other-parameters"], [1425, "other-parameters"], [1426, "other-parameters"], [1427, "other-parameters"], [1431, "other-parameters"], [1432, "other-parameters"], [1434, "other-parameters"], [1435, "other-parameters"], [1442, "other-parameters"], [1443, "other-parameters"], [1444, "other-parameters"], [1484, "other-parameters"], [1498, "other-parameters"], [1502, "other-parameters"], [1507, "other-parameters"], [1514, "other-parameters"], [1524, "other-parameters"], [1526, "other-parameters"], [1533, "other-parameters"], [1535, "other-parameters"], [1537, "other-parameters"], [1539, "other-parameters"], [1540, "other-parameters"], [1552, "other-parameters"], [1555, "other-parameters"]], "Overview - how to setup foxes": [[1736, null]], "Parallelization": [[1724, null]], "Parameters": [[3, null], [4, null], [5, null], [7, null], [18, null], [19, null], [22, null], [25, null], [28, null], [32, null], [38, null], [39, null], [44, null], [47, null], [48, null], [51, null], [52, null], [54, null], [55, null], [56, null], [57, null], [60, null], [61, null], [62, null], [65, null], [66, null], [69, null], [70, null], [71, null], [73, null], [74, null], [77, null], [78, null], [79, null], [82, null], [83, null], [88, null], [89, null], [90, null], [93, null], [94, null], [95, null], [96, null], [98, null], [99, null], [100, null], [101, null], [103, null], [106, null], [107, null], [110, null], [117, null], [118, null], [158, null], [159, null], [160, null], [161, null], [162, null], [165, null], [168, null], [169, null], [170, null], [171, null], [172, null], [177, null], [178, null], [179, null], [180, null], [181, null], [182, null], [183, null], [186, null], [188, null], [189, null], [190, null], [191, null], [194, null], [196, null], [199, null], [201, null], [202, null], [204, null], [205, null], [209, null], [211, null], [212, null], [214, null], [215, null], [216, null], [218, null], [221, null], [223, null], [224, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null], [234, null], [235, null], [238, null], [239, null], [240, null], [242, null], [243, null], [245, null], [247, null], [248, null], [249, null], [250, null], [254, null], [255, null], [256, null], [257, null], [258, null], [259, null], [261, null], [265, null], [266, null], [267, null], [269, null], [272, null], [274, null], [275, null], [277, null], [278, null], [279, null], [280, null], [281, null], [282, null], [284, null], [285, null], [288, null], [290, null], [292, null], [293, null], [294, null], [297, null], [298, null], [300, null], [301, null], [303, null], [304, null], [308, null], [309, null], [310, null], [311, null], [313, null], [315, null], [316, null], [317, null], [318, null], [322, null], [324, null], [325, null], [326, null], [330, null], [331, null], [333, null], [335, null], [338, null], [340, null], [342, null], [344, null], [345, null], [346, null], [347, null], [348, null], [349, null], [350, null], [352, null], [353, null], [360, null], [361, null], [362, null], [363, null], [365, null], [366, null], [368, null], [369, null], [372, null], [376, null], [377, null], [378, null], [379, null], [380, null], [381, null], [382, null], [385, null], [387, null], [389, null], [390, null], [395, null], [397, null], [401, null], [403, null], [407, null], [408, null], [409, null], [410, null], [411, null], [412, null], [413, null], [414, null], [415, null], [417, null], [418, null], [421, null], [422, null], [423, null], [425, null], [426, null], [428, null], [429, null], [431, null], [434, null], [436, null], [438, null], [440, null], [441, null], [442, null], [443, null], [445, null], [446, null], [450, null], [452, null], [454, null], [457, null], [459, null], [460, null], [461, null], [464, null], [465, null], [467, null], [468, null], [469, null], [470, null], [471, null], [472, null], [473, null], [475, null], [476, null], [478, null], [479, null], [480, null], [481, null], [484, null], [486, null], [487, null], [490, null], [491, null], [492, null], [494, null], [495, null], [498, null], [499, null], [501, null], [503, null], [504, null], [505, null], [506, null], [507, null], [510, null], [511, null], [513, null], [514, null], [515, null], [516, null], [519, null], [520, null], [521, null], [524, null], [525, null], [526, null], [527, null], [528, null], [529, null], [532, null], [533, null], [534, null], [535, null], [536, null], [538, null], [539, null], [541, null], [542, null], [545, null], [547, null], [548, null], [554, null], [555, null], [556, null], [558, null], [560, null], [561, null], [563, null], [565, null], [567, null], [569, null], [570, null], [573, null], [574, null], [575, null], [576, null], [579, null], [580, null], [582, null], [583, null], [584, null], [585, null], [587, null], [588, null], [590, null], [591, null], [592, null], [595, null], [596, null], [600, null], [603, null], [607, null], [610, null], [614, null], [616, null], [617, null], [619, null], [620, null], [621, null], [622, null], [624, null], [626, null], [627, null], [628, null], [631, null], [632, null], [633, null], [634, null], [637, null], [638, null], [639, null], [640, null], [642, null], [643, null], [644, null], [645, null], [646, null], [647, null], [649, null], [650, null], [652, null], [653, null], [654, null], [655, null], [657, null], [659, null], [660, null], [662, null], [663, null], [665, null], [666, null], [668, null], [670, null], [671, null], [673, null], [675, null], [677, null], [679, null], [680, null], [681, null], [684, null], [687, null], [688, null], [691, null], [693, null], [695, null], [696, null], [697, null], [698, null], [701, null], [703, null], [705, null], [706, null], [707, null], [708, null], [711, null], [713, null], [715, null], [716, null], [717, null], [718, null], [721, null], [723, null], [725, null], [726, null], [727, null], [730, null], [732, null], [733, null], [736, null], [737, null], [740, null], [741, null], [744, null], [745, null], [748, null], [749, null], [752, null], [755, null], [756, null], [759, null], [761, null], [762, null], [763, null], [765, null], [766, null], [767, null], [768, null], [769, null], [772, null], [773, null], [774, null], [775, null], [777, null], [779, null], [780, null], [781, null], [782, null], [783, null], [785, null], [787, null], [788, null], [789, null], [790, null], [792, null], [794, null], [795, null], [796, null], [797, null], [798, null], [799, null], [800, null], [802, null], [804, null], [805, null], [806, null], [807, null], [810, null], [811, null], [813, null], [814, null], [815, null], [816, null], [817, null], [820, null], [821, null], [822, null], [823, null], [824, null], [825, null], [826, null], [827, null], [830, null], [832, null], [833, null], [834, null], [835, null], [838, null], [840, null], [841, null], [842, null], [843, null], [846, null], [848, null], [849, null], [850, null], [851, null], [855, null], [857, null], [858, null], [859, null], [860, null], [863, null], [865, null], [866, null], [867, null], [870, null], [872, null], [873, null], [874, null], [877, null], [879, null], [880, null], [883, null], [885, null], [886, null], [903, null], [904, null], [906, null], [907, null], [908, null], [912, null], [914, null], [915, null], [917, null], [919, null], [920, null], [923, null], [925, null], [926, null], [927, null], [928, null], [931, null], [933, null], [934, null], [936, null], [938, null], [939, null], [941, null], [943, null], [944, null], [946, null], [948, null], [949, null], [951, null], [953, null], [954, null], [955, null], [957, null], [959, null], [960, null], [961, null], [963, null], [965, null], [966, null], [967, null], [969, null], [971, null], [972, null], [973, null], [975, null], [977, null], [978, null], [979, null], [981, null], [983, null], [984, null], [985, null], [987, null], [989, null], [990, null], [991, null], [993, null], [995, null], [996, null], [997, null], [999, null], [1001, null], [1002, null], [1003, null], [1005, null], [1006, null], [1007, null], [1010, null], [1011, null], [1014, null], [1015, null], [1016, null], [1017, null], [1019, null], [1020, null], [1021, null], [1023, null], [1024, null], [1025, null], [1026, null], [1027, null], [1029, null], [1030, null], [1031, null], [1032, null], [1033, null], [1034, null], [1035, null], [1036, null], [1037, null], [1039, null], [1040, null], [1041, null], [1042, null], [1043, null], [1044, null], [1046, null], [1047, null], [1048, null], [1050, null], [1052, null], [1053, null], [1055, null], [1056, null], [1057, null], [1059, null], [1060, null], [1061, null], [1062, null], [1063, null], [1065, null], [1066, null], [1067, "parameters"], [1068, null], [1069, null], [1070, null], [1071, null], [1072, "parameters"], [1073, null], [1074, null], [1075, null], [1076, null], [1078, null], [1079, null], [1080, null], [1081, null], [1082, null], [1083, null], [1084, null], [1086, null], [1087, null], [1089, null], [1090, null], [1092, null], [1094, null], [1095, null], [1096, null], [1097, null], [1098, null], [1099, null], [1100, null], [1101, null], [1102, null], [1103, null], [1104, null], [1107, null], [1108, null], [1109, null], [1110, null], [1114, null], [1115, null], [1116, null], [1117, null], [1119, null], [1121, null], [1122, null], [1123, null], [1132, null], [1133, null], [1135, "parameters"], [1138, null], [1143, "parameters"], [1149, null], [1169, null], [1170, null], [1171, null], [1173, null], [1178, "parameters"], [1181, null], [1193, null], [1194, null], [1195, null], [1199, "parameters"], [1200, null], [1206, null], [1240, null], [1242, null], [1250, null], [1251, null], [1252, null], [1253, null], [1255, null], [1256, null], [1258, null], [1259, null], [1260, null], [1261, null], [1262, null], [1263, null], [1264, null], [1265, null], [1266, null], [1267, null], [1268, null], [1269, null], [1270, null], [1271, "parameters"], [1275, null], [1277, null], [1279, null], [1281, null], [1282, null], [1285, null], [1286, null], [1287, null], [1289, null], [1291, null], [1292, null], [1293, null], [1294, null], [1295, null], [1296, null], [1318, "parameters"], [1339, null], [1356, null], [1357, null], [1366, "parameters"], [1375, null], [1377, null], [1381, "parameters"], [1390, null], [1392, null], [1394, null], [1397, null], [1398, null], [1399, null], [1400, null], [1402, null], [1404, "parameters"], [1405, "parameters"], [1406, null], [1410, null], [1411, null], [1413, null], [1414, null], [1415, null], [1416, null], [1417, null], [1424, "parameters"], [1425, "parameters"], [1426, "parameters"], [1427, null], [1430, null], [1431, null], [1432, null], [1434, null], [1435, null], [1436, null], [1438, null], [1442, null], [1443, "parameters"], [1444, "parameters"], [1445, null], [1446, null], [1448, null], [1449, null], [1450, null], [1451, null], [1452, null], [1453, null], [1454, null], [1455, null], [1456, null], [1457, null], [1460, null], [1461, null], [1462, null], [1463, null], [1464, null], [1465, null], [1467, null], [1468, null], [1469, null], [1470, null], [1471, null], [1472, null], [1474, null], [1475, null], [1477, null], [1478, null], [1479, null], [1480, null], [1482, null], [1483, null], [1484, null], [1485, null], [1487, null], [1488, null], [1489, null], [1492, null], [1493, null], [1497, null], [1498, null], [1502, null], [1503, null], [1504, null], [1505, null], [1506, null], [1507, null], [1508, null], [1509, null], [1510, null], [1511, "parameters"], [1512, null], [1513, null], [1514, null], [1515, null], [1516, null], [1517, null], [1518, "parameters"], [1519, null], [1520, null], [1523, null], [1524, null], [1525, null], [1526, null], [1528, null], [1529, null], [1530, "parameters"], [1532, null], [1533, null], [1535, null], [1537, null], [1538, null], [1539, null], [1540, null], [1541, null], [1542, null], [1545, null], [1546, null], [1550, null], [1551, null], [1552, null], [1553, null], [1555, null], [1556, null], [1560, null], [1562, null], [1563, null], [1564, null], [1565, null], [1566, null], [1567, null], [1568, null], [1569, null], [1570, null], [1571, null], [1572, null], [1573, null], [1574, null], [1575, null], [1576, null], [1578, null], [1582, null], [1583, null], [1585, null], [1587, null], [1588, null], [1592, null], [1593, null], [1595, null], [1596, null], [1599, null], [1600, null], [1602, null], [1603, null], [1606, null], [1607, null], [1609, null], [1610, null], [1614, null], [1615, null], [1617, null], [1618, null], [1622, null], [1623, null], [1624, null], [1625, null], [1627, null], [1628, null], [1629, null], [1630, null], [1631, null], [1632, null], [1633, null], [1634, null], [1635, null], [1636, null], [1637, null], [1638, null], [1639, null], [1640, null], [1690, null]], "Parmeters": [[1626, null]], "Partial wakes": [[1716, "partial-wakes"]], "Partial wakes verification": [[1725, null]], "Point models": [[1716, "point-models"]], "Power and thrust curves": [[1719, "Power-and-thrust-curves"]], "Power mask": [[1726, null]], "Preparation (optional)": [[1715, "preparation-optional"]], "Public members": [[1, "public-members"], [17, "public-members"], [27, "public-members"], [46, null], [49, null], [53, "public-members"], [59, "public-members"], [63, "public-members"], [67, "public-members"], [72, "public-members"], [76, "public-members"], [81, "public-members"], [85, null], [87, "public-members"], [92, "public-members"], [96, "public-members"], [101, "public-members"], [111, null], [157, "public-members"], [185, null], [187, "public-members"], [195, null], [198, "public-members"], [213, "public-members"], [222, null], [225, "public-members"], [237, "public-members"], [244, "public-members"], [252, null], [253, null], [260, null], [262, "public-members"], [276, "public-members"], [283, null], [289, "public-members"], [296, "public-members"], [306, null], [314, null], [323, "public-members"], [327, null], [329, null], [332, "public-members"], [339, null], [343, "public-members"], [351, "public-members"], [358, null], [364, null], [367, "public-members"], [375, null], [379, "public-members"], [384, null], [386, null], [388, "public-members"], [391, "public-members"], [393, null], [394, null], [396, null], [398, null], [399, null], [400, null], [404, null], [405, null], [406, null], [416, "public-members"], [427, "public-members"], [430, null], [432, "public-members"], [447, null], [449, null], [451, null], [453, "public-members"], [466, null], [468, "public-members"], [477, "public-members"], [485, "public-members"], [496, "public-members"], [512, null], [517, null], [530, "public-members"], [537, "public-members"], [540, "public-members"], [543, null], [544, "public-members"], [550, null], [552, null], [553, "public-members"], [557, "public-members"], [562, null], [564, null], [566, "public-members"], [572, "public-members"], [578, null], [581, "public-members"], [586, null], [589, "public-members"], [593, null], [599, "public-members"], [606, "public-members"], [613, "public-members"], [618, "public-members"], [623, "public-members"], [630, "public-members"], [636, "public-members"], [641, "public-members"], [651, "public-members"], [656, "public-members"], [661, null], [664, null], [667, "public-members"], [672, null], [674, null], [676, "public-members"], [686, null], [692, "public-members"], [702, "public-members"], [712, "public-members"], [714, "public-members"], [722, "public-members"], [731, "public-members"], [735, "public-members"], [739, "public-members"], [743, "public-members"], [747, "public-members"], [751, null], [754, "public-members"], [758, "public-members"], [764, "public-members"], [771, "public-members"], [776, "public-members"], [784, "public-members"], [791, "public-members"], [801, "public-members"], [809, null], [812, "public-members"], [819, null], [822, "public-members"], [829, "public-members"], [837, "public-members"], [845, "public-members"], [853, "public-members"], [854, "public-members"], [862, "public-members"], [869, "public-members"], [876, "public-members"], [882, "public-members"], [888, "public-members"], [911, "public-members"], [916, "public-members"], [922, "public-members"], [930, "public-members"], [935, "public-members"], [940, "public-members"], [945, "public-members"], [950, "public-members"], [956, "public-members"], [962, "public-members"], [968, "public-members"], [974, "public-members"], [980, "public-members"], [986, "public-members"], [992, "public-members"], [998, "public-members"], [1004, "public-members"], [1009, "public-members"], [1018, "public-members"], [1038, null], [1045, "public-members"], [1051, "public-members"], [1054, "public-members"], [1058, null], [1064, "public-members"], [1067, "public-members"], [1072, "public-members"], [1077, "public-members"], [1085, "public-members"], [1088, "public-members"], [1091, null], [1093, "public-members"], [1097, "public-members"], [1105, "public-members"], [1111, "public-members"], [1118, "public-members"], [1127, "public-members"], [1134, null], [1135, null], [1143, null], [1178, null], [1199, null], [1208, null], [1220, null], [1230, null], [1559, "public-members"], [1577, null], [1584, null], [1586, "public-members"], [1594, "public-members"], [1601, "public-members"], [1608, "public-members"], [1616, null]], "Raises": [[1538, "raises"]], "References": [[1277, "references"], [1285, "references"], [1434, "references"]], "Remarks & recommendations": [[1724, "Remarks-&-recommendations"]], "Requirements": [[1715, "requirements"]], "Returns": [[4, "returns"], [5, "returns"], [6, null], [7, "returns"], [8, null], [11, null], [12, null], [13, null], [14, null], [15, null], [16, null], [19, "returns"], [20, null], [21, null], [22, "returns"], [24, null], [26, null], [31, null], [32, "returns"], [33, null], [34, null], [35, null], [36, null], [37, null], [38, "returns"], [39, "returns"], [40, null], [41, null], [42, null], [43, null], [44, "returns"], [45, null], [47, "returns"], [48, "returns"], [51, "returns"], [52, "returns"], [57, "returns"], [58, null], [61, "returns"], [62, "returns"], [65, "returns"], [66, "returns"], [69, "returns"], [71, "returns"], [74, "returns"], [75, null], [79, "returns"], [80, null], [83, "returns"], [84, null], [89, "returns"], [90, "returns"], [91, null], [94, "returns"], [95, "returns"], [103, "returns"], [104, null], [105, null], [107, "returns"], [108, null], [109, null], [110, "returns"], [113, null], [114, null], [115, null], [116, null], [117, "returns"], [118, "returns"], [161, "returns"], [162, "returns"], [163, null], [164, null], [166, null], [167, null], [169, "returns"], [170, "returns"], [172, "returns"], [173, null], [174, null], [176, null], [178, "returns"], [180, "returns"], [186, "returns"], [190, "returns"], [191, "returns"], [192, null], [193, null], [194, "returns"], [196, "returns"], [197, null], [201, "returns"], [202, "returns"], [203, null], [205, "returns"], [207, null], [208, null], [211, "returns"], [212, "returns"], [216, "returns"], [217, null], [218, "returns"], [219, null], [220, null], [221, "returns"], [224, "returns"], [227, "returns"], [231, "returns"], [232, null], [233, null], [234, "returns"], [236, null], [239, "returns"], [241, null], [242, "returns"], [243, "returns"], [248, "returns"], [250, "returns"], [251, null], [256, "returns"], [258, "returns"], [259, "returns"], [268, null], [269, "returns"], [270, null], [271, null], [273, null], [275, "returns"], [277, "returns"], [279, "returns"], [280, "returns"], [282, "returns"], [284, "returns"], [286, null], [287, null], [288, "returns"], [293, "returns"], [294, "returns"], [295, null], [298, "returns"], [299, null], [301, "returns"], [302, null], [304, "returns"], [305, null], [307, null], [308, "returns"], [310, "returns"], [312, null], [313, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, null], [320, null], [321, null], [322, "returns"], [328, null], [330, "returns"], [336, null], [337, null], [340, "returns"], [341, null], [345, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [349, "returns"], [352, "returns"], [356, null], [359, null], [363, "returns"], [365, "returns"], [366, "returns"], [370, null], [371, null], [372, "returns"], [373, null], [377, "returns"], [378, "returns"], [381, "returns"], [385, "returns"], [387, "returns"], [390, "returns"], [395, "returns"], [397, "returns"], [403, "returns"], [407, "returns"], [418, "returns"], [419, null], [420, null], [421, "returns"], [422, "returns"], [424, null], [426, "returns"], [429, "returns"], [436, "returns"], [437, null], [439, null], [440, "returns"], [441, "returns"], [444, null], [446, "returns"], [457, "returns"], [458, null], [460, "returns"], [462, null], [463, null], [465, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [474, null], [476, "returns"], [479, "returns"], [481, "returns"], [482, null], [483, null], [484, "returns"], [487, "returns"], [488, null], [489, null], [490, "returns"], [491, "returns"], [493, null], [495, "returns"], [499, "returns"], [500, null], [502, null], [504, "returns"], [505, "returns"], [508, null], [509, null], [511, "returns"], [514, "returns"], [519, "returns"], [520, "returns"], [524, "returns"], [525, "returns"], [526, "returns"], [528, "returns"], [529, "returns"], [533, "returns"], [535, "returns"], [539, "returns"], [542, "returns"], [547, "returns"], [548, "returns"], [549, null], [560, "returns"], [563, "returns"], [569, "returns"], [570, "returns"], [571, null], [574, "returns"], [577, null], [579, "returns"], [580, "returns"], [583, "returns"], [584, "returns"], [585, "returns"], [587, "returns"], [588, "returns"], [591, "returns"], [592, "returns"], [594, null], [596, "returns"], [597, null], [598, null], [602, null], [604, null], [605, null], [609, null], [611, null], [612, null], [616, "returns"], [617, "returns"], [620, "returns"], [621, "returns"], [622, "returns"], [626, "returns"], [628, "returns"], [629, null], [632, "returns"], [634, "returns"], [635, null], [638, "returns"], [640, "returns"], [644, "returns"], [646, "returns"], [647, "returns"], [653, "returns"], [655, "returns"], [659, "returns"], [660, "returns"], [662, "returns"], [663, "returns"], [665, "returns"], [666, "returns"], [670, "returns"], [671, "returns"], [679, "returns"], [682, null], [683, null], [684, "returns"], [685, null], [688, "returns"], [689, null], [690, null], [691, "returns"], [695, "returns"], [697, "returns"], [699, null], [700, null], [701, "returns"], [705, "returns"], [707, "returns"], [709, null], [710, null], [711, "returns"], [716, "returns"], [718, "returns"], [719, null], [720, null], [721, "returns"], [725, "returns"], [727, "returns"], [728, null], [729, null], [730, "returns"], [733, "returns"], [734, null], [737, "returns"], [738, null], [741, "returns"], [742, null], [745, "returns"], [746, null], [749, "returns"], [750, null], [752, "returns"], [753, null], [756, "returns"], [757, null], [761, "returns"], [762, "returns"], [766, "returns"], [767, "returns"], [768, "returns"], [770, null], [773, "returns"], [774, "returns"], [775, "returns"], [779, "returns"], [780, "returns"], [781, "returns"], [782, "returns"], [787, "returns"], [788, "returns"], [789, "returns"], [790, "returns"], [794, "returns"], [796, "returns"], [797, "returns"], [804, "returns"], [805, "returns"], [806, "returns"], [808, null], [810, "returns"], [811, "returns"], [814, "returns"], [818, null], [820, "returns"], [821, "returns"], [824, "returns"], [825, "returns"], [826, "returns"], [828, null], [835, "returns"], [836, null], [843, "returns"], [844, null], [851, "returns"], [852, null], [861, null], [865, "returns"], [866, "returns"], [867, "returns"], [868, null], [872, "returns"], [873, "returns"], [874, "returns"], [875, null], [879, "returns"], [881, null], [885, "returns"], [887, null], [906, "returns"], [907, "returns"], [909, null], [910, null], [914, "returns"], [915, "returns"], [919, "returns"], [921, null], [925, "returns"], [928, "returns"], [929, null], [933, "returns"], [934, "returns"], [938, "returns"], [939, "returns"], [943, "returns"], [944, "returns"], [948, "returns"], [949, "returns"], [953, "returns"], [954, "returns"], [955, "returns"], [959, "returns"], [960, "returns"], [961, "returns"], [965, "returns"], [966, "returns"], [967, "returns"], [971, "returns"], [972, "returns"], [973, "returns"], [977, "returns"], [978, "returns"], [979, "returns"], [983, "returns"], [984, "returns"], [985, "returns"], [989, "returns"], [990, "returns"], [991, "returns"], [995, "returns"], [996, "returns"], [997, "returns"], [1001, "returns"], [1002, "returns"], [1003, "returns"], [1007, "returns"], [1008, null], [1011, "returns"], [1012, null], [1013, null], [1022, null], [1023, "returns"], [1024, "returns"], [1025, "returns"], [1026, "returns"], [1027, "returns"], [1029, "returns"], [1030, "returns"], [1031, "returns"], [1032, "returns"], [1034, "returns"], [1035, "returns"], [1036, "returns"], [1037, "returns"], [1042, "returns"], [1043, "returns"], [1044, "returns"], [1047, "returns"], [1053, "returns"], [1060, "returns"], [1061, "returns"], [1062, "returns"], [1063, "returns"], [1066, "returns"], [1079, "returns"], [1080, "returns"], [1081, "returns"], [1082, "returns"], [1083, "returns"], [1084, "returns"], [1087, "returns"], [1090, "returns"], [1095, "returns"], [1103, "returns"], [1104, "returns"], [1108, "returns"], [1109, "returns"], [1110, "returns"], [1121, "returns"], [1122, "returns"], [1123, "returns"], [1124, null], [1125, null], [1126, null], [1132, "returns"], [1134, "returns"], [1134, "id1"], [1134, "id2"], [1134, "id3"], [1134, "id4"], [1134, "id5"], [1134, "id6"], [1134, "id7"], [1169, "returns"], [1170, "returns"], [1171, "returns"], [1173, "returns"], [1193, "returns"], [1194, "returns"], [1195, "returns"], [1206, "returns"], [1240, "returns"], [1242, "returns"], [1250, "returns"], [1251, "returns"], [1253, "returns"], [1258, "returns"], [1259, "returns"], [1260, "returns"], [1261, "returns"], [1262, "returns"], [1263, "returns"], [1265, "returns"], [1266, "returns"], [1267, "returns"], [1269, "returns"], [1270, "returns"], [1271, "returns"], [1277, "returns"], [1279, "returns"], [1285, "returns"], [1289, "returns"], [1291, "returns"], [1292, "returns"], [1293, "returns"], [1294, "returns"], [1295, "returns"], [1296, "returns"], [1312, null], [1339, "returns"], [1342, null], [1343, null], [1344, null], [1345, null], [1349, null], [1356, "returns"], [1357, "returns"], [1364, null], [1365, null], [1370, null], [1372, null], [1375, "returns"], [1377, "returns"], [1379, null], [1380, null], [1385, null], [1387, null], [1390, "returns"], [1392, "returns"], [1397, "returns"], [1398, "returns"], [1399, "returns"], [1400, "returns"], [1402, "returns"], [1404, "returns"], [1405, "returns"], [1406, "returns"], [1414, "returns"], [1415, "returns"], [1416, "returns"], [1417, "returns"], [1424, "returns"], [1425, "returns"], [1426, "returns"], [1427, "returns"], [1430, "returns"], [1431, "returns"], [1432, "returns"], [1434, "returns"], [1435, "returns"], [1442, "returns"], [1443, "returns"], [1444, "returns"], [1445, "returns"], [1446, "returns"], [1484, "returns"], [1498, "returns"], [1502, "returns"], [1508, "returns"], [1511, "returns"], [1515, "returns"], [1518, "returns"], [1523, "returns"], [1524, "returns"], [1525, "returns"], [1526, "returns"], [1529, "returns"], [1530, "returns"], [1532, "returns"], [1533, "returns"], [1535, "returns"], [1539, "returns"], [1540, "returns"], [1542, "returns"], [1543, null], [1544, null], [1550, "returns"], [1551, "returns"], [1552, "returns"], [1555, "returns"], [1562, "returns"], [1563, "returns"], [1564, "returns"], [1565, "returns"], [1566, "returns"], [1567, "returns"], [1568, "returns"], [1569, "returns"], [1570, "returns"], [1571, "returns"], [1572, "returns"], [1573, "returns"], [1574, "returns"], [1575, "returns"], [1576, "returns"], [1579, null], [1580, null], [1581, null], [1582, "returns"], [1583, "returns"], [1589, null], [1590, null], [1591, null], [1592, "returns"], [1593, "returns"], [1597, null], [1598, null], [1599, "returns"], [1600, "returns"], [1604, null], [1605, null], [1606, "returns"], [1607, "returns"], [1611, null], [1612, null], [1613, null], [1614, "returns"], [1615, "returns"], [1619, null], [1620, null], [1621, null], [1622, "returns"], [1623, "returns"], [1624, "returns"], [1625, "returns"], [1627, "returns"], [1628, "returns"], [1629, "returns"], [1630, "returns"], [1632, "returns"], [1633, "returns"], [1634, "returns"], [1635, "returns"], [1636, "returns"], [1637, "returns"], [1638, "returns"], [1639, "returns"], [1690, "returns"]], "Rotor model visualizations": [[1727, null]], "Rotor models": [[1716, "rotor-models"]], "See Also": [[1242, "see-also"], [1250, "see-also"], [1251, "see-also"], [1252, "see-also"], [1258, "see-also"], [1259, "see-also"], [1260, "see-also"], [1261, "see-also"], [1262, "see-also"], [1263, "see-also"], [1267, "see-also"], [1269, "see-also"], [1271, "see-also"], [1285, "see-also"], [1294, "see-also"], [1295, "see-also"], [1298, "see-also"], [1302, null], [1305, null], [1312, "see-also"], [1313, null], [1318, "see-also"], [1338, null], [1356, "see-also"], [1362, null], [1367, null], [1370, "see-also"], [1372, "see-also"], [1382, null], [1385, "see-also"], [1387, "see-also"], [1397, "see-also"], [1398, "see-also"], [1399, "see-also"], [1400, "see-also"], [1402, "see-also"], [1407, null], [1408, null], [1415, "see-also"], [1417, "see-also"], [1423, null], [1424, "see-also"], [1426, "see-also"], [1427, "see-also"], [1428, null], [1429, null], [1431, "see-also"], [1432, "see-also"], [1434, "see-also"], [1435, "see-also"], [1440, null], [1442, "see-also"], [1448, "see-also"], [1451, "see-also"], [1453, "see-also"], [1460, "see-also"], [1461, "see-also"], [1468, "see-also"], [1474, "see-also"], [1475, "see-also"], [1479, "see-also"], [1480, "see-also"], [1484, "see-also"], [1486, null], [1498, "see-also"], [1506, "see-also"], [1507, "see-also"], [1508, "see-also"], [1513, "see-also"], [1514, "see-also"], [1515, "see-also"], [1523, "see-also"], [1550, "see-also"], [1551, "see-also"], [1552, "see-also"]], "See also": [[1529, null]], "Sequential algorithm": [[1696, null]], "Sequential algorithm models": [[1696, "sequential-algorithm-models"]], "Sequential wake propagation": [[1729, "Sequential-wake-propagation"]], "Single row of turbines": [[1730, null]], "Standard users": [[1715, "standard-users"], [1715, "id4"]], "Static data": [[1719, null]], "TLDR; Quick installation guide": [[1715, "tldr-quick-installation-guide"]], "Testing": [[1737, null]], "The model book": [[1722, null]], "Timeseries data": [[1732, null]], "Turbine models": [[1716, "turbine-models"]], "Turbine types": [[1716, "turbine-types"]], "Version specific DOI": [[1711, "version-specific-doi"]], "Vertical profiles": [[1716, "vertical-profiles"]], "Virtual Python environment": [[1715, "virtual-python-environment"], [1715, "id3"]], "WRF-Timeseries-4464.csv.gz": [[1719, "WRF-Timeseries-4464.csv.gz"]], "Wake frames": [[1716, "wake-frames"]], "Wake models": [[1716, "wake-models"]], "Wake propagation in heterogeneous backgrounds": [[1720, "Wake-propagation-in-heterogeneous-backgrounds"]], "Warning": [[1425, null], [1476, null], [1484, null], [1498, null], [1511, null], [1518, null]], "Warnings": [[1404, null], [1405, null], [1443, null], [1444, null]], "Welcome to FOXES": [[1713, null]], "Wind farm blockage": [[1718, "Wind-farm-blockage"]], "Wind farm layout data": [[1719, "Wind-farm-layout-data"]], "Wind farm layouts": [[1714, "wind-farm-layouts"]], "Wind rose data": [[1733, null]], "Wind sector management": [[1728, null]], "Yawed rotor wakes": [[1734, null]], "Yields": [[1033, "yields"], [1039, "yields"], [1040, "yields"], [1041, "yields"], [1069, "yields"], [1074, "yields"], [1096, "yields"]], "abl_states_6000.csv.gz": [[1719, "abl_states_6000.csv.gz"]], "foxes": [[1702, null]], "foxes.algorithms": [[1693, null]], "foxes.config": [[1697, null]], "foxes.constants": [[1698, null]], "foxes.core": [[1699, null]], "foxes.data": [[1700, null]], "foxes.engines": [[1701, null]], "foxes.input": [[1703, null]], "foxes.input.farm_layout": [[1703, "foxes-input-farm-layout"]], "foxes.input.states": [[1703, "foxes-input-states"]], "foxes.input.states.create": [[1703, "foxes-input-states-create"]], "foxes.input.yaml": [[1703, "foxes-input-yaml"]], "foxes.input.yaml.windio": [[1703, "foxes-input-yaml-windio"]], "foxes.models": [[1704, null]], "foxes.models.axial_induction": [[1704, "foxes-models-axial-induction"]], "foxes.models.farm_controllers": [[1704, "foxes-models-farm-controllers"]], "foxes.models.farm_models": [[1704, "foxes-models-farm-models"]], "foxes.models.ground_models": [[1704, "foxes-models-ground-models"]], "foxes.models.partial_wakes": [[1704, "foxes-models-partial-wakes"]], "foxes.models.point_models": [[1704, "foxes-models-point-models"]], "foxes.models.rotor_models": [[1704, "foxes-models-rotor-models"]], "foxes.models.turbine_models": [[1704, "foxes-models-turbine-models"]], "foxes.models.turbine_types": [[1704, "foxes-models-turbine-types"]], "foxes.models.vertical_profiles": [[1704, "foxes-models-vertical-profiles"]], "foxes.models.wake_frames": [[1704, "foxes-models-wake-frames"]], "foxes.models.wake_models": [[1704, "foxes-models-wake-models"], [1709, null]], "foxes.models.wake_models.induction": [[1709, "foxes-models-wake-models-induction"]], "foxes.models.wake_models.ti": [[1709, "foxes-models-wake-models-ti"]], "foxes.models.wake_models.wind": [[1709, "foxes-models-wake-models-wind"]], "foxes.models.wake_superpositions": [[1704, "foxes-models-wake-superpositions"]], "foxes.output": [[1705, null]], "foxes.output.flow_plots_2d": [[1705, "foxes-output-flow-plots-2d"]], "foxes.output.seq_plugins": [[1705, "foxes-output-seq-plugins"]], "foxes.utils": [[1706, null]], "foxes.utils.abl": [[1706, "foxes-utils-abl"]], "foxes.utils.abl.neutral": [[1707, null]], "foxes.utils.abl.sheared": [[1707, "foxes-utils-abl-sheared"]], "foxes.utils.abl.stable": [[1707, "foxes-utils-abl-stable"]], "foxes.utils.abl.unstable": [[1707, "foxes-utils-abl-unstable"]], "foxes.utils.geom2d": [[1706, "foxes-utils-geom2d"]], "foxes.utils.runners": [[1706, "foxes-utils-runners"]], "foxes.utils.two_circles": [[1706, "foxes-utils-two-circles"]], "foxes.variables": [[1708, null]], "foxes_windio": [[1710, "foxes-windio"]], "foxes_yaml": [[1710, "foxes-yaml"]], "grid100": [[1727, "grid100"]], "grid16": [[1727, "grid16"]], "grid25": [[1727, "grid25"]], "grid25_raw": [[1727, "grid25_raw"]], "grid36": [[1727, "grid36"]], "grid4": [[1727, "grid4"]], "grid400": [[1727, "grid400"]], "grid9": [[1727, "grid9"]], "level10": [[1727, "level10"]], "level2": [[1727, "level2"]], "level20": [[1727, "level20"]], "level3": [[1727, "level3"]], "level5": [[1727, "level5"]], "level5_raw": [[1727, "level5_raw"]], "test_farm_67.csv": [[1719, "test_farm_67.csv"]], "timeseries_100.csv.gz": [[1719, "timeseries_100.csv.gz"]], "timeseries_3000.csv.gz": [[1719, "timeseries_3000.csv.gz"]], "timeseries_8000.csv.gz": [[1719, "timeseries_8000.csv.gz"]], "v0.1.0-alpha": [[0, "v0-1-0-alpha"]], "v0.1.1-alpha": [[0, "v0-1-1-alpha"]], "v0.1.2-alpha": [[0, "v0-1-2-alpha"]], "v0.1.3-alpha": [[0, "v0-1-3-alpha"]], "v0.1.4-alpha": [[0, "v0-1-4-alpha"]], "v0.2.0-alpha": [[0, "v0-2-0-alpha"]], "v0.2.1-alpha": [[0, "v0-2-1-alpha"]], "v0.2.2-alpha": [[0, "v0-2-2-alpha"]], "v0.2.3-alpha": [[0, "v0-2-3-alpha"]], "v0.2.4-alpha": [[0, "v0-2-4-alpha"]], "v0.2.5-alpha": [[0, "v0-2-5-alpha"]], "v0.2.6-alpha": [[0, "v0-2-6-alpha"]], "v0.3.0-alpha": [[0, "v0-3-0-alpha"]], "v0.3.1-alpha": [[0, "v0-3-1-alpha"]], "v0.3.2-alpha": [[0, "v0-3-2-alpha"]], "v0.3.3-alpha": [[0, "v0-3-3-alpha"]], "v0.3.4-alpha": [[0, "v0-3-4-alpha"]], "v0.3.5-alpha": [[0, "v0-3-5-alpha"]], "v0.4.0": [[0, "v0-4-0"]], "v0.4.1": [[0, "v0-4-1"]], "v0.4.2": [[0, "v0-4-2"]], "v0.4.3": [[0, "v0-4-3"]], "v0.4.4": [[0, "v0-4-4"]], "v0.4.5": [[0, "v0-4-5"]], "v0.5": [[0, "v0-5"]], "v0.5.1": [[0, "v0-5-1"]], "v0.5.2": [[0, "v0-5-2"]], "v0.5.2.1": [[0, "v0-5-2-1"]], "v0.6": [[0, "v0-6"]], "v0.6.1": [[0, "v0-6-1"]], "v0.6.2": [[0, "v0-6-2"]], "v0.7": [[0, "v0-7"]], "v0.7.1": [[0, "v0-7-1"]], "v0.7.2": [[0, "v0-7-2"]], "v0.7.3": [[0, "v0-7-3"]], "v0.7.4": [[0, "v0-7-4"]], "v0.8": [[0, "v0-8"]], "v0.8.1": [[0, "v0-8-1"]], "v0.8.2": [[0, "v0-8-2"]], "v0.8.3": [[0, "v0-8-3"]], "v1.0": [[0, "v1-0"]], "v1.1": [[0, "v1-1"]], "v1.1.1": [[0, "v1-1-1"]], "v1.2": [[0, "v1-2"]], "wind_rose_bremen.csv": [[1719, "wind_rose_bremen.csv"]], "wind_rotation.nc": [[1719, "wind_rotation.nc"]]}, "docurls": ["CHANGELOG.html", "_foxes/algorithms/Downwind.html", "_foxes/algorithms/Downwind.DEFAULT_FARM_OUTPUTS.html", "_foxes/algorithms/Downwind.__init__.html", "_foxes/algorithms/Downwind.calc_farm.html", "_foxes/algorithms/Downwind.calc_points.html", "_foxes/algorithms/Downwind.farm_controller.html", "_foxes/algorithms/Downwind.get_model.html", "_foxes/algorithms/Downwind.ground_models.html", "_foxes/algorithms/Downwind.init_states.html", "_foxes/algorithms/Downwind.initialize.html", "_foxes/algorithms/Downwind.partial_wakes.html", "_foxes/algorithms/Downwind.rotor_model.html", "_foxes/algorithms/Downwind.states.html", "_foxes/algorithms/Downwind.sub_models.html", "_foxes/algorithms/Downwind.wake_frame.html", "_foxes/algorithms/Downwind.wake_models.html", "_foxes/algorithms/Iterative.html", "_foxes/algorithms/Iterative.__init__.html", "_foxes/algorithms/Iterative.calc_farm.html", "_foxes/algorithms/Iterative.farm_results_downwind.html", "_foxes/algorithms/Iterative.final_iteration.html", "_foxes/algorithms/Iterative.get_model.html", "_foxes/algorithms/Iterative.initialize.html", "_foxes/algorithms/Iterative.iterations.html", "_foxes/algorithms/Iterative.set_urelax.html", "_foxes/algorithms/Iterative.urelax.html", "_foxes/algorithms/Sequential.html", "_foxes/algorithms/Sequential.__init__.html", "_foxes/algorithms/Sequential.__iter__.html", "_foxes/algorithms/Sequential.__next__.html", "_foxes/algorithms/Sequential.calc_farm.html", "_foxes/algorithms/Sequential.calc_points.html", "_foxes/algorithms/Sequential.counter.html", "_foxes/algorithms/Sequential.cur_farm_results.html", "_foxes/algorithms/Sequential.cur_point_results.html", "_foxes/algorithms/Sequential.farm_results.html", "_foxes/algorithms/Sequential.farm_results_downwind.html", "_foxes/algorithms/Sequential.get_model.html", "_foxes/algorithms/Sequential.get_models_data.html", "_foxes/algorithms/Sequential.index.html", "_foxes/algorithms/Sequential.iterating.html", "_foxes/algorithms/Sequential.point_results.html", "_foxes/algorithms/Sequential.size.html", "_foxes/algorithms/Sequential.states_i0.html", "_foxes/algorithms/Sequential.weight.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/downwind/models/InitFarmData.html", "_foxes/algorithms/downwind/models/InitFarmData.__init__.html", "_foxes/algorithms/downwind/models/InitFarmData.calculate.html", "_foxes/algorithms/downwind/models/InitFarmData.output_farm_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.__init__.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.calculate.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.initialize.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.output_point_vars.html", "_foxes/algorithms/downwind/models/PointWakesCalculation.sub_models.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.__init__.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.calculate.html", "_foxes/algorithms/downwind/models/ReorderFarmOutput.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbFarmResults.output_farm_vars.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.__init__.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.calculate.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.initialize.html", "_foxes/algorithms/downwind/models/SetAmbPointResults.output_point_vars.html", "_foxes/algorithms/iterative/ConvCrit.html", "_foxes/algorithms/iterative/ConvCrit.__init__.html", "_foxes/algorithms/iterative/ConvCrit.check_converged.html", "_foxes/algorithms/iterative/ConvCrit.get_deltas.html", "_foxes/algorithms/iterative/ConvCritList.html", "_foxes/algorithms/iterative/ConvCritList.__init__.html", "_foxes/algorithms/iterative/ConvCritList.add_crit.html", "_foxes/algorithms/iterative/ConvCritList.check_converged.html", "_foxes/algorithms/iterative/ConvCritList.get_deltas.html", "_foxes/algorithms/iterative/ConvVarDelta.html", "_foxes/algorithms/iterative/ConvVarDelta.__init__.html", "_foxes/algorithms/iterative/ConvVarDelta.check_converged.html", "_foxes/algorithms/iterative/ConvVarDelta.get_deltas.html", "_foxes/algorithms/iterative/DefaultConv.html", "_foxes/algorithms/iterative/DefaultConv.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.__init__.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.calculate.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.output_farm_vars.html", "_foxes/algorithms/iterative/models/FarmWakesCalculation.sub_models.html", "_foxes/algorithms/iterative/models/URelax.html", "_foxes/algorithms/iterative/models/URelax.__init__.html", "_foxes/algorithms/iterative/models/URelax.calculate.html", "_foxes/algorithms/iterative/models/URelax.output_farm_vars.html", "_foxes/algorithms/sequential/SequentialPlugin.html", "_foxes/algorithms/sequential/SequentialPlugin.__init__.html", "_foxes/algorithms/sequential/SequentialPlugin.finalize.html", "_foxes/algorithms/sequential/SequentialPlugin.initialize.html", "_foxes/algorithms/sequential/SequentialPlugin.update.html", "_foxes/algorithms/sequential/models/SeqState.html", "_foxes/algorithms/sequential/models/SeqState.__init__.html", "_foxes/algorithms/sequential/models/SeqState.calculate.html", "_foxes/algorithms/sequential/models/SeqState.counter.html", "_foxes/algorithms/sequential/models/SeqState.index.html", "_foxes/algorithms/sequential/models/SeqState.initialize.html", "_foxes/algorithms/sequential/models/SeqState.output_point_vars.html", "_foxes/algorithms/sequential/models/SeqState.size.html", "_foxes/algorithms/sequential/models/SeqState.sub_models.html", "_foxes/algorithms/sequential/models/SeqState.weights.html", "_foxes/config/Config.html", "_foxes/config/Config.__init__.html", "_foxes/config/Config.dtype_double.html", "_foxes/config/Config.dtype_int.html", "_foxes/config/Config.out_dir.html", "_foxes/config/Config.work_dir.html", "_foxes/config/get_output_path.html", "_foxes/config/get_path.html", "_foxes/constants/AMB_ROTOR_RES.html", "_foxes/constants/BLOCK_CONVERGENCE.html", "_foxes/constants/DTYPE.html", "_foxes/constants/FARM.html", "_foxes/constants/GW.html", "_foxes/constants/ITYPE.html", "_foxes/constants/KAPPA.html", "_foxes/constants/MW.html", "_foxes/constants/OUT_DIR.html", "_foxes/constants/POINT.html", "_foxes/constants/POINTS.html", "_foxes/constants/POP.html", "_foxes/constants/P_UNITS.html", "_foxes/constants/ROTOR_POINTS.html", "_foxes/constants/ROTOR_WEIGHTS.html", "_foxes/constants/STATE.html", "_foxes/constants/STATES_SEL.html", "_foxes/constants/STATE_SOURCE_ORDERI.html", "_foxes/constants/STATE_TARGET.html", "_foxes/constants/STATE_TARGET_TPOINT.html", "_foxes/constants/STATE_TURBINE.html", "_foxes/constants/TARGET.html", "_foxes/constants/TARGETS.html", "_foxes/constants/TIME.html", "_foxes/constants/TMODELS.html", "_foxes/constants/TMODEL_SELS.html", "_foxes/constants/TNAME.html", "_foxes/constants/TPOINT.html", "_foxes/constants/TPOINTS.html", "_foxes/constants/TURBINE.html", "_foxes/constants/TW.html", "_foxes/constants/TWEIGHTS.html", "_foxes/constants/VALID.html", "_foxes/constants/VARS.html", "_foxes/constants/W.html", "_foxes/constants/WORK_DIR.html", "_foxes/constants/XYH.html", "_foxes/constants/kW.html", "_foxes/core/Algorithm.html", "_foxes/core/Algorithm.__init__.html", "_foxes/core/Algorithm.add_to_chunk_store.html", "_foxes/core/Algorithm.block_convergence.html", "_foxes/core/Algorithm.calc_farm.html", "_foxes/core/Algorithm.calc_points.html", "_foxes/core/Algorithm.chunk_store.html", "_foxes/core/Algorithm.dbook.html", "_foxes/core/Algorithm.del_model_data.html", "_foxes/core/Algorithm.eval_conv_block.html", "_foxes/core/Algorithm.farm.html", "_foxes/core/Algorithm.finalize.html", "_foxes/core/Algorithm.find_chunk_in_store.html", "_foxes/core/Algorithm.get_from_chunk_store.html", "_foxes/core/Algorithm.get_model_data.html", "_foxes/core/Algorithm.get_models_data.html", "_foxes/core/Algorithm.get_models_idata.html", "_foxes/core/Algorithm.idata_mem.html", "_foxes/core/Algorithm.initialize.html", "_foxes/core/Algorithm.mbook.html", "_foxes/core/Algorithm.new.html", "_foxes/core/Algorithm.new_point_data.html", "_foxes/core/Algorithm.print.html", "_foxes/core/Algorithm.reset_chunk_store.html", "_foxes/core/Algorithm.set_running.html", "_foxes/core/Algorithm.store_model_data.html", "_foxes/core/Algorithm.unset_running.html", "_foxes/core/Algorithm.update_n_turbines.html", "_foxes/core/AxialInductionModel.html", "_foxes/core/AxialInductionModel.ct2a.html", "_foxes/core/Data.html", "_foxes/core/Data.__init__.html", "_foxes/core/Data.add.html", "_foxes/core/Data.from_dataset.html", "_foxes/core/Data.get_slice.html", "_foxes/core/Data.n_states.html", "_foxes/core/Data.n_turbines.html", "_foxes/core/Data.states_i0.html", "_foxes/core/DataCalcModel.html", "_foxes/core/DataCalcModel.calculate.html", "_foxes/core/DataCalcModel.output_coords.html", "_foxes/core/Engine.html", "_foxes/core/Engine.__init__.html", "_foxes/core/Engine.__repr__.html", "_foxes/core/Engine.calc_chunk_sizes.html", "_foxes/core/Engine.combine_results.html", "_foxes/core/Engine.entered.html", "_foxes/core/Engine.finalize.html", "_foxes/core/Engine.get_chunk_input_data.html", "_foxes/core/Engine.initialize.html", "_foxes/core/Engine.initialized.html", "_foxes/core/Engine.loop_dims.html", "_foxes/core/Engine.new.html", "_foxes/core/Engine.print.html", "_foxes/core/Engine.run_calculation.html", "_foxes/core/Engine.select_subsets.html", "_foxes/core/ExtendedStates.html", "_foxes/core/ExtendedStates.__init__.html", "_foxes/core/ExtendedStates.append.html", "_foxes/core/ExtendedStates.calculate.html", "_foxes/core/ExtendedStates.index.html", "_foxes/core/ExtendedStates.output_point_vars.html", "_foxes/core/ExtendedStates.size.html", "_foxes/core/ExtendedStates.sub_models.html", "_foxes/core/ExtendedStates.weights.html", "_foxes/core/FData.html", "_foxes/core/FData.__init__.html", "_foxes/core/FData.from_dataset.html", "_foxes/core/FarmController.html", "_foxes/core/FarmController.__init__.html", "_foxes/core/FarmController.calculate.html", "_foxes/core/FarmController.collect_models.html", "_foxes/core/FarmController.finalize.html", "_foxes/core/FarmController.initialize.html", "_foxes/core/FarmController.load_data.html", "_foxes/core/FarmController.needs_rews2.html", "_foxes/core/FarmController.needs_rews3.html", "_foxes/core/FarmController.output_farm_vars.html", "_foxes/core/FarmController.set_pars.html", "_foxes/core/FarmController.sub_models.html", "_foxes/core/FarmDataModel.html", "_foxes/core/FarmDataModel.__init__.html", "_foxes/core/FarmDataModel.calculate.html", "_foxes/core/FarmDataModel.ensure_variables.html", "_foxes/core/FarmDataModel.output_coords.html", "_foxes/core/FarmDataModel.output_farm_vars.html", "_foxes/core/FarmDataModel.run_calculation.html", "_foxes/core/FarmDataModelList.html", "_foxes/core/FarmDataModelList.__init__.html", "_foxes/core/FarmDataModelList.__repr__.html", "_foxes/core/FarmDataModelList.append.html", "_foxes/core/FarmDataModelList.calculate.html", "_foxes/core/FarmDataModelList.insert.html", "_foxes/core/FarmDataModelList.output_farm_vars.html", "_foxes/core/FarmDataModelList.sub_models.html", "_foxes/core/FarmModel.html", "_foxes/core/GroundModel.html", "_foxes/core/GroundModel.contribute_to_farm_wakes.html", "_foxes/core/GroundModel.contribute_to_point_wakes.html", "_foxes/core/GroundModel.finalize_farm_wakes.html", "_foxes/core/GroundModel.finalize_point_wakes.html", "_foxes/core/GroundModel.new_farm_wake_deltas.html", "_foxes/core/GroundModel.new_point_wake_deltas.html", "_foxes/core/MData.html", "_foxes/core/MData.__init__.html", "_foxes/core/Model.html", "_foxes/core/Model.__init__.html", "_foxes/core/Model.__repr__.html", "_foxes/core/Model.finalize.html", "_foxes/core/Model.get_data.html", "_foxes/core/Model.initialize.html", "_foxes/core/Model.initialized.html", "_foxes/core/Model.load_data.html", "_foxes/core/Model.model_id.html", "_foxes/core/Model.running.html", "_foxes/core/Model.set_running.html", "_foxes/core/Model.sub_models.html", "_foxes/core/Model.unset_running.html", "_foxes/core/Model.var.html", "_foxes/core/PartialWakesModel.html", "_foxes/core/PartialWakesModel.check_wmodel.html", "_foxes/core/PartialWakesModel.contribute.html", "_foxes/core/PartialWakesModel.finalize_wakes.html", "_foxes/core/PartialWakesModel.get_wake_points.html", "_foxes/core/PartialWakesModel.new.html", "_foxes/core/PartialWakesModel.new_wake_deltas.html", "_foxes/core/PointDataModel.html", "_foxes/core/PointDataModel.calculate.html", "_foxes/core/PointDataModel.ensure_variables.html", "_foxes/core/PointDataModel.output_coords.html", "_foxes/core/PointDataModel.output_point_vars.html", "_foxes/core/PointDataModel.run_calculation.html", "_foxes/core/PointDataModelList.html", "_foxes/core/PointDataModelList.__init__.html", "_foxes/core/PointDataModelList.__repr__.html", "_foxes/core/PointDataModelList.append.html", "_foxes/core/PointDataModelList.calculate.html", "_foxes/core/PointDataModelList.output_point_vars.html", "_foxes/core/PointDataModelList.sub_models.html", "_foxes/core/RotorModel.html", "_foxes/core/RotorModel.__init__.html", "_foxes/core/RotorModel.calculate.html", "_foxes/core/RotorModel.design_points.html", "_foxes/core/RotorModel.eval_rpoint_results.html", "_foxes/core/RotorModel.get_rotor_points.html", "_foxes/core/RotorModel.n_rotor_points.html", "_foxes/core/RotorModel.new.html", "_foxes/core/RotorModel.output_farm_vars.html", "_foxes/core/RotorModel.rotor_point_weights.html", "_foxes/core/States.html", "_foxes/core/States.index.html", "_foxes/core/States.load_data.html", "_foxes/core/States.new.html", "_foxes/core/States.output_point_vars.html", "_foxes/core/States.reset.html", "_foxes/core/States.size.html", "_foxes/core/States.weights.html", "_foxes/core/TData.html", "_foxes/core/TData.__init__.html", "_foxes/core/TData.from_dataset.html", "_foxes/core/TData.from_points.html", "_foxes/core/TData.from_tpoints.html", "_foxes/core/TData.n_targets.html", "_foxes/core/TData.n_tpoints.html", "_foxes/core/TData.targets_i0.html", "_foxes/core/TData.tpoint_mean.html", "_foxes/core/Turbine.html", "_foxes/core/Turbine.__init__.html", "_foxes/core/Turbine.add_model.html", "_foxes/core/Turbine.insert_model.html", "_foxes/core/TurbineInductionModel.html", "_foxes/core/TurbineInductionModel.affects_downwind.html", "_foxes/core/TurbineModel.html", "_foxes/core/TurbineModel.calculate.html", "_foxes/core/TurbineModel.new.html", "_foxes/core/TurbineType.html", "_foxes/core/TurbineType.__init__.html", "_foxes/core/TurbineType.__repr__.html", "_foxes/core/TurbineType.modify_cutin.html", "_foxes/core/TurbineType.needs_rews2.html", "_foxes/core/TurbineType.needs_rews3.html", "_foxes/core/TurbineType.new.html", "_foxes/core/VerticalProfile.html", "_foxes/core/VerticalProfile.calculate.html", "_foxes/core/VerticalProfile.input_vars.html", "_foxes/core/VerticalProfile.new.html", "_foxes/core/WakeFrame.html", "_foxes/core/WakeFrame.__init__.html", "_foxes/core/WakeFrame.calc_centreline_integral.html", "_foxes/core/WakeFrame.calc_order.html", "_foxes/core/WakeFrame.get_centreline_points.html", "_foxes/core/WakeFrame.get_wake_coos.html", "_foxes/core/WakeFrame.get_wake_modelling_data.html", "_foxes/core/WakeFrame.new.html", "_foxes/core/WakeK.html", "_foxes/core/WakeK.__call__.html", "_foxes/core/WakeK.__init__.html", "_foxes/core/WakeK.all_none.html", "_foxes/core/WakeK.is_kTI.html", "_foxes/core/WakeK.repr.html", "_foxes/core/WakeK.use_amb_ti.html", "_foxes/core/WakeModel.html", "_foxes/core/WakeModel.affects_downwind.html", "_foxes/core/WakeModel.contribute.html", "_foxes/core/WakeModel.finalize_wake_deltas.html", "_foxes/core/WakeModel.new.html", "_foxes/core/WakeModel.new_wake_deltas.html", "_foxes/core/WakeSuperposition.html", "_foxes/core/WakeSuperposition.add_wake.html", "_foxes/core/WakeSuperposition.calc_final_wake_delta.html", "_foxes/core/WindFarm.html", "_foxes/core/WindFarm.__init__.html", "_foxes/core/WindFarm.add_turbine.html", "_foxes/core/WindFarm.n_turbines.html", "_foxes/core/WindFarm.turbine_names.html", "_foxes/core/get_engine.html", "_foxes/core/has_engine.html", "_foxes/core/reset_engine.html", "_foxes/data/StaticData.html", "_foxes/data/StaticData.__init__.html", "_foxes/data/parse_Pct_file_name.html", "_foxes/data/parse_Pct_two_files.html", "_foxes/engines/DaskBaseEngine.html", "_foxes/engines/DaskBaseEngine.__init__.html", "_foxes/engines/DaskBaseEngine.chunk_data.html", "_foxes/engines/DaskBaseEngine.finalize.html", "_foxes/engines/DaskBaseEngine.initialize.html", "_foxes/engines/DaskEngine.html", "_foxes/engines/DaskEngine.run_calculation.html", "_foxes/engines/DefaultEngine.html", "_foxes/engines/DefaultEngine.run_calculation.html", "_foxes/engines/LocalClusterEngine.html", "_foxes/engines/LocalClusterEngine.__init__.html", "_foxes/engines/LocalClusterEngine.run_calculation.html", "_foxes/engines/MPIEngine.html", "_foxes/engines/MPIEngine.initialize.html", "_foxes/engines/MultiprocessEngine.html", "_foxes/engines/NumpyEngine.html", "_foxes/engines/NumpyEngine.run_calculation.html", "_foxes/engines/PoolEngine.html", "_foxes/engines/PoolEngine.run_calculation.html", "_foxes/engines/ProcessEngine.html", "_foxes/engines/RayEngine.html", "_foxes/engines/SingleChunkEngine.html", "_foxes/engines/SingleChunkEngine.__init__.html", "_foxes/engines/SingleChunkEngine.__repr__.html", "_foxes/engines/SingleChunkEngine.run_calculation.html", "_foxes/engines/SlurmClusterEngine.html", "_foxes/engines/ThreadsEngine.html", "_foxes/engines/XArrayEngine.html", "_foxes/engines/XArrayEngine.run_calculation.html", "_foxes/input/farm_layout/add_from_csv.html", "_foxes/input/farm_layout/add_from_df.html", "_foxes/input/farm_layout/add_from_file.html", "_foxes/input/farm_layout/add_from_json.html", "_foxes/input/farm_layout/add_grid.html", "_foxes/input/farm_layout/add_random.html", "_foxes/input/farm_layout/add_ring.html", "_foxes/input/farm_layout/add_row.html", "_foxes/input/states/FieldDataNC.html", "_foxes/input/states/FieldDataNC.__init__.html", "_foxes/input/states/FieldDataNC.calculate.html", "_foxes/input/states/FieldDataNC.data_source.html", "_foxes/input/states/FieldDataNC.index.html", "_foxes/input/states/FieldDataNC.load_data.html", "_foxes/input/states/FieldDataNC.output_point_vars.html", "_foxes/input/states/FieldDataNC.set_running.html", "_foxes/input/states/FieldDataNC.size.html", "_foxes/input/states/FieldDataNC.unset_running.html", "_foxes/input/states/FieldDataNC.weights.html", "_foxes/input/states/MultiHeightNCStates.html", "_foxes/input/states/MultiHeightNCStates.__init__.html", "_foxes/input/states/MultiHeightNCStates.load_data.html", "_foxes/input/states/MultiHeightNCTimeseries.html", "_foxes/input/states/MultiHeightNCTimeseries.__init__.html", "_foxes/input/states/MultiHeightStates.html", "_foxes/input/states/MultiHeightStates.RDICT.html", "_foxes/input/states/MultiHeightStates.__init__.html", "_foxes/input/states/MultiHeightStates.__repr__.html", "_foxes/input/states/MultiHeightStates.calculate.html", "_foxes/input/states/MultiHeightStates.data_source.html", "_foxes/input/states/MultiHeightStates.finalize.html", "_foxes/input/states/MultiHeightStates.index.html", "_foxes/input/states/MultiHeightStates.load_data.html", "_foxes/input/states/MultiHeightStates.output_point_vars.html", "_foxes/input/states/MultiHeightStates.reset.html", "_foxes/input/states/MultiHeightStates.set_running.html", "_foxes/input/states/MultiHeightStates.size.html", "_foxes/input/states/MultiHeightStates.unset_running.html", "_foxes/input/states/MultiHeightStates.weights.html", "_foxes/input/states/MultiHeightTimeseries.html", "_foxes/input/states/MultiHeightTimeseries.RDICT.html", "_foxes/input/states/OnePointFlowMultiHeightNCTimeseries.html", "_foxes/input/states/OnePointFlowMultiHeightNCTimeseries.__init__.html", "_foxes/input/states/OnePointFlowMultiHeightTimeseries.html", "_foxes/input/states/OnePointFlowMultiHeightTimeseries.__init__.html", "_foxes/input/states/OnePointFlowStates.html", "_foxes/input/states/OnePointFlowStates.__init__.html", "_foxes/input/states/OnePointFlowStates.__repr__.html", "_foxes/input/states/OnePointFlowStates.calc_states_indices.html", "_foxes/input/states/OnePointFlowStates.calculate.html", "_foxes/input/states/OnePointFlowStates.index.html", "_foxes/input/states/OnePointFlowStates.initialize.html", "_foxes/input/states/OnePointFlowStates.output_point_vars.html", "_foxes/input/states/OnePointFlowStates.set_running.html", "_foxes/input/states/OnePointFlowStates.size.html", "_foxes/input/states/OnePointFlowStates.sub_models.html", "_foxes/input/states/OnePointFlowStates.unset_running.html", "_foxes/input/states/OnePointFlowStates.weights.html", "_foxes/input/states/OnePointFlowTimeseries.html", "_foxes/input/states/OnePointFlowTimeseries.__init__.html", "_foxes/input/states/ScanWS.html", "_foxes/input/states/ScanWS.__init__.html", "_foxes/input/states/ScanWS.calculate.html", "_foxes/input/states/ScanWS.load_data.html", "_foxes/input/states/ScanWS.output_point_vars.html", "_foxes/input/states/ScanWS.set_running.html", "_foxes/input/states/ScanWS.size.html", "_foxes/input/states/ScanWS.unset_running.html", "_foxes/input/states/ScanWS.weights.html", "_foxes/input/states/SingleStateStates.html", "_foxes/input/states/SingleStateStates.__init__.html", "_foxes/input/states/SingleStateStates.calculate.html", "_foxes/input/states/SingleStateStates.initialize.html", "_foxes/input/states/SingleStateStates.output_point_vars.html", "_foxes/input/states/SingleStateStates.size.html", "_foxes/input/states/SingleStateStates.sub_models.html", "_foxes/input/states/SingleStateStates.weights.html", "_foxes/input/states/SliceDataNC.html", "_foxes/input/states/SliceDataNC.__init__.html", "_foxes/input/states/SliceDataNC.calculate.html", "_foxes/input/states/SliceDataNC.data_source.html", "_foxes/input/states/SliceDataNC.index.html", "_foxes/input/states/SliceDataNC.load_data.html", "_foxes/input/states/SliceDataNC.output_point_vars.html", "_foxes/input/states/SliceDataNC.set_running.html", "_foxes/input/states/SliceDataNC.size.html", "_foxes/input/states/SliceDataNC.unset_running.html", "_foxes/input/states/SliceDataNC.weights.html", "_foxes/input/states/StatesTable.html", "_foxes/input/states/StatesTable.RDICT.html", "_foxes/input/states/StatesTable.__init__.html", "_foxes/input/states/StatesTable.calculate.html", "_foxes/input/states/StatesTable.data_source.html", "_foxes/input/states/StatesTable.finalize.html", "_foxes/input/states/StatesTable.index.html", "_foxes/input/states/StatesTable.initialize.html", "_foxes/input/states/StatesTable.load_data.html", "_foxes/input/states/StatesTable.output_point_vars.html", "_foxes/input/states/StatesTable.reset.html", "_foxes/input/states/StatesTable.set_running.html", "_foxes/input/states/StatesTable.size.html", "_foxes/input/states/StatesTable.sub_models.html", "_foxes/input/states/StatesTable.unset_running.html", "_foxes/input/states/StatesTable.weights.html", "_foxes/input/states/TabStates.html", "_foxes/input/states/TabStates.__init__.html", "_foxes/input/states/TabStates.load_data.html", "_foxes/input/states/TabStates.set_running.html", "_foxes/input/states/TabStates.unset_running.html", "_foxes/input/states/Timeseries.html", "_foxes/input/states/Timeseries.RDICT.html", "_foxes/input/states/create/create_random_abl_states.html", "_foxes/input/states/create/random_timseries_data.html", "_foxes/input/states/create/write_random_abl_states.html", "_foxes/input/yaml/foxes_windio.html", "_foxes/input/yaml/foxes_yaml.html", "_foxes/input/yaml/read_windio.html", "_foxes/input/yaml/run_dict.html", "_foxes/input/yaml/windio/read_attributes.html", "_foxes/input/yaml/windio/read_layout.html", "_foxes/input/yaml/windio/read_turbine_types.html", "_foxes/input/yaml/windio/read_wind_resource_field.html", "_foxes/models/ModelBook.html", "_foxes/models/ModelBook.__getitem__.html", "_foxes/models/ModelBook.__init__.html", "_foxes/models/ModelBook.default_partial_wakes.html", "_foxes/models/ModelBook.finalize.html", "_foxes/models/ModelBook.get.html", "_foxes/models/ModelBook.print_toc.html", "_foxes/models/axial_inductionBetzAxialInduction.html", "_foxes/models/axial_inductionBetzAxialInduction.__init__.html", "_foxes/models/axial_inductionBetzAxialInduction.ct2a.html", "_foxes/models/axial_inductionMadsenAxialInduction.html", "_foxes/models/axial_inductionMadsenAxialInduction.__init__.html", "_foxes/models/axial_inductionMadsenAxialInduction.ct2a.html", "_foxes/models/farm_controllers/BasicFarmController.html", "_foxes/models/farm_models/Turbine2FarmModel.html", "_foxes/models/farm_models/Turbine2FarmModel.__init__.html", "_foxes/models/farm_models/Turbine2FarmModel.__repr__.html", "_foxes/models/farm_models/Turbine2FarmModel.calculate.html", "_foxes/models/farm_models/Turbine2FarmModel.output_farm_vars.html", "_foxes/models/farm_models/Turbine2FarmModel.sub_models.html", "_foxes/models/ground_modelsGroundMirror.html", "_foxes/models/ground_modelsGroundMirror.__init__.html", "_foxes/models/ground_modelsNoGround.html", "_foxes/models/ground_modelsWakeMirror.html", "_foxes/models/ground_modelsWakeMirror.__init__.html", "_foxes/models/ground_modelsWakeMirror.contribute_to_farm_wakes.html", "_foxes/models/ground_modelsWakeMirror.contribute_to_point_wakes.html", "_foxes/models/partial_wakes/PartialAxiwake.html", "_foxes/models/partial_wakes/PartialAxiwake.__init__.html", "_foxes/models/partial_wakes/PartialAxiwake.__repr__.html", "_foxes/models/partial_wakes/PartialAxiwake.check_wmodel.html", "_foxes/models/partial_wakes/PartialAxiwake.contribute.html", "_foxes/models/partial_wakes/PartialCentre.html", "_foxes/models/partial_wakes/PartialCentre.get_wake_points.html", "_foxes/models/partial_wakes/PartialGrid.html", "_foxes/models/partial_wakes/PartialGrid.__init__.html", "_foxes/models/partial_wakes/PartialSegregated.html", "_foxes/models/partial_wakes/PartialSegregated.__init__.html", "_foxes/models/partial_wakes/PartialSegregated.__repr__.html", "_foxes/models/partial_wakes/PartialSegregated.finalize_wakes.html", "_foxes/models/partial_wakes/PartialSegregated.get_wake_points.html", "_foxes/models/partial_wakes/PartialSegregated.sub_models.html", "_foxes/models/partial_wakes/PartialTopHat.html", "_foxes/models/partial_wakes/PartialTopHat.__init__.html", "_foxes/models/partial_wakes/PartialTopHat.check_wmodel.html", "_foxes/models/partial_wakes/PartialTopHat.contribute.html", "_foxes/models/partial_wakes/PartialTopHat.initialize.html", "_foxes/models/partial_wakes/PartialTopHat.sub_models.html", "_foxes/models/partial_wakes/RotorPoints.html", "_foxes/models/partial_wakes/RotorPoints.finalize_wakes.html", "_foxes/models/partial_wakes/RotorPoints.get_wake_points.html", "_foxes/models/point_models/SetUniformData.html", "_foxes/models/point_models/SetUniformData.__init__.html", "_foxes/models/point_models/SetUniformData.calculate.html", "_foxes/models/point_models/SetUniformData.load_data.html", "_foxes/models/point_models/SetUniformData.output_point_vars.html", "_foxes/models/point_models/TKE2TI.html", "_foxes/models/point_models/TKE2TI.calculate.html", "_foxes/models/point_models/TKE2TI.output_point_vars.html", "_foxes/models/point_models/WakeDeltas.html", "_foxes/models/point_models/WakeDeltas.__init__.html", "_foxes/models/point_models/WakeDeltas.calculate.html", "_foxes/models/point_models/WakeDeltas.output_point_vars.html", "_foxes/models/rotor_models/CentreRotor.html", "_foxes/models/rotor_models/CentreRotor.design_points.html", "_foxes/models/rotor_models/CentreRotor.eval_rpoint_results.html", "_foxes/models/rotor_models/CentreRotor.get_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.n_rotor_points.html", "_foxes/models/rotor_models/CentreRotor.rotor_point_weights.html", "_foxes/models/rotor_models/GridRotor.html", "_foxes/models/rotor_models/GridRotor.__init__.html", "_foxes/models/rotor_models/GridRotor.__repr__.html", "_foxes/models/rotor_models/GridRotor.design_points.html", "_foxes/models/rotor_models/GridRotor.initialize.html", "_foxes/models/rotor_models/GridRotor.n_rotor_points.html", "_foxes/models/rotor_models/GridRotor.rotor_point_weights.html", "_foxes/models/rotor_models/LevelRotor.html", "_foxes/models/rotor_models/LevelRotor.__init__.html", "_foxes/models/rotor_models/LevelRotor.__repr__.html", "_foxes/models/rotor_models/LevelRotor.design_points.html", "_foxes/models/rotor_models/LevelRotor.initialize.html", "_foxes/models/rotor_models/LevelRotor.n_rotor_points.html", "_foxes/models/rotor_models/LevelRotor.rotor_point_weights.html", "_foxes/models/turbine_models/Calculator.html", "_foxes/models/turbine_models/Calculator.__init__.html", "_foxes/models/turbine_models/Calculator.__repr__.html", "_foxes/models/turbine_models/Calculator.calculate.html", "_foxes/models/turbine_models/Calculator.output_farm_vars.html", "_foxes/models/turbine_models/LookupTable.html", "_foxes/models/turbine_models/LookupTable.__init__.html", "_foxes/models/turbine_models/LookupTable.calculate.html", "_foxes/models/turbine_models/LookupTable.load_data.html", "_foxes/models/turbine_models/LookupTable.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.html", "_foxes/models/turbine_models/PowerMask.__init__.html", "_foxes/models/turbine_models/PowerMask.__repr__.html", "_foxes/models/turbine_models/PowerMask.calculate.html", "_foxes/models/turbine_models/PowerMask.initialize.html", "_foxes/models/turbine_models/PowerMask.output_farm_vars.html", "_foxes/models/turbine_models/PowerMask.sub_models.html", "_foxes/models/turbine_models/RotorCentreCalc.html", "_foxes/models/turbine_models/RotorCentreCalc.__init__.html", "_foxes/models/turbine_models/RotorCentreCalc.calculate.html", "_foxes/models/turbine_models/RotorCentreCalc.initialize.html", "_foxes/models/turbine_models/RotorCentreCalc.output_farm_vars.html", "_foxes/models/turbine_models/RotorCentreCalc.sub_models.html", "_foxes/models/turbine_models/SectorManagement.html", "_foxes/models/turbine_models/SectorManagement.__init__.html", "_foxes/models/turbine_models/SectorManagement.calculate.html", "_foxes/models/turbine_models/SectorManagement.initialize.html", "_foxes/models/turbine_models/SectorManagement.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.html", "_foxes/models/turbine_models/SetFarmVars.__init__.html", "_foxes/models/turbine_models/SetFarmVars.add_var.html", "_foxes/models/turbine_models/SetFarmVars.calculate.html", "_foxes/models/turbine_models/SetFarmVars.initialize.html", "_foxes/models/turbine_models/SetFarmVars.load_data.html", "_foxes/models/turbine_models/SetFarmVars.output_farm_vars.html", "_foxes/models/turbine_models/SetFarmVars.reset.html", "_foxes/models/turbine_models/SetFarmVars.set_running.html", "_foxes/models/turbine_models/SetFarmVars.unset_running.html", "_foxes/models/turbine_models/TableFactors.html", "_foxes/models/turbine_models/TableFactors.__init__.html", "_foxes/models/turbine_models/TableFactors.calculate.html", "_foxes/models/turbine_models/TableFactors.initialize.html", "_foxes/models/turbine_models/TableFactors.output_farm_vars.html", "_foxes/models/turbine_models/Thrust2Ct.html", "_foxes/models/turbine_models/Thrust2Ct.__init__.html", "_foxes/models/turbine_models/Thrust2Ct.__repr__.html", "_foxes/models/turbine_models/Thrust2Ct.calculate.html", "_foxes/models/turbine_models/Thrust2Ct.output_farm_vars.html", "_foxes/models/turbine_models/YAW2YAWM.html", "_foxes/models/turbine_models/YAW2YAWM.calculate.html", "_foxes/models/turbine_models/YAW2YAWM.output_farm_vars.html", "_foxes/models/turbine_models/YAWM2YAW.html", "_foxes/models/turbine_models/YAWM2YAW.calculate.html", "_foxes/models/turbine_models/YAWM2YAW.output_farm_vars.html", "_foxes/models/turbine_models/kTI.html", "_foxes/models/turbine_models/kTI.__init__.html", "_foxes/models/turbine_models/kTI.__repr__.html", "_foxes/models/turbine_models/kTI.calculate.html", "_foxes/models/turbine_models/kTI.output_farm_vars.html", "_foxes/models/turbine_types/CpCtFile.html", "_foxes/models/turbine_types/CpCtFile.__init__.html", "_foxes/models/turbine_types/CpCtFromTwo.html", "_foxes/models/turbine_types/CpCtFromTwo.__init__.html", "_foxes/models/turbine_types/FromLookupTable.html", "_foxes/models/turbine_types/FromLookupTable.__init__.html", "_foxes/models/turbine_types/FromLookupTable.__repr__.html", "_foxes/models/turbine_types/FromLookupTable.calculate.html", "_foxes/models/turbine_types/FromLookupTable.initialize.html", "_foxes/models/turbine_types/FromLookupTable.modify_cutin.html", "_foxes/models/turbine_types/FromLookupTable.needs_rews2.html", "_foxes/models/turbine_types/FromLookupTable.needs_rews3.html", "_foxes/models/turbine_types/FromLookupTable.output_farm_vars.html", "_foxes/models/turbine_types/FromLookupTable.sub_models.html", "_foxes/models/turbine_types/NullType.html", "_foxes/models/turbine_types/NullType.__init__.html", "_foxes/models/turbine_types/NullType.calculate.html", "_foxes/models/turbine_types/NullType.needs_rews2.html", "_foxes/models/turbine_types/NullType.needs_rews3.html", "_foxes/models/turbine_types/NullType.output_farm_vars.html", "_foxes/models/turbine_types/PCtFile.html", "_foxes/models/turbine_types/PCtFile.__init__.html", "_foxes/models/turbine_types/PCtFile.__repr__.html", "_foxes/models/turbine_types/PCtFile.calculate.html", "_foxes/models/turbine_types/PCtFile.finalize.html", "_foxes/models/turbine_types/PCtFile.load_data.html", "_foxes/models/turbine_types/PCtFile.modify_cutin.html", "_foxes/models/turbine_types/PCtFile.needs_rews2.html", "_foxes/models/turbine_types/PCtFile.needs_rews3.html", "_foxes/models/turbine_types/PCtFile.output_farm_vars.html", "_foxes/models/turbine_types/PCtFromTwo.html", "_foxes/models/turbine_types/PCtFromTwo.__init__.html", "_foxes/models/turbine_types/PCtFromTwo.__repr__.html", "_foxes/models/turbine_types/PCtFromTwo.calculate.html", "_foxes/models/turbine_types/PCtFromTwo.finalize.html", "_foxes/models/turbine_types/PCtFromTwo.load_data.html", "_foxes/models/turbine_types/PCtFromTwo.modify_cutin.html", "_foxes/models/turbine_types/PCtFromTwo.needs_rews2.html", "_foxes/models/turbine_types/PCtFromTwo.needs_rews3.html", "_foxes/models/turbine_types/PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/TBLFile.html", "_foxes/models/turbine_types/TBLFile.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.needs_rews2.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.needs_rews3.html", "_foxes/models/turbine_types/WsRho2PCtFromTwo.output_farm_vars.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__init__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.__repr__.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.calculate.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.finalize.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.load_data.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.needs_rews2.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.needs_rews3.html", "_foxes/models/turbine_types/WsTI2PCtFromTwo.output_farm_vars.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogNeutralWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogStableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogUnstableWsProfile.input_vars.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.__init__.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.calculate.html", "_foxes/models/vertical_profiles/ABLLogWsProfile.input_vars.html", "_foxes/models/vertical_profiles/DataProfile.html", "_foxes/models/vertical_profiles/DataProfile.__init__.html", "_foxes/models/vertical_profiles/DataProfile.calculate.html", "_foxes/models/vertical_profiles/DataProfile.input_vars.html", "_foxes/models/vertical_profiles/ShearedProfile.html", "_foxes/models/vertical_profiles/ShearedProfile.calculate.html", "_foxes/models/vertical_profiles/ShearedProfile.input_vars.html", "_foxes/models/vertical_profiles/UniformProfile.html", "_foxes/models/vertical_profiles/UniformProfile.__init__.html", "_foxes/models/vertical_profiles/UniformProfile.calculate.html", "_foxes/models/vertical_profiles/UniformProfile.input_vars.html", "_foxes/models/wake_frames/DynamicWakes.html", "_foxes/models/wake_frames/DynamicWakes.__init__.html", "_foxes/models/wake_frames/DynamicWakes.__repr__.html", "_foxes/models/wake_frames/DynamicWakes.calc_order.html", "_foxes/models/wake_frames/DynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/DynamicWakes.initialize.html", "_foxes/models/wake_frames/FarmOrder.html", "_foxes/models/wake_frames/FarmOrder.__init__.html", "_foxes/models/wake_frames/FarmOrder.calc_order.html", "_foxes/models/wake_frames/FarmOrder.get_centreline_points.html", "_foxes/models/wake_frames/FarmOrder.get_wake_coos.html", "_foxes/models/wake_frames/FarmOrder.initialize.html", "_foxes/models/wake_frames/FarmOrder.sub_models.html", "_foxes/models/wake_frames/RotorWD.html", "_foxes/models/wake_frames/RotorWD.__init__.html", "_foxes/models/wake_frames/RotorWD.calc_order.html", "_foxes/models/wake_frames/RotorWD.get_centreline_points.html", "_foxes/models/wake_frames/RotorWD.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.html", "_foxes/models/wake_frames/SeqDynamicWakes.__init__.html", "_foxes/models/wake_frames/SeqDynamicWakes.__repr__.html", "_foxes/models/wake_frames/SeqDynamicWakes.calc_order.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_centreline_points.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_coos.html", "_foxes/models/wake_frames/SeqDynamicWakes.get_wake_modelling_data.html", "_foxes/models/wake_frames/SeqDynamicWakes.initialize.html", "_foxes/models/wake_frames/Streamlines2D.html", "_foxes/models/wake_frames/Streamlines2D.__init__.html", "_foxes/models/wake_frames/Streamlines2D.__repr__.html", "_foxes/models/wake_frames/Streamlines2D.calc_order.html", "_foxes/models/wake_frames/Streamlines2D.get_centreline_points.html", "_foxes/models/wake_frames/Streamlines2D.get_streamline_data.html", "_foxes/models/wake_frames/Streamlines2D.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.html", "_foxes/models/wake_frames/Timelines.__init__.html", "_foxes/models/wake_frames/Timelines.__repr__.html", "_foxes/models/wake_frames/Timelines.calc_order.html", "_foxes/models/wake_frames/Timelines.finalize.html", "_foxes/models/wake_frames/Timelines.get_centreline_points.html", "_foxes/models/wake_frames/Timelines.get_wake_coos.html", "_foxes/models/wake_frames/Timelines.initialize.html", "_foxes/models/wake_frames/Timelines.set_running.html", "_foxes/models/wake_frames/Timelines.unset_running.html", "_foxes/models/wake_frames/YawedWakes.html", "_foxes/models/wake_frames/YawedWakes.__init__.html", "_foxes/models/wake_frames/YawedWakes.__repr__.html", "_foxes/models/wake_frames/YawedWakes.calc_order.html", "_foxes/models/wake_frames/YawedWakes.get_centreline_points.html", "_foxes/models/wake_frames/YawedWakes.get_wake_coos.html", "_foxes/models/wake_frames/YawedWakes.initialize.html", "_foxes/models/wake_frames/YawedWakes.sub_models.html", "_foxes/models/wake_models/AxisymmetricWakeModel.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/AxisymmetricWakeModel.calc_wakes_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.html", "_foxes/models/wake_models/DistSlicedWakeModel.__init__.html", "_foxes/models/wake_models/DistSlicedWakeModel.calc_wakes_x_yz.html", "_foxes/models/wake_models/DistSlicedWakeModel.contribute.html", "_foxes/models/wake_models/DistSlicedWakeModel.finalize_wake_deltas.html", "_foxes/models/wake_models/DistSlicedWakeModel.initialize.html", "_foxes/models/wake_models/DistSlicedWakeModel.sub_models.html", "_foxes/models/wake_models/GaussianWakeModel.html", "_foxes/models/wake_models/GaussianWakeModel.calc_amplitude_sigma.html", "_foxes/models/wake_models/GaussianWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.html", "_foxes/models/wake_models/TopHatWakeModel.__init__.html", "_foxes/models/wake_models/TopHatWakeModel.calc_centreline.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wake_radius.html", "_foxes/models/wake_models/TopHatWakeModel.calc_wakes_x_r.html", "_foxes/models/wake_models/TopHatWakeModel.initialize.html", "_foxes/models/wake_models/TopHatWakeModel.sub_models.html", "_foxes/models/wake_models/induction/RankineHalfBody.html", "_foxes/models/wake_models/induction/RankineHalfBody.__init__.html", "_foxes/models/wake_models/induction/RankineHalfBody.__repr__.html", "_foxes/models/wake_models/induction/RankineHalfBody.contribute.html", "_foxes/models/wake_models/induction/RankineHalfBody.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.initialize.html", "_foxes/models/wake_models/induction/RankineHalfBody.new_wake_deltas.html", "_foxes/models/wake_models/induction/RankineHalfBody.sub_models.html", "_foxes/models/wake_models/induction/Rathmann.html", "_foxes/models/wake_models/induction/Rathmann.__init__.html", "_foxes/models/wake_models/induction/Rathmann.__repr__.html", "_foxes/models/wake_models/induction/Rathmann.contribute.html", "_foxes/models/wake_models/induction/Rathmann.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.initialize.html", "_foxes/models/wake_models/induction/Rathmann.new_wake_deltas.html", "_foxes/models/wake_models/induction/Rathmann.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar.html", "_foxes/models/wake_models/induction/SelfSimilar.__init__.html", "_foxes/models/wake_models/induction/SelfSimilar.__repr__.html", "_foxes/models/wake_models/induction/SelfSimilar.contribute.html", "_foxes/models/wake_models/induction/SelfSimilar.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.initialize.html", "_foxes/models/wake_models/induction/SelfSimilar.new_wake_deltas.html", "_foxes/models/wake_models/induction/SelfSimilar.sub_models.html", "_foxes/models/wake_models/induction/SelfSimilar2020.html", "_foxes/models/wake_models/induction/VortexSheet.html", "_foxes/models/wake_models/induction/VortexSheet.__init__.html", "_foxes/models/wake_models/induction/VortexSheet.__repr__.html", "_foxes/models/wake_models/induction/VortexSheet.contribute.html", "_foxes/models/wake_models/induction/VortexSheet.finalize_wake_deltas.html", "_foxes/models/wake_models/induction/VortexSheet.initialize.html", "_foxes/models/wake_models/induction/VortexSheet.new_wake_deltas.html", "_foxes/models/wake_models/induction/VortexSheet.sub_models.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__init__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.__repr__.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_centreline.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.new_wake_deltas.html", "_foxes/models/wake_models/ti/CrespoHernandezTIWake.sub_models.html", "_foxes/models/wake_models/ti/IECTIWake.html", "_foxes/models/wake_models/ti/IECTIWake.__init__.html", "_foxes/models/wake_models/ti/IECTIWake.__repr__.html", "_foxes/models/wake_models/ti/IECTIWake.calc_centreline.html", "_foxes/models/wake_models/ti/IECTIWake.calc_wake_radius.html", "_foxes/models/wake_models/ti/IECTIWake.new_wake_deltas.html", "_foxes/models/wake_models/ti/IECTIWake.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2014.html", "_foxes/models/wake_models/wind/Bastankhah2014.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2014.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2014.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/Bastankhah2014.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2014.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016.html", "_foxes/models/wake_models/wind/Bastankhah2016.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016.__repr__.html", "_foxes/models/wake_models/wind/Bastankhah2016.calc_wakes_x_yz.html", "_foxes/models/wake_models/wind/Bastankhah2016.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016.sub_models.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.AMPL_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.CHECK.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.DELTA_NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.MDATA_KEY.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.NEAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.PARS.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.R_PC_S.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Y_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.SIGMA_Z_FAR.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.ST_SEL.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.X0.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.__init__.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.calc_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.clean.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.get_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.has_data.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.initialize.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.pars.html", "_foxes/models/wake_models/wind/Bastankhah2016Model.sub_models.html", "_foxes/models/wake_models/wind/JensenWake.html", "_foxes/models/wake_models/wind/JensenWake.__init__.html", "_foxes/models/wake_models/wind/JensenWake.__repr__.html", "_foxes/models/wake_models/wind/JensenWake.calc_centreline.html", "_foxes/models/wake_models/wind/JensenWake.calc_wake_radius.html", "_foxes/models/wake_models/wind/TurbOParkWake.html", "_foxes/models/wake_models/wind/TurbOParkWake.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWake.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWake.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/TurbOParkWake.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWake.sub_models.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__init__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.__repr__.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.calc_amplitude_sigma.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.finalize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.initialize.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.new_wake_deltas.html", "_foxes/models/wake_models/wind/TurbOParkWakeIX.sub_models.html", "_foxes/models/wake_superpositions/TILinear.html", "_foxes/models/wake_superpositions/TILinear.__init__.html", "_foxes/models/wake_superpositions/TILinear.__repr__.html", "_foxes/models/wake_superpositions/TILinear.add_wake.html", "_foxes/models/wake_superpositions/TILinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIMax.html", "_foxes/models/wake_superpositions/TIMax.__init__.html", "_foxes/models/wake_superpositions/TIMax.__repr__.html", "_foxes/models/wake_superpositions/TIMax.add_wake.html", "_foxes/models/wake_superpositions/TIMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIPow.html", "_foxes/models/wake_superpositions/TIPow.__init__.html", "_foxes/models/wake_superpositions/TIPow.__repr__.html", "_foxes/models/wake_superpositions/TIPow.add_wake.html", "_foxes/models/wake_superpositions/TIPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/TIQuadratic.html", "_foxes/models/wake_superpositions/TIQuadratic.__init__.html", "_foxes/models/wake_superpositions/TIQuadratic.__repr__.html", "_foxes/models/wake_superpositions/TIQuadratic.add_wake.html", "_foxes/models/wake_superpositions/TIQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.html", "_foxes/models/wake_superpositions/WSLinear.__init__.html", "_foxes/models/wake_superpositions/WSLinear.__repr__.html", "_foxes/models/wake_superpositions/WSLinear.add_wake.html", "_foxes/models/wake_superpositions/WSLinear.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinear.input_farm_vars.html", "_foxes/models/wake_superpositions/WSLinearLocal.html", "_foxes/models/wake_superpositions/WSLinearLocal.__init__.html", "_foxes/models/wake_superpositions/WSLinearLocal.__repr__.html", "_foxes/models/wake_superpositions/WSLinearLocal.add_wake.html", "_foxes/models/wake_superpositions/WSLinearLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSLinearLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMax.html", "_foxes/models/wake_superpositions/WSMax.__init__.html", "_foxes/models/wake_superpositions/WSMax.__repr__.html", "_foxes/models/wake_superpositions/WSMax.add_wake.html", "_foxes/models/wake_superpositions/WSMax.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMax.input_farm_vars.html", "_foxes/models/wake_superpositions/WSMaxLocal.html", "_foxes/models/wake_superpositions/WSMaxLocal.__init__.html", "_foxes/models/wake_superpositions/WSMaxLocal.__repr__.html", "_foxes/models/wake_superpositions/WSMaxLocal.add_wake.html", "_foxes/models/wake_superpositions/WSMaxLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSMaxLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPow.html", "_foxes/models/wake_superpositions/WSPow.__init__.html", "_foxes/models/wake_superpositions/WSPow.__repr__.html", "_foxes/models/wake_superpositions/WSPow.add_wake.html", "_foxes/models/wake_superpositions/WSPow.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPow.input_farm_vars.html", "_foxes/models/wake_superpositions/WSPowLocal.html", "_foxes/models/wake_superpositions/WSPowLocal.__init__.html", "_foxes/models/wake_superpositions/WSPowLocal.__repr__.html", "_foxes/models/wake_superpositions/WSPowLocal.add_wake.html", "_foxes/models/wake_superpositions/WSPowLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSPowLocal.input_farm_vars.html", "_foxes/models/wake_superpositions/WSProduct.html", "_foxes/models/wake_superpositions/WSProduct.__init__.html", "_foxes/models/wake_superpositions/WSProduct.__repr__.html", "_foxes/models/wake_superpositions/WSProduct.add_wake.html", "_foxes/models/wake_superpositions/WSProduct.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSProduct.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadratic.html", "_foxes/models/wake_superpositions/WSQuadratic.__init__.html", "_foxes/models/wake_superpositions/WSQuadratic.__repr__.html", "_foxes/models/wake_superpositions/WSQuadratic.add_wake.html", "_foxes/models/wake_superpositions/WSQuadratic.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadratic.input_farm_vars.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.__init__.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.__repr__.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.add_wake.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.calc_final_wake_delta.html", "_foxes/models/wake_superpositions/WSQuadraticLocal.input_farm_vars.html", "_foxes/output/Animator.html", "_foxes/output/Animator.__init__.html", "_foxes/output/Animator.add_generator.html", "_foxes/output/Animator.animate.html", "_foxes/output/Animator.generators.html", "_foxes/output/FarmLayoutOutput.html", "_foxes/output/FarmLayoutOutput.__init__.html", "_foxes/output/FarmLayoutOutput.get_figure.html", "_foxes/output/FarmLayoutOutput.get_layout_data.html", "_foxes/output/FarmLayoutOutput.get_layout_dict.html", "_foxes/output/FarmLayoutOutput.write_csv.html", "_foxes/output/FarmLayoutOutput.write_json.html", "_foxes/output/FarmLayoutOutput.write_plot.html", "_foxes/output/FarmLayoutOutput.write_xyh.html", "_foxes/output/FarmResultsEval.html", "_foxes/output/FarmResultsEval.__init__.html", "_foxes/output/FarmResultsEval.add_capacity.html", "_foxes/output/FarmResultsEval.add_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_efficiency.html", "_foxes/output/FarmResultsEval.calc_farm_mean.html", "_foxes/output/FarmResultsEval.calc_farm_sum.html", "_foxes/output/FarmResultsEval.calc_farm_yield.html", "_foxes/output/FarmResultsEval.calc_mean_farm_power.html", "_foxes/output/FarmResultsEval.calc_states_mean.html", "_foxes/output/FarmResultsEval.calc_states_std.html", "_foxes/output/FarmResultsEval.calc_states_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_mean.html", "_foxes/output/FarmResultsEval.calc_turbine_sum.html", "_foxes/output/FarmResultsEval.calc_turbine_yield.html", "_foxes/output/FarmResultsEval.gen_stdata.html", "_foxes/output/FarmResultsEval.reduce_all.html", "_foxes/output/FarmResultsEval.reduce_states.html", "_foxes/output/FarmResultsEval.reduce_turbines.html", "_foxes/output/FarmResultsEval.weinsum.html", "_foxes/output/FlowPlots2D.html", "_foxes/output/FlowPlots2D.gen_states_fig_xy.html", "_foxes/output/FlowPlots2D.gen_states_fig_xz.html", "_foxes/output/FlowPlots2D.gen_states_fig_yz.html", "_foxes/output/FlowPlots2D.get_mean_fig_xy.html", "_foxes/output/FlowPlots2D.get_mean_fig_xz.html", "_foxes/output/FlowPlots2D.get_mean_fig_yz.html", "_foxes/output/Output.html", "_foxes/output/Output.__init__.html", "_foxes/output/Output.get_fpath.html", "_foxes/output/Output.new.html", "_foxes/output/Output.print_models.html", "_foxes/output/Output.write.html", "_foxes/output/PointCalculator.html", "_foxes/output/PointCalculator.__init__.html", "_foxes/output/PointCalculator.calculate.html", "_foxes/output/ResultsWriter.html", "_foxes/output/ResultsWriter.__init__.html", "_foxes/output/ResultsWriter.write_csv.html", "_foxes/output/ResultsWriter.write_nc.html", "_foxes/output/RosePlotOutput.html", "_foxes/output/RosePlotOutput.__init__.html", "_foxes/output/RosePlotOutput.get_data.html", "_foxes/output/RosePlotOutput.get_data_info.html", "_foxes/output/RosePlotOutput.get_figure.html", "_foxes/output/RosePlotOutput.write_figure.html", "_foxes/output/RotorPointPlot.html", "_foxes/output/RotorPointPlot.__init__.html", "_foxes/output/RotorPointPlot.get_point_figure.html", "_foxes/output/SeqFlowAnimationPlugin.html", "_foxes/output/SeqFlowAnimationPlugin.__init__.html", "_foxes/output/SeqFlowAnimationPlugin.gen_images.html", "_foxes/output/SeqFlowAnimationPlugin.initialize.html", "_foxes/output/SeqFlowAnimationPlugin.update.html", "_foxes/output/SeqWakeDebugPlugin.html", "_foxes/output/SeqWakeDebugPlugin.__init__.html", "_foxes/output/SeqWakeDebugPlugin.gen_images.html", "_foxes/output/SeqWakeDebugPlugin.initialize.html", "_foxes/output/SeqWakeDebugPlugin.update.html", "_foxes/output/SliceData.html", "_foxes/output/SliceData.__init__.html", "_foxes/output/SliceData.get_mean_data_xy.html", "_foxes/output/SliceData.get_mean_data_xz.html", "_foxes/output/SliceData.get_mean_data_yz.html", "_foxes/output/SliceData.get_states_data_xy.html", "_foxes/output/SliceData.get_states_data_xz.html", "_foxes/output/SliceData.get_states_data_yz.html", "_foxes/output/StateTurbineMap.html", "_foxes/output/StateTurbineMap.__init__.html", "_foxes/output/StateTurbineMap.plot_map.html", "_foxes/output/StateTurbineTable.html", "_foxes/output/StateTurbineTable.__init__.html", "_foxes/output/StateTurbineTable.get_dataset.html", "_foxes/output/StatesRosePlotOutput.html", "_foxes/output/StatesRosePlotOutput.__init__.html", "_foxes/output/TurbineTypeCurves.html", "_foxes/output/TurbineTypeCurves.__init__.html", "_foxes/output/TurbineTypeCurves.plot_curves.html", "_foxes/output/flow_plots_2d/get_fig.html", "_foxes/utils/DataBook.html", "_foxes/utils/DataBook.__init__.html", "_foxes/utils/DataBook.add_data_package.html", "_foxes/utils/DataBook.add_data_package_file.html", "_foxes/utils/DataBook.add_file.html", "_foxes/utils/DataBook.add_files.html", "_foxes/utils/DataBook.get_file_path.html", "_foxes/utils/DataBook.toc.html", "_foxes/utils/Dict.html", "_foxes/utils/Dict.__getitem__.html", "_foxes/utils/Dict.__init__.html", "_foxes/utils/Dict.from_yaml.html", "_foxes/utils/Dict.get_item.html", "_foxes/utils/Dict.pop_item.html", "_foxes/utils/FDict.html", "_foxes/utils/FDict.__contains__.html", "_foxes/utils/FDict.__getitem__.html", "_foxes/utils/FDict.__init__.html", "_foxes/utils/FDict.add_factory.html", "_foxes/utils/FDict.add_k_factory.html", "_foxes/utils/FDict.get_item.html", "_foxes/utils/Factory.html", "_foxes/utils/Factory.__init__.html", "_foxes/utils/Factory.__str__.html", "_foxes/utils/Factory.check_match.html", "_foxes/utils/Factory.construct.html", "_foxes/utils/Factory.get_examples.html", "_foxes/utils/Factory.name_prefix.html", "_foxes/utils/Factory.name_suffix.html", "_foxes/utils/Factory.variables.html", "_foxes/utils/PandasFileHelper.html", "_foxes/utils/PandasFileHelper.DATA_FILE_FORMATS.html", "_foxes/utils/PandasFileHelper.DEFAULT_FORMAT_DICT.html", "_foxes/utils/PandasFileHelper.DEFAULT_READING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.DEFAULT_WRITING_PARAMETERS.html", "_foxes/utils/PandasFileHelper.read_file.html", "_foxes/utils/PandasFileHelper.write_file.html", "_foxes/utils/TabWindroseAxes.html", "_foxes/utils/TabWindroseAxes.ArtistList.html", "_foxes/utils/TabWindroseAxes.ArtistList.__class_getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__getitem__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__init__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__repr__.html", "_foxes/utils/TabWindroseAxes.ArtistList.__subclasshook__.html", "_foxes/utils/TabWindroseAxes.ArtistList.count.html", "_foxes/utils/TabWindroseAxes.ArtistList.index.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__add__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__array__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.__sub__.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.depth.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.frozen.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.get_matrix.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.invalidate.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.is_separable.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.pass_through.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.set_children.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_angles.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_bbox.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.InvertedPolarTransform.transform_point.html", "_foxes/utils/TabWindroseAxes.PolarAffine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__array__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__eq__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__init__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.__str__.html", "_foxes/utils/TabWindroseAxes.PolarAffine.frozen.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.get_matrix.html", "_foxes/utils/TabWindroseAxes.PolarAffine.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarAffine.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.inverted.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.is_separable.html", "_foxes/utils/TabWindroseAxes.PolarAffine.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarAffine.to_values.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_affine.html", "_foxes/utils/TabWindroseAxes.PolarAffine.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__init__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.__str__.html", "_foxes/utils/TabWindroseAxes.PolarTransform.has_inverse.html", "_foxes/utils/TabWindroseAxes.PolarTransform.input_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.inverted.html", "_foxes/utils/TabWindroseAxes.PolarTransform.output_dims.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_non_affine.html", "_foxes/utils/TabWindroseAxes.PolarTransform.transform_path_non_affine.html", "_foxes/utils/TabWindroseAxes.RadialLocator.html", "_foxes/utils/TabWindroseAxes.RadialLocator.MAXTICKS.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__call__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.__init__.html", "_foxes/utils/TabWindroseAxes.RadialLocator.axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.create_dummy_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.RadialLocator.raise_if_exceeds.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.RadialLocator.set_params.html", "_foxes/utils/TabWindroseAxes.RadialLocator.tick_values.html", "_foxes/utils/TabWindroseAxes.RadialLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.fix_minus.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_data_short.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.format_ticks.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.get_offset.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.locs.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaFormatter.set_locs.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__call__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.__init__.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.nonsingular.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.set_axis.html", "_foxes/utils/TabWindroseAxes.ThetaLocator.view_limits.html", "_foxes/utils/TabWindroseAxes.__init__.html", "_foxes/utils/TabWindroseAxes.__init_subclass__.html", "_foxes/utils/TabWindroseAxes.__repr__.html", "_foxes/utils/TabWindroseAxes.__str__.html", "_foxes/utils/TabWindroseAxes.acorr.html", "_foxes/utils/TabWindroseAxes.add_artist.html", "_foxes/utils/TabWindroseAxes.add_callback.html", "_foxes/utils/TabWindroseAxes.add_child_axes.html", "_foxes/utils/TabWindroseAxes.add_collection.html", "_foxes/utils/TabWindroseAxes.add_container.html", "_foxes/utils/TabWindroseAxes.add_image.html", "_foxes/utils/TabWindroseAxes.add_line.html", "_foxes/utils/TabWindroseAxes.add_patch.html", "_foxes/utils/TabWindroseAxes.add_table.html", "_foxes/utils/TabWindroseAxes.angle_spectrum.html", "_foxes/utils/TabWindroseAxes.annotate.html", "_foxes/utils/TabWindroseAxes.apply_aspect.html", "_foxes/utils/TabWindroseAxes.arrow.html", "_foxes/utils/TabWindroseAxes.artists.html", "_foxes/utils/TabWindroseAxes.autoscale.html", "_foxes/utils/TabWindroseAxes.autoscale_view.html", "_foxes/utils/TabWindroseAxes.axes.html", "_foxes/utils/TabWindroseAxes.axhline.html", "_foxes/utils/TabWindroseAxes.axhspan.html", "_foxes/utils/TabWindroseAxes.axis.html", "_foxes/utils/TabWindroseAxes.axline.html", "_foxes/utils/TabWindroseAxes.axvline.html", "_foxes/utils/TabWindroseAxes.axvspan.html", "_foxes/utils/TabWindroseAxes.bar.html", "_foxes/utils/TabWindroseAxes.bar_label.html", "_foxes/utils/TabWindroseAxes.barbs.html", "_foxes/utils/TabWindroseAxes.barh.html", "_foxes/utils/TabWindroseAxes.box.html", "_foxes/utils/TabWindroseAxes.boxplot.html", "_foxes/utils/TabWindroseAxes.broken_barh.html", "_foxes/utils/TabWindroseAxes.bxp.html", "_foxes/utils/TabWindroseAxes.can_pan.html", "_foxes/utils/TabWindroseAxes.can_zoom.html", "_foxes/utils/TabWindroseAxes.cla.html", "_foxes/utils/TabWindroseAxes.clabel.html", "_foxes/utils/TabWindroseAxes.clear.html", "_foxes/utils/TabWindroseAxes.cohere.html", "_foxes/utils/TabWindroseAxes.collections.html", "_foxes/utils/TabWindroseAxes.contains.html", "_foxes/utils/TabWindroseAxes.contains_point.html", "_foxes/utils/TabWindroseAxes.contour.html", "_foxes/utils/TabWindroseAxes.contourf.html", "_foxes/utils/TabWindroseAxes.convert_xunits.html", "_foxes/utils/TabWindroseAxes.convert_yunits.html", "_foxes/utils/TabWindroseAxes.csd.html", "_foxes/utils/TabWindroseAxes.drag_pan.html", "_foxes/utils/TabWindroseAxes.draw.html", "_foxes/utils/TabWindroseAxes.draw_artist.html", "_foxes/utils/TabWindroseAxes.ecdf.html", "_foxes/utils/TabWindroseAxes.end_pan.html", "_foxes/utils/TabWindroseAxes.errorbar.html", "_foxes/utils/TabWindroseAxes.eventplot.html", "_foxes/utils/TabWindroseAxes.fill.html", "_foxes/utils/TabWindroseAxes.fill_between.html", "_foxes/utils/TabWindroseAxes.fill_betweenx.html", "_foxes/utils/TabWindroseAxes.findobj.html", "_foxes/utils/TabWindroseAxes.format_coord.html", "_foxes/utils/TabWindroseAxes.format_cursor_data.html", "_foxes/utils/TabWindroseAxes.format_xdata.html", "_foxes/utils/TabWindroseAxes.format_ydata.html", "_foxes/utils/TabWindroseAxes.from_ax.html", "_foxes/utils/TabWindroseAxes.get_adjustable.html", "_foxes/utils/TabWindroseAxes.get_agg_filter.html", "_foxes/utils/TabWindroseAxes.get_alpha.html", "_foxes/utils/TabWindroseAxes.get_anchor.html", "_foxes/utils/TabWindroseAxes.get_animated.html", "_foxes/utils/TabWindroseAxes.get_aspect.html", "_foxes/utils/TabWindroseAxes.get_autoscale_on.html", "_foxes/utils/TabWindroseAxes.get_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.get_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.get_axes_locator.html", "_foxes/utils/TabWindroseAxes.get_axisbelow.html", "_foxes/utils/TabWindroseAxes.get_box_aspect.html", "_foxes/utils/TabWindroseAxes.get_children.html", "_foxes/utils/TabWindroseAxes.get_clip_box.html", "_foxes/utils/TabWindroseAxes.get_clip_on.html", "_foxes/utils/TabWindroseAxes.get_clip_path.html", "_foxes/utils/TabWindroseAxes.get_cursor_data.html", "_foxes/utils/TabWindroseAxes.get_data_ratio.html", "_foxes/utils/TabWindroseAxes.get_default_bbox_extra_artists.html", "_foxes/utils/TabWindroseAxes.get_facecolor.html", "_foxes/utils/TabWindroseAxes.get_fc.html", "_foxes/utils/TabWindroseAxes.get_figure.html", "_foxes/utils/TabWindroseAxes.get_forward_navigation_events.html", "_foxes/utils/TabWindroseAxes.get_frame_on.html", "_foxes/utils/TabWindroseAxes.get_gid.html", "_foxes/utils/TabWindroseAxes.get_gridspec.html", "_foxes/utils/TabWindroseAxes.get_images.html", "_foxes/utils/TabWindroseAxes.get_in_layout.html", "_foxes/utils/TabWindroseAxes.get_label.html", "_foxes/utils/TabWindroseAxes.get_legend.html", "_foxes/utils/TabWindroseAxes.get_legend_handles_labels.html", "_foxes/utils/TabWindroseAxes.get_lines.html", "_foxes/utils/TabWindroseAxes.get_mouseover.html", "_foxes/utils/TabWindroseAxes.get_navigate.html", "_foxes/utils/TabWindroseAxes.get_navigate_mode.html", "_foxes/utils/TabWindroseAxes.get_path_effects.html", "_foxes/utils/TabWindroseAxes.get_picker.html", "_foxes/utils/TabWindroseAxes.get_position.html", "_foxes/utils/TabWindroseAxes.get_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.get_rasterized.html", "_foxes/utils/TabWindroseAxes.get_rlabel_position.html", "_foxes/utils/TabWindroseAxes.get_rmax.html", "_foxes/utils/TabWindroseAxes.get_rmin.html", "_foxes/utils/TabWindroseAxes.get_rorigin.html", "_foxes/utils/TabWindroseAxes.get_rsign.html", "_foxes/utils/TabWindroseAxes.get_shared_x_axes.html", "_foxes/utils/TabWindroseAxes.get_shared_y_axes.html", "_foxes/utils/TabWindroseAxes.get_sketch_params.html", "_foxes/utils/TabWindroseAxes.get_snap.html", "_foxes/utils/TabWindroseAxes.get_subplotspec.html", "_foxes/utils/TabWindroseAxes.get_theta_direction.html", "_foxes/utils/TabWindroseAxes.get_theta_offset.html", "_foxes/utils/TabWindroseAxes.get_thetamax.html", "_foxes/utils/TabWindroseAxes.get_thetamin.html", "_foxes/utils/TabWindroseAxes.get_tightbbox.html", "_foxes/utils/TabWindroseAxes.get_title.html", "_foxes/utils/TabWindroseAxes.get_transform.html", "_foxes/utils/TabWindroseAxes.get_transformed_clip_path_and_affine.html", "_foxes/utils/TabWindroseAxes.get_url.html", "_foxes/utils/TabWindroseAxes.get_visible.html", "_foxes/utils/TabWindroseAxes.get_window_extent.html", "_foxes/utils/TabWindroseAxes.get_xaxis.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_xaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_xbound.html", "_foxes/utils/TabWindroseAxes.get_xgridlines.html", "_foxes/utils/TabWindroseAxes.get_xlabel.html", "_foxes/utils/TabWindroseAxes.get_xlim.html", "_foxes/utils/TabWindroseAxes.get_xmajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xmargin.html", "_foxes/utils/TabWindroseAxes.get_xminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_xscale.html", "_foxes/utils/TabWindroseAxes.get_xticklabels.html", "_foxes/utils/TabWindroseAxes.get_xticklines.html", "_foxes/utils/TabWindroseAxes.get_xticks.html", "_foxes/utils/TabWindroseAxes.get_yaxis.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text1_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_text2_transform.html", "_foxes/utils/TabWindroseAxes.get_yaxis_transform.html", "_foxes/utils/TabWindroseAxes.get_ybound.html", "_foxes/utils/TabWindroseAxes.get_ygridlines.html", "_foxes/utils/TabWindroseAxes.get_ylabel.html", "_foxes/utils/TabWindroseAxes.get_ylim.html", "_foxes/utils/TabWindroseAxes.get_ymajorticklabels.html", "_foxes/utils/TabWindroseAxes.get_ymargin.html", "_foxes/utils/TabWindroseAxes.get_yminorticklabels.html", "_foxes/utils/TabWindroseAxes.get_yscale.html", "_foxes/utils/TabWindroseAxes.get_yticklabels.html", "_foxes/utils/TabWindroseAxes.get_yticklines.html", "_foxes/utils/TabWindroseAxes.get_yticks.html", "_foxes/utils/TabWindroseAxes.get_zorder.html", "_foxes/utils/TabWindroseAxes.grid.html", "_foxes/utils/TabWindroseAxes.has_data.html", "_foxes/utils/TabWindroseAxes.have_units.html", "_foxes/utils/TabWindroseAxes.hexbin.html", "_foxes/utils/TabWindroseAxes.hist.html", "_foxes/utils/TabWindroseAxes.hist2d.html", "_foxes/utils/TabWindroseAxes.hlines.html", "_foxes/utils/TabWindroseAxes.images.html", "_foxes/utils/TabWindroseAxes.imshow.html", "_foxes/utils/TabWindroseAxes.in_axes.html", "_foxes/utils/TabWindroseAxes.indicate_inset.html", "_foxes/utils/TabWindroseAxes.indicate_inset_zoom.html", "_foxes/utils/TabWindroseAxes.inset_axes.html", "_foxes/utils/TabWindroseAxes.invert_xaxis.html", "_foxes/utils/TabWindroseAxes.invert_yaxis.html", "_foxes/utils/TabWindroseAxes.is_transform_set.html", "_foxes/utils/TabWindroseAxes.label_outer.html", "_foxes/utils/TabWindroseAxes.legend.html", "_foxes/utils/TabWindroseAxes.lines.html", "_foxes/utils/TabWindroseAxes.locator_params.html", "_foxes/utils/TabWindroseAxes.loglog.html", "_foxes/utils/TabWindroseAxes.magnitude_spectrum.html", "_foxes/utils/TabWindroseAxes.margins.html", "_foxes/utils/TabWindroseAxes.matshow.html", "_foxes/utils/TabWindroseAxes.minorticks_off.html", "_foxes/utils/TabWindroseAxes.minorticks_on.html", "_foxes/utils/TabWindroseAxes.mouseover.html", "_foxes/utils/TabWindroseAxes.name.html", "_foxes/utils/TabWindroseAxes.patches.html", "_foxes/utils/TabWindroseAxes.pchanged.html", "_foxes/utils/TabWindroseAxes.pcolor.html", "_foxes/utils/TabWindroseAxes.pcolorfast.html", "_foxes/utils/TabWindroseAxes.pcolormesh.html", "_foxes/utils/TabWindroseAxes.phase_spectrum.html", "_foxes/utils/TabWindroseAxes.pick.html", "_foxes/utils/TabWindroseAxes.pickable.html", "_foxes/utils/TabWindroseAxes.pie.html", "_foxes/utils/TabWindroseAxes.plot.html", "_foxes/utils/TabWindroseAxes.plot_date.html", "_foxes/utils/TabWindroseAxes.properties.html", "_foxes/utils/TabWindroseAxes.psd.html", "_foxes/utils/TabWindroseAxes.quiver.html", "_foxes/utils/TabWindroseAxes.quiverkey.html", "_foxes/utils/TabWindroseAxes.redraw_in_frame.html", "_foxes/utils/TabWindroseAxes.relim.html", "_foxes/utils/TabWindroseAxes.remove.html", "_foxes/utils/TabWindroseAxes.remove_callback.html", "_foxes/utils/TabWindroseAxes.reset_position.html", "_foxes/utils/TabWindroseAxes.scatter.html", "_foxes/utils/TabWindroseAxes.secondary_xaxis.html", "_foxes/utils/TabWindroseAxes.secondary_yaxis.html", "_foxes/utils/TabWindroseAxes.semilogx.html", "_foxes/utils/TabWindroseAxes.semilogy.html", "_foxes/utils/TabWindroseAxes.set.html", "_foxes/utils/TabWindroseAxes.set_adjustable.html", "_foxes/utils/TabWindroseAxes.set_agg_filter.html", "_foxes/utils/TabWindroseAxes.set_alpha.html", "_foxes/utils/TabWindroseAxes.set_anchor.html", "_foxes/utils/TabWindroseAxes.set_animated.html", "_foxes/utils/TabWindroseAxes.set_aspect.html", "_foxes/utils/TabWindroseAxes.set_autoscale_on.html", "_foxes/utils/TabWindroseAxes.set_autoscalex_on.html", "_foxes/utils/TabWindroseAxes.set_autoscaley_on.html", "_foxes/utils/TabWindroseAxes.set_axes_locator.html", "_foxes/utils/TabWindroseAxes.set_axis_off.html", "_foxes/utils/TabWindroseAxes.set_axis_on.html", "_foxes/utils/TabWindroseAxes.set_axisbelow.html", "_foxes/utils/TabWindroseAxes.set_box_aspect.html", "_foxes/utils/TabWindroseAxes.set_clip_box.html", "_foxes/utils/TabWindroseAxes.set_clip_on.html", "_foxes/utils/TabWindroseAxes.set_clip_path.html", "_foxes/utils/TabWindroseAxes.set_facecolor.html", "_foxes/utils/TabWindroseAxes.set_fc.html", "_foxes/utils/TabWindroseAxes.set_figure.html", "_foxes/utils/TabWindroseAxes.set_forward_navigation_events.html", "_foxes/utils/TabWindroseAxes.set_frame_on.html", "_foxes/utils/TabWindroseAxes.set_gid.html", "_foxes/utils/TabWindroseAxes.set_in_layout.html", "_foxes/utils/TabWindroseAxes.set_label.html", "_foxes/utils/TabWindroseAxes.set_legend.html", "_foxes/utils/TabWindroseAxes.set_mouseover.html", "_foxes/utils/TabWindroseAxes.set_navigate.html", "_foxes/utils/TabWindroseAxes.set_navigate_mode.html", "_foxes/utils/TabWindroseAxes.set_path_effects.html", "_foxes/utils/TabWindroseAxes.set_picker.html", "_foxes/utils/TabWindroseAxes.set_position.html", "_foxes/utils/TabWindroseAxes.set_prop_cycle.html", "_foxes/utils/TabWindroseAxes.set_radii_angle.html", "_foxes/utils/TabWindroseAxes.set_rasterization_zorder.html", "_foxes/utils/TabWindroseAxes.set_rasterized.html", "_foxes/utils/TabWindroseAxes.set_rgrids.html", "_foxes/utils/TabWindroseAxes.set_rlabel_position.html", "_foxes/utils/TabWindroseAxes.set_rlim.html", "_foxes/utils/TabWindroseAxes.set_rmax.html", "_foxes/utils/TabWindroseAxes.set_rmin.html", "_foxes/utils/TabWindroseAxes.set_rorigin.html", "_foxes/utils/TabWindroseAxes.set_rscale.html", "_foxes/utils/TabWindroseAxes.set_rticks.html", "_foxes/utils/TabWindroseAxes.set_sketch_params.html", "_foxes/utils/TabWindroseAxes.set_snap.html", "_foxes/utils/TabWindroseAxes.set_subplotspec.html", "_foxes/utils/TabWindroseAxes.set_theta_direction.html", "_foxes/utils/TabWindroseAxes.set_theta_offset.html", "_foxes/utils/TabWindroseAxes.set_theta_zero_location.html", "_foxes/utils/TabWindroseAxes.set_thetagrids.html", "_foxes/utils/TabWindroseAxes.set_thetalim.html", "_foxes/utils/TabWindroseAxes.set_thetamax.html", "_foxes/utils/TabWindroseAxes.set_thetamin.html", "_foxes/utils/TabWindroseAxes.set_title.html", "_foxes/utils/TabWindroseAxes.set_transform.html", "_foxes/utils/TabWindroseAxes.set_url.html", "_foxes/utils/TabWindroseAxes.set_visible.html", "_foxes/utils/TabWindroseAxes.set_xbound.html", "_foxes/utils/TabWindroseAxes.set_xlabel.html", "_foxes/utils/TabWindroseAxes.set_xlim.html", "_foxes/utils/TabWindroseAxes.set_xmargin.html", "_foxes/utils/TabWindroseAxes.set_xscale.html", "_foxes/utils/TabWindroseAxes.set_xticklabels.html", "_foxes/utils/TabWindroseAxes.set_xticks.html", "_foxes/utils/TabWindroseAxes.set_ybound.html", "_foxes/utils/TabWindroseAxes.set_ylabel.html", "_foxes/utils/TabWindroseAxes.set_ylim.html", "_foxes/utils/TabWindroseAxes.set_ymargin.html", "_foxes/utils/TabWindroseAxes.set_yscale.html", "_foxes/utils/TabWindroseAxes.set_yticklabels.html", "_foxes/utils/TabWindroseAxes.set_yticks.html", "_foxes/utils/TabWindroseAxes.set_zorder.html", "_foxes/utils/TabWindroseAxes.sharex.html", "_foxes/utils/TabWindroseAxes.sharey.html", "_foxes/utils/TabWindroseAxes.specgram.html", "_foxes/utils/TabWindroseAxes.spy.html", "_foxes/utils/TabWindroseAxes.stackplot.html", "_foxes/utils/TabWindroseAxes.stairs.html", "_foxes/utils/TabWindroseAxes.stale.html", "_foxes/utils/TabWindroseAxes.start_pan.html", "_foxes/utils/TabWindroseAxes.stem.html", "_foxes/utils/TabWindroseAxes.step.html", "_foxes/utils/TabWindroseAxes.sticky_edges.html", "_foxes/utils/TabWindroseAxes.streamplot.html", "_foxes/utils/TabWindroseAxes.table.html", "_foxes/utils/TabWindroseAxes.tables.html", "_foxes/utils/TabWindroseAxes.text.html", "_foxes/utils/TabWindroseAxes.texts.html", "_foxes/utils/TabWindroseAxes.tick_params.html", "_foxes/utils/TabWindroseAxes.ticklabel_format.html", "_foxes/utils/TabWindroseAxes.tricontour.html", "_foxes/utils/TabWindroseAxes.tricontourf.html", "_foxes/utils/TabWindroseAxes.tripcolor.html", "_foxes/utils/TabWindroseAxes.triplot.html", "_foxes/utils/TabWindroseAxes.twinx.html", "_foxes/utils/TabWindroseAxes.twiny.html", "_foxes/utils/TabWindroseAxes.update.html", "_foxes/utils/TabWindroseAxes.update_datalim.html", "_foxes/utils/TabWindroseAxes.update_from.html", "_foxes/utils/TabWindroseAxes.use_sticky_edges.html", "_foxes/utils/TabWindroseAxes.viewLim.html", "_foxes/utils/TabWindroseAxes.violin.html", "_foxes/utils/TabWindroseAxes.violinplot.html", "_foxes/utils/TabWindroseAxes.vlines.html", "_foxes/utils/TabWindroseAxes.xaxis_date.html", "_foxes/utils/TabWindroseAxes.xaxis_inverted.html", "_foxes/utils/TabWindroseAxes.xcorr.html", "_foxes/utils/TabWindroseAxes.yaxis_date.html", "_foxes/utils/TabWindroseAxes.yaxis_inverted.html", "_foxes/utils/TabWindroseAxes.zorder.html", "_foxes/utils/WakeKFactory.html", "_foxes/utils/WakeKFactory.__init__.html", "_foxes/utils/WakeKFactory.__str__.html", "_foxes/utils/abl/neutral/calc_ws.html", "_foxes/utils/abl/neutral/logz.html", "_foxes/utils/abl/neutral/ustar.html", "_foxes/utils/abl/sheared/calc_ws.html", "_foxes/utils/abl/stable/calc_ws.html", "_foxes/utils/abl/stable/logz.html", "_foxes/utils/abl/stable/psi.html", "_foxes/utils/abl/stable/ustar.html", "_foxes/utils/abl/unstable/calc_ws.html", "_foxes/utils/abl/unstable/psi.html", "_foxes/utils/abl/unstable/ustar.html", "_foxes/utils/all_subclasses.html", "_foxes/utils/cubic_roots.html", "_foxes/utils/delta_wd.html", "_foxes/utils/exec_python.html", "_foxes/utils/geom2d/AreaGeometry.html", "_foxes/utils/geom2d/AreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/AreaGeometry.inverse.html", "_foxes/utils/geom2d/AreaGeometry.p_max.html", "_foxes/utils/geom2d/AreaGeometry.p_min.html", "_foxes/utils/geom2d/AreaGeometry.points_distance.html", "_foxes/utils/geom2d/AreaGeometry.points_inside.html", "_foxes/utils/geom2d/AreaIntersection.html", "_foxes/utils/geom2d/AreaIntersection.__new__.html", "_foxes/utils/geom2d/AreaUnion.html", "_foxes/utils/geom2d/AreaUnion.__init__.html", "_foxes/utils/geom2d/AreaUnion.add_to_figure.html", "_foxes/utils/geom2d/AreaUnion.inverse.html", "_foxes/utils/geom2d/AreaUnion.p_max.html", "_foxes/utils/geom2d/AreaUnion.p_min.html", "_foxes/utils/geom2d/AreaUnion.points_distance.html", "_foxes/utils/geom2d/AreaUnion.points_inside.html", "_foxes/utils/geom2d/Circle.html", "_foxes/utils/geom2d/Circle.__init__.html", "_foxes/utils/geom2d/Circle.add_to_figure.html", "_foxes/utils/geom2d/Circle.p_max.html", "_foxes/utils/geom2d/Circle.p_min.html", "_foxes/utils/geom2d/Circle.points_distance.html", "_foxes/utils/geom2d/Circle.points_inside.html", "_foxes/utils/geom2d/ClosedPolygon.html", "_foxes/utils/geom2d/ClosedPolygon.__init__.html", "_foxes/utils/geom2d/ClosedPolygon.add_to_figure.html", "_foxes/utils/geom2d/ClosedPolygon.p_max.html", "_foxes/utils/geom2d/ClosedPolygon.p_min.html", "_foxes/utils/geom2d/ClosedPolygon.points_distance.html", "_foxes/utils/geom2d/ClosedPolygon.points_inside.html", "_foxes/utils/geom2d/HalfPlane.html", "_foxes/utils/geom2d/HalfPlane.__init__.html", "_foxes/utils/geom2d/HalfPlane.add_to_figure.html", "_foxes/utils/geom2d/HalfPlane.inverse.html", "_foxes/utils/geom2d/HalfPlane.p_max.html", "_foxes/utils/geom2d/HalfPlane.p_min.html", "_foxes/utils/geom2d/HalfPlane.points_distance.html", "_foxes/utils/geom2d/HalfPlane.points_inside.html", "_foxes/utils/geom2d/InvertedAreaGeometry.html", "_foxes/utils/geom2d/InvertedAreaGeometry.__init__.html", "_foxes/utils/geom2d/InvertedAreaGeometry.add_to_figure.html", "_foxes/utils/geom2d/InvertedAreaGeometry.inverse.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_max.html", "_foxes/utils/geom2d/InvertedAreaGeometry.p_min.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_distance.html", "_foxes/utils/geom2d/InvertedAreaGeometry.points_inside.html", "_foxes/utils/import_module.html", "_foxes/utils/load_module.html", "_foxes/utils/print_mem.html", "_foxes/utils/random_xy_square.html", "_foxes/utils/read_shp.html", "_foxes/utils/read_shp_polygons.html", "_foxes/utils/read_tab_file.html", "_foxes/utils/shp2csv.html", "_foxes/utils/shp2geom2d.html", "_foxes/utils/sqrt_reg.html", "_foxes/utils/two_circles/area.html", "_foxes/utils/two_circles/calc_area.html", "_foxes/utils/uv2wd.html", "_foxes/utils/wd2uv.html", "_foxes/utils/wd2wdvec.html", "_foxes/utils/wdvec2wd.html", "_foxes/utils/write_nc.html", "_foxes/variables/AMB_CAP.html", "_foxes/variables/AMB_CT.html", "_foxes/variables/AMB_P.html", "_foxes/variables/AMB_REWS.html", "_foxes/variables/AMB_REWS2.html", "_foxes/variables/AMB_REWS3.html", "_foxes/variables/AMB_RHO.html", "_foxes/variables/AMB_T.html", "_foxes/variables/AMB_TI.html", "_foxes/variables/AMB_WD.html", "_foxes/variables/AMB_WS.html", "_foxes/variables/AMB_YAW.html", "_foxes/variables/AMB_YAWM.html", "_foxes/variables/AMB_YLD.html", "_foxes/variables/CAP.html", "_foxes/variables/CT.html", "_foxes/variables/D.html", "_foxes/variables/DEFAULT_DIGITS.html", "_foxes/variables/EFF.html", "_foxes/variables/H.html", "_foxes/variables/K.html", "_foxes/variables/KB.html", "_foxes/variables/KTI.html", "_foxes/variables/MAX_P.html", "_foxes/variables/MOL.html", "_foxes/variables/ORDER.html", "_foxes/variables/ORDER_INV.html", "_foxes/variables/ORDER_SSEL.html", "_foxes/variables/P.html", "_foxes/variables/PA_ALPHA.html", "_foxes/variables/PA_BETA.html", "_foxes/variables/REWS.html", "_foxes/variables/REWS2.html", "_foxes/variables/REWS3.html", "_foxes/variables/RHO.html", "_foxes/variables/SHEAR.html", "_foxes/variables/T.html", "_foxes/variables/TI.html", "_foxes/variables/TXYH.html", "_foxes/variables/WD.html", "_foxes/variables/WEIGHT.html", "_foxes/variables/WS.html", "_foxes/variables/X.html", "_foxes/variables/Y.html", "_foxes/variables/YAW.html", "_foxes/variables/YAWM.html", "_foxes/variables/YLD.html", "_foxes/variables/Z0.html", "_foxes/variables/amb2var.html", "_foxes/variables/get_default_digits.html", "_foxes/variables/var2amb.html", "api.html", "api_algorithms.html", "api_algorithms_downwind.html", "api_algorithms_iterative.html", "api_algorithms_sequential.html", "api_config.html", "api_constants.html", "api_core.html", "api_data.html", "api_engines.html", "api_foxes.html", "api_input.html", "api_models.html", "api_output.html", "api_utils.html", "api_utils_abl.html", "api_variables.html", "api_wake_models.html", "apps.html", "citation.html", "examples.html", "index.html", "inputs.html", "installation.html", "models.html", "notebooks/blockage_comparison.html", "notebooks/blockage_farm.html", "notebooks/data.html", "notebooks/dyn_wakes.html", "notebooks/heterogeneous.html", "notebooks/model_book.html", "notebooks/multi_height.html", "notebooks/parallelization.html", "notebooks/partial_wakes.html", "notebooks/power_mask.html", "notebooks/rotor_models.html", "notebooks/sector_man.html", "notebooks/sequential.html", "notebooks/single_row.html", "notebooks/timelines.html", "notebooks/timeseries.html", "notebooks/wind_rose.html", "notebooks/yawed_wake.html", "optimization.html", "overview.html", "testing.html"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "indexentries": {}, "objects": {"foxes.algorithms": [[1, 0, 1, "", "Downwind", "The downwind algorithm."], [17, 0, 1, "", "Iterative", "Iterative calculation of farm data."], [27, 0, 1, "", "Sequential", "A sequential calculation of states without chunking."]], "foxes.algorithms.Downwind": [[2, 1, 1, "", "DEFAULT_FARM_OUTPUTS", ""], [3, 2, 1, "", "__init__", "Constructor."], [4, 2, 1, "", "calc_farm", "Calculate farm data."], [5, 2, 1, "", "calc_points", "Calculate data at a given set of points."], [6, 4, 1, "", "farm_controller", "The farm controller"], [7, 2, 1, "", "get_model", "Get the algorithm specific model"], [8, 4, 1, "", "ground_models", "The ground models"], [9, 2, 1, "", "init_states", "Initialize states, if needed."], [10, 2, 1, "", "initialize", "Initializes the algorithm."], [11, 4, 1, "", "partial_wakes", "The partial wakes models"], [12, 4, 1, "", "rotor_model", "The rotor model"], [13, 4, 1, "", "states", "The states"], [14, 2, 1, "", "sub_models", "List of all sub-models"], [15, 4, 1, "", "wake_frame", "The wake frame"], [16, 4, 1, "", "wake_models", "The wake models"]], "foxes.algorithms.Downwind.__init__": [[3, 3, 2, "", "farm", "Constructor."], [3, 3, 2, "", "farm_controller", "Constructor."], [3, 3, 2, "", "ground_models", "Constructor."], [3, 3, 2, "", "kwargs", "Constructor."], [3, 3, 2, "", "mbook", "Constructor."], [3, 3, 2, "", "partial_wakes", "Constructor."], [3, 3, 2, "", "rotor_model", "Constructor."], [3, 3, 2, "", "states", "Constructor."], [3, 3, 2, "", "wake_frame", "Constructor."], [3, 3, 2, "", "wake_models", "Constructor."]], "foxes.algorithms.Downwind.calc_farm": [[4, 3, 2, "", "ambient", "Calculate farm data."], [4, 3, 2, "", "calc_parameters", "Calculate farm data."], [4, 3, 2, "", "finalize", "Calculate farm data."], [4, 3, 2, "", "kwargs", "Calculate farm data."], [4, 3, 2, "", "outputs", "Calculate farm data."]], "foxes.algorithms.Downwind.calc_points": [[5, 3, 2, "", "ambient", "Calculate data at a given set of points."], [5, 3, 2, "", "calc_parameters", "Calculate data at a given set of points."], [5, 3, 2, "", "chunked_results", "Calculate data at a given set of points."], [5, 3, 2, "", "farm_results", "Calculate data at a given set of points."], [5, 3, 2, "", "finalize", "Calculate data at a given set of points."], [5, 3, 2, "", "kwargs", "Calculate data at a given set of points."], [5, 3, 2, "", "outputs", "Calculate data at a given set of points."], [5, 3, 2, "", "persist_mdata", "Calculate data at a given set of points."], [5, 3, 2, "", "persist_pdata", "Calculate data at a given set of points."], [5, 3, 2, "", "point_models", "Calculate data at a given set of points."], [5, 3, 2, "", "points", "Calculate data at a given set of points."], [5, 3, 2, "", "states_isel", "Calculate data at a given set of points."], [5, 3, 2, "", "states_sel", "Calculate data at a given set of points."]], "foxes.algorithms.Downwind.get_model": [[7, 3, 2, "", "name", "Get the algorithm specific model"]], "foxes.algorithms.Iterative": [[18, 2, 1, "", "__init__", "Constructor."], [19, 2, 1, "", "calc_farm", "Calculate farm data."], [20, 4, 1, "", "farm_results_downwind", "Gets the all-chunks farm results in downwind order from the previous iteration"], [21, 4, 1, "", "final_iteration", "Flag for the final iteration"], [22, 2, 1, "", "get_model", "Get the algorithm specific model"], [23, 2, 1, "", "initialize", "Initializes the algorithm."], [24, 4, 1, "", "iterations", "The current iteration number"], [25, 2, 1, "", "set_urelax", "Sets under-relaxation parameters."], [26, 4, 1, "", "urelax", "Returns the under-relaxation parameters"]], "foxes.algorithms.Iterative.__init__": [[18, 3, 2, "", "args", "Constructor."], [18, 3, 2, "", "conv_crit", "Constructor."], [18, 3, 2, "", "kwargs", "Constructor."], [18, 3, 2, "", "max_it", "Constructor."], [18, 3, 2, "", "mod_cutin", "Constructor."]], "foxes.algorithms.Iterative.calc_farm": [[19, 3, 2, "", "finalize", "Calculate farm data."], [19, 3, 2, "", "kwargs", "Calculate farm data."], [19, 3, 2, "", "ret_dwnd_order", "Calculate farm data."]], "foxes.algorithms.Iterative.get_model": [[22, 3, 2, "", "name", "Get the algorithm specific model"]], "foxes.algorithms.Iterative.set_urelax": [[25, 3, 2, "", "entry_point", "Sets under-relaxation parameters."], [25, 3, 2, "", "urel", "Sets under-relaxation parameters."]], "foxes.algorithms.Sequential": [[28, 2, 1, "", "__init__", "Constructor."], [29, 2, 1, "", "__iter__", "Initialize the iterator"], [30, 2, 1, "", "__next__", "Run calculation for current step, then iterate to next"], [31, 2, 1, "", "calc_farm", "Calculate farm data."], [32, 2, 1, "", "calc_points", "Calculate data at a given set of points."], [33, 4, 1, "", "counter", "The current index counter"], [34, 4, 1, "", "cur_farm_results", "The current farm results"], [35, 4, 1, "", "cur_point_results", "The current point results"], [36, 4, 1, "", "farm_results", "The overall farm results"], [37, 4, 1, "", "farm_results_downwind", "The overall farm results, with turbine dimension in downwind order"], [38, 2, 1, "", "get_model", "Get the algorithm specific model"], [39, 2, 1, "", "get_models_data", "Creates xarray from model input data."], [40, 4, 1, "", "index", "The current index"], [41, 4, 1, "", "iterating", "Flag for running iteration"], [42, 4, 1, "", "point_results", "The overall point results"], [43, 4, 1, "", "size", "The total number of iteration steps"], [44, 2, 1, "", "states_i0", "Returns counter or index"], [45, 4, 1, "", "weight", "The current weight array"]], "foxes.algorithms.Sequential.__init__": [[28, 3, 2, "", "ambient", "Constructor."], [28, 3, 2, "", "args", "Constructor."], [28, 3, 2, "", "calc_pars", "Constructor."], [28, 3, 2, "", "farm", "Constructor."], [28, 3, 2, "", "kwargs", "Constructor."], [28, 3, 2, "", "outputs", "Constructor."], [28, 3, 2, "", "plugins", "Constructor."], [28, 3, 2, "", "points", "Constructor."], [28, 3, 2, "", "states", "Constructor."]], "foxes.algorithms.Sequential.calc_points": [[32, 3, 2, "", "farm_results", "Calculate data at a given set of points."], [32, 3, 2, "", "kwargs", "Calculate data at a given set of points."], [32, 3, 2, "", "points", "Calculate data at a given set of points."]], "foxes.algorithms.Sequential.get_model": [[38, 3, 2, "", "name", "Get the algorithm specific model"]], "foxes.algorithms.Sequential.get_models_data": [[39, 3, 2, "", "isel", "Creates xarray from model input data."], [39, 3, 2, "", "sel", "Creates xarray from model input data."]], "foxes.algorithms.Sequential.states_i0": [[44, 3, 2, "", "algo", "Returns counter or index"], [44, 3, 2, "", "counter", "Returns counter or index"]], "foxes.algorithms.downwind.models": [[46, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [49, 0, 1, "", "InitFarmData", "Sets basic turbine data and applies downwind order"], [53, 0, 1, "", "PointWakesCalculation", "This model calculates wake effects at points of interest."], [59, 0, 1, "", "ReorderFarmOutput", "Reorders final results to state-turbine dimensions"], [63, 0, 1, "", "SetAmbFarmResults", "This model copies farm data results to ambient results."], [67, 0, 1, "", "SetAmbPointResults", "This model copies point results to ambient results."]], "foxes.algorithms.downwind.models.FarmWakesCalculation": [[47, 2, 1, "", "calculate", "The main model calculation."], [48, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate": [[47, 3, 2, "", "algo", "The main model calculation."], [47, 3, 2, "", "fdata", "The main model calculation."], [47, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars": [[48, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.InitFarmData": [[50, 2, 1, "", "__init__", "Constructor."], [51, 2, 1, "", "calculate", "The main model calculation."], [52, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.InitFarmData.calculate": [[51, 3, 2, "", "algo", "The main model calculation."], [51, 3, 2, "", "fdata", "The main model calculation."], [51, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.downwind.models.InitFarmData.output_farm_vars": [[52, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.PointWakesCalculation": [[54, 2, 1, "", "__init__", "Constructor."], [55, 2, 1, "", "calculate", "The main model calculation."], [56, 2, 1, "", "initialize", "Initializes the model."], [57, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [58, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.downwind.models.PointWakesCalculation.__init__": [[54, 3, 2, "", "emodels", "Constructor."], [54, 3, 2, "", "emodels_cpars", "Constructor."], [54, 3, 2, "", "wake_models", "Constructor."]], "foxes.algorithms.downwind.models.PointWakesCalculation.calculate": [[55, 3, 2, "", "algo", "The main model calculation."], [55, 3, 2, "", "downwind_index", "The main model calculation."], [55, 3, 2, "", "fdata", "The main model calculation."], [55, 3, 2, "", "mdata", "The main model calculation."], [55, 3, 2, "", "tdata", "The main model calculation."]], "foxes.algorithms.downwind.models.PointWakesCalculation.initialize": [[56, 3, 2, "", "algo", "Initializes the model."], [56, 3, 2, "", "force", "Initializes the model."], [56, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars": [[57, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.ReorderFarmOutput": [[60, 2, 1, "", "__init__", "Constructor"], [61, 2, 1, "", "calculate", "The main model calculation."], [62, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.ReorderFarmOutput.__init__": [[60, 3, 2, "", "outputs", "Constructor"]], "foxes.algorithms.downwind.models.ReorderFarmOutput.calculate": [[61, 3, 2, "", "algo", "The main model calculation."], [61, 3, 2, "", "fdata", "The main model calculation."], [61, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.downwind.models.ReorderFarmOutput.output_farm_vars": [[62, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbFarmResults": [[64, 2, 1, "", "__init__", "Constructor."], [65, 2, 1, "", "calculate", "The main model calculation."], [66, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate": [[65, 3, 2, "", "algo", "The main model calculation."], [65, 3, 2, "", "fdata", "The main model calculation."], [65, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars": [[66, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults": [[68, 2, 1, "", "__init__", "Constructor."], [69, 2, 1, "", "calculate", "The main model calculation."], [70, 2, 1, "", "initialize", "Initializes the model."], [71, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults.calculate": [[69, 3, 2, "", "algo", "The main model calculation."], [69, 3, 2, "", "fdata", "The main model calculation."], [69, 3, 2, "", "mdata", "The main model calculation."], [69, 3, 2, "", "pdata", "The main model calculation."]], "foxes.algorithms.downwind.models.SetAmbPointResults.initialize": [[70, 3, 2, "", "algo", "Initializes the model."], [70, 3, 2, "", "force", "Initializes the model."], [70, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars": [[71, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.iterative": [[72, 0, 1, "", "ConvCrit", "Abstract base class for convergence criteria"], [76, 0, 1, "", "ConvCritList", "A list of convergence criteria"], [81, 0, 1, "", "ConvVarDelta", "Requires convergence of a selection of variables."], [85, 0, 1, "", "DefaultConv", "Default convergence criteria."]], "foxes.algorithms.iterative.ConvCrit": [[73, 2, 1, "", "__init__", "Constructor."], [74, 2, 1, "", "check_converged", "Check convergence criteria."], [75, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCrit.__init__": [[73, 3, 2, "", "name", "Constructor."]], "foxes.algorithms.iterative.ConvCrit.check_converged": [[74, 3, 2, "", "algo", "Check convergence criteria."], [74, 3, 2, "", "prev_results", "Check convergence criteria."], [74, 3, 2, "", "results", "Check convergence criteria."], [74, 3, 2, "", "verbosity", "Check convergence criteria."]], "foxes.algorithms.iterative.ConvCritList": [[77, 2, 1, "", "__init__", "Constructor."], [78, 2, 1, "", "add_crit", "Add a convergence criterion"], [79, 2, 1, "", "check_converged", "Check convergence criteria."], [80, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvCritList.__init__": [[77, 3, 2, "", "crits", "Constructor."], [77, 3, 2, "", "name", "Constructor."]], "foxes.algorithms.iterative.ConvCritList.add_crit": [[78, 3, 2, "", "crit", "Add a convergence criterion"]], "foxes.algorithms.iterative.ConvCritList.check_converged": [[79, 3, 2, "", "algo", "Check convergence criteria."], [79, 3, 2, "", "prev_results", "Check convergence criteria."], [79, 3, 2, "", "results", "Check convergence criteria."], [79, 3, 2, "", "verbosity", "Check convergence criteria."]], "foxes.algorithms.iterative.ConvVarDelta": [[82, 2, 1, "", "__init__", "Constructor."], [83, 2, 1, "", "check_converged", "Check convergence criteria."], [84, 2, 1, "", "get_deltas", "Get the most recent evaluation deltas."]], "foxes.algorithms.iterative.ConvVarDelta.__init__": [[82, 3, 2, "", "limits", "Constructor."], [82, 3, 2, "", "name", "Constructor."], [82, 3, 2, "", "wd_vars", "Constructor."]], "foxes.algorithms.iterative.ConvVarDelta.check_converged": [[83, 3, 2, "", "algo", "Check convergence criteria."], [83, 3, 2, "", "prev_results", "Check convergence criteria."], [83, 3, 2, "", "results", "Check convergence criteria."], [83, 3, 2, "", "verbosity", "Check convergence criteria."]], "foxes.algorithms.iterative.DefaultConv": [[86, 2, 1, "", "__init__", "Constructor."]], "foxes.algorithms.iterative.models": [[87, 0, 1, "", "FarmWakesCalculation", "This model calculates wakes effects on farm data."], [92, 0, 1, "", "URelax", "Apply under-relaxation to selected variables during iterations."]], "foxes.algorithms.iterative.models.FarmWakesCalculation": [[88, 2, 1, "", "__init__", "Constructor."], [89, 2, 1, "", "calculate", "The main model calculation."], [90, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [91, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__": [[88, 3, 2, "", "urelax", "Constructor."]], "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate": [[89, 3, 2, "", "algo", "The main model calculation."], [89, 3, 2, "", "fdata", "The main model calculation."], [89, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars": [[90, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.iterative.models.URelax": [[93, 2, 1, "", "__init__", "Constructor."], [94, 2, 1, "", "calculate", "The main model calculation."], [95, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.algorithms.iterative.models.URelax.__init__": [[93, 3, 2, "", "urel", "Constructor."]], "foxes.algorithms.iterative.models.URelax.calculate": [[94, 3, 2, "", "algo", "The main model calculation."], [94, 3, 2, "", "fdata", "The main model calculation."], [94, 3, 2, "", "mdata", "The main model calculation."]], "foxes.algorithms.iterative.models.URelax.output_farm_vars": [[95, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.sequential": [[96, 0, 1, "", "SequentialPlugin", "Base class for plugins that are updated with each sequential iteration"]], "foxes.algorithms.sequential.SequentialPlugin": [[97, 2, 1, "", "__init__", "Constructor."], [98, 2, 1, "", "finalize", "Finalize data based on the final iterator"], [99, 2, 1, "", "initialize", "Initialize data based on the intial iterator"], [100, 2, 1, "", "update", "Updates data based on current iteration"]], "foxes.algorithms.sequential.SequentialPlugin.finalize": [[98, 3, 2, "", "algo", "Finalize data based on the final iterator"]], "foxes.algorithms.sequential.SequentialPlugin.initialize": [[99, 3, 2, "", "algo", "Initialize data based on the intial iterator"]], "foxes.algorithms.sequential.SequentialPlugin.update": [[100, 3, 2, "", "algo", "Updates data based on current iteration"], [100, 3, 2, "", "fres", "Updates data based on current iteration"], [100, 3, 2, "", "pres", "Updates data based on current iteration"]], "foxes.algorithms.sequential.models": [[101, 0, 1, "", "SeqState", "A single state during sequential iteration, just serving as a structural placeholder"]], "foxes.algorithms.sequential.models.SeqState": [[102, 2, 1, "", "__init__", "Constructor."], [103, 2, 1, "", "calculate", "The main model calculation."], [104, 4, 1, "", "counter", "The current index counter"], [105, 2, 1, "", "index", "The index list"], [106, 2, 1, "", "initialize", "Initializes the model."], [107, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [108, 2, 1, "", "size", "The total number of states."], [109, 2, 1, "", "sub_models", "List of all sub-models"], [110, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.algorithms.sequential.models.SeqState.__init__": [[102, 3, 2, "", "states", "Constructor."]], "foxes.algorithms.sequential.models.SeqState.calculate": [[103, 3, 2, "", "algo", "The main model calculation."], [103, 3, 2, "", "fdata", "The main model calculation."], [103, 3, 2, "", "mdata", "The main model calculation."], [103, 3, 2, "", "tdata", "The main model calculation."]], "foxes.algorithms.sequential.models.SeqState.initialize": [[106, 3, 2, "", "algo", "Initializes the model."], [106, 3, 2, "", "force", "Initializes the model."], [106, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.algorithms.sequential.models.SeqState.output_point_vars": [[107, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.algorithms.sequential.models.SeqState.weights": [[110, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.config": [[111, 0, 1, "", "Config", "Container for configurational data"], [117, 5, 1, "", "get_output_path", "Gets path object, respecting the configurations output directory"], [118, 5, 1, "", "get_path", "Gets path object, respecting the configurations work directory"]], "foxes.config.Config": [[112, 2, 1, "", "__init__", "Constructor"], [113, 4, 1, "", "dtype_double", "The default double data type"], [114, 4, 1, "", "dtype_int", "The default int data type"], [115, 4, 1, "", "out_dir", "The default output directory"], [116, 4, 1, "", "work_dir", "The foxes working directory"]], "foxes.config.get_output_path": [[117, 3, 2, "", "pth", "Gets path object, respecting the configurations output directory"]], "foxes.config.get_path": [[118, 3, 2, "", "pth", "Gets path object, respecting the configurations work directory"]], "foxes.constants": [[119, 6, 1, "", "AMB_ROTOR_RES", "Identifier for ambient rotor point results"], [120, 6, 1, "", "BLOCK_CONVERGENCE", "Identifier for convergence blocking signal"], [121, 6, 1, "", "DTYPE", "Identifier for default double data type"], [122, 6, 1, "", "FARM", "Wind farm identifier"], [123, 6, 1, "", "GW", "The unit gigawatt"], [124, 6, 1, "", "ITYPE", "Identifier for default integer data type"], [125, 6, 1, "", "KAPPA", "The Von Karman constant"], [126, 6, 1, "", "MW", "The unit megawatt"], [127, 6, 1, "", "OUT_DIR", "Identifier for the default output directory"], [128, 6, 1, "", "POINT", "Point identifier"], [129, 6, 1, "", "POINTS", "Points identifier"], [130, 6, 1, "", "POP", "Population identifier"], [131, 6, 1, "", "P_UNITS", "Power unit factors relative to watts, key: unit str, value: factor"], [132, 6, 1, "", "ROTOR_POINTS", "Identifier for rotor points"], [133, 6, 1, "", "ROTOR_WEIGHTS", "Identifier for rotor point weights"], [134, 6, 1, "", "STATE", "States identifier"], [135, 6, 1, "", "STATES_SEL", "Identifier for states selection"], [136, 6, 1, "", "STATE_SOURCE_ORDERI", "Identifier for order index of wake causing turbines"], [137, 6, 1, "", "STATE_TARGET", "Identifier for state-target dimensions"], [138, 6, 1, "", "STATE_TARGET_TPOINT", "Identifier for state-target-tpoints dimensions"], [139, 6, 1, "", "STATE_TURBINE", "Identifier for state-turbine dimensions"], [140, 6, 1, "", "TARGET", "Target identifier"], [141, 6, 1, "", "TARGETS", "Targets identifier"], [142, 6, 1, "", "TIME", "Time identifier"], [143, 6, 1, "", "TMODELS", "Turbine models identifier"], [144, 6, 1, "", "TMODEL_SELS", "Selected turbine models identifier"], [145, 6, 1, "", "TNAME", "Wind turbine name identifier"], [146, 6, 1, "", "TPOINT", "Target point identifier"], [147, 6, 1, "", "TPOINTS", "Points per target identifier"], [148, 6, 1, "", "TURBINE", "Wind turbine identifier"], [149, 6, 1, "", "TW", "The unit terawatt"], [150, 6, 1, "", "TWEIGHTS", "Target point weights identifier"], [151, 6, 1, "", "VALID", "Validity identifier"], [152, 6, 1, "", "VARS", "Variables identifier"], [153, 6, 1, "", "W", "The unit watt"], [154, 6, 1, "", "WORK_DIR", "Identifier for the working directory"], [155, 6, 1, "", "XYH", "The vector (x, y, height)"], [156, 6, 1, "", "kW", "The unit kilowatt"]], "foxes.core": [[157, 0, 1, "", "Algorithm", "Abstract base class for algorithms."], [185, 0, 1, "", "AxialInductionModel", "Abstract base class for axial induction models"], [187, 0, 1, "", "Data", "Container for numpy array data and the associated meta data."], [195, 0, 1, "", "DataCalcModel", "Abstract base class for models that run calculation on xarray Dataset data."], [198, 0, 1, "", "Engine", "Abstract base clas for foxes calculation engines"], [213, 0, 1, "", "ExtendedStates", "States extended by point data models."], [222, 0, 1, "", "FData", "Container for foxes farm data."], [225, 0, 1, "", "FarmController", "Analyses selected turbine models and handles their call."], [237, 0, 1, "", "FarmDataModel", "Abstract base class for models that modify farm data."], [244, 0, 1, "", "FarmDataModelList", "A list of farm data models."], [252, 0, 1, "", "FarmModel", "A FarmDataModel that operates on the farm level (in contrast to a TurbineModel, which allows application to a subset of turbines)."], [253, 0, 1, "", "GroundModel", "Base class for ground models."], [260, 0, 1, "", "MData", "Container for foxes model data."], [262, 0, 1, "", "Model", "Base class for all models."], [276, 0, 1, "", "PartialWakesModel", "Abstract base class for partial wakes models."], [283, 0, 1, "", "PointDataModel", "Abstract base class for models that modify point based data."], [289, 0, 1, "", "PointDataModelList", "A list of point data models."], [296, 0, 1, "", "RotorModel", "Abstract base class of rotor models."], [306, 0, 1, "", "States", "Abstract base class for states."], [314, 0, 1, "", "TData", "Container for foxes target data."], [323, 0, 1, "", "Turbine", "An individual wind turbine."], [327, 0, 1, "", "TurbineInductionModel", "Abstract base class for turbine induction models."], [329, 0, 1, "", "TurbineModel", "Abstract base class for turbine models."], [332, 0, 1, "", "TurbineType", "Abstract base class for turbine type models."], [339, 0, 1, "", "VerticalProfile", "Abstract base class for vertical profiles."], [343, 0, 1, "", "WakeFrame", "Abstract base class for wake frames."], [351, 0, 1, "", "WakeK", "Handler for the wake growth parameter k"], [358, 0, 1, "", "WakeModel", "Abstract base class for wake models."], [364, 0, 1, "", "WakeSuperposition", "Abstract base class for wake superposition models."], [367, 0, 1, "", "WindFarm", "The wind farm."], [372, 5, 1, "", "get_engine", "Gets the global calculation engine"], [373, 5, 1, "", "has_engine", "Flag that checks if engine has been set"], [374, 5, 1, "", "reset_engine", "Resets the global calculation engine"]], "foxes.core.Algorithm": [[158, 2, 1, "", "__init__", "Constructor."], [159, 2, 1, "", "add_to_chunk_store", "Add data to the chunk store"], [160, 2, 1, "", "block_convergence", "Switch on convergence block during iterative run"], [161, 2, 1, "", "calc_farm", "Calculate farm data."], [162, 2, 1, "", "calc_points", "Calculate points data."], [163, 4, 1, "", "chunk_store", "The current chunk store"], [164, 4, 1, "", "dbook", "The data book"], [165, 2, 1, "", "del_model_data", "Remove stored model data"], [166, 2, 1, "", "eval_conv_block", "Evaluate convergence block, removing blocks on the fly"], [167, 4, 1, "", "farm", "The wind farm"], [168, 2, 1, "", "finalize", "Finalizes the algorithm."], [169, 2, 1, "", "find_chunk_in_store", "Finds indices in chunk store"], [170, 2, 1, "", "get_from_chunk_store", "Get data to the chunk store"], [171, 2, 1, "", "get_model_data", "Gets model data from memory"], [172, 2, 1, "", "get_models_data", "Creates xarray from model input data."], [173, 2, 1, "", "get_models_idata", "Returns idata object of models"], [174, 4, 1, "", "idata_mem", "The current idata memory"], [175, 2, 1, "", "initialize", "Initializes the algorithm."], [176, 4, 1, "", "mbook", "The model book"], [177, 2, 1, "", "new", "Run-time algorithm factory."], [178, 2, 1, "", "new_point_data", "Creates a point data xarray object, containing only points."], [179, 2, 1, "", "print", "Print function, based on verbosity."], [180, 2, 1, "", "reset_chunk_store", "Resets the chunk store"], [181, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [182, 2, 1, "", "store_model_data", "Store model data"], [183, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [184, 2, 1, "", "update_n_turbines", "Reset the number of turbines, according to self.farm"]], "foxes.core.Algorithm.__init__": [[158, 3, 2, "", "dbook", "Constructor."], [158, 3, 2, "", "engine_pars", "Constructor."], [158, 3, 2, "", "farm", "Constructor."], [158, 3, 2, "", "mbook", "Constructor."], [158, 3, 2, "", "verbosity", "Constructor."]], "foxes.core.Algorithm.add_to_chunk_store": [[159, 3, 2, "", "copy", "Add data to the chunk store"], [159, 3, 2, "", "data", "Add data to the chunk store"], [159, 3, 2, "", "mdata", "Add data to the chunk store"], [159, 3, 2, "", "name", "Add data to the chunk store"], [159, 3, 2, "", "tdata", "Add data to the chunk store"]], "foxes.core.Algorithm.block_convergence": [[160, 3, 2, "", "kwargs", "Switch on convergence block during iterative run"]], "foxes.core.Algorithm.calc_farm": [[161, 3, 2, "", "args", "Calculate farm data."], [161, 3, 2, "", "kwargs", "Calculate farm data."]], "foxes.core.Algorithm.calc_points": [[162, 3, 2, "", "args", "Calculate points data."], [162, 3, 2, "", "isel", "Calculate points data."], [162, 3, 2, "", "kwargs", "Calculate points data."], [162, 3, 2, "", "sel", "Calculate points data."]], "foxes.core.Algorithm.del_model_data": [[165, 3, 2, "", "model", "Remove stored model data"]], "foxes.core.Algorithm.finalize": [[168, 3, 2, "", "clear_mem", "Finalizes the algorithm."]], "foxes.core.Algorithm.find_chunk_in_store": [[169, 3, 2, "", "error", "Finds indices in chunk store"], [169, 3, 2, "", "mdata", "Finds indices in chunk store"], [169, 3, 2, "", "prev_s", "Finds indices in chunk store"], [169, 3, 2, "", "prev_t", "Finds indices in chunk store"], [169, 3, 2, "", "tdata", "Finds indices in chunk store"]], "foxes.core.Algorithm.get_from_chunk_store": [[170, 3, 2, "", "error", "Get data to the chunk store"], [170, 3, 2, "", "mdata", "Get data to the chunk store"], [170, 3, 2, "", "name", "Get data to the chunk store"], [170, 3, 2, "", "prev_s", "Get data to the chunk store"], [170, 3, 2, "", "prev_t", "Get data to the chunk store"], [170, 3, 2, "", "ret_inds", "Get data to the chunk store"], [170, 3, 2, "", "tdata", "Get data to the chunk store"]], "foxes.core.Algorithm.get_model_data": [[171, 3, 2, "", "model", "Gets model data from memory"]], "foxes.core.Algorithm.get_models_data": [[172, 3, 2, "", "idata", "Creates xarray from model input data."], [172, 3, 2, "", "isel", "Creates xarray from model input data."], [172, 3, 2, "", "sel", "Creates xarray from model input data."]], "foxes.core.Algorithm.new": [[177, 3, 2, "", "algo_type", "Run-time algorithm factory."], [177, 3, 2, "", "args", "Run-time algorithm factory."], [177, 3, 2, "", "kwargs", "Run-time algorithm factory."]], "foxes.core.Algorithm.new_point_data": [[178, 3, 2, "", "n_states", "Creates a point data xarray object, containing only points."], [178, 3, 2, "", "points", "Creates a point data xarray object, containing only points."], [178, 3, 2, "", "states_indices", "Creates a point data xarray object, containing only points."]], "foxes.core.Algorithm.print": [[179, 3, 2, "", "args", "Print function, based on verbosity."], [179, 3, 2, "", "kwargs", "Print function, based on verbosity."], [179, 3, 2, "", "vlim", "Print function, based on verbosity."]], "foxes.core.Algorithm.reset_chunk_store": [[180, 3, 2, "", "new_chunk_store", "Resets the chunk store"]], "foxes.core.Algorithm.set_running": [[181, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [181, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [181, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [181, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [181, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.core.Algorithm.store_model_data": [[182, 3, 2, "", "force", "Store model data"], [182, 3, 2, "", "idata", "Store model data"], [182, 3, 2, "", "model", "Store model data"]], "foxes.core.Algorithm.unset_running": [[183, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [183, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [183, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [183, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [183, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.core.AxialInductionModel": [[186, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.core.AxialInductionModel.ct2a": [[186, 3, 2, "", "ct", "Computes induction from ct"]], "foxes.core.Data": [[188, 2, 1, "", "__init__", "Constructor."], [189, 2, 1, "", "add", "Add data entry"], [190, 2, 1, "", "from_dataset", "Create Data object from a dataset"], [191, 2, 1, "", "get_slice", "Get a slice of data."], [192, 4, 1, "", "n_states", "The number of states"], [193, 4, 1, "", "n_turbines", "The number of turbines"], [194, 2, 1, "", "states_i0", "Get the state counter for first state in chunk"]], "foxes.core.Data.__init__": [[188, 3, 2, "", "data", "Constructor."], [188, 3, 2, "", "dims", "Constructor."], [188, 3, 2, "", "loop_dims", "Constructor."], [188, 3, 2, "", "name", "Constructor."], [188, 3, 2, "", "states_i0", "Constructor."]], "foxes.core.Data.add": [[189, 3, 2, "", "data", "Add data entry"], [189, 3, 2, "", "dims", "Add data entry"], [189, 3, 2, "", "name", "Add data entry"]], "foxes.core.Data.from_dataset": [[190, 3, 2, "", "args", "Create Data object from a dataset"], [190, 3, 2, "", "callback", "Create Data object from a dataset"], [190, 3, 2, "", "copy", "Create Data object from a dataset"], [190, 3, 2, "", "ds", "Create Data object from a dataset"], [190, 3, 2, "", "kwargs", "Create Data object from a dataset"], [190, 3, 2, "", "s_states", "Create Data object from a dataset"]], "foxes.core.Data.get_slice": [[191, 3, 2, "", "dim_map", "Get a slice of data."], [191, 3, 2, "", "name", "Get a slice of data."], [191, 3, 2, "", "s", "Get a slice of data."], [191, 3, 2, "", "variables", "Get a slice of data."]], "foxes.core.Data.states_i0": [[194, 3, 2, "", "counter", "Get the state counter for first state in chunk"]], "foxes.core.DataCalcModel": [[196, 2, 1, "", "calculate", "The main model calculation."], [197, 2, 1, "", "output_coords", "Gets the coordinates of all output arrays"]], "foxes.core.DataCalcModel.calculate": [[196, 3, 2, "", "algo", "The main model calculation."], [196, 3, 2, "", "data", "The main model calculation."], [196, 3, 2, "", "parameters", "The main model calculation."]], "foxes.core.Engine": [[199, 2, 1, "", "__init__", "Constructor."], [200, 2, 1, "", "__repr__", "Return repr(self)."], [201, 2, 1, "", "calc_chunk_sizes", "Computes the sizes of states and points chunks"], [202, 2, 1, "", "combine_results", "Combines chunk results into final Dataset"], [203, 4, 1, "", "entered", "Flag that this model has been entered."], [204, 2, 1, "", "finalize", "Finalizes the engine."], [205, 2, 1, "", "get_chunk_input_data", "Extracts the data for a single chunk calculation"], [206, 2, 1, "", "initialize", "Initializes the engine."], [207, 4, 1, "", "initialized", "Initialization flag."], [208, 4, 1, "", "loop_dims", "Gets the loop dimensions (possibly chunked)"], [209, 2, 1, "", "new", "Run-time engine factory."], [210, 2, 1, "", "print", "Prints based on verbosity"], [211, 2, 1, "", "run_calculation", "Runs the model calculation"], [212, 2, 1, "", "select_subsets", "Takes subsets of datasets"]], "foxes.core.Engine.__init__": [[199, 3, 2, "", "chunk_size_points", "Constructor."], [199, 3, 2, "", "chunk_size_states", "Constructor."], [199, 3, 2, "", "n_procs", "Constructor."], [199, 3, 2, "", "verbosity", "Constructor."]], "foxes.core.Engine.calc_chunk_sizes": [[201, 3, 2, "", "n_states", "Computes the sizes of states and points chunks"], [201, 3, 2, "", "n_targets", "Computes the sizes of states and points chunks"]], "foxes.core.Engine.combine_results": [[202, 3, 2, "", "algo", "Combines chunk results into final Dataset"], [202, 3, 2, "", "goal_data", "Combines chunk results into final Dataset"], [202, 3, 2, "", "iterative", "Combines chunk results into final Dataset"], [202, 3, 2, "", "model_data", "Combines chunk results into final Dataset"], [202, 3, 2, "", "n_chunks_states", "Combines chunk results into final Dataset"], [202, 3, 2, "", "n_chunks_targets", "Combines chunk results into final Dataset"], [202, 3, 2, "", "out_coords", "Combines chunk results into final Dataset"], [202, 3, 2, "", "out_vars", "Combines chunk results into final Dataset"], [202, 3, 2, "", "results", "Combines chunk results into final Dataset"]], "foxes.core.Engine.finalize": [[204, 3, 2, "", "traceback", "Finalizes the engine."], [204, 3, 2, "", "type", "Finalizes the engine."], [204, 3, 2, "", "value", "Finalizes the engine."]], "foxes.core.Engine.get_chunk_input_data": [[205, 3, 2, "", "algo", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "farm_data", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "model_data", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "out_vars", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "point_data", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "states_i0_i1", "Extracts the data for a single chunk calculation"], [205, 3, 2, "", "targets_i0_i1", "Extracts the data for a single chunk calculation"]], "foxes.core.Engine.new": [[209, 3, 2, "", "args", "Run-time engine factory."], [209, 3, 2, "", "engine_type", "Run-time engine factory."], [209, 3, 2, "", "kwargs", "Run-time engine factory."]], "foxes.core.Engine.print": [[210, 3, 2, "", "args", "Prints based on verbosity"], [210, 3, 2, "", "kwargs", "Prints based on verbosity"], [210, 3, 2, "", "level", "Prints based on verbosity"]], "foxes.core.Engine.run_calculation": [[211, 3, 2, "", "algo", "Runs the model calculation"], [211, 3, 2, "", "farm_data", "Runs the model calculation"], [211, 3, 2, "", "model", "Runs the model calculation"], [211, 3, 2, "", "model_data", "Runs the model calculation"], [211, 3, 2, "", "point_data", "Runs the model calculation"]], "foxes.core.Engine.select_subsets": [[212, 3, 2, "", "datasets", "Takes subsets of datasets"], [212, 3, 2, "", "isel", "Takes subsets of datasets"], [212, 3, 2, "", "sel", "Takes subsets of datasets"]], "foxes.core.ExtendedStates": [[214, 2, 1, "", "__init__", "Constructor."], [215, 2, 1, "", "append", "Add a model to the list"], [216, 2, 1, "", "calculate", "The main model calculation."], [217, 2, 1, "", "index", "The index list"], [218, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [219, 2, 1, "", "size", "The total number of states."], [220, 2, 1, "", "sub_models", "List of all sub-models"], [221, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.ExtendedStates.__init__": [[214, 3, 2, "", "point_models", "Constructor."], [214, 3, 2, "", "states", "Constructor."]], "foxes.core.ExtendedStates.append": [[215, 3, 2, "", "model", "Add a model to the list"]], "foxes.core.ExtendedStates.calculate": [[216, 3, 2, "", "algo", "The main model calculation."], [216, 3, 2, "", "fdata", "The main model calculation."], [216, 3, 2, "", "mdata", "The main model calculation."], [216, 3, 2, "", "tdata", "The main model calculation."]], "foxes.core.ExtendedStates.output_point_vars": [[218, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.ExtendedStates.weights": [[221, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.core.FData": [[223, 2, 1, "", "__init__", "Constructor"], [224, 2, 1, "", "from_dataset", "Create Data object from a dataset"]], "foxes.core.FData.__init__": [[223, 3, 2, "", "args", "Constructor"], [223, 3, 2, "", "kwargs", "Constructor"], [223, 3, 2, "", "name", "Constructor"]], "foxes.core.FData.from_dataset": [[224, 3, 2, "", "args", "Create Data object from a dataset"], [224, 3, 2, "", "callback", "Create Data object from a dataset"], [224, 3, 2, "", "ds", "Create Data object from a dataset"], [224, 3, 2, "", "kwargs", "Create Data object from a dataset"], [224, 3, 2, "", "mdata", "Create Data object from a dataset"]], "foxes.core.FarmController": [[226, 2, 1, "", "__init__", "Constructor."], [227, 2, 1, "", "calculate", "The main model calculation."], [228, 2, 1, "", "collect_models", "Analyze and gather turbine models, based on the turbines of the wind farm."], [229, 2, 1, "", "finalize", "Finalizes the model."], [230, 2, 1, "", "initialize", "Initializes the model."], [231, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [232, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [233, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [234, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [235, 2, 1, "", "set_pars", "Set parameters for a turbine model"], [236, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmController.__init__": [[226, 3, 2, "", "pars", "Constructor."]], "foxes.core.FarmController.calculate": [[227, 3, 2, "", "algo", "The main model calculation."], [227, 3, 2, "", "downwind_index", "The main model calculation."], [227, 3, 2, "", "fdata", "The main model calculation."], [227, 3, 2, "", "mdata", "The main model calculation."], [227, 3, 2, "", "pre_rotor", "The main model calculation."]], "foxes.core.FarmController.collect_models": [[228, 3, 2, "", "algo", "Analyze and gather turbine models, based on the turbines of the wind farm."]], "foxes.core.FarmController.finalize": [[229, 3, 2, "", "algo", "Finalizes the model."], [229, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.core.FarmController.initialize": [[230, 3, 2, "", "algo", "Initializes the model."], [230, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.core.FarmController.load_data": [[231, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [231, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.core.FarmController.output_farm_vars": [[234, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.FarmController.set_pars": [[235, 3, 2, "", "calc_pars", "Set parameters for a turbine model"], [235, 3, 2, "", "final_pars", "Set parameters for a turbine model"], [235, 3, 2, "", "init_pars", "Set parameters for a turbine model"], [235, 3, 2, "", "model_name", "Set parameters for a turbine model"]], "foxes.core.FarmDataModel": [[238, 2, 1, "", "__init__", "Constructor."], [239, 2, 1, "", "calculate", "The main model calculation."], [240, 2, 1, "", "ensure_variables", "Add variables to fdata, initialized with NaN"], [241, 2, 1, "", "output_coords", "Gets the coordinates of all output arrays"], [242, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [243, 2, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModel.__init__": [[238, 3, 2, "", "pre_rotor", "Constructor."]], "foxes.core.FarmDataModel.calculate": [[239, 3, 2, "", "algo", "The main model calculation."], [239, 3, 2, "", "fdata", "The main model calculation."], [239, 3, 2, "", "mdata", "The main model calculation."]], "foxes.core.FarmDataModel.ensure_variables": [[240, 3, 2, "", "algo", "Add variables to fdata, initialized with NaN"], [240, 3, 2, "", "fdata", "Add variables to fdata, initialized with NaN"], [240, 3, 2, "", "mdata", "Add variables to fdata, initialized with NaN"]], "foxes.core.FarmDataModel.output_farm_vars": [[242, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.FarmDataModel.run_calculation": [[243, 3, 2, "", "algo", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [243, 3, 2, "", "calc_pars", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [243, 3, 2, "", "data", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [243, 3, 2, "", "out_vars", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.FarmDataModelList": [[245, 2, 1, "", "__init__", "Constructor."], [246, 2, 1, "", "__repr__", "Return repr(self)."], [247, 2, 1, "", "append", "Add a model to the list"], [248, 2, 1, "", "calculate", "The main model calculation."], [249, 2, 1, "", "insert", "Insert a model into the list"], [250, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [251, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.FarmDataModelList.__init__": [[245, 3, 2, "", "models", "Constructor."]], "foxes.core.FarmDataModelList.append": [[247, 3, 2, "", "model", "Add a model to the list"]], "foxes.core.FarmDataModelList.calculate": [[248, 3, 2, "", "algo", "The main model calculation."], [248, 3, 2, "", "fdata", "The main model calculation."], [248, 3, 2, "", "mdata", "The main model calculation."], [248, 3, 2, "", "parameters", "The main model calculation."]], "foxes.core.FarmDataModelList.insert": [[249, 3, 2, "", "index", "Insert a model into the list"], [249, 3, 2, "", "model", "Insert a model into the list"]], "foxes.core.FarmDataModelList.output_farm_vars": [[250, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.GroundModel": [[254, 2, 1, "", "contribute_to_farm_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 2, 1, "", "contribute_to_point_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [256, 2, 1, "", "finalize_farm_wakes", "Updates the wake_deltas at the selected target downwind index."], [257, 2, 1, "", "finalize_point_wakes", "Finalize the wake calculation."], [258, 2, 1, "", "new_farm_wake_deltas", "Creates new initial wake deltas, filled with zeros."], [259, 2, 1, "", "new_point_wake_deltas", "Creates new empty wake delta arrays."]], "foxes.core.GroundModel.contribute_to_farm_wakes": [[254, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "pwake", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [254, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.core.GroundModel.contribute_to_point_wakes": [[255, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [255, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.core.GroundModel.finalize_farm_wakes": [[256, 3, 2, "", "algo", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "amb_res", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "downwind_index", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "fdata", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "mdata", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "pwake", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "rpoint_weights", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "tdata", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "wake_deltas", "Updates the wake_deltas at the selected target downwind index."], [256, 3, 2, "", "wmodel", "Updates the wake_deltas at the selected target downwind index."]], "foxes.core.GroundModel.finalize_point_wakes": [[257, 3, 2, "", "algo", "Finalize the wake calculation."], [257, 3, 2, "", "amb_results", "Finalize the wake calculation."], [257, 3, 2, "", "fdata", "Finalize the wake calculation."], [257, 3, 2, "", "mdata", "Finalize the wake calculation."], [257, 3, 2, "", "wake_deltas", "Finalize the wake calculation."], [257, 3, 2, "", "wmodel", "Finalize the wake calculation."]], "foxes.core.GroundModel.new_farm_wake_deltas": [[258, 3, 2, "", "algo", "Creates new initial wake deltas, filled with zeros."], [258, 3, 2, "", "fdata", "Creates new initial wake deltas, filled with zeros."], [258, 3, 2, "", "mdata", "Creates new initial wake deltas, filled with zeros."], [258, 3, 2, "", "pwake", "Creates new initial wake deltas, filled with zeros."], [258, 3, 2, "", "tdata", "Creates new initial wake deltas, filled with zeros."], [258, 3, 2, "", "wmodel", "Creates new initial wake deltas, filled with zeros."]], "foxes.core.GroundModel.new_point_wake_deltas": [[259, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [259, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [259, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [259, 3, 2, "", "tdata", "Creates new empty wake delta arrays."], [259, 3, 2, "", "wmodel", "Creates new empty wake delta arrays."]], "foxes.core.MData": [[261, 2, 1, "", "__init__", "Constructor"]], "foxes.core.MData.__init__": [[261, 3, 2, "", "args", "Constructor"], [261, 3, 2, "", "kwargs", "Constructor"], [261, 3, 2, "", "name", "Constructor"]], "foxes.core.Model": [[263, 2, 1, "", "__init__", "Constructor."], [264, 2, 1, "", "__repr__", "Return repr(self)."], [265, 2, 1, "", "finalize", "Finalizes the model."], [266, 2, 1, "", "get_data", "Getter for a data entry in the model object or provided data sources"], [267, 2, 1, "", "initialize", "Initializes the model."], [268, 4, 1, "", "initialized", "Initialization flag."], [269, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [270, 4, 1, "", "model_id", "Unique id based on the model type."], [271, 4, 1, "", "running", "Flag for currently running models"], [272, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [273, 2, 1, "", "sub_models", "List of all sub-models"], [274, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [275, 2, 1, "", "var", "Creates a model specific variable name."]], "foxes.core.Model.finalize": [[265, 3, 2, "", "algo", "Finalizes the model."], [265, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.core.Model.get_data": [[266, 3, 2, "", "accept_nan", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "accept_none", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "algo", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "downwind_index", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "fdata", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "lookup", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "mdata", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "selection", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "target", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "tdata", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "upcast", "Getter for a data entry in the model object or provided data sources"], [266, 3, 2, "", "variable", "Getter for a data entry in the model object or provided data sources"]], "foxes.core.Model.initialize": [[267, 3, 2, "", "algo", "Initializes the model."], [267, 3, 2, "", "force", "Initializes the model."], [267, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.core.Model.load_data": [[269, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [269, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.core.Model.set_running": [[272, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [272, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [272, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [272, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [272, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.core.Model.unset_running": [[274, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [274, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [274, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [274, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [274, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.core.Model.var": [[275, 3, 2, "", "v", "Creates a model specific variable name."]], "foxes.core.PartialWakesModel": [[277, 2, 1, "", "check_wmodel", "Checks the wake model type"], [278, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [279, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [280, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."], [281, 2, 1, "", "new", "Run-time partial wakes factory."], [282, 2, 1, "", "new_wake_deltas", "Creates new initial wake deltas, filled with zeros."]], "foxes.core.PartialWakesModel.check_wmodel": [[277, 3, 2, "", "error", "Checks the wake model type"], [277, 3, 2, "", "wmodel", "Checks the wake model type"]], "foxes.core.PartialWakesModel.contribute": [[278, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [278, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.core.PartialWakesModel.finalize_wakes": [[279, 3, 2, "", "algo", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "amb_res", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "downwind_index", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "fdata", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "mdata", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "rpoint_weights", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "tdata", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "wake_deltas", "Updates the wake_deltas at the selected target downwind index."], [279, 3, 2, "", "wmodel", "Updates the wake_deltas at the selected target downwind index."]], "foxes.core.PartialWakesModel.get_wake_points": [[280, 3, 2, "", "algo", "Get the wake calculation points, and their weights."], [280, 3, 2, "", "fdata", "Get the wake calculation points, and their weights."], [280, 3, 2, "", "mdata", "Get the wake calculation points, and their weights."]], "foxes.core.PartialWakesModel.new": [[281, 3, 2, "", "kwargs", "Run-time partial wakes factory."], [281, 3, 2, "", "pwake_type", "Run-time partial wakes factory."]], "foxes.core.PartialWakesModel.new_wake_deltas": [[282, 3, 2, "", "algo", "Creates new initial wake deltas, filled with zeros."], [282, 3, 2, "", "fdata", "Creates new initial wake deltas, filled with zeros."], [282, 3, 2, "", "mdata", "Creates new initial wake deltas, filled with zeros."], [282, 3, 2, "", "tdata", "Creates new initial wake deltas, filled with zeros."], [282, 3, 2, "", "wmodel", "Creates new initial wake deltas, filled with zeros."]], "foxes.core.PointDataModel": [[284, 2, 1, "", "calculate", "The main model calculation."], [285, 2, 1, "", "ensure_variables", "Add variables to tdata, initialized with NaN"], [286, 2, 1, "", "output_coords", "Gets the coordinates of all output arrays"], [287, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [288, 2, 1, "", "run_calculation", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModel.calculate": [[284, 3, 2, "", "algo", "The main model calculation."], [284, 3, 2, "", "fdata", "The main model calculation."], [284, 3, 2, "", "mdata", "The main model calculation."], [284, 3, 2, "", "tdata", "The main model calculation."]], "foxes.core.PointDataModel.ensure_variables": [[285, 3, 2, "", "algo", "Add variables to tdata, initialized with NaN"], [285, 3, 2, "", "fdata", "Add variables to tdata, initialized with NaN"], [285, 3, 2, "", "mdata", "Add variables to tdata, initialized with NaN"], [285, 3, 2, "", "tdata", "Add variables to tdata, initialized with NaN"]], "foxes.core.PointDataModel.output_point_vars": [[287, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.PointDataModel.run_calculation": [[288, 3, 2, "", "algo", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [288, 3, 2, "", "calc_pars", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [288, 3, 2, "", "data", "Starts the model calculation in parallel, via xarray's apply_ufunc."], [288, 3, 2, "", "out_vars", "Starts the model calculation in parallel, via xarray's apply_ufunc."]], "foxes.core.PointDataModelList": [[290, 2, 1, "", "__init__", "Constructor."], [291, 2, 1, "", "__repr__", "Return repr(self)."], [292, 2, 1, "", "append", "Add a model to the list"], [293, 2, 1, "", "calculate", "The main model calculation."], [294, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [295, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.core.PointDataModelList.__init__": [[290, 3, 2, "", "models", "Constructor."]], "foxes.core.PointDataModelList.append": [[292, 3, 2, "", "model", "Add a model to the list"]], "foxes.core.PointDataModelList.calculate": [[293, 3, 2, "", "algo", "The main model calculation."], [293, 3, 2, "", "fdata", "The main model calculation."], [293, 3, 2, "", "mdata", "The main model calculation."], [293, 3, 2, "", "parameters", "The main model calculation."], [293, 3, 2, "", "tdata", "The main model calculation."]], "foxes.core.PointDataModelList.output_point_vars": [[294, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.RotorModel": [[297, 2, 1, "", "__init__", "Constructor."], [298, 2, 1, "", "calculate", "Calculate ambient rotor effective results."], [299, 2, 1, "", "design_points", "The rotor model design points."], [300, 2, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [301, 2, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [302, 2, 1, "", "n_rotor_points", "The number of rotor points"], [303, 2, 1, "", "new", "Run-time rotor model factory."], [304, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [305, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.core.RotorModel.__init__": [[297, 3, 2, "", "calc_vars", "Constructor."]], "foxes.core.RotorModel.calculate": [[298, 3, 2, "", "algo", "Calculate ambient rotor effective results."], [298, 3, 2, "", "downwind_index", "Calculate ambient rotor effective results."], [298, 3, 2, "", "fdata", "Calculate ambient rotor effective results."], [298, 3, 2, "", "mdata", "Calculate ambient rotor effective results."], [298, 3, 2, "", "rpoints", "Calculate ambient rotor effective results."], [298, 3, 2, "", "store_amb_res", "Calculate ambient rotor effective results."], [298, 3, 2, "", "store_rpoints", "Calculate ambient rotor effective results."], [298, 3, 2, "", "store_rweights", "Calculate ambient rotor effective results."], [298, 3, 2, "", "weights", "Calculate ambient rotor effective results."]], "foxes.core.RotorModel.eval_rpoint_results": [[300, 3, 2, "", "algo", "Evaluate rotor point results."], [300, 3, 2, "", "copy_to_ambient", "Evaluate rotor point results."], [300, 3, 2, "", "downwind_index", "Evaluate rotor point results."], [300, 3, 2, "", "fdata", "Evaluate rotor point results."], [300, 3, 2, "", "mdata", "Evaluate rotor point results."], [300, 3, 2, "", "tdata", "Evaluate rotor point results."], [300, 3, 2, "", "weights", "Evaluate rotor point results."]], "foxes.core.RotorModel.get_rotor_points": [[301, 3, 2, "", "algo", "Calculates rotor points from design points."], [301, 3, 2, "", "fdata", "Calculates rotor points from design points."], [301, 3, 2, "", "mdata", "Calculates rotor points from design points."]], "foxes.core.RotorModel.new": [[303, 3, 2, "", "args", "Run-time rotor model factory."], [303, 3, 2, "", "kwargs", "Run-time rotor model factory."], [303, 3, 2, "", "rmodel_type", "Run-time rotor model factory."]], "foxes.core.RotorModel.output_farm_vars": [[304, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.States": [[307, 2, 1, "", "index", "The index list"], [308, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [309, 2, 1, "", "new", "Run-time states factory."], [310, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [311, 2, 1, "", "reset", "Reset the states, optionally select states"], [312, 2, 1, "", "size", "The total number of states."], [313, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.core.States.load_data": [[308, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [308, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.core.States.new": [[309, 3, 2, "", "args", "Run-time states factory."], [309, 3, 2, "", "kwargs", "Run-time states factory."], [309, 3, 2, "", "states_type", "Run-time states factory."]], "foxes.core.States.output_point_vars": [[310, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.core.States.reset": [[311, 3, 2, "", "algo", "Reset the states, optionally select states"], [311, 3, 2, "", "states_loc", "Reset the states, optionally select states"], [311, 3, 2, "", "states_sel", "Reset the states, optionally select states"], [311, 3, 2, "", "verbosity", "Reset the states, optionally select states"]], "foxes.core.States.weights": [[313, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.core.TData": [[315, 2, 1, "", "__init__", "Constructor"], [316, 2, 1, "", "from_dataset", "Create Data object from a dataset"], [317, 2, 1, "", "from_points", "Create from points"], [318, 2, 1, "", "from_tpoints", "Create from points at targets"], [319, 4, 1, "", "n_targets", "The number of targets"], [320, 4, 1, "", "n_tpoints", "The number of points per target"], [321, 2, 1, "", "targets_i0", "Get the target counter for first target in chunk"], [322, 2, 1, "", "tpoint_mean", "Take the mean over target points"]], "foxes.core.TData.__init__": [[315, 3, 2, "", "args", "Constructor"], [315, 3, 2, "", "kwargs", "Constructor"], [315, 3, 2, "", "name", "Constructor"]], "foxes.core.TData.from_dataset": [[316, 3, 2, "", "args", "Create Data object from a dataset"], [316, 3, 2, "", "callback", "Create Data object from a dataset"], [316, 3, 2, "", "ds", "Create Data object from a dataset"], [316, 3, 2, "", "kwargs", "Create Data object from a dataset"], [316, 3, 2, "", "mdata", "Create Data object from a dataset"], [316, 3, 2, "", "s_targets", "Create Data object from a dataset"]], "foxes.core.TData.from_points": [[317, 3, 2, "", "data", "Create from points"], [317, 3, 2, "", "dims", "Create from points"], [317, 3, 2, "", "kwargs", "Create from points"], [317, 3, 2, "", "name", "Create from points"], [317, 3, 2, "", "points", "Create from points"]], "foxes.core.TData.from_tpoints": [[318, 3, 2, "", "data", "Create from points at targets"], [318, 3, 2, "", "dims", "Create from points at targets"], [318, 3, 2, "", "kwargs", "Create from points at targets"], [318, 3, 2, "", "name", "Create from points at targets"], [318, 3, 2, "", "tpoints", "Create from points at targets"], [318, 3, 2, "", "tweights", "Create from points at targets"]], "foxes.core.TData.tpoint_mean": [[322, 3, 2, "", "variable", "Take the mean over target points"]], "foxes.core.Turbine": [[324, 2, 1, "", "__init__", "Constructor."], [325, 2, 1, "", "add_model", "Add a turbine model to the list."], [326, 2, 1, "", "insert_model", "Insert a turbine model into the list of models."]], "foxes.core.Turbine.__init__": [[324, 3, 2, "", "D", "Constructor."], [324, 3, 2, "", "H", "Constructor."], [324, 3, 2, "", "index", "Constructor."], [324, 3, 2, "", "models_state_sel", "Constructor."], [324, 3, 2, "", "name", "Constructor."], [324, 3, 2, "", "turbine_models", "Constructor."], [324, 3, 2, "", "xy", "Constructor."]], "foxes.core.Turbine.add_model": [[325, 3, 2, "", "model", "Add a turbine model to the list."], [325, 3, 2, "", "states_sel", "Add a turbine model to the list."]], "foxes.core.Turbine.insert_model": [[326, 3, 2, "", "index", "Insert a turbine model into the list of models."], [326, 3, 2, "", "model", "Insert a turbine model into the list of models."], [326, 3, 2, "", "states_sel", "Insert a turbine model into the list of models."]], "foxes.core.TurbineInductionModel": [[328, 4, 1, "", "affects_downwind", "Flag for downwind or upwind effects on other turbines"]], "foxes.core.TurbineModel": [[330, 2, 1, "", "calculate", "The main model calculation."], [331, 2, 1, "", "new", "Run-time turbine model factory."]], "foxes.core.TurbineModel.calculate": [[330, 3, 2, "", "algo", "The main model calculation."], [330, 3, 2, "", "fdata", "The main model calculation."], [330, 3, 2, "", "mdata", "The main model calculation."], [330, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.core.TurbineModel.new": [[331, 3, 2, "", "args", "Run-time turbine model factory."], [331, 3, 2, "", "kwargs", "Run-time turbine model factory."], [331, 3, 2, "", "tmodel_type", "Run-time turbine model factory."]], "foxes.core.TurbineType": [[333, 2, 1, "", "__init__", "Constructor."], [334, 2, 1, "", "__repr__", "Return repr(self)."], [335, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [336, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [337, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [338, 2, 1, "", "new", "Run-time turbine type factory."]], "foxes.core.TurbineType.__init__": [[333, 3, 2, "", "D", "Constructor."], [333, 3, 2, "", "H", "Constructor."], [333, 3, 2, "", "P_nominal", "Constructor."], [333, 3, 2, "", "P_unit", "Constructor."], [333, 3, 2, "", "name", "Constructor."]], "foxes.core.TurbineType.modify_cutin": [[335, 3, 2, "", "modify_P", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [335, 3, 2, "", "modify_ct", "Modify the data such that a discontinuity at cutin wind speed is avoided"]], "foxes.core.TurbineType.new": [[338, 3, 2, "", "args", "Run-time turbine type factory."], [338, 3, 2, "", "kwargs", "Run-time turbine type factory."], [338, 3, 2, "", "ttype_type", "Run-time turbine type factory."]], "foxes.core.VerticalProfile": [[340, 2, 1, "", "calculate", "Run the profile calculation."], [341, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."], [342, 2, 1, "", "new", "Run-time profile factory."]], "foxes.core.VerticalProfile.calculate": [[340, 3, 2, "", "heights", "Run the profile calculation."], [340, 3, 2, "", "tdata", "Run the profile calculation."]], "foxes.core.VerticalProfile.new": [[342, 3, 2, "", "kwargs", "Run-time profile factory."], [342, 3, 2, "", "profile_type", "Run-time profile factory."]], "foxes.core.WakeFrame": [[344, 2, 1, "", "__init__", "Constructor."], [345, 2, 1, "", "calc_centreline_integral", "Integrates variables along the centreline."], [346, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [347, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [348, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [349, 2, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [350, 2, 1, "", "new", "Run-time wake frame factory."]], "foxes.core.WakeFrame.__init__": [[344, 3, 2, "", "max_length_km", "Constructor."]], "foxes.core.WakeFrame.calc_centreline_integral": [[345, 3, 2, "", "algo", "Integrates variables along the centreline."], [345, 3, 2, "", "downwind_index", "Integrates variables along the centreline."], [345, 3, 2, "", "dx", "Integrates variables along the centreline."], [345, 3, 2, "", "fdata", "Integrates variables along the centreline."], [345, 3, 2, "", "ipars", "Integrates variables along the centreline."], [345, 3, 2, "", "mdata", "Integrates variables along the centreline."], [345, 3, 2, "", "self_wake", "Integrates variables along the centreline."], [345, 3, 2, "", "variables", "Integrates variables along the centreline."], [345, 3, 2, "", "wake_models", "Integrates variables along the centreline."], [345, 3, 2, "", "x", "Integrates variables along the centreline."]], "foxes.core.WakeFrame.calc_order": [[346, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [346, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [346, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.core.WakeFrame.get_centreline_points": [[347, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [347, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [347, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [347, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [347, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.core.WakeFrame.get_wake_coos": [[348, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [348, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [348, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [348, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [348, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.core.WakeFrame.get_wake_modelling_data": [[349, 3, 2, "", "algo", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "downwind_index", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "fdata", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "states0", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "target", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "tdata", "Return data that is required for computing the wake from source turbines to evaluation points."], [349, 3, 2, "", "variable", "Return data that is required for computing the wake from source turbines to evaluation points."]], "foxes.core.WakeFrame.new": [[350, 3, 2, "", "args", "Run-time wake frame factory."], [350, 3, 2, "", "kwargs", "Run-time wake frame factory."], [350, 3, 2, "", "wframe_type", "Run-time wake frame factory."]], "foxes.core.WakeK": [[352, 2, 1, "", "__call__", "Gets the k value"], [353, 2, 1, "", "__init__", "Constructor."], [354, 4, 1, "", "all_none", "Flag for k=ka=kb=None"], [355, 4, 1, "", "is_kTI", "Flag for ka != 0"], [356, 2, 1, "", "repr", "Provides the representative string"], [357, 4, 1, "", "use_amb_ti", "Flag for using ambient ti"]], "foxes.core.WakeK.__call__": [[352, 3, 2, "", "amb_ti", "Gets the k value"], [352, 3, 2, "", "args", "Gets the k value"], [352, 3, 2, "", "kwargs", "Gets the k value"], [352, 3, 2, "", "lookup_k", "Gets the k value"], [352, 3, 2, "", "lookup_ti", "Gets the k value"], [352, 3, 2, "", "ti", "Gets the k value"]], "foxes.core.WakeK.__init__": [[353, 3, 2, "", "k", "Constructor."], [353, 3, 2, "", "k_var", "Constructor."], [353, 3, 2, "", "ka", "Constructor."], [353, 3, 2, "", "kb", "Constructor."], [353, 3, 2, "", "ti_var", "Constructor."]], "foxes.core.WakeModel": [[359, 4, 1, "", "affects_downwind", "Flag for downwind or upwind effects on other turbines"], [360, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [361, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [362, 2, 1, "", "new", "Run-time wake model factory."], [363, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."]], "foxes.core.WakeModel.contribute": [[360, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [360, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.core.WakeModel.finalize_wake_deltas": [[361, 3, 2, "", "algo", "Finalize the wake calculation."], [361, 3, 2, "", "amb_results", "Finalize the wake calculation."], [361, 3, 2, "", "fdata", "Finalize the wake calculation."], [361, 3, 2, "", "mdata", "Finalize the wake calculation."], [361, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.core.WakeModel.new": [[362, 3, 2, "", "args", "Run-time wake model factory."], [362, 3, 2, "", "kwargs", "Run-time wake model factory."], [362, 3, 2, "", "wmodel_type", "Run-time wake model factory."]], "foxes.core.WakeModel.new_wake_deltas": [[363, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [363, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [363, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [363, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.core.WakeSuperposition": [[365, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [366, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.core.WakeSuperposition.add_wake": [[365, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [365, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.core.WakeSuperposition.calc_final_wake_delta": [[366, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [366, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [366, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [366, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [366, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [366, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.core.WindFarm": [[368, 2, 1, "", "__init__", "Constructor."], [369, 2, 1, "", "add_turbine", "Add a wind turbine to the list."], [370, 4, 1, "", "n_turbines", "The number of turbines in the wind farm"], [371, 4, 1, "", "turbine_names", "The list of names of all turbines"]], "foxes.core.WindFarm.__init__": [[368, 3, 2, "", "boundary", "Constructor."], [368, 3, 2, "", "name", "Constructor."]], "foxes.core.WindFarm.add_turbine": [[369, 3, 2, "", "turbine", "Add a wind turbine to the list."], [369, 3, 2, "", "verbosity", "Add a wind turbine to the list."]], "foxes.core.get_engine": [[372, 3, 2, "", "default", "Gets the global calculation engine"], [372, 3, 2, "", "error", "Gets the global calculation engine"]], "foxes.data": [[375, 0, 1, "", "StaticData", "A DataBook filled with static data from this directory."], [377, 5, 1, "", "parse_Pct_file_name", "Parse basic turbine data from file name"], [378, 5, 1, "", "parse_Pct_two_files", "Parse basic turbine data from file names"]], "foxes.data.StaticData": [[376, 2, 1, "", "__init__", "Constructor."]], "foxes.data.parse_Pct_file_name": [[377, 3, 2, "", "file_name", "Parse basic turbine data from file name"]], "foxes.data.parse_Pct_two_files": [[378, 3, 2, "", "file_name_A", "Parse basic turbine data from file names"], [378, 3, 2, "", "file_name_B", "Parse basic turbine data from file names"]], "foxes.engines": [[379, 0, 1, "", "DaskBaseEngine", "Abstract base class for foxes calculations with dask."], [384, 0, 1, "", "DaskEngine", "The dask engine for delayed foxes calculations."], [386, 0, 1, "", "DefaultEngine", "The case size dependent default engine."], [388, 0, 1, "", "LocalClusterEngine", "The dask engine for foxes calculations on a local cluster."], [391, 0, 1, "", "MPIEngine", "The MPI engine for foxes calculations."], [393, 0, 1, "", "MultiprocessEngine", "The multiprocessing engine for foxes calculations."], [394, 0, 1, "", "NumpyEngine", "The numpy engine for foxes calculations."], [396, 0, 1, "", "PoolEngine", "Abstract engine for pool type parallelizations."], [398, 0, 1, "", "ProcessEngine", "The processes engine for foxes calculations."], [399, 0, 1, "", "RayEngine", "The ray engine for foxes calculations."], [400, 0, 1, "", "SingleChunkEngine", "Runs computations in a single chunk."], [404, 0, 1, "", "SlurmClusterEngine", "The dask engine for foxes calculations on a SLURM cluster."], [405, 0, 1, "", "ThreadsEngine", "The threads engine for foxes calculations."], [406, 0, 1, "", "XArrayEngine", "The engine for foxes calculations via xarray.apply_ufunc."]], "foxes.engines.DaskBaseEngine": [[380, 2, 1, "", "__init__", "Constructor."], [381, 2, 1, "", "chunk_data", "Applies the selected chunking"], [382, 2, 1, "", "finalize", "Finalizes the engine."], [383, 2, 1, "", "initialize", "Initializes the engine."]], "foxes.engines.DaskBaseEngine.__init__": [[380, 3, 2, "", "args", "Constructor."], [380, 3, 2, "", "dask_config", "Constructor."], [380, 3, 2, "", "kwargs", "Constructor."], [380, 3, 2, "", "progress_bar", "Constructor."]], "foxes.engines.DaskBaseEngine.chunk_data": [[381, 3, 2, "", "data", "Applies the selected chunking"]], "foxes.engines.DaskBaseEngine.finalize": [[382, 3, 2, "", "exit_args", "Finalizes the engine."], [382, 3, 2, "", "exit_kwargs", "Finalizes the engine."]], "foxes.engines.DaskEngine": [[385, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.DaskEngine.run_calculation": [[385, 3, 2, "", "algo", "Runs the model calculation"], [385, 3, 2, "", "calc_pars", "Runs the model calculation"], [385, 3, 2, "", "chunk_store", "Runs the model calculation"], [385, 3, 2, "", "farm_data", "Runs the model calculation"], [385, 3, 2, "", "isel", "Runs the model calculation"], [385, 3, 2, "", "iterative", "Runs the model calculation"], [385, 3, 2, "", "model", "Runs the model calculation"], [385, 3, 2, "", "model_data", "Runs the model calculation"], [385, 3, 2, "", "out_vars", "Runs the model calculation"], [385, 3, 2, "", "point_data", "Runs the model calculation"], [385, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.engines.DefaultEngine": [[387, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.DefaultEngine.run_calculation": [[387, 3, 2, "", "algo", "Runs the model calculation"], [387, 3, 2, "", "farm_data", "Runs the model calculation"], [387, 3, 2, "", "kwargs", "Runs the model calculation"], [387, 3, 2, "", "model", "Runs the model calculation"], [387, 3, 2, "", "model_data", "Runs the model calculation"], [387, 3, 2, "", "point_data", "Runs the model calculation"]], "foxes.engines.LocalClusterEngine": [[389, 2, 1, "", "__init__", "Constructor."], [390, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.LocalClusterEngine.__init__": [[389, 3, 2, "", "args", "Constructor."], [389, 3, 2, "", "client_pars", "Constructor."], [389, 3, 2, "", "cluster_pars", "Constructor."], [389, 3, 2, "", "kwargs", "Constructor."]], "foxes.engines.LocalClusterEngine.run_calculation": [[390, 3, 2, "", "algo", "Runs the model calculation"], [390, 3, 2, "", "calc_pars", "Runs the model calculation"], [390, 3, 2, "", "chunk_store", "Runs the model calculation"], [390, 3, 2, "", "farm_data", "Runs the model calculation"], [390, 3, 2, "", "isel", "Runs the model calculation"], [390, 3, 2, "", "iterative", "Runs the model calculation"], [390, 3, 2, "", "model", "Runs the model calculation"], [390, 3, 2, "", "model_data", "Runs the model calculation"], [390, 3, 2, "", "out_vars", "Runs the model calculation"], [390, 3, 2, "", "point_data", "Runs the model calculation"], [390, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.engines.MPIEngine": [[392, 2, 1, "", "initialize", "Initializes the engine."]], "foxes.engines.NumpyEngine": [[395, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.NumpyEngine.run_calculation": [[395, 3, 2, "", "algo", "Runs the model calculation"], [395, 3, 2, "", "calc_pars", "Runs the model calculation"], [395, 3, 2, "", "chunk_store", "Runs the model calculation"], [395, 3, 2, "", "farm_data", "Runs the model calculation"], [395, 3, 2, "", "isel", "Runs the model calculation"], [395, 3, 2, "", "iterative", "Runs the model calculation"], [395, 3, 2, "", "model", "Runs the model calculation"], [395, 3, 2, "", "model_data", "Runs the model calculation"], [395, 3, 2, "", "out_vars", "Runs the model calculation"], [395, 3, 2, "", "point_data", "Runs the model calculation"], [395, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.engines.PoolEngine": [[397, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.PoolEngine.run_calculation": [[397, 3, 2, "", "algo", "Runs the model calculation"], [397, 3, 2, "", "calc_pars", "Runs the model calculation"], [397, 3, 2, "", "chunk_store", "Runs the model calculation"], [397, 3, 2, "", "farm_data", "Runs the model calculation"], [397, 3, 2, "", "isel", "Runs the model calculation"], [397, 3, 2, "", "iterative", "Runs the model calculation"], [397, 3, 2, "", "model", "Runs the model calculation"], [397, 3, 2, "", "model_data", "Runs the model calculation"], [397, 3, 2, "", "out_vars", "Runs the model calculation"], [397, 3, 2, "", "point_data", "Runs the model calculation"], [397, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.engines.SingleChunkEngine": [[401, 2, 1, "", "__init__", "Constructor."], [402, 2, 1, "", "__repr__", "Return repr(self)."], [403, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.SingleChunkEngine.__init__": [[401, 3, 2, "", "args", "Constructor."], [401, 3, 2, "", "kwargs", "Constructor."]], "foxes.engines.SingleChunkEngine.run_calculation": [[403, 3, 2, "", "algo", "Runs the model calculation"], [403, 3, 2, "", "calc_pars", "Runs the model calculation"], [403, 3, 2, "", "chunk_store", "Runs the model calculation"], [403, 3, 2, "", "farm_data", "Runs the model calculation"], [403, 3, 2, "", "isel", "Runs the model calculation"], [403, 3, 2, "", "iterative", "Runs the model calculation"], [403, 3, 2, "", "model", "Runs the model calculation"], [403, 3, 2, "", "model_data", "Runs the model calculation"], [403, 3, 2, "", "out_vars", "Runs the model calculation"], [403, 3, 2, "", "point_data", "Runs the model calculation"], [403, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.engines.XArrayEngine": [[407, 2, 1, "", "run_calculation", "Runs the model calculation"]], "foxes.engines.XArrayEngine.run_calculation": [[407, 3, 2, "", "algo", "Runs the model calculation"], [407, 3, 2, "", "calc_pars", "Runs the model calculation"], [407, 3, 2, "", "chunk_store", "Runs the model calculation"], [407, 3, 2, "", "farm_data", "Runs the model calculation"], [407, 3, 2, "", "isel", "Runs the model calculation"], [407, 3, 2, "", "iterative", "Runs the model calculation"], [407, 3, 2, "", "model", "Runs the model calculation"], [407, 3, 2, "", "model_data", "Runs the model calculation"], [407, 3, 2, "", "out_vars", "Runs the model calculation"], [407, 3, 2, "", "persist", "Runs the model calculation"], [407, 3, 2, "", "point_data", "Runs the model calculation"], [407, 3, 2, "", "sel", "Runs the model calculation"]], "foxes.input.farm_layout": [[408, 5, 1, "", "add_from_csv", "Add turbines to wind farm via csv input file."], [409, 5, 1, "", "add_from_df", "Add turbines to wind farm via pandas DataFrame."], [410, 5, 1, "", "add_from_file", "Add turbines from file."], [411, 5, 1, "", "add_from_json", "Add turbimes from a json file."], [412, 5, 1, "", "add_grid", "Add a regular grid of turbines."], [413, 5, 1, "", "add_random", "Add turbines that lie randomly within a square"], [414, 5, 1, "", "add_ring", "Add a ring of turbines."], [415, 5, 1, "", "add_row", "Add a single row of turbines."]], "foxes.input.farm_layout.add_from_csv": [[408, 3, 2, "", "col_D", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_H", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_id", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_index", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_name", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_turbine_type", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_x", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "col_y", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "cols_models_post", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "cols_models_pre", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "data_source", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "farm", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "turbine_base_name", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "turbine_base_name_count_shift", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "turbine_ids", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "turbine_parameters", "Add turbines to wind farm via csv input file."], [408, 3, 2, "", "verbosity", "Add turbines to wind farm via csv input file."]], "foxes.input.farm_layout.add_from_df": [[409, 3, 2, "", "args", "Add turbines to wind farm via pandas DataFrame."], [409, 3, 2, "", "data_source", "Add turbines to wind farm via pandas DataFrame."], [409, 3, 2, "", "farm", "Add turbines to wind farm via pandas DataFrame."], [409, 3, 2, "", "kwargs", "Add turbines to wind farm via pandas DataFrame."]], "foxes.input.farm_layout.add_from_file": [[410, 3, 2, "", "args", "Add turbines from file."], [410, 3, 2, "", "dbook", "Add turbines from file."], [410, 3, 2, "", "farm", "Add turbines from file."], [410, 3, 2, "", "file_path", "Add turbines from file."], [410, 3, 2, "", "kwargs", "Add turbines from file."], [410, 3, 2, "", "verbosity", "Add turbines from file."]], "foxes.input.farm_layout.add_from_json": [[411, 3, 2, "", "farm", "Add turbimes from a json file."], [411, 3, 2, "", "file_path", "Add turbimes from a json file."], [411, 3, 2, "", "set_farm_name", "Add turbimes from a json file."], [411, 3, 2, "", "turbine_parameters", "Add turbimes from a json file."], [411, 3, 2, "", "verbosity", "Add turbimes from a json file."]], "foxes.input.farm_layout.add_grid": [[412, 3, 2, "", "farm", "Add a regular grid of turbines."], [412, 3, 2, "", "indices", "Add a regular grid of turbines."], [412, 3, 2, "", "names", "Add a regular grid of turbines."], [412, 3, 2, "", "step_vectors", "Add a regular grid of turbines."], [412, 3, 2, "", "steps", "Add a regular grid of turbines."], [412, 3, 2, "", "turbine_parameters", "Add a regular grid of turbines."], [412, 3, 2, "", "verbosity", "Add a regular grid of turbines."], [412, 3, 2, "", "xy_base", "Add a regular grid of turbines."]], "foxes.input.farm_layout.add_random": [[413, 3, 2, "", "centre", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "farm", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "min_dist", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "n_turbines", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "seed", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "turbine_parameters", "Add turbines that lie randomly within a square"], [413, 3, 2, "", "verbosity", "Add turbines that lie randomly within a square"]], "foxes.input.farm_layout.add_ring": [[414, 3, 2, "", "dist", "Add a ring of turbines."], [414, 3, 2, "", "farm", "Add a ring of turbines."], [414, 3, 2, "", "indices", "Add a ring of turbines."], [414, 3, 2, "", "n_turbines", "Add a ring of turbines."], [414, 3, 2, "", "names", "Add a ring of turbines."], [414, 3, 2, "", "offset_deg", "Add a ring of turbines."], [414, 3, 2, "", "turbine_parameters", "Add a ring of turbines."], [414, 3, 2, "", "verbosity", "Add a ring of turbines."], [414, 3, 2, "", "xy_base", "Add a ring of turbines."]], "foxes.input.farm_layout.add_row": [[415, 3, 2, "", "farm", "Add a single row of turbines."], [415, 3, 2, "", "indices", "Add a single row of turbines."], [415, 3, 2, "", "n_turbines", "Add a single row of turbines."], [415, 3, 2, "", "names", "Add a single row of turbines."], [415, 3, 2, "", "turbine_parameters", "Add a single row of turbines."], [415, 3, 2, "", "verbosity", "Add a single row of turbines."], [415, 3, 2, "", "xy_base", "Add a single row of turbines."], [415, 3, 2, "", "xy_step", "Add a single row of turbines."]], "foxes.input.states": [[416, 0, 1, "", "FieldDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format."], [427, 0, 1, "", "MultiHeightNCStates", "Multi-height states from xarray Dataset."], [430, 0, 1, "", "MultiHeightNCTimeseries", "Multi-height timeseries from xarray Dataset."], [432, 0, 1, "", "MultiHeightStates", "States with multiple heights data per entry."], [447, 0, 1, "", "MultiHeightTimeseries", "Multi-height timeseries states data."], [449, 0, 1, "", "OnePointFlowMultiHeightNCTimeseries", "Inhomogeneous inflow from height dependent homogeneous timeseries data at one point based on NetCDF input"], [451, 0, 1, "", "OnePointFlowMultiHeightTimeseries", "Inhomogeneous inflow from height dependent homogeneous timeseries data at one point"], [453, 0, 1, "", "OnePointFlowStates", "Time-evolving states based on horizontally homogeneous timeseries data"], [466, 0, 1, "", "OnePointFlowTimeseries", "Inhomogeneous inflow from homogeneous timeseries data at one point"], [468, 0, 1, "", "ScanWS", "A given list of wind speeds, all other variables are fixed."], [477, 0, 1, "", "SingleStateStates", "A single uniform state."], [485, 0, 1, "", "SliceDataNC", "Heterogeneous ambient states on a regular horizontal grid in NetCDF format, independent of height."], [496, 0, 1, "", "StatesTable", "States from a pandas.DataFrame or a pandas readable file."], [512, 0, 1, "", "TabStates", "States created from a single tab file"], [517, 0, 1, "", "Timeseries", "Timeseries states data."]], "foxes.input.states.FieldDataNC": [[417, 2, 1, "", "__init__", "Constructor."], [418, 2, 1, "", "calculate", "The main model calculation."], [419, 4, 1, "", "data_source", "The data source"], [420, 2, 1, "", "index", "The index list"], [421, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [422, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [423, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [424, 2, 1, "", "size", "The total number of states."], [425, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [426, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.FieldDataNC.__init__": [[417, 3, 2, "", "data_source", "Constructor."], [417, 3, 2, "", "fixed_vars", "Constructor."], [417, 3, 2, "", "h_coord", "Constructor."], [417, 3, 2, "", "interp_nans", "Constructor."], [417, 3, 2, "", "interpn_pars", "Constructor."], [417, 3, 2, "", "isel", "Constructor."], [417, 3, 2, "", "output_vars", "Constructor."], [417, 3, 2, "", "pre_load", "Constructor."], [417, 3, 2, "", "sel", "Constructor."], [417, 3, 2, "", "states_coord", "Constructor."], [417, 3, 2, "", "time_format", "Constructor."], [417, 3, 2, "", "var2ncvar", "Constructor."], [417, 3, 2, "", "verbosity", "Constructor."], [417, 3, 2, "", "weight_ncvar", "Constructor."], [417, 3, 2, "", "x_coord", "Constructor."], [417, 3, 2, "", "y_coord", "Constructor."]], "foxes.input.states.FieldDataNC.calculate": [[418, 3, 2, "", "algo", "The main model calculation."], [418, 3, 2, "", "fdata", "The main model calculation."], [418, 3, 2, "", "mdata", "The main model calculation."], [418, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.FieldDataNC.load_data": [[421, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [421, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.FieldDataNC.output_point_vars": [[422, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.FieldDataNC.set_running": [[423, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [423, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [423, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [423, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [423, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.FieldDataNC.unset_running": [[425, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [425, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [425, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [425, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [425, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.FieldDataNC.weights": [[426, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.MultiHeightNCStates": [[428, 2, 1, "", "__init__", "Constructor."], [429, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.MultiHeightNCStates.__init__": [[428, 3, 2, "", "args", "Constructor."], [428, 3, 2, "", "data_source", "Constructor."], [428, 3, 2, "", "format_times_func", "Constructor."], [428, 3, 2, "", "h_coord", "Constructor."], [428, 3, 2, "", "heights", "Constructor."], [428, 3, 2, "", "kwargs", "Constructor."], [428, 3, 2, "", "state_coord", "Constructor."], [428, 3, 2, "", "xr_read_pars", "Constructor."]], "foxes.input.states.MultiHeightNCStates.load_data": [[429, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [429, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.MultiHeightNCTimeseries": [[431, 2, 1, "", "__init__", "Constructor."]], "foxes.input.states.MultiHeightNCTimeseries.__init__": [[431, 3, 2, "", "args", "Constructor."], [431, 3, 2, "", "kwargs", "Constructor."], [431, 3, 2, "", "time_coord", "Constructor."]], "foxes.input.states.MultiHeightStates": [[433, 1, 1, "", "RDICT", ""], [434, 2, 1, "", "__init__", "Constructor."], [435, 2, 1, "", "__repr__", "Return repr(self)."], [436, 2, 1, "", "calculate", "The main model calculation."], [437, 4, 1, "", "data_source", "The data source"], [438, 2, 1, "", "finalize", "Finalizes the model."], [439, 2, 1, "", "index", "The index list"], [440, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [441, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [442, 2, 1, "", "reset", "Reset the states, optionally select states"], [443, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [444, 2, 1, "", "size", "The total number of states."], [445, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [446, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.MultiHeightStates.__init__": [[434, 3, 2, "", "data_source", "Constructor."], [434, 3, 2, "", "fixed_vars", "Constructor."], [434, 3, 2, "", "heights", "Constructor."], [434, 3, 2, "", "ipars", "Constructor."], [434, 3, 2, "", "output_vars", "Constructor."], [434, 3, 2, "", "pd_read_pars", "Constructor."], [434, 3, 2, "", "states_loc", "Constructor."], [434, 3, 2, "", "states_sel", "Constructor."], [434, 3, 2, "", "var2col", "Constructor."]], "foxes.input.states.MultiHeightStates.calculate": [[436, 3, 2, "", "algo", "The main model calculation."], [436, 3, 2, "", "fdata", "The main model calculation."], [436, 3, 2, "", "mdata", "The main model calculation."], [436, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.MultiHeightStates.finalize": [[438, 3, 2, "", "algo", "Finalizes the model."], [438, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.input.states.MultiHeightStates.load_data": [[440, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [440, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.MultiHeightStates.output_point_vars": [[441, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.MultiHeightStates.reset": [[442, 3, 2, "", "algo", "Reset the states, optionally select states"], [442, 3, 2, "", "states_loc", "Reset the states, optionally select states"], [442, 3, 2, "", "states_sel", "Reset the states, optionally select states"], [442, 3, 2, "", "verbosity", "Reset the states, optionally select states"]], "foxes.input.states.MultiHeightStates.set_running": [[443, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [443, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [443, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [443, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [443, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.MultiHeightStates.unset_running": [[445, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [445, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [445, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [445, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [445, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.MultiHeightStates.weights": [[446, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.MultiHeightTimeseries": [[448, 1, 1, "", "RDICT", ""]], "foxes.input.states.OnePointFlowMultiHeightNCTimeseries": [[450, 2, 1, "", "__init__", "Constructor."]], "foxes.input.states.OnePointFlowMultiHeightNCTimeseries.__init__": [[450, 3, 2, "", "args", "Constructor."], [450, 3, 2, "", "kwargs", "Constructor."]], "foxes.input.states.OnePointFlowMultiHeightTimeseries": [[452, 2, 1, "", "__init__", "Constructor."]], "foxes.input.states.OnePointFlowMultiHeightTimeseries.__init__": [[452, 3, 2, "", "args", "Constructor."], [452, 3, 2, "", "kwargs", "Constructor."]], "foxes.input.states.OnePointFlowStates": [[454, 2, 1, "", "__init__", "Constructor."], [455, 2, 1, "", "__repr__", "Return repr(self)."], [456, 2, 1, "", "calc_states_indices", ""], [457, 2, 1, "", "calculate", "The main model calculation."], [458, 2, 1, "", "index", "The index list"], [459, 2, 1, "", "initialize", "Initializes the model."], [460, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [461, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [462, 2, 1, "", "size", "The total number of states."], [463, 2, 1, "", "sub_models", "List of all sub-models"], [464, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [465, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.OnePointFlowStates.__init__": [[454, 3, 2, "", "base_states", "Constructor."], [454, 3, 2, "", "base_states_args", "Constructor."], [454, 3, 2, "", "base_states_kwargs", "Constructor."], [454, 3, 2, "", "dt_min", "Constructor."], [454, 3, 2, "", "ref_xy", "Constructor."], [454, 3, 2, "", "tl_heights", "Constructor."]], "foxes.input.states.OnePointFlowStates.calc_states_indices": [[456, 3, 2, "", "algo", ""], [456, 3, 2, "", "hi", ""], [456, 3, 2, "", "mdata", ""], [456, 3, 2, "", "points", ""], [456, 3, 2, "", "ref_xy", ""]], "foxes.input.states.OnePointFlowStates.calculate": [[457, 3, 2, "", "algo", "The main model calculation."], [457, 3, 2, "", "fdata", "The main model calculation."], [457, 3, 2, "", "mdata", "The main model calculation."], [457, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.OnePointFlowStates.initialize": [[459, 3, 2, "", "algo", "Initializes the model."], [459, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.input.states.OnePointFlowStates.output_point_vars": [[460, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.OnePointFlowStates.set_running": [[461, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [461, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [461, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [461, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [461, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.OnePointFlowStates.unset_running": [[464, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [464, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [464, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [464, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [464, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.OnePointFlowStates.weights": [[465, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.OnePointFlowTimeseries": [[467, 2, 1, "", "__init__", "Constructor."]], "foxes.input.states.OnePointFlowTimeseries.__init__": [[467, 3, 2, "", "args", "Constructor."], [467, 3, 2, "", "kwargs", "Constructor."], [467, 3, 2, "", "ref_xy", "Constructor."], [467, 3, 2, "", "tl_heights", "Constructor."]], "foxes.input.states.ScanWS": [[469, 2, 1, "", "__init__", "Constructor."], [470, 2, 1, "", "calculate", "The main model calculation."], [471, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [472, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [473, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [474, 2, 1, "", "size", "The total number of states."], [475, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [476, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.ScanWS.__init__": [[469, 3, 2, "", "rho", "Constructor."], [469, 3, 2, "", "ti", "Constructor."], [469, 3, 2, "", "wd", "Constructor."], [469, 3, 2, "", "ws_list", "Constructor."]], "foxes.input.states.ScanWS.calculate": [[470, 3, 2, "", "algo", "The main model calculation."], [470, 3, 2, "", "fdata", "The main model calculation."], [470, 3, 2, "", "mdata", "The main model calculation."], [470, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.ScanWS.load_data": [[471, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [471, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.ScanWS.output_point_vars": [[472, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.ScanWS.set_running": [[473, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [473, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [473, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [473, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [473, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.ScanWS.unset_running": [[475, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [475, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [475, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [475, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [475, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.ScanWS.weights": [[476, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates": [[478, 2, 1, "", "__init__", "Constructor."], [479, 2, 1, "", "calculate", "The main model calculation."], [480, 2, 1, "", "initialize", "Initializes the model."], [481, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [482, 2, 1, "", "size", "The total number of states."], [483, 2, 1, "", "sub_models", "List of all sub-models"], [484, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SingleStateStates.__init__": [[478, 3, 2, "", "profdata", "Constructor."], [478, 3, 2, "", "profiles", "Constructor."], [478, 3, 2, "", "rho", "Constructor."], [478, 3, 2, "", "ti", "Constructor."], [478, 3, 2, "", "wd", "Constructor."], [478, 3, 2, "", "ws", "Constructor."]], "foxes.input.states.SingleStateStates.calculate": [[479, 3, 2, "", "algo", "The main model calculation."], [479, 3, 2, "", "fdata", "The main model calculation."], [479, 3, 2, "", "mdata", "The main model calculation."], [479, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.SingleStateStates.initialize": [[480, 3, 2, "", "algo", "Initializes the model."], [480, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.input.states.SingleStateStates.output_point_vars": [[481, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.SingleStateStates.weights": [[484, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.SliceDataNC": [[486, 2, 1, "", "__init__", "Constructor."], [487, 2, 1, "", "calculate", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [488, 4, 1, "", "data_source", "The data source"], [489, 2, 1, "", "index", "The index list"], [490, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [491, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [492, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [493, 2, 1, "", "size", "The total number of states."], [494, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [495, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.SliceDataNC.__init__": [[486, 3, 2, "", "data_source", "Constructor."], [486, 3, 2, "", "fixed_vars", "Constructor."], [486, 3, 2, "", "interp_nans", "Constructor."], [486, 3, 2, "", "interpn_pars", "Constructor."], [486, 3, 2, "", "isel", "Constructor."], [486, 3, 2, "", "output_vars", "Constructor."], [486, 3, 2, "", "pre_load", "Constructor."], [486, 3, 2, "", "sel", "Constructor."], [486, 3, 2, "", "states_coord", "Constructor."], [486, 3, 2, "", "time_format", "Constructor."], [486, 3, 2, "", "var2ncvar", "Constructor."], [486, 3, 2, "", "verbosity", "Constructor."], [486, 3, 2, "", "weight_ncvar", "Constructor."], [486, 3, 2, "", "x_coord", "Constructor."], [486, 3, 2, "", "y_coord", "Constructor."]], "foxes.input.states.SliceDataNC.calculate": [[487, 3, 2, "", "algo", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [487, 3, 2, "", "fdata", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [487, 3, 2, "", "mdata", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."], [487, 3, 2, "", "tdata", "Possible incomplete section title. Treating the overline as ordinary text because it's so short."]], "foxes.input.states.SliceDataNC.load_data": [[490, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [490, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.SliceDataNC.output_point_vars": [[491, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.SliceDataNC.set_running": [[492, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [492, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [492, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [492, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [492, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.SliceDataNC.unset_running": [[494, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [494, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [494, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [494, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [494, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.SliceDataNC.weights": [[495, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.StatesTable": [[497, 1, 1, "", "RDICT", ""], [498, 2, 1, "", "__init__", "Constructor."], [499, 2, 1, "", "calculate", "The main model calculation."], [500, 4, 1, "", "data_source", "The data source"], [501, 2, 1, "", "finalize", "Finalizes the model."], [502, 2, 1, "", "index", "The index list"], [503, 2, 1, "", "initialize", "Initializes the model."], [504, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [505, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."], [506, 2, 1, "", "reset", "Reset the states, optionally select states"], [507, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [508, 2, 1, "", "size", "The total number of states."], [509, 2, 1, "", "sub_models", "List of all sub-models"], [510, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"], [511, 2, 1, "", "weights", "The statistical weights of all states."]], "foxes.input.states.StatesTable.__init__": [[498, 3, 2, "", "data_source", "Constructor."], [498, 3, 2, "", "fixed_vars", "Constructor."], [498, 3, 2, "", "output_vars", "Constructor."], [498, 3, 2, "", "pd_read_pars", "Constructor."], [498, 3, 2, "", "profiles", "Constructor."], [498, 3, 2, "", "states_loc", "Constructor."], [498, 3, 2, "", "states_sel", "Constructor."], [498, 3, 2, "", "var2col", "Constructor."]], "foxes.input.states.StatesTable.calculate": [[499, 3, 2, "", "algo", "The main model calculation."], [499, 3, 2, "", "fdata", "The main model calculation."], [499, 3, 2, "", "mdata", "The main model calculation."], [499, 3, 2, "", "tdata", "The main model calculation."]], "foxes.input.states.StatesTable.finalize": [[501, 3, 2, "", "algo", "Finalizes the model."], [501, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.input.states.StatesTable.initialize": [[503, 3, 2, "", "algo", "Initializes the model."], [503, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.input.states.StatesTable.load_data": [[504, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [504, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.StatesTable.output_point_vars": [[505, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.input.states.StatesTable.reset": [[506, 3, 2, "", "algo", "Reset the states, optionally select states"], [506, 3, 2, "", "states_loc", "Reset the states, optionally select states"], [506, 3, 2, "", "states_sel", "Reset the states, optionally select states"], [506, 3, 2, "", "verbosity", "Reset the states, optionally select states"]], "foxes.input.states.StatesTable.set_running": [[507, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [507, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [507, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [507, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [507, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.StatesTable.unset_running": [[510, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [510, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [510, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [510, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [510, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.StatesTable.weights": [[511, 3, 2, "", "algo", "The statistical weights of all states."]], "foxes.input.states.TabStates": [[513, 2, 1, "", "__init__", "Constructor."], [514, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [515, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [516, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.TabStates.__init__": [[513, 3, 2, "", "args", "Constructor."], [513, 3, 2, "", "data_source", "Constructor."], [513, 3, 2, "", "kwargs", "Constructor."], [513, 3, 2, "", "normalize", "Constructor."]], "foxes.input.states.TabStates.load_data": [[514, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [514, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.input.states.TabStates.set_running": [[515, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [515, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [515, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [515, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [515, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.input.states.TabStates.unset_running": [[516, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [516, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [516, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [516, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [516, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.input.states.Timeseries": [[518, 1, 1, "", "RDICT", ""]], "foxes.input.states.create": [[519, 5, 1, "", "create_random_abl_states", "Create random abl states."], [520, 5, 1, "", "random_timseries_data", "Creates random uniform timeseries data"], [521, 5, 1, "", "write_random_abl_states", "Writes random abl states to file"]], "foxes.input.states.create.create_random_abl_states": [[519, 3, 2, "", "cols_minmax", "Create random abl states."], [519, 3, 2, "", "mol_abs_range", "Create random abl states."], [519, 3, 2, "", "n_states", "Create random abl states."], [519, 3, 2, "", "normalize", "Create random abl states."], [519, 3, 2, "", "var2col", "Create random abl states."]], "foxes.input.states.create.random_timseries_data": [[520, 3, 2, "", "data_ranges", "Creates random uniform timeseries data"], [520, 3, 2, "", "freq", "Creates random uniform timeseries data"], [520, 3, 2, "", "iname", "Creates random uniform timeseries data"], [520, 3, 2, "", "n_times", "Creates random uniform timeseries data"], [520, 3, 2, "", "seed", "Creates random uniform timeseries data"], [520, 3, 2, "", "start_time", "Creates random uniform timeseries data"]], "foxes.input.states.create.write_random_abl_states": [[521, 3, 2, "", "cols_minmax", "Writes random abl states to file"], [521, 3, 2, "", "digits", "Writes random abl states to file"], [521, 3, 2, "", "file_path", "Writes random abl states to file"], [521, 3, 2, "", "kwargs", "Writes random abl states to file"], [521, 3, 2, "", "mol_abs_range", "Writes random abl states to file"], [521, 3, 2, "", "n_states", "Writes random abl states to file"], [521, 3, 2, "", "normalize", "Writes random abl states to file"], [521, 3, 2, "", "var2col", "Writes random abl states to file"], [521, 3, 2, "", "verbosity", "Writes random abl states to file"]], "foxes.input.yaml": [[522, 5, 1, "", "foxes_windio", "Command line tool for running foxes from windio yaml file input."], [523, 5, 1, "", "foxes_yaml", "Command line tool for running foxes from yaml file input."], [524, 5, 1, "", "read_windio", "Translate windio data to foxes input data"], [525, 5, 1, "", "run_dict", "Runs foxes from dictionary input"]], "foxes.input.yaml.read_windio": [[524, 3, 2, "", "verbosity", "Translate windio data to foxes input data"], [524, 3, 2, "", "wio_dict", "Translate windio data to foxes input data"]], "foxes.input.yaml.run_dict": [[525, 3, 2, "", "algo", "Runs foxes from dictionary input"], [525, 3, 2, "", "algo_pars", "Runs foxes from dictionary input"], [525, 3, 2, "", "engine_pars", "Runs foxes from dictionary input"], [525, 3, 2, "", "farm", "Runs foxes from dictionary input"], [525, 3, 2, "", "idict", "Runs foxes from dictionary input"], [525, 3, 2, "", "iterative", "Runs foxes from dictionary input"], [525, 3, 2, "", "mbook", "Runs foxes from dictionary input"], [525, 3, 2, "", "out_dir", "Runs foxes from dictionary input"], [525, 3, 2, "", "states", "Runs foxes from dictionary input"], [525, 3, 2, "", "verbosity", "Runs foxes from dictionary input"], [525, 3, 2, "", "work_dir", "Runs foxes from dictionary input"]], "foxes.input.yaml.windio": [[526, 5, 1, "", "read_attributes", "Reads the attributes part of windio"], [527, 5, 1, "", "read_layout", "Read wind farm layout from windio input"], [528, 5, 1, "", "read_turbine_types", "Reads the turbine type from windio"], [529, 5, 1, "", "read_wind_resource_field", "Reads wind resource data into fields and dims"]], "foxes.input.yaml.windio.read_attributes": [[526, 3, 2, "", "idict", "Reads the attributes part of windio"], [526, 3, 2, "", "mbook", "Reads the attributes part of windio"], [526, 3, 2, "", "verbosity", "Reads the attributes part of windio"], [526, 3, 2, "", "wio", "Reads the attributes part of windio"]], "foxes.input.yaml.windio.read_layout": [[527, 3, 2, "", "farm", "Read wind farm layout from windio input"], [527, 3, 2, "", "ldict", "Read wind farm layout from windio input"], [527, 3, 2, "", "lname", "Read wind farm layout from windio input"], [527, 3, 2, "", "ttypes", "Read wind farm layout from windio input"], [527, 3, 2, "", "verbosity", "Read wind farm layout from windio input"]], "foxes.input.yaml.windio.read_turbine_types": [[528, 3, 2, "", "mbook", "Reads the turbine type from windio"], [528, 3, 2, "", "verbosity", "Reads the turbine type from windio"], [528, 3, 2, "", "wio_farm", "Reads the turbine type from windio"], [528, 3, 2, "", "ws_exp_P", "Reads the turbine type from windio"], [528, 3, 2, "", "ws_exp_ct", "Reads the turbine type from windio"]], "foxes.input.yaml.windio.read_wind_resource_field": [[529, 3, 2, "", "coords", "Reads wind resource data into fields and dims"], [529, 3, 2, "", "dims", "Reads wind resource data into fields and dims"], [529, 3, 2, "", "fields", "Reads wind resource data into fields and dims"], [529, 3, 2, "", "name", "Reads wind resource data into fields and dims"], [529, 3, 2, "", "verbosity", "Reads wind resource data into fields and dims"], [529, 3, 2, "", "wio_data", "Reads wind resource data into fields and dims"]], "foxes.models": [[530, 0, 1, "", "ModelBook", "Container for all kinds of models."]], "foxes.models.ModelBook": [[531, 2, 1, "", "__getitem__", ""], [532, 2, 1, "", "__init__", "Constructor."], [533, 2, 1, "", "default_partial_wakes", "Gets a default partial wakes model name for a given wake model"], [534, 2, 1, "", "finalize", "Finalizes the model."], [535, 2, 1, "", "get", "Gets a model object."], [536, 2, 1, "", "print_toc", "Print the contents."]], "foxes.models.ModelBook.__getitem__": [[531, 3, 2, "", "key", ""]], "foxes.models.ModelBook.__init__": [[532, 3, 2, "", "Pct_file", "Constructor."]], "foxes.models.ModelBook.default_partial_wakes": [[533, 3, 2, "", "wake_model", "Gets a default partial wakes model name for a given wake model"]], "foxes.models.ModelBook.finalize": [[534, 3, 2, "", "algo", "Finalizes the model."], [534, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.ModelBook.get": [[535, 3, 2, "", "args", "Gets a model object."], [535, 3, 2, "", "class_name", "Gets a model object."], [535, 3, 2, "", "kwargs", "Gets a model object."], [535, 3, 2, "", "model_type", "Gets a model object."], [535, 3, 2, "", "name", "Gets a model object."]], "foxes.models.ModelBook.print_toc": [[536, 3, 2, "", "search", "Print the contents."], [536, 3, 2, "", "subset", "Print the contents."]], "foxes.models.axial_induction": [[537, 0, 1, "", "BetzAxialInduction", "The classic axial induction from 1D momentum theory"], [540, 0, 1, "", "MadsenAxialInduction", "Computes the induction factor through polynomial fit, extending validity for high ct values"]], "foxes.models.axial_induction.BetzAxialInduction": [[538, 2, 1, "", "__init__", "Constructor."], [539, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.axial_induction.BetzAxialInduction.__init__": [[538, 3, 2, "", "ct_max", "Constructor."]], "foxes.models.axial_induction.BetzAxialInduction.ct2a": [[539, 3, 2, "", "ct", "Computes induction from ct"]], "foxes.models.axial_induction.MadsenAxialInduction": [[541, 2, 1, "", "__init__", "Constructor."], [542, 2, 1, "", "ct2a", "Computes induction from ct"]], "foxes.models.axial_induction.MadsenAxialInduction.__init__": [[541, 3, 2, "", "k1", "Constructor."], [541, 3, 2, "", "k2", "Constructor."], [541, 3, 2, "", "k3", "Constructor."]], "foxes.models.axial_induction.MadsenAxialInduction.ct2a": [[542, 3, 2, "", "ct", "Computes induction from ct"]], "foxes.models.farm_controllers": [[543, 0, 1, "", "BasicFarmController", "The basic farm controller, running all turbine models in their order, without conditions."]], "foxes.models.farm_models": [[544, 0, 1, "", "Turbine2FarmModel", "Wrapper that promotes turbine models into farm models, simply by selecting all turbines."]], "foxes.models.farm_models.Turbine2FarmModel": [[545, 2, 1, "", "__init__", "Constructor."], [546, 2, 1, "", "__repr__", "Return repr(self)."], [547, 2, 1, "", "calculate", "The main model calculation."], [548, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [549, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.farm_models.Turbine2FarmModel.__init__": [[545, 3, 2, "", "turbine_model", "Constructor."]], "foxes.models.farm_models.Turbine2FarmModel.calculate": [[547, 3, 2, "", "algo", "The main model calculation."], [547, 3, 2, "", "fdata", "The main model calculation."], [547, 3, 2, "", "mdata", "The main model calculation."], [547, 3, 2, "", "parameters", "The main model calculation."]], "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars": [[548, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.ground_models": [[550, 0, 1, "", "GroundMirror", "Wake reflection from the ground."], [552, 0, 1, "", "NoGround", "No ground effects"], [553, 0, 1, "", "WakeMirror", "Wake reflection from ground and/or other horizontal planes."]], "foxes.models.ground_models.GroundMirror": [[551, 2, 1, "", "__init__", "Constructor."]], "foxes.models.ground_models.WakeMirror": [[554, 2, 1, "", "__init__", "Constructor."], [555, 2, 1, "", "contribute_to_farm_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 2, 1, "", "contribute_to_point_wakes", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.ground_models.WakeMirror.__init__": [[554, 3, 2, "", "heights", "Constructor."]], "foxes.models.ground_models.WakeMirror.contribute_to_farm_wakes": [[555, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "pwake", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [555, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.ground_models.WakeMirror.contribute_to_point_wakes": [[556, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [556, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes": [[557, 0, 1, "", "PartialAxiwake", "Partial wake calculation for axial wake models."], [562, 0, 1, "", "PartialCentre", "Partial wakes calculated only at the rotor centre point."], [564, 0, 1, "", "PartialGrid", "Partial wakes on a grid rotor that may differ from the one in the algorithm."], [566, 0, 1, "", "PartialSegregated", "Add the averaged wake effects to the separately averaged ambient rotor results"], [572, 0, 1, "", "PartialTopHat", "Partial wakes for top-hat models."], [578, 0, 1, "", "RotorPoints", "Partial wakes calculation directly by the rotor model."]], "foxes.models.partial_wakes.PartialAxiwake": [[558, 2, 1, "", "__init__", "Constructor."], [559, 2, 1, "", "__repr__", "Return repr(self)."], [560, 2, 1, "", "check_wmodel", "Checks the wake model type"], [561, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialAxiwake.__init__": [[558, 3, 2, "", "n", "Constructor."]], "foxes.models.partial_wakes.PartialAxiwake.check_wmodel": [[560, 3, 2, "", "error", "Checks the wake model type"], [560, 3, 2, "", "wmodel", "Checks the wake model type"]], "foxes.models.partial_wakes.PartialAxiwake.contribute": [[561, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [561, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialCentre": [[563, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."]], "foxes.models.partial_wakes.PartialCentre.get_wake_points": [[563, 3, 2, "", "algo", "Get the wake calculation points, and their weights."], [563, 3, 2, "", "fdata", "Get the wake calculation points, and their weights."], [563, 3, 2, "", "mdata", "Get the wake calculation points, and their weights."]], "foxes.models.partial_wakes.PartialGrid": [[565, 2, 1, "", "__init__", "Constructor."]], "foxes.models.partial_wakes.PartialGrid.__init__": [[565, 3, 2, "", "args", "Constructor."], [565, 3, 2, "", "kwargs", "Constructor."]], "foxes.models.partial_wakes.PartialSegregated": [[567, 2, 1, "", "__init__", "Constructor."], [568, 2, 1, "", "__repr__", "Return repr(self)."], [569, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [570, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."], [571, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialSegregated.__init__": [[567, 3, 2, "", "rotor_model", "Constructor."]], "foxes.models.partial_wakes.PartialSegregated.finalize_wakes": [[569, 3, 2, "", "algo", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "amb_res", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "downwind_index", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "fdata", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "mdata", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "rpoint_weights", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "tdata", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "wake_deltas", "Updates the wake_deltas at the selected target downwind index."], [569, 3, 2, "", "wmodel", "Updates the wake_deltas at the selected target downwind index."]], "foxes.models.partial_wakes.PartialSegregated.get_wake_points": [[570, 3, 2, "", "algo", "Get the wake calculation points, and their weights."], [570, 3, 2, "", "fdata", "Get the wake calculation points, and their weights."], [570, 3, 2, "", "mdata", "Get the wake calculation points, and their weights."]], "foxes.models.partial_wakes.PartialTopHat": [[573, 2, 1, "", "__init__", "Constructor."], [574, 2, 1, "", "check_wmodel", "Checks the wake model type"], [575, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [576, 2, 1, "", "initialize", "Initializes the model."], [577, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.partial_wakes.PartialTopHat.__init__": [[573, 3, 2, "", "rotor_model", "Constructor."]], "foxes.models.partial_wakes.PartialTopHat.check_wmodel": [[574, 3, 2, "", "error", "Checks the wake model type"], [574, 3, 2, "", "wmodel", "Checks the wake model type"]], "foxes.models.partial_wakes.PartialTopHat.contribute": [[575, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [575, 3, 2, "", "wmodel", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.partial_wakes.PartialTopHat.initialize": [[576, 3, 2, "", "algo", "Initializes the model."], [576, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.partial_wakes.RotorPoints": [[579, 2, 1, "", "finalize_wakes", "Updates the wake_deltas at the selected target downwind index."], [580, 2, 1, "", "get_wake_points", "Get the wake calculation points, and their weights."]], "foxes.models.partial_wakes.RotorPoints.finalize_wakes": [[579, 3, 2, "", "algo", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "amb_res", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "downwind_index", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "fdata", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "mdata", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "rpoint_weights", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "tdata", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "wake_deltas", "Updates the wake_deltas at the selected target downwind index."], [579, 3, 2, "", "wmodel", "Updates the wake_deltas at the selected target downwind index."]], "foxes.models.partial_wakes.RotorPoints.get_wake_points": [[580, 3, 2, "", "algo", "Get the wake calculation points, and their weights."], [580, 3, 2, "", "fdata", "Get the wake calculation points, and their weights."], [580, 3, 2, "", "mdata", "Get the wake calculation points, and their weights."]], "foxes.models.point_models": [[581, 0, 1, "", "SetUniformData", "Set uniform data (can be state dependent)"], [586, 0, 1, "", "TKE2TI", "Calculates TI from TKE, using TI = sqrt( 3/2 * TKE) / WS"], [589, 0, 1, "", "WakeDeltas", "This point model simply subtracts ambient results from waked results."]], "foxes.models.point_models.SetUniformData": [[582, 2, 1, "", "__init__", "Constructor."], [583, 2, 1, "", "calculate", "The main model calculation."], [584, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [585, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.SetUniformData.__init__": [[582, 3, 2, "", "data_source", "Constructor."], [582, 3, 2, "", "output_vars", "Constructor."], [582, 3, 2, "", "pd_read_pars", "Constructor."], [582, 3, 2, "", "var2col", "Constructor."]], "foxes.models.point_models.SetUniformData.calculate": [[583, 3, 2, "", "algo", "The main model calculation."], [583, 3, 2, "", "fdata", "The main model calculation."], [583, 3, 2, "", "mdata", "The main model calculation."], [583, 3, 2, "", "pdata", "The main model calculation."]], "foxes.models.point_models.SetUniformData.load_data": [[584, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [584, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.point_models.SetUniformData.output_point_vars": [[585, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI": [[587, 2, 1, "", "calculate", "The main model calculation."], [588, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.TKE2TI.calculate": [[587, 3, 2, "", "algo", "The main model calculation."], [587, 3, 2, "", "fdata", "The main model calculation."], [587, 3, 2, "", "mdata", "The main model calculation."], [587, 3, 2, "", "pdata", "The main model calculation."]], "foxes.models.point_models.TKE2TI.output_point_vars": [[588, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas": [[590, 2, 1, "", "__init__", "Constructor."], [591, 2, 1, "", "calculate", "The main model calculation."], [592, 2, 1, "", "output_point_vars", "The variables which are being modified by the model."]], "foxes.models.point_models.WakeDeltas.__init__": [[590, 3, 2, "", "normalize", "Constructor."], [590, 3, 2, "", "vars", "Constructor."]], "foxes.models.point_models.WakeDeltas.calculate": [[591, 3, 2, "", "algo", "The main model calculation."], [591, 3, 2, "", "fdata", "The main model calculation."], [591, 3, 2, "", "mdata", "The main model calculation."], [591, 3, 2, "", "pdata", "The main model calculation."]], "foxes.models.point_models.WakeDeltas.output_point_vars": [[592, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.rotor_models": [[593, 0, 1, "", "CentreRotor", "The centre rotor model."], [599, 0, 1, "", "GridRotor", "The weighted regular grid rotor model, composed maximally of n x n points, possibly kicking out the outside points."], [606, 0, 1, "", "LevelRotor", "The weighted regular rotor level model, composed of of n points between lower and upper blade tip. Calculates a height-dependent REWS"]], "foxes.models.rotor_models.CentreRotor": [[594, 2, 1, "", "design_points", "The rotor model design points."], [595, 2, 1, "", "eval_rpoint_results", "Evaluate rotor point results."], [596, 2, 1, "", "get_rotor_points", "Calculates rotor points from design points."], [597, 2, 1, "", "n_rotor_points", "The number of rotor points"], [598, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.CentreRotor.eval_rpoint_results": [[595, 3, 2, "", "algo", "Evaluate rotor point results."], [595, 3, 2, "", "copy_to_ambient", "Evaluate rotor point results."], [595, 3, 2, "", "downwind_index", "Evaluate rotor point results."], [595, 3, 2, "", "fdata", "Evaluate rotor point results."], [595, 3, 2, "", "mdata", "Evaluate rotor point results."], [595, 3, 2, "", "rpoint_results", "Evaluate rotor point results."], [595, 3, 2, "", "weights", "Evaluate rotor point results."]], "foxes.models.rotor_models.CentreRotor.get_rotor_points": [[596, 3, 2, "", "algo", "Calculates rotor points from design points."], [596, 3, 2, "", "fdata", "Calculates rotor points from design points."], [596, 3, 2, "", "mdata", "Calculates rotor points from design points."]], "foxes.models.rotor_models.GridRotor": [[600, 2, 1, "", "__init__", "Constructor."], [601, 2, 1, "", "__repr__", "Return repr(self)."], [602, 2, 1, "", "design_points", "The rotor model design points."], [603, 2, 1, "", "initialize", "Initializes the model."], [604, 2, 1, "", "n_rotor_points", "The number of rotor points"], [605, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.GridRotor.__init__": [[600, 3, 2, "", "kwargs", "Constructor."], [600, 3, 2, "", "n", "Constructor."], [600, 3, 2, "", "nint", "Constructor."], [600, 3, 2, "", "reduce", "Constructor."]], "foxes.models.rotor_models.GridRotor.initialize": [[603, 3, 2, "", "algo", "Initializes the model."], [603, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.rotor_models.LevelRotor": [[607, 2, 1, "", "__init__", "Constructor."], [608, 2, 1, "", "__repr__", "Return repr(self)."], [609, 2, 1, "", "design_points", "The rotor model design points."], [610, 2, 1, "", "initialize", "Initializes the model."], [611, 2, 1, "", "n_rotor_points", "The number of rotor points"], [612, 2, 1, "", "rotor_point_weights", "The weights of the rotor points"]], "foxes.models.rotor_models.LevelRotor.__init__": [[607, 3, 2, "", "kwargs", "Constructor."], [607, 3, 2, "", "n", "Constructor."], [607, 3, 2, "", "nint", "Constructor."], [607, 3, 2, "", "reduce", "Constructor."]], "foxes.models.rotor_models.LevelRotor.initialize": [[610, 3, 2, "", "algo", "Initializes the model."], [610, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models": [[613, 0, 1, "", "Calculator", "Calculates variables based on given functions."], [618, 0, 1, "", "LookupTable", "Calculates the data by interpolation of lookup-table data"], [623, 0, 1, "", "PowerMask", "Invokes a maximal power value."], [630, 0, 1, "", "RotorCentreCalc", "Calculates data at the rotor centre"], [636, 0, 1, "", "SectorManagement", "Changes variables based on variable range conditions."], [641, 0, 1, "", "SetFarmVars", "Set farm data variables to given data."], [651, 0, 1, "", "TableFactors", "Multiplies variables by factors from a two dimensional table."], [656, 0, 1, "", "Thrust2Ct", "Calculates ct from thrust force data."], [661, 0, 1, "", "YAW2YAWM", "Calculates delta yaw (i.e. YAWM) from absolute yaw (i.e. YAW)"], [664, 0, 1, "", "YAWM2YAW", "Calculates absolute yaw (i.e. YAWM) from delta yaw (i.e. YAWM)"], [667, 0, 1, "", "kTI", "Calculates the wake model parameter k as a linear function of TI."]], "foxes.models.turbine_models.Calculator": [[614, 2, 1, "", "__init__", "Constructor."], [615, 2, 1, "", "__repr__", "Return repr(self)."], [616, 2, 1, "", "calculate", "The main model calculation."], [617, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Calculator.__init__": [[614, 3, 2, "", "func", "Constructor."], [614, 3, 2, "", "in_vars", "Constructor."], [614, 3, 2, "", "kwargs", "Constructor."], [614, 3, 2, "", "out_vars", "Constructor."]], "foxes.models.turbine_models.Calculator.calculate": [[616, 3, 2, "", "algo", "The main model calculation."], [616, 3, 2, "", "fdata", "The main model calculation."], [616, 3, 2, "", "mdata", "The main model calculation."], [616, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.Calculator.output_farm_vars": [[617, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable": [[619, 2, 1, "", "__init__", "Constructor."], [620, 2, 1, "", "calculate", "The main model calculation."], [621, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [622, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.LookupTable.__init__": [[619, 3, 2, "", "data_source", "Constructor."], [619, 3, 2, "", "input_vars", "Constructor."], [619, 3, 2, "", "interpn_args", "Constructor."], [619, 3, 2, "", "kwargs", "Constructor."], [619, 3, 2, "", "output_vars", "Constructor."], [619, 3, 2, "", "pd_file_read_pars", "Constructor."], [619, 3, 2, "", "varmap", "Constructor."], [619, 3, 2, "", "xr_interp_args", "Constructor."]], "foxes.models.turbine_models.LookupTable.calculate": [[620, 3, 2, "", "algo", "The main model calculation."], [620, 3, 2, "", "fdata", "The main model calculation."], [620, 3, 2, "", "mdata", "The main model calculation."], [620, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.LookupTable.load_data": [[621, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [621, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_models.LookupTable.output_farm_vars": [[622, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.PowerMask": [[624, 2, 1, "", "__init__", "Constructor."], [625, 2, 1, "", "__repr__", "Return repr(self)."], [626, 2, 1, "", "calculate", "The main model calculation."], [627, 2, 1, "", "initialize", "Initializes the model."], [628, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [629, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.PowerMask.__init__": [[624, 3, 2, "", "P_lim", "Constructor."], [624, 3, 2, "", "factor_P", "Constructor."], [624, 3, 2, "", "induction", "Constructor."], [624, 3, 2, "", "var_ws_P", "Constructor."]], "foxes.models.turbine_models.PowerMask.calculate": [[626, 3, 2, "", "algo", "The main model calculation."], [626, 3, 2, "", "fdata", "The main model calculation."], [626, 3, 2, "", "mdata", "The main model calculation."], [626, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.PowerMask.initialize": [[627, 3, 2, "", "algo", "Initializes the model."], [627, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models.PowerMask.output_farm_vars": [[628, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.RotorCentreCalc": [[631, 2, 1, "", "__init__", "Constructor."], [632, 2, 1, "", "calculate", "The main model calculation."], [633, 2, 1, "", "initialize", "Initializes the model."], [634, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [635, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_models.RotorCentreCalc.__init__": [[631, 3, 2, "", "calc_vars", "Constructor."]], "foxes.models.turbine_models.RotorCentreCalc.calculate": [[632, 3, 2, "", "algo", "The main model calculation."], [632, 3, 2, "", "fdata", "The main model calculation."], [632, 3, 2, "", "mdata", "The main model calculation."], [632, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.RotorCentreCalc.initialize": [[633, 3, 2, "", "algo", "Initializes the model."], [633, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars": [[634, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SectorManagement": [[637, 2, 1, "", "__init__", "Constructor."], [638, 2, 1, "", "calculate", "The main model calculation."], [639, 2, 1, "", "initialize", "Initializes the model."], [640, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SectorManagement.__init__": [[637, 3, 2, "", "col_tinds", "Constructor."], [637, 3, 2, "", "col_tnames", "Constructor."], [637, 3, 2, "", "colmap", "Constructor."], [637, 3, 2, "", "data_source", "Constructor."], [637, 3, 2, "", "pd_file_read_pars", "Constructor."], [637, 3, 2, "", "range_vars", "Constructor."], [637, 3, 2, "", "target_vars", "Constructor."], [637, 3, 2, "", "var_periods", "Constructor."]], "foxes.models.turbine_models.SectorManagement.calculate": [[638, 3, 2, "", "algo", "The main model calculation."], [638, 3, 2, "", "fdata", "The main model calculation."], [638, 3, 2, "", "mdata", "The main model calculation."], [638, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.SectorManagement.initialize": [[639, 3, 2, "", "algo", "Initializes the model."], [639, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models.SectorManagement.output_farm_vars": [[640, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars": [[642, 2, 1, "", "__init__", "Constructor."], [643, 2, 1, "", "add_var", "Add data for a variable."], [644, 2, 1, "", "calculate", "The main model calculation."], [645, 2, 1, "", "initialize", "Initializes the model."], [646, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [647, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [648, 2, 1, "", "reset", "Remove all variables."], [649, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [650, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"]], "foxes.models.turbine_models.SetFarmVars.__init__": [[642, 3, 2, "", "once", "Constructor."], [642, 3, 2, "", "pre_rotor", "Constructor."]], "foxes.models.turbine_models.SetFarmVars.add_var": [[643, 3, 2, "", "data", "Add data for a variable."], [643, 3, 2, "", "var", "Add data for a variable."]], "foxes.models.turbine_models.SetFarmVars.calculate": [[644, 3, 2, "", "algo", "The main model calculation."], [644, 3, 2, "", "fdata", "The main model calculation."], [644, 3, 2, "", "mdata", "The main model calculation."], [644, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.SetFarmVars.initialize": [[645, 3, 2, "", "algo", "Initializes the model."], [645, 3, 2, "", "force", "Initializes the model."], [645, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models.SetFarmVars.load_data": [[646, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [646, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_models.SetFarmVars.output_farm_vars": [[647, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.SetFarmVars.set_running": [[649, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [649, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [649, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [649, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [649, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.models.turbine_models.SetFarmVars.unset_running": [[650, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [650, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [650, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [650, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [650, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.models.turbine_models.TableFactors": [[652, 2, 1, "", "__init__", "Constructor."], [653, 2, 1, "", "calculate", "The main model calculation."], [654, 2, 1, "", "initialize", "Initializes the model."], [655, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.TableFactors.__init__": [[652, 3, 2, "", "col_var", "Constructor."], [652, 3, 2, "", "data_source", "Constructor."], [652, 3, 2, "", "ipars", "Constructor."], [652, 3, 2, "", "output_vars", "Constructor."], [652, 3, 2, "", "pd_file_read_pars", "Constructor."], [652, 3, 2, "", "row_var", "Constructor."]], "foxes.models.turbine_models.TableFactors.calculate": [[653, 3, 2, "", "algo", "The main model calculation."], [653, 3, 2, "", "fdata", "The main model calculation."], [653, 3, 2, "", "mdata", "The main model calculation."], [653, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.TableFactors.initialize": [[654, 3, 2, "", "algo", "Initializes the model."], [654, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_models.TableFactors.output_farm_vars": [[655, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct": [[657, 2, 1, "", "__init__", "Constructor."], [658, 2, 1, "", "__repr__", "Return repr(self)."], [659, 2, 1, "", "calculate", "The main model calculation."], [660, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.Thrust2Ct.__init__": [[657, 3, 2, "", "thrust_var", "Constructor."], [657, 3, 2, "", "var_ws_ct", "Constructor."]], "foxes.models.turbine_models.Thrust2Ct.calculate": [[659, 3, 2, "", "algo", "The main model calculation."], [659, 3, 2, "", "fdata", "The main model calculation."], [659, 3, 2, "", "mdata", "The main model calculation."], [659, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.Thrust2Ct.output_farm_vars": [[660, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM": [[662, 2, 1, "", "calculate", "The main model calculation."], [663, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAW2YAWM.calculate": [[662, 3, 2, "", "algo", "The main model calculation."], [662, 3, 2, "", "fdata", "The main model calculation."], [662, 3, 2, "", "mdata", "The main model calculation."], [662, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.YAW2YAWM.output_farm_vars": [[663, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW": [[665, 2, 1, "", "calculate", "The main model calculation."], [666, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.YAWM2YAW.calculate": [[665, 3, 2, "", "algo", "The main model calculation."], [665, 3, 2, "", "fdata", "The main model calculation."], [665, 3, 2, "", "mdata", "The main model calculation."], [665, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.YAWM2YAW.output_farm_vars": [[666, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI": [[668, 2, 1, "", "__init__", "Constructor."], [669, 2, 1, "", "__repr__", "Return repr(self)."], [670, 2, 1, "", "calculate", "The main model calculation."], [671, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_models.kTI.__init__": [[668, 3, 2, "", "kTI", "Constructor."], [668, 3, 2, "", "k_var", "Constructor."], [668, 3, 2, "", "kb", "Constructor."], [668, 3, 2, "", "ti_val", "Constructor."], [668, 3, 2, "", "ti_var", "Constructor."]], "foxes.models.turbine_models.kTI.calculate": [[670, 3, 2, "", "algo", "The main model calculation."], [670, 3, 2, "", "fdata", "The main model calculation."], [670, 3, 2, "", "mdata", "The main model calculation."], [670, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_models.kTI.output_farm_vars": [[671, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types": [[672, 0, 1, "", "CpCtFile", "Calculate power and ct by interpolating from cp-ct-curve data file (or pandas DataFrame)."], [674, 0, 1, "", "CpCtFromTwo", "Calculate power and ct by interpolating cp and ct from two files (or two pandas DataFrames)."], [676, 0, 1, "", "FromLookupTable", "Calculate power and ct by interpolating by using a lookup-table"], [686, 0, 1, "", "NullType", "A turbine type that does not compute any data."], [692, 0, 1, "", "PCtFile", "Calculate power and ct by interpolating from power-ct-curve data file (or pandas DataFrame)."], [702, 0, 1, "", "PCtFromTwo", "Calculate power and ct by interpolating from power curve and ct curve data files."], [712, 0, 1, "", "TBLFile", "Reads turbine data from a TBL file."], [714, 0, 1, "", "WsRho2PCtFromTwo", "Calculate air density dependent power and ct values, as given by two individual files."], [722, 0, 1, "", "WsTI2PCtFromTwo", "Calculate turbulent intensity dependent power and ct values, as given by two individual files."]], "foxes.models.turbine_types.CpCtFile": [[673, 2, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFile.__init__": [[673, 3, 2, "", "col_cp", "Constructor."], [673, 3, 2, "", "col_ws", "Constructor."], [673, 3, 2, "", "data_source", "Constructor."], [673, 3, 2, "", "parameters", "Constructor."], [673, 3, 2, "", "pd_file_read_pars", "Constructor."], [673, 3, 2, "", "rho", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo": [[675, 2, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.CpCtFromTwo.__init__": [[675, 3, 2, "", "col_cp", "Constructor."], [675, 3, 2, "", "col_ws_cp_file", "Constructor."], [675, 3, 2, "", "data_source_cp", "Constructor."], [675, 3, 2, "", "data_source_ct", "Constructor."], [675, 3, 2, "", "parameters", "Constructor."], [675, 3, 2, "", "pd_file_read_pars_cp", "Constructor."], [675, 3, 2, "", "pd_file_read_pars_ct", "Constructor."], [675, 3, 2, "", "rho", "Constructor."]], "foxes.models.turbine_types.FromLookupTable": [[677, 2, 1, "", "__init__", "Constructor."], [678, 2, 1, "", "__repr__", "Return repr(self)."], [679, 2, 1, "", "calculate", "The main model calculation."], [680, 2, 1, "", "initialize", "Initializes the model."], [681, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [682, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [683, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [684, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."], [685, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.turbine_types.FromLookupTable.__init__": [[677, 3, 2, "", "data_source", "Constructor."], [677, 3, 2, "", "input_vars", "Constructor."], [677, 3, 2, "", "interpn_args", "Constructor."], [677, 3, 2, "", "lookup_pars", "Constructor."], [677, 3, 2, "", "p_P", "Constructor."], [677, 3, 2, "", "p_ct", "Constructor."], [677, 3, 2, "", "parameters", "Constructor."], [677, 3, 2, "", "pd_file_read_pars", "Constructor."], [677, 3, 2, "", "rho", "Constructor."], [677, 3, 2, "", "var_ws_P", "Constructor."], [677, 3, 2, "", "var_ws_ct", "Constructor."], [677, 3, 2, "", "varmap", "Constructor."]], "foxes.models.turbine_types.FromLookupTable.calculate": [[679, 3, 2, "", "algo", "The main model calculation."], [679, 3, 2, "", "fdata", "The main model calculation."], [679, 3, 2, "", "mdata", "The main model calculation."], [679, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.FromLookupTable.initialize": [[680, 3, 2, "", "algo", "Initializes the model."], [680, 3, 2, "", "force", "Initializes the model."], [680, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.turbine_types.FromLookupTable.modify_cutin": [[681, 3, 2, "", "a", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [681, 3, 2, "", "b", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [681, 3, 2, "", "iterations", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [681, 3, 2, "", "modify_P", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [681, 3, 2, "", "modify_ct", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [681, 3, 2, "", "steps", "Modify the data such that a discontinuity at cutin wind speed is avoided"]], "foxes.models.turbine_types.FromLookupTable.output_farm_vars": [[684, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types.NullType": [[687, 2, 1, "", "__init__", "Constructor."], [688, 2, 1, "", "calculate", "The main model calculation."], [689, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [690, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [691, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.NullType.__init__": [[687, 3, 2, "", "args", "Constructor."], [687, 3, 2, "", "kwargs", "Constructor."], [687, 3, 2, "", "needs_rews2", "Constructor."], [687, 3, 2, "", "needs_rews3", "Constructor."]], "foxes.models.turbine_types.NullType.calculate": [[688, 3, 2, "", "algo", "The main model calculation."], [688, 3, 2, "", "fdata", "The main model calculation."], [688, 3, 2, "", "mdata", "The main model calculation."], [688, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.NullType.output_farm_vars": [[691, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile": [[693, 2, 1, "", "__init__", "Constructor."], [694, 2, 1, "", "__repr__", "Return repr(self)."], [695, 2, 1, "", "calculate", "The main model calculation."], [696, 2, 1, "", "finalize", "Finalizes the model."], [697, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [698, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [699, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [700, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [701, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFile.__init__": [[693, 3, 2, "", "col_P", "Constructor."], [693, 3, 2, "", "col_ct", "Constructor."], [693, 3, 2, "", "col_ws", "Constructor."], [693, 3, 2, "", "data_source", "Constructor."], [693, 3, 2, "", "p_P", "Constructor."], [693, 3, 2, "", "p_ct", "Constructor."], [693, 3, 2, "", "parameters", "Constructor."], [693, 3, 2, "", "pd_file_read_pars", "Constructor."], [693, 3, 2, "", "rho", "Constructor."], [693, 3, 2, "", "var_ws_P", "Constructor."], [693, 3, 2, "", "var_ws_ct", "Constructor."]], "foxes.models.turbine_types.PCtFile.calculate": [[695, 3, 2, "", "algo", "The main model calculation."], [695, 3, 2, "", "fdata", "The main model calculation."], [695, 3, 2, "", "mdata", "The main model calculation."], [695, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.PCtFile.finalize": [[696, 3, 2, "", "algo", "Finalizes the model."], [696, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.turbine_types.PCtFile.load_data": [[697, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [697, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_types.PCtFile.modify_cutin": [[698, 3, 2, "", "a", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [698, 3, 2, "", "b", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [698, 3, 2, "", "iterations", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [698, 3, 2, "", "modify_P", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [698, 3, 2, "", "modify_ct", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [698, 3, 2, "", "steps", "Modify the data such that a discontinuity at cutin wind speed is avoided"]], "foxes.models.turbine_types.PCtFile.output_farm_vars": [[701, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo": [[703, 2, 1, "", "__init__", "Constructor."], [704, 2, 1, "", "__repr__", "Return repr(self)."], [705, 2, 1, "", "calculate", "The main model calculation."], [706, 2, 1, "", "finalize", "Finalizes the model."], [707, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [708, 2, 1, "", "modify_cutin", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [709, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [710, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [711, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.PCtFromTwo.__init__": [[703, 3, 2, "", "col_P", "Constructor."], [703, 3, 2, "", "col_ct", "Constructor."], [703, 3, 2, "", "col_ws_P_file", "Constructor."], [703, 3, 2, "", "col_ws_ct_file", "Constructor."], [703, 3, 2, "", "data_source_P", "Constructor."], [703, 3, 2, "", "data_source_ct", "Constructor."], [703, 3, 2, "", "p_P", "Constructor."], [703, 3, 2, "", "p_ct", "Constructor."], [703, 3, 2, "", "parameters", "Constructor."], [703, 3, 2, "", "pd_file_read_pars_P", "Constructor."], [703, 3, 2, "", "pd_file_read_pars_ct", "Constructor."], [703, 3, 2, "", "rho", "Constructor."], [703, 3, 2, "", "var_ws_P", "Constructor."], [703, 3, 2, "", "var_ws_ct", "Constructor."]], "foxes.models.turbine_types.PCtFromTwo.calculate": [[705, 3, 2, "", "algo", "The main model calculation."], [705, 3, 2, "", "fdata", "The main model calculation."], [705, 3, 2, "", "mdata", "The main model calculation."], [705, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.PCtFromTwo.finalize": [[706, 3, 2, "", "algo", "Finalizes the model."], [706, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.turbine_types.PCtFromTwo.load_data": [[707, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [707, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_types.PCtFromTwo.modify_cutin": [[708, 3, 2, "", "a", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [708, 3, 2, "", "b", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [708, 3, 2, "", "iterations", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [708, 3, 2, "", "modify_P", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [708, 3, 2, "", "modify_ct", "Modify the data such that a discontinuity at cutin wind speed is avoided"], [708, 3, 2, "", "steps", "Modify the data such that a discontinuity at cutin wind speed is avoided"]], "foxes.models.turbine_types.PCtFromTwo.output_farm_vars": [[711, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types.TBLFile": [[713, 2, 1, "", "__init__", "Constructor."]], "foxes.models.turbine_types.TBLFile.__init__": [[713, 3, 2, "", "parameters", "Constructor."], [713, 3, 2, "", "rho", "Constructor."], [713, 3, 2, "", "tbl_file", "Constructor."]], "foxes.models.turbine_types.WsRho2PCtFromTwo": [[715, 2, 1, "", "__init__", "Constructor."], [716, 2, 1, "", "calculate", "The main model calculation."], [717, 2, 1, "", "finalize", "Finalizes the model."], [718, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [719, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [720, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [721, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__": [[715, 3, 2, "", "data_source_P", "Constructor."], [715, 3, 2, "", "data_source_ct", "Constructor."], [715, 3, 2, "", "interpn_pars_P", "Constructor."], [715, 3, 2, "", "interpn_pars_ct", "Constructor."], [715, 3, 2, "", "p_P", "Constructor."], [715, 3, 2, "", "p_ct", "Constructor."], [715, 3, 2, "", "parameters", "Constructor."], [715, 3, 2, "", "pd_file_read_pars_P", "Constructor."], [715, 3, 2, "", "pd_file_read_pars_ct", "Constructor."], [715, 3, 2, "", "var_ws_P", "Constructor."], [715, 3, 2, "", "var_ws_ct", "Constructor."]], "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate": [[716, 3, 2, "", "algo", "The main model calculation."], [716, 3, 2, "", "fdata", "The main model calculation."], [716, 3, 2, "", "mdata", "The main model calculation."], [716, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize": [[717, 3, 2, "", "algo", "Finalizes the model."], [717, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data": [[718, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [718, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars": [[721, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo": [[723, 2, 1, "", "__init__", "Constructor."], [724, 2, 1, "", "__repr__", "Return repr(self)."], [725, 2, 1, "", "calculate", "The main model calculation."], [726, 2, 1, "", "finalize", "Finalizes the model."], [727, 2, 1, "", "load_data", "Load and/or create all model data that is subject to chunking."], [728, 2, 1, "", "needs_rews2", "Returns flag for requiring REWS2 variable"], [729, 2, 1, "", "needs_rews3", "Returns flag for requiring REWS3 variable"], [730, 2, 1, "", "output_farm_vars", "The variables which are being modified by the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__": [[723, 3, 2, "", "data_source_P", "Constructor."], [723, 3, 2, "", "data_source_ct", "Constructor."], [723, 3, 2, "", "interpn_pars_P", "Constructor."], [723, 3, 2, "", "interpn_pars_ct", "Constructor."], [723, 3, 2, "", "p_P", "Constructor."], [723, 3, 2, "", "p_ct", "Constructor."], [723, 3, 2, "", "parameters", "Constructor."], [723, 3, 2, "", "pd_file_read_pars_P", "Constructor."], [723, 3, 2, "", "pd_file_read_pars_ct", "Constructor."], [723, 3, 2, "", "rho", "Constructor."], [723, 3, 2, "", "var_ws_P", "Constructor."], [723, 3, 2, "", "var_ws_ct", "Constructor."]], "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate": [[725, 3, 2, "", "algo", "The main model calculation."], [725, 3, 2, "", "fdata", "The main model calculation."], [725, 3, 2, "", "mdata", "The main model calculation."], [725, 3, 2, "", "st_sel", "The main model calculation."]], "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize": [[726, 3, 2, "", "algo", "Finalizes the model."], [726, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data": [[727, 3, 2, "", "algo", "Load and/or create all model data that is subject to chunking."], [727, 3, 2, "", "verbosity", "Load and/or create all model data that is subject to chunking."]], "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars": [[730, 3, 2, "", "algo", "The variables which are being modified by the model."]], "foxes.models.vertical_profiles": [[731, 0, 1, "", "ABLLogNeutralWsProfile", "The neutral ABL wind speed log profile."], [735, 0, 1, "", "ABLLogStableWsProfile", "The stable ABL wind speed log profile."], [739, 0, 1, "", "ABLLogUnstableWsProfile", "The unstable ABL wind speed log profile."], [743, 0, 1, "", "ABLLogWsProfile", "The neutral/stable/unstable ABL wind speed log profile."], [747, 0, 1, "", "DataProfile", "A profile based on numerical data."], [751, 0, 1, "", "ShearedProfile", "A wind shear profile, based on a shear exponent."], [754, 0, 1, "", "UniformProfile", "A profile with uniform values."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile": [[732, 2, 1, "", "__init__", "Constructor."], [733, 2, 1, "", "calculate", "Run the profile calculation."], [734, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__": [[732, 3, 2, "", "args", "Constructor."], [732, 3, 2, "", "kwargs", "Constructor."], [732, 3, 2, "", "ustar_input", "Constructor."]], "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate": [[733, 3, 2, "", "data", "Run the profile calculation."], [733, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile": [[736, 2, 1, "", "__init__", "Constructor."], [737, 2, 1, "", "calculate", "Run the profile calculation."], [738, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__": [[736, 3, 2, "", "args", "Constructor."], [736, 3, 2, "", "kwargs", "Constructor."], [736, 3, 2, "", "ustar_input", "Constructor."]], "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate": [[737, 3, 2, "", "data", "Run the profile calculation."], [737, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile": [[740, 2, 1, "", "__init__", "Constructor."], [741, 2, 1, "", "calculate", "Run the profile calculation."], [742, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__": [[740, 3, 2, "", "args", "Constructor."], [740, 3, 2, "", "kwargs", "Constructor."], [740, 3, 2, "", "ustar_input", "Constructor."]], "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate": [[741, 3, 2, "", "data", "Run the profile calculation."], [741, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile": [[744, 2, 1, "", "__init__", "Constructor."], [745, 2, 1, "", "calculate", "Run the profile calculation."], [746, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ABLLogWsProfile.__init__": [[744, 3, 2, "", "args", "Constructor."], [744, 3, 2, "", "kwargs", "Constructor."], [744, 3, 2, "", "ustar_input", "Constructor."]], "foxes.models.vertical_profiles.ABLLogWsProfile.calculate": [[745, 3, 2, "", "data", "Run the profile calculation."], [745, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.DataProfile": [[748, 2, 1, "", "__init__", "Constructor"], [749, 2, 1, "", "calculate", "Run the profile calculation."], [750, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.DataProfile.__init__": [[748, 3, 2, "", "col_var", "Constructor"], [748, 3, 2, "", "col_z", "Constructor"], [748, 3, 2, "", "data_source", "Constructor"], [748, 3, 2, "", "interp_pars", "Constructor"], [748, 3, 2, "", "pd_read_pars", "Constructor"], [748, 3, 2, "", "variable", "Constructor"]], "foxes.models.vertical_profiles.DataProfile.calculate": [[749, 3, 2, "", "data", "Run the profile calculation."], [749, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile": [[752, 2, 1, "", "calculate", "Run the profile calculation."], [753, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.ShearedProfile.calculate": [[752, 3, 2, "", "data", "Run the profile calculation."], [752, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile": [[755, 2, 1, "", "__init__", "Constructor"], [756, 2, 1, "", "calculate", "Run the profile calculation."], [757, 2, 1, "", "input_vars", "The input variables needed for the profile calculation."]], "foxes.models.vertical_profiles.UniformProfile.__init__": [[755, 3, 2, "", "variable", "Constructor"]], "foxes.models.vertical_profiles.UniformProfile.calculate": [[756, 3, 2, "", "data", "Run the profile calculation."], [756, 3, 2, "", "heights", "Run the profile calculation."]], "foxes.models.wake_frames": [[758, 0, 1, "", "DynamicWakes", "Dynamic wakes for any kind of timeseries states."], [764, 0, 1, "", "FarmOrder", "Invokes turbine ordering as defined by the wind farm."], [771, 0, 1, "", "RotorWD", "Align the first axis for each rotor with the local normalized wind direction."], [776, 0, 1, "", "SeqDynamicWakes", "Dynamic wakes for the sequential algorithm."], [784, 0, 1, "", "Streamlines2D", "Streamline following wakes"], [791, 0, 1, "", "Timelines", "Dynamic wakes for spatially uniform timeseries states."], [801, 0, 1, "", "YawedWakes", "Bend the wakes for yawed turbines, based on the Bastankhah 2016 wake model"]], "foxes.models.wake_frames.DynamicWakes": [[759, 2, 1, "", "__init__", "Constructor."], [760, 2, 1, "", "__repr__", "Return repr(self)."], [761, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [762, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [763, 2, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.DynamicWakes.__init__": [[759, 3, 2, "", "cl_ipars", "Constructor."], [759, 3, 2, "", "dt_min", "Constructor."], [759, 3, 2, "", "kwargs", "Constructor."], [759, 3, 2, "", "max_age", "Constructor."], [759, 3, 2, "", "max_age_mean_ws", "Constructor."], [759, 3, 2, "", "max_length_km", "Constructor."]], "foxes.models.wake_frames.DynamicWakes.calc_order": [[761, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [761, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [761, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.DynamicWakes.get_wake_coos": [[762, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [762, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [762, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [762, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [762, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.DynamicWakes.initialize": [[763, 3, 2, "", "algo", "Initializes the model."], [763, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_frames.FarmOrder": [[765, 2, 1, "", "__init__", "Constructor."], [766, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [767, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [768, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [769, 2, 1, "", "initialize", "Initializes the model."], [770, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.FarmOrder.__init__": [[765, 3, 2, "", "base_frame", "Constructor."], [765, 3, 2, "", "kwargs", "Constructor."]], "foxes.models.wake_frames.FarmOrder.calc_order": [[766, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [766, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [766, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.FarmOrder.get_centreline_points": [[767, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [767, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [767, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [767, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [767, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.FarmOrder.get_wake_coos": [[768, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [768, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [768, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [768, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [768, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.FarmOrder.initialize": [[769, 3, 2, "", "algo", "Initializes the model."], [769, 3, 2, "", "force", "Initializes the model."], [769, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_frames.RotorWD": [[772, 2, 1, "", "__init__", "Constructor."], [773, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [774, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [775, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.RotorWD.__init__": [[772, 3, 2, "", "kwargs", "Constructor."], [772, 3, 2, "", "var_wd", "Constructor."]], "foxes.models.wake_frames.RotorWD.calc_order": [[773, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [773, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [773, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.RotorWD.get_centreline_points": [[774, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [774, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [774, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [774, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [774, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.RotorWD.get_wake_coos": [[775, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [775, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [775, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [775, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [775, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.SeqDynamicWakes": [[777, 2, 1, "", "__init__", "Constructor."], [778, 2, 1, "", "__repr__", "Return repr(self)."], [779, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [780, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [781, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [782, 2, 1, "", "get_wake_modelling_data", "Return data that is required for computing the wake from source turbines to evaluation points."], [783, 2, 1, "", "initialize", "Initializes the model."]], "foxes.models.wake_frames.SeqDynamicWakes.__init__": [[777, 3, 2, "", "cl_ipars", "Constructor."], [777, 3, 2, "", "dt_min", "Constructor."], [777, 3, 2, "", "kwargs", "Constructor."]], "foxes.models.wake_frames.SeqDynamicWakes.calc_order": [[779, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [779, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [779, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points": [[780, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [780, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [780, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [780, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [780, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos": [[781, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [781, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [781, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [781, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [781, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data": [[782, 3, 2, "", "algo", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "downwind_index", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "fdata", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "states0", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "target", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "tdata", "Return data that is required for computing the wake from source turbines to evaluation points."], [782, 3, 2, "", "variable", "Return data that is required for computing the wake from source turbines to evaluation points."]], "foxes.models.wake_frames.SeqDynamicWakes.initialize": [[783, 3, 2, "", "algo", "Initializes the model."], [783, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_frames.Streamlines2D": [[785, 2, 1, "", "__init__", "Constructor."], [786, 2, 1, "", "__repr__", "Return repr(self)."], [787, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [788, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [789, 2, 1, "", "get_streamline_data", "Gets streamline data, generating it on the fly"], [790, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.Streamlines2D.__init__": [[785, 3, 2, "", "cl_ipars", "Constructor."], [785, 3, 2, "", "kwargs", "Constructor."], [785, 3, 2, "", "max_length_km", "Constructor."], [785, 3, 2, "", "step", "Constructor."]], "foxes.models.wake_frames.Streamlines2D.calc_order": [[787, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [787, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [787, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.Streamlines2D.get_centreline_points": [[788, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [788, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [788, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [788, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [788, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.Streamlines2D.get_streamline_data": [[789, 3, 2, "", "algo", "Gets streamline data, generating it on the fly"], [789, 3, 2, "", "fdata", "Gets streamline data, generating it on the fly"], [789, 3, 2, "", "mdata", "Gets streamline data, generating it on the fly"]], "foxes.models.wake_frames.Streamlines2D.get_wake_coos": [[790, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [790, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [790, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [790, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [790, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.Timelines": [[792, 2, 1, "", "__init__", "Constructor."], [793, 2, 1, "", "__repr__", "Return repr(self)."], [794, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [795, 2, 1, "", "finalize", "Finalizes the model."], [796, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [797, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [798, 2, 1, "", "initialize", "Initializes the model."], [799, 2, 1, "", "set_running", "Sets this model status to running, and moves all large data to stash."], [800, 2, 1, "", "unset_running", "Sets this model status to not running, recovering large data from stash"]], "foxes.models.wake_frames.Timelines.__init__": [[792, 3, 2, "", "cl_ipars", "Constructor."], [792, 3, 2, "", "dt_min", "Constructor."], [792, 3, 2, "", "kwargs", "Constructor."], [792, 3, 2, "", "max_length_km", "Constructor."]], "foxes.models.wake_frames.Timelines.calc_order": [[794, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [794, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [794, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.Timelines.finalize": [[795, 3, 2, "", "algo", "Finalizes the model."], [795, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.wake_frames.Timelines.get_centreline_points": [[796, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [796, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [796, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [796, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [796, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.Timelines.get_wake_coos": [[797, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [797, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [797, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [797, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [797, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.Timelines.initialize": [[798, 3, 2, "", "algo", "Initializes the model."], [798, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_frames.Timelines.set_running": [[799, 3, 2, "", "algo", "Sets this model status to running, and moves all large data to stash."], [799, 3, 2, "", "data_stash", "Sets this model status to running, and moves all large data to stash."], [799, 3, 2, "", "isel", "Sets this model status to running, and moves all large data to stash."], [799, 3, 2, "", "sel", "Sets this model status to running, and moves all large data to stash."], [799, 3, 2, "", "verbosity", "Sets this model status to running, and moves all large data to stash."]], "foxes.models.wake_frames.Timelines.unset_running": [[800, 3, 2, "", "algo", "Sets this model status to not running, recovering large data from stash"], [800, 3, 2, "", "data_stash", "Sets this model status to not running, recovering large data from stash"], [800, 3, 2, "", "isel", "Sets this model status to not running, recovering large data from stash"], [800, 3, 2, "", "sel", "Sets this model status to not running, recovering large data from stash"], [800, 3, 2, "", "verbosity", "Sets this model status to not running, recovering large data from stash"]], "foxes.models.wake_frames.YawedWakes": [[802, 2, 1, "", "__init__", "Constructor."], [803, 2, 1, "", "__repr__", "Return repr(self)."], [804, 2, 1, "", "calc_order", "Calculates the order of turbine evaluation."], [805, 2, 1, "", "get_centreline_points", "Gets the points along the centreline for given values of x."], [806, 2, 1, "", "get_wake_coos", "Calculate wake coordinates of rotor points."], [807, 2, 1, "", "initialize", "Initializes the model."], [808, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_frames.YawedWakes.__init__": [[802, 3, 2, "", "alpha", "Constructor."], [802, 3, 2, "", "base_frame", "Constructor."], [802, 3, 2, "", "beta", "Constructor."], [802, 3, 2, "", "induction", "Constructor."], [802, 3, 2, "", "max_length_km", "Constructor."], [802, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_frames.YawedWakes.calc_order": [[804, 3, 2, "", "algo", "Calculates the order of turbine evaluation."], [804, 3, 2, "", "fdata", "Calculates the order of turbine evaluation."], [804, 3, 2, "", "mdata", "Calculates the order of turbine evaluation."]], "foxes.models.wake_frames.YawedWakes.get_centreline_points": [[805, 3, 2, "", "algo", "Gets the points along the centreline for given values of x."], [805, 3, 2, "", "downwind_index", "Gets the points along the centreline for given values of x."], [805, 3, 2, "", "fdata", "Gets the points along the centreline for given values of x."], [805, 3, 2, "", "mdata", "Gets the points along the centreline for given values of x."], [805, 3, 2, "", "x", "Gets the points along the centreline for given values of x."]], "foxes.models.wake_frames.YawedWakes.get_wake_coos": [[806, 3, 2, "", "algo", "Calculate wake coordinates of rotor points."], [806, 3, 2, "", "downwind_index", "Calculate wake coordinates of rotor points."], [806, 3, 2, "", "fdata", "Calculate wake coordinates of rotor points."], [806, 3, 2, "", "mdata", "Calculate wake coordinates of rotor points."], [806, 3, 2, "", "tdata", "Calculate wake coordinates of rotor points."]], "foxes.models.wake_frames.YawedWakes.initialize": [[807, 3, 2, "", "algo", "Initializes the model."], [807, 3, 2, "", "force", "Initializes the model."], [807, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models": [[809, 0, 1, "", "AxisymmetricWakeModel", "Abstract base class for wake models that depend on (x, r) separately."], [812, 0, 1, "", "DistSlicedWakeModel", "Abstract base class for wake models for which the x-denpendency can be separated from the yz-dependency."], [819, 0, 1, "", "GaussianWakeModel", "Abstract base class for Gaussian wake models."], [822, 0, 1, "", "TopHatWakeModel", "Abstract base class for top-hat wake models."]], "foxes.models.wake_models.AxisymmetricWakeModel": [[810, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."], [811, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."]], "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_r": [[810, 3, 2, "", "algo", "Calculate wake deltas."], [810, 3, 2, "", "downwind_index", "Calculate wake deltas."], [810, 3, 2, "", "fdata", "Calculate wake deltas."], [810, 3, 2, "", "mdata", "Calculate wake deltas."], [810, 3, 2, "", "r", "Calculate wake deltas."], [810, 3, 2, "", "tdata", "Calculate wake deltas."], [810, 3, 2, "", "x", "Calculate wake deltas."]], "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_yz": [[811, 3, 2, "", "algo", "Calculate wake deltas."], [811, 3, 2, "", "downwind_index", "Calculate wake deltas."], [811, 3, 2, "", "fdata", "Calculate wake deltas."], [811, 3, 2, "", "mdata", "Calculate wake deltas."], [811, 3, 2, "", "tdata", "Calculate wake deltas."], [811, 3, 2, "", "x", "Calculate wake deltas."], [811, 3, 2, "", "yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel": [[813, 2, 1, "", "__init__", "Constructor."], [814, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."], [815, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [816, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [817, 2, 1, "", "initialize", "Initializes the model."], [818, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.DistSlicedWakeModel.__init__": [[813, 3, 2, "", "superpositions", "Constructor."]], "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_x_yz": [[814, 3, 2, "", "algo", "Calculate wake deltas."], [814, 3, 2, "", "downwind_index", "Calculate wake deltas."], [814, 3, 2, "", "fdata", "Calculate wake deltas."], [814, 3, 2, "", "mdata", "Calculate wake deltas."], [814, 3, 2, "", "tdata", "Calculate wake deltas."], [814, 3, 2, "", "x", "Calculate wake deltas."], [814, 3, 2, "", "yz", "Calculate wake deltas."]], "foxes.models.wake_models.DistSlicedWakeModel.contribute": [[815, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [815, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas": [[816, 3, 2, "", "algo", "Finalize the wake calculation."], [816, 3, 2, "", "amb_results", "Finalize the wake calculation."], [816, 3, 2, "", "fdata", "Finalize the wake calculation."], [816, 3, 2, "", "mdata", "Finalize the wake calculation."], [816, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.models.wake_models.DistSlicedWakeModel.initialize": [[817, 3, 2, "", "algo", "Initializes the model."], [817, 3, 2, "", "force", "Initializes the model."], [817, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.GaussianWakeModel": [[820, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [821, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."]], "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma": [[820, 3, 2, "", "algo", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [820, 3, 2, "", "downwind_index", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [820, 3, 2, "", "fdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [820, 3, 2, "", "mdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [820, 3, 2, "", "tdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [820, 3, 2, "", "x", "Calculate the amplitude and the sigma, both depend only on x (not on r)."]], "foxes.models.wake_models.GaussianWakeModel.calc_wakes_x_r": [[821, 3, 2, "", "algo", "Calculate wake deltas."], [821, 3, 2, "", "downwind_index", "Calculate wake deltas."], [821, 3, 2, "", "fdata", "Calculate wake deltas."], [821, 3, 2, "", "mdata", "Calculate wake deltas."], [821, 3, 2, "", "r", "Calculate wake deltas."], [821, 3, 2, "", "tdata", "Calculate wake deltas."], [821, 3, 2, "", "x", "Calculate wake deltas."]], "foxes.models.wake_models.TopHatWakeModel": [[823, 2, 1, "", "__init__", "Constructor."], [824, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [825, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [826, 2, 1, "", "calc_wakes_x_r", "Calculate wake deltas."], [827, 2, 1, "", "initialize", "Initializes the model."], [828, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.TopHatWakeModel.__init__": [[823, 3, 2, "", "induction", "Constructor."], [823, 3, 2, "", "superpositions", "Constructor."]], "foxes.models.wake_models.TopHatWakeModel.calc_centreline": [[824, 3, 2, "", "algo", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "ct", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "downwind_index", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "fdata", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "mdata", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "st_sel", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "tdata", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "wake_r", "Calculate centre line results of wake deltas."], [824, 3, 2, "", "x", "Calculate centre line results of wake deltas."]], "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius": [[825, 3, 2, "", "algo", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "ct", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "downwind_index", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "fdata", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "mdata", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "tdata", "Calculate the wake radius, depending on x only (not r)."], [825, 3, 2, "", "x", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.TopHatWakeModel.calc_wakes_x_r": [[826, 3, 2, "", "algo", "Calculate wake deltas."], [826, 3, 2, "", "downwind_index", "Calculate wake deltas."], [826, 3, 2, "", "fdata", "Calculate wake deltas."], [826, 3, 2, "", "mdata", "Calculate wake deltas."], [826, 3, 2, "", "r", "Calculate wake deltas."], [826, 3, 2, "", "tdata", "Calculate wake deltas."], [826, 3, 2, "", "x", "Calculate wake deltas."]], "foxes.models.wake_models.TopHatWakeModel.initialize": [[827, 3, 2, "", "algo", "Initializes the model."], [827, 3, 2, "", "force", "Initializes the model."], [827, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.induction": [[829, 0, 1, "", "RankineHalfBody", "The Rankine half body induction wake model"], [837, 0, 1, "", "Rathmann", "The Rathmann induction wake model"], [845, 0, 1, "", "SelfSimilar", "The self-similar induction wake model from Troldborg and Meyer Forsting"], [853, 0, 1, "", "SelfSimilar2020", "The self-similar 2020 induction wake model from Troldborg and Meyer Forsting"], [854, 0, 1, "", "VortexSheet", "The Vortex Sheet model implemented with a radial dependency"]], "foxes.models.wake_models.induction.RankineHalfBody": [[830, 2, 1, "", "__init__", "Constructor."], [831, 2, 1, "", "__repr__", "Return repr(self)."], [832, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [833, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [834, 2, 1, "", "initialize", "Initializes the model."], [835, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [836, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.RankineHalfBody.__init__": [[830, 3, 2, "", "induction", "Constructor."]], "foxes.models.wake_models.induction.RankineHalfBody.contribute": [[832, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [832, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas": [[833, 3, 2, "", "algo", "Finalize the wake calculation."], [833, 3, 2, "", "amb_results", "Finalize the wake calculation."], [833, 3, 2, "", "fdata", "Finalize the wake calculation."], [833, 3, 2, "", "mdata", "Finalize the wake calculation."], [833, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.models.wake_models.induction.RankineHalfBody.initialize": [[834, 3, 2, "", "algo", "Initializes the model."], [834, 3, 2, "", "force", "Initializes the model."], [834, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.induction.RankineHalfBody.new_wake_deltas": [[835, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [835, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [835, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [835, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_models.induction.Rathmann": [[838, 2, 1, "", "__init__", "Constructor."], [839, 2, 1, "", "__repr__", "Return repr(self)."], [840, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [841, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [842, 2, 1, "", "initialize", "Initializes the model."], [843, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [844, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.Rathmann.__init__": [[838, 3, 2, "", "induction", "Constructor."], [838, 3, 2, "", "pre_rotor_only", "Constructor."], [838, 3, 2, "", "superposition", "Constructor."]], "foxes.models.wake_models.induction.Rathmann.contribute": [[840, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [840, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.wake_models.induction.Rathmann.finalize_wake_deltas": [[841, 3, 2, "", "algo", "Finalize the wake calculation."], [841, 3, 2, "", "amb_results", "Finalize the wake calculation."], [841, 3, 2, "", "fdata", "Finalize the wake calculation."], [841, 3, 2, "", "mdata", "Finalize the wake calculation."], [841, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.models.wake_models.induction.Rathmann.initialize": [[842, 3, 2, "", "algo", "Initializes the model."], [842, 3, 2, "", "force", "Initializes the model."], [842, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.induction.Rathmann.new_wake_deltas": [[843, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [843, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [843, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [843, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_models.induction.SelfSimilar": [[846, 2, 1, "", "__init__", "Constructor."], [847, 2, 1, "", "__repr__", "Return repr(self)."], [848, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [849, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [850, 2, 1, "", "initialize", "Initializes the model."], [851, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [852, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.SelfSimilar.__init__": [[846, 3, 2, "", "gamma", "Constructor."], [846, 3, 2, "", "induction", "Constructor."], [846, 3, 2, "", "pre_rotor_only", "Constructor."], [846, 3, 2, "", "superposition", "Constructor."]], "foxes.models.wake_models.induction.SelfSimilar.contribute": [[848, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [848, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.wake_models.induction.SelfSimilar.finalize_wake_deltas": [[849, 3, 2, "", "algo", "Finalize the wake calculation."], [849, 3, 2, "", "amb_results", "Finalize the wake calculation."], [849, 3, 2, "", "fdata", "Finalize the wake calculation."], [849, 3, 2, "", "mdata", "Finalize the wake calculation."], [849, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.models.wake_models.induction.SelfSimilar.initialize": [[850, 3, 2, "", "algo", "Initializes the model."], [850, 3, 2, "", "force", "Initializes the model."], [850, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.induction.SelfSimilar.new_wake_deltas": [[851, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [851, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [851, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [851, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_models.induction.VortexSheet": [[855, 2, 1, "", "__init__", "Constructor."], [856, 2, 1, "", "__repr__", "Return repr(self)."], [857, 2, 1, "", "contribute", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [858, 2, 1, "", "finalize_wake_deltas", "Finalize the wake calculation."], [859, 2, 1, "", "initialize", "Initializes the model."], [860, 2, 1, "", "new_wake_deltas", "Initialize wake delta storage."], [861, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.induction.VortexSheet.__init__": [[855, 3, 2, "", "induction", "Constructor."], [855, 3, 2, "", "pre_rotor_only", "Constructor."], [855, 3, 2, "", "superposition", "Constructor."]], "foxes.models.wake_models.induction.VortexSheet.contribute": [[857, 3, 2, "", "algo", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "downwind_index", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "fdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "mdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "tdata", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "wake_coos", "Modifies wake deltas at target points by contributions from the specified wake source turbines."], [857, 3, 2, "", "wake_deltas", "Modifies wake deltas at target points by contributions from the specified wake source turbines."]], "foxes.models.wake_models.induction.VortexSheet.finalize_wake_deltas": [[858, 3, 2, "", "algo", "Finalize the wake calculation."], [858, 3, 2, "", "amb_results", "Finalize the wake calculation."], [858, 3, 2, "", "fdata", "Finalize the wake calculation."], [858, 3, 2, "", "mdata", "Finalize the wake calculation."], [858, 3, 2, "", "wake_deltas", "Finalize the wake calculation."]], "foxes.models.wake_models.induction.VortexSheet.initialize": [[859, 3, 2, "", "algo", "Initializes the model."], [859, 3, 2, "", "force", "Initializes the model."], [859, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.induction.VortexSheet.new_wake_deltas": [[860, 3, 2, "", "algo", "Initialize wake delta storage."], [860, 3, 2, "", "fdata", "Initialize wake delta storage."], [860, 3, 2, "", "mdata", "Initialize wake delta storage."], [860, 3, 2, "", "tdata", "Initialize wake delta storage."]], "foxes.models.wake_models.ti": [[862, 0, 1, "", "CrespoHernandezTIWake", "The Crespo and Hernandez TI empirical correlation"], [869, 0, 1, "", "IECTIWake", "The TI wake model from IEC-64100-1-2005-8 (2005):"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake": [[863, 2, 1, "", "__init__", "Constructor."], [864, 2, 1, "", "__repr__", "Return repr(self)."], [865, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [866, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [867, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [868, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__": [[863, 3, 2, "", "a_far", "Constructor."], [863, 3, 2, "", "a_near", "Constructor."], [863, 3, 2, "", "e1", "Constructor."], [863, 3, 2, "", "e2", "Constructor."], [863, 3, 2, "", "e3", "Constructor."], [863, 3, 2, "", "induction", "Constructor."], [863, 3, 2, "", "near_wake_D", "Constructor."], [863, 3, 2, "", "sbeta_factor", "Constructor."], [863, 3, 2, "", "superposition", "Constructor."], [863, 3, 2, "", "use_ambti", "Constructor."], [863, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline": [[865, 3, 2, "", "algo", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "ct", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "downwind_index", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "fdata", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "mdata", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "st_sel", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "tdata", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "wake_r", "Calculate centre line results of wake deltas."], [865, 3, 2, "", "x", "Calculate centre line results of wake deltas."]], "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius": [[866, 3, 2, "", "algo", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "ct", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "downwind_index", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "fdata", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "mdata", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "tdata", "Calculate the wake radius, depending on x only (not r)."], [866, 3, 2, "", "x", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.ti.CrespoHernandezTIWake.new_wake_deltas": [[867, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [867, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [867, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [867, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_models.ti.IECTIWake": [[870, 2, 1, "", "__init__", "Constructor."], [871, 2, 1, "", "__repr__", "Return repr(self)."], [872, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [873, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."], [874, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [875, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.ti.IECTIWake.__init__": [[870, 3, 2, "", "iec_type", "Constructor."], [870, 3, 2, "", "induction", "Constructor."], [870, 3, 2, "", "opening_angle", "Constructor."], [870, 3, 2, "", "superposition", "Constructor."], [870, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.ti.IECTIWake.calc_centreline": [[872, 3, 2, "", "algo", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "ct", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "downwind_index", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "fdata", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "mdata", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "st_sel", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "tdata", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "wake_r", "Calculate centre line results of wake deltas."], [872, 3, 2, "", "x", "Calculate centre line results of wake deltas."]], "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius": [[873, 3, 2, "", "algo", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "ct", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "downwind_index", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "fdata", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "mdata", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "tdata", "Calculate the wake radius, depending on x only (not r)."], [873, 3, 2, "", "x", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.ti.IECTIWake.new_wake_deltas": [[874, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [874, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [874, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [874, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_models.wind": [[876, 0, 1, "", "Bastankhah2014", "The Bastankhah 2014 wake model"], [882, 0, 1, "", "Bastankhah2016", "The Bastankhah 2016 wake model"], [888, 0, 1, "", "Bastankhah2016Model", "Common calculations for the wake model and the wake frame, such that code repetitions can be avoided."], [911, 0, 1, "", "JensenWake", "The Jensen wake model."], [916, 0, 1, "", "TurbOParkWake", "The TurbOPark wake model"], [922, 0, 1, "", "TurbOParkWakeIX", "The generalized TurbOPark wake model, integrating TI over the streamline."]], "foxes.models.wake_models.wind.Bastankhah2014": [[877, 2, 1, "", "__init__", "Constructor."], [878, 2, 1, "", "__repr__", "Return repr(self)."], [879, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [880, 2, 1, "", "initialize", "Initializes the model."], [881, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2014.__init__": [[877, 3, 2, "", "induction", "Constructor."], [877, 3, 2, "", "sbeta_factor", "Constructor."], [877, 3, 2, "", "superposition", "Constructor."], [877, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma": [[879, 3, 2, "", "algo", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [879, 3, 2, "", "downwind_index", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [879, 3, 2, "", "fdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [879, 3, 2, "", "mdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [879, 3, 2, "", "tdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [879, 3, 2, "", "x", "Calculate the amplitude and the sigma, both depend only on x (not on r)."]], "foxes.models.wake_models.wind.Bastankhah2014.initialize": [[880, 3, 2, "", "algo", "Initializes the model."], [880, 3, 2, "", "force", "Initializes the model."], [880, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.wind.Bastankhah2016": [[883, 2, 1, "", "__init__", "Constructor."], [884, 2, 1, "", "__repr__", "Return repr(self)."], [885, 2, 1, "", "calc_wakes_x_yz", "Calculate wake deltas."], [886, 2, 1, "", "initialize", "Initializes the model."], [887, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016.__init__": [[883, 3, 2, "", "alpha", "Constructor."], [883, 3, 2, "", "beta", "Constructor."], [883, 3, 2, "", "induction", "Constructor."], [883, 3, 2, "", "superposition", "Constructor."], [883, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_x_yz": [[885, 3, 2, "", "algo", "Calculate wake deltas."], [885, 3, 2, "", "downwind_index", "Calculate wake deltas."], [885, 3, 2, "", "fdata", "Calculate wake deltas."], [885, 3, 2, "", "mdata", "Calculate wake deltas."], [885, 3, 2, "", "tdata", "Calculate wake deltas."], [885, 3, 2, "", "x", "Calculate wake deltas."], [885, 3, 2, "", "yz", "Calculate wake deltas."]], "foxes.models.wake_models.wind.Bastankhah2016.initialize": [[886, 3, 2, "", "algo", "Initializes the model."], [886, 3, 2, "", "force", "Initializes the model."], [886, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.wind.Bastankhah2016Model": [[889, 1, 1, "", "AMPL_FAR", ""], [890, 1, 1, "", "AMPL_NEAR", ""], [891, 1, 1, "", "CHECK", ""], [892, 1, 1, "", "DELTA_FAR", ""], [893, 1, 1, "", "DELTA_NEAR", ""], [894, 1, 1, "", "MDATA_KEY", ""], [895, 1, 1, "", "NEAR", ""], [896, 1, 1, "", "PARS", ""], [897, 1, 1, "", "R_PC", ""], [898, 1, 1, "", "R_PC_S", ""], [899, 1, 1, "", "SIGMA_Y_FAR", ""], [900, 1, 1, "", "SIGMA_Z_FAR", ""], [901, 1, 1, "", "ST_SEL", ""], [902, 1, 1, "", "X0", ""], [903, 2, 1, "", "__init__", "Constructor."], [904, 2, 1, "", "calc_data", "Calculate common model data, store it in mdata."], [905, 2, 1, "", "clean", "Clean all data"], [906, 2, 1, "", "get_data", "Return data entry"], [907, 2, 1, "", "has_data", "Check if data exists"], [908, 2, 1, "", "initialize", "Initializes the model."], [909, 4, 1, "", "pars", "Dictionary of the model parameters"], [910, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.Bastankhah2016Model.__init__": [[903, 3, 2, "", "alpha", "Constructor."], [903, 3, 2, "", "beta", "Constructor."], [903, 3, 2, "", "induction", "Constructor."]], "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data": [[904, 3, 2, "", "algo", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "downwind_index", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "fdata", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "gamma", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "k", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "mdata", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "tdata", "Calculate common model data, store it in mdata."], [904, 3, 2, "", "x", "Calculate common model data, store it in mdata."]], "foxes.models.wake_models.wind.Bastankhah2016Model.clean": [[905, 3, 2, "", "mdata", "Clean all data"]], "foxes.models.wake_models.wind.Bastankhah2016Model.get_data": [[906, 3, 2, "", "key", "Return data entry"], [906, 3, 2, "", "mdata", "Return data entry"]], "foxes.models.wake_models.wind.Bastankhah2016Model.has_data": [[907, 3, 2, "", "downwind_index", "Check if data exists"], [907, 3, 2, "", "mdata", "Check if data exists"], [907, 3, 2, "", "x", "Check if data exists"]], "foxes.models.wake_models.wind.Bastankhah2016Model.initialize": [[908, 3, 2, "", "algo", "Initializes the model."], [908, 3, 2, "", "force", "Initializes the model."], [908, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.wind.JensenWake": [[912, 2, 1, "", "__init__", "Constructor."], [913, 2, 1, "", "__repr__", "Return repr(self)."], [914, 2, 1, "", "calc_centreline", "Calculate centre line results of wake deltas."], [915, 2, 1, "", "calc_wake_radius", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.wind.JensenWake.__init__": [[912, 3, 2, "", "induction", "Constructor."], [912, 3, 2, "", "superposition", "Constructor."], [912, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.wind.JensenWake.calc_centreline": [[914, 3, 2, "", "algo", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "ct", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "downwind_index", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "fdata", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "mdata", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "st_sel", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "tdata", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "wake_r", "Calculate centre line results of wake deltas."], [914, 3, 2, "", "x", "Calculate centre line results of wake deltas."]], "foxes.models.wake_models.wind.JensenWake.calc_wake_radius": [[915, 3, 2, "", "algo", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "ct", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "downwind_index", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "fdata", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "mdata", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "tdata", "Calculate the wake radius, depending on x only (not r)."], [915, 3, 2, "", "x", "Calculate the wake radius, depending on x only (not r)."]], "foxes.models.wake_models.wind.TurbOParkWake": [[917, 2, 1, "", "__init__", "Constructor."], [918, 2, 1, "", "__repr__", "Return repr(self)."], [919, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [920, 2, 1, "", "initialize", "Initializes the model."], [921, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWake.__init__": [[917, 3, 2, "", "c1", "Constructor."], [917, 3, 2, "", "c2", "Constructor."], [917, 3, 2, "", "induction", "Constructor."], [917, 3, 2, "", "sbeta_factor", "Constructor."], [917, 3, 2, "", "superposition", "Constructor."], [917, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma": [[919, 3, 2, "", "algo", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [919, 3, 2, "", "downwind_index", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [919, 3, 2, "", "fdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [919, 3, 2, "", "mdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [919, 3, 2, "", "tdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [919, 3, 2, "", "x", "Calculate the amplitude and the sigma, both depend only on x (not on r)."]], "foxes.models.wake_models.wind.TurbOParkWake.initialize": [[920, 3, 2, "", "algo", "Initializes the model."], [920, 3, 2, "", "force", "Initializes the model."], [920, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.wind.TurbOParkWakeIX": [[923, 2, 1, "", "__init__", "Constructor."], [924, 2, 1, "", "__repr__", "Return repr(self)."], [925, 2, 1, "", "calc_amplitude_sigma", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [926, 2, 1, "", "finalize", "Finalizes the model."], [927, 2, 1, "", "initialize", "Initializes the model."], [928, 2, 1, "", "new_wake_deltas", "Creates new empty wake delta arrays."], [929, 2, 1, "", "sub_models", "List of all sub-models"]], "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__": [[923, 3, 2, "", "dx", "Constructor."], [923, 3, 2, "", "induction", "Constructor."], [923, 3, 2, "", "ipars", "Constructor."], [923, 3, 2, "", "sbeta_factor", "Constructor."], [923, 3, 2, "", "self_wake", "Constructor."], [923, 3, 2, "", "superposition", "Constructor."], [923, 3, 2, "", "wake_k", "Constructor."]], "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma": [[925, 3, 2, "", "algo", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [925, 3, 2, "", "downwind_index", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [925, 3, 2, "", "fdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [925, 3, 2, "", "mdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [925, 3, 2, "", "tdata", "Calculate the amplitude and the sigma, both depend only on x (not on r)."], [925, 3, 2, "", "x", "Calculate the amplitude and the sigma, both depend only on x (not on r)."]], "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize": [[926, 3, 2, "", "algo", "Finalizes the model."], [926, 3, 2, "", "verbosity", "Finalizes the model."]], "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize": [[927, 3, 2, "", "algo", "Initializes the model."], [927, 3, 2, "", "force", "Initializes the model."], [927, 3, 2, "", "verbosity", "Initializes the model."]], "foxes.models.wake_models.wind.TurbOParkWakeIX.new_wake_deltas": [[928, 3, 2, "", "algo", "Creates new empty wake delta arrays."], [928, 3, 2, "", "fdata", "Creates new empty wake delta arrays."], [928, 3, 2, "", "mdata", "Creates new empty wake delta arrays."], [928, 3, 2, "", "tdata", "Creates new empty wake delta arrays."]], "foxes.models.wake_superpositions": [[930, 0, 1, "", "TILinear", "Linear wake superposition for TI."], [935, 0, 1, "", "TIMax", "Max wake superposition for TI."], [940, 0, 1, "", "TIPow", "Power wake superposition for TI."], [945, 0, 1, "", "TIQuadratic", "Quadratic wake superposition for TI."], [950, 0, 1, "", "WSLinear", "Linear superposition of wind deficit results"], [956, 0, 1, "", "WSLinearLocal", "Local linear superposition of wind deficit results"], [962, 0, 1, "", "WSMax", "Max superposition of wind deficit results"], [968, 0, 1, "", "WSMaxLocal", "Local max superposition of wind deficit results"], [974, 0, 1, "", "WSPow", "Power superposition of wind deficit results"], [980, 0, 1, "", "WSPowLocal", "Local power superposition of wind deficit results"], [986, 0, 1, "", "WSProduct", "Product superposition of wind deficit results"], [992, 0, 1, "", "WSQuadratic", "Quadratic superposition of wind deficit results"], [998, 0, 1, "", "WSQuadraticLocal", "Local quadratic superposition of wind deficit results"]], "foxes.models.wake_superpositions.TILinear": [[931, 2, 1, "", "__init__", "Constructor."], [932, 2, 1, "", "__repr__", "Return repr(self)."], [933, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [934, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TILinear.__init__": [[931, 3, 2, "", "superp_to_amb", "Constructor."]], "foxes.models.wake_superpositions.TILinear.add_wake": [[933, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [933, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta": [[934, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [934, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [934, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [934, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [934, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [934, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIMax": [[936, 2, 1, "", "__init__", "Constructor."], [937, 2, 1, "", "__repr__", "Return repr(self)."], [938, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [939, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIMax.__init__": [[936, 3, 2, "", "superp_to_amb", "Constructor."]], "foxes.models.wake_superpositions.TIMax.add_wake": [[938, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [938, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta": [[939, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [939, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [939, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [939, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [939, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [939, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIPow": [[941, 2, 1, "", "__init__", "Constructor."], [942, 2, 1, "", "__repr__", "Return repr(self)."], [943, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [944, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIPow.__init__": [[941, 3, 2, "", "pow", "Constructor."], [941, 3, 2, "", "superp_to_amb", "Constructor."]], "foxes.models.wake_superpositions.TIPow.add_wake": [[943, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [943, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta": [[944, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [944, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [944, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [944, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [944, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [944, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIQuadratic": [[946, 2, 1, "", "__init__", "Constructor."], [947, 2, 1, "", "__repr__", "Return repr(self)."], [948, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [949, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.TIQuadratic.__init__": [[946, 3, 2, "", "superp_to_amb", "Constructor."]], "foxes.models.wake_superpositions.TIQuadratic.add_wake": [[948, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [948, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta": [[949, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [949, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [949, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [949, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [949, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [949, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSLinear": [[951, 2, 1, "", "__init__", "Constructor."], [952, 2, 1, "", "__repr__", "Return repr(self)."], [953, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [954, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [955, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSLinear.__init__": [[951, 3, 2, "", "lim_high", "Constructor."], [951, 3, 2, "", "lim_low", "Constructor."], [951, 3, 2, "", "scale_amb", "Constructor."]], "foxes.models.wake_superpositions.WSLinear.add_wake": [[953, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [953, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta": [[954, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [954, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [954, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [954, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [954, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [954, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSLinear.input_farm_vars": [[955, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSLinearLocal": [[957, 2, 1, "", "__init__", "Constructor."], [958, 2, 1, "", "__repr__", "Return repr(self)."], [959, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [960, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [961, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSLinearLocal.__init__": [[957, 3, 2, "", "lim_high", "Constructor."], [957, 3, 2, "", "lim_low", "Constructor."]], "foxes.models.wake_superpositions.WSLinearLocal.add_wake": [[959, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [959, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSLinearLocal.calc_final_wake_delta": [[960, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [960, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [960, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [960, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [960, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [960, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSLinearLocal.input_farm_vars": [[961, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax": [[963, 2, 1, "", "__init__", "Constructor."], [964, 2, 1, "", "__repr__", "Return repr(self)."], [965, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [966, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [967, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMax.__init__": [[963, 3, 2, "", "lim_high", "Constructor."], [963, 3, 2, "", "lim_low", "Constructor."], [963, 3, 2, "", "scale_amb", "Constructor."]], "foxes.models.wake_superpositions.WSMax.add_wake": [[965, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [965, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta": [[966, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [966, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [966, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [966, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [966, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [966, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSMax.input_farm_vars": [[967, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMaxLocal": [[969, 2, 1, "", "__init__", "Constructor."], [970, 2, 1, "", "__repr__", "Return repr(self)."], [971, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [972, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [973, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSMaxLocal.__init__": [[969, 3, 2, "", "lim_high", "Constructor."], [969, 3, 2, "", "lim_low", "Constructor."]], "foxes.models.wake_superpositions.WSMaxLocal.add_wake": [[971, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [971, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSMaxLocal.calc_final_wake_delta": [[972, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [972, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [972, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [972, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [972, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [972, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSMaxLocal.input_farm_vars": [[973, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow": [[975, 2, 1, "", "__init__", "Constructor."], [976, 2, 1, "", "__repr__", "Return repr(self)."], [977, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [978, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [979, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPow.__init__": [[975, 3, 2, "", "lim_high", "Constructor."], [975, 3, 2, "", "lim_low", "Constructor."], [975, 3, 2, "", "pow", "Constructor."], [975, 3, 2, "", "scale_amb", "Constructor."]], "foxes.models.wake_superpositions.WSPow.add_wake": [[977, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [977, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta": [[978, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [978, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [978, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [978, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [978, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [978, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSPow.input_farm_vars": [[979, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPowLocal": [[981, 2, 1, "", "__init__", "Constructor."], [982, 2, 1, "", "__repr__", "Return repr(self)."], [983, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [984, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [985, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSPowLocal.__init__": [[981, 3, 2, "", "lim_high", "Constructor."], [981, 3, 2, "", "lim_low", "Constructor."], [981, 3, 2, "", "pow", "Constructor."]], "foxes.models.wake_superpositions.WSPowLocal.add_wake": [[983, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [983, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSPowLocal.calc_final_wake_delta": [[984, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [984, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [984, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [984, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [984, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [984, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSPowLocal.input_farm_vars": [[985, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct": [[987, 2, 1, "", "__init__", "Constructor."], [988, 2, 1, "", "__repr__", "Return repr(self)."], [989, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [990, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [991, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSProduct.__init__": [[987, 3, 2, "", "lim_high", "Constructor."], [987, 3, 2, "", "lim_low", "Constructor."]], "foxes.models.wake_superpositions.WSProduct.add_wake": [[989, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [989, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta": [[990, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [990, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [990, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [990, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [990, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [990, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSProduct.input_farm_vars": [[991, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic": [[993, 2, 1, "", "__init__", "Constructor."], [994, 2, 1, "", "__repr__", "Return repr(self)."], [995, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [996, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [997, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadratic.__init__": [[993, 3, 2, "", "lim_high", "Constructor."], [993, 3, 2, "", "lim_low", "Constructor."], [993, 3, 2, "", "scale_amb", "Constructor."]], "foxes.models.wake_superpositions.WSQuadratic.add_wake": [[995, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [995, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta": [[996, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [996, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [996, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [996, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [996, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [996, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars": [[997, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadraticLocal": [[999, 2, 1, "", "__init__", "Constructor."], [1000, 2, 1, "", "__repr__", "Return repr(self)."], [1001, 2, 1, "", "add_wake", "Add a wake delta to previous wake deltas, at rotor points."], [1002, 2, 1, "", "calc_final_wake_delta", "Calculate the final wake delta after adding all contributions."], [1003, 2, 1, "", "input_farm_vars", "The variables which are needed for running the model."]], "foxes.models.wake_superpositions.WSQuadraticLocal.__init__": [[999, 3, 2, "", "lim_high", "Constructor."], [999, 3, 2, "", "lim_low", "Constructor."]], "foxes.models.wake_superpositions.WSQuadraticLocal.add_wake": [[1001, 3, 2, "", "algo", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "downwind_index", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "fdata", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "mdata", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "st_sel", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "tdata", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "variable", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "wake_delta", "Add a wake delta to previous wake deltas, at rotor points."], [1001, 3, 2, "", "wake_model_result", "Add a wake delta to previous wake deltas, at rotor points."]], "foxes.models.wake_superpositions.WSQuadraticLocal.calc_final_wake_delta": [[1002, 3, 2, "", "algo", "Calculate the final wake delta after adding all contributions."], [1002, 3, 2, "", "amb_results", "Calculate the final wake delta after adding all contributions."], [1002, 3, 2, "", "fdata", "Calculate the final wake delta after adding all contributions."], [1002, 3, 2, "", "mdata", "Calculate the final wake delta after adding all contributions."], [1002, 3, 2, "", "variable", "Calculate the final wake delta after adding all contributions."], [1002, 3, 2, "", "wake_delta", "Calculate the final wake delta after adding all contributions."]], "foxes.models.wake_superpositions.WSQuadraticLocal.input_farm_vars": [[1003, 3, 2, "", "algo", "The variables which are needed for running the model."]], "foxes.output": [[1004, 0, 1, "", "Animator", "Creates an animation from generators that yield lists of artists."], [1009, 0, 1, "", "FarmLayoutOutput", "Plot the farm layout"], [1018, 0, 1, "", "FarmResultsEval", "Evaluates farm results data."], [1038, 0, 1, "", "FlowPlots2D", "Class for horizontal or vertical 2D flow plots"], [1045, 0, 1, "", "Output", "Base class for foxes output."], [1051, 0, 1, "", "PointCalculator", "Computes results at given points"], [1054, 0, 1, "", "ResultsWriter", "Writes results farm data to file."], [1058, 0, 1, "", "RosePlotOutput", "Class for rose plot creation"], [1064, 0, 1, "", "RotorPointPlot", "Visualizes rotor points and their weights."], [1067, 0, 1, "", "SeqFlowAnimationPlugin", "Plugin for creating data for a 2D flow animation during sequential iterations"], [1072, 0, 1, "", "SeqWakeDebugPlugin", "Plugin for creating wake debug plots in animations"], [1077, 0, 1, "", "SliceData", "Create data for horizontal or vertical 2D slices"], [1085, 0, 1, "", "StateTurbineMap", "Creates heat maps with turbines on one axis and states on the other axis."], [1088, 0, 1, "", "StateTurbineTable", "Creates tables of state-turbine type data"], [1091, 0, 1, "", "StatesRosePlotOutput", "Class for rose plot creation directly from states"], [1093, 0, 1, "", "TurbineTypeCurves", "Creates power and ct curves for turbine types, optionally including derating/boost."]], "foxes.output.Animator": [[1005, 2, 1, "", "__init__", "Constructor."], [1006, 2, 1, "", "add_generator", "Add a generator."], [1007, 2, 1, "", "animate", "Create the animation"], [1008, 4, 1, "", "generators", "The artist generators"]], "foxes.output.Animator.__init__": [[1005, 3, 2, "", "fig", "Constructor."]], "foxes.output.Animator.add_generator": [[1006, 3, 2, "", "gen", "Add a generator."]], "foxes.output.Animator.animate": [[1007, 3, 2, "", "kwargs", "Create the animation"], [1007, 3, 2, "", "verbosity", "Create the animation"]], "foxes.output.FarmLayoutOutput": [[1010, 2, 1, "", "__init__", "Constructor."], [1011, 2, 1, "", "get_figure", "Creates farm layout figure."], [1012, 2, 1, "", "get_layout_data", "Returns wind farm layout."], [1013, 2, 1, "", "get_layout_dict", "Returns wind farm layout."], [1014, 2, 1, "", "write_csv", "Writes csv layout file."], [1015, 2, 1, "", "write_json", "Writes xyh layout file."], [1016, 2, 1, "", "write_plot", "Writes the layout plot to file."], [1017, 2, 1, "", "write_xyh", "Writes xyh layout file."]], "foxes.output.FarmLayoutOutput.__init__": [[1010, 3, 2, "", "D", "Constructor."], [1010, 3, 2, "", "farm", "Constructor."], [1010, 3, 2, "", "farm_results", "Constructor."], [1010, 3, 2, "", "from_results", "Constructor."], [1010, 3, 2, "", "kwargs", "Constructor."], [1010, 3, 2, "", "results_state", "Constructor."]], "foxes.output.FarmLayoutOutput.get_figure": [[1011, 3, 2, "", "anno_delx", "Creates farm layout figure."], [1011, 3, 2, "", "anno_dely", "Creates farm layout figure."], [1011, 3, 2, "", "annotate", "Creates farm layout figure."], [1011, 3, 2, "", "ax", "Creates farm layout figure."], [1011, 3, 2, "", "bargs", "Creates farm layout figure."], [1011, 3, 2, "", "color_by", "Creates farm layout figure."], [1011, 3, 2, "", "fig", "Creates farm layout figure."], [1011, 3, 2, "", "figsize", "Creates farm layout figure."], [1011, 3, 2, "", "fontsize", "Creates farm layout figure."], [1011, 3, 2, "", "kwargs", "Creates farm layout figure."], [1011, 3, 2, "", "normalize_D", "Creates farm layout figure."], [1011, 3, 2, "", "ret_im", "Creates farm layout figure."], [1011, 3, 2, "", "title", "Creates farm layout figure."]], "foxes.output.FarmLayoutOutput.write_csv": [[1014, 3, 2, "", "algo", "Writes csv layout file."], [1014, 3, 2, "", "file_name", "Writes csv layout file."], [1014, 3, 2, "", "type_col", "Writes csv layout file."]], "foxes.output.FarmLayoutOutput.write_json": [[1015, 3, 2, "", "file_name", "Writes xyh layout file."]], "foxes.output.FarmLayoutOutput.write_plot": [[1016, 3, 2, "", "file_name", "Writes the layout plot to file."], [1016, 3, 2, "", "fontsize", "Writes the layout plot to file."], [1016, 3, 2, "", "kwargs", "Writes the layout plot to file."]], "foxes.output.FarmLayoutOutput.write_xyh": [[1017, 3, 2, "", "file_path", "Writes xyh layout file."]], "foxes.output.FarmResultsEval": [[1019, 2, 1, "", "__init__", "Constructor."], [1020, 2, 1, "", "add_capacity", "Adds capacity to the farm results"], [1021, 2, 1, "", "add_efficiency", "Adds efficiency to the farm results"], [1022, 2, 1, "", "calc_farm_efficiency", "Calculates farm efficiency"], [1023, 2, 1, "", "calc_farm_mean", "Calculates the mean over states and turbines."], [1024, 2, 1, "", "calc_farm_sum", "Calculates the sum over states and turbines."], [1025, 2, 1, "", "calc_farm_yield", "Calculates yield, P75 and P90 at the farm level"], [1026, 2, 1, "", "calc_mean_farm_power", "Calculates the mean total farm power."], [1027, 2, 1, "", "calc_states_mean", "Calculates the mean wrt states."], [1028, 2, 1, "", "calc_states_std", "Calculates the standard deviation wrt states."], [1029, 2, 1, "", "calc_states_sum", "Calculates the sum wrt states."], [1030, 2, 1, "", "calc_turbine_mean", "Calculates the mean wrt turbines."], [1031, 2, 1, "", "calc_turbine_sum", "Calculates the sum wrt turbines."], [1032, 2, 1, "", "calc_turbine_yield", "Calculates the yield per turbine"], [1033, 2, 1, "", "gen_stdata", "Generates state-turbine data, intended to be used in animations"], [1034, 2, 1, "", "reduce_all", "Reduces states and turbine dimension by some operation"], [1035, 2, 1, "", "reduce_states", "Reduces the states dimension by some operation"], [1036, 2, 1, "", "reduce_turbines", "Reduces the turbine dimension by some operation"], [1037, 2, 1, "", "weinsum", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FarmResultsEval.__init__": [[1019, 3, 2, "", "farm_results", "Constructor."]], "foxes.output.FarmResultsEval.add_capacity": [[1020, 3, 2, "", "P_nom", "Adds capacity to the farm results"], [1020, 3, 2, "", "algo", "Adds capacity to the farm results"], [1020, 3, 2, "", "ambient", "Adds capacity to the farm results"], [1020, 3, 2, "", "verbosity", "Adds capacity to the farm results"]], "foxes.output.FarmResultsEval.add_efficiency": [[1021, 3, 2, "", "verbosity", "Adds efficiency to the farm results"]], "foxes.output.FarmResultsEval.calc_farm_mean": [[1023, 3, 2, "", "vars", "Calculates the mean over states and turbines."]], "foxes.output.FarmResultsEval.calc_farm_sum": [[1024, 3, 2, "", "vars", "Calculates the sum over states and turbines."]], "foxes.output.FarmResultsEval.calc_farm_yield": [[1025, 3, 2, "", "kwargs", "Calculates yield, P75 and P90 at the farm level"], [1025, 3, 2, "", "power_uncert", "Calculates yield, P75 and P90 at the farm level"], [1025, 3, 2, "", "turbine_yield", "Calculates yield, P75 and P90 at the farm level"]], "foxes.output.FarmResultsEval.calc_mean_farm_power": [[1026, 3, 2, "", "ambient", "Calculates the mean total farm power."]], "foxes.output.FarmResultsEval.calc_states_mean": [[1027, 3, 2, "", "vars", "Calculates the mean wrt states."]], "foxes.output.FarmResultsEval.calc_states_std": [[1028, 3, 2, "", "vars", "Calculates the standard deviation wrt states."]], "foxes.output.FarmResultsEval.calc_states_sum": [[1029, 3, 2, "", "vars", "Calculates the sum wrt states."]], "foxes.output.FarmResultsEval.calc_turbine_mean": [[1030, 3, 2, "", "vars", "Calculates the mean wrt turbines."]], "foxes.output.FarmResultsEval.calc_turbine_sum": [[1031, 3, 2, "", "vars", "Calculates the sum wrt turbines."]], "foxes.output.FarmResultsEval.calc_turbine_yield": [[1032, 3, 2, "", "P_unit_W", "Calculates the yield per turbine"], [1032, 3, 2, "", "algo", "Calculates the yield per turbine"], [1032, 3, 2, "", "ambient", "Calculates the yield per turbine"], [1032, 3, 2, "", "annual", "Calculates the yield per turbine"], [1032, 3, 2, "", "delta_t", "Calculates the yield per turbine"], [1032, 3, 2, "", "hours", "Calculates the yield per turbine"]], "foxes.output.FarmResultsEval.gen_stdata": [[1033, 3, 2, "", "animated", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "ax", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "fig", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "figsize", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "legloc", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "ret_im", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "turbines", "Generates state-turbine data, intended to be used in animations"], [1033, 3, 2, "", "variable", "Generates state-turbine data, intended to be used in animations"]], "foxes.output.FarmResultsEval.reduce_all": [[1034, 3, 2, "", "states_op", "Reduces states and turbine dimension by some operation"], [1034, 3, 2, "", "turbines_op", "Reduces states and turbine dimension by some operation"]], "foxes.output.FarmResultsEval.reduce_states": [[1035, 3, 2, "", "vars_op", "Reduces the states dimension by some operation"]], "foxes.output.FarmResultsEval.reduce_turbines": [[1036, 3, 2, "", "vars_op", "Reduces the turbine dimension by some operation"]], "foxes.output.FarmResultsEval.weinsum": [[1037, 3, 2, "", "rhs", "Calculates Einstein sum, adding weights as last argument to the given fields."], [1037, 3, 2, "", "vars", "Calculates Einstein sum, adding weights as last argument to the given fields."]], "foxes.output.FlowPlots2D": [[1039, 2, 1, "", "gen_states_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [1040, 2, 1, "", "gen_states_fig_xz", "Generates 2D farm flow figure in a vertical xz-plane."], [1041, 2, 1, "", "gen_states_fig_yz", "Generates 2D farm flow figure in a vertical yz-plane."], [1042, 2, 1, "", "get_mean_fig_xy", "Generates 2D farm flow figure in a horizontal xy-plane."], [1043, 2, 1, "", "get_mean_fig_xz", "Generates 2D farm flow figure in a horizontal xz-plane."], [1044, 2, 1, "", "get_mean_fig_yz", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.FlowPlots2D.gen_states_fig_xy": [[1039, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "animated", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "ax", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "cmap", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "fig", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "figsize", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "levels", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "precalc", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "rotor_color", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "title", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "var", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "vmax", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "vmin", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "xlabel", "Generates 2D farm flow figure in a horizontal xy-plane."], [1039, 3, 2, "", "ylabel", "Generates 2D farm flow figure in a horizontal xy-plane."]], "foxes.output.FlowPlots2D.gen_states_fig_xz": [[1040, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "animated", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "ax", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "cmap", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "fig", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "figsize", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "levels", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "precalc", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "rotor_color", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "title", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "var", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "vmax", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "vmin", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "x_direction", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "xlabel", "Generates 2D farm flow figure in a vertical xz-plane."], [1040, 3, 2, "", "zlabel", "Generates 2D farm flow figure in a vertical xz-plane."]], "foxes.output.FlowPlots2D.gen_states_fig_yz": [[1041, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "animated", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "ax", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "cmap", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "fig", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "figsize", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "levels", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "precalc", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "rotor_color", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "title", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "var", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "vmax", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "vmin", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "x_direction", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "ylabel", "Generates 2D farm flow figure in a vertical yz-plane."], [1041, 3, 2, "", "zlabel", "Generates 2D farm flow figure in a vertical yz-plane."]], "foxes.output.FlowPlots2D.get_mean_fig_xy": [[1042, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "animated", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "ax", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "cmap", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "fig", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "figsize", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "levels", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "ret_data", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "title", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "var", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "vmax", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "vmin", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "xlabel", "Generates 2D farm flow figure in a horizontal xy-plane."], [1042, 3, 2, "", "ylabel", "Generates 2D farm flow figure in a horizontal xy-plane."]], "foxes.output.FlowPlots2D.get_mean_fig_xz": [[1043, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "animated", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "ax", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "cmap", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "fig", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "figsize", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "levels", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "ret_data", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "title", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "var", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "vmax", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "vmin", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "x_direction", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "xlabel", "Generates 2D farm flow figure in a horizontal xz-plane."], [1043, 3, 2, "", "zlabel", "Generates 2D farm flow figure in a horizontal xz-plane."]], "foxes.output.FlowPlots2D.get_mean_fig_yz": [[1044, 3, 2, "", "add_bar", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "animated", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "ax", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "cmap", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "fig", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "figsize", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "kwargs", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "levels", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "quiver_n", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "quiver_pars", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "ret_data", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "ret_im", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "ret_state", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "title", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "var", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "vlabel", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "vmax", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "vmin", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "x_direction", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "ylabel", "Generates 2D farm flow figure in a horizontal yz-plane."], [1044, 3, 2, "", "zlabel", "Generates 2D farm flow figure in a horizontal yz-plane."]], "foxes.output.Output": [[1046, 2, 1, "", "__init__", "Constructor."], [1047, 2, 1, "", "get_fpath", "Gets the total file path"], [1048, 2, 1, "", "new", "Run-time output model factory."], [1049, 2, 1, "", "print_models", "Prints all model names."], [1050, 2, 1, "", "write", "Writes data to file via pandas."]], "foxes.output.Output.__init__": [[1046, 3, 2, "", "out_dir", "Constructor."], [1046, 3, 2, "", "out_fname_fun", "Constructor."]], "foxes.output.Output.get_fpath": [[1047, 3, 2, "", "fname", "Gets the total file path"]], "foxes.output.Output.new": [[1048, 3, 2, "", "args", "Run-time output model factory."], [1048, 3, 2, "", "kwargs", "Run-time output model factory."], [1048, 3, 2, "", "output_type", "Run-time output model factory."]], "foxes.output.Output.write": [[1050, 3, 2, "", "data", "Writes data to file via pandas."], [1050, 3, 2, "", "file_name", "Writes data to file via pandas."], [1050, 3, 2, "", "format_col2var", "Writes data to file via pandas."], [1050, 3, 2, "", "format_dict", "Writes data to file via pandas."], [1050, 3, 2, "", "kwargs", "Writes data to file via pandas."]], "foxes.output.PointCalculator": [[1052, 2, 1, "", "__init__", "Constructor."], [1053, 2, 1, "", "calculate", "Calculate point results"]], "foxes.output.PointCalculator.__init__": [[1052, 3, 2, "", "algo", "Constructor."], [1052, 3, 2, "", "farm_results", "Constructor."], [1052, 3, 2, "", "kwargs", "Constructor."]], "foxes.output.PointCalculator.calculate": [[1053, 3, 2, "", "args", "Calculate point results"], [1053, 3, 2, "", "kwargs", "Calculate point results"], [1053, 3, 2, "", "points", "Calculate point results"], [1053, 3, 2, "", "states_mean", "Calculate point results"], [1053, 3, 2, "", "to_file", "Calculate point results"], [1053, 3, 2, "", "weight_turbine", "Calculate point results"], [1053, 3, 2, "", "write_pars", "Calculate point results"], [1053, 3, 2, "", "write_vars", "Calculate point results"]], "foxes.output.ResultsWriter": [[1055, 2, 1, "", "__init__", "Constructor."], [1056, 2, 1, "", "write_csv", "Writes a csv file"], [1057, 2, 1, "", "write_nc", "Writes a netCDF file"]], "foxes.output.ResultsWriter.__init__": [[1055, 3, 2, "", "data", "Constructor."], [1055, 3, 2, "", "farm_results", "Constructor."], [1055, 3, 2, "", "kwargs", "Constructor."]], "foxes.output.ResultsWriter.write_csv": [[1056, 3, 2, "", "file_name", "Writes a csv file"], [1056, 3, 2, "", "kwargs", "Writes a csv file"], [1056, 3, 2, "", "state_turbine_table", "Writes a csv file"], [1056, 3, 2, "", "turbine_names", "Writes a csv file"], [1056, 3, 2, "", "variables", "Writes a csv file"], [1056, 3, 2, "", "verbosity", "Writes a csv file"]], "foxes.output.ResultsWriter.write_nc": [[1057, 3, 2, "", "file_name", "Writes a netCDF file"], [1057, 3, 2, "", "kwargs", "Writes a netCDF file"], [1057, 3, 2, "", "turbine_names", "Writes a netCDF file"], [1057, 3, 2, "", "variables", "Writes a netCDF file"], [1057, 3, 2, "", "verbosity", "Writes a netCDF file"]], "foxes.output.RosePlotOutput": [[1059, 2, 1, "", "__init__", "Constructor."], [1060, 2, 1, "", "get_data", "Get pandas DataFrame with wind rose data."], [1061, 2, 1, "", "get_data_info", "Returns default description for a variable."], [1062, 2, 1, "", "get_figure", "Creates figure object"], [1063, 2, 1, "", "write_figure", "Write rose plot to file"]], "foxes.output.RosePlotOutput.__init__": [[1059, 3, 2, "", "kwargs", "Constructor."], [1059, 3, 2, "", "results", "Constructor."]], "foxes.output.RosePlotOutput.get_data": [[1060, 3, 2, "", "point", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "sectors", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "start0", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "turbine", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "var", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "var_bins", "Get pandas DataFrame with wind rose data."], [1060, 3, 2, "", "wd_var", "Get pandas DataFrame with wind rose data."]], "foxes.output.RosePlotOutput.get_data_info": [[1061, 3, 2, "", "dname", "Returns default description for a variable."]], "foxes.output.RosePlotOutput.get_figure": [[1062, 3, 2, "", "design", "Creates figure object"], [1062, 3, 2, "", "fig", "Creates figure object"], [1062, 3, 2, "", "figsize", "Creates figure object"], [1062, 3, 2, "", "kwargs", "Creates figure object"], [1062, 3, 2, "", "legend", "Creates figure object"], [1062, 3, 2, "", "point", "Creates figure object"], [1062, 3, 2, "", "rect", "Creates figure object"], [1062, 3, 2, "", "ret_data", "Creates figure object"], [1062, 3, 2, "", "sectors", "Creates figure object"], [1062, 3, 2, "", "start0", "Creates figure object"], [1062, 3, 2, "", "title", "Creates figure object"], [1062, 3, 2, "", "turbine", "Creates figure object"], [1062, 3, 2, "", "var", "Creates figure object"], [1062, 3, 2, "", "var_bins", "Creates figure object"], [1062, 3, 2, "", "wd_var", "Creates figure object"]], "foxes.output.RosePlotOutput.write_figure": [[1063, 3, 2, "", "file_name", "Write rose plot to file"], [1063, 3, 2, "", "kwargs", "Write rose plot to file"], [1063, 3, 2, "", "ret_data", "Write rose plot to file"], [1063, 3, 2, "", "sectors", "Write rose plot to file"], [1063, 3, 2, "", "var", "Write rose plot to file"], [1063, 3, 2, "", "var_bins", "Write rose plot to file"]], "foxes.output.RotorPointPlot": [[1065, 2, 1, "", "__init__", "Constructor."], [1066, 2, 1, "", "get_point_figure", "Get a scatter plot of the rotor points."]], "foxes.output.RotorPointPlot.__init__": [[1065, 3, 2, "", "algo", "Constructor."], [1065, 3, 2, "", "kwargs", "Constructor."], [1065, 3, 2, "", "rotor_model", "Constructor."]], "foxes.output.RotorPointPlot.get_point_figure": [[1066, 3, 2, "", "ax", "Get a scatter plot of the rotor points."], [1066, 3, 2, "", "fig", "Get a scatter plot of the rotor points."], [1066, 3, 2, "", "figsize", "Get a scatter plot of the rotor points."], [1066, 3, 2, "", "kwargs", "Get a scatter plot of the rotor points."], [1066, 3, 2, "", "title", "Get a scatter plot of the rotor points."]], "foxes.output.SeqFlowAnimationPlugin": [[1068, 2, 1, "", "__init__", "Constructor."], [1069, 2, 1, "", "gen_images", "The plotting axis"], [1070, 2, 1, "", "initialize", "Initialize data based on the intial iterator"], [1071, 2, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SeqFlowAnimationPlugin.__init__": [[1068, 3, 2, "", "orientation", "Constructor."], [1068, 3, 2, "", "pars", "Constructor."]], "foxes.output.SeqFlowAnimationPlugin.gen_images": [[1069, 3, 2, "", "ax", "The plotting axis"]], "foxes.output.SeqFlowAnimationPlugin.initialize": [[1070, 3, 2, "", "algo", "Initialize data based on the intial iterator"]], "foxes.output.SeqFlowAnimationPlugin.update": [[1071, 3, 2, "", "algo", "Updates data based on current iteration"], [1071, 3, 2, "", "fres", "Updates data based on current iteration"], [1071, 3, 2, "", "pres", "Updates data based on current iteration"]], "foxes.output.SeqWakeDebugPlugin": [[1073, 2, 1, "", "__init__", "Constructor."], [1074, 2, 1, "", "gen_images", "The plotting axis"], [1075, 2, 1, "", "initialize", "Initialize data based on the intial iterator"], [1076, 2, 1, "", "update", "Updates data based on current iteration"]], "foxes.output.SeqWakeDebugPlugin.__init__": [[1073, 3, 2, "", "ppars", "Constructor."], [1073, 3, 2, "", "show_p", "Constructor."], [1073, 3, 2, "", "show_v", "Constructor."], [1073, 3, 2, "", "vpars", "Constructor."]], "foxes.output.SeqWakeDebugPlugin.gen_images": [[1074, 3, 2, "", "ax", "The plotting axis"]], "foxes.output.SeqWakeDebugPlugin.initialize": [[1075, 3, 2, "", "algo", "Initialize data based on the intial iterator"]], "foxes.output.SeqWakeDebugPlugin.update": [[1076, 3, 2, "", "algo", "Updates data based on current iteration"], [1076, 3, 2, "", "fres", "Updates data based on current iteration"], [1076, 3, 2, "", "pres", "Updates data based on current iteration"]], "foxes.output.SliceData": [[1078, 2, 1, "", "__init__", "Constructor."], [1079, 2, 1, "", "get_mean_data_xy", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1080, 2, 1, "", "get_mean_data_xz", "Creates mean data of 2D farm flow slices in an xz-plane."], [1081, 2, 1, "", "get_mean_data_yz", "Creates mean data of 2D farm flow slices in a yz-plane."], [1082, 2, 1, "", "get_states_data_xy", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1083, 2, 1, "", "get_states_data_xz", "Creates states data of 2D farm flow slices in an xz-plane."], [1084, 2, 1, "", "get_states_data_yz", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.SliceData.__init__": [[1078, 3, 2, "", "algo", "Constructor."], [1078, 3, 2, "", "farm_results", "Constructor."], [1078, 3, 2, "", "kwargs", "Constructor."], [1078, 3, 2, "", "verbosity_delta", "Constructor."]], "foxes.output.SliceData.get_mean_data_xy": [[1079, 3, 2, "", "data_format", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "kwargs", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "label_map", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "n_img_points", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "normalize_v", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "normalize_x", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "normalize_y", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "normalize_z", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "resolution", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "ret_grid", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "ret_states", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "states_isel", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "states_sel", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "to_file", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "variables", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "verbosity", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "vmax", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "vmin", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "weight_turbine", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "write_pars", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "xmax", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "xmin", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "xspace", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "ymax", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "ymin", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "yspace", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."], [1079, 3, 2, "", "z", "Creates mean data of 2D farm flow slices in a horizontal xy-plane."]], "foxes.output.SliceData.get_mean_data_xz": [[1080, 3, 2, "", "data_format", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "kwargs", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "label_map", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "n_img_points", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "normalize_v", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "normalize_x", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "normalize_y", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "normalize_z", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "resolution", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "ret_grid", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "ret_states", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "states_isel", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "states_sel", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "to_file", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "variables", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "verbosity", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "vmax", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "vmin", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "weight_turbine", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "write_pars", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "x_direction", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "xmax", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "xmin", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "xspace", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "y", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "zmax", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "zmin", "Creates mean data of 2D farm flow slices in an xz-plane."], [1080, 3, 2, "", "zspace", "Creates mean data of 2D farm flow slices in an xz-plane."]], "foxes.output.SliceData.get_mean_data_yz": [[1081, 3, 2, "", "data_format", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "kwargs", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "label_map", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "n_img_points", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "normalize_v", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "normalize_x", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "normalize_y", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "normalize_z", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "resolution", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "ret_grid", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "ret_states", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "states_isel", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "states_sel", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "to_file", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "variables", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "verbosity", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "vmax", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "vmin", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "weight_turbine", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "write_pars", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "x", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "x_direction", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "ymax", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "ymin", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "yspace", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "zmax", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "zmin", "Creates mean data of 2D farm flow slices in a yz-plane."], [1081, 3, 2, "", "zspace", "Creates mean data of 2D farm flow slices in a yz-plane."]], "foxes.output.SliceData.get_states_data_xy": [[1082, 3, 2, "", "data_format", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "kwargs", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "label_map", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "n_img_points", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "normalize_v", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "normalize_x", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "normalize_y", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "normalize_z", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "resolution", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "ret_grid", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "ret_states", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "states_isel", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "states_sel", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "to_file", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "variables", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "verbosity", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "vmax", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "vmin", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "write_pars", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "xmax", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "xmin", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "xspace", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "ymax", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "ymin", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "yspace", "Creates states data of 2D farm flow slices in a horizontal xy-plane."], [1082, 3, 2, "", "z", "Creates states data of 2D farm flow slices in a horizontal xy-plane."]], "foxes.output.SliceData.get_states_data_xz": [[1083, 3, 2, "", "data_format", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "kwargs", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "label_map", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "n_img_points", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "normalize_v", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "normalize_x", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "normalize_y", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "normalize_z", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "resolution", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "ret_grid", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "ret_states", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "states_isel", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "states_sel", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "to_file", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "variables", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "verbosity", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "vmax", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "vmin", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "write_pars", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "x_direction", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "xmax", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "xmin", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "xspace", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "y", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "zmax", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "zmin", "Creates states data of 2D farm flow slices in an xz-plane."], [1083, 3, 2, "", "zspace", "Creates states data of 2D farm flow slices in an xz-plane."]], "foxes.output.SliceData.get_states_data_yz": [[1084, 3, 2, "", "data_format", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "kwargs", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "label_map", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "n_img_points", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "normalize_v", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "normalize_x", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "normalize_y", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "normalize_z", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "resolution", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "ret_grid", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "ret_states", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "states_isel", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "states_sel", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "to_file", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "variables", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "verbosity", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "vmax", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "vmin", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "write_pars", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "x", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "x_direction", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "ymax", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "ymin", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "yspace", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "zmax", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "zmin", "Creates states data of 2D farm flow slices in a yz-plane."], [1084, 3, 2, "", "zspace", "Creates states data of 2D farm flow slices in a yz-plane."]], "foxes.output.StateTurbineMap": [[1086, 2, 1, "", "__init__", "Constructor."], [1087, 2, 1, "", "plot_map", "Plot the heat map for the selected variable."]], "foxes.output.StateTurbineMap.__init__": [[1086, 3, 2, "", "farm_results", "Constructor."], [1086, 3, 2, "", "kwargs", "Constructor."]], "foxes.output.StateTurbineMap.plot_map": [[1087, 3, 2, "", "ax", "Plot the heat map for the selected variable."], [1087, 3, 2, "", "figsize", "Plot the heat map for the selected variable."], [1087, 3, 2, "", "kwargs", "Plot the heat map for the selected variable."], [1087, 3, 2, "", "rotate_xlabels", "Plot the heat map for the selected variable."], [1087, 3, 2, "", "title", "Plot the heat map for the selected variable."], [1087, 3, 2, "", "variable", "Plot the heat map for the selected variable."]], "foxes.output.StateTurbineTable": [[1089, 2, 1, "", "__init__", "Constructor."], [1090, 2, 1, "", "get_dataset", "Creates a dataset object"]], "foxes.output.StateTurbineTable.__init__": [[1089, 3, 2, "", "farm_results", "Constructor."], [1089, 3, 2, "", "kwargs", "Constructor."]], "foxes.output.StateTurbineTable.get_dataset": [[1090, 3, 2, "", "kwargs", "Creates a dataset object"], [1090, 3, 2, "", "name_map", "Creates a dataset object"], [1090, 3, 2, "", "to_file", "Creates a dataset object"], [1090, 3, 2, "", "variables", "Creates a dataset object"]], "foxes.output.StatesRosePlotOutput": [[1092, 2, 1, "", "__init__", "Constructor."]], "foxes.output.StatesRosePlotOutput.__init__": [[1092, 3, 2, "", "kwargs", "Constructor."], [1092, 3, 2, "", "mbook", "Constructor."], [1092, 3, 2, "", "point", "Constructor."], [1092, 3, 2, "", "states", "Constructor."], [1092, 3, 2, "", "ws_var", "Constructor."]], "foxes.output.TurbineTypeCurves": [[1094, 2, 1, "", "__init__", "Constructor."], [1095, 2, 1, "", "plot_curves", "Plot the power or ct curve."]], "foxes.output.TurbineTypeCurves.__init__": [[1094, 3, 2, "", "kwargs", "Constructor."], [1094, 3, 2, "", "mbook", "Constructor."]], "foxes.output.TurbineTypeCurves.plot_curves": [[1095, 3, 2, "", "P_max", "Plot the power or ct curve."], [1095, 3, 2, "", "axs", "Plot the power or ct curve."], [1095, 3, 2, "", "figsize", "Plot the power or ct curve."], [1095, 3, 2, "", "kwargs", "Plot the power or ct curve."], [1095, 3, 2, "", "pmax_args", "Plot the power or ct curve."], [1095, 3, 2, "", "rho", "Plot the power or ct curve."], [1095, 3, 2, "", "ti", "Plot the power or ct curve."], [1095, 3, 2, "", "titles", "Plot the power or ct curve."], [1095, 3, 2, "", "turbine_type", "Plot the power or ct curve."], [1095, 3, 2, "", "variables", "Plot the power or ct curve."], [1095, 3, 2, "", "ws_max", "Plot the power or ct curve."], [1095, 3, 2, "", "ws_min", "Plot the power or ct curve."], [1095, 3, 2, "", "ws_step", "Plot the power or ct curve."], [1095, 3, 2, "", "x_label", "Plot the power or ct curve."], [1095, 3, 2, "", "y_labels", "Plot the power or ct curve."]], "foxes.output.flow_plots_2d": [[1096, 5, 1, "", "get_fig", "Helper function that creates the flow image plot."]], "foxes.output.flow_plots_2d.get_fig": [[1096, 3, 2, "", "add_bar", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "animated", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "ax", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "cmap", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "data", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "fig", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "figsize", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "invert_axis", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "levels", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "quiv", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "ret_im", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "ret_state", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "s", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "show_rotor_dict", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "si", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "title", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "var", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "vlabel", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "vmax", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "vmin", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "x_pos", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "xlabel", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "y_pos", "Helper function that creates the flow image plot."], [1096, 3, 2, "", "ylabel", "Helper function that creates the flow image plot."]], "foxes.utils": [[1097, 0, 1, "", "DataBook", "Container class for file paths, either directly given or as static data within a package."], [1105, 0, 1, "", "Dict", "A slightly enhanced dictionary."], [1111, 0, 1, "", "FDict", "A dictionary with factory support"], [1118, 0, 1, "", "Factory", "Constructs objects from a choice of allowed constructor parameters"], [1127, 0, 1, "", "PandasFileHelper", "This class helps reading and writing data to files via pandas."], [1134, 0, 1, "", "TabWindroseAxes", "A derivate of the wind rose axes that runs on stochastic data (bins with weights) instead of time series data"], [1559, 0, 1, "", "WakeKFactory", "A factory that automatically handles wake_k parameters"], [1573, 5, 1, "", "all_subclasses", "Searches all classes derived from some base class."], [1574, 5, 1, "", "cubic_roots", "Calculate real roots of polynomials of degree 3."], [1575, 5, 1, "", "delta_wd", "Calculates wd_b - wd_a."], [1576, 5, 1, "", "exec_python", "Executes strings that start with the indicator as python commands, returns one value"], [1624, 5, 1, "", "import_module", "Imports a module dynamically."], [1625, 5, 1, "", "load_module", "Imports a module from a file path"], [1626, 5, 1, "", "print_mem", "Prints the memory consumption of a model and its components"], [1627, 5, 1, "", "random_xy_square", "Creates random xy positions within a square, with mean (0, 0)"], [1628, 5, 1, "", "read_shp", "Read a shapefile file"], [1629, 5, 1, "", "read_shp_polygons", "Reads the polygon points from a shp file."], [1630, 5, 1, "", "read_tab_file", "Reads a tab file into a Dataset"], [1631, 5, 1, "", "shp2csv", "Read shapefile file, write csv file"], [1632, 5, 1, "", "shp2geom2d", "Read shapefile into geom2d geometry"], [1633, 5, 1, "", "sqrt_reg", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1636, 5, 1, "", "uv2wd", "Calculate wind direction from wind vectors."], [1637, 5, 1, "", "wd2uv", "Calculate wind vectors from wind directions in degrees."], [1638, 5, 1, "", "wd2wdvec", "Calculate wind direction vectors from wind directions in degrees."], [1639, 5, 1, "", "wdvec2wd", "Calculate wind direction from wind direction vectors."], [1640, 5, 1, "", "write_nc", "Writes a dataset to netCDF file"]], "foxes.utils.DataBook": [[1098, 2, 1, "", "__init__", "Constructor."], [1099, 2, 1, "", "add_data_package", "Add static files from a package location."], [1100, 2, 1, "", "add_data_package_file", "Add a static file from a package location."], [1101, 2, 1, "", "add_file", "Add a file path"], [1102, 2, 1, "", "add_files", "Add file paths"], [1103, 2, 1, "", "get_file_path", "Get path of a file"], [1104, 2, 1, "", "toc", "Get list of contents"]], "foxes.utils.DataBook.__init__": [[1098, 3, 2, "", "data_book", "Constructor."]], "foxes.utils.DataBook.add_data_package": [[1099, 3, 2, "", "context", "Add static files from a package location."], [1099, 3, 2, "", "file_sfx", "Add static files from a package location."], [1099, 3, 2, "", "package", "Add static files from a package location."]], "foxes.utils.DataBook.add_data_package_file": [[1100, 3, 2, "", "context", "Add a static file from a package location."], [1100, 3, 2, "", "file_name", "Add a static file from a package location."], [1100, 3, 2, "", "package", "Add a static file from a package location."]], "foxes.utils.DataBook.add_file": [[1101, 3, 2, "", "context", "Add a file path"], [1101, 3, 2, "", "file_path", "Add a file path"]], "foxes.utils.DataBook.add_files": [[1102, 3, 2, "", "context", "Add file paths"], [1102, 3, 2, "", "file_paths", "Add file paths"]], "foxes.utils.DataBook.get_file_path": [[1103, 3, 2, "", "check_raw", "Get path of a file"], [1103, 3, 2, "", "context", "Get path of a file"], [1103, 3, 2, "", "errors", "Get path of a file"], [1103, 3, 2, "", "file_name", "Get path of a file"]], "foxes.utils.DataBook.toc": [[1104, 3, 2, "", "context", "Get list of contents"]], "foxes.utils.Dict": [[1106, 2, 1, "", "__getitem__", "Return self[key]."], [1107, 2, 1, "", "__init__", "Constructor."], [1108, 2, 1, "", "from_yaml", "Reads a yaml file"], [1109, 2, 1, "", "get_item", "Gets an item, prints readable error if not found"], [1110, 2, 1, "", "pop_item", "Pops an item, prints readable error if not found"]], "foxes.utils.Dict.__getitem__": [[1106, 3, 2, "", "key", "Return self[key]."]], "foxes.utils.Dict.__init__": [[1107, 3, 2, "", "args", "Constructor."], [1107, 3, 2, "", "kwargs", "Constructor."], [1107, 3, 2, "", "name", "Constructor."]], "foxes.utils.Dict.from_yaml": [[1108, 3, 2, "", "verbosity", "Reads a yaml file"], [1108, 3, 2, "", "yml_file", "Reads a yaml file"]], "foxes.utils.Dict.get_item": [[1109, 3, 2, "", "deflt", "Gets an item, prints readable error if not found"], [1109, 3, 2, "", "key", "Gets an item, prints readable error if not found"], [1109, 3, 2, "", "prnt", "Gets an item, prints readable error if not found"]], "foxes.utils.Dict.pop_item": [[1110, 3, 2, "", "deflt", "Pops an item, prints readable error if not found"], [1110, 3, 2, "", "key", "Pops an item, prints readable error if not found"], [1110, 3, 2, "", "prnt", "Pops an item, prints readable error if not found"]], "foxes.utils.FDict": [[1112, 2, 1, "", "__contains__", "True if the dictionary has the specified key, else False."], [1113, 2, 1, "", "__getitem__", "Return self[key]."], [1114, 2, 1, "", "__init__", "Constructor."], [1115, 2, 1, "", "add_factory", "Adds a Factory object."], [1116, 2, 1, "", "add_k_factory", "Adds a WakeKFactory."], [1117, 2, 1, "", "get_item", "Gets an item, prints readable error if not found"]], "foxes.utils.FDict.__contains__": [[1112, 3, 2, "", "key", "True if the dictionary has the specified key, else False."]], "foxes.utils.FDict.__getitem__": [[1113, 3, 2, "", "key", "Return self[key]."]], "foxes.utils.FDict.__init__": [[1114, 3, 2, "", "args", "Constructor."], [1114, 3, 2, "", "kwargs", "Constructor."], [1114, 3, 2, "", "store_created", "Constructor."]], "foxes.utils.FDict.add_factory": [[1115, 3, 2, "", "args", "Adds a Factory object."], [1115, 3, 2, "", "factory", "Adds a Factory object."], [1115, 3, 2, "", "kwargs", "Adds a Factory object."]], "foxes.utils.FDict.add_k_factory": [[1116, 3, 2, "", "args", "Adds a WakeKFactory."], [1116, 3, 2, "", "kwargs", "Adds a WakeKFactory."]], "foxes.utils.FDict.get_item": [[1117, 3, 2, "", "key", "Gets an item, prints readable error if not found"], [1117, 3, 2, "", "prnt", "Gets an item, prints readable error if not found"]], "foxes.utils.Factory": [[1119, 2, 1, "", "__init__", "Constructor."], [1120, 2, 1, "", "__str__", "String representation"], [1121, 2, 1, "", "check_match", "Tests if a name matches the template and constructs parameters"], [1122, 2, 1, "", "construct", "Create an object of the base class."], [1123, 2, 1, "", "get_examples", "Create example names from given values"], [1124, 4, 1, "", "name_prefix", "The beginning of the name template"], [1125, 4, 1, "", "name_suffix", "The ending of the name template"], [1126, 4, 1, "", "variables", "The list of variables"]], "foxes.utils.Factory.__init__": [[1119, 3, 2, "", "args", "Constructor."], [1119, 3, 2, "", "base", "Constructor."], [1119, 3, 2, "", "example_vars", "Constructor."], [1119, 3, 2, "", "hints", "Constructor."], [1119, 3, 2, "", "kwargs", "Constructor."], [1119, 3, 2, "", "name_template", "Constructor."], [1119, 3, 2, "", "options", "Constructor."], [1119, 3, 2, "", "var2arg", "Constructor."]], "foxes.utils.Factory.check_match": [[1121, 3, 2, "", "error", "Tests if a name matches the template and constructs parameters"], [1121, 3, 2, "", "name", "Tests if a name matches the template and constructs parameters"], [1121, 3, 2, "", "ret_pars", "Tests if a name matches the template and constructs parameters"]], "foxes.utils.Factory.construct": [[1122, 3, 2, "", "name", "Create an object of the base class."]], "foxes.utils.Factory.get_examples": [[1123, 3, 2, "", "var_values", "Create example names from given values"]], "foxes.utils.PandasFileHelper": [[1128, 1, 1, "", "DATA_FILE_FORMATS", ""], [1129, 1, 1, "", "DEFAULT_FORMAT_DICT", ""], [1130, 1, 1, "", "DEFAULT_READING_PARAMETERS", ""], [1131, 1, 1, "", "DEFAULT_WRITING_PARAMETERS", ""], [1132, 2, 1, "", "read_file", "Helper for reading data according to file ending."], [1133, 2, 1, "", "write_file", "Helper for writing data according to file ending."]], "foxes.utils.PandasFileHelper.read_file": [[1132, 3, 2, "", "file_path", "Helper for reading data according to file ending."], [1132, 3, 2, "", "kwargs", "Helper for reading data according to file ending."]], "foxes.utils.PandasFileHelper.write_file": [[1133, 3, 2, "", "data", "Helper for writing data according to file ending."], [1133, 3, 2, "", "file_path", "Helper for writing data according to file ending."], [1133, 3, 2, "", "format_dict", "Helper for writing data according to file ending."], [1133, 3, 2, "", "kwargs", "Helper for writing data according to file ending."]], "foxes.utils.TabWindroseAxes": [[1135, 0, 1, "", "ArtistList", "A sublist of Axes children based on their type."], [1143, 0, 1, "", "InvertedPolarTransform", "The inverse of the polar transform, mapping Cartesian coordinate space x and y back to theta and r."], [1178, 0, 1, "", "PolarAffine", "The affine part of the polar projection."], [1199, 0, 1, "", "PolarTransform", "The base polar transform."], [1208, 0, 1, "", "RadialLocator", "Used to locate radius ticks."], [1220, 0, 1, "", "ThetaFormatter", "Used to format the theta tick labels.  Converts the native unit of radians into degrees and adds a degree symbol."], [1230, 0, 1, "", "ThetaLocator", "Used to locate theta ticks."], [1236, 2, 1, "", "__init__", "See Axes base class for args and kwargs documentation"], [1237, 2, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1238, 2, 1, "", "__repr__", "Return repr(self)."], [1239, 2, 1, "", "__str__", "Return str(self)."], [1240, 2, 1, "", "acorr", "Plot the autocorrelation of x."], [1241, 2, 1, "", "add_artist", "Add an .Artist to the Axes; return the artist."], [1242, 2, 1, "", "add_callback", "Add a callback function that will be called whenever one of the .Artist's properties changes."], [1243, 2, 1, "", "add_child_axes", "Add an .AxesBase to the Axes' children; return the child Axes."], [1244, 2, 1, "", "add_collection", "Add a .Collection to the Axes; return the collection."], [1245, 2, 1, "", "add_container", "Add a .Container to the Axes' containers; return the container."], [1246, 2, 1, "", "add_image", "Add an .AxesImage to the Axes; return the image."], [1247, 2, 1, "", "add_line", "Add a .Line2D to the Axes; return the line."], [1248, 2, 1, "", "add_patch", "Add a .Patch to the Axes; return the patch."], [1249, 2, 1, "", "add_table", "Add a .Table to the Axes; return the table."], [1250, 2, 1, "", "angle_spectrum", "Plot the angle spectrum."], [1251, 2, 1, "", "annotate", "Annotate the point xy with text text."], [1252, 2, 1, "", "apply_aspect", "Adjust the Axes for a specified data aspect ratio."], [1253, 2, 1, "", "arrow", "Add an arrow to the Axes."], [1254, 4, 1, "", "artists", ""], [1255, 2, 1, "", "autoscale", "Autoscale the axis view to the data (toggle)."], [1256, 2, 1, "", "autoscale_view", "Autoscale the view limits using the data limits."], [1257, 4, 1, "", "axes", "The ~.axes.Axes instance the artist resides in, or None."], [1258, 2, 1, "", "axhline", "Add a horizontal line across the Axes."], [1259, 2, 1, "", "axhspan", "Add a horizontal span (rectangle) across the Axes."], [1260, 2, 1, "", "axis", "Convenience method to get or set some axis properties."], [1261, 2, 1, "", "axline", "Add an infinitely long straight line."], [1262, 2, 1, "", "axvline", "Add a vertical line across the Axes."], [1263, 2, 1, "", "axvspan", "Add a vertical span (rectangle) across the Axes."], [1264, 2, 1, "", "bar", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1265, 2, 1, "", "bar_label", "Label a bar plot."], [1266, 2, 1, "", "barbs", "Plot a 2D field of wind barbs."], [1267, 2, 1, "", "barh", "Make a horizontal bar plot."], [1268, 2, 1, "", "box", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1269, 2, 1, "", "boxplot", "Draw a box and whisker plot."], [1270, 2, 1, "", "broken_barh", "Plot a horizontal sequence of rectangles."], [1271, 2, 1, "", "bxp", "Draw a box and whisker plot from pre-computed statistics."], [1272, 2, 1, "", "can_pan", "Return whether this Axes supports the pan/zoom button functionality."], [1273, 2, 1, "", "can_zoom", "Return whether this Axes supports the zoom box button functionality."], [1274, 2, 1, "", "cla", "Clear the Axes."], [1275, 2, 1, "", "clabel", "Label a contour plot."], [1276, 2, 1, "", "clear", "Clear the current axes"], [1277, 2, 1, "", "cohere", "Plot the coherence between x and y."], [1278, 4, 1, "", "collections", ""], [1279, 2, 1, "", "contains", "Test whether the artist contains the mouse event."], [1280, 2, 1, "", "contains_point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."], [1281, 2, 1, "", "contour", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1282, 2, 1, "", "contourf", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1283, 2, 1, "", "convert_xunits", "Convert x using the unit type of the xaxis."], [1284, 2, 1, "", "convert_yunits", "Convert y using the unit type of the yaxis."], [1285, 2, 1, "", "csd", "Plot the cross-spectral density."], [1286, 2, 1, "", "drag_pan", "Called when the mouse moves during a pan operation."], [1287, 2, 1, "", "draw", "Draw the Artist (and its children) using the given renderer."], [1288, 2, 1, "", "draw_artist", "Efficiently redraw a single artist."], [1289, 2, 1, "", "ecdf", "Compute and plot the empirical cumulative distribution function of x."], [1290, 2, 1, "", "end_pan", "Called when a pan operation completes (when the mouse button is up.)"], [1291, 2, 1, "", "errorbar", "Plot y versus x as lines and/or markers with attached errorbars."], [1292, 2, 1, "", "eventplot", "Plot identical parallel lines at the given positions."], [1293, 2, 1, "", "fill", "Plot filled polygons."], [1294, 2, 1, "", "fill_between", "Fill the area between two horizontal curves."], [1295, 2, 1, "", "fill_betweenx", "Fill the area between two vertical curves."], [1296, 2, 1, "", "findobj", "Find artist objects."], [1297, 2, 1, "", "format_coord", "Return a format string formatting the x, y coordinates."], [1298, 2, 1, "", "format_cursor_data", "Return a string representation of data."], [1299, 2, 1, "", "format_xdata", "Return x formatted as an x-value."], [1300, 2, 1, "", "format_ydata", "Return y formatted as a y-value."], [1301, 2, 1, "", "from_ax", "Return a WindroseAxes object for the figure fig."], [1302, 2, 1, "", "get_adjustable", "Return whether the Axes will adjust its physical dimension ('box') or its data limits ('datalim') to achieve the desired aspect ratio."], [1303, 2, 1, "", "get_agg_filter", "Return filter function to be used for agg filter."], [1304, 2, 1, "", "get_alpha", "Return the alpha value used for blending - not supported on all backends."], [1305, 2, 1, "", "get_anchor", "Get the anchor location."], [1306, 2, 1, "", "get_animated", "Return whether the artist is animated."], [1307, 2, 1, "", "get_aspect", "Return the aspect ratio of the Axes scaling."], [1308, 2, 1, "", "get_autoscale_on", "Return True if each axis is autoscaled, False otherwise."], [1309, 2, 1, "", "get_autoscalex_on", "Return whether the xaxis is autoscaled."], [1310, 2, 1, "", "get_autoscaley_on", "Return whether the yaxis is autoscaled."], [1311, 2, 1, "", "get_axes_locator", "Return the axes_locator."], [1312, 2, 1, "", "get_axisbelow", "Get whether axis ticks and gridlines are above or below most artists."], [1313, 2, 1, "", "get_box_aspect", "Return the Axes box aspect, i.e. the ratio of height to width."], [1314, 2, 1, "", "get_children", "Return a list of the child .Artists of this .Artist."], [1315, 2, 1, "", "get_clip_box", "Return the clipbox."], [1316, 2, 1, "", "get_clip_on", "Return whether the artist uses clipping."], [1317, 2, 1, "", "get_clip_path", "Return the clip path."], [1318, 2, 1, "", "get_cursor_data", "Return the cursor data for a given event."], [1319, 2, 1, "", "get_data_ratio", "Return the aspect ratio of the data itself.  For a polar plot, this should always be 1.0"], [1320, 2, 1, "", "get_default_bbox_extra_artists", "Return a default list of artists that are used for the bounding box calculation."], [1321, 2, 1, "", "get_facecolor", "Get the facecolor of the Axes."], [1322, 2, 1, "", "get_fc", "Alias for get_facecolor."], [1323, 2, 1, "", "get_figure", "Return the .Figure instance the artist belongs to."], [1324, 2, 1, "", "get_forward_navigation_events", "Get how pan/zoom events are forwarded to Axes below this one."], [1325, 2, 1, "", "get_frame_on", "Get whether the Axes rectangle patch is drawn."], [1326, 2, 1, "", "get_gid", "Return the group id."], [1327, 2, 1, "", "get_gridspec", "Return the .GridSpec associated with the subplot, or None."], [1328, 2, 1, "", "get_images", "Return a list of .AxesImages contained by the Axes."], [1329, 2, 1, "", "get_in_layout", "Return boolean flag, True if artist is included in layout calculations."], [1330, 2, 1, "", "get_label", "Return the label used for this artist in the legend."], [1331, 2, 1, "", "get_legend", "Return the .Legend instance, or None if no legend is defined."], [1332, 2, 1, "", "get_legend_handles_labels", "Return handles and labels for legend"], [1333, 2, 1, "", "get_lines", "Return a list of lines contained by the Axes."], [1334, 2, 1, "", "get_mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1335, 2, 1, "", "get_navigate", "Get whether the Axes responds to navigation commands."], [1336, 2, 1, "", "get_navigate_mode", "Get the navigation toolbar button status: 'PAN', 'ZOOM', or None."], [1337, 2, 1, "", "get_path_effects", ""], [1338, 2, 1, "", "get_picker", "Return the picking behavior of the artist."], [1339, 2, 1, "", "get_position", "Return the position of the Axes within the figure as a .Bbox."], [1340, 2, 1, "", "get_rasterization_zorder", "Return the zorder value below which artists will be rasterized."], [1341, 2, 1, "", "get_rasterized", "Return whether the artist is to be rasterized."], [1342, 2, 1, "", "get_rlabel_position", "The theta position of the radius labels in degrees."], [1343, 2, 1, "", "get_rmax", "Outer radial limit."], [1344, 2, 1, "", "get_rmin", "The inner radial limit."], [1345, 2, 1, "", "get_rorigin", "float"], [1346, 2, 1, "", "get_rsign", ""], [1347, 2, 1, "", "get_shared_x_axes", "Return an immutable view on the shared x-axes Grouper."], [1348, 2, 1, "", "get_shared_y_axes", "Return an immutable view on the shared y-axes Grouper."], [1349, 2, 1, "", "get_sketch_params", "Return the sketch parameters for the artist."], [1350, 2, 1, "", "get_snap", "Return the snap setting."], [1351, 2, 1, "", "get_subplotspec", "Return the .SubplotSpec associated with the subplot, or None."], [1352, 2, 1, "", "get_theta_direction", "Get the direction in which theta increases."], [1353, 2, 1, "", "get_theta_offset", "Get the offset for the location of 0 in radians."], [1354, 2, 1, "", "get_thetamax", "Return the maximum theta limit in degrees."], [1355, 2, 1, "", "get_thetamin", "Get the minimum theta limit in degrees."], [1356, 2, 1, "", "get_tightbbox", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1357, 2, 1, "", "get_title", "Get an Axes title."], [1358, 2, 1, "", "get_transform", "Return the .Transform instance used by this artist."], [1359, 2, 1, "", "get_transformed_clip_path_and_affine", "Return the clip path with the non-affine part of its transformation applied, and the remaining affine part of its transformation."], [1360, 2, 1, "", "get_url", "Return the url."], [1361, 2, 1, "", "get_visible", "Return the visibility."], [1362, 2, 1, "", "get_window_extent", "Return the Axes bounding box in display space."], [1363, 2, 1, "", "get_xaxis", "[Discouraged] Return the XAxis instance."], [1364, 2, 1, "", "get_xaxis_text1_transform", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1365, 2, 1, "", "get_xaxis_text2_transform", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"], [1366, 2, 1, "", "get_xaxis_transform", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."], [1367, 2, 1, "", "get_xbound", "Return the lower and upper x-axis bounds, in increasing order."], [1368, 2, 1, "", "get_xgridlines", "Return the xaxis' grid lines as a list of .Line2Ds."], [1369, 2, 1, "", "get_xlabel", "Get the xlabel text string."], [1370, 2, 1, "", "get_xlim", "Return the x-axis view limits."], [1371, 2, 1, "", "get_xmajorticklabels", "Return the xaxis' major tick labels, as a list of ~.text.Text."], [1372, 2, 1, "", "get_xmargin", "Retrieve autoscaling margin of the x-axis."], [1373, 2, 1, "", "get_xminorticklabels", "Return the xaxis' minor tick labels, as a list of ~.text.Text."], [1374, 2, 1, "", "get_xscale", "Return the xaxis' scale (as a str)."], [1375, 2, 1, "", "get_xticklabels", "Get the xaxis' tick labels."], [1376, 2, 1, "", "get_xticklines", "Return the xaxis' tick lines as a list of .Line2Ds."], [1377, 2, 1, "", "get_xticks", "Return the xaxis' tick locations in data coordinates."], [1378, 2, 1, "", "get_yaxis", "[Discouraged] Return the YAxis instance."], [1379, 2, 1, "", "get_yaxis_text1_transform", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1380, 2, 1, "", "get_yaxis_text2_transform", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"], [1381, 2, 1, "", "get_yaxis_transform", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."], [1382, 2, 1, "", "get_ybound", "Return the lower and upper y-axis bounds, in increasing order."], [1383, 2, 1, "", "get_ygridlines", "Return the yaxis' grid lines as a list of .Line2Ds."], [1384, 2, 1, "", "get_ylabel", "Get the ylabel text string."], [1385, 2, 1, "", "get_ylim", "Return the y-axis view limits."], [1386, 2, 1, "", "get_ymajorticklabels", "Return the yaxis' major tick labels, as a list of ~.text.Text."], [1387, 2, 1, "", "get_ymargin", "Retrieve autoscaling margin of the y-axis."], [1388, 2, 1, "", "get_yminorticklabels", "Return the yaxis' minor tick labels, as a list of ~.text.Text."], [1389, 2, 1, "", "get_yscale", "Return the yaxis' scale (as a str)."], [1390, 2, 1, "", "get_yticklabels", "Get the yaxis' tick labels."], [1391, 2, 1, "", "get_yticklines", "Return the yaxis' tick lines as a list of .Line2Ds."], [1392, 2, 1, "", "get_yticks", "Return the yaxis' tick locations in data coordinates."], [1393, 2, 1, "", "get_zorder", "Return the artist's zorder."], [1394, 2, 1, "", "grid", "Configure the grid lines."], [1395, 2, 1, "", "has_data", "Return whether any artists have been added to the Axes."], [1396, 2, 1, "", "have_units", "Return whether units are set on any axis."], [1397, 2, 1, "", "hexbin", "Make a 2D hexagonal binning plot of points x, y."], [1398, 2, 1, "", "hist", "Compute and plot a histogram."], [1399, 2, 1, "", "hist2d", "Make a 2D histogram plot."], [1400, 2, 1, "", "hlines", "Plot horizontal lines at each y from xmin to xmax."], [1401, 4, 1, "", "images", ""], [1402, 2, 1, "", "imshow", "Display data as an image, i.e., on a 2D regular raster."], [1403, 2, 1, "", "in_axes", "Return whether the given event (in display coords) is in the Axes."], [1404, 2, 1, "", "indicate_inset", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1405, 2, 1, "", "indicate_inset_zoom", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1406, 2, 1, "", "inset_axes", "Add a child inset Axes to this existing Axes."], [1407, 2, 1, "", "invert_xaxis", "Invert the x-axis."], [1408, 2, 1, "", "invert_yaxis", "Invert the y-axis."], [1409, 2, 1, "", "is_transform_set", "Return whether the Artist has an explicitly set transform."], [1410, 2, 1, "", "label_outer", "Only show \"outer\" labels and tick labels."], [1411, 2, 1, "", "legend", "Sets the legend location and her properties."], [1412, 4, 1, "", "lines", ""], [1413, 2, 1, "", "locator_params", "Control behavior of major tick locators."], [1414, 2, 1, "", "loglog", "Make a plot with log scaling on both the x- and y-axis."], [1415, 2, 1, "", "magnitude_spectrum", "Plot the magnitude spectrum."], [1416, 2, 1, "", "margins", "Set or retrieve autoscaling margins."], [1417, 2, 1, "", "matshow", "Plot the values of a 2D matrix or array as color-coded image."], [1418, 2, 1, "", "minorticks_off", "Remove minor ticks from the Axes."], [1419, 2, 1, "", "minorticks_on", "Display minor ticks on the Axes."], [1420, 4, 1, "", "mouseover", "Return whether this artist is queried for custom context information when the mouse cursor moves over it."], [1421, 1, 1, "", "name", ""], [1422, 4, 1, "", "patches", ""], [1423, 2, 1, "", "pchanged", "Call all of the registered callbacks."], [1424, 2, 1, "", "pcolor", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 2, 1, "", "pcolorfast", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 2, 1, "", "pcolormesh", "Create a pseudocolor plot with a non-regular rectangular grid."], [1427, 2, 1, "", "phase_spectrum", "Plot the phase spectrum."], [1428, 2, 1, "", "pick", "Process a pick event."], [1429, 2, 1, "", "pickable", "Return whether the artist is pickable."], [1430, 2, 1, "", "pie", "Plot a pie chart."], [1431, 2, 1, "", "plot", "Plot y versus x as lines and/or markers."], [1432, 2, 1, "", "plot_date", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1433, 2, 1, "", "properties", "Return a dictionary of all the properties of the artist."], [1434, 2, 1, "", "psd", "Plot the power spectral density."], [1435, 2, 1, "", "quiver", "Plot a 2D field of arrows."], [1436, 2, 1, "", "quiverkey", "Add a key to a quiver plot."], [1437, 2, 1, "", "redraw_in_frame", "Efficiently redraw Axes data, but not axis ticks, labels, etc."], [1438, 2, 1, "", "relim", "Recompute the data limits based on current artists."], [1439, 2, 1, "", "remove", "Remove the artist from the figure if possible."], [1440, 2, 1, "", "remove_callback", "Remove a callback based on its observer id."], [1441, 2, 1, "", "reset_position", "Reset the active position to the original position."], [1442, 2, 1, "", "scatter", "A scatter plot of y vs. x with varying marker size and/or color."], [1443, 2, 1, "", "secondary_xaxis", "Add a second x-axis to this ~.axes.Axes."], [1444, 2, 1, "", "secondary_yaxis", "Add a second y-axis to this ~.axes.Axes."], [1445, 2, 1, "", "semilogx", "Make a plot with log scaling on the x-axis."], [1446, 2, 1, "", "semilogy", "Make a plot with log scaling on the y-axis."], [1447, 2, 1, "", "set", "Set multiple properties at once."], [1448, 2, 1, "", "set_adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1449, 2, 1, "", "set_agg_filter", "Set the agg filter."], [1450, 2, 1, "", "set_alpha", "Set the alpha value used for blending - not supported on all backends."], [1451, 2, 1, "", "set_anchor", "Define the anchor location."], [1452, 2, 1, "", "set_animated", "Set whether the artist is intended to be used in an animation."], [1453, 2, 1, "", "set_aspect", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."], [1454, 2, 1, "", "set_autoscale_on", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."], [1455, 2, 1, "", "set_autoscalex_on", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."], [1456, 2, 1, "", "set_autoscaley_on", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."], [1457, 2, 1, "", "set_axes_locator", "Set the Axes locator."], [1458, 2, 1, "", "set_axis_off", "Hide all visual components of the x- and y-axis."], [1459, 2, 1, "", "set_axis_on", "Do not hide all visual components of the x- and y-axis."], [1460, 2, 1, "", "set_axisbelow", "Set whether axis ticks and gridlines are above or below most artists."], [1461, 2, 1, "", "set_box_aspect", "Set the Axes box aspect, i.e. the ratio of height to width."], [1462, 2, 1, "", "set_clip_box", "Set the artist's clip .Bbox."], [1463, 2, 1, "", "set_clip_on", "Set whether the artist uses clipping."], [1464, 2, 1, "", "set_clip_path", "Set the artist's clip path."], [1465, 2, 1, "", "set_facecolor", "Set the facecolor of the Axes."], [1466, 2, 1, "", "set_fc", "Alias for set_facecolor."], [1467, 2, 1, "", "set_figure", "Set the .Figure instance the artist belongs to."], [1468, 2, 1, "", "set_forward_navigation_events", "Set how pan/zoom events are forwarded to Axes below this one."], [1469, 2, 1, "", "set_frame_on", "Set whether the Axes rectangle patch is drawn."], [1470, 2, 1, "", "set_gid", "Set the (group) id for the artist."], [1471, 2, 1, "", "set_in_layout", "Set if artist is to be included in layout calculations, E.g. constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."], [1472, 2, 1, "", "set_label", "Set a label that will be displayed in the legend."], [1473, 2, 1, "", "set_legend", ""], [1474, 2, 1, "", "set_mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."], [1475, 2, 1, "", "set_navigate", "Set whether the Axes responds to navigation toolbar commands."], [1476, 2, 1, "", "set_navigate_mode", "Set the navigation toolbar button status."], [1477, 2, 1, "", "set_path_effects", "Set the path effects."], [1478, 2, 1, "", "set_picker", "Define the picking behavior of the artist."], [1479, 2, 1, "", "set_position", "Set the Axes position."], [1480, 2, 1, "", "set_prop_cycle", "Set the property cycle of the Axes."], [1481, 2, 1, "", "set_radii_angle", "Set the radii labels angle"], [1482, 2, 1, "", "set_rasterization_zorder", "Set the zorder threshold for rasterization for vector graphics output."], [1483, 2, 1, "", "set_rasterized", "Force rasterized (bitmap) drawing for vector graphics output."], [1484, 2, 1, "", "set_rgrids", "Set the radial gridlines on a polar plot."], [1485, 2, 1, "", "set_rlabel_position", "Update the theta position of the radius labels."], [1486, 2, 1, "", "set_rlim", "Set the radial axis view limits."], [1487, 2, 1, "", "set_rmax", "Set the outer radial limit."], [1488, 2, 1, "", "set_rmin", "Set the inner radial limit."], [1489, 2, 1, "", "set_rorigin", "Update the radial origin."], [1490, 2, 1, "", "set_rscale", ""], [1491, 2, 1, "", "set_rticks", ""], [1492, 2, 1, "", "set_sketch_params", "Set the sketch parameters."], [1493, 2, 1, "", "set_snap", "Set the snapping behavior."], [1494, 2, 1, "", "set_subplotspec", "Set the .SubplotSpec. associated with the subplot."], [1495, 2, 1, "", "set_theta_direction", "Set the direction in which theta increases."], [1496, 2, 1, "", "set_theta_offset", "Set the offset for the location of 0 in radians."], [1497, 2, 1, "", "set_theta_zero_location", "Set the location of theta's zero."], [1498, 2, 1, "", "set_thetagrids", "Set the theta gridlines in a polar plot."], [1499, 2, 1, "", "set_thetalim", "Set the minimum and maximum theta values."], [1500, 2, 1, "", "set_thetamax", "Set the maximum theta limit in degrees."], [1501, 2, 1, "", "set_thetamin", "Set the minimum theta limit in degrees."], [1502, 2, 1, "", "set_title", "Set a title for the Axes."], [1503, 2, 1, "", "set_transform", "Set the artist transform."], [1504, 2, 1, "", "set_url", "Set the url for the artist."], [1505, 2, 1, "", "set_visible", "Set the artist's visibility."], [1506, 2, 1, "", "set_xbound", "Set the lower and upper numerical bounds of the x-axis."], [1507, 2, 1, "", "set_xlabel", "Set the label for the x-axis."], [1508, 2, 1, "", "set_xlim", "Set the x-axis view limits."], [1509, 2, 1, "", "set_xmargin", "Set padding of X data limits prior to autoscaling."], [1510, 2, 1, "", "set_xscale", "Set the xaxis' scale."], [1511, 2, 1, "", "set_xticklabels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1512, 2, 1, "", "set_xticks", "Set the xaxis' tick locations and optionally tick labels."], [1513, 2, 1, "", "set_ybound", "Set the lower and upper numerical bounds of the y-axis."], [1514, 2, 1, "", "set_ylabel", "Set the label for the y-axis."], [1515, 2, 1, "", "set_ylim", "Set the y-axis view limits."], [1516, 2, 1, "", "set_ymargin", "Set padding of Y data limits prior to autoscaling."], [1517, 2, 1, "", "set_yscale", "Set the yaxis' scale."], [1518, 2, 1, "", "set_yticklabels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1519, 2, 1, "", "set_yticks", "Set the yaxis' tick locations and optionally tick labels."], [1520, 2, 1, "", "set_zorder", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."], [1521, 2, 1, "", "sharex", "Share the x-axis with other."], [1522, 2, 1, "", "sharey", "Share the y-axis with other."], [1523, 2, 1, "", "specgram", "Plot a spectrogram."], [1524, 2, 1, "", "spy", "Plot the sparsity pattern of a 2D array."], [1525, 2, 1, "", "stackplot", "Draw a stacked area plot or a streamgraph."], [1526, 2, 1, "", "stairs", "Draw a stepwise constant function as a line or a filled plot."], [1527, 4, 1, "", "stale", "Whether the artist is 'stale' and needs to be re-drawn for the output to match the internal state of the artist."], [1528, 2, 1, "", "start_pan", "Called when a pan operation has started."], [1529, 2, 1, "", "stem", "Create a stem plot."], [1530, 2, 1, "", "step", "Make a step plot."], [1531, 4, 1, "", "sticky_edges", "x and y sticky edge lists for autoscaling."], [1532, 2, 1, "", "streamplot", "Draw streamlines of a vector flow."], [1533, 2, 1, "", "table", "Add a table to an ~.axes.Axes."], [1534, 4, 1, "", "tables", ""], [1535, 2, 1, "", "text", "Add text to the Axes."], [1536, 4, 1, "", "texts", ""], [1537, 2, 1, "", "tick_params", "Change the appearance of ticks, tick labels, and gridlines."], [1538, 2, 1, "", "ticklabel_format", "Configure the .ScalarFormatter used by default for linear Axes."], [1539, 2, 1, "", "tricontour", "Draw contour lines on an unstructured triangular grid."], [1540, 2, 1, "", "tricontourf", "Draw contour regions on an unstructured triangular grid."], [1541, 2, 1, "", "tripcolor", "Create a pseudocolor plot of an unstructured triangular grid."], [1542, 2, 1, "", "triplot", "Draw an unstructured triangular grid as lines and/or markers."], [1543, 2, 1, "", "twinx", "Create a twin Axes sharing the xaxis."], [1544, 2, 1, "", "twiny", "Create a twin Axes sharing the yaxis."], [1545, 2, 1, "", "update", "Update this artist's properties from the dict props."], [1546, 2, 1, "", "update_datalim", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1547, 2, 1, "", "update_from", "Copy properties from other to self."], [1548, 4, 1, "", "use_sticky_edges", "When autoscaling, whether to obey all Artist.sticky_edges."], [1549, 4, 1, "", "viewLim", ""], [1550, 2, 1, "", "violin", "Draw a violin plot from pre-computed statistics."], [1551, 2, 1, "", "violinplot", "Make a violin plot."], [1552, 2, 1, "", "vlines", "Plot vertical lines at each x from ymin to ymax."], [1553, 2, 1, "", "xaxis_date", "Set up axis ticks and labels to treat data along the xaxis as dates."], [1554, 2, 1, "", "xaxis_inverted", "Return whether the xaxis is oriented in the \"inverse\" direction."], [1555, 2, 1, "", "xcorr", "Plot the cross correlation between x and y."], [1556, 2, 1, "", "yaxis_date", "Set up axis ticks and labels to treat data along the yaxis as dates."], [1557, 2, 1, "", "yaxis_inverted", "Return whether the yaxis is oriented in the \"inverse\" direction."], [1558, 1, 1, "", "zorder", ""]], "foxes.utils.TabWindroseAxes.ArtistList": [[1136, 2, 1, "", "__class_getitem__", "Represent a PEP 585 generic type"], [1137, 2, 1, "", "__getitem__", ""], [1138, 2, 1, "", "__init__", "The Axes from which this sublist will pull the children Artists."], [1139, 2, 1, "", "__repr__", "Return repr(self)."], [1140, 2, 1, "", "__subclasshook__", "Abstract classes can override this to customize issubclass()."], [1141, 2, 1, "", "count", ""], [1142, 2, 1, "", "index", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.ArtistList.__getitem__": [[1137, 3, 2, "", "key", ""]], "foxes.utils.TabWindroseAxes.ArtistList.__init__": [[1138, 3, 2, "", "axes", "The Axes from which this sublist will pull the children Artists."], [1138, 3, 2, "", "invalid_types", "The Axes from which this sublist will pull the children Artists."], [1138, 3, 2, "", "prop_name", "The Axes from which this sublist will pull the children Artists."], [1138, 3, 2, "", "valid_types", "The Axes from which this sublist will pull the children Artists."]], "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__": [[1140, 3, 2, "", "C", "Abstract classes can override this to customize issubclass()."]], "foxes.utils.TabWindroseAxes.ArtistList.count": [[1141, 3, 2, "", "value", ""]], "foxes.utils.TabWindroseAxes.ArtistList.index": [[1142, 3, 2, "", "start", "Raises ValueError if the value is not present."], [1142, 3, 2, "", "stop", "Raises ValueError if the value is not present."], [1142, 3, 2, "", "value", "Raises ValueError if the value is not present."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform": [[1144, 1, 1, "", "INVALID", ""], [1145, 1, 1, "", "INVALID_AFFINE", ""], [1146, 1, 1, "", "INVALID_NON_AFFINE", ""], [1147, 2, 1, "", "__add__", "Compose two transforms together so that self is followed by other."], [1148, 2, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1149, 2, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1150, 2, 1, "", "__init_subclass__", "This method is called when a class is subclassed."], [1151, 2, 1, "", "__str__", "Return str(self)."], [1152, 2, 1, "", "__sub__", "Compose self with the inverse of other, cancelling identical terms if any:"], [1153, 2, 1, "", "contains_branch", "Return whether the given transform is a sub-tree of this transform."], [1154, 2, 1, "", "contains_branch_seperately", "Return whether the given branch is a sub-tree of this transform on each separate dimension."], [1155, 4, 1, "", "depth", "Return the number of transforms which have been chained together to form this Transform instance."], [1156, 2, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1157, 2, 1, "", "get_affine", "Get the affine part of this transform."], [1158, 2, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1159, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1160, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1161, 2, 1, "", "invalidate", "Invalidate this TransformNode and triggers an invalidation of its ancestors.  Should be called any time the transform changes."], [1162, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1163, 1, 1, "", "is_affine", ""], [1164, 1, 1, "", "is_bbox", ""], [1165, 1, 1, "", "is_separable", "True if this transform is separable in the x- and y- dimensions."], [1166, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1167, 1, 1, "", "pass_through", "If pass_through is True, all ancestors will always be invalidated, even if 'self' is already invalid."], [1168, 2, 1, "", "set_children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."], [1169, 2, 1, "", "transform", "Apply this transformation on the given array of values."], [1170, 2, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1171, 2, 1, "", "transform_angles", "Transform a set of angles anchored at specific locations."], [1172, 2, 1, "", "transform_bbox", "Transform the given bounding box."], [1173, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1174, 2, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1175, 2, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1176, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."], [1177, 2, 1, "", "transform_point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__": [[1147, 3, 2, "", "other", "Compose two transforms together so that self is followed by other."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__": [[1148, 3, 2, "", "args", "Array interface to get at this Transform's affine matrix."], [1148, 3, 2, "", "kwargs", "Array interface to get at this Transform's affine matrix."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__": [[1149, 3, 2, "", "apply_theta_transforms", "Axis associated with this transform. This is used to get the minimum radial limit."], [1149, 3, 2, "", "axis", "Axis associated with this transform. This is used to get the minimum radial limit."], [1149, 3, 2, "", "use_rmin", "Axis associated with this transform. This is used to get the minimum radial limit."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__": [[1152, 3, 2, "", "other", "Compose self with the inverse of other, cancelling identical terms if any:"]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch": [[1153, 3, 2, "", "other", "Return whether the given transform is a sub-tree of this transform."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately": [[1154, 3, 2, "", "other_transform", "Return whether the given branch is a sub-tree of this transform on each separate dimension."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children": [[1168, 3, 2, "", "children", "Set the children of the transform, to let the invalidation system know which transforms can invalidate this transform. Should be called from the constructor of any transforms that depend on other transforms."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform": [[1169, 3, 2, "", "values", "Apply this transformation on the given array of values."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine": [[1170, 3, 2, "", "values", "Apply only the affine part of this transformation on the given array of values."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles": [[1171, 3, 2, "", "angles", "Transform a set of angles anchored at specific locations."], [1171, 3, 2, "", "pts", "Transform a set of angles anchored at specific locations."], [1171, 3, 2, "", "pushoff", "Transform a set of angles anchored at specific locations."], [1171, 3, 2, "", "radians", "Transform a set of angles anchored at specific locations."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox": [[1172, 3, 2, "", "bbox", "Transform the given bounding box."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine": [[1173, 3, 2, "", "values", "Apply only the non-affine part of this transformation."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path": [[1174, 3, 2, "", "path", "Apply the transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine": [[1175, 3, 2, "", "path", "Apply the affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine": [[1176, 3, 2, "", "path", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point": [[1177, 3, 2, "", "point", "Return a transformed point."]], "foxes.utils.TabWindroseAxes.PolarAffine": [[1179, 2, 1, "", "__array__", "Array interface to get at this Transform's affine matrix."], [1180, 2, 1, "", "__eq__", "Return self==value."], [1181, 2, 1, "", "__init__", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1182, 2, 1, "", "__str__", "Return str(self)."], [1183, 2, 1, "", "frozen", "Return a frozen copy of this transform node.  The frozen copy will not be updated when its children change.  Useful for storing a previously known state of a transform where copy.deepcopy() might normally be used."], [1184, 2, 1, "", "get_affine", "Get the affine part of this transform."], [1185, 2, 1, "", "get_matrix", "Get the matrix for the affine part of this transform."], [1186, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1187, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1188, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1189, 1, 1, "", "is_affine", ""], [1190, 4, 1, "", "is_separable", "bool(x) -> bool"], [1191, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1192, 2, 1, "", "to_values", "Return the values of the matrix as an (a, b, c, d, e, f) tuple."], [1193, 2, 1, "", "transform", "Apply this transformation on the given array of values."], [1194, 2, 1, "", "transform_affine", "Apply only the affine part of this transformation on the given array of values."], [1195, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1196, 2, 1, "", "transform_path", "Apply the transform to .Path path, returning a new .Path."], [1197, 2, 1, "", "transform_path_affine", "Apply the affine part of this transform to .Path path, returning a new .Path."], [1198, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarAffine.__array__": [[1179, 3, 2, "", "args", "Array interface to get at this Transform's affine matrix."], [1179, 3, 2, "", "kwargs", "Array interface to get at this Transform's affine matrix."]], "foxes.utils.TabWindroseAxes.PolarAffine.__eq__": [[1180, 3, 2, "", "other", "Return self==value."]], "foxes.utils.TabWindroseAxes.PolarAffine.__init__": [[1181, 3, 2, "", "limits", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."], [1181, 3, 2, "", "scale_transform", "Scaling transform for the data. This is used to remove any scaling from the radial view limits."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform": [[1193, 3, 2, "", "values", "Apply this transformation on the given array of values."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine": [[1194, 3, 2, "", "values", "Apply only the affine part of this transformation on the given array of values."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine": [[1195, 3, 2, "", "values", "Apply only the non-affine part of this transformation."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform_path": [[1196, 3, 2, "", "path", "Apply the transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine": [[1197, 3, 2, "", "path", "Apply the affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine": [[1198, 3, 2, "", "path", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform": [[1200, 2, 1, "", "__init__", "Axis associated with this transform. This is used to get the minimum radial limit."], [1201, 2, 1, "", "__str__", "Return str(self)."], [1202, 1, 1, "", "has_inverse", "True if this transform has a corresponding inverse transform."], [1203, 1, 1, "", "input_dims", "The number of input dimensions of this transform. Must be overridden (with integers) in the subclass."], [1204, 2, 1, "", "inverted", "Return the corresponding inverse transformation."], [1205, 1, 1, "", "output_dims", "The number of output dimensions of this transform. Must be overridden (with integers) in the subclass."], [1206, 2, 1, "", "transform_non_affine", "Apply only the non-affine part of this transformation."], [1207, 2, 1, "", "transform_path_non_affine", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.PolarTransform.__init__": [[1200, 3, 2, "", "apply_theta_transforms", "Axis associated with this transform. This is used to get the minimum radial limit."], [1200, 3, 2, "", "axis", "Axis associated with this transform. This is used to get the minimum radial limit."], [1200, 3, 2, "", "scale_transform", "Axis associated with this transform. This is used to get the minimum radial limit."], [1200, 3, 2, "", "use_rmin", "Axis associated with this transform. This is used to get the minimum radial limit."]], "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine": [[1206, 3, 2, "", "values", "Apply only the non-affine part of this transformation."]], "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine": [[1207, 3, 2, "", "path", "Apply the non-affine part of this transform to .Path path, returning a new .Path."]], "foxes.utils.TabWindroseAxes.RadialLocator": [[1209, 1, 1, "", "MAXTICKS", ""], [1210, 2, 1, "", "__call__", "Return the locations of the ticks."], [1211, 2, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1212, 1, 1, "", "axis", ""], [1213, 2, 1, "", "create_dummy_axis", ""], [1214, 2, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1215, 2, 1, "", "raise_if_exceeds", "Log at WARNING level if locs is longer than Locator.MAXTICKS."], [1216, 2, 1, "", "set_axis", ""], [1217, 2, 1, "", "set_params", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."], [1218, 2, 1, "", "tick_values", "Return the values of the located ticks given vmin and vmax."], [1219, 2, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.RadialLocator.__init__": [[1211, 3, 2, "", "axes", "Initialize self.  See help(type(self)) for accurate signature."], [1211, 3, 2, "", "base", "Initialize self.  See help(type(self)) for accurate signature."]], "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis": [[1213, 3, 2, "", "kwargs", ""]], "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular": [[1214, 3, 2, "", "vmax", "Adjust a range as needed to avoid singularities."], [1214, 3, 2, "", "vmin", "Adjust a range as needed to avoid singularities."]], "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds": [[1215, 3, 2, "", "locs", "Log at WARNING level if locs is longer than Locator.MAXTICKS."]], "foxes.utils.TabWindroseAxes.RadialLocator.set_axis": [[1216, 3, 2, "", "axis", ""]], "foxes.utils.TabWindroseAxes.RadialLocator.set_params": [[1217, 3, 2, "", "kwargs", "Do nothing, and raise a warning. Any locator class not supporting the set_params() function will call this."]], "foxes.utils.TabWindroseAxes.RadialLocator.tick_values": [[1218, 3, 2, "", "vmax", "Return the values of the located ticks given vmin and vmax."], [1218, 3, 2, "", "vmin", "Return the values of the located ticks given vmin and vmax."]], "foxes.utils.TabWindroseAxes.RadialLocator.view_limits": [[1219, 3, 2, "", "vmax", "Select a scale for the range from vmin to vmax."], [1219, 3, 2, "", "vmin", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaFormatter": [[1221, 2, 1, "", "__call__", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1222, 2, 1, "", "fix_minus", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."], [1223, 2, 1, "", "format_data", "Return the full string representation of the value with the position unspecified."], [1224, 2, 1, "", "format_data_short", "Return a short string version of the tick value."], [1225, 2, 1, "", "format_ticks", "Return the tick labels for all the ticks at once."], [1226, 2, 1, "", "get_offset", ""], [1227, 1, 1, "", "locs", ""], [1228, 2, 1, "", "set_axis", ""], [1229, 2, 1, "", "set_locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__": [[1221, 3, 2, "", "pos", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."], [1221, 3, 2, "", "x", "Return the format for tick value x at position pos. pos=None indicates an unspecified location."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus": [[1222, 3, 2, "", "s", "Some classes may want to replace a hyphen for minus with the proper Unicode symbol (U+2212) for typographical correctness.  This is a helper method to perform such a replacement when it is enabled via :rc:`axes.unicode_minus`."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data": [[1223, 3, 2, "", "value", "Return the full string representation of the value with the position unspecified."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short": [[1224, 3, 2, "", "value", "Return a short string version of the tick value."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks": [[1225, 3, 2, "", "values", "Return the tick labels for all the ticks at once."]], "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis": [[1228, 3, 2, "", "axis", ""]], "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs": [[1229, 3, 2, "", "locs", "Set the locations of the ticks."]], "foxes.utils.TabWindroseAxes.ThetaLocator": [[1231, 2, 1, "", "__call__", "Return the locations of the ticks."], [1232, 2, 1, "", "__init__", "Initialize self.  See help(type(self)) for accurate signature."], [1233, 2, 1, "", "nonsingular", "Adjust a range as needed to avoid singularities."], [1234, 2, 1, "", "set_axis", ""], [1235, 2, 1, "", "view_limits", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.ThetaLocator.__init__": [[1232, 3, 2, "", "base", "Initialize self.  See help(type(self)) for accurate signature."]], "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular": [[1233, 3, 2, "", "v0", "Adjust a range as needed to avoid singularities."], [1233, 3, 2, "", "v1", "Adjust a range as needed to avoid singularities."]], "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis": [[1234, 3, 2, "", "axis", ""]], "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits": [[1235, 3, 2, "", "vmax", "Select a scale for the range from vmin to vmax."], [1235, 3, 2, "", "vmin", "Select a scale for the range from vmin to vmax."]], "foxes.utils.TabWindroseAxes.__init__": [[1236, 3, 2, "", "args", "See Axes base class for args and kwargs documentation"], [1236, 3, 2, "", "kwargs", "See Axes base class for args and kwargs documentation"]], "foxes.utils.TabWindroseAxes.__init_subclass__": [[1237, 3, 2, "", "kwargs", "This method is called when a class is subclassed."]], "foxes.utils.TabWindroseAxes.acorr": [[1240, 3, 2, "", "data", "Plot the autocorrelation of x."], [1240, 3, 2, "", "kwargs", "Plot the autocorrelation of x."], [1240, 3, 2, "", "x", "Plot the autocorrelation of x."]], "foxes.utils.TabWindroseAxes.add_artist": [[1241, 3, 2, "", "a", "Add an .Artist to the Axes; return the artist."]], "foxes.utils.TabWindroseAxes.add_callback": [[1242, 3, 2, "", "func", "Add a callback function that will be called whenever one of the .Artist's properties changes."]], "foxes.utils.TabWindroseAxes.add_child_axes": [[1243, 3, 2, "", "ax", "Add an .AxesBase to the Axes' children; return the child Axes."]], "foxes.utils.TabWindroseAxes.add_collection": [[1244, 3, 2, "", "autolim", "Add a .Collection to the Axes; return the collection."], [1244, 3, 2, "", "collection", "Add a .Collection to the Axes; return the collection."]], "foxes.utils.TabWindroseAxes.add_container": [[1245, 3, 2, "", "container", "Add a .Container to the Axes' containers; return the container."]], "foxes.utils.TabWindroseAxes.add_image": [[1246, 3, 2, "", "image", "Add an .AxesImage to the Axes; return the image."]], "foxes.utils.TabWindroseAxes.add_line": [[1247, 3, 2, "", "line", "Add a .Line2D to the Axes; return the line."]], "foxes.utils.TabWindroseAxes.add_patch": [[1248, 3, 2, "", "p", "Add a .Patch to the Axes; return the patch."]], "foxes.utils.TabWindroseAxes.add_table": [[1249, 3, 2, "", "tab", "Add a .Table to the Axes; return the table."]], "foxes.utils.TabWindroseAxes.angle_spectrum": [[1250, 3, 2, "", "Fc", "Plot the angle spectrum."], [1250, 3, 2, "", "Fs", "Plot the angle spectrum."], [1250, 3, 2, "", "data", "Plot the angle spectrum."], [1250, 3, 2, "", "kwargs", "Plot the angle spectrum."], [1250, 3, 2, "", "pad_to", "Plot the angle spectrum."], [1250, 3, 2, "", "sides", "Plot the angle spectrum."], [1250, 3, 2, "", "window", "Plot the angle spectrum."], [1250, 3, 2, "", "x", "Plot the angle spectrum."]], "foxes.utils.TabWindroseAxes.annotate": [[1251, 3, 2, "", "annotation_clip", "Annotate the point xy with text text."], [1251, 3, 2, "", "arrowprops", "Annotate the point xy with text text."], [1251, 3, 2, "", "kwargs", "Annotate the point xy with text text."], [1251, 3, 2, "", "text", "Annotate the point xy with text text."], [1251, 3, 2, "", "textcoords", "Annotate the point xy with text text."], [1251, 3, 2, "", "xy", "Annotate the point xy with text text."], [1251, 3, 2, "", "xycoords", "Annotate the point xy with text text."], [1251, 3, 2, "", "xytext", "Annotate the point xy with text text."]], "foxes.utils.TabWindroseAxes.apply_aspect": [[1252, 3, 2, "", "position", "Adjust the Axes for a specified data aspect ratio."]], "foxes.utils.TabWindroseAxes.arrow": [[1253, 3, 2, "", "dx", "Add an arrow to the Axes."], [1253, 3, 2, "", "dy", "Add an arrow to the Axes."], [1253, 3, 2, "", "kwargs", "Add an arrow to the Axes."], [1253, 3, 2, "", "x", "Add an arrow to the Axes."], [1253, 3, 2, "", "y", "Add an arrow to the Axes."]], "foxes.utils.TabWindroseAxes.autoscale": [[1255, 3, 2, "", "axis", "Autoscale the axis view to the data (toggle)."], [1255, 3, 2, "", "enable", "Autoscale the axis view to the data (toggle)."], [1255, 3, 2, "", "tight", "Autoscale the axis view to the data (toggle)."]], "foxes.utils.TabWindroseAxes.autoscale_view": [[1256, 3, 2, "", "scalex", "Autoscale the view limits using the data limits."], [1256, 3, 2, "", "scaley", "Autoscale the view limits using the data limits."], [1256, 3, 2, "", "tight", "Autoscale the view limits using the data limits."]], "foxes.utils.TabWindroseAxes.axhline": [[1258, 3, 2, "", "kwargs", "Add a horizontal line across the Axes."], [1258, 3, 2, "", "xmax", "Add a horizontal line across the Axes."], [1258, 3, 2, "", "xmin", "Add a horizontal line across the Axes."], [1258, 3, 2, "", "y", "Add a horizontal line across the Axes."]], "foxes.utils.TabWindroseAxes.axhspan": [[1259, 3, 2, "", "kwargs", "Add a horizontal span (rectangle) across the Axes."], [1259, 3, 2, "", "xmax", "Add a horizontal span (rectangle) across the Axes."], [1259, 3, 2, "", "xmin", "Add a horizontal span (rectangle) across the Axes."], [1259, 3, 2, "", "ymax", "Add a horizontal span (rectangle) across the Axes."], [1259, 3, 2, "", "ymin", "Add a horizontal span (rectangle) across the Axes."]], "foxes.utils.TabWindroseAxes.axis": [[1260, 3, 2, "", "arg", "Convenience method to get or set some axis properties."], [1260, 3, 2, "", "emit", "Convenience method to get or set some axis properties."], [1260, 3, 2, "", "kwargs", "Convenience method to get or set some axis properties."]], "foxes.utils.TabWindroseAxes.axline": [[1261, 3, 2, "", "kwargs", "Add an infinitely long straight line."], [1261, 3, 2, "", "slope", "Add an infinitely long straight line."], [1261, 3, 2, "", "xy1", "Add an infinitely long straight line."], [1261, 3, 2, "", "xy2", "Add an infinitely long straight line."]], "foxes.utils.TabWindroseAxes.axvline": [[1262, 3, 2, "", "kwargs", "Add a vertical line across the Axes."], [1262, 3, 2, "", "x", "Add a vertical line across the Axes."], [1262, 3, 2, "", "ymax", "Add a vertical line across the Axes."], [1262, 3, 2, "", "ymin", "Add a vertical line across the Axes."]], "foxes.utils.TabWindroseAxes.axvspan": [[1263, 3, 2, "", "kwargs", "Add a vertical span (rectangle) across the Axes."], [1263, 3, 2, "", "xmax", "Add a vertical span (rectangle) across the Axes."], [1263, 3, 2, "", "xmin", "Add a vertical span (rectangle) across the Axes."], [1263, 3, 2, "", "ymax", "Add a vertical span (rectangle) across the Axes."], [1263, 3, 2, "", "ymin", "Add a vertical span (rectangle) across the Axes."]], "foxes.utils.TabWindroseAxes.bar": [[1264, 3, 2, "", "direction", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1264, 3, 2, "", "kwargs", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."], [1264, 3, 2, "", "var", "Plot a windrose in bar mode. For each var bins and for each sector, a colored bar will be draw on the axes."]], "foxes.utils.TabWindroseAxes.bar_label": [[1265, 3, 2, "", "container", "Label a bar plot."], [1265, 3, 2, "", "fmt", "Label a bar plot."], [1265, 3, 2, "", "kwargs", "Label a bar plot."], [1265, 3, 2, "", "label_type", "Label a bar plot."], [1265, 3, 2, "", "labels", "Label a bar plot."], [1265, 3, 2, "", "padding", "Label a bar plot."]], "foxes.utils.TabWindroseAxes.barbs": [[1266, 3, 2, "", "args", "Plot a 2D field of wind barbs."], [1266, 3, 2, "", "data", "Plot a 2D field of wind barbs."], [1266, 3, 2, "", "kwargs", "Plot a 2D field of wind barbs."]], "foxes.utils.TabWindroseAxes.barh": [[1267, 3, 2, "", "align", "Make a horizontal bar plot."], [1267, 3, 2, "", "data", "Make a horizontal bar plot."], [1267, 3, 2, "", "height", "Make a horizontal bar plot."], [1267, 3, 2, "", "kwargs", "Make a horizontal bar plot."], [1267, 3, 2, "", "left", "Make a horizontal bar plot."], [1267, 3, 2, "", "width", "Make a horizontal bar plot."], [1267, 3, 2, "", "y", "Make a horizontal bar plot."]], "foxes.utils.TabWindroseAxes.box": [[1268, 3, 2, "", "direction", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1268, 3, 2, "", "kwargs", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."], [1268, 3, 2, "", "var", "Plot a windrose in proportional box mode. For each var bins and for each sector, a colored box will be draw on the axes."]], "foxes.utils.TabWindroseAxes.boxplot": [[1269, 3, 2, "", "autorange", "Draw a box and whisker plot."], [1269, 3, 2, "", "bootstrap", "Draw a box and whisker plot."], [1269, 3, 2, "", "boxprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "capprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "capwidths", "Draw a box and whisker plot."], [1269, 3, 2, "", "conf_intervals", "Draw a box and whisker plot."], [1269, 3, 2, "", "data", "Draw a box and whisker plot."], [1269, 3, 2, "", "flierprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "label", "Draw a box and whisker plot."], [1269, 3, 2, "", "manage_ticks", "Draw a box and whisker plot."], [1269, 3, 2, "", "meanline", "Draw a box and whisker plot."], [1269, 3, 2, "", "meanprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "medianprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "notch", "Draw a box and whisker plot."], [1269, 3, 2, "", "patch_artist", "Draw a box and whisker plot."], [1269, 3, 2, "", "positions", "Draw a box and whisker plot."], [1269, 3, 2, "", "showbox", "Draw a box and whisker plot."], [1269, 3, 2, "", "showcaps", "Draw a box and whisker plot."], [1269, 3, 2, "", "showfliers", "Draw a box and whisker plot."], [1269, 3, 2, "", "showmeans", "Draw a box and whisker plot."], [1269, 3, 2, "", "sym", "Draw a box and whisker plot."], [1269, 3, 2, "", "tick_labels", "Draw a box and whisker plot."], [1269, 3, 2, "", "usermedians", "Draw a box and whisker plot."], [1269, 3, 2, "", "vert", "Draw a box and whisker plot."], [1269, 3, 2, "", "whis", "Draw a box and whisker plot."], [1269, 3, 2, "", "whiskerprops", "Draw a box and whisker plot."], [1269, 3, 2, "", "widths", "Draw a box and whisker plot."], [1269, 3, 2, "", "x", "Draw a box and whisker plot."], [1269, 3, 2, "", "zorder", "Draw a box and whisker plot."]], "foxes.utils.TabWindroseAxes.broken_barh": [[1270, 3, 2, "", "data", "Plot a horizontal sequence of rectangles."], [1270, 3, 2, "", "kwargs", "Plot a horizontal sequence of rectangles."], [1270, 3, 2, "", "xranges", "Plot a horizontal sequence of rectangles."], [1270, 3, 2, "", "yrange", "Plot a horizontal sequence of rectangles."]], "foxes.utils.TabWindroseAxes.bxp": [[1271, 3, 2, "", "boxprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "bxpstats", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "capprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "capwidths", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "flierprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "label", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "manage_ticks", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "meanline", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "meanprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "medianprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "patch_artist", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "positions", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "showbox", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "showcaps", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "showfliers", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "showmeans", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "shownotches", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "vert", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "whiskerprops", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "widths", "Draw a box and whisker plot from pre-computed statistics."], [1271, 3, 2, "", "zorder", "Draw a box and whisker plot from pre-computed statistics."]], "foxes.utils.TabWindroseAxes.clabel": [[1275, 3, 2, "", "CS", "Label a contour plot."], [1275, 3, 2, "", "kwargs", "Label a contour plot."], [1275, 3, 2, "", "levels", "Label a contour plot."]], "foxes.utils.TabWindroseAxes.cohere": [[1277, 3, 2, "", "*", "Plot the coherence between x and y."], [1277, 3, 2, "", "**kwargs", "Plot the coherence between x and y."], [1277, 3, 2, "", "Fc=0", "Plot the coherence between x and y."], [1277, 3, 2, "", "Fs=2", "Plot the coherence between x and y."], [1277, 3, 2, "", "NFFT=256", "Plot the coherence between x and y."], [1277, 3, 2, "", "data=None", "Plot the coherence between x and y."], [1277, 3, 2, "", "detrend=&lt;function detrend_none&gt;", "Plot the coherence between x and y."], [1277, 3, 2, "", "noverlap=0", "Plot the coherence between x and y."], [1277, 3, 2, "", "pad_to=None", "Plot the coherence between x and y."], [1277, 3, 2, "", "scale_by_freq=None", "Plot the coherence between x and y."], [1277, 3, 2, "", "sides=&#x27;default&#x27;", "Plot the coherence between x and y."], [1277, 3, 2, "", "window=&lt;function window_hanning&gt;", "Plot the coherence between x and y."], [1277, 3, 2, "", "x", "Plot the coherence between x and y."], [1277, 3, 2, "", "y", "Plot the coherence between x and y."]], "foxes.utils.TabWindroseAxes.contains": [[1279, 3, 2, "", "mouseevent", "Test whether the artist contains the mouse event."]], "foxes.utils.TabWindroseAxes.contains_point": [[1280, 3, 2, "", "point", "Return whether point (pair of pixel coordinates) is inside the Axes patch."]], "foxes.utils.TabWindroseAxes.contour": [[1281, 3, 2, "", "direction", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1281, 3, 2, "", "kwargs", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1281, 3, 2, "", "var", "Plot a windrose in linear mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."]], "foxes.utils.TabWindroseAxes.contourf": [[1282, 3, 2, "", "direction", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1282, 3, 2, "", "kwargs", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."], [1282, 3, 2, "", "var", "Plot a windrose in filled mode. For each var bins, a line will be draw on the axes, a segment between each sector (center to center). Each line can be formatted (color, width, ...) like with standard plot pylab command."]], "foxes.utils.TabWindroseAxes.convert_xunits": [[1283, 3, 2, "", "x", "Convert x using the unit type of the xaxis."]], "foxes.utils.TabWindroseAxes.convert_yunits": [[1284, 3, 2, "", "y", "Convert y using the unit type of the yaxis."]], "foxes.utils.TabWindroseAxes.csd": [[1285, 3, 2, "", "Fc", "Plot the cross-spectral density."], [1285, 3, 2, "", "Fs", "Plot the cross-spectral density."], [1285, 3, 2, "", "NFFT", "Plot the cross-spectral density."], [1285, 3, 2, "", "data", "Plot the cross-spectral density."], [1285, 3, 2, "", "detrend", "Plot the cross-spectral density."], [1285, 3, 2, "", "kwargs", "Plot the cross-spectral density."], [1285, 3, 2, "", "noverlap", "Plot the cross-spectral density."], [1285, 3, 2, "", "pad_to", "Plot the cross-spectral density."], [1285, 3, 2, "", "return_line", "Plot the cross-spectral density."], [1285, 3, 2, "", "scale_by_freq", "Plot the cross-spectral density."], [1285, 3, 2, "", "sides", "Plot the cross-spectral density."], [1285, 3, 2, "", "window", "Plot the cross-spectral density."], [1285, 3, 2, "", "x", "Plot the cross-spectral density."], [1285, 3, 2, "", "y", "Plot the cross-spectral density."]], "foxes.utils.TabWindroseAxes.drag_pan": [[1286, 3, 2, "", "button", "Called when the mouse moves during a pan operation."], [1286, 3, 2, "", "key", "Called when the mouse moves during a pan operation."], [1286, 3, 2, "", "x", "Called when the mouse moves during a pan operation."], [1286, 3, 2, "", "y", "Called when the mouse moves during a pan operation."]], "foxes.utils.TabWindroseAxes.draw": [[1287, 3, 2, "", "renderer", "Draw the Artist (and its children) using the given renderer."]], "foxes.utils.TabWindroseAxes.draw_artist": [[1288, 3, 2, "", "a", "Efficiently redraw a single artist."]], "foxes.utils.TabWindroseAxes.ecdf": [[1289, 3, 2, "", "complementary", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "compress", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "data", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "kwargs", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "orientation", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "weights", "Compute and plot the empirical cumulative distribution function of x."], [1289, 3, 2, "", "x", "Compute and plot the empirical cumulative distribution function of x."]], "foxes.utils.TabWindroseAxes.errorbar": [[1291, 3, 2, "", "barsabove", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "capsize", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "capthick", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "data", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "ecolor", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "elinewidth", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "errorevery", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "fmt", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "kwargs", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "lolims", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "uplims", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "x", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "xerr", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "xlolims", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "xuplims", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "y", "Plot y versus x as lines and/or markers with attached errorbars."], [1291, 3, 2, "", "yerr", "Plot y versus x as lines and/or markers with attached errorbars."]], "foxes.utils.TabWindroseAxes.eventplot": [[1292, 3, 2, "", "alpha", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "colors", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "data", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "kwargs", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "linelengths", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "lineoffsets", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "linestyles", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "linewidths", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "orientation", "Plot identical parallel lines at the given positions."], [1292, 3, 2, "", "positions", "Plot identical parallel lines at the given positions."]], "foxes.utils.TabWindroseAxes.fill": [[1293, 3, 2, "", "args", "Plot filled polygons."], [1293, 3, 2, "", "data", "Plot filled polygons."], [1293, 3, 2, "", "kwargs", "Plot filled polygons."]], "foxes.utils.TabWindroseAxes.fill_between": [[1294, 3, 2, "", "data", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "interpolate", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "kwargs", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "step", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "where", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "x", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "y1", "Fill the area between two horizontal curves."], [1294, 3, 2, "", "y2", "Fill the area between two horizontal curves."]], "foxes.utils.TabWindroseAxes.fill_betweenx": [[1295, 3, 2, "", "data", "Fill the area between two vertical curves."], [1295, 3, 2, "", "interpolate", "Fill the area between two vertical curves."], [1295, 3, 2, "", "kwargs", "Fill the area between two vertical curves."], [1295, 3, 2, "", "step", "Fill the area between two vertical curves."], [1295, 3, 2, "", "where", "Fill the area between two vertical curves."], [1295, 3, 2, "", "x1", "Fill the area between two vertical curves."], [1295, 3, 2, "", "x2", "Fill the area between two vertical curves."], [1295, 3, 2, "", "y", "Fill the area between two vertical curves."]], "foxes.utils.TabWindroseAxes.findobj": [[1296, 3, 2, "", "include_self", "Find artist objects."], [1296, 3, 2, "", "match", "Find artist objects."]], "foxes.utils.TabWindroseAxes.format_coord": [[1297, 3, 2, "", "r", "Return a format string formatting the x, y coordinates."], [1297, 3, 2, "", "theta", "Return a format string formatting the x, y coordinates."]], "foxes.utils.TabWindroseAxes.format_cursor_data": [[1298, 3, 2, "", "data", "Return a string representation of data."]], "foxes.utils.TabWindroseAxes.format_xdata": [[1299, 3, 2, "", "x", "Return x formatted as an x-value."]], "foxes.utils.TabWindroseAxes.format_ydata": [[1300, 3, 2, "", "y", "Return y formatted as a y-value."]], "foxes.utils.TabWindroseAxes.from_ax": [[1301, 3, 2, "", "args", "Return a WindroseAxes object for the figure fig."], [1301, 3, 2, "", "ax", "Return a WindroseAxes object for the figure fig."], [1301, 3, 2, "", "fig", "Return a WindroseAxes object for the figure fig."], [1301, 3, 2, "", "figsize", "Return a WindroseAxes object for the figure fig."], [1301, 3, 2, "", "kwargs", "Return a WindroseAxes object for the figure fig."], [1301, 3, 2, "", "rect", "Return a WindroseAxes object for the figure fig."]], "foxes.utils.TabWindroseAxes.get_cursor_data": [[1318, 3, 2, "", "event", "Return the cursor data for a given event."]], "foxes.utils.TabWindroseAxes.get_legend_handles_labels": [[1332, 3, 2, "", "legend_handler_map", "Return handles and labels for legend"]], "foxes.utils.TabWindroseAxes.get_position": [[1339, 3, 2, "", "original", "Return the position of the Axes within the figure as a .Bbox."]], "foxes.utils.TabWindroseAxes.get_tightbbox": [[1356, 3, 2, "", "bbox_extra_artists", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1356, 3, 2, "", "call_axes_locator", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1356, 3, 2, "", "for_layout_only", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."], [1356, 3, 2, "", "renderer", "Return the tight bounding box of the Axes, including axis and their decorators (xlabel, title, etc)."]], "foxes.utils.TabWindroseAxes.get_title": [[1357, 3, 2, "", "loc", "Get an Axes title."]], "foxes.utils.TabWindroseAxes.get_window_extent": [[1362, 3, 2, "", "renderer", "Return the Axes bounding box in display space."]], "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform": [[1364, 3, 2, "", "pad", "The transform used for drawing x-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in data coordinates and the y-direction is in axis coordinates"]], "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform": [[1365, 3, 2, "", "pad", "The transform used for drawing secondary x-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in data coordinates and the y-direction is in axis coordinates"]], "foxes.utils.TabWindroseAxes.get_xaxis_transform": [[1366, 3, 2, "", "which", "Get the transformation used for drawing x-axis labels, ticks and gridlines.  The x-direction is in data coordinates and the y-direction is in axis coordinates."]], "foxes.utils.TabWindroseAxes.get_xticklabels": [[1375, 3, 2, "", "minor", "Get the xaxis' tick labels."], [1375, 3, 2, "", "which", "Get the xaxis' tick labels."]], "foxes.utils.TabWindroseAxes.get_xticklines": [[1376, 3, 2, "", "minor", "Return the xaxis' tick lines as a list of .Line2Ds."]], "foxes.utils.TabWindroseAxes.get_xticks": [[1377, 3, 2, "", "minor", "Return the xaxis' tick locations in data coordinates."]], "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform": [[1379, 3, 2, "", "pad", "The transform used for drawing y-axis labels, which will add pad_points of padding (in points) between the axis and the label. The x-direction is in axis coordinates and the y-direction is in data coordinates"]], "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform": [[1380, 3, 2, "", "pad", "The transform used for drawing secondart y-axis labels, which will add pad_points of padding (in points) between the axis and the label.  The x-direction is in axis coordinates and the y-direction is in data coordinates"]], "foxes.utils.TabWindroseAxes.get_yaxis_transform": [[1381, 3, 2, "", "which", "Get the transformation used for drawing y-axis labels, ticks and gridlines.  The x-direction is in axis coordinates and the y-direction is in data coordinates."]], "foxes.utils.TabWindroseAxes.get_yticklabels": [[1390, 3, 2, "", "minor", "Get the yaxis' tick labels."], [1390, 3, 2, "", "which", "Get the yaxis' tick labels."]], "foxes.utils.TabWindroseAxes.get_yticklines": [[1391, 3, 2, "", "minor", "Return the yaxis' tick lines as a list of .Line2Ds."]], "foxes.utils.TabWindroseAxes.get_yticks": [[1392, 3, 2, "", "minor", "Return the yaxis' tick locations in data coordinates."]], "foxes.utils.TabWindroseAxes.grid": [[1394, 3, 2, "", "axis", "Configure the grid lines."], [1394, 3, 2, "", "kwargs", "Configure the grid lines."], [1394, 3, 2, "", "visible", "Configure the grid lines."], [1394, 3, 2, "", "which", "Configure the grid lines."]], "foxes.utils.TabWindroseAxes.hexbin": [[1397, 3, 2, "", "*", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "**kwargs", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "C=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "alpha=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "bins=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "cmap=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "data=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "edgecolors=&#x27;face&#x27;", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "extent=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "gridsize=100", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "linewidths=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "marginals=False", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "mincnt=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "norm=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "reduce_C_function=&lt;function mean&gt;", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "vmax=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "vmin=None", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "x", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "xscale=&#x27;linear&#x27;", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "y", "Make a 2D hexagonal binning plot of points x, y."], [1397, 3, 2, "", "yscale=&#x27;linear&#x27;", "Make a 2D hexagonal binning plot of points x, y."]], "foxes.utils.TabWindroseAxes.hist": [[1398, 3, 2, "", "align", "Compute and plot a histogram."], [1398, 3, 2, "", "bins", "Compute and plot a histogram."], [1398, 3, 2, "", "bottom", "Compute and plot a histogram."], [1398, 3, 2, "", "color", "Compute and plot a histogram."], [1398, 3, 2, "", "cumulative", "Compute and plot a histogram."], [1398, 3, 2, "", "data", "Compute and plot a histogram."], [1398, 3, 2, "", "density", "Compute and plot a histogram."], [1398, 3, 2, "", "histtype", "Compute and plot a histogram."], [1398, 3, 2, "", "kwargs", "Compute and plot a histogram."], [1398, 3, 2, "", "label", "Compute and plot a histogram."], [1398, 3, 2, "", "log", "Compute and plot a histogram."], [1398, 3, 2, "", "orientation", "Compute and plot a histogram."], [1398, 3, 2, "", "range", "Compute and plot a histogram."], [1398, 3, 2, "", "rwidth", "Compute and plot a histogram."], [1398, 3, 2, "", "stacked", "Compute and plot a histogram."], [1398, 3, 2, "", "weights", "Compute and plot a histogram."], [1398, 3, 2, "", "x", "Compute and plot a histogram."]], "foxes.utils.TabWindroseAxes.hist2d": [[1399, 3, 2, "", "bins", "Make a 2D histogram plot."], [1399, 3, 2, "", "cmax", "Make a 2D histogram plot."], [1399, 3, 2, "", "cmin", "Make a 2D histogram plot."], [1399, 3, 2, "", "data", "Make a 2D histogram plot."], [1399, 3, 2, "", "density", "Make a 2D histogram plot."], [1399, 3, 2, "", "kwargs", "Make a 2D histogram plot."], [1399, 3, 2, "", "range", "Make a 2D histogram plot."], [1399, 3, 2, "", "weights", "Make a 2D histogram plot."], [1399, 3, 2, "", "x", "Make a 2D histogram plot."], [1399, 3, 2, "", "y", "Make a 2D histogram plot."]], "foxes.utils.TabWindroseAxes.hlines": [[1400, 3, 2, "", "colors", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "data", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "kwargs", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "label", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "linestyles", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "xmax", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "xmin", "Plot horizontal lines at each y from xmin to xmax."], [1400, 3, 2, "", "y", "Plot horizontal lines at each y from xmin to xmax."]], "foxes.utils.TabWindroseAxes.imshow": [[1402, 3, 2, "", "X", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "alpha", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "aspect", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "cmap", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "data", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "extent", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "filternorm", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "filterrad", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "interpolation", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "interpolation_stage", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "kwargs", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "norm", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "origin", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "resample", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "url", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "vmax", "Display data as an image, i.e., on a 2D regular raster."], [1402, 3, 2, "", "vmin", "Display data as an image, i.e., on a 2D regular raster."]], "foxes.utils.TabWindroseAxes.in_axes": [[1403, 3, 2, "", "mouseevent", "Return whether the given event (in display coords) is in the Axes."]], "foxes.utils.TabWindroseAxes.indicate_inset": [[1404, 3, 2, "", "alpha", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "bounds", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "edgecolor", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "facecolor", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "inset_ax", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "kwargs", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "transform", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."], [1404, 3, 2, "", "zorder", "Add an inset indicator to the Axes.  This is a rectangle on the plot at the position indicated by bounds that optionally has lines that connect the rectangle to an inset Axes (.Axes.inset_axes)."]], "foxes.utils.TabWindroseAxes.indicate_inset_zoom": [[1405, 3, 2, "", "inset_ax", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."], [1405, 3, 2, "", "kwargs", "Add an inset indicator rectangle to the Axes based on the axis limits for an inset_ax and draw connectors between inset_ax and the rectangle."]], "foxes.utils.TabWindroseAxes.inset_axes": [[1406, 3, 2, "", "bounds", "Add a child inset Axes to this existing Axes."], [1406, 3, 2, "", "kwargs", "Add a child inset Axes to this existing Axes."], [1406, 3, 2, "", "transform", "Add a child inset Axes to this existing Axes."], [1406, 3, 2, "", "zorder", "Add a child inset Axes to this existing Axes."]], "foxes.utils.TabWindroseAxes.label_outer": [[1410, 3, 2, "", "remove_inner_ticks", "Only show \"outer\" labels and tick labels."]], "foxes.utils.TabWindroseAxes.legend": [[1411, 3, 2, "", "args", "Sets the legend location and her properties."], [1411, 3, 2, "", "kwargs", "Sets the legend location and her properties."], [1411, 3, 2, "", "loc", "Sets the legend location and her properties."]], "foxes.utils.TabWindroseAxes.locator_params": [[1413, 3, 2, "", "axis", "Control behavior of major tick locators."], [1413, 3, 2, "", "kwargs", "Control behavior of major tick locators."], [1413, 3, 2, "", "tight", "Control behavior of major tick locators."]], "foxes.utils.TabWindroseAxes.loglog": [[1414, 3, 2, "", "args", "Make a plot with log scaling on both the x- and y-axis."], [1414, 3, 2, "", "kwargs", "Make a plot with log scaling on both the x- and y-axis."]], "foxes.utils.TabWindroseAxes.magnitude_spectrum": [[1415, 3, 2, "", "Fc", "Plot the magnitude spectrum."], [1415, 3, 2, "", "Fs", "Plot the magnitude spectrum."], [1415, 3, 2, "", "data", "Plot the magnitude spectrum."], [1415, 3, 2, "", "kwargs", "Plot the magnitude spectrum."], [1415, 3, 2, "", "pad_to", "Plot the magnitude spectrum."], [1415, 3, 2, "", "scale", "Plot the magnitude spectrum."], [1415, 3, 2, "", "sides", "Plot the magnitude spectrum."], [1415, 3, 2, "", "window", "Plot the magnitude spectrum."], [1415, 3, 2, "", "x", "Plot the magnitude spectrum."]], "foxes.utils.TabWindroseAxes.margins": [[1416, 3, 2, "", "margins", "Set or retrieve autoscaling margins."], [1416, 3, 2, "", "tight", "Set or retrieve autoscaling margins."], [1416, 3, 2, "", "x", "Set or retrieve autoscaling margins."], [1416, 3, 2, "", "y", "Set or retrieve autoscaling margins."]], "foxes.utils.TabWindroseAxes.matshow": [[1417, 3, 2, "", "Z", "Plot the values of a 2D matrix or array as color-coded image."], [1417, 3, 2, "", "kwargs", "Plot the values of a 2D matrix or array as color-coded image."]], "foxes.utils.TabWindroseAxes.pcolor": [[1424, 3, 2, "", "alpha", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "args", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "cmap", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "data", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "kwargs", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "norm", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "shading", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "vmax", "Create a pseudocolor plot with a non-regular rectangular grid."], [1424, 3, 2, "", "vmin", "Create a pseudocolor plot with a non-regular rectangular grid."]], "foxes.utils.TabWindroseAxes.pcolorfast": [[1425, 3, 2, "", "alpha", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "args", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "cmap", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "data", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "kwargs", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "norm", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "vmax", "Create a pseudocolor plot with a non-regular rectangular grid."], [1425, 3, 2, "", "vmin", "Create a pseudocolor plot with a non-regular rectangular grid."]], "foxes.utils.TabWindroseAxes.pcolormesh": [[1426, 3, 2, "", "alpha", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "antialiased", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "args", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "cmap", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "data", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "kwargs", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "norm", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "shading", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "vmax", "Create a pseudocolor plot with a non-regular rectangular grid."], [1426, 3, 2, "", "vmin", "Create a pseudocolor plot with a non-regular rectangular grid."]], "foxes.utils.TabWindroseAxes.phase_spectrum": [[1427, 3, 2, "", "Fc", "Plot the phase spectrum."], [1427, 3, 2, "", "Fs", "Plot the phase spectrum."], [1427, 3, 2, "", "data", "Plot the phase spectrum."], [1427, 3, 2, "", "kwargs", "Plot the phase spectrum."], [1427, 3, 2, "", "pad_to", "Plot the phase spectrum."], [1427, 3, 2, "", "sides", "Plot the phase spectrum."], [1427, 3, 2, "", "window", "Plot the phase spectrum."], [1427, 3, 2, "", "x", "Plot the phase spectrum."]], "foxes.utils.TabWindroseAxes.pick": [[1428, 3, 2, "", "mouseevent", "Process a pick event."]], "foxes.utils.TabWindroseAxes.pie": [[1430, 3, 2, "", "autopct", "Plot a pie chart."], [1430, 3, 2, "", "center", "Plot a pie chart."], [1430, 3, 2, "", "colors", "Plot a pie chart."], [1430, 3, 2, "", "counterclock", "Plot a pie chart."], [1430, 3, 2, "", "data", "Plot a pie chart."], [1430, 3, 2, "", "explode", "Plot a pie chart."], [1430, 3, 2, "", "frame", "Plot a pie chart."], [1430, 3, 2, "", "hatch", "Plot a pie chart."], [1430, 3, 2, "", "labeldistance", "Plot a pie chart."], [1430, 3, 2, "", "labels", "Plot a pie chart."], [1430, 3, 2, "", "normalize", "Plot a pie chart."], [1430, 3, 2, "", "pctdistance", "Plot a pie chart."], [1430, 3, 2, "", "radius", "Plot a pie chart."], [1430, 3, 2, "", "rotatelabels", "Plot a pie chart."], [1430, 3, 2, "", "shadow", "Plot a pie chart."], [1430, 3, 2, "", "startangle", "Plot a pie chart."], [1430, 3, 2, "", "textprops", "Plot a pie chart."], [1430, 3, 2, "", "wedgeprops", "Plot a pie chart."], [1430, 3, 2, "", "x", "Plot a pie chart."]], "foxes.utils.TabWindroseAxes.plot": [[1431, 3, 2, "", "args", "Plot y versus x as lines and/or markers."], [1431, 3, 2, "", "data", "Plot y versus x as lines and/or markers."], [1431, 3, 2, "", "kwargs", "Plot y versus x as lines and/or markers."], [1431, 3, 2, "", "scalex", "Plot y versus x as lines and/or markers."], [1431, 3, 2, "", "scaley", "Plot y versus x as lines and/or markers."]], "foxes.utils.TabWindroseAxes.plot_date": [[1432, 3, 2, "", "data", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "fmt", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "kwargs", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "tz", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "x", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "xdate", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "y", "[Deprecated] Plot coercing the axis to treat floats as dates."], [1432, 3, 2, "", "ydate", "[Deprecated] Plot coercing the axis to treat floats as dates."]], "foxes.utils.TabWindroseAxes.psd": [[1434, 3, 2, "", "Fc", "Plot the power spectral density."], [1434, 3, 2, "", "Fs", "Plot the power spectral density."], [1434, 3, 2, "", "NFFT", "Plot the power spectral density."], [1434, 3, 2, "", "data", "Plot the power spectral density."], [1434, 3, 2, "", "detrend", "Plot the power spectral density."], [1434, 3, 2, "", "kwargs", "Plot the power spectral density."], [1434, 3, 2, "", "noverlap", "Plot the power spectral density."], [1434, 3, 2, "", "pad_to", "Plot the power spectral density."], [1434, 3, 2, "", "return_line", "Plot the power spectral density."], [1434, 3, 2, "", "scale_by_freq", "Plot the power spectral density."], [1434, 3, 2, "", "sides", "Plot the power spectral density."], [1434, 3, 2, "", "window", "Plot the power spectral density."], [1434, 3, 2, "", "x", "Plot the power spectral density."]], "foxes.utils.TabWindroseAxes.quiver": [[1435, 3, 2, "", "args", "Plot a 2D field of arrows."], [1435, 3, 2, "", "data", "Plot a 2D field of arrows."], [1435, 3, 2, "", "kwargs", "Plot a 2D field of arrows."]], "foxes.utils.TabWindroseAxes.quiverkey": [[1436, 3, 2, "", "Q", "Add a key to a quiver plot."], [1436, 3, 2, "", "U", "Add a key to a quiver plot."], [1436, 3, 2, "", "X", "Add a key to a quiver plot."], [1436, 3, 2, "", "Y", "Add a key to a quiver plot."], [1436, 3, 2, "", "kwargs", "Add a key to a quiver plot."], [1436, 3, 2, "", "label", "Add a key to a quiver plot."]], "foxes.utils.TabWindroseAxes.relim": [[1438, 3, 2, "", "visible_only", "Recompute the data limits based on current artists."]], "foxes.utils.TabWindroseAxes.remove_callback": [[1440, 3, 2, "", "oid", "Remove a callback based on its observer id."]], "foxes.utils.TabWindroseAxes.scatter": [[1442, 3, 2, "", "alpha", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "c", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "cmap", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "data", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "edgecolors", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "kwargs", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "linewidths", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "marker", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "norm", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "plotnonfinite", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "s", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "vmax", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "vmin", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "x", "A scatter plot of y vs. x with varying marker size and/or color."], [1442, 3, 2, "", "y", "A scatter plot of y vs. x with varying marker size and/or color."]], "foxes.utils.TabWindroseAxes.secondary_xaxis": [[1443, 3, 2, "", "functions", "Add a second x-axis to this ~.axes.Axes."], [1443, 3, 2, "", "kwargs", "Add a second x-axis to this ~.axes.Axes."], [1443, 3, 2, "", "location", "Add a second x-axis to this ~.axes.Axes."], [1443, 3, 2, "", "transform", "Add a second x-axis to this ~.axes.Axes."]], "foxes.utils.TabWindroseAxes.secondary_yaxis": [[1444, 3, 2, "", "functions", "Add a second y-axis to this ~.axes.Axes."], [1444, 3, 2, "", "kwargs", "Add a second y-axis to this ~.axes.Axes."], [1444, 3, 2, "", "location", "Add a second y-axis to this ~.axes.Axes."], [1444, 3, 2, "", "transform", "Add a second y-axis to this ~.axes.Axes."]], "foxes.utils.TabWindroseAxes.semilogx": [[1445, 3, 2, "", "args", "Make a plot with log scaling on the x-axis."], [1445, 3, 2, "", "kwargs", "Make a plot with log scaling on the x-axis."]], "foxes.utils.TabWindroseAxes.semilogy": [[1446, 3, 2, "", "args", "Make a plot with log scaling on the y-axis."], [1446, 3, 2, "", "kwargs", "Make a plot with log scaling on the y-axis."]], "foxes.utils.TabWindroseAxes.set": [[1447, 3, 2, "", "*", "Set multiple properties at once."], [1447, 3, 2, "", "adjustable=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "agg_filter=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "alpha=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "anchor=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "animated=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "aspect=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "autoscale_on=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "autoscalex_on=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "autoscaley_on=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "axes_locator=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "axisbelow=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "box_aspect=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "clip_box=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "clip_on=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "clip_path=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "facecolor=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "forward_navigation_events=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "frame_on=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "gid=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "in_layout=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "label=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "legend=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "mouseover=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "navigate=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "path_effects=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "picker=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "position=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "prop_cycle=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "radii_angle=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rasterization_zorder=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rasterized=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rgrids=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rlabel_position=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rlim=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rmax=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rmin=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rorigin=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rscale=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "rticks=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "sketch_params=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "snap=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "subplotspec=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "theta_direction=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "theta_offset=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "theta_zero_location=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "thetagrids=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "thetalim=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "thetamax=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "thetamin=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "title=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "transform=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "url=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "visible=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xbound=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xlabel=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xlim=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xmargin=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xscale=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xticklabels=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "xticks=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "ybound=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "ylabel=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "ylim=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "ymargin=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "yscale=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "yticklabels=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "yticks=&lt;UNSET&gt;", "Set multiple properties at once."], [1447, 3, 2, "", "zorder=&lt;UNSET&gt;", "Set multiple properties at once."]], "foxes.utils.TabWindroseAxes.set_adjustable": [[1448, 3, 2, "", "adjustable", "Set how the Axes adjusts to achieve the required aspect ratio."], [1448, 3, 2, "", "share", "Set how the Axes adjusts to achieve the required aspect ratio."]], "foxes.utils.TabWindroseAxes.set_agg_filter": [[1449, 3, 2, "", "filter_func", "Set the agg filter."]], "foxes.utils.TabWindroseAxes.set_alpha": [[1450, 3, 2, "", "alpha", "Set the alpha value used for blending - not supported on all backends."]], "foxes.utils.TabWindroseAxes.set_anchor": [[1451, 3, 2, "", "anchor", "Define the anchor location."], [1451, 3, 2, "", "share", "Define the anchor location."]], "foxes.utils.TabWindroseAxes.set_animated": [[1452, 3, 2, "", "b", "Set whether the artist is intended to be used in an animation."]], "foxes.utils.TabWindroseAxes.set_aspect": [[1453, 3, 2, "", "adjustable", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."], [1453, 3, 2, "", "anchor", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."], [1453, 3, 2, "", "aspect", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."], [1453, 3, 2, "", "share", "Set the aspect ratio of the Axes scaling, i.e. y/x-scale."]], "foxes.utils.TabWindroseAxes.set_autoscale_on": [[1454, 3, 2, "", "b", "Set whether autoscaling is applied to each axis on the next draw or call to .Axes.autoscale_view."]], "foxes.utils.TabWindroseAxes.set_autoscalex_on": [[1455, 3, 2, "", "b", "Set whether the xaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."]], "foxes.utils.TabWindroseAxes.set_autoscaley_on": [[1456, 3, 2, "", "b", "Set whether the yaxis is autoscaled when drawing or by .Axes.autoscale_view. If b is None, then the value is not changed."]], "foxes.utils.TabWindroseAxes.set_axes_locator": [[1457, 3, 2, "", "locator", "Set the Axes locator."]], "foxes.utils.TabWindroseAxes.set_axisbelow": [[1460, 3, 2, "", "b", "Set whether axis ticks and gridlines are above or below most artists."]], "foxes.utils.TabWindroseAxes.set_box_aspect": [[1461, 3, 2, "", "aspect", "Set the Axes box aspect, i.e. the ratio of height to width."]], "foxes.utils.TabWindroseAxes.set_clip_box": [[1462, 3, 2, "", "clipbox", "Set the artist's clip .Bbox."]], "foxes.utils.TabWindroseAxes.set_clip_on": [[1463, 3, 2, "", "b", "Set whether the artist uses clipping."]], "foxes.utils.TabWindroseAxes.set_clip_path": [[1464, 3, 2, "", "path", "Set the artist's clip path."], [1464, 3, 2, "", "transform", "Set the artist's clip path."]], "foxes.utils.TabWindroseAxes.set_facecolor": [[1465, 3, 2, "", "color", "Set the facecolor of the Axes."]], "foxes.utils.TabWindroseAxes.set_fc": [[1466, 3, 2, "", "color", "Alias for set_facecolor."]], "foxes.utils.TabWindroseAxes.set_figure": [[1467, 3, 2, "", "fig", "Set the .Figure instance the artist belongs to."]], "foxes.utils.TabWindroseAxes.set_forward_navigation_events": [[1468, 3, 2, "", "forward", "Set how pan/zoom events are forwarded to Axes below this one."]], "foxes.utils.TabWindroseAxes.set_frame_on": [[1469, 3, 2, "", "b", "Set whether the Axes rectangle patch is drawn."]], "foxes.utils.TabWindroseAxes.set_gid": [[1470, 3, 2, "", "gid", "Set the (group) id for the artist."]], "foxes.utils.TabWindroseAxes.set_in_layout": [[1471, 3, 2, "", "in_layout", "Set if artist is to be included in layout calculations, E.g. constrainedlayout_guide, .Figure.tight_layout(), and fig.savefig(fname, bbox_inches='tight')."]], "foxes.utils.TabWindroseAxes.set_label": [[1472, 3, 2, "", "s", "Set a label that will be displayed in the legend."]], "foxes.utils.TabWindroseAxes.set_legend": [[1473, 3, 2, "", "pyplot_arguments", ""]], "foxes.utils.TabWindroseAxes.set_mouseover": [[1474, 3, 2, "", "mouseover", "Set whether this artist is queried for custom context information when the mouse cursor moves over it."]], "foxes.utils.TabWindroseAxes.set_navigate": [[1475, 3, 2, "", "b", "Set whether the Axes responds to navigation toolbar commands."]], "foxes.utils.TabWindroseAxes.set_navigate_mode": [[1476, 3, 2, "", "b", "Set the navigation toolbar button status."]], "foxes.utils.TabWindroseAxes.set_path_effects": [[1477, 3, 2, "", "path_effects", "Set the path effects."]], "foxes.utils.TabWindroseAxes.set_picker": [[1478, 3, 2, "", "picker", "Define the picking behavior of the artist."]], "foxes.utils.TabWindroseAxes.set_position": [[1479, 3, 2, "", "pos", "Set the Axes position."], [1479, 3, 2, "", "which", "Set the Axes position."]], "foxes.utils.TabWindroseAxes.set_prop_cycle": [[1480, 3, 2, "", "args", "Set the property cycle of the Axes."], [1480, 3, 2, "", "kwargs", "Set the property cycle of the Axes."]], "foxes.utils.TabWindroseAxes.set_radii_angle": [[1481, 3, 2, "", "kwargs", "Set the radii labels angle"]], "foxes.utils.TabWindroseAxes.set_rasterization_zorder": [[1482, 3, 2, "", "z", "Set the zorder threshold for rasterization for vector graphics output."]], "foxes.utils.TabWindroseAxes.set_rasterized": [[1483, 3, 2, "", "rasterized", "Force rasterized (bitmap) drawing for vector graphics output."]], "foxes.utils.TabWindroseAxes.set_rgrids": [[1484, 3, 2, "", "angle", "Set the radial gridlines on a polar plot."], [1484, 3, 2, "", "fmt", "Set the radial gridlines on a polar plot."], [1484, 3, 2, "", "kwargs", "Set the radial gridlines on a polar plot."], [1484, 3, 2, "", "labels", "Set the radial gridlines on a polar plot."], [1484, 3, 2, "", "radii", "Set the radial gridlines on a polar plot."]], "foxes.utils.TabWindroseAxes.set_rlabel_position": [[1485, 3, 2, "", "value", "Update the theta position of the radius labels."]], "foxes.utils.TabWindroseAxes.set_rlim": [[1486, 3, 2, "", "auto", "Set the radial axis view limits."], [1486, 3, 2, "", "bottom", "Set the radial axis view limits."], [1486, 3, 2, "", "emit", "Set the radial axis view limits."], [1486, 3, 2, "", "kwargs", "Set the radial axis view limits."], [1486, 3, 2, "", "top", "Set the radial axis view limits."]], "foxes.utils.TabWindroseAxes.set_rmax": [[1487, 3, 2, "", "rmax", "Set the outer radial limit."]], "foxes.utils.TabWindroseAxes.set_rmin": [[1488, 3, 2, "", "rmin", "Set the inner radial limit."]], "foxes.utils.TabWindroseAxes.set_rorigin": [[1489, 3, 2, "", "rorigin", "Update the radial origin."]], "foxes.utils.TabWindroseAxes.set_rscale": [[1490, 3, 2, "", "args", ""], [1490, 3, 2, "", "kwargs", ""]], "foxes.utils.TabWindroseAxes.set_rticks": [[1491, 3, 2, "", "args", ""], [1491, 3, 2, "", "kwargs", ""]], "foxes.utils.TabWindroseAxes.set_sketch_params": [[1492, 3, 2, "", "length", "Set the sketch parameters."], [1492, 3, 2, "", "randomness", "Set the sketch parameters."], [1492, 3, 2, "", "scale", "Set the sketch parameters."]], "foxes.utils.TabWindroseAxes.set_snap": [[1493, 3, 2, "", "snap", "Set the snapping behavior."]], "foxes.utils.TabWindroseAxes.set_subplotspec": [[1494, 3, 2, "", "subplotspec", "Set the .SubplotSpec. associated with the subplot."]], "foxes.utils.TabWindroseAxes.set_theta_direction": [[1495, 3, 2, "", "direction", "Set the direction in which theta increases."]], "foxes.utils.TabWindroseAxes.set_theta_offset": [[1496, 3, 2, "", "offset", "Set the offset for the location of 0 in radians."]], "foxes.utils.TabWindroseAxes.set_theta_zero_location": [[1497, 3, 2, "", "loc", "Set the location of theta's zero."], [1497, 3, 2, "", "offset", "Set the location of theta's zero."]], "foxes.utils.TabWindroseAxes.set_thetagrids": [[1498, 3, 2, "", "angles", "Set the theta gridlines in a polar plot."], [1498, 3, 2, "", "fmt", "Set the theta gridlines in a polar plot."], [1498, 3, 2, "", "kwargs", "Set the theta gridlines in a polar plot."], [1498, 3, 2, "", "labels", "Set the theta gridlines in a polar plot."]], "foxes.utils.TabWindroseAxes.set_thetalim": [[1499, 3, 2, "", "args", "Set the minimum and maximum theta values."], [1499, 3, 2, "", "kwargs", "Set the minimum and maximum theta values."]], "foxes.utils.TabWindroseAxes.set_thetamax": [[1500, 3, 2, "", "thetamax", "Set the maximum theta limit in degrees."]], "foxes.utils.TabWindroseAxes.set_thetamin": [[1501, 3, 2, "", "thetamin", "Set the minimum theta limit in degrees."]], "foxes.utils.TabWindroseAxes.set_title": [[1502, 3, 2, "", "fontdict", "Set a title for the Axes."], [1502, 3, 2, "", "kwargs", "Set a title for the Axes."], [1502, 3, 2, "", "label", "Set a title for the Axes."], [1502, 3, 2, "", "loc", "Set a title for the Axes."], [1502, 3, 2, "", "pad", "Set a title for the Axes."], [1502, 3, 2, "", "y", "Set a title for the Axes."]], "foxes.utils.TabWindroseAxes.set_transform": [[1503, 3, 2, "", "t", "Set the artist transform."]], "foxes.utils.TabWindroseAxes.set_url": [[1504, 3, 2, "", "url", "Set the url for the artist."]], "foxes.utils.TabWindroseAxes.set_visible": [[1505, 3, 2, "", "b", "Set the artist's visibility."]], "foxes.utils.TabWindroseAxes.set_xbound": [[1506, 3, 2, "", "lower", "Set the lower and upper numerical bounds of the x-axis."], [1506, 3, 2, "", "upper", "Set the lower and upper numerical bounds of the x-axis."]], "foxes.utils.TabWindroseAxes.set_xlabel": [[1507, 3, 2, "", "fontdict", "Set the label for the x-axis."], [1507, 3, 2, "", "kwargs", "Set the label for the x-axis."], [1507, 3, 2, "", "labelpad", "Set the label for the x-axis."], [1507, 3, 2, "", "loc", "Set the label for the x-axis."], [1507, 3, 2, "", "xlabel", "Set the label for the x-axis."]], "foxes.utils.TabWindroseAxes.set_xlim": [[1508, 3, 2, "", "auto", "Set the x-axis view limits."], [1508, 3, 2, "", "emit", "Set the x-axis view limits."], [1508, 3, 2, "", "left", "Set the x-axis view limits."], [1508, 3, 2, "", "right", "Set the x-axis view limits."], [1508, 3, 2, "", "xmax", "Set the x-axis view limits."], [1508, 3, 2, "", "xmin", "Set the x-axis view limits."]], "foxes.utils.TabWindroseAxes.set_xmargin": [[1509, 3, 2, "", "m", "Set padding of X data limits prior to autoscaling."]], "foxes.utils.TabWindroseAxes.set_xscale": [[1510, 3, 2, "", "kwargs", "Set the xaxis' scale."], [1510, 3, 2, "", "value", "Set the xaxis' scale."]], "foxes.utils.TabWindroseAxes.set_xticklabels": [[1511, 3, 2, "", "fontdict", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1511, 3, 2, "", "kwargs", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1511, 3, 2, "", "labels", "[Discouraged] Set the xaxis' tick labels with list of string labels."], [1511, 3, 2, "", "minor", "[Discouraged] Set the xaxis' tick labels with list of string labels."]], "foxes.utils.TabWindroseAxes.set_xticks": [[1512, 3, 2, "", "kwargs", "Set the xaxis' tick locations and optionally tick labels."], [1512, 3, 2, "", "labels", "Set the xaxis' tick locations and optionally tick labels."], [1512, 3, 2, "", "minor", "Set the xaxis' tick locations and optionally tick labels."], [1512, 3, 2, "", "ticks", "Set the xaxis' tick locations and optionally tick labels."]], "foxes.utils.TabWindroseAxes.set_ybound": [[1513, 3, 2, "", "lower", "Set the lower and upper numerical bounds of the y-axis."], [1513, 3, 2, "", "upper", "Set the lower and upper numerical bounds of the y-axis."]], "foxes.utils.TabWindroseAxes.set_ylabel": [[1514, 3, 2, "", "fontdict", "Set the label for the y-axis."], [1514, 3, 2, "", "kwargs", "Set the label for the y-axis."], [1514, 3, 2, "", "labelpad", "Set the label for the y-axis."], [1514, 3, 2, "", "loc", "Set the label for the y-axis."], [1514, 3, 2, "", "ylabel", "Set the label for the y-axis."]], "foxes.utils.TabWindroseAxes.set_ylim": [[1515, 3, 2, "", "auto", "Set the y-axis view limits."], [1515, 3, 2, "", "bottom", "Set the y-axis view limits."], [1515, 3, 2, "", "emit", "Set the y-axis view limits."], [1515, 3, 2, "", "top", "Set the y-axis view limits."], [1515, 3, 2, "", "ymax", "Set the y-axis view limits."], [1515, 3, 2, "", "ymin", "Set the y-axis view limits."]], "foxes.utils.TabWindroseAxes.set_ymargin": [[1516, 3, 2, "", "m", "Set padding of Y data limits prior to autoscaling."]], "foxes.utils.TabWindroseAxes.set_yscale": [[1517, 3, 2, "", "args", "Set the yaxis' scale."], [1517, 3, 2, "", "kwargs", "Set the yaxis' scale."]], "foxes.utils.TabWindroseAxes.set_yticklabels": [[1518, 3, 2, "", "fontdict", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1518, 3, 2, "", "kwargs", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1518, 3, 2, "", "labels", "[Discouraged] Set the yaxis' tick labels with list of string labels."], [1518, 3, 2, "", "minor", "[Discouraged] Set the yaxis' tick labels with list of string labels."]], "foxes.utils.TabWindroseAxes.set_yticks": [[1519, 3, 2, "", "kwargs", "Set the yaxis' tick locations and optionally tick labels."], [1519, 3, 2, "", "labels", "Set the yaxis' tick locations and optionally tick labels."], [1519, 3, 2, "", "minor", "Set the yaxis' tick locations and optionally tick labels."], [1519, 3, 2, "", "ticks", "Set the yaxis' tick locations and optionally tick labels."]], "foxes.utils.TabWindroseAxes.set_zorder": [[1520, 3, 2, "", "level", "Set the zorder for the artist.  Artists with lower zorder values are drawn first."]], "foxes.utils.TabWindroseAxes.sharex": [[1521, 3, 2, "", "other", "Share the x-axis with other."]], "foxes.utils.TabWindroseAxes.sharey": [[1522, 3, 2, "", "other", "Share the y-axis with other."]], "foxes.utils.TabWindroseAxes.specgram": [[1523, 3, 2, "", "Fc", "Plot a spectrogram."], [1523, 3, 2, "", "Fs", "Plot a spectrogram."], [1523, 3, 2, "", "NFFT", "Plot a spectrogram."], [1523, 3, 2, "", "cmap", "Plot a spectrogram."], [1523, 3, 2, "", "data", "Plot a spectrogram."], [1523, 3, 2, "", "detrend", "Plot a spectrogram."], [1523, 3, 2, "", "kwargs", "Plot a spectrogram."], [1523, 3, 2, "", "mode", "Plot a spectrogram."], [1523, 3, 2, "", "noverlap", "Plot a spectrogram."], [1523, 3, 2, "", "pad_to", "Plot a spectrogram."], [1523, 3, 2, "", "scale", "Plot a spectrogram."], [1523, 3, 2, "", "scale_by_freq", "Plot a spectrogram."], [1523, 3, 2, "", "sides", "Plot a spectrogram."], [1523, 3, 2, "", "vmax", "Plot a spectrogram."], [1523, 3, 2, "", "vmin", "Plot a spectrogram."], [1523, 3, 2, "", "window", "Plot a spectrogram."], [1523, 3, 2, "", "x", "Plot a spectrogram."], [1523, 3, 2, "", "xextent", "Plot a spectrogram."]], "foxes.utils.TabWindroseAxes.spy": [[1524, 3, 2, "", "Z", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "aspect", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "kwargs", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "marker", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "markersize", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "origin", "Plot the sparsity pattern of a 2D array."], [1524, 3, 2, "", "precision", "Plot the sparsity pattern of a 2D array."]], "foxes.utils.TabWindroseAxes.stackplot": [[1525, 3, 2, "", "args", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "baseline", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "colors", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "data", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "hatch", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "kwargs", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "labels", "Draw a stacked area plot or a streamgraph."], [1525, 3, 2, "", "x", "Draw a stacked area plot or a streamgraph."]], "foxes.utils.TabWindroseAxes.stairs": [[1526, 3, 2, "", "baseline", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "data", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "edges", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "fill", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "kwargs", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "orientation", "Draw a stepwise constant function as a line or a filled plot."], [1526, 3, 2, "", "values", "Draw a stepwise constant function as a line or a filled plot."]], "foxes.utils.TabWindroseAxes.start_pan": [[1528, 3, 2, "", "button", "Called when a pan operation has started."], [1528, 3, 2, "", "x", "Called when a pan operation has started."], [1528, 3, 2, "", "y", "Called when a pan operation has started."]], "foxes.utils.TabWindroseAxes.stem": [[1529, 3, 2, "", "args", "Create a stem plot."], [1529, 3, 2, "", "basefmt", "Create a stem plot."], [1529, 3, 2, "", "bottom", "Create a stem plot."], [1529, 3, 2, "", "data", "Create a stem plot."], [1529, 3, 2, "", "label", "Create a stem plot."], [1529, 3, 2, "", "linefmt", "Create a stem plot."], [1529, 3, 2, "", "markerfmt", "Create a stem plot."], [1529, 3, 2, "", "orientation", "Create a stem plot."]], "foxes.utils.TabWindroseAxes.step": [[1530, 3, 2, "", "args", "Make a step plot."], [1530, 3, 2, "", "data", "Make a step plot."], [1530, 3, 2, "", "kwargs", "Make a step plot."], [1530, 3, 2, "", "where", "Make a step plot."], [1530, 3, 2, "", "x", "Make a step plot."], [1530, 3, 2, "", "y", "Make a step plot."]], "foxes.utils.TabWindroseAxes.streamplot": [[1532, 3, 2, "", "arrowsize", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "arrowstyle", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "broken_streamlines", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "cmap", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "color", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "data", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "density", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "integration_direction", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "linewidth", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "maxlength", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "minlength", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "norm", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "start_points", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "transform", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "u", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "v", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "x", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "y", "Draw streamlines of a vector flow."], [1532, 3, 2, "", "zorder", "Draw streamlines of a vector flow."]], "foxes.utils.TabWindroseAxes.table": [[1533, 3, 2, "", "bbox", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "cellColours", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "cellLoc", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "cellText", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "colColours", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "colLabels", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "colLoc", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "colWidths", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "edges", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "kwargs", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "loc", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "rowColours", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "rowLabels", "Add a table to an ~.axes.Axes."], [1533, 3, 2, "", "rowLoc", "Add a table to an ~.axes.Axes."]], "foxes.utils.TabWindroseAxes.text": [[1535, 3, 2, "", "fontdict", "Add text to the Axes."], [1535, 3, 2, "", "kwargs", "Add text to the Axes."], [1535, 3, 2, "", "s", "Add text to the Axes."], [1535, 3, 2, "", "x", "Add text to the Axes."], [1535, 3, 2, "", "y", "Add text to the Axes."]], "foxes.utils.TabWindroseAxes.tick_params": [[1537, 3, 2, "", "axis", "Change the appearance of ticks, tick labels, and gridlines."], [1537, 3, 2, "", "kwargs", "Change the appearance of ticks, tick labels, and gridlines."]], "foxes.utils.TabWindroseAxes.ticklabel_format": [[1538, 3, 2, "", "axis", "Configure the .ScalarFormatter used by default for linear Axes."], [1538, 3, 2, "", "scilimits", "Configure the .ScalarFormatter used by default for linear Axes."], [1538, 3, 2, "", "style", "Configure the .ScalarFormatter used by default for linear Axes."], [1538, 3, 2, "", "useLocale", "Configure the .ScalarFormatter used by default for linear Axes."], [1538, 3, 2, "", "useMathText", "Configure the .ScalarFormatter used by default for linear Axes."], [1538, 3, 2, "", "useOffset", "Configure the .ScalarFormatter used by default for linear Axes."]], "foxes.utils.TabWindroseAxes.tricontour": [[1539, 3, 2, "", "args", "Draw contour lines on an unstructured triangular grid."], [1539, 3, 2, "", "kwargs", "Draw contour lines on an unstructured triangular grid."]], "foxes.utils.TabWindroseAxes.tricontourf": [[1540, 3, 2, "", "args", "Draw contour regions on an unstructured triangular grid."], [1540, 3, 2, "", "kwargs", "Draw contour regions on an unstructured triangular grid."]], "foxes.utils.TabWindroseAxes.tripcolor": [[1541, 3, 2, "", "alpha", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "args", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "cmap", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "facecolors", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "kwargs", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "norm", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "shading", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "vmax", "Create a pseudocolor plot of an unstructured triangular grid."], [1541, 3, 2, "", "vmin", "Create a pseudocolor plot of an unstructured triangular grid."]], "foxes.utils.TabWindroseAxes.triplot": [[1542, 3, 2, "", "args", "Draw an unstructured triangular grid as lines and/or markers."], [1542, 3, 2, "", "kwargs", "Draw an unstructured triangular grid as lines and/or markers."]], "foxes.utils.TabWindroseAxes.update": [[1545, 3, 2, "", "props", "Update this artist's properties from the dict props."]], "foxes.utils.TabWindroseAxes.update_datalim": [[1546, 3, 2, "", "updatex", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1546, 3, 2, "", "updatey", "Extend the ~.Axes.dataLim Bbox to include the given points."], [1546, 3, 2, "", "xys", "Extend the ~.Axes.dataLim Bbox to include the given points."]], "foxes.utils.TabWindroseAxes.update_from": [[1547, 3, 2, "", "other", "Copy properties from other to self."]], "foxes.utils.TabWindroseAxes.violin": [[1550, 3, 2, "", "positions", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "showextrema", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "showmeans", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "showmedians", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "side", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "vert", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "vpstats", "Draw a violin plot from pre-computed statistics."], [1550, 3, 2, "", "widths", "Draw a violin plot from pre-computed statistics."]], "foxes.utils.TabWindroseAxes.violinplot": [[1551, 3, 2, "", "bw_method", "Make a violin plot."], [1551, 3, 2, "", "data", "Make a violin plot."], [1551, 3, 2, "", "dataset", "Make a violin plot."], [1551, 3, 2, "", "points", "Make a violin plot."], [1551, 3, 2, "", "positions", "Make a violin plot."], [1551, 3, 2, "", "quantiles", "Make a violin plot."], [1551, 3, 2, "", "showextrema", "Make a violin plot."], [1551, 3, 2, "", "showmeans", "Make a violin plot."], [1551, 3, 2, "", "showmedians", "Make a violin plot."], [1551, 3, 2, "", "side", "Make a violin plot."], [1551, 3, 2, "", "vert", "Make a violin plot."], [1551, 3, 2, "", "widths", "Make a violin plot."]], "foxes.utils.TabWindroseAxes.vlines": [[1552, 3, 2, "", "colors", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "data", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "kwargs", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "label", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "linestyles", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "x", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "ymax", "Plot vertical lines at each x from ymin to ymax."], [1552, 3, 2, "", "ymin", "Plot vertical lines at each x from ymin to ymax."]], "foxes.utils.TabWindroseAxes.xaxis_date": [[1553, 3, 2, "", "tz", "Set up axis ticks and labels to treat data along the xaxis as dates."]], "foxes.utils.TabWindroseAxes.xcorr": [[1555, 3, 2, "", "*", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "**kwargs", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "data=None", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "detrend=&lt;function detrend_none&gt;", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "maxlags=10", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "normed=True", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "usevlines=True", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "x", "Plot the cross correlation between x and y."], [1555, 3, 2, "", "y", "Plot the cross correlation between x and y."]], "foxes.utils.TabWindroseAxes.yaxis_date": [[1556, 3, 2, "", "tz", "Set up axis ticks and labels to treat data along the yaxis as dates."]], "foxes.utils.WakeKFactory": [[1560, 2, 1, "", "__init__", "Constructor."], [1561, 2, 1, "", "__str__", "String representation"]], "foxes.utils.WakeKFactory.__init__": [[1560, 3, 2, "", "args", "Constructor."], [1560, 3, 2, "", "base", "Constructor."], [1560, 3, 2, "", "hints", "Constructor."], [1560, 3, 2, "", "kwargs", "Constructor."], [1560, 3, 2, "", "name_template", "Constructor."]], "foxes.utils.abl.neutral": [[1562, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1563, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1564, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.neutral.calc_ws": [[1562, 3, 2, "", "height", "Calculate wind speeds at given height"], [1562, 3, 2, "", "kappa", "Calculate wind speeds at given height"], [1562, 3, 2, "", "ustar", "Calculate wind speeds at given height"], [1562, 3, 2, "", "z0", "Calculate wind speeds at given height"]], "foxes.utils.abl.neutral.logz": [[1563, 3, 2, "", "height", "Calculates the log factor for wind speed profiles."], [1563, 3, 2, "", "z0", "Calculates the log factor for wind speed profiles."]], "foxes.utils.abl.neutral.ustar": [[1564, 3, 2, "", "h_ref", "Calculates the friction velocity, based on reference data."], [1564, 3, 2, "", "kappa", "Calculates the friction velocity, based on reference data."], [1564, 3, 2, "", "ws_ref", "Calculates the friction velocity, based on reference data."], [1564, 3, 2, "", "z0", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.sheared": [[1565, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"]], "foxes.utils.abl.sheared.calc_ws": [[1565, 3, 2, "", "WS0", "Calculate wind speeds at given height"], [1565, 3, 2, "", "height", "Calculate wind speeds at given height"], [1565, 3, 2, "", "height0", "Calculate wind speeds at given height"], [1565, 3, 2, "", "shear", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable": [[1566, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1567, 5, 1, "", "logz", "Calculates the log factor for wind speed profiles."], [1568, 5, 1, "", "psi", "The Psi function"], [1569, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.stable.calc_ws": [[1566, 3, 2, "", "height", "Calculate wind speeds at given height"], [1566, 3, 2, "", "kappa", "Calculate wind speeds at given height"], [1566, 3, 2, "", "psi", "Calculate wind speeds at given height"], [1566, 3, 2, "", "ustar", "Calculate wind speeds at given height"], [1566, 3, 2, "", "z0", "Calculate wind speeds at given height"]], "foxes.utils.abl.stable.logz": [[1567, 3, 2, "", "height", "Calculates the log factor for wind speed profiles."], [1567, 3, 2, "", "z0", "Calculates the log factor for wind speed profiles."]], "foxes.utils.abl.stable.psi": [[1568, 3, 2, "", "height", "The Psi function"], [1568, 3, 2, "", "mol", "The Psi function"]], "foxes.utils.abl.stable.ustar": [[1569, 3, 2, "", "h_ref", "Calculates the friction velocity, based on reference data."], [1569, 3, 2, "", "kappa", "Calculates the friction velocity, based on reference data."], [1569, 3, 2, "", "mol", "Calculates the friction velocity, based on reference data."], [1569, 3, 2, "", "ws_ref", "Calculates the friction velocity, based on reference data."], [1569, 3, 2, "", "z0", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable": [[1570, 5, 1, "", "calc_ws", "Calculate wind speeds at given height"], [1571, 5, 1, "", "psi", "The Psi function"], [1572, 5, 1, "", "ustar", "Calculates the friction velocity, based on reference data."]], "foxes.utils.abl.unstable.calc_ws": [[1570, 3, 2, "", "height", "Calculate wind speeds at given height"], [1570, 3, 2, "", "kappa", "Calculate wind speeds at given height"], [1570, 3, 2, "", "psi", "Calculate wind speeds at given height"], [1570, 3, 2, "", "ustar", "Calculate wind speeds at given height"], [1570, 3, 2, "", "z0", "Calculate wind speeds at given height"]], "foxes.utils.abl.unstable.psi": [[1571, 3, 2, "", "height", "The Psi function"], [1571, 3, 2, "", "mol", "The Psi function"]], "foxes.utils.abl.unstable.ustar": [[1572, 3, 2, "", "h_ref", "Calculates the friction velocity, based on reference data."], [1572, 3, 2, "", "kappa", "Calculates the friction velocity, based on reference data."], [1572, 3, 2, "", "mol", "Calculates the friction velocity, based on reference data."], [1572, 3, 2, "", "ws_ref", "Calculates the friction velocity, based on reference data."], [1572, 3, 2, "", "z0", "Calculates the friction velocity, based on reference data."]], "foxes.utils.all_subclasses": [[1573, 3, 2, "", "cls", "Searches all classes derived from some base class."]], "foxes.utils.cubic_roots": [[1574, 3, 2, "", "a0", "Calculate real roots of polynomials of degree 3."], [1574, 3, 2, "", "a1", "Calculate real roots of polynomials of degree 3."], [1574, 3, 2, "", "a2", "Calculate real roots of polynomials of degree 3."], [1574, 3, 2, "", "a3", "Calculate real roots of polynomials of degree 3."]], "foxes.utils.delta_wd": [[1575, 3, 2, "", "wd_a", "Calculates wd_b - wd_a."], [1575, 3, 2, "", "wd_b", "Calculates wd_b - wd_a."]], "foxes.utils.exec_python": [[1576, 3, 2, "", "&#x27;AssertionError&#x27;: &lt;class &#x27;AssertionError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;AttributeError&#x27;: &lt;class &#x27;AttributeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BaseException&#x27;: &lt;class &#x27;BaseException&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BaseExceptionGroup&#x27;: &lt;class &#x27;BaseExceptionGroup&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BlockingIOError&#x27;: &lt;class &#x27;BlockingIOError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BrokenPipeError&#x27;: &lt;class &#x27;BrokenPipeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BufferError&#x27;: &lt;class &#x27;BufferError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;BytesWarning&#x27;: &lt;class &#x27;BytesWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ChildProcessError&#x27;: &lt;class &#x27;ChildProcessError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ConnectionAbortedError&#x27;: &lt;class &#x27;ConnectionAbortedError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ConnectionError&#x27;: &lt;class &#x27;ConnectionError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ConnectionRefusedError&#x27;: &lt;class &#x27;ConnectionRefusedError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ConnectionResetError&#x27;: &lt;class &#x27;ConnectionResetError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;DeprecationWarning&#x27;: &lt;class &#x27;DeprecationWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;EOFError&#x27;: &lt;class &#x27;EOFError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;Ellipsis&#x27;: Ellipsis", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;EncodingWarning&#x27;: &lt;class &#x27;EncodingWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;EnvironmentError&#x27;: &lt;class &#x27;OSError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;Exception&#x27;: &lt;class &#x27;Exception&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ExceptionGroup&#x27;: &lt;class &#x27;ExceptionGroup&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;False&#x27;: False", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;FileExistsError&#x27;: &lt;class &#x27;FileExistsError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;FileNotFoundError&#x27;: &lt;class &#x27;FileNotFoundError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;FloatingPointError&#x27;: &lt;class &#x27;FloatingPointError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;FutureWarning&#x27;: &lt;class &#x27;FutureWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;GeneratorExit&#x27;: &lt;class &#x27;GeneratorExit&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;IOError&#x27;: &lt;class &#x27;OSError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ImportError&#x27;: &lt;class &#x27;ImportError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ImportWarning&#x27;: &lt;class &#x27;ImportWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;IndentationError&#x27;: &lt;class &#x27;IndentationError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;IndexError&#x27;: &lt;class &#x27;IndexError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;InterruptedError&#x27;: &lt;class &#x27;InterruptedError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;IsADirectoryError&#x27;: &lt;class &#x27;IsADirectoryError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;KeyError&#x27;: &lt;class &#x27;KeyError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;KeyboardInterrupt&#x27;: &lt;class &#x27;KeyboardInterrupt&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;LookupError&#x27;: &lt;class &#x27;LookupError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;MemoryError&#x27;: &lt;class &#x27;MemoryError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ModuleNotFoundError&#x27;: &lt;class &#x27;ModuleNotFoundError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;NameError&#x27;: &lt;class &#x27;NameError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;None&#x27;: None", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;NotADirectoryError&#x27;: &lt;class &#x27;NotADirectoryError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;NotImplemented&#x27;: NotImplemented", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;NotImplementedError&#x27;: &lt;class &#x27;NotImplementedError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;OSError&#x27;: &lt;class &#x27;OSError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;OverflowError&#x27;: &lt;class &#x27;OverflowError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;PendingDeprecationWarning&#x27;: &lt;class &#x27;PendingDeprecationWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;PermissionError&#x27;: &lt;class &#x27;PermissionError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ProcessLookupError&#x27;: &lt;class &#x27;ProcessLookupError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;RecursionError&#x27;: &lt;class &#x27;RecursionError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ReferenceError&#x27;: &lt;class &#x27;ReferenceError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ResourceWarning&#x27;: &lt;class &#x27;ResourceWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;RuntimeError&#x27;: &lt;class &#x27;RuntimeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;RuntimeWarning&#x27;: &lt;class &#x27;RuntimeWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;StopAsyncIteration&#x27;: &lt;class &#x27;StopAsyncIteration&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;StopIteration&#x27;: &lt;class &#x27;StopIteration&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;SyntaxError&#x27;: &lt;class &#x27;SyntaxError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;SyntaxWarning&#x27;: &lt;class &#x27;SyntaxWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;SystemError&#x27;: &lt;class &#x27;SystemError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;SystemExit&#x27;: &lt;class &#x27;SystemExit&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;TabError&#x27;: &lt;class &#x27;TabError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;TimeoutError&#x27;: &lt;class &#x27;TimeoutError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;True&#x27;: True", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;TypeError&#x27;: &lt;class &#x27;TypeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnboundLocalError&#x27;: &lt;class &#x27;UnboundLocalError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnicodeDecodeError&#x27;: &lt;class &#x27;UnicodeDecodeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnicodeEncodeError&#x27;: &lt;class &#x27;UnicodeEncodeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnicodeError&#x27;: &lt;class &#x27;UnicodeError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnicodeTranslateError&#x27;: &lt;class &#x27;UnicodeTranslateError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UnicodeWarning&#x27;: &lt;class &#x27;UnicodeWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;UserWarning&#x27;: &lt;class &#x27;UserWarning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ValueError&#x27;: &lt;class &#x27;ValueError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;Warning&#x27;: &lt;class &#x27;Warning&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ZeroDivisionError&#x27;: &lt;class &#x27;ZeroDivisionError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__build_class__&#x27;: &lt;built-in function __build_class__&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__debug__&#x27;: True", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__doc__&#x27;: &quot;Built-in functions", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__doc__&#x27;: None", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__import__&#x27;: &lt;built-in function __import__&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__name__&#x27;: &#x27;builtins&#x27;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__package__&#x27;: &#x27;&#x27;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;__spec__&#x27;: ModuleSpec(name=&#x27;builtins&#x27;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;abs&#x27;: &lt;built-in function abs&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;aiter&#x27;: &lt;built-in function aiter&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;all&#x27;: &lt;built-in function all&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;anext&#x27;: &lt;built-in function anext&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;any&#x27;: &lt;built-in function any&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ascii&#x27;: &lt;built-in function ascii&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;bin&#x27;: &lt;built-in function bin&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;bool&#x27;: &lt;class &#x27;bool&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;breakpoint&#x27;: &lt;built-in function breakpoint&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;bytearray&#x27;: &lt;class &#x27;bytearray&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;bytes&#x27;: &lt;class &#x27;bytes&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;callable&#x27;: &lt;built-in function callable&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;chr&#x27;: &lt;built-in function chr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;classmethod&#x27;: &lt;class &#x27;classmethod&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;compile&#x27;: &lt;built-in function compile&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;complex&#x27;: &lt;class &#x27;complex&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;credits&#x27;:     Thanks to CWI", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;delattr&#x27;: &lt;built-in function delattr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;dict&#x27;: &lt;class &#x27;dict&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;dir&#x27;: &lt;built-in function dir&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;divmod&#x27;: &lt;built-in function divmod&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;enumerate&#x27;: &lt;class &#x27;enumerate&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;eval&#x27;: &lt;built-in function eval&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;exec&#x27;: &lt;built-in function exec&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;exec_python&#x27;: &lt;function exec_python&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;filter&#x27;: &lt;class &#x27;filter&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;float&#x27;: &lt;class &#x27;float&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;format&#x27;: &lt;built-in function format&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;frozenset&#x27;: &lt;class &#x27;frozenset&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;getattr&#x27;: &lt;built-in function getattr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;globals&#x27;: &lt;built-in function globals&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;hasattr&#x27;: &lt;built-in function hasattr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;hash&#x27;: &lt;built-in function hash&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;help&#x27;: Type help() for interactive help", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;hex&#x27;: &lt;built-in function hex&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;id&#x27;: &lt;built-in function id&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;input&#x27;: &lt;built-in function input&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;int&#x27;: &lt;class &#x27;int&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;isinstance&#x27;: &lt;built-in function isinstance&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;issubclass&#x27;: &lt;built-in function issubclass&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;iter&#x27;: &lt;built-in function iter&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;len&#x27;: &lt;built-in function len&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;license&#x27;: Type license() to see the full license text", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;list&#x27;: &lt;class &#x27;list&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;locals&#x27;: &lt;built-in function locals&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;map&#x27;: &lt;class &#x27;map&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;max&#x27;: &lt;built-in function max&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;memoryview&#x27;: &lt;class &#x27;memoryview&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;min&#x27;: &lt;built-in function min&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;next&#x27;: &lt;built-in function next&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;object&#x27;: &lt;class &#x27;object&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;oct&#x27;: &lt;built-in function oct&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;open&#x27;: &lt;built-in function open&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;ord&#x27;: &lt;built-in function ord&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;pow&#x27;: &lt;built-in function pow&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;print&#x27;: &lt;built-in function print&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;property&#x27;: &lt;class &#x27;property&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;range&#x27;: &lt;class &#x27;range&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;repr&#x27;: &lt;built-in function repr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;reversed&#x27;: &lt;class &#x27;reversed&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;round&#x27;: &lt;built-in function round&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;set&#x27;: &lt;class &#x27;set&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;setattr&#x27;: &lt;built-in function setattr&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;slice&#x27;: &lt;class &#x27;slice&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;sorted&#x27;: &lt;built-in function sorted&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;staticmethod&#x27;: &lt;class &#x27;staticmethod&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;str&#x27;: &lt;class &#x27;str&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;sum&#x27;: &lt;built-in function sum&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;super&#x27;: &lt;class &#x27;super&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;tuple&#x27;: &lt;class &#x27;tuple&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;type&#x27;: &lt;class &#x27;type&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;vars&#x27;: &lt;built-in function vars&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "&#x27;zip&#x27;: &lt;class &#x27;zip&#x27;&gt;}", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "CNRI", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "but can be useful in modules that provide\\nobjects with the same name as a built-in value", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "exceptions", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "globals={&#x27;__builtins__&#x27;: {&#x27;ArithmeticError&#x27;: &lt;class &#x27;ArithmeticError&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "indicator=&#x27;%&#x27;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "locals={}", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "newline=&#x27;;&#x27;", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "origin=&#x27;built-in&#x27;)", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "s", "Executes strings that start with the indicator as python commands, returns one value"], [1576, 3, 2, "", "types", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__cached__&#x27;: &#x27;/home/jonas/gits/wakes/foxes/foxes/utils/__pycache__/exec_python.cpython-312": [[1576, 3, 2, "", "pyc&#x27;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__file__&#x27;: &#x27;/home/jonas/gits/wakes/foxes/foxes/utils/exec_python": [[1576, 3, 2, "", "py&#x27;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__loader__&#x27;: &lt;_frozen_importlib_external": [[1576, 3, 2, "", "SourceFileLoader object&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__loader__&#x27;: &lt;class &#x27;_frozen_importlib": [[1576, 3, 2, "", "BuiltinImporter&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__name__&#x27;: &#x27;foxes.utils": [[1576, 3, 2, "", "exec_python&#x27;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__package__&#x27;: &#x27;foxes": [[1576, 3, 2, "", "utils&#x27;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;__spec__&#x27;: ModuleSpec(name=&#x27;foxes.utils": [[1576, 3, 2, "", "exec_python&#x27;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;copyright&#x27;: Copyright (c) 2001-2023 Python Software Foundation. All Rights Reserved.  Copyright (c) 2000 BeOpen.com. All Rights Reserved.  Copyright (c) 1995-2001 Corporation for National Research Initiatives. All Rights Reserved": [[1576, 3, 2, "", "  Copyright (c) 1991-1995 Stichting Mathematisch Centrum", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;exit&#x27;: Use exit() or Ctrl-D (i.e": [[1576, 3, 2, "", " EOF) to exit", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;np&#x27;: &lt;module &#x27;numpy&#x27; from &#x27;/home/jonas/venv/foxes/lib/python3.12/site-packages/numpy/__init__": [[1576, 3, 2, "", "py&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;pd&#x27;: &lt;module &#x27;pandas&#x27; from &#x27;/home/jonas/venv/foxes/lib/python3.12/site-packages/pandas/__init__": [[1576, 3, 2, "", "py&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;plt&#x27;: &lt;module &#x27;matplotlib.pyplot&#x27; from &#x27;/home/jonas/venv/foxes/lib/python3.12/site-packages/matplotlib/pyplot": [[1576, 3, 2, "", "py&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;quit&#x27;: Use quit() or Ctrl-D (i.e": [[1576, 3, 2, "", " EOF) to exit", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.&#x27;xr&#x27;: &lt;module &#x27;xarray&#x27; from &#x27;/home/jonas/venv/foxes/lib/python3.12/site-packages/xarray/__init__": [[1576, 3, 2, "", "py&#x27;&gt;}", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.Amsterdam. All Rights Reserved": [[1576, 3, 2, "", "", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.BeOpen": [[1576, 3, 2, "", "com", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.Zope Corporation and a cast of thousands     for supporting Python development.  See www.python.org for more information": [[1576, 3, 2, "", "", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.and other objects": [[1576, 3, 2, "", "\\n\\nThis module provides direct access to all &#x27;built-in&#x27;\\nidentifiers of Python; for example", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.builtins.len is\\nthe full name for the built-in function len()": [[1576, 3, 2, "", "\\n\\nThis module is not normally accessed explicitly by most\\napplications", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.but in\\nwhich the built-in of that name is also needed": [[1576, 3, 2, "", "&quot;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.loader=&lt;_frozen_importlib_external": [[1576, 3, 2, "", "SourceFileLoader object&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.loader=&lt;class &#x27;_frozen_importlib": [[1576, 3, 2, "", "BuiltinImporter&#x27;&gt;", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.or help(object) for help about object": [[1576, 3, 2, "", "", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.exec_python.origin=&#x27;/home/jonas/gits/wakes/foxes/foxes/utils/exec_python": [[1576, 3, 2, "", "py&#x27;)", "Executes strings that start with the indicator as python commands, returns one value"]], "foxes.utils.geom2d": [[1577, 0, 1, "", "AreaGeometry", "Abstract base class for closed 2D geometries."], [1584, 0, 1, "", "AreaIntersection", "The intersection of area geometries."], [1586, 0, 1, "", "AreaUnion", "The union of area geometries."], [1594, 0, 1, "", "Circle", "This class represents the area of a circle."], [1601, 0, 1, "", "ClosedPolygon", "This class represents a closed 2D polygon."], [1608, 0, 1, "", "HalfPlane", "This class represents a half plane in 2d."], [1616, 0, 1, "", "InvertedAreaGeometry", "Base class for inverted geometries."]], "foxes.utils.geom2d.AreaGeometry": [[1578, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1579, 2, 1, "", "inverse", "Get the inverted geometry"], [1580, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1581, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1582, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1583, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaGeometry.add_to_figure": [[1578, 3, 2, "", "ax", "Add image to (x,y) figure."], [1578, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1578, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1578, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1578, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.AreaGeometry.points_distance": [[1582, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1582, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.AreaGeometry.points_inside": [[1583, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaIntersection": [[1585, 2, 1, "", "__new__", "Constructor."]], "foxes.utils.geom2d.AreaIntersection.__new__": [[1585, 3, 2, "", "cls", "Constructor."], [1585, 3, 2, "", "geometries", "Constructor."]], "foxes.utils.geom2d.AreaUnion": [[1587, 2, 1, "", "__init__", "Constructor."], [1588, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1589, 2, 1, "", "inverse", "Get the inverted geometry"], [1590, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1591, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1592, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1593, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.AreaUnion.__init__": [[1587, 3, 2, "", "geometries", "Constructor."]], "foxes.utils.geom2d.AreaUnion.add_to_figure": [[1588, 3, 2, "", "ax", "Add image to (x,y) figure."], [1588, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1588, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1588, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1588, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.AreaUnion.points_distance": [[1592, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1592, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.AreaUnion.points_inside": [[1593, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle": [[1595, 2, 1, "", "__init__", "Constructor."], [1596, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1597, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1598, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1599, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1600, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.Circle.__init__": [[1595, 3, 2, "", "centre", "Constructor."], [1595, 3, 2, "", "radius", "Constructor."]], "foxes.utils.geom2d.Circle.add_to_figure": [[1596, 3, 2, "", "ax", "Add image to (x,y) figure."], [1596, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1596, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1596, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1596, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.Circle.points_distance": [[1599, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1599, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.Circle.points_inside": [[1600, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon": [[1602, 2, 1, "", "__init__", "Constructor."], [1603, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1604, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1605, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1606, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1607, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.ClosedPolygon.__init__": [[1602, 3, 2, "", "points", "Constructor."]], "foxes.utils.geom2d.ClosedPolygon.add_to_figure": [[1603, 3, 2, "", "ax", "Add image to (x,y) figure."], [1603, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1603, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1603, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1603, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.ClosedPolygon.points_distance": [[1606, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1606, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.ClosedPolygon.points_inside": [[1607, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane": [[1609, 2, 1, "", "__init__", "Constructor."], [1610, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1611, 2, 1, "", "inverse", "Get the inverted geometry"], [1612, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1613, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1614, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1615, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.HalfPlane.__init__": [[1609, 3, 2, "", "centre", "Constructor."], [1609, 3, 2, "", "n", "Constructor."]], "foxes.utils.geom2d.HalfPlane.add_to_figure": [[1610, 3, 2, "", "ax", "Add image to (x,y) figure."], [1610, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1610, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1610, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1610, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.HalfPlane.points_distance": [[1614, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1614, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.HalfPlane.points_inside": [[1615, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry": [[1617, 2, 1, "", "__init__", "Constructor."], [1618, 2, 1, "", "add_to_figure", "Add image to (x,y) figure."], [1619, 2, 1, "", "inverse", "Get the inverted geometry"], [1620, 2, 1, "", "p_max", "Returns maximal (x,y) point."], [1621, 2, 1, "", "p_min", "Returns minimal (x,y) point."], [1622, 2, 1, "", "points_distance", "Calculates point distances wrt boundary."], [1623, 2, 1, "", "points_inside", "Tests if points are inside the geometry."]], "foxes.utils.geom2d.InvertedAreaGeometry.__init__": [[1617, 3, 2, "", "geometry", "Constructor."]], "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure": [[1618, 3, 2, "", "ax", "Add image to (x,y) figure."], [1618, 3, 2, "", "fill_mode", "Add image to (x,y) figure."], [1618, 3, 2, "", "pars_boundary", "Add image to (x,y) figure."], [1618, 3, 2, "", "pars_distance", "Add image to (x,y) figure."], [1618, 3, 2, "", "show_boundary", "Add image to (x,y) figure."]], "foxes.utils.geom2d.InvertedAreaGeometry.points_distance": [[1622, 3, 2, "", "points", "Calculates point distances wrt boundary."], [1622, 3, 2, "", "return_nearest", "Calculates point distances wrt boundary."]], "foxes.utils.geom2d.InvertedAreaGeometry.points_inside": [[1623, 3, 2, "", "points", "Tests if points are inside the geometry."]], "foxes.utils.import_module": [[1624, 3, 2, "", "hint", "Imports a module dynamically."], [1624, 3, 2, "", "name", "Imports a module dynamically."], [1624, 3, 2, "", "package", "Imports a module dynamically."]], "foxes.utils.load_module": [[1625, 3, 2, "", "name", "Imports a module from a file path"], [1625, 3, 2, "", "path", "Imports a module from a file path"]], "foxes.utils.print_mem": [[1626, 3, 2, "", "max_csize", "Prints the memory consumption of a model and its components"], [1626, 3, 2, "", "min_csize", "Prints the memory consumption of a model and its components"], [1626, 3, 2, "", "obj", "Prints the memory consumption of a model and its components"], [1626, 3, 2, "", "pre_str", "Prints the memory consumption of a model and its components"]], "foxes.utils.random_xy_square": [[1627, 3, 2, "", "growth", "Creates random xy positions within a square, with mean (0, 0)"], [1627, 3, 2, "", "min_dist", "Creates random xy positions within a square, with mean (0, 0)"], [1627, 3, 2, "", "n", "Creates random xy positions within a square, with mean (0, 0)"], [1627, 3, 2, "", "seed", "Creates random xy positions within a square, with mean (0, 0)"], [1627, 3, 2, "", "verbosity", "Creates random xy positions within a square, with mean (0, 0)"], [1627, 3, 2, "", "xmax_ini", "Creates random xy positions within a square, with mean (0, 0)"]], "foxes.utils.read_shp": [[1628, 3, 2, "", "fname", "Read a shapefile file"], [1628, 3, 2, "", "kwargs", "Read a shapefile file"]], "foxes.utils.read_shp_polygons": [[1629, 3, 2, "", "fname", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "geom_col", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "kwargs", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "name_col", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "names", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "ret_utm_zone", "Reads the polygon points from a shp file."], [1629, 3, 2, "", "to_utm", "Reads the polygon points from a shp file."]], "foxes.utils.read_tab_file": [[1630, 3, 2, "", "fname", "Reads a tab file into a Dataset"], [1630, 3, 2, "", "normalize", "Reads a tab file into a Dataset"]], "foxes.utils.shp2csv": [[1631, 3, 2, "", "ifile", "Read shapefile file, write csv file"], [1631, 3, 2, "", "in_kwargs", "Read shapefile file, write csv file"], [1631, 3, 2, "", "ofile", "Read shapefile file, write csv file"], [1631, 3, 2, "", "out_kwargs", "Read shapefile file, write csv file"], [1631, 3, 2, "", "verbosity", "Read shapefile file, write csv file"]], "foxes.utils.shp2geom2d": [[1632, 3, 2, "", "args", "Read shapefile into geom2d geometry"], [1632, 3, 2, "", "kwargs", "Read shapefile into geom2d geometry"], [1632, 3, 2, "", "ret_utm_zone", "Read shapefile into geom2d geometry"]], "foxes.utils.sqrt_reg": [[1633, 3, 2, "", "x", "A regularized sqrt function, producing non-zero values also for smallish negative x."], [1633, 3, 2, "", "x0", "A regularized sqrt function, producing non-zero values also for smallish negative x."]], "foxes.utils.two_circles": [[1634, 5, 1, "", "area", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1635, 5, 1, "", "calc_area", "Calculates the intersection of two circles."]], "foxes.utils.two_circles.area": [[1634, 3, 2, "", "d", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1634, 3, 2, "", "r1", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."], [1634, 3, 2, "", "r2", "Calculates the intersection of two circles with radii r1, r2 and a centre point distance d."]], "foxes.utils.two_circles.calc_area": [[1635, 3, 2, "", "d", "Calculates the intersection of two circles."], [1635, 3, 2, "", "r1", "Calculates the intersection of two circles."], [1635, 3, 2, "", "r2", "Calculates the intersection of two circles."]], "foxes.utils.uv2wd": [[1636, 3, 2, "", "axis", "Calculate wind direction from wind vectors."], [1636, 3, 2, "", "uv", "Calculate wind direction from wind vectors."]], "foxes.utils.wd2uv": [[1637, 3, 2, "", "axis", "Calculate wind vectors from wind directions in degrees."], [1637, 3, 2, "", "wd", "Calculate wind vectors from wind directions in degrees."], [1637, 3, 2, "", "ws", "Calculate wind vectors from wind directions in degrees."]], "foxes.utils.wd2wdvec": [[1638, 3, 2, "", "axis", "Calculate wind direction vectors from wind directions in degrees."], [1638, 3, 2, "", "wd", "Calculate wind direction vectors from wind directions in degrees."], [1638, 3, 2, "", "ws", "Calculate wind direction vectors from wind directions in degrees."]], "foxes.utils.wdvec2wd": [[1639, 3, 2, "", "axis", "Calculate wind direction from wind direction vectors."], [1639, 3, 2, "", "wdvec", "Calculate wind direction from wind direction vectors."]], "foxes.utils.write_nc": [[1640, 3, 2, "", "complevel", "Writes a dataset to netCDF file"], [1640, 3, 2, "", "ds", "Writes a dataset to netCDF file"], [1640, 3, 2, "", "fpath", "Writes a dataset to netCDF file"], [1640, 3, 2, "", "kwargs", "Writes a dataset to netCDF file"], [1640, 3, 2, "", "round", "Writes a dataset to netCDF file"], [1640, 3, 2, "", "verbosity", "Writes a dataset to netCDF file"]], "foxes.variables": [[1641, 6, 1, "", "AMB_CAP", "Ambient capacity, equals AMB_P/P_nominal"], [1642, 6, 1, "", "AMB_CT", "The ambient thrust coefficient"], [1643, 6, 1, "", "AMB_P", "The ambient power, unit depends on user choice"], [1644, 6, 1, "", "AMB_REWS", "Ambient rotor effective wind speed in m/s"], [1645, 6, 1, "", "AMB_REWS2", "Ambient rotor effective wind speed in m/s, calculated from second moment"], [1646, 6, 1, "", "AMB_REWS3", "Ambient rotor effective wind speed in m/s, calculated from third moment"], [1647, 6, 1, "", "AMB_RHO", "The ambient air density in kg/m3"], [1648, 6, 1, "", "AMB_T", "The ambient temperature in Kelvin"], [1649, 6, 1, "", "AMB_TI", "The ambient turbulence intensity"], [1650, 6, 1, "", "AMB_WD", "The ambient wind direction in degrees"], [1651, 6, 1, "", "AMB_WS", "The ambient wind speed in m/s"], [1652, 6, 1, "", "AMB_YAW", "The ambient absolute yaw angle of  a turbine in degrees"], [1653, 6, 1, "", "AMB_YAWM", "The ambient relative yaw angle of  a turbine in degrees"], [1654, 6, 1, "", "AMB_YLD", "Ambient yield in GWh/a"], [1655, 6, 1, "", "CAP", "Capacity, equals P/P_nominal"], [1656, 6, 1, "", "CT", "The thrust coefficient"], [1657, 6, 1, "", "D", "The rotor diameter in m"], [1658, 6, 1, "", "DEFAULT_DIGITS", "The default output digits"], [1659, 6, 1, "", "EFF", "Efficiency, equals P/AMB_P"], [1660, 6, 1, "", "H", "The height over ground in m"], [1661, 6, 1, "", "K", "Wake growth parameter"], [1662, 6, 1, "", "KB", "KTI value for zero TI, K = KB + KTI*TI"], [1663, 6, 1, "", "KTI", "Factor between K and TI, K = KB + KTI*TI"], [1664, 6, 1, "", "MAX_P", "The maximal power, for derating/boost"], [1665, 6, 1, "", "MOL", "The Monin\u2013Obukhov length in m"], [1666, 6, 1, "", "ORDER", "The turbine order"], [1667, 6, 1, "", "ORDER_INV", "The inverse of the turbine order"], [1668, 6, 1, "", "ORDER_SSEL", "The states selection for applying the order"], [1669, 6, 1, "", "P", "The power, unit depends on user choice"], [1670, 6, 1, "", "PA_ALPHA", "The alpha parameter of the PorteAgel wake model"], [1671, 6, 1, "", "PA_BETA", "The beta parameter of the PorteAgel wake model"], [1672, 6, 1, "", "REWS", "Rotor effective wind speed in m/s"], [1673, 6, 1, "", "REWS2", "Rotor effective wind speed in m/s, calculated from second moment"], [1674, 6, 1, "", "REWS3", "Rotor effective wind speed in m/s, calculated from third moment"], [1675, 6, 1, "", "RHO", "The air density in kg/m3"], [1676, 6, 1, "", "SHEAR", "The shear exponent"], [1677, 6, 1, "", "T", "The temperature in Kelvin"], [1678, 6, 1, "", "TI", "The turbulence intensity"], [1679, 6, 1, "", "TXYH", "The turbine rotor centre coordinate  vector (x, y, height)"], [1680, 6, 1, "", "WD", "The wind direction in degrees"], [1681, 6, 1, "", "WEIGHT", "The statistical weight of a state"], [1682, 6, 1, "", "WS", "The wind speed in m/s"], [1683, 6, 1, "", "X", "The x coordinate in m"], [1684, 6, 1, "", "Y", "The y coordinate in m"], [1685, 6, 1, "", "YAW", "The absolute yaw angle of a turbine in degrees"], [1686, 6, 1, "", "YAWM", "The relative yaw angle of a turbine in degrees"], [1687, 6, 1, "", "YLD", "Yield in GWh/a"], [1688, 6, 1, "", "Z0", "The roughness length in m"], [1689, 6, 1, "", "amb2var", "Mapping from ambient variable to the corresponding waked variable"], [1690, 5, 1, "", "get_default_digits", "Gets the default number of output digits"], [1691, 6, 1, "", "var2amb", "Mapping from variable to the corresponding ambient variable"]], "foxes.variables.get_default_digits": [[1690, 3, 2, "", "variable", "Gets the default number of output digits"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:parameter", "4": "py:property", "5": "py:function", "6": "py:data"}, "terms": {"": [0, 39, 43, 46, 49, 53, 59, 63, 67, 87, 92, 101, 172, 173, 187, 188, 191, 195, 213, 222, 225, 237, 243, 244, 252, 260, 266, 283, 288, 289, 296, 306, 314, 329, 332, 356, 416, 417, 419, 427, 430, 432, 437, 447, 449, 451, 453, 466, 468, 477, 485, 486, 488, 496, 500, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1037, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1143, 1148, 1178, 1179, 1199, 1220, 1222, 1236, 1240, 1242, 1250, 1251, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1298, 1314, 1328, 1368, 1376, 1383, 1391, 1393, 1397, 1398, 1399, 1400, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1442, 1443, 1444, 1447, 1451, 1453, 1462, 1464, 1472, 1480, 1497, 1505, 1511, 1518, 1523, 1525, 1526, 1529, 1532, 1535, 1541, 1545, 1550, 1551, 1552, 1555, 1574, 1576, 1644, 1645, 1646, 1651, 1672, 1673, 1674, 1682, 1706, 1708, 1710, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "0": [1, 17, 27, 46, 49, 53, 56, 59, 63, 67, 70, 72, 74, 76, 79, 81, 83, 85, 87, 92, 93, 101, 106, 125, 131, 157, 158, 169, 170, 181, 183, 185, 195, 198, 199, 213, 225, 229, 230, 231, 237, 244, 252, 253, 262, 265, 267, 269, 272, 274, 276, 283, 289, 296, 299, 306, 308, 311, 327, 329, 332, 339, 343, 344, 351, 355, 358, 364, 369, 408, 410, 411, 412, 413, 414, 415, 416, 421, 423, 425, 427, 429, 430, 432, 433, 438, 440, 442, 443, 445, 447, 448, 449, 451, 453, 459, 461, 464, 466, 468, 471, 473, 475, 477, 480, 485, 490, 492, 494, 496, 497, 501, 503, 504, 506, 507, 510, 512, 514, 515, 516, 517, 518, 519, 521, 524, 525, 526, 527, 528, 529, 530, 534, 537, 538, 540, 541, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 576, 578, 581, 584, 586, 589, 593, 594, 599, 602, 603, 606, 609, 610, 613, 618, 621, 623, 624, 627, 630, 633, 636, 637, 639, 641, 645, 646, 649, 650, 651, 654, 656, 661, 664, 667, 672, 674, 676, 677, 680, 681, 686, 692, 693, 696, 697, 698, 702, 703, 706, 707, 708, 712, 714, 715, 717, 718, 722, 723, 726, 727, 731, 735, 739, 743, 747, 751, 754, 758, 763, 764, 769, 771, 776, 783, 784, 791, 792, 795, 798, 799, 800, 801, 802, 807, 809, 812, 817, 819, 822, 827, 829, 834, 837, 842, 845, 850, 853, 854, 859, 862, 863, 869, 876, 877, 880, 882, 883, 886, 888, 908, 911, 916, 917, 920, 922, 923, 926, 927, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1007, 1011, 1020, 1021, 1038, 1040, 1041, 1043, 1044, 1051, 1053, 1056, 1057, 1062, 1079, 1080, 1081, 1082, 1083, 1084, 1095, 1108, 1134, 1178, 1240, 1250, 1251, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1267, 1269, 1271, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1319, 1353, 1397, 1398, 1399, 1402, 1404, 1405, 1406, 1411, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1435, 1436, 1442, 1443, 1444, 1447, 1450, 1451, 1460, 1462, 1492, 1496, 1497, 1499, 1502, 1508, 1509, 1515, 1516, 1523, 1524, 1526, 1529, 1531, 1532, 1535, 1537, 1538, 1539, 1540, 1541, 1550, 1551, 1555, 1558, 1562, 1564, 1566, 1569, 1570, 1572, 1574, 1576, 1626, 1627, 1631, 1633, 1637, 1638, 1640, 1698, 1706, 1707, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735], "00": [520, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1733, 1734], "000000": [1726, 1730, 1731, 1732, 1734], "000000000": [1724, 1729], "0001": 1722, "0001230528308906": 1719, "0001563449299843": 1719, "0002": 1724, "0002arrai": 1724, "00033": 862, "00042": [1719, 1733], "000e": [1718, 1720, 1731], "001": [1253, 1722], "00114009": 1718, "00158": [1719, 1733], "001880": 1726, "001_dx100": 1722, "002": 876, "00244": [1719, 1733], "00319": [1719, 1733], "00367": 1719, "0036700002": 1733, "004": [1716, 1722], "005": [1411, 1435], "00546394": 1724, "006e": 1718, "008": 1729, "008000": 1431, "008e": 1718, "00arrai": 1724, "00it": [], "01": [520, 876, 1633, 1706, 1718, 1719, 1722, 1723, 1724, 1731, 1732], "011e": 1718, "012039": 862, "012903": 1732, "013": [1720, 1731], "0167": 862, "01818": 1729, "01t00": 1724, "01t01": 1724, "01t02": 1724, "02": [1411, 1627, 1718, 1719, 1722, 1724], "021033": 1732, "022063": [916, 922], "02214303": 1724, "027": 1719, "02820137": 1718, "02arrai": 1724, "02d": 1729, "02it": [], "03": [712, 1718, 1719, 1720, 1724, 1729, 1730, 1731, 1732], "032": 1719, "0325": 863, "0325397b": 1713, "0325851b": 1713, "03463212": 1718, "03873": 986, "03arrai": [1718, 1724], "03ee3008a": 1713, "03sf0635": 1713, "04": [1716, 1717, 1718, 1719, 1722, 1724], "042": 1722, "0447358": 1724, "048": 1719, "049066": 1721, "04_dx100": 1722, "04arrai": [1718, 1724], "04it": 1725, "05": [722, 1095, 1143, 1171, 1178, 1199, 1411, 1716, 1718, 1719, 1724, 1725, 1726, 1728, 1732, 1733, 1734], "050318": 1732, "0504": [1719, 1732], "0513": 1719, "0514": [1719, 1732], "0518": 1719, "0522": [1719, 1732], "0523": [1719, 1732], "053010": 1726, "05347866": 1718, "05464": 1711, "055085": 1732, "0586": [540, 541], "05924991": 1718, "05e": 1718, "05it": [1720, 1731], "06": [722, 1718, 1719, 1720, 1723, 1724, 1731, 1732], "06269347": 1724, "06307007": 1724, "063345": 1726, "06336152": 1724, "06398366": 1724, "06428775": 1724, "06453622": 1724, "06495339": 1718, "064e": 1724, "0654317": 1724, "06578986": 1718, "06622469": 1724, "06it": 1732, "07": [722, 801, 802, 882, 883, 1718, 1719, 1720, 1721, 1724, 1731], "07219706": 1718, "07354617": 1718, "073887": 1724, "07479419": 1718, "075": 1722, "076947": 1730, "07797421": 1718, "07873832": 1718, "08": [1718, 1724, 1731], "08118561": 1724, "084442": 1724, "08463402": 1718, "08488862": 1724, "08658875": 1724, "08658958": 1724, "0868863": 1718, "08783168": 1724, "0883": [540, 541], "09": [1718, 1719, 1724, 1732], "09020148": 1718, "093786": 1726, "094e": 1731, "095677": 1724, "09567727": 1724, "096026": 1726, "099583": 1732, "099e": 1731, "0arrai": [1718, 1723, 1724], "1": [1, 17, 27, 92, 93, 111, 131, 157, 158, 179, 187, 198, 199, 201, 210, 222, 260, 266, 299, 314, 367, 369, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 417, 486, 519, 521, 524, 526, 527, 540, 594, 595, 602, 609, 672, 673, 675, 677, 693, 703, 712, 713, 714, 715, 723, 845, 846, 853, 862, 869, 916, 917, 1004, 1007, 1009, 1011, 1018, 1020, 1021, 1038, 1056, 1057, 1062, 1077, 1078, 1095, 1105, 1108, 1109, 1110, 1111, 1134, 1143, 1146, 1152, 1178, 1199, 1218, 1240, 1250, 1251, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1269, 1271, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1319, 1352, 1397, 1398, 1399, 1402, 1406, 1411, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1435, 1436, 1442, 1443, 1444, 1450, 1451, 1453, 1460, 1462, 1480, 1495, 1502, 1509, 1516, 1523, 1524, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1550, 1551, 1555, 1574, 1576, 1627, 1631, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1698, 1703, 1706, 1709, 1710, 1712, 1713, 1714, 1716, 1717, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "10": [0, 540, 801, 845, 853, 854, 862, 876, 882, 888, 916, 922, 1134, 1240, 1266, 1285, 1291, 1397, 1399, 1406, 1414, 1434, 1445, 1446, 1523, 1538, 1555, 1576, 1711, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "100": [0, 432, 623, 624, 672, 674, 676, 681, 692, 698, 702, 708, 712, 1134, 1269, 1397, 1551, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734], "1000": [131, 623, 624, 1032, 1208, 1209, 1230, 1269, 1397, 1398, 1535, 1630, 1698, 1718, 1720, 1723, 1725, 1726, 1728, 1729, 1731, 1732, 1733, 1734], "10000": [1269, 1717, 1718, 1722, 1724], "100000": 1726, "1000000": [131, 1698], "1000000000": [131, 1698], "1000000000000": [131, 1698], "1000779": [1719, 1732], "1001": 1725, "100102": 1719, "1001061": 1719, "1002": [0, 845, 853, 854], "100290": [1719, 1732], "1002993": [1719, 1732], "1003540": 1719, "1004330": [1719, 1732], "1004753": [1719, 1732], "1004849": 1719, "100780": [1719, 1732], "100coordin": 1724, "101084205": 1713, "1016": [862, 876], "1017": [801, 882, 888], "101872": [1719, 1732], "102": 712, "103005": 1719, "103181": 1724, "103659": [1719, 1732], "103kb": 1729, "104162": 1719, "104mb": 1724, "1050": 1718, "1054": 1721, "10639": 1724, "10640": 1724, "10641": 1724, "10642": 1724, "10643": 1724, "1066": 1734, "106903": 1726, "1088": [862, 916, 922], "10it": 1731, "10t05": 1729, "10t06": 1729, "10t07": 1729, "10t08": 1729, "10t09": 1729, "10t10": 1729, "10t11": 1729, "10t12": 1729, "10t13": 1729, "10t14": 1729, "10t15": 1729, "10t16": 1729, "10t17": 1729, "10t18": 1729, "10t19": 1729, "10t20": 1729, "10t21": 1729, "10t22": 1729, "10t23": 1729, "11": [0, 1264, 1268, 1269, 1432, 1715, 1718, 1719, 1724, 1726, 1727, 1732, 1733, 1734], "110": 1728, "1106": 1730, "110762": 1726, "111": 1729, "11128772": 1718, "1127": 1721, "1156": 1721, "116": 1719, "1167": 1730, "1168": 1718, "116827": 1732, "1172": 1718, "1179": 1718, "1183": 1718, "1185": 1721, "1188": 1718, "119": [1576, 1718, 1722, 1724], "119290": 1731, "119e": 1731, "11it": [], "11kb": 1718, "11t00": 1729, "11t01": 1729, "11t02": 1729, "11t03": 1729, "11t04": 1729, "11t05": 1729, "11t06": 1729, "11t07": 1729, "11t08": 1729, "11t09": 1729, "11t10": 1729, "11t11": 1729, "11t12": 1729, "11t13": 1729, "11t14": 1729, "11t15": 1729, "11t16": 1729, "11t17": 1729, "11t18": 1729, "11t19": 1729, "11t20": 1729, "11t21": 1729, "11t22": 1729, "11t23": 1729, "12": [0, 391, 845, 853, 1291, 1431, 1535, 1576, 1715, 1718, 1719, 1720, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1733, 1734], "120": [1716, 1718, 1719, 1720, 1729, 1731], "1200": [1718, 1726], "1203": 1718, "1216": 1724, "1218": 1726, "122": 1724, "122949": 1721, "1250": 1718, "126": 1722, "1260": 1718, "12610195": 1718, "127": 1724, "128": [1492, 1523], "129": [1723, 1726], "1290": 1730, "1294": 1718, "12it": 1720, "12kb": 1723, "12t00": 1729, "12t01": 1729, "12t02": 1729, "12t03": 1729, "12t04": 1729, "12t05": 1729, "12t06": 1729, "12t07": 1729, "12t08": 1729, "12t09": 1729, "12t10": 1729, "12t11": 1729, "13": [0, 1715, 1718, 1719, 1723, 1724, 1726, 1727, 1731], "1300": 1718, "1301": 1718, "1311": 1718, "1324": 1718, "1334": 1724, "13375661": 1718, "1343": 1718, "1350": 1718, "1352": 1721, "1368": 1718, "1396": 1721, "1397": 1724, "13977828": 1724, "14": [854, 1718, 1719, 1723, 1724, 1726, 1727, 1732], "1400": 1718, "1406": [1718, 1721], "141": 1724, "1413": 1718, "1418": 712, "143": 1724, "14313392": 1718, "143680": 1732, "14402911": 1718, "144203": 1721, "145": 1719, "1450": 1718, "1456": 1732, "145984": 1732, "1460": 1723, "1468": 1718, "1473": 1718, "1474": 1721, "147671": 1732, "1484": 1718, "1496": 1718, "149890": 1723, "15": [862, 1269, 1271, 1291, 1406, 1718, 1719, 1721, 1723, 1724, 1726, 1727, 1728, 1732, 1733], "150": [1718, 1719, 1722, 1723, 1732, 1733], "15000": [1722, 1723, 1730], "15017697": 1724, "1502": 1724, "1502arrai": 1724, "1503": 1718, "151": 1726, "1511": 1718, "1512": 1723, "152294": 1726, "15292029": 1718, "15318621": 1724, "1532": 1731, "1533": 1718, "15467746": 1724, "1557": 1730, "15573179": 1724, "1557arrai": 1724, "15666303": 1724, "157": 1720, "15784041": 1724, "157e": 1718, "1580": 1721, "15805114": 1724, "1581": 1724, "16": [1264, 1268, 1281, 1282, 1492, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734], "1600": 1718, "161371": 1721, "1614": 1721, "1617": 1718, "16302865": 1718, "164": 1722, "1650": 1718, "166": 1732, "1665": 1721, "16822775": 1724, "16b": 1724, "17": [862, 1718, 1719, 1724, 1726, 1731, 1733], "170": [1724, 1726, 1728], "1700": 1718, "1704": 1718, "170545": 1724, "17054545": 1724, "171": [], "171047": 1721, "172": 1719, "1734": 1718, "173606": 1734, "1742": [862, 916, 922], "1748": 1721, "175": 712, "1750": 1718, "1753": 1718, "17636906": 1718, "17645903": 1718, "176627": 1730, "1770": 1718, "1771": 1726, "1772": 1724, "178": [1718, 1722, 1724], "1787": 1718, "17arrai": 1724, "18": [1718, 1719, 1723, 1724, 1725, 1726], "180": [1264, 1719], "1800": [1718, 1726], "1805": 1718, "1812": 1732, "181480": 1726, "18161771": 1718, "1834": 1718, "184": 1719, "1850": 1718, "186188": 1732, "187742": 1721, "1880": 1732, "18it": 1724, "19": [1718, 1719, 1723, 1726, 1732], "191": 1728, "1910": 1718, "1967": 1269, "19756212": 1718, "1978": 1269, "198": [1719, 1726], "1986": [1277, 1285, 1434], "198707": 1723, "1991": 1576, "1995": 1576, "1996": 1716, "1d": [537, 1250, 1258, 1261, 1262, 1264, 1266, 1268, 1269, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1394, 1399, 1415, 1425, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1512, 1519, 1524, 1530, 1532, 1704, 1717], "1e": [1143, 1171, 1178, 1199, 1718], "1f": [1723, 1726, 1732, 1733], "1kb": [1724, 1730], "1min": [1716, 1722, 1729], "1px": 1493, "1turbin": 1718, "2": [323, 324, 412, 414, 415, 519, 521, 586, 712, 811, 814, 845, 853, 876, 877, 885, 916, 922, 1011, 1134, 1143, 1145, 1160, 1166, 1171, 1178, 1187, 1191, 1199, 1203, 1205, 1218, 1240, 1250, 1251, 1258, 1261, 1262, 1264, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1394, 1397, 1398, 1399, 1406, 1414, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1453, 1460, 1480, 1499, 1509, 1516, 1523, 1524, 1531, 1532, 1537, 1546, 1550, 1551, 1555, 1574, 1576, 1580, 1581, 1582, 1583, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1627, 1629, 1634, 1635, 1704, 1712, 1713, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734], "20": [672, 674, 676, 681, 692, 698, 702, 708, 712, 758, 759, 784, 785, 845, 853, 1291, 1415, 1523, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1731, 1732, 1733], "200": [599, 600, 606, 607, 1718, 1719, 1723, 1724, 1734], "2000": [520, 1576, 1718, 1724, 1728], "20000": [791, 792, 1722, 1724], "2001": 1576, "2005": [869, 870, 1709, 1722], "2009": [1719, 1723], "20096644": 1718, "2009_31": 869, "201": [1721, 1723], "2010": 986, "2011": [845, 853, 854], "2012": 0, "2014": [876, 1709, 1716], "2016": [0, 801, 882, 888, 1704, 1709, 1716], "2017": [845, 853, 1717, 1719, 1732], "2018": [1719, 1729], "2019": [829, 869, 870, 1716, 1717, 1722], "2020": [540, 845, 853, 1709, 1717], "2021": 1719, "2022": 1716, "2023": [837, 845, 853, 1576, 1711, 1719, 1731], "205": 1732, "2050": 1718, "207": 1719, "2074944": 1718, "208": 1721, "209": 1719, "20911122": 1724, "21": [869, 870, 1718, 1719, 1723, 1724, 1726, 1731, 1732], "2100": [712, 1718], "21105": 1711, "211367": 1721, "21255": 1733, "2137": [845, 853], "214": 1721, "2150": 1718, "2153": 1718, "21555429": 1724, "216": [1719, 1728, 1733], "21653738": 1724, "217": 1719, "218": 1721, "2186": 1718, "2199": 1718, "22": [712, 1264, 1268, 1281, 1282, 1718, 1719, 1724, 1725, 1726, 1732], "220": 1719, "2200": 1718, "2209": 1718, "2212": [1220, 1222], "2219": 1718, "222": 1721, "222715": 1732, "223": 1719, "2233": 1718, "223533": 1724, "225": [672, 673, 675, 712, 713, 714, 1095, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734], "2250": 1718, "2251": 1718, "225378": 1726, "22569029": 1718, "225arrai": [1718, 1724], "2265": [916, 922], "22673359": 1718, "227": 1719, "228kb": 1723, "22945066": 1718, "2299": [1718, 1732], "23": [1718, 1719, 1723, 1724, 1729, 1732], "230": 1729, "234": 1724, "2356875": 1718, "236": 1721, "23620357": 1724, "236204": 1724, "237": 1721, "23755919": 1724, "2383": 1732, "2392": 1732, "23943763": 1718, "24": [1718, 1719, 1724, 1725, 1726, 1732], "240": [1722, 1734], "2400": [1718, 1726], "24000": 1723, "2408": 1732, "241": [1719, 1732], "24121905": 1724, "242": 1719, "243": [1719, 1732], "2435": 1732, "244": [1719, 1732], "24443455": 1718, "2450": 1718, "2457": 1732, "246": [540, 541], "247780": 1721, "249557": 1726, "24it": 1731, "25": [0, 863, 916, 917, 922, 923, 1258, 1262, 1263, 1264, 1268, 1718, 1719, 1722, 1726], "250": [1718, 1719, 1723, 1728, 1734], "2500": [1718, 1719, 1720, 1721], "25082391": 1724, "2518": 1730, "253": 1719, "25476076": 1718, "255": [1402, 1425, 1426], "2550": 1718, "256": [1134, 1277, 1285, 1434, 1523, 1726], "2564": 1732, "257e": 1724, "25it": [], "25th": 1269, "26": [1718, 1719, 1721, 1724, 1732], "2600": 1718, "2609": 1732, "26132479": 1718, "262006": 1721, "262615": 1726, "2638": 1732, "265": 1719, "2650": 1718, "267": 1719, "268": 1719, "269": [1718, 1719], "27": [1718, 1719, 1723, 1724, 1725, 1729, 1730], "270": [0, 1038, 1040, 1041, 1043, 1044, 1080, 1081, 1083, 1084, 1717, 1718, 1719, 1723, 1725, 1726, 1730, 1734], "27494108": 1718, "275": 714, "27512229": 1718, "2756": 1732, "276034": 1732, "27767": [1719, 1723], "27806733": 1724, "27it": [], "27t05": 1724, "27t06": 1724, "27t07": 1724, "28": [1718, 1724, 1725, 1729], "2800": 1718, "28063677": 1718, "283373": 1721, "285": 1729, "2850": 1718, "28507283": 1718, "28804821": 1724, "28838": [1719, 1723], "28b": 1724, "28it": 1720, "29": [1718, 1719, 1731, 1732], "290": [712, 1728], "2900": 1718, "29336085": 1724, "2950": 1718, "29854459": 1718, "299": 1732, "29e": 1724, "29it": 1725, "2_0": 1722, "2_dx100": 1722, "2_kb0": 1722, "2d": [0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1067, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1266, 1269, 1292, 1397, 1398, 1399, 1402, 1417, 1424, 1425, 1426, 1431, 1435, 1442, 1523, 1524, 1532, 1533, 1546, 1577, 1601, 1608, 1705, 1706, 1717, 1733], "2f": [1720, 1723, 1726, 1731, 1732, 1733], "2fd45e5c": 1724, "3": [5, 27, 28, 32, 178, 280, 298, 299, 301, 317, 318, 347, 348, 360, 563, 570, 580, 586, 594, 596, 602, 609, 712, 762, 767, 768, 774, 775, 780, 781, 788, 790, 796, 797, 805, 806, 815, 832, 840, 848, 857, 1012, 1053, 1092, 1096, 1135, 1143, 1144, 1178, 1199, 1218, 1250, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1289, 1291, 1294, 1295, 1349, 1372, 1387, 1394, 1397, 1398, 1402, 1404, 1405, 1406, 1410, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1443, 1444, 1447, 1480, 1524, 1525, 1533, 1535, 1574, 1576, 1658, 1704, 1706, 1708, 1712, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734], "30": [802, 1095, 1718, 1719, 1720, 1723, 1724, 1725, 1731, 1732, 1733, 1734], "300": [1718, 1719, 1726, 1734], "3000": [1718, 1719, 1723, 1726, 1731, 1733, 1734], "30000": [343, 344], "3000height": 1723, "30095": [1719, 1723], "301": 1726, "302": 1719, "3021": 712, "303121": 1721, "3050": 1718, "3067": 1732, "307": 1724, "308": 1724, "308e": 1718, "3097": 1724, "30it": 1725, "30x30": 1532, "31": [1718, 1719, 1721, 1723, 1725, 1732], "310": 1724, "31049503": 1718, "311": 1724, "312": [1576, 1724], "31250889": 1724, "312arrai": 1724, "313": 1724, "313664": 1721, "31375786": 1724, "314": 1719, "314050": 1726, "31411": 1734, "32": [863, 1718, 1725], "3200": 1718, "323": 1724, "32441913": 1724, "325199": 1730, "3290": 1724, "32b": 1723, "32u": [1629, 1632], "33": [1718, 1719, 1720, 1724, 1725, 1732], "332498": 1730, "334366": 1732, "3364": 1724, "33856": [1720, 1731], "33it": 1725, "34": [1718, 1719, 1720, 1725], "340": [1723, 1724, 1728], "344": 1719, "347000": 1721, "348633": 1726, "35": [1718, 1719, 1720, 1728, 1731], "352448": 1721, "352662": 1721, "353": [], "35583402": 1718, "357075": 1721, "3575024": 1724, "35it": [1725, 1731], "36": [1718, 1719], "360": [637, 1264, 1268, 1281, 1282], "362": 863, "3627": 1718, "3628": 1718, "3630": 1718, "3633": 1718, "363478": 1721, "36368": [1719, 1723], "3638": 1718, "3642": 1718, "3654": 1718, "3661": 1718, "368e": 1718, "369": [1252, 1731], "36953937": 1718, "36it": 1731, "37": 1718, "37214": [1719, 1723], "372918": 1726, "3730": 1718, "3750291": 869, "375640": 1721, "3769261": 1724, "38": [1718, 1724], "38362019": 1718, "384285": 1726, "384b": 1718, "38845129": 1718, "39": [1718, 1719, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "3904": 712, "39043": 1724, "39385269": 1718, "3944": 1724, "396261": 1726, "398e": 1724, "39it": 1725, "3arrai": [1718, 1724], "3d": [1255, 1260, 1413], "3f": [1127, 1129], "4": [712, 789, 862, 1218, 1258, 1261, 1262, 1291, 1397, 1398, 1402, 1404, 1405, 1413, 1425, 1426, 1431, 1435, 1532, 1658, 1708, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "40": [1718, 1723, 1724], "400": 1718, "4000": [1718, 1720, 1724, 1728], "401579": 1724, "4023241": 1724, "40247265": 1718, "403": 1726, "404e": 1731, "406": 1719, "40b": 1730, "40kb": 1724, "41": [125, 1562, 1564, 1566, 1569, 1570, 1572, 1698, 1707, 1718], "416355": 1726, "41856192": 1724, "419935": 1734, "41it": 1731, "42": [1718, 1719, 1724, 1732], "420645": 1732, "421405": 1721, "42521": 1730, "42619428": 1724, "42685": [1719, 1723], "427": 1731, "429893": 1732, "43": 1718, "43094316": 1718, "4321m": 1716, "433e": [1718, 1724], "436837": 1724, "43683738": 1724, "43699931": 1718, "43838158": 1718, "44": [1718, 1721, 1724], "440": 1726, "440b": 1729, "444": 712, "445084": 1726, "4451": 1726, "4464": 1723, "44991959": 1718, "44it": 1725, "45": [712, 1230, 1435, 1718, 1720, 1733], "450": 1718, "45013909": 1724, "451": [0, 854], "452153": 1726, "452899": 1721, "4562": 1726, "45717031": 1718, "458187": 1731, "458987": 1723, "459901": 1732, "46": [1718, 1719], "464325": 1732, "4646": 1723, "46522037": 1718, "465593": 1721, "468": 1729, "47": [1718, 1721, 1724], "472361": 1724, "47236142": 1724, "475399": 1726, "476610": 1732, "476878": 1726, "47714691": 1724, "4777": 1732, "478592": 1732, "47arrai": 1718, "47it": 1720, "48": 1718, "481726": 1732, "4843": 1732, "48484798": 1724, "4849": 1724, "4853": 1724, "4868": 1732, "487086": 1732, "488279": 1721, "48coordin": 1718, "48it": 1725, "49": [1719, 1721], "490711": 1732, "491": 1726, "491089": 1721, "491558": 1732, "4929382": 1718, "496": [1252, 1725], "497": 1725, "498": 1725, "499": 1725, "4_dx100": 1722, "4_kb0": 1722, "4d": 1725, "4e": 1718, "4f": [1050, 1127, 1129, 1133], "4kb": 1729, "4mb": 1724, "5": [540, 712, 758, 759, 854, 862, 916, 917, 1064, 1066, 1134, 1178, 1251, 1253, 1258, 1259, 1262, 1263, 1264, 1266, 1268, 1269, 1271, 1281, 1282, 1402, 1404, 1406, 1416, 1431, 1435, 1447, 1451, 1460, 1509, 1516, 1535, 1537, 1539, 1540, 1550, 1551, 1658, 1708, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "50": [432, 519, 521, 1266, 1397, 1576, 1718, 1719, 1723, 1724, 1728, 1733], "500": [1079, 1080, 1081, 1082, 1083, 1084, 1627, 1706, 1718, 1719, 1721, 1723, 1724, 1725, 1728, 1733], "5000": [519, 521, 1508, 1515, 1716, 1720, 1722, 1724, 1726, 1729, 1731, 1732], "500000": 1726, "5000m": 1722, "5000turbin": 1724, "5001": 1728, "500kb": 1724, "500m": 1718, "50334765": 1718, "5061": 712, "506817": 1732, "506e": 1729, "50870375": 1718, "50it": [1720, 1725], "51": [1719, 1729], "512884": 1732, "512kb": 1730, "51816992": 1718, "5194": 540, "519e": 1730, "52": [1719, 1729], "52031435": 1724, "521": [1721, 1731], "521429": 1724, "52142919": 1724, "521975": 1732, "522878": 1726, "523": 1718, "523022": 1721, "52334815": 1718, "5238": 1724, "527781": 1732, "528483": 1721, "528kb": 1723, "52it": 1725, "53": 1724, "530254": 1732, "53097653": 1718, "532": 1719, "534548": 1726, "536000": 1732, "53818917": 1724, "5399971": 1718, "53it": [], "54": [1724, 1729], "5400": 1724, "542331196166035e": 1719, "542681": 1721, "5433": 1724, "5443": 1729, "5464": 1711, "547918": 1721, "5485": 1724, "55": [681, 698, 708, 1263, 1719, 1724, 1729], "550": 1718, "55004756": 1718, "551317": 1732, "551817": 1731, "551830": 1731, "55186954": 1718, "552663": 1721, "55328369": 1718, "555045": 1721, "55869066": 1718, "55it": 1724, "56": 1724, "560020": 1732, "560767": 1726, "563693": 1726, "564008": 1732, "568e": 1731, "56arrai": 1724, "56it": 1724, "57": [1719, 1724, 1732], "576b": 1718, "578": 1726, "5796": 1724, "58": [801, 802, 882, 883, 1719, 1726], "580130": 1721, "580285": 1721, "581195": 1721, "581430": 1724, "583392": 1732, "58470499": 1724, "584e": 1718, "585": [1135, 1136], "593225": 1723, "595": [801, 882, 888], "59550525": 1718, "597810": 1721, "59966544": 1718, "59999999999997": 1252, "59it": 1725, "5f": [1127, 1129], "5iqr": 1269, "5km": 1722, "5mb": 1724, "5mw": [1710, 1716, 1722, 1728, 1730], "5x": 1269, "6": [557, 558, 712, 869, 870, 1264, 1268, 1281, 1282, 1291, 1430, 1431, 1537, 1658, 1708, 1710, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "60": [432, 1720, 1729, 1731], "600": [1718, 1723, 1726, 1728, 1729], "6000": [1726, 1728], "600000": 1730, "607085": 1721, "6092633": 1718, "60it": 1720, "6101": 1724, "6105": 862, "610500": 1732, "613545": 1732, "6151291": 1718, "618827331554488e": 1719, "62": [1719, 1724, 1732], "621921": 1721, "62228383": 1724, "622e": 1718, "6243858": 1718, "625": 862, "62773546": 1724, "628197": 1732, "628299": 1723, "62910205": 1718, "63": [1724, 1732], "63001": 1721, "631419": 1732, "63259116": 1718, "633459": 1730, "63554043": 1724, "636004": 1718, "63706155": 1724, "637062": 1724, "63775728": 1718, "6379": 712, "64": [1719, 1724, 1732], "640e": 1718, "64100": [869, 1709], "64265163": 1718, "642754": 1732, "643e": 1718, "645e": 1718, "64it": 1720, "64kb": 1730, "65": [1266, 1719, 1725, 1732, 1733], "650": 1718, "651819": 1726, "656621": 1732, "6596": [862, 916, 922], "65e": 1718, "66": 1732, "662e": 1718, "663709": 1726, "664594": 1732, "66it": 1724, "67": [1719, 1720, 1732], "670": 1733, "67129007": 1718, "672845": 1732, "673386": 1721, "673638": 1732, "673e": 1718, "67485874": 1718, "67504595": 1718, "67it": 1725, "68": [1719, 1724], "680276": 1721, "680559": 1724, "68294887": 1718, "68526736": 1718, "68550034": 1718, "68574518": 1718, "687892": 1732, "68it": 1720, "691": 854, "692583": 1723, "694": 1719, "69564997": 1718, "6960": 1724, "6961": 1724, "697": 854, "697787": 1726, "69896283": 1718, "6f": [1127, 1129], "7": [712, 1135, 1265, 1266, 1291, 1406, 1430, 1710, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "70": [1719, 1721, 1724, 1728, 1732], "7000": [1576, 1728, 1729], "700000": [1731, 1732], "70073211": 1724, "702": 1731, "703701": 1721, "70370122": 1718, "705093": 1732, "70601022": 1718, "707": 1724, "70739148": 1724, "708787": 1724, "7087873": 1724, "70902791": 1724, "70it": 1725, "71": 1724, "71002993": 1718, "71363755": 1724, "714437": 1726, "715530": 1721, "71561883": 1718, "71960451": 1718, "71arrai": 1724, "71it": 1725, "72": [1442, 1719, 1721], "722e": 1718, "723397": 1732, "724": 1721, "72b": 1729, "72it": [], "73": [863, 1725], "730530": 1732, "731909": 1721, "731e": 1718, "732653": 1726, "7339": 1724, "735e": 1718, "738": 1726, "73837785": 1718, "73924843": 1718, "74216201": 1718, "748653": 1721, "74it": [], "75": [1258, 1262, 1719, 1721, 1723, 1724, 1732], "750": 1734, "7500": 1722, "750000": 1732, "75068399": 1724, "7526868": 1724, "75570909": 1718, "756149": 1721, "756156": 1724, "758": 1724, "75801975": 1724, "758519": 1718, "758e": 1718, "75it": 1731, "75th": 1269, "76": [1724, 1733], "760051": 1732, "76034502": 1718, "76128718": 1718, "763e": 1718, "76458387": 1724, "76465933": 1724, "76it": [], "77": 1724, "774911": 1732, "77579844": 1718, "77599446": 1718, "776arrai": 1718, "77816491": 1724, "77it": [], "78": [1719, 1724, 1725], "78261081": 1718, "78796353": 1718, "79": 1730, "790000": 1730, "791530": 1732, "796e": 1724, "8": [869, 916, 917, 986, 1009, 1011, 1016, 1062, 1134, 1267, 1289, 1406, 1410, 1430, 1431, 1509, 1516, 1709, 1710, 1711, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735], "80": [1720, 1733], "800": [712, 1718, 1720, 1729, 1730, 1731], "8000": [1719, 1730, 1732], "803665": 1730, "806173": 1726, "806876": 1731, "80791824": 1724, "808234": 1730, "80976448": 1718, "80kb": 1724, "81": [1724, 1729, 1732, 1733], "810": 712, "812210": 1730, "814": [1718, 1724, 1729], "81476999": 1718, "814849": 1724, "81484941": 1724, "814arrai": 1718, "81647422": 1718, "8165": 1718, "81672549": 1718, "81715389": 1718, "8172": 1718, "81731524": 1718, "81750584": 1718, "81759101": 1718, "81766848": 1718, "81769509": 1718, "8184853": 1718, "818854": 1721, "818932": 1730, "819769": 1721, "81it": [], "82": 1724, "820": 712, "821354": 1730, "823401": 1726, "82527504": 1724, "8256": 1724, "825891": 1732, "82678858": 1718, "82716779": 1724, "82753765": 1718, "82953897": 1718, "83": [863, 1724], "830": 712, "8329491": 1724, "83495453": 1724, "835285": 1724, "83528514": 1724, "836": 1719, "83767057": 1718, "83786169": 1718, "839e": 1718, "84": 1724, "840554": 1726, "84457499": 1718, "84568037": 1718, "849e": 1724, "85": 1724, "850": 1718, "85145363": 1718, "852422": 1726, "85525979": 1724, "85895388": 1724, "85899394": 1718, "85913481": 1718, "85916516": 1724, "85it": 1731, "86": [1711, 1724], "861136": 1726, "862504": 1732, "86451775": 1718, "867297": 1721, "86775368": 1718, "86834479": 1724, "86887979": 1724, "86it": 1731, "87": 1726, "87003462": 1718, "87024851": 1724, "87089819": 1718, "87152353": 1718, "871543": 1721, "87182832": 1718, "8720001": 1718, "8724777": 1718, "87312066": 1718, "873257": 1732, "874": 712, "87466317": 1718, "874904": 1732, "875521": 1732, "8787": 1724, "88": [677, 693, 703, 715, 723, 1719, 1732, 1734], "880886": 1730, "88613124": 1718, "88971723": 1718, "89": 1724, "89109071": 1718, "89197906": 1718, "89275601": 1718, "89357026": 1718, "89445526": 1718, "89588288": 1718, "898485": 1721, "8b": [1718, 1730], "8coordin": 1723, "8d6ca3d82151bad815f78addf9b5c1c6": 1634, "8km": 1716, "8m": 1717, "9": [0, 712, 1269, 1271, 1291, 1372, 1387, 1431, 1432, 1443, 1444, 1525, 1640, 1715, 1718, 1719, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734], "90": [1719, 1722, 1723, 1724], "900": [1718, 1731, 1733], "90000323": 1718, "900005": 1726, "90394756": 1718, "904246": 1721, "90443849": 1718, "90455836": 1724, "90460543": 1718, "90473057": 1718, "90497911": 1718, "90520769": 1718, "90530738": 1718, "90643494": 1718, "90658694": 1718, "907209": 1732, "90736008": 1718, "9074arrai": 1718, "90786757": 1718, "90806287": 1724, "90826572": 1718, "90851556": 1718, "90871749": 1718, "90875577": 1718, "90887712": 1718, "90956347": 1718, "91072196": 1718, "91103535": 1718, "9111": 1718, "91114978": 1718, "91122745": 1718, "91136944": 1718, "91144979": 1718, "91284126": 1718, "91378165": 1724, "914426": 1726, "916": 1730, "91602074": 1718, "91662556": 1718, "91685644": 1718, "91838617": 1718, "91920818": 1724, "91921633": 1724, "91935924": 1718, "919371": 1724, "91937135": 1724, "91948746": 1718, "91it": [], "92": [1718, 1719, 1724], "92032182": 1718, "92155136": 1718, "921920": 1724, "921e": 1724, "9231956": 1718, "92324777": 1718, "92465372": 1718, "92473132": 1724, "928": 1718, "92832072": 1718, "92863625": 1724, "929624": 1726, "92arrai": 1724, "93": [1719, 1723, 1724, 1733], "93034593": 1718, "932216": 1726, "932726": 1721, "93465089": 1718, "9347257": 1718, "9349": 1724, "93586271": 1718, "93592999": 1718, "93644596": 1724, "93722645": 1724, "93805698": 1718, "9382": 1724, "94376765": 1718, "944": 1718, "94469817": 1718, "945e": 1724, "9463012": 1718, "946766": 1726, "94802134": 1724, "95": [862, 1269, 1719], "950": [714, 1718], "95129556": 1718, "95149737": 1718, "95387404": 1724, "95560321": 1718, "955794": 1730, "958531": 1732, "95863371": 1724, "958672": 1721, "95963768": 1718, "959755": 1724, "959818": 1724, "95981825": 1724, "960030": 1721, "960214": 1721, "960601": 1721, "962317": 1732, "96kb": 1723, "97": [1719, 1723, 1724, 1732], "97042572": 1718, "97076712": 1718, "97191414": 1724, "97491761": 1724, "975": 714, "977087": 1726, "97it": [], "981": 1719, "98305013": 1718, "98695302482496e": 1719, "98it": 1725, "99": [1404, 1719, 1724, 1728, 1732], "9920": 1724, "995899": 1721, "996": 1725, "996e": 1731, "997": 1725, "997697": 1726, "998": [1721, 1725], "999": 1725, "9999": 883, "99999": [537, 538], "A": [27, 76, 101, 178, 244, 248, 252, 289, 293, 375, 376, 468, 477, 686, 712, 747, 751, 754, 829, 845, 853, 862, 876, 1006, 1032, 1097, 1098, 1105, 1111, 1118, 1119, 1134, 1135, 1138, 1147, 1152, 1154, 1240, 1250, 1251, 1252, 1265, 1266, 1267, 1269, 1270, 1271, 1273, 1275, 1277, 1285, 1291, 1292, 1294, 1295, 1296, 1349, 1397, 1399, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1436, 1442, 1443, 1444, 1449, 1478, 1499, 1502, 1511, 1518, 1523, 1525, 1529, 1530, 1531, 1533, 1535, 1539, 1540, 1550, 1551, 1555, 1559, 1560, 1633, 1695, 1696, 1699, 1700, 1703, 1704, 1706, 1710, 1714, 1716, 1718, 1719, 1721, 1727], "And": 1717, "As": [0, 1266, 1298, 1318, 1435, 1539, 1540, 1715, 1718, 1720, 1734], "At": [1438, 1533, 1719], "Be": 1724, "By": [244, 289, 1251, 1264, 1268, 1269, 1271, 1291, 1294, 1295, 1397, 1399, 1402, 1424, 1425, 1426, 1430, 1431, 1442, 1510, 1517, 1535, 1539, 1540, 1718, 1734], "For": [0, 195, 323, 324, 519, 521, 525, 623, 712, 862, 907, 1095, 1118, 1119, 1134, 1153, 1155, 1171, 1172, 1208, 1251, 1252, 1255, 1260, 1264, 1268, 1269, 1270, 1272, 1281, 1282, 1285, 1291, 1292, 1293, 1302, 1319, 1339, 1362, 1397, 1398, 1399, 1402, 1413, 1424, 1425, 1426, 1430, 1432, 1434, 1435, 1442, 1443, 1444, 1448, 1460, 1462, 1464, 1478, 1480, 1484, 1493, 1498, 1508, 1509, 1511, 1515, 1516, 1518, 1524, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1543, 1544, 1710, 1714, 1715, 1716, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1734, 1737], "If": [0, 191, 300, 453, 454, 467, 535, 595, 668, 801, 863, 882, 1056, 1057, 1060, 1062, 1134, 1135, 1138, 1140, 1143, 1149, 1152, 1167, 1178, 1199, 1200, 1214, 1233, 1240, 1241, 1250, 1251, 1252, 1253, 1255, 1256, 1260, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1283, 1284, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1339, 1356, 1394, 1397, 1398, 1399, 1400, 1402, 1406, 1410, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1448, 1451, 1452, 1453, 1455, 1456, 1464, 1478, 1480, 1482, 1483, 1492, 1493, 1502, 1506, 1507, 1509, 1511, 1512, 1513, 1514, 1516, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1538, 1539, 1540, 1541, 1542, 1546, 1550, 1551, 1552, 1555, 1574, 1629, 1710, 1715, 1716, 1724, 1726, 1727, 1732], "In": [0, 300, 595, 1135, 1152, 1170, 1173, 1174, 1194, 1195, 1196, 1206, 1230, 1251, 1252, 1256, 1266, 1269, 1271, 1291, 1397, 1398, 1399, 1402, 1417, 1424, 1425, 1426, 1431, 1435, 1442, 1493, 1511, 1512, 1518, 1519, 1524, 1539, 1540, 1541, 1574, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "It": [1037, 1140, 1150, 1152, 1162, 1188, 1204, 1237, 1240, 1242, 1250, 1251, 1255, 1261, 1277, 1285, 1397, 1399, 1402, 1415, 1424, 1425, 1426, 1427, 1431, 1434, 1442, 1506, 1513, 1523, 1525, 1530, 1539, 1540, 1541, 1555, 1713, 1714, 1715, 1721, 1723, 1724, 1726, 1728], "Its": 1480, "NEAR": [888, 895], "NOT": [1277, 1285, 1434, 1523], "No": [552, 1011, 1267, 1291, 1397, 1424, 1426, 1442, 1704, 1718], "Not": [1240, 1269, 1271], "On": [837, 845, 853, 1402, 1729], "One": [416, 417, 485, 486, 1251, 1508, 1515, 1721, 1725], "Or": [581, 582], "Such": [231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1294, 1295, 1719, 1727], "That": [1269, 1271], "The": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 123, 125, 126, 149, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 269, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 379, 380, 381, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 451, 453, 454, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 533, 534, 535, 537, 538, 539, 542, 543, 544, 545, 547, 548, 553, 554, 555, 556, 557, 558, 560, 561, 563, 566, 567, 569, 570, 572, 573, 574, 575, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 627, 628, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 681, 684, 686, 688, 691, 692, 693, 695, 696, 697, 698, 701, 702, 703, 705, 706, 707, 708, 711, 712, 713, 714, 715, 716, 717, 718, 721, 722, 723, 725, 726, 727, 730, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 783, 784, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 832, 833, 834, 835, 837, 838, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 862, 863, 865, 866, 867, 869, 870, 872, 873, 874, 876, 877, 879, 880, 882, 883, 885, 886, 888, 903, 904, 906, 907, 908, 911, 912, 914, 915, 916, 917, 919, 920, 922, 923, 925, 926, 927, 928, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1004, 1005, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1109, 1110, 1111, 1115, 1117, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1132, 1133, 1134, 1135, 1138, 1143, 1150, 1156, 1160, 1162, 1166, 1169, 1170, 1171, 1173, 1177, 1178, 1181, 1183, 1187, 1188, 1190, 1191, 1193, 1194, 1195, 1199, 1203, 1204, 1205, 1206, 1215, 1237, 1240, 1242, 1250, 1251, 1253, 1255, 1256, 1257, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1285, 1286, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1298, 1313, 1318, 1338, 1342, 1344, 1349, 1356, 1357, 1363, 1364, 1365, 1366, 1370, 1377, 1378, 1379, 1380, 1381, 1385, 1392, 1394, 1397, 1398, 1399, 1402, 1404, 1406, 1411, 1413, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1442, 1443, 1444, 1445, 1446, 1451, 1453, 1464, 1479, 1480, 1482, 1484, 1485, 1492, 1498, 1502, 1506, 1507, 1508, 1510, 1511, 1512, 1513, 1514, 1515, 1517, 1518, 1519, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1548, 1550, 1551, 1553, 1554, 1555, 1556, 1557, 1559, 1560, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1642, 1643, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1656, 1657, 1658, 1660, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688, 1690, 1692, 1694, 1697, 1698, 1699, 1701, 1702, 1704, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734, 1736, 1737], "Their": [296, 297, 1267, 1402], "Then": [1255, 1715], "There": [1266, 1402, 1425, 1426, 1431, 1484, 1498, 1511, 1518, 1716, 1724], "These": [0, 1266, 1291, 1402, 1416, 1425, 1431, 1448, 1479, 1480, 1510, 1517, 1533, 1634, 1704, 1720, 1721, 1723, 1724, 1727, 1731, 1734], "To": [1218, 1250, 1253, 1267, 1269, 1271, 1277, 1285, 1291, 1397, 1414, 1415, 1416, 1425, 1427, 1430, 1434, 1435, 1442, 1443, 1444, 1523, 1543, 1544], "Will": [3, 1462], "With": [1532, 1729], "_": [1118, 1119, 1431, 1560, 1716, 1722], "__add__": [1143, 1147, 1178, 1199], "__args__": 1136, "__array__": [1143, 1148, 1178, 1179, 1199], "__build_class__": 1576, "__builtins__": 1576, "__cached__": 1576, "__call__": [351, 352, 1208, 1210, 1215, 1220, 1221, 1230, 1231], "__contains__": [1111, 1112], "__debug__": 1576, "__doc__": 1576, "__eq__": [1178, 1180], "__file__": 1576, "__getitem__": [111, 187, 222, 260, 314, 530, 531, 1105, 1106, 1111, 1113, 1135, 1137], "__import__": 1576, "__init__": 1576, "__init_subclass__": [1134, 1143, 1150, 1178, 1199, 1237], "__iter__": [27, 29], "__loader__": 1576, "__name__": 1576, "__next__": [27, 30], "__origin__": 1136, "__package__": 1576, "__pycache__": 1576, "__repr__": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 198, 200, 213, 225, 237, 244, 246, 252, 253, 262, 264, 276, 283, 289, 291, 296, 306, 327, 329, 332, 334, 339, 343, 351, 358, 364, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 402, 404, 405, 406, 416, 427, 430, 432, 435, 447, 449, 451, 453, 455, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 546, 550, 552, 553, 557, 559, 562, 564, 566, 568, 572, 578, 581, 586, 589, 593, 599, 601, 606, 608, 613, 615, 618, 623, 625, 630, 636, 641, 651, 656, 658, 661, 664, 667, 669, 672, 674, 676, 678, 686, 692, 694, 702, 704, 712, 714, 722, 724, 731, 735, 739, 743, 747, 751, 754, 758, 760, 764, 771, 776, 778, 784, 786, 791, 793, 801, 803, 809, 812, 819, 822, 829, 831, 837, 839, 845, 847, 853, 854, 856, 862, 864, 869, 871, 876, 878, 882, 884, 888, 911, 913, 916, 918, 922, 924, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 956, 958, 962, 964, 968, 970, 974, 976, 980, 982, 986, 988, 992, 994, 998, 1000, 1134, 1135, 1139, 1238], "__spec__": 1576, "__str__": [1118, 1120, 1134, 1143, 1151, 1178, 1182, 1199, 1201, 1239, 1559, 1561], "__sub__": [1143, 1152, 1178, 1199], "__subclasscheck__": 1140, "__subclasshook__": [1135, 1140], "__weight": [599, 600], "_ambka": 1722, "_axes_loc": 1356, "_description_": 1028, "_dx": 1722, "_frozen_importlib": 1576, "_frozen_importlib_extern": 1576, "_interpolation_step": 1199, "_k": [0, 1722], "_ka": 1722, "_kb": [1716, 1722], "_raw": [1722, 1727], "_secondary_ax": [1443, 1444], "_type_": 1028, "a0": [1574, 1706], "a1": [1574, 1706], "a2": [1574, 1706], "a3": [1574, 1706], "a_b": 0, "a_far": [862, 863], "a_near": [862, 863], "aa": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "aagaard": 540, "ab": 1576, "abbrevi": [1431, 1453], "abc": [198, 262, 1134, 1135, 1140, 1699], "abcmeta": 1140, "abil": [809, 812], "abl": [0, 519, 521, 731, 735, 739, 743, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1703, 1704, 1714], "abl_states_6000": 1716, "abllogneutralwsprofil": [731, 732, 733, 734, 1704], "abllogstablewsprofil": [735, 736, 737, 738, 1704, 1718], "abllogunstablewsprofil": [739, 740, 741, 742, 1704], "abllogwsprofil": [743, 744, 745, 746, 1704, 1716, 1719], "about": [1037, 1266, 1271, 1435, 1442, 1576, 1724, 1726], "abov": [0, 1080, 1081, 1083, 1084, 1134, 1251, 1266, 1269, 1291, 1294, 1295, 1312, 1357, 1406, 1417, 1435, 1436, 1460, 1492, 1502, 1510, 1517, 1524, 1539, 1540, 1550, 1551, 1710, 1713, 1714, 1715, 1716, 1717, 1720, 1724, 1725, 1726, 1728, 1734], "absolut": [0, 117, 118, 661, 664, 1499, 1652, 1685, 1704, 1708, 1710, 1716, 1734], "abstract": [0, 72, 74, 75, 157, 185, 186, 195, 196, 197, 198, 211, 237, 239, 242, 252, 276, 279, 280, 283, 284, 287, 296, 299, 302, 305, 306, 312, 313, 327, 329, 330, 332, 336, 337, 339, 340, 341, 343, 346, 348, 358, 360, 364, 365, 366, 379, 396, 809, 810, 812, 814, 819, 820, 822, 824, 825, 1135, 1140, 1577, 1580, 1581, 1582, 1583, 1584, 1692, 1695, 1699, 1701, 1706, 1709, 1716], "abstractpatheffect": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1477, 1524, 1533, 1535], "acceler": 1398, "accept": [0, 1240, 1250, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1464, 1510, 1517, 1523, 1525, 1526, 1529, 1530, 1532, 1539, 1540, 1551, 1552, 1555, 1710, 1714, 1717, 1724], "accept_nan": 266, "accept_non": 266, "access": [0, 1135, 1138, 1363, 1378, 1431, 1576, 1702, 1716, 1724], "accomplish": 1399, "accord": [1, 17, 27, 157, 184, 410, 557, 606, 607, 743, 1127, 1132, 1133, 1269, 1271, 1402, 1716, 1722, 1724, 1728], "accordingli": [599, 600, 1269, 1397, 1435], "account": [1289, 1525, 1533, 1718], "accumul": [1397, 1398], "accur": [0, 1208, 1211, 1230, 1232, 1716], "accuraci": [837, 845, 853, 1725], "achiev": [1134, 1252, 1260, 1267, 1302, 1425, 1448, 1453, 1729], "acorr": [1134, 1240], "acquir": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "across": [1134, 1258, 1259, 1262, 1263, 1400, 1532, 1552], "act": [1402, 1435, 1716, 1725], "action": 1713, "activ": [1134, 1339, 1430, 1441, 1451, 1479, 1715, 1724], "actual": [0, 599, 600, 1039, 1040, 1041, 1118, 1119, 1250, 1277, 1285, 1294, 1295, 1395, 1402, 1415, 1427, 1434, 1451, 1479, 1523, 1531, 1715, 1723, 1726, 1730], "ad": [0, 296, 297, 364, 366, 619, 860, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1002, 1018, 1037, 1039, 1040, 1041, 1134, 1240, 1251, 1256, 1265, 1269, 1271, 1289, 1291, 1292, 1372, 1387, 1395, 1410, 1416, 1430, 1431, 1439, 1443, 1444, 1462, 1478, 1480, 1509, 1516, 1525, 1531, 1540, 1555, 1703, 1710, 1713, 1714, 1715, 1716, 1718, 1720, 1722, 1724, 1728, 1729, 1730, 1732, 1733, 1734], "adapt": [1252, 1431], "add": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 76, 78, 87, 92, 101, 157, 159, 181, 183, 187, 189, 213, 215, 222, 225, 237, 240, 244, 247, 252, 260, 272, 274, 283, 285, 289, 292, 296, 305, 306, 314, 323, 325, 329, 332, 364, 365, 367, 369, 375, 408, 409, 410, 411, 412, 413, 414, 415, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 543, 544, 566, 581, 586, 589, 593, 598, 599, 605, 606, 612, 613, 618, 623, 630, 636, 641, 643, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 799, 800, 860, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1004, 1006, 1011, 1018, 1020, 1021, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1096, 1097, 1099, 1100, 1101, 1102, 1111, 1115, 1116, 1134, 1143, 1149, 1220, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1267, 1275, 1291, 1364, 1365, 1379, 1380, 1404, 1405, 1406, 1435, 1436, 1443, 1444, 1533, 1535, 1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618, 1630, 1703, 1704, 1714, 1716, 1718, 1720, 1722, 1726, 1727, 1728, 1729, 1730, 1731, 1732], "add_artist": [1134, 1241], "add_bar": [1039, 1040, 1041, 1042, 1043, 1044, 1096], "add_callback": [1134, 1242, 1423, 1440], "add_capac": [1018, 1020, 1710, 1732], "add_child_ax": [1134, 1243], "add_collect": [1134, 1244], "add_contain": [1134, 1245], "add_crit": [76, 78], "add_data_packag": [375, 1097, 1099], "add_data_package_fil": [375, 1097, 1100], "add_effici": [1018, 1021, 1710, 1732, 1733], "add_factori": [1111, 1115], "add_fil": [375, 1097, 1101, 1102], "add_from_csv": [408, 409, 1703, 1714], "add_from_df": [0, 409, 1703], "add_from_fil": [410, 1703, 1710, 1714, 1719, 1732], "add_from_json": [411, 1703], "add_gener": [1004, 1006, 1720, 1729, 1731], "add_grid": [412, 1703, 1714, 1718, 1720, 1721, 1729, 1731, 1733], "add_imag": [1134, 1246], "add_k_factori": [1111, 1116], "add_lin": [1134, 1247], "add_model": [323, 325], "add_patch": [1134, 1248], "add_r": [0, 414, 1703], "add_random": [0, 413, 1703, 1714, 1724], "add_row": [415, 1703, 1714, 1717, 1723, 1726, 1728, 1730], "add_tabl": [1134, 1249, 1533], "add_to_chunk_stor": [1, 17, 27, 157, 159, 160], "add_to_figur": [1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618], "add_turbin": [367, 369, 408, 413, 1714, 1718, 1725, 1734], "add_var": [641, 643, 1725, 1726, 1734], "add_wak": [364, 365, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001], "addit": [0, 3, 4, 5, 28, 177, 190, 209, 224, 243, 288, 303, 309, 316, 317, 318, 331, 338, 345, 350, 362, 380, 385, 389, 390, 395, 397, 401, 403, 407, 408, 409, 413, 416, 417, 477, 478, 485, 486, 513, 525, 600, 607, 614, 619, 673, 675, 677, 687, 693, 703, 713, 715, 723, 732, 736, 740, 744, 747, 748, 759, 765, 772, 777, 785, 792, 922, 923, 1010, 1016, 1039, 1040, 1041, 1042, 1043, 1044, 1048, 1052, 1053, 1055, 1056, 1057, 1059, 1062, 1063, 1065, 1066, 1067, 1068, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1240, 1251, 1318, 1399, 1402, 1414, 1416, 1425, 1431, 1436, 1445, 1446, 1478, 1523, 1524, 1530, 1555, 1560, 1628, 1629, 1631, 1640, 1714, 1715, 1716, 1718, 1724, 1728, 1735], "addition": [1240, 1260, 1402, 1414, 1424, 1426, 1431, 1445, 1446, 1486, 1510, 1517, 1555, 1714], "address": [0, 1724], "adjac": [1294, 1295, 1424, 1426, 1493], "adjust": [1134, 1208, 1214, 1230, 1233, 1252, 1260, 1265, 1269, 1271, 1302, 1397, 1402, 1406, 1447, 1448, 1453, 1461, 1524], "adopt": 1402, "advantag": 1729, "advic": [0, 1624], "aeroelast": 540, "affair": 1713, "affect": [0, 1252, 1253, 1424, 1435, 1538, 1716, 1726], "affects_downwind": [327, 328, 358, 359, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922], "affin": [1134, 1143, 1148, 1157, 1158, 1170, 1173, 1175, 1176, 1178, 1179, 1184, 1185, 1194, 1195, 1197, 1198, 1199, 1206, 1207, 1359], "affine2dbas": [1134, 1178], "after": [4, 5, 19, 181, 214, 272, 300, 364, 366, 408, 423, 443, 461, 473, 492, 507, 515, 595, 623, 649, 799, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1002, 1079, 1080, 1081, 1082, 1083, 1084, 1143, 1149, 1178, 1199, 1256, 1266, 1402, 1409, 1413, 1416, 1432, 1512, 1519, 1539, 1540, 1716, 1724, 1725, 1726, 1728, 1733], "afterward": 1724, "again": [0, 1715, 1724, 1726], "against": [1266, 1531, 1637, 1638], "agel": [801, 876, 882, 888, 1716, 1734], "agg": [1134, 1303, 1425, 1449, 1493], "agg_filt": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1524, 1533, 1535], "aggreg": 1397, "aglo": 1718, "ago": 1508, "aim": 1734, "air": [0, 306, 468, 469, 477, 478, 673, 675, 676, 677, 692, 693, 702, 703, 713, 714, 722, 723, 1095, 1647, 1675, 1704, 1708, 1721, 1723], "aiter": 1576, "aitoff": 1406, "al": [837, 845, 853, 854, 1716, 1717], "alexand": [837, 845, 853, 1717], "algo": [1, 17, 27, 44, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 72, 74, 76, 79, 81, 83, 85, 87, 89, 90, 92, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 110, 157, 181, 183, 185, 195, 196, 198, 202, 205, 211, 213, 216, 218, 221, 225, 227, 228, 229, 230, 231, 234, 237, 239, 240, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265, 266, 267, 269, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 293, 294, 296, 298, 300, 301, 304, 306, 308, 310, 311, 313, 327, 329, 330, 332, 339, 343, 345, 346, 347, 348, 349, 351, 358, 360, 361, 363, 364, 365, 366, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 418, 421, 422, 423, 425, 426, 427, 429, 430, 432, 436, 438, 440, 441, 442, 443, 445, 446, 447, 449, 451, 453, 456, 457, 459, 460, 461, 464, 465, 466, 468, 470, 471, 472, 473, 475, 476, 477, 479, 480, 481, 484, 485, 487, 490, 491, 492, 494, 495, 496, 499, 501, 503, 504, 505, 506, 507, 510, 511, 512, 514, 515, 516, 517, 525, 530, 534, 537, 540, 543, 544, 547, 548, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 599, 603, 606, 610, 613, 616, 617, 618, 620, 621, 622, 623, 626, 627, 628, 630, 632, 633, 634, 636, 638, 639, 640, 641, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 674, 676, 679, 680, 684, 686, 688, 691, 692, 695, 696, 697, 701, 702, 705, 706, 707, 711, 712, 714, 716, 717, 718, 721, 722, 725, 726, 727, 730, 731, 735, 739, 743, 747, 751, 754, 758, 761, 762, 763, 764, 766, 767, 768, 769, 771, 773, 774, 775, 776, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 832, 833, 834, 835, 837, 840, 841, 842, 843, 845, 848, 849, 850, 851, 853, 854, 857, 858, 859, 860, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 880, 882, 885, 886, 888, 904, 908, 911, 914, 915, 916, 919, 920, 922, 925, 926, 927, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 979, 980, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1009, 1014, 1018, 1020, 1032, 1038, 1051, 1052, 1053, 1064, 1065, 1067, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1710, 1716, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "algo_par": 525, "algo_typ": [1, 17, 27, 157, 177, 1710], "algorithm": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 202, 205, 211, 216, 218, 221, 227, 228, 229, 230, 231, 234, 239, 240, 242, 243, 248, 250, 254, 255, 256, 257, 258, 259, 265, 266, 267, 269, 272, 274, 278, 279, 280, 282, 284, 285, 288, 293, 294, 298, 300, 301, 304, 308, 310, 313, 330, 345, 346, 347, 348, 349, 360, 361, 363, 365, 366, 385, 387, 390, 395, 397, 403, 407, 418, 421, 422, 423, 425, 426, 429, 436, 438, 440, 441, 443, 445, 446, 457, 459, 460, 461, 464, 465, 470, 471, 472, 473, 475, 476, 479, 480, 481, 484, 487, 490, 491, 492, 494, 495, 499, 501, 503, 504, 505, 507, 510, 511, 514, 515, 516, 525, 534, 547, 548, 555, 556, 561, 563, 564, 566, 569, 570, 572, 573, 575, 576, 579, 580, 583, 584, 585, 587, 588, 591, 592, 595, 596, 603, 610, 616, 617, 620, 621, 622, 626, 627, 628, 632, 633, 634, 638, 639, 640, 644, 645, 646, 647, 649, 650, 653, 654, 655, 659, 660, 662, 663, 665, 666, 670, 671, 679, 680, 684, 688, 691, 695, 696, 697, 701, 705, 706, 707, 711, 716, 717, 718, 721, 725, 726, 727, 730, 761, 762, 763, 764, 766, 767, 768, 769, 773, 774, 775, 776, 779, 780, 781, 782, 783, 787, 788, 789, 790, 794, 795, 796, 797, 798, 799, 800, 804, 805, 806, 807, 810, 811, 814, 815, 816, 817, 820, 821, 824, 825, 826, 827, 832, 833, 834, 835, 840, 841, 842, 843, 848, 849, 850, 851, 857, 858, 859, 860, 865, 866, 867, 872, 873, 874, 879, 880, 885, 886, 904, 908, 914, 915, 919, 920, 925, 926, 927, 928, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 955, 959, 960, 961, 965, 966, 967, 971, 972, 973, 977, 978, 979, 983, 984, 985, 989, 990, 991, 995, 996, 997, 1001, 1002, 1003, 1014, 1020, 1032, 1051, 1052, 1064, 1065, 1067, 1070, 1071, 1072, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1140, 1425, 1435, 1692, 1699, 1704, 1705, 1710, 1713, 1716, 1717, 1718, 1720, 1721, 1723, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "alia": [1134, 1291, 1322, 1424, 1426, 1466], "alias": [1291, 1402, 1480, 1486], "align": [771, 1134, 1264, 1265, 1267, 1268, 1281, 1282, 1364, 1365, 1379, 1380, 1397, 1398, 1493, 1533, 1543, 1544, 1704], "all": [0, 1, 3, 5, 14, 17, 20, 27, 46, 47, 49, 51, 53, 55, 58, 59, 61, 63, 65, 67, 69, 87, 89, 91, 92, 94, 101, 103, 109, 110, 157, 181, 185, 195, 196, 197, 201, 213, 216, 220, 221, 225, 227, 231, 236, 237, 239, 241, 244, 248, 251, 252, 253, 256, 262, 269, 272, 273, 276, 279, 283, 284, 286, 289, 293, 295, 296, 300, 306, 308, 313, 327, 329, 330, 332, 339, 343, 346, 351, 358, 364, 366, 367, 371, 416, 417, 418, 421, 423, 426, 427, 429, 430, 432, 436, 440, 443, 446, 447, 449, 451, 453, 457, 461, 463, 465, 466, 468, 470, 471, 473, 476, 477, 479, 483, 484, 485, 486, 487, 490, 492, 495, 496, 499, 504, 507, 509, 511, 512, 514, 515, 517, 530, 537, 540, 543, 544, 547, 549, 550, 552, 553, 557, 562, 564, 566, 569, 571, 572, 577, 578, 579, 581, 583, 584, 586, 587, 589, 591, 593, 595, 599, 606, 613, 614, 616, 618, 620, 621, 623, 626, 629, 630, 632, 635, 636, 638, 641, 644, 646, 648, 649, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 685, 686, 688, 692, 695, 697, 702, 705, 707, 712, 714, 716, 718, 722, 725, 727, 731, 735, 739, 743, 747, 751, 754, 758, 761, 764, 766, 770, 771, 773, 776, 779, 784, 787, 791, 794, 799, 801, 804, 808, 809, 812, 818, 819, 822, 828, 829, 836, 837, 844, 845, 852, 853, 854, 861, 862, 868, 869, 875, 876, 881, 882, 887, 888, 905, 910, 911, 916, 921, 922, 929, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1002, 1009, 1011, 1018, 1037, 1038, 1045, 1049, 1051, 1053, 1054, 1056, 1057, 1058, 1060, 1062, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1091, 1093, 1134, 1143, 1167, 1178, 1199, 1208, 1220, 1225, 1229, 1240, 1251, 1252, 1255, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1281, 1282, 1289, 1291, 1292, 1294, 1295, 1296, 1304, 1356, 1397, 1398, 1399, 1400, 1402, 1413, 1414, 1416, 1423, 1424, 1425, 1426, 1430, 1431, 1433, 1435, 1442, 1445, 1446, 1448, 1450, 1451, 1453, 1458, 1459, 1482, 1483, 1512, 1519, 1525, 1526, 1529, 1532, 1533, 1537, 1538, 1539, 1540, 1541, 1542, 1548, 1552, 1555, 1573, 1576, 1629, 1635, 1692, 1699, 1702, 1703, 1704, 1706, 1710, 1711, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1729, 1730, 1731, 1733, 1735, 1736], "all_non": [351, 354], "all_subclass": [1573, 1706], "alloc": [1266, 1479], "allow": [0, 252, 519, 521, 1118, 1250, 1251, 1277, 1285, 1415, 1424, 1426, 1427, 1434, 1480, 1512, 1519, 1523, 1532, 1626, 1699, 1706, 1720], "almost": 1426, "along": [0, 343, 345, 347, 599, 600, 606, 607, 758, 764, 767, 771, 774, 776, 780, 784, 788, 791, 796, 801, 805, 1134, 1199, 1253, 1272, 1289, 1349, 1397, 1399, 1402, 1424, 1426, 1430, 1492, 1523, 1526, 1532, 1553, 1556, 1704, 1716, 1717, 1718, 1730, 1734], "alpha": [801, 802, 882, 883, 888, 903, 1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1304, 1394, 1397, 1399, 1402, 1404, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1447, 1450, 1524, 1532, 1533, 1535, 1539, 1540, 1541, 1670, 1708, 1718, 1720, 1725, 1729, 1731], "alreadi": [1135, 1143, 1167, 1178, 1199, 1271, 1398, 1432, 1480, 1521, 1522, 1539, 1540, 1541, 1542, 1724, 1730], "also": [0, 19, 170, 343, 1011, 1143, 1149, 1199, 1200, 1240, 1255, 1266, 1270, 1277, 1289, 1291, 1292, 1413, 1425, 1430, 1443, 1444, 1452, 1464, 1482, 1483, 1502, 1510, 1511, 1517, 1518, 1524, 1525, 1526, 1532, 1533, 1537, 1539, 1555, 1576, 1633, 1706, 1710, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1723, 1724, 1726, 1728, 1731, 1732, 1734, 1736], "alter": [1416, 1710], "altern": [1252, 1256, 1397, 1398, 1424, 1426, 1431, 1507, 1514, 1535, 1541, 1715, 1716, 1718, 1723, 1724], "alwai": [1134, 1143, 1152, 1167, 1170, 1173, 1178, 1194, 1195, 1199, 1206, 1251, 1259, 1261, 1263, 1269, 1319, 1398, 1426, 1430, 1442, 1497, 1511, 1518, 1724, 1727, 1732], "am": 1713, "amax": 1397, "amb2var": [1689, 1708], "amb_cap": [1127, 1129, 1641, 1689, 1691, 1708, 1732], "amb_ct": [1, 2, 17, 27, 1127, 1129, 1642, 1689, 1691, 1708, 1718, 1724, 1729, 1730], "amb_p": [1, 2, 17, 27, 1127, 1129, 1641, 1643, 1659, 1689, 1691, 1708, 1718, 1721, 1724, 1726, 1729, 1730, 1732], "amb_r": [253, 256, 276, 279, 550, 552, 553, 557, 562, 564, 566, 569, 572, 578, 579], "amb_result": [253, 257, 327, 358, 361, 366, 550, 552, 553, 809, 812, 816, 819, 822, 829, 833, 837, 841, 845, 849, 853, 854, 858, 862, 869, 876, 882, 911, 916, 922, 934, 939, 944, 949, 954, 960, 966, 972, 978, 984, 990, 996, 1002], "amb_rew": [1, 2, 17, 27, 1092, 1127, 1129, 1644, 1689, 1691, 1708, 1718, 1721, 1724, 1726, 1729, 1730, 1731, 1732], "amb_rews2": [1127, 1129, 1645, 1689, 1691, 1708, 1718, 1724, 1729, 1730], "amb_rews3": [1127, 1129, 1646, 1689, 1691, 1708, 1718, 1724, 1729, 1730], "amb_rho": [1, 2, 17, 27, 1127, 1129, 1647, 1689, 1691, 1708, 1718, 1724, 1729, 1730], "amb_rotor_r": [119, 1698], "amb_t": [1127, 1129, 1648, 1689, 1691, 1708], "amb_ti": [0, 1, 2, 17, 27, 352, 1127, 1129, 1649, 1689, 1691, 1708, 1716, 1718, 1722, 1724, 1730], "amb_w": [1127, 1129, 1651, 1689, 1691, 1708, 1719, 1723, 1728, 1730, 1732, 1733], "amb_wd": [1, 2, 17, 27, 637, 1058, 1060, 1062, 1091, 1127, 1129, 1650, 1689, 1691, 1708, 1718, 1724, 1730], "amb_yaw": [1127, 1129, 1652, 1689, 1691, 1708, 1718, 1724], "amb_yawm": [1653, 1689, 1691, 1708], "amb_yld": [1127, 1129, 1654, 1689, 1691, 1708, 1732], "ambient": [0, 1, 3, 4, 5, 27, 28, 63, 67, 119, 256, 257, 279, 296, 297, 298, 300, 306, 351, 352, 357, 361, 366, 416, 485, 525, 566, 569, 579, 589, 590, 593, 595, 599, 606, 816, 833, 841, 849, 858, 862, 863, 930, 931, 934, 935, 936, 939, 940, 941, 944, 945, 946, 949, 950, 951, 954, 960, 962, 963, 966, 972, 974, 975, 978, 984, 990, 992, 993, 996, 1002, 1018, 1020, 1026, 1032, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1689, 1691, 1694, 1698, 1703, 1704, 1708, 1713, 1716, 1717, 1718, 1720, 1723, 1725, 1726, 1727, 1729, 1730, 1732, 1733, 1736], "ambientroseplotoutput": 0, "ambientwindroseoutput": 0, "ambigu": 1431, "ambka": [0, 1716, 1722], "among": 1718, "amount": [1398, 1523], "ampl_far": [888, 889], "ampl_near": [888, 890], "amplitud": [819, 820, 876, 879, 916, 919, 922, 925, 1349, 1415, 1492, 1523], "amsi": [820, 879, 919, 925], "amsterdam": 1576, "an": [0, 111, 187, 222, 260, 266, 314, 323, 599, 600, 731, 732, 735, 736, 739, 740, 743, 744, 764, 869, 1004, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1077, 1080, 1083, 1096, 1105, 1109, 1110, 1111, 1117, 1118, 1119, 1122, 1134, 1135, 1138, 1143, 1154, 1161, 1162, 1169, 1170, 1173, 1178, 1188, 1192, 1193, 1194, 1195, 1199, 1204, 1206, 1214, 1215, 1220, 1221, 1233, 1240, 1241, 1243, 1246, 1250, 1251, 1252, 1253, 1256, 1258, 1261, 1262, 1265, 1266, 1267, 1269, 1270, 1277, 1279, 1283, 1284, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1318, 1339, 1347, 1348, 1357, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1409, 1411, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1451, 1452, 1462, 1468, 1478, 1483, 1484, 1492, 1497, 1498, 1499, 1508, 1511, 1512, 1515, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1539, 1540, 1541, 1542, 1543, 1544, 1548, 1551, 1552, 1555, 1574, 1693, 1699, 1702, 1703, 1705, 1710, 1714, 1715, 1716, 1718, 1720, 1721, 1723, 1724, 1727, 1728, 1729, 1731, 1732, 1734], "analog": 1266, "analys": [225, 1699], "analysi": [0, 1277, 1285, 1434, 1713], "analyt": [876, 1716], "analyz": [225, 228, 543, 1576, 1626], "ancestor": [1143, 1161, 1167, 1178, 1199], "anchor": [1134, 1143, 1171, 1178, 1199, 1260, 1266, 1305, 1435, 1447, 1451, 1453, 1535], "anext": 1576, "ang": 540, "angl": [870, 904, 1134, 1143, 1171, 1178, 1199, 1250, 1259, 1263, 1267, 1404, 1415, 1427, 1430, 1435, 1436, 1481, 1484, 1498, 1499, 1523, 1652, 1653, 1685, 1686, 1708, 1716, 1721, 1734], "angle_spectrum": [1134, 1250, 1415, 1427, 1523], "angular": [1484, 1485], "ani": [0, 686, 758, 1007, 1134, 1135, 1138, 1143, 1152, 1161, 1168, 1178, 1181, 1199, 1208, 1214, 1217, 1230, 1233, 1242, 1251, 1256, 1265, 1266, 1279, 1281, 1282, 1286, 1289, 1291, 1292, 1394, 1395, 1396, 1399, 1402, 1416, 1431, 1435, 1436, 1442, 1524, 1535, 1537, 1575, 1576, 1627, 1636, 1637, 1638, 1639, 1704, 1710, 1713, 1714, 1715, 1716, 1720, 1721, 1722, 1724, 1729, 1731, 1732, 1734], "anigen": 1729, "anim": [0, 1004, 1005, 1006, 1007, 1008, 1018, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1067, 1072, 1096, 1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1306, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1452, 1524, 1533, 1535, 1705, 1720, 1729, 1731], "anno_d": [1011, 1720, 1729, 1731], "anno_delx": [1011, 1720, 1729, 1731], "annot": [1009, 1011, 1134, 1251, 1253, 1265, 1720, 1723, 1729, 1731, 1732, 1733], "annotation_clip": 1251, "annual": [1018, 1032, 1723, 1732, 1733], "anom": [1720, 1731], "anoth": [1251, 1426, 1521, 1522, 1532, 1635, 1725, 1729, 1733, 1734], "anti": [1402, 1436], "antialias": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524, 1535, 1539, 1540], "anticlockwis": 1495, "antigrain": 1402, "anymor": 1152, "anyth": [1395, 1402, 1442], "api": [0, 1404, 1405, 1443, 1444, 1476, 1713, 1716, 1718, 1724, 1732], "apigen": 0, "appear": [0, 323, 324, 869, 1134, 1269, 1431, 1502, 1507, 1511, 1514, 1518, 1537, 1714, 1716, 1726, 1732, 1734], "append": [213, 215, 244, 247, 289, 292, 1729], "appli": [0, 3, 49, 92, 266, 365, 366, 379, 381, 384, 388, 404, 406, 860, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1025, 1134, 1143, 1169, 1170, 1173, 1174, 1175, 1176, 1178, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1206, 1207, 1240, 1250, 1261, 1266, 1267, 1270, 1277, 1285, 1292, 1359, 1394, 1397, 1402, 1415, 1426, 1427, 1430, 1431, 1434, 1448, 1451, 1453, 1454, 1497, 1510, 1517, 1523, 1525, 1537, 1548, 1555, 1668, 1694, 1695, 1704, 1708, 1714, 1716, 1718, 1724, 1734], "applic": [0, 252, 1531, 1699, 1703, 1713, 1716, 1729], "apply_aspect": [1134, 1252], "apply_theta_transform": [1149, 1200], "apply_ufunc": [0, 46, 49, 53, 59, 63, 67, 87, 92, 101, 187, 188, 195, 213, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1701, 1724], "approach": [1452, 1716, 1718, 1720, 1725, 1731], "appropri": [1214, 1233, 1267, 1424, 1426], "approxim": [0, 1269, 1397, 1725], "ar": [0, 1, 46, 48, 49, 52, 53, 57, 59, 62, 63, 66, 67, 71, 87, 90, 92, 95, 96, 101, 107, 157, 191, 195, 213, 218, 225, 234, 237, 242, 244, 250, 252, 283, 287, 289, 294, 296, 297, 299, 300, 304, 306, 310, 329, 332, 343, 364, 408, 413, 416, 422, 427, 430, 432, 441, 447, 449, 451, 453, 460, 466, 468, 472, 477, 481, 485, 491, 496, 505, 512, 517, 543, 544, 548, 557, 581, 585, 586, 588, 589, 592, 593, 594, 595, 599, 602, 606, 609, 613, 614, 617, 618, 622, 623, 628, 630, 631, 634, 636, 637, 640, 641, 647, 651, 652, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 684, 686, 691, 692, 701, 702, 711, 712, 714, 721, 722, 730, 829, 837, 845, 853, 860, 950, 955, 956, 961, 962, 967, 968, 973, 974, 979, 980, 985, 986, 991, 992, 997, 998, 1003, 1034, 1035, 1036, 1050, 1056, 1057, 1118, 1119, 1134, 1171, 1178, 1190, 1199, 1208, 1230, 1236, 1240, 1242, 1251, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1271, 1272, 1275, 1279, 1285, 1289, 1291, 1292, 1294, 1295, 1298, 1312, 1320, 1324, 1338, 1356, 1357, 1377, 1392, 1394, 1396, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1406, 1410, 1413, 1414, 1416, 1417, 1424, 1425, 1426, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1442, 1445, 1446, 1447, 1448, 1451, 1453, 1458, 1459, 1460, 1461, 1468, 1479, 1480, 1482, 1484, 1498, 1499, 1502, 1508, 1510, 1511, 1512, 1515, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1550, 1552, 1555, 1560, 1577, 1583, 1584, 1586, 1593, 1594, 1600, 1601, 1607, 1608, 1615, 1616, 1623, 1634, 1696, 1701, 1703, 1704, 1706, 1709, 1710, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1737], "arang": 1720, "arbitrari": [1258, 1262, 1289, 1318, 1425, 1435, 1512, 1519, 1714, 1736], "arc": 1199, "area": [0, 557, 599, 600, 1134, 1251, 1294, 1295, 1398, 1426, 1430, 1435, 1451, 1525, 1526, 1540, 1550, 1551, 1578, 1584, 1586, 1588, 1594, 1596, 1603, 1610, 1618, 1629, 1634, 1635, 1706, 1717, 1727], "areageometri": [367, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1594, 1601, 1608, 1616, 1617, 1632, 1706], "areaintersect": [1584, 1585, 1706], "areaunion": [1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1706], "arg": [1, 17, 18, 27, 28, 101, 157, 161, 162, 177, 179, 187, 190, 198, 209, 210, 213, 222, 223, 224, 260, 261, 296, 303, 306, 309, 314, 315, 316, 327, 329, 331, 332, 338, 343, 350, 351, 352, 358, 362, 379, 380, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 409, 410, 416, 427, 428, 430, 431, 432, 447, 449, 450, 451, 452, 453, 466, 467, 468, 477, 485, 496, 512, 513, 517, 530, 535, 564, 565, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 687, 692, 702, 712, 714, 722, 731, 732, 735, 736, 739, 740, 743, 744, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1009, 1018, 1028, 1038, 1045, 1048, 1051, 1053, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1105, 1107, 1111, 1114, 1115, 1116, 1118, 1119, 1134, 1143, 1148, 1178, 1179, 1199, 1236, 1260, 1264, 1266, 1268, 1281, 1282, 1293, 1301, 1411, 1414, 1424, 1425, 1426, 1431, 1435, 1445, 1446, 1480, 1490, 1491, 1499, 1517, 1525, 1529, 1530, 1539, 1540, 1541, 1542, 1559, 1560, 1632, 1703, 1706], "argument": [0, 18, 19, 28, 44, 179, 204, 223, 243, 261, 288, 315, 352, 382, 454, 535, 614, 732, 736, 740, 744, 1007, 1011, 1016, 1018, 1037, 1053, 1062, 1066, 1087, 1095, 1107, 1118, 1119, 1142, 1190, 1250, 1255, 1258, 1261, 1262, 1265, 1266, 1267, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1399, 1404, 1405, 1406, 1411, 1413, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1492, 1502, 1508, 1510, 1511, 1515, 1517, 1518, 1523, 1524, 1525, 1529, 1530, 1535, 1537, 1539, 1540, 1541, 1560, 1632, 1710, 1716, 1718, 1719, 1724, 1726, 1727, 1732], "arithmet": 1269, "arithmeticerror": 1576, "around": [0, 1214, 1233, 1267, 1269, 1414, 1445, 1446, 1499, 1525, 1530, 1535, 1717, 1718], "arrai": [0, 27, 45, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 187, 195, 196, 197, 213, 216, 225, 227, 237, 239, 241, 244, 248, 252, 253, 259, 283, 284, 286, 289, 293, 296, 306, 322, 323, 324, 327, 329, 330, 332, 346, 352, 358, 363, 413, 416, 418, 427, 430, 432, 436, 447, 449, 451, 453, 457, 466, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 543, 544, 547, 550, 552, 553, 581, 583, 586, 587, 589, 591, 593, 599, 606, 613, 614, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 761, 766, 773, 779, 787, 794, 804, 809, 812, 819, 822, 829, 835, 837, 843, 845, 851, 853, 862, 867, 869, 874, 876, 882, 911, 916, 922, 928, 1037, 1134, 1143, 1148, 1169, 1170, 1171, 1173, 1178, 1179, 1193, 1194, 1195, 1199, 1206, 1240, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1298, 1377, 1392, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1415, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1512, 1519, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1539, 1540, 1541, 1546, 1550, 1551, 1552, 1555, 1574, 1575, 1629, 1636, 1637, 1638, 1639, 1699, 1716, 1718, 1720, 1721, 1723, 1724, 1725, 1729, 1731, 1734], "arrang": [1292, 1398], "array_lik": [105, 178, 187, 188, 217, 307, 323, 324, 412, 420, 439, 458, 469, 489, 502, 519, 521], "arriv": 1292, "arrow": [1134, 1251, 1253, 1266, 1291, 1435, 1436, 1532], "arrowprop": [1251, 1253], "arrows": 1532, "arrowstyl": [1251, 1253, 1532], "articl": [837, 845, 853, 916, 922, 1711], "artifact": [1402, 1424, 1442], "artifici": [1424, 1729], "artist": [0, 1004, 1006, 1008, 1033, 1069, 1074, 1134, 1135, 1138, 1240, 1241, 1242, 1250, 1251, 1254, 1256, 1257, 1258, 1261, 1262, 1269, 1271, 1277, 1279, 1283, 1284, 1285, 1287, 1288, 1289, 1291, 1296, 1298, 1306, 1312, 1314, 1316, 1318, 1320, 1323, 1329, 1330, 1334, 1338, 1340, 1341, 1349, 1356, 1358, 1393, 1394, 1395, 1398, 1402, 1405, 1409, 1415, 1416, 1420, 1427, 1428, 1429, 1431, 1432, 1433, 1434, 1438, 1439, 1452, 1460, 1462, 1463, 1464, 1467, 1470, 1471, 1474, 1478, 1480, 1482, 1483, 1503, 1504, 1505, 1520, 1524, 1525, 1527, 1531, 1532, 1543, 1544, 1545, 1548, 1555, 1705], "artistanim": 1007, "artistlist": [1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142], "arxiv": 986, "ascend": [1539, 1540], "ascii": 1576, "asinhscal": [1510, 1517], "ask": 1730, "aspect": [1134, 1252, 1253, 1302, 1305, 1307, 1313, 1319, 1402, 1417, 1430, 1441, 1447, 1448, 1451, 1453, 1461, 1479, 1524], "assencio": 1634, "assertionerror": 1576, "assign": [1397, 1431, 1525, 1531, 1539, 1540], "associ": [187, 1134, 1143, 1149, 1199, 1200, 1218, 1242, 1266, 1269, 1271, 1298, 1327, 1351, 1398, 1402, 1494, 1699, 1714, 1716, 1721, 1727], "assum": [191, 581, 582, 1269, 1271, 1394, 1525, 1530, 1541, 1634, 1731], "assumpt": [1416, 1723], "asymptot": 1269, "atmospher": [1703, 1704, 1713, 1714, 1719], "attach": [1134, 1251, 1267, 1291, 1397], "attempt": 1710, "attribut": [526, 1299, 1300, 1356, 1363, 1378, 1397, 1478, 1479, 1531, 1532, 1703, 1718, 1719, 1723, 1724], "attributeerror": [1538, 1576], "author": [1711, 1719], "auto": [521, 1134, 1240, 1260, 1307, 1398, 1402, 1424, 1426, 1431, 1435, 1447, 1453, 1468, 1486, 1493, 1508, 1515, 1524, 1555], "autocorrel": [1134, 1240], "autodateformatt": 1432, "autodateloc": 1432, "autograd": 0, "autolim": [1134, 1244, 1439], "autolimit_mod": 1256, "autom": 0, "automat": [0, 198, 199, 231, 269, 296, 297, 298, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1011, 1032, 1079, 1080, 1081, 1082, 1083, 1084, 1199, 1218, 1252, 1256, 1260, 1265, 1269, 1271, 1398, 1404, 1405, 1413, 1414, 1445, 1446, 1502, 1539, 1540, 1541, 1559, 1706, 1716, 1732], "autopct": [1134, 1430], "autorang": 1269, "autosc": [1134, 1214, 1233, 1241, 1255, 1256, 1260, 1308, 1309, 1310, 1372, 1387, 1398, 1413, 1416, 1435, 1454, 1455, 1456, 1506, 1508, 1509, 1513, 1515, 1516, 1531, 1548], "autoscal": [1134, 1255, 1256, 1543, 1544, 1548], "autoscale_on": 1447, "autoscale_view": [1134, 1255, 1256, 1413, 1416, 1431, 1454, 1455, 1456, 1548], "autoscalex_on": 1447, "autoscaley_on": 1447, "autotext": 1430, "avail": [0, 1271, 1313, 1357, 1397, 1399, 1402, 1424, 1425, 1426, 1431, 1442, 1451, 1502, 1524, 1539, 1540, 1550, 1551, 1704, 1709, 1712, 1713, 1715, 1716, 1719, 1727, 1732], "averag": [0, 566, 567, 1285, 1397, 1434, 1435, 1704, 1716, 1723, 1727], "avoid": [332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722, 888, 1039, 1040, 1041, 1152, 1208, 1214, 1230, 1233, 1291, 1448, 1502, 1709, 1718, 1734], "awai": 1266, "await": 0, "awar": 1724, "awesom": 1713, "ax": [1011, 1018, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1064, 1066, 1067, 1069, 1072, 1074, 1085, 1087, 1095, 1096, 1134, 1135, 1138, 1154, 1178, 1199, 1208, 1211, 1214, 1220, 1222, 1233, 1236, 1240, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1267, 1268, 1269, 1271, 1272, 1273, 1274, 1276, 1280, 1281, 1282, 1283, 1284, 1289, 1291, 1293, 1301, 1302, 1305, 1307, 1313, 1321, 1324, 1325, 1328, 1332, 1333, 1335, 1339, 1347, 1348, 1356, 1357, 1362, 1363, 1370, 1372, 1378, 1385, 1387, 1395, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1411, 1413, 1414, 1416, 1417, 1418, 1419, 1424, 1425, 1426, 1430, 1431, 1432, 1435, 1436, 1437, 1439, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1461, 1462, 1463, 1465, 1468, 1469, 1475, 1479, 1480, 1486, 1502, 1507, 1511, 1512, 1514, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1530, 1532, 1533, 1535, 1537, 1538, 1541, 1542, 1543, 1544, 1546, 1551, 1552, 1555, 1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618, 1706, 1717, 1718, 1719, 1720, 1723, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733], "axes_class": 1406, "axes_loc": [1134, 1311, 1447], "axesbas": [1134, 1243], "axesimag": [1134, 1246, 1318, 1328, 1402, 1417, 1425, 1523, 1524], "axhlin": [1134, 1240, 1258, 1261, 1400, 1555], "axhspan": [1134, 1258, 1259, 1263], "axi": [771, 1011, 1039, 1040, 1041, 1042, 1043, 1044, 1061, 1062, 1067, 1069, 1072, 1074, 1080, 1081, 1083, 1084, 1085, 1087, 1095, 1096, 1134, 1143, 1149, 1171, 1199, 1200, 1208, 1212, 1216, 1218, 1220, 1228, 1230, 1234, 1255, 1256, 1258, 1259, 1260, 1262, 1263, 1265, 1267, 1289, 1291, 1308, 1312, 1356, 1362, 1364, 1365, 1366, 1367, 1370, 1372, 1377, 1379, 1380, 1381, 1382, 1385, 1387, 1392, 1394, 1396, 1397, 1398, 1399, 1402, 1405, 1407, 1408, 1413, 1414, 1416, 1430, 1432, 1435, 1436, 1437, 1443, 1444, 1445, 1446, 1454, 1458, 1459, 1460, 1484, 1486, 1498, 1499, 1506, 1507, 1508, 1510, 1512, 1513, 1514, 1515, 1517, 1519, 1521, 1522, 1523, 1526, 1535, 1537, 1538, 1539, 1540, 1543, 1544, 1550, 1551, 1553, 1554, 1556, 1557, 1578, 1588, 1596, 1603, 1610, 1618, 1636, 1637, 1638, 1639, 1704, 1705, 1706, 1716, 1730, 1734], "axial": [0, 185, 537, 557, 1699, 1704, 1716, 1717], "axial_induct": [537, 538, 539, 540, 541, 542, 1722], "axialinductionmodel": [0, 185, 186, 530, 537, 540, 623, 624, 802, 822, 823, 829, 830, 837, 838, 845, 846, 854, 855, 863, 876, 877, 882, 883, 888, 903, 912, 916, 917, 922, 923, 1699, 1704], "axin1": 1406, "axin2": 1406, "axis_d": 1432, "axisartist_us": 1406, "axisbelow": 1447, "axisymmetr": 1716, "axisymmetricwakemodel": [809, 810, 811, 819, 822, 1709, 1716], "axiwak": [1716, 1722, 1725], "axiwake4": 1725, "axiwake5": 1722, "axiwake6": [1724, 1725], "axiwake9": 1725, "axlin": [1134, 1258, 1261, 1262], "axvlin": [1134, 1261, 1262, 1552], "axvspan": [1134, 1259, 1262, 1263], "azimuth": 1272, "b": [0, 681, 698, 708, 829, 1118, 1119, 1134, 1147, 1152, 1178, 1192, 1240, 1269, 1293, 1402, 1431, 1452, 1454, 1455, 1456, 1460, 1463, 1469, 1475, 1476, 1505, 1555, 1560, 1713, 1717], "back": [0, 1134, 1143, 1215, 1253, 1299, 1300, 1435, 1539, 1640, 1721], "backcompat": 1177, "backend": [1134, 1304, 1402, 1425, 1450, 1492, 1493], "backend_bas": [1279, 1287, 1318], "background": [0, 1533, 1535, 1712, 1714, 1716, 1721, 1727], "backgroundcolor": 1535, "backward": [169, 170, 1291, 1532, 1731], "bad": 1442, "bandwidth": 1551, "bar": [379, 380, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1096, 1134, 1264, 1265, 1267, 1268, 1291, 1318, 1397, 1398], "bar_label": [1134, 1265], "bar_label_demo": 1265, "barb": [1134, 1266], "barb_incr": 1266, "barbcolor": 1266, "barcontain": [1265, 1267, 1398], "barg": 1011, "barh": [1134, 1265, 1267, 1398], "barlinecol": 1291, "barsabov": 1291, "barstack": 1398, "bartlett": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "base": [0, 1, 3, 17, 19, 27, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 72, 87, 89, 92, 94, 96, 98, 99, 100, 101, 103, 157, 179, 185, 195, 196, 198, 210, 213, 214, 216, 223, 225, 227, 228, 237, 239, 244, 248, 252, 253, 261, 262, 270, 276, 283, 284, 289, 293, 296, 306, 315, 327, 329, 330, 332, 339, 343, 346, 351, 358, 364, 379, 380, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 408, 412, 414, 415, 416, 418, 427, 428, 430, 431, 432, 436, 447, 449, 450, 451, 452, 453, 454, 457, 466, 467, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 530, 537, 540, 543, 544, 547, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 583, 586, 587, 589, 591, 593, 599, 600, 606, 607, 613, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 731, 735, 739, 743, 747, 751, 754, 758, 759, 761, 764, 765, 766, 771, 772, 773, 776, 777, 779, 784, 785, 787, 791, 792, 794, 801, 804, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 870, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1010, 1045, 1052, 1055, 1059, 1065, 1067, 1070, 1071, 1072, 1075, 1076, 1078, 1086, 1089, 1092, 1094, 1097, 1114, 1118, 1119, 1122, 1134, 1135, 1199, 1208, 1211, 1230, 1232, 1236, 1251, 1253, 1266, 1267, 1269, 1271, 1397, 1398, 1405, 1414, 1417, 1435, 1438, 1440, 1445, 1446, 1482, 1483, 1539, 1540, 1559, 1560, 1564, 1569, 1572, 1573, 1577, 1616, 1692, 1695, 1696, 1699, 1701, 1703, 1704, 1705, 1706, 1707, 1709, 1710, 1713, 1715, 1716, 1717, 1720, 1722, 1723, 1724, 1727, 1728, 1729, 1733, 1734], "base_class": 530, "base_fram": [764, 765, 801, 802], "base_st": [453, 454], "base_states_arg": [453, 454], "base_states_kwarg": 454, "baseband": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "baseexcept": 1576, "baseexceptiongroup": 1576, "basefmt": [1134, 1529], "baselin": [1134, 1267, 1364, 1365, 1379, 1380, 1502, 1511, 1518, 1525, 1526, 1529, 1535], "basic": [49, 323, 377, 378, 543, 557, 1431, 1694, 1700, 1702, 1704, 1723, 1729], "basic_ctrl": [3, 1722, 1724], "basicfarmcontrol": [543, 1704, 1722, 1724], "bastankhah": [0, 801, 876, 882, 888, 1704, 1709, 1716, 1734], "bastankhah025": 0, "bastankhah025_": 1722, "bastankhah025_linear": 1722, "bastankhah025_linear_ambka0": 1722, "bastankhah025_linear_k0": 1722, "bastankhah025_linear_ka0": 1722, "bastankhah025_linear_lim_k004": 1718, "bastankhah025_linear_loc_k004": 1729, "bastankhah025b_": 1722, "bastankhah025b_linear": 1722, "bastankhah025b_linear_ambka0": 1722, "bastankhah025b_linear_k0": 1722, "bastankhah025b_linear_ka0": 1722, "bastankhah2014": [0, 876, 877, 878, 879, 880, 881, 1709, 1722, 1724], "bastankhah2014_": [1716, 1722], "bastankhah2014_linear": [1716, 1722, 1733], "bastankhah2014_linear_ambka0": 1722, "bastankhah2014_linear_k0": 1722, "bastankhah2014_linear_k002": [1726, 1728], "bastankhah2014_linear_k004": [1710, 1724, 1725], "bastankhah2014_linear_ka0": 1722, "bastankhah2014_linear_ka02": 1723, "bastankhah2014_linear_ka02_kb0012": 1716, "bastankhah2014_linear_lim_k004": 1731, "bastankhah2014_linear_loc_k004": 1720, "bastankhah2014_quadratic_ka02": 1732, "bastankhah2014b_": 1722, "bastankhah2014b_linear": 1722, "bastankhah2014b_linear_ambka0": 1722, "bastankhah2014b_linear_k0": 1722, "bastankhah2014b_linear_ka0": 1722, "bastankhah2016": [0, 882, 883, 884, 885, 886, 887, 1709, 1718, 1722], "bastankhah2016_": [1716, 1722], "bastankhah2016_linear": [1722, 1734], "bastankhah2016_linear_ambka0": 1722, "bastankhah2016_linear_k0": 1722, "bastankhah2016_linear_ka0": 1722, "bastankhah2016_linear_lim_ambka04": 1716, "bastankhah2016_linear_lim_k004": 1718, "bastankhah2016b_": 1722, "bastankhah2016b_linear": 1722, "bastankhah2016b_linear_ambka0": 1722, "bastankhah2016b_linear_k0": 1722, "bastankhah2016b_linear_ka0": 1722, "bastankhah2016model": [801, 882, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 1709], "bastankhah_linear": 1733, "bastankhah_quadrat": 1732, "bastankhahwak": 0, "bbox": [1134, 1143, 1172, 1178, 1199, 1251, 1252, 1339, 1356, 1447, 1451, 1457, 1462, 1479, 1533, 1535, 1546], "bbox_extra_artist": 1356, "bbox_inch": [1134, 1329, 1471], "bboxbas": [1178, 1181, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1356, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1462, 1524, 1533], "becaus": [1229, 1265, 1397, 1402, 1413, 1426, 1442, 1511, 1518, 1539, 1540, 1541, 1717], "becom": 1736, "been": [0, 198, 203, 207, 268, 373, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 1134, 1143, 1155, 1178, 1199, 1241, 1256, 1266, 1395, 1398, 1402, 1409, 1435, 1441, 1693, 1695, 1699, 1710, 1713, 1724, 1729, 1735], "befor": [0, 180, 190, 224, 237, 238, 316, 408, 642, 1039, 1040, 1041, 1079, 1080, 1081, 1082, 1083, 1084, 1199, 1200, 1215, 1229, 1252, 1277, 1285, 1289, 1291, 1397, 1399, 1402, 1415, 1416, 1424, 1425, 1426, 1432, 1434, 1442, 1508, 1509, 1511, 1516, 1518, 1523, 1537, 1539, 1540, 1626, 1717, 1718, 1724, 1729, 1735], "began": [1174, 1196], "begin": [1118, 1124, 1289, 1400, 1525, 1552, 1724], "behav": [1256, 1486], "behavior": [1134, 1255, 1261, 1266, 1269, 1338, 1413, 1435, 1478, 1493], "behaviour": [1219, 1235, 1468, 1718, 1731], "behind": [1411, 1716, 1717, 1725], "being": [0, 46, 48, 49, 52, 53, 57, 59, 62, 63, 66, 67, 71, 87, 90, 92, 95, 101, 107, 213, 218, 225, 234, 237, 242, 244, 250, 252, 283, 287, 289, 294, 296, 304, 306, 310, 329, 332, 416, 422, 427, 430, 432, 441, 447, 449, 451, 453, 460, 466, 468, 472, 477, 481, 485, 491, 496, 505, 512, 517, 543, 544, 548, 581, 585, 586, 588, 589, 592, 593, 599, 606, 613, 617, 618, 622, 623, 628, 630, 634, 636, 640, 641, 647, 651, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 684, 686, 691, 692, 701, 702, 711, 712, 714, 721, 722, 730, 1251, 1253, 1258, 1262, 1294, 1295, 1320, 1443, 1444, 1521, 1522, 1626, 1714, 1717, 1722, 1724], "belong": [1134, 1323, 1467, 1720], "below": [0, 623, 1080, 1081, 1083, 1084, 1134, 1152, 1251, 1264, 1266, 1268, 1269, 1281, 1282, 1291, 1312, 1324, 1340, 1404, 1406, 1416, 1424, 1426, 1431, 1435, 1436, 1460, 1468, 1482, 1535, 1539, 1540, 1550, 1551, 1710, 1715, 1717], "bend": [0, 801, 1704, 1716, 1734], "bendat": [1277, 1285, 1434], "beneath": 1430, "benefit": 1729, "beopen": 1576, "bernhard": 1711, "bessel": 1402, "best": [1267, 1430, 1721, 1724, 1728], "beta": [0, 801, 802, 882, 883, 888, 903, 1671, 1708], "better": 1724, "between": [0, 92, 93, 413, 414, 606, 681, 698, 708, 1134, 1171, 1250, 1251, 1258, 1262, 1264, 1266, 1268, 1269, 1271, 1277, 1281, 1282, 1285, 1292, 1293, 1294, 1295, 1364, 1365, 1379, 1380, 1397, 1398, 1402, 1405, 1411, 1415, 1424, 1425, 1426, 1427, 1430, 1434, 1436, 1442, 1493, 1523, 1526, 1530, 1537, 1539, 1540, 1555, 1627, 1634, 1635, 1663, 1704, 1708, 1718, 1720, 1721, 1723, 1725, 1729], "betz": [0, 624, 822, 823, 863, 870, 911, 912, 1722], "betzaxialinduct": [0, 537, 538, 539, 1704, 1722], "bevel": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "bewar": 1727, "beyond": [883, 1269, 1271], "bi": 1399, "bibtex": 1711, "bicub": 1402, "big": 1291, "bilinear": 1402, "bin": [0, 1060, 1062, 1063, 1134, 1264, 1268, 1281, 1282, 1289, 1397, 1398, 1399, 1523, 1576, 1706, 1715, 1719, 1732, 1733], "binnd": 1719, "bitmap": [1134, 1483], "black": [0, 1264, 1267, 1268, 1270, 1281, 1282, 1431, 1493, 1535], "blackman": [1250, 1277, 1285, 1402, 1415, 1427, 1434, 1523], "blade": [540, 606, 1704], "blend": [1134, 1154, 1292, 1304, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1450, 1539, 1540], "blh_mirror_h": [1716, 1722], "blh_mirror_h500": [1718, 1722], "blit": 1452, "blob": 1574, "block": [1, 17, 27, 120, 157, 160, 166, 1277, 1285, 1434, 1523, 1698, 1713, 1720], "block_converg": [1, 17, 27, 120, 157, 160, 1698], "blockag": [0, 829, 837, 845, 853, 854, 1709, 1712, 1713, 1716], "blockage_comparison": 0, "blockingioerror": 1576, "blow": [1264, 1268, 1281, 1282], "blowto": [1264, 1268, 1281, 1282], "blue": [1270, 1293, 1431, 1480], "bmbf": 1713, "bmodel": 1718, "bmwk": 1713, "bname": 1718, "bo": 1431, "bodi": [0, 829, 1269, 1271, 1550, 1551, 1709, 1717, 1718], "bold": 1535, "book": [0, 1, 3, 17, 27, 157, 158, 164, 176, 323, 324, 376, 410, 524, 525, 526, 527, 528, 812, 813, 823, 1092, 1093, 1094, 1095, 1097, 1098, 1535, 1710, 1712, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1726, 1727, 1728, 1730, 1731, 1732, 1736], "bool": [4, 5, 19, 21, 27, 28, 41, 44, 56, 70, 74, 79, 83, 106, 159, 166, 168, 169, 170, 182, 190, 194, 202, 203, 207, 227, 232, 233, 237, 238, 266, 267, 268, 271, 277, 298, 300, 325, 326, 328, 330, 335, 336, 337, 345, 359, 365, 372, 373, 379, 380, 385, 390, 395, 397, 403, 407, 408, 411, 416, 417, 485, 486, 513, 519, 521, 525, 529, 560, 574, 589, 590, 595, 599, 600, 606, 607, 616, 620, 626, 632, 638, 641, 642, 644, 645, 653, 659, 662, 665, 670, 679, 680, 681, 682, 683, 687, 688, 689, 690, 695, 698, 699, 700, 705, 708, 709, 710, 716, 719, 720, 725, 728, 729, 731, 732, 735, 736, 739, 740, 743, 744, 769, 807, 810, 811, 814, 817, 820, 821, 824, 826, 827, 834, 837, 838, 842, 845, 846, 850, 854, 855, 859, 862, 863, 865, 872, 879, 880, 885, 886, 907, 908, 914, 919, 920, 922, 923, 925, 927, 933, 938, 943, 948, 950, 951, 953, 959, 962, 963, 965, 971, 974, 975, 977, 983, 989, 992, 993, 995, 1001, 1009, 1010, 1011, 1020, 1026, 1032, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1053, 1056, 1057, 1060, 1062, 1063, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1103, 1109, 1110, 1111, 1114, 1117, 1121, 1143, 1149, 1171, 1178, 1190, 1199, 1200, 1240, 1250, 1251, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1279, 1281, 1282, 1285, 1289, 1291, 1294, 1295, 1296, 1312, 1339, 1356, 1375, 1377, 1390, 1392, 1394, 1397, 1398, 1399, 1402, 1404, 1406, 1410, 1413, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1438, 1442, 1447, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1460, 1463, 1468, 1469, 1471, 1474, 1475, 1478, 1483, 1493, 1505, 1508, 1511, 1512, 1515, 1518, 1519, 1523, 1524, 1526, 1533, 1535, 1537, 1538, 1539, 1540, 1546, 1550, 1551, 1555, 1576, 1578, 1582, 1588, 1592, 1596, 1599, 1603, 1606, 1610, 1614, 1618, 1622, 1629, 1630, 1632, 1724], "boolean": [323, 324, 1134, 1329, 1411, 1478, 1532], "boost": [0, 623, 624, 1093, 1664, 1705, 1708, 1716, 1726, 1728], "bootstrap": 1269, "border": [1411, 1430, 1523], "borderaxespad": 1411, "borderpad": 1411, "both": [0, 581, 582, 819, 820, 876, 879, 916, 919, 922, 925, 1134, 1177, 1251, 1255, 1265, 1271, 1272, 1294, 1295, 1375, 1390, 1394, 1397, 1413, 1414, 1416, 1426, 1431, 1443, 1444, 1448, 1479, 1493, 1508, 1515, 1524, 1530, 1532, 1537, 1538, 1539, 1540, 1543, 1544, 1550, 1551, 1715, 1716, 1717, 1718, 1726, 1732, 1733], "bottom": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1364, 1365, 1379, 1380, 1385, 1394, 1397, 1398, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1443, 1444, 1447, 1449, 1451, 1453, 1479, 1486, 1514, 1515, 1524, 1525, 1526, 1529, 1531, 1533, 1535, 1537, 1550, 1551, 1554, 1557], "bound": [0, 345, 416, 485, 1134, 1143, 1172, 1178, 1181, 1199, 1251, 1259, 1263, 1267, 1320, 1356, 1362, 1367, 1382, 1397, 1402, 1404, 1406, 1413, 1506, 1507, 1513, 1514, 1526, 1533, 1546], "boundari": [367, 368, 1011, 1424, 1425, 1426, 1442, 1533, 1539, 1540, 1577, 1578, 1582, 1584, 1586, 1588, 1592, 1594, 1596, 1599, 1601, 1603, 1606, 1608, 1610, 1614, 1616, 1618, 1622, 1718, 1719, 1722], "bounds_error": [416, 485, 1721], "box": [1134, 1143, 1172, 1178, 1199, 1251, 1252, 1260, 1264, 1268, 1269, 1271, 1273, 1302, 1313, 1320, 1356, 1362, 1402, 1404, 1405, 1447, 1448, 1453, 1461, 1464, 1507, 1514, 1533, 1535, 1537, 1551], "box_aspect": 1447, "box_plot": [1269, 1271], "boxplot": [1134, 1269, 1271, 1551], "boxplot_demo": [1269, 1271], "boxprop": [1269, 1271], "bracket": [0, 1298], "branch": [1143, 1154, 1178, 1199, 1713, 1715], "break": 1533, "breakpoint": 1576, "bremen": [1719, 1728], "broadcast": [1635, 1637, 1638], "broader": 1252, "broken": 1435, "broken_barh": [1134, 1270], "broken_streamlin": 1532, "brokenpipeerror": 1576, "browser": 0, "brtl": 1533, "bubbl": 1431, "buffererror": 1576, "bug": 0, "build": [1715, 1716], "built": 1576, "builtin": [1190, 1576], "builtinimport": 1576, "bump": 1531, "bundari": [1582, 1592, 1599, 1614, 1622], "busi": 1292, "butt": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "button": [1134, 1272, 1273, 1286, 1290, 1336, 1476, 1528], "bw_method": 1551, "bxp": [1134, 1269, 1271], "bxpstat": [1134, 1271], "byte": 1576, "bytearrai": 1576, "byteswarn": 1576, "bz2": [1127, 1128, 1130, 1131], "c": [0, 1118, 1119, 1134, 1135, 1140, 1147, 1178, 1192, 1240, 1250, 1258, 1260, 1261, 1262, 1266, 1275, 1277, 1285, 1289, 1291, 1394, 1397, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1447, 1451, 1453, 1480, 1524, 1535, 1538, 1541, 1555, 1560, 1576, 1715, 1734, 1735], "c0": 1529, "c1": [916, 917], "c2": [916, 917, 1529], "c3": 1529, "c_": 1277, "cach": [1140, 1172], "calc": 1725, "calc_amplitude_sigma": [819, 820, 876, 879, 916, 919, 922, 925], "calc_area": [1635, 1706], "calc_centrelin": [822, 824, 862, 865, 869, 872, 911, 914], "calc_centreline_integr": [343, 345, 758, 764, 771, 776, 784, 791, 801], "calc_chunk_s": [198, 201, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "calc_data": [888, 904], "calc_farm": [0, 1, 4, 17, 19, 27, 31, 157, 161, 1710, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734], "calc_farm_effici": [1018, 1022, 1723, 1732, 1733], "calc_farm_mean": [1018, 1023], "calc_farm_sum": [1018, 1024], "calc_farm_yield": [1018, 1025, 1723, 1733], "calc_final_wake_delta": [364, 366, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1002], "calc_mean_farm_pow": [1018, 1026, 1723, 1726, 1732, 1733], "calc_ord": [343, 346, 758, 761, 764, 766, 771, 773, 776, 779, 784, 787, 791, 794, 801, 804], "calc_par": [27, 28, 46, 49, 53, 59, 63, 67, 87, 92, 101, 213, 225, 235, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 385, 390, 395, 397, 403, 407, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722], "calc_paramet": [1, 4, 5], "calc_point": [0, 1, 5, 17, 27, 32, 157, 162, 1053, 1079, 1080, 1081, 1082, 1083, 1084, 1716, 1717, 1718, 1724, 1730], "calc_states_indic": [449, 451, 453, 456, 466], "calc_states_mean": [1018, 1027], "calc_states_std": [1018, 1028], "calc_states_sum": [1018, 1029], "calc_turbine_mean": [1018, 1030], "calc_turbine_sum": [1018, 1031], "calc_turbine_yield": [1018, 1025, 1032, 1732], "calc_var": [296, 297, 593, 630, 631], "calc_w": [1562, 1565, 1566, 1570, 1707], "calc_wake_radiu": [822, 825, 862, 866, 869, 873, 911, 915], "calc_wakes_x_r": [809, 810, 819, 821, 822, 826, 862, 869, 876, 911, 916, 922], "calc_wakes_x_yz": [809, 811, 812, 814, 819, 822, 862, 869, 876, 882, 885, 911, 916, 922], "calcul": [0, 1, 4, 5, 17, 19, 20, 27, 28, 30, 31, 32, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 79, 83, 87, 89, 90, 92, 94, 95, 101, 103, 106, 107, 110, 157, 161, 162, 181, 183, 187, 188, 195, 196, 198, 202, 205, 211, 213, 216, 218, 221, 225, 227, 228, 229, 230, 231, 234, 235, 237, 239, 240, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 265, 267, 269, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 288, 289, 293, 294, 296, 297, 298, 300, 301, 304, 306, 308, 310, 313, 327, 329, 330, 332, 339, 340, 341, 343, 345, 346, 347, 348, 358, 360, 361, 363, 364, 365, 366, 372, 374, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 418, 421, 422, 423, 425, 426, 427, 429, 430, 432, 436, 438, 440, 441, 443, 445, 446, 447, 449, 451, 453, 454, 457, 459, 460, 461, 464, 465, 466, 467, 468, 470, 471, 472, 473, 475, 476, 477, 479, 480, 481, 484, 485, 487, 490, 491, 492, 494, 495, 496, 499, 501, 503, 504, 505, 507, 510, 511, 512, 514, 515, 516, 517, 525, 534, 543, 544, 547, 548, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 599, 603, 606, 607, 610, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 626, 627, 628, 630, 631, 632, 633, 634, 636, 638, 639, 640, 641, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 674, 676, 679, 680, 684, 686, 688, 691, 692, 695, 696, 697, 701, 702, 705, 706, 707, 711, 712, 714, 716, 717, 718, 721, 722, 725, 726, 727, 730, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 749, 750, 751, 752, 753, 754, 756, 757, 758, 759, 761, 762, 763, 764, 766, 767, 768, 769, 771, 773, 774, 775, 776, 779, 780, 781, 783, 784, 787, 788, 789, 790, 791, 794, 795, 796, 797, 798, 799, 800, 801, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 832, 833, 834, 835, 837, 838, 840, 841, 842, 843, 845, 846, 848, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 862, 863, 865, 866, 867, 869, 870, 872, 873, 874, 876, 879, 880, 882, 885, 886, 888, 904, 908, 911, 914, 915, 916, 919, 920, 922, 925, 926, 927, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 979, 980, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1009, 1010, 1018, 1020, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1037, 1039, 1040, 1041, 1051, 1052, 1053, 1058, 1059, 1077, 1078, 1134, 1250, 1253, 1269, 1277, 1285, 1294, 1295, 1320, 1329, 1399, 1415, 1427, 1434, 1471, 1523, 1525, 1538, 1539, 1540, 1541, 1542, 1551, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1572, 1574, 1575, 1577, 1582, 1584, 1586, 1592, 1594, 1599, 1601, 1606, 1608, 1614, 1616, 1622, 1634, 1635, 1636, 1637, 1638, 1639, 1645, 1646, 1673, 1674, 1692, 1693, 1694, 1695, 1696, 1699, 1701, 1704, 1705, 1706, 1707, 1708, 1709, 1716, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1736], "calib3d": 1574, "call": [0, 157, 195, 225, 243, 244, 288, 289, 623, 1039, 1040, 1041, 1134, 1143, 1150, 1161, 1168, 1178, 1199, 1208, 1214, 1215, 1217, 1218, 1229, 1230, 1233, 1237, 1242, 1250, 1252, 1256, 1260, 1265, 1266, 1277, 1285, 1286, 1290, 1291, 1292, 1298, 1318, 1356, 1394, 1397, 1399, 1402, 1409, 1413, 1414, 1415, 1416, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1442, 1445, 1446, 1452, 1454, 1459, 1460, 1472, 1480, 1497, 1523, 1524, 1525, 1528, 1529, 1530, 1539, 1540, 1541, 1542, 1543, 1544, 1548, 1699, 1704, 1710, 1714, 1715, 1716, 1718, 1720, 1724, 1725, 1726, 1730, 1731, 1734, 1736], "call_axes_loc": [1134, 1356], "callabl": [1240, 1242, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1447, 1449, 1457, 1478, 1523, 1524, 1533, 1535, 1551, 1555, 1576], "callback": [187, 190, 222, 224, 260, 316, 1134, 1242, 1423, 1440], "caller": 1356, "calm": [1264, 1268, 1281, 1282], "calm_limit": [1264, 1268, 1281, 1282], "calul": 1716, "can": [0, 332, 581, 812, 888, 1039, 1040, 1041, 1134, 1135, 1140, 1143, 1152, 1168, 1178, 1199, 1242, 1250, 1251, 1253, 1255, 1259, 1260, 1261, 1263, 1265, 1266, 1267, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1296, 1318, 1356, 1397, 1398, 1399, 1402, 1404, 1405, 1413, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1442, 1443, 1444, 1445, 1446, 1448, 1463, 1478, 1484, 1498, 1499, 1510, 1511, 1512, 1517, 1518, 1519, 1523, 1524, 1525, 1530, 1531, 1532, 1533, 1535, 1539, 1540, 1541, 1542, 1546, 1576, 1702, 1703, 1704, 1709, 1710, 1711, 1713, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "can_pan": [1134, 1272], "can_zoom": [1134, 1273], "cancel": [1143, 1152, 1178, 1199], "cannot": [1190, 1294, 1295, 1416, 1431, 1521, 1522, 1531], "canva": [1356, 1402], "cap": [1127, 1129, 1267, 1269, 1271, 1291, 1535, 1655, 1658, 1689, 1691, 1708, 1732], "capabl": [0, 1177, 1713], "capac": [0, 1018, 1020, 1641, 1655, 1708, 1732], "caplin": 1291, "capprop": [1269, 1271], "capsiz": [1267, 1291], "capstyl": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "capthick": 1291, "capwidth": [1269, 1271], "cardin": [1264, 1268, 1281, 1282, 1451, 1453], "care": 1724, "caret": 1291, "carri": [1402, 1426, 1716, 1724, 1725], "cartesian": [1134, 1143, 1149, 1199, 1200], "case": [0, 300, 386, 416, 485, 595, 1032, 1060, 1062, 1087, 1095, 1103, 1121, 1153, 1155, 1174, 1196, 1215, 1230, 1251, 1252, 1256, 1260, 1264, 1266, 1268, 1269, 1271, 1281, 1282, 1291, 1298, 1318, 1370, 1385, 1397, 1398, 1399, 1402, 1424, 1425, 1426, 1431, 1435, 1436, 1442, 1448, 1453, 1464, 1508, 1511, 1512, 1515, 1518, 1519, 1524, 1525, 1530, 1531, 1539, 1540, 1541, 1624, 1701, 1714, 1716, 1718, 1720, 1724, 1726, 1728, 1729, 1730, 1731, 1734], "cast": 1576, "categor": 1267, "categori": 1719, "catrom": 1402, "caus": [0, 55, 136, 254, 255, 278, 348, 360, 365, 555, 556, 561, 575, 762, 768, 775, 781, 790, 797, 806, 815, 824, 825, 832, 840, 848, 857, 865, 866, 872, 873, 907, 914, 915, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1162, 1188, 1204, 1215, 1267, 1424, 1698, 1716, 1718, 1720, 1725], "caution": 1716, "cbar": [1550, 1551], "cd": [1715, 1737], "cdot": 1555, "cell": [1397, 1425, 1532, 1533], "cellcolour": [1134, 1533], "cellloc": [1134, 1533], "celltext": [1134, 1533], "center": [1134, 1250, 1251, 1264, 1265, 1266, 1267, 1268, 1277, 1281, 1282, 1285, 1292, 1357, 1364, 1365, 1379, 1380, 1397, 1398, 1402, 1415, 1424, 1426, 1427, 1430, 1434, 1442, 1451, 1453, 1493, 1502, 1507, 1514, 1523, 1533, 1535, 1539, 1540, 1550, 1551, 1725], "center_baselin": [1134, 1364, 1365, 1379, 1380, 1535], "centr": [0, 1, 3, 299, 413, 562, 593, 594, 602, 609, 630, 758, 759, 776, 777, 784, 785, 791, 792, 822, 824, 862, 865, 869, 872, 911, 914, 1264, 1268, 1281, 1282, 1594, 1595, 1608, 1609, 1634, 1635, 1679, 1704, 1706, 1708, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734], "central": 1269, "centrelin": [0, 343, 345, 347, 758, 764, 767, 771, 774, 776, 780, 784, 788, 791, 796, 801, 805, 922, 923, 1716, 1717], "centreline_pt": 1717, "centrerotor": [593, 594, 595, 596, 597, 598, 1704, 1722, 1724], "centrum": 1576, "centuri": 1292, "certain": [0, 1716], "cf": [1716, 1728, 1729], "chain": [1143, 1155, 1178, 1199, 1397, 1713], "chang": [0, 636, 637, 1134, 1143, 1156, 1161, 1178, 1183, 1199, 1219, 1235, 1242, 1256, 1260, 1269, 1291, 1394, 1397, 1404, 1405, 1406, 1413, 1414, 1416, 1423, 1431, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1448, 1455, 1456, 1461, 1479, 1506, 1508, 1513, 1515, 1530, 1532, 1535, 1537, 1539, 1540, 1548, 1704, 1713, 1715, 1718, 1719, 1723], "changelog": 0, "channel": [1402, 1715], "charact": [1431, 1529], "characterist": 862, "chart": [1134, 1398, 1430, 1431], "check": [0, 72, 74, 76, 79, 81, 83, 85, 276, 277, 373, 557, 560, 562, 564, 566, 572, 574, 578, 888, 891, 907, 1103, 1121, 1296, 1425, 1530, 1634, 1699, 1710, 1718, 1720, 1724, 1731, 1732], "check_converg": [72, 74, 76, 79, 81, 83, 85], "check_match": [1118, 1121], "check_raw": [375, 1097, 1103], "check_wmodel": [276, 277, 557, 560, 562, 564, 566, 572, 574, 578], "checkout": 1713, "child": [1134, 1243, 1314, 1406, 1428], "childprocesserror": 1576, "children": [1134, 1135, 1138, 1143, 1156, 1168, 1178, 1183, 1199, 1243, 1287, 1356], "chk": [277, 560, 574], "choic": [0, 323, 333, 1011, 1034, 1035, 1036, 1118, 1404, 1405, 1435, 1512, 1519, 1643, 1669, 1706, 1708, 1710, 1714, 1716, 1718, 1720, 1723, 1724, 1725, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "chois": 0, "choos": [1277, 1285, 1397, 1424, 1426, 1434, 1523, 1539, 1540, 1715, 1717, 1718, 1723, 1726, 1733, 1736], "chose": [1716, 1727], "chosen": [0, 1313, 1397, 1404, 1405, 1414, 1431, 1445, 1446, 1461, 1716, 1724], "chr": 1576, "chunk": [0, 1, 5, 17, 20, 27, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 157, 159, 163, 169, 170, 180, 185, 187, 194, 195, 196, 198, 199, 201, 202, 205, 208, 213, 216, 222, 225, 227, 231, 237, 239, 244, 248, 252, 253, 260, 262, 269, 276, 283, 284, 289, 293, 296, 306, 308, 314, 321, 327, 329, 330, 332, 339, 343, 346, 351, 358, 364, 379, 381, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 418, 421, 427, 429, 430, 432, 436, 440, 447, 449, 451, 453, 457, 466, 468, 470, 471, 477, 479, 485, 487, 490, 496, 499, 504, 512, 514, 517, 537, 540, 543, 544, 547, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 583, 584, 586, 587, 589, 591, 593, 599, 606, 613, 616, 618, 620, 621, 623, 626, 630, 632, 636, 638, 641, 644, 646, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 697, 702, 705, 707, 712, 714, 716, 718, 722, 725, 727, 731, 735, 739, 743, 747, 751, 754, 758, 761, 764, 766, 771, 773, 776, 779, 784, 787, 791, 794, 801, 804, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1693, 1696, 1701, 1713, 1716, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1733, 1734], "chunk_data": [379, 381, 384, 388, 404, 406], "chunk_size_point": [198, 199, 386, 391, 394, 396, 398, 399, 405, 1720, 1721, 1723, 1724, 1726, 1730, 1731, 1732, 1733, 1734], "chunk_size_st": [198, 199, 386, 391, 393, 394, 396, 398, 399, 405, 1720, 1721, 1723, 1724, 1725, 1726, 1730, 1731, 1732, 1733, 1734], "chunk_sizes_st": 201, "chunk_sizes_target": 201, "chunk_stor": [1, 17, 27, 157, 163, 180, 385, 390, 395, 397, 403, 407], "chunked_result": 5, "chunki_st": 202, "chunki_target": 202, "ci": [1269, 1271], "cihi": 1271, "cilo": 1271, "circl": [557, 572, 599, 600, 1178, 1230, 1260, 1264, 1266, 1268, 1281, 1282, 1431, 1480, 1499, 1529, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1634, 1635, 1706, 1716], "circular": [1199, 1260], "citat": 1713, "cite": 1711, "cl": [1573, 1584, 1585, 1706], "cl_del": [824, 865, 872, 914], "cl_ipar": [758, 759, 776, 777, 784, 785, 791, 792], "cla": [198, 1134, 1274, 1699], "clabel": [1134, 1275], "claim": 1721, "clariti": [1539, 1540, 1541], "class": [0, 1, 3, 17, 19, 27, 46, 49, 53, 59, 63, 67, 72, 76, 81, 85, 87, 92, 96, 101, 111, 157, 177, 185, 187, 195, 198, 209, 213, 222, 223, 225, 237, 244, 252, 253, 260, 261, 262, 276, 281, 283, 289, 296, 303, 306, 309, 314, 315, 323, 327, 329, 331, 332, 338, 339, 342, 343, 350, 351, 358, 362, 364, 367, 375, 379, 380, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 416, 427, 428, 430, 431, 432, 447, 449, 450, 451, 452, 453, 466, 467, 468, 477, 485, 496, 512, 517, 530, 535, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 673, 674, 675, 676, 677, 686, 687, 692, 693, 702, 703, 712, 713, 714, 715, 722, 723, 731, 735, 739, 743, 747, 751, 754, 758, 759, 764, 765, 771, 772, 776, 777, 784, 785, 791, 792, 801, 802, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 863, 869, 870, 876, 877, 882, 883, 888, 911, 912, 916, 917, 922, 923, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1009, 1010, 1018, 1038, 1045, 1048, 1051, 1052, 1054, 1055, 1058, 1059, 1064, 1065, 1067, 1072, 1077, 1078, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1097, 1105, 1111, 1114, 1118, 1119, 1122, 1127, 1135, 1140, 1143, 1150, 1178, 1190, 1199, 1208, 1217, 1220, 1222, 1230, 1236, 1237, 1296, 1364, 1365, 1366, 1379, 1380, 1381, 1406, 1442, 1510, 1517, 1533, 1559, 1560, 1573, 1576, 1577, 1584, 1586, 1594, 1601, 1608, 1616, 1692, 1694, 1695, 1696, 1697, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1709, 1710, 1713, 1714, 1716, 1719, 1720, 1722, 1724, 1729, 1731, 1734], "class_nam": [530, 535], "classic": [0, 537, 1529, 1704, 1716], "classif": 1709, "classmethod": [1, 7, 17, 22, 27, 38, 101, 111, 157, 177, 187, 190, 198, 209, 213, 222, 224, 260, 276, 281, 296, 303, 306, 309, 314, 316, 317, 318, 327, 329, 331, 332, 338, 339, 342, 343, 350, 358, 362, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 557, 562, 564, 566, 572, 578, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1009, 1018, 1038, 1045, 1048, 1049, 1051, 1054, 1058, 1061, 1064, 1077, 1085, 1088, 1091, 1093, 1105, 1108, 1111, 1127, 1132, 1133, 1134, 1135, 1140, 1143, 1150, 1178, 1199, 1237, 1576], "clean": [888, 905], "cleaner": 0, "clear": [168, 1134, 1261, 1274, 1276, 1736], "clear_mem": [1, 17, 27, 157, 168], "clearer": 1493, "clearli": [1717, 1718, 1725, 1734], "client": [388, 389], "client_par": [388, 389, 404], "clim": [1266, 1270, 1294, 1295, 1397, 1424, 1426, 1435], "climat": 1713, "clip": [1134, 1251, 1271, 1294, 1295, 1316, 1317, 1359, 1377, 1392, 1402, 1414, 1445, 1446, 1462, 1463, 1464, 1509, 1516], "clip_box": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1524, 1533, 1535], "clip_on": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1447, 1524, 1533, 1535], "clip_path": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1524, 1533, 1535], "clipbox": [1134, 1315, 1462], "clockwis": [1352, 1430, 1435, 1436, 1495, 1497], "clone": [1715, 1737], "close": [1294, 1295, 1526, 1532, 1533, 1540, 1577, 1601, 1706, 1710, 1716, 1717, 1720, 1721, 1729, 1731], "closedpolygon": [1601, 1602, 1603, 1604, 1605, 1606, 1607, 1706], "cluster": [0, 388, 389, 404, 1701, 1713, 1724], "cluster_par": [388, 389, 404], "cm": [1264, 1268, 1281, 1282], "cmap": [1039, 1040, 1041, 1042, 1043, 1044, 1096, 1134, 1264, 1266, 1268, 1270, 1281, 1282, 1294, 1295, 1397, 1399, 1402, 1424, 1425, 1426, 1435, 1442, 1523, 1524, 1532, 1539, 1540, 1541, 1710, 1726], "cmax": [1399, 1550, 1551], "cmean": [1550, 1551], "cmedian": [1550, 1551], "cmin": [1399, 1550, 1551], "cn": 1431, "cnri": 1576, "co": [829, 1199, 1724, 1734], "coars": [1719, 1733], "code": [0, 157, 888, 1134, 1251, 1291, 1417, 1431, 1533, 1709, 1710, 1713, 1714, 1715, 1724], "coeffici": [0, 540, 541, 681, 698, 708, 1266, 1574, 1642, 1656, 1708, 1713, 1716, 1718, 1726], "coerc": [1134, 1432], "coher": [1134, 1277], "coincid": [1402, 1531, 1548], "col": 1431, "col_cp": [672, 673, 675], "col_ct": [692, 693, 702, 703, 1716], "col_d": 408, "col_h": [408, 1714], "col_i": [408, 1714], "col_id": 408, "col_index": 408, "col_model": 0, "col_nam": 408, "col_p": [692, 693, 702, 703, 1716], "col_tind": 637, "col_tnam": [637, 1728], "col_turbine_typ": 408, "col_var": [651, 652, 747, 748], "col_w": [672, 673, 692, 693, 702, 1716], "col_ws_cp_fil": 675, "col_ws_ct_fil": 703, "col_ws_p_fil": [702, 703], "col_x": [408, 1714], "col_z": [747, 748], "colcolour": 1533, "collabel": 1533, "collect": [157, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1134, 1135, 1244, 1270, 1278, 1292, 1397, 1399, 1400, 1424, 1426, 1435, 1438, 1439, 1442, 1478, 1550, 1551, 1552, 1730, 1736], "collect_model": [225, 228, 543], "colloc": 1533, "colmap": [637, 1728], "color": [0, 1011, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1415, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1447, 1465, 1466, 1480, 1502, 1524, 1525, 1529, 1530, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1552, 1578, 1588, 1596, 1603, 1610, 1618, 1720, 1732], "color_bi": [1009, 1011, 1723, 1732, 1733], "colorbar": [0, 1298, 1539, 1540], "colormap": [1039, 1040, 1041, 1042, 1043, 1044, 1250, 1264, 1266, 1268, 1270, 1281, 1282, 1294, 1295, 1397, 1399, 1402, 1415, 1424, 1425, 1426, 1427, 1434, 1435, 1442, 1523, 1532, 1539, 1540], "colormapnorm": [1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "colour": 1717, "cols_minmax": [519, 521], "cols_models_post": 408, "cols_models_pr": 408, "column": [408, 432, 434, 496, 498, 519, 521, 581, 582, 618, 619, 637, 651, 652, 673, 675, 677, 692, 693, 702, 703, 714, 722, 748, 1014, 1050, 1056, 1057, 1127, 1133, 1266, 1269, 1398, 1402, 1410, 1417, 1424, 1425, 1426, 1431, 1435, 1523, 1532, 1533, 1550, 1551, 1574, 1629, 1716, 1719, 1723, 1724, 1725, 1726, 1728, 1731, 1732], "colwidth": 1533, "com": [0, 837, 845, 853, 1525, 1574, 1576, 1634, 1710, 1713, 1715, 1737], "combin": [0, 198, 202, 266, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 930, 931, 935, 936, 940, 941, 945, 946, 1431, 1442, 1715, 1716, 1717, 1718, 1720, 1725, 1727, 1729, 1734], "combine_result": [198, 202, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "come": [0, 298, 1266, 1405, 1532, 1713, 1714, 1719, 1728], "comma": 1298, "command": [0, 391, 522, 523, 1134, 1281, 1282, 1335, 1475, 1480, 1483, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1703, 1706, 1713, 1715, 1724], "comment": 0, "commit": [0, 1713], "common": [244, 289, 801, 882, 888, 904, 1154, 1172, 1402, 1453, 1530, 1709], "commonli": [1292, 1397, 1431], "commun": [1710, 1720], "compact": 1425, "compar": [0, 1356, 1425, 1717, 1726, 1728, 1735], "compare_wak": 0, "comparis": 1717, "comparison": [0, 1712, 1713, 1718, 1725], "compat": [0, 277, 560, 574, 1277, 1285, 1291, 1434, 1480, 1523, 1532], "compil": 1576, "complementari": [1134, 1289], "complet": [0, 1134, 1290, 1397, 1399, 1402, 1424, 1425, 1426, 1435, 1442, 1539, 1540, 1718, 1719, 1722, 1723, 1724, 1728], "complevel": 1640, "complex": [1250, 1277, 1285, 1289, 1415, 1425, 1427, 1434, 1523, 1555, 1576, 1713], "compon": [1134, 1178, 1252, 1266, 1269, 1271, 1435, 1458, 1459, 1550, 1551, 1626, 1636, 1637, 1639, 1706], "compos": [0, 599, 606, 1143, 1147, 1152, 1178, 1199, 1704], "composit": 1155, "compress": [1289, 1640], "compris": 1394, "comput": [0, 27, 47, 51, 55, 61, 65, 69, 89, 94, 103, 185, 186, 196, 198, 201, 216, 227, 239, 248, 276, 284, 293, 298, 330, 343, 346, 349, 364, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 418, 436, 457, 470, 479, 487, 499, 537, 539, 540, 542, 547, 583, 587, 591, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 679, 686, 688, 695, 705, 716, 725, 758, 761, 764, 766, 771, 773, 776, 779, 782, 784, 787, 791, 794, 801, 804, 882, 1051, 1092, 1134, 1152, 1171, 1229, 1250, 1264, 1268, 1269, 1271, 1281, 1282, 1285, 1289, 1398, 1415, 1427, 1434, 1523, 1531, 1546, 1550, 1551, 1693, 1696, 1701, 1704, 1705, 1713, 1714, 1716, 1720, 1724, 1725, 1729, 1731, 1732, 1733, 1734], "concept": [0, 1414, 1445, 1446, 1530, 1717, 1731], "concern": [0, 1715, 1724], "concret": [1692, 1704, 1709, 1716, 1727], "concurr": [0, 1713], "conda": [0, 1713, 1735], "condens": 1535, "condit": [0, 543, 636, 801, 882, 888, 1402, 1634, 1704, 1714, 1717, 1718, 1728, 1730, 1734, 1736], "conf_interv": 1269, "confid": [1269, 1271], "config": [0, 111, 112, 113, 114, 115, 116, 117, 118, 1692, 1715], "configur": [0, 111, 117, 118, 379, 380, 1134, 1394, 1533, 1538, 1692, 1697], "conflict": [1430, 1431], "confus": [0, 1461], "conjug": 1555, "connect": [1134, 1251, 1291, 1294, 1295, 1404, 1405, 1431, 1435], "connectionabortederror": 1576, "connectionerror": 1576, "connectionpatch": [1404, 1405], "connectionrefusederror": 1576, "connectionreseterror": 1576, "connectionstyl": 1251, "connector": [1134, 1404, 1405], "connector_lin": [1404, 1405], "consid": [0, 345, 922, 923, 1252, 1269, 1399, 1724, 1732], "consider": 0, "consist": [0, 44, 314, 1269, 1431, 1718, 1719, 1726, 1727, 1728, 1730, 1733], "constant": [0, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 1134, 1294, 1295, 1525, 1526, 1562, 1564, 1566, 1569, 1570, 1572, 1692, 1708, 1717, 1720, 1726, 1732, 1734], "constantli": [1294, 1295, 1530], "constrainedlayout_guid": [1134, 1329, 1471], "constraint": [1441, 1453], "constrict": 1718, "construct": [190, 224, 316, 1118, 1121, 1122, 1521, 1522, 1541, 1706, 1713, 1727], "constructor": [0, 1, 3, 17, 18, 27, 28, 46, 49, 50, 53, 54, 59, 60, 63, 64, 67, 68, 72, 73, 76, 77, 81, 82, 85, 86, 87, 88, 92, 93, 96, 97, 101, 102, 111, 112, 157, 158, 177, 185, 187, 188, 190, 195, 198, 199, 209, 213, 214, 222, 223, 224, 225, 226, 237, 238, 244, 245, 252, 253, 260, 261, 262, 263, 276, 283, 289, 290, 296, 297, 303, 306, 309, 314, 315, 316, 317, 318, 323, 324, 327, 329, 331, 332, 333, 338, 339, 343, 344, 350, 351, 353, 358, 362, 364, 367, 368, 375, 376, 379, 380, 384, 386, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 416, 417, 427, 428, 430, 431, 432, 434, 447, 449, 450, 451, 452, 453, 454, 466, 467, 468, 469, 477, 478, 485, 486, 496, 498, 512, 513, 517, 530, 532, 537, 538, 540, 541, 543, 544, 545, 550, 551, 552, 553, 554, 557, 558, 562, 564, 565, 566, 567, 572, 573, 578, 581, 582, 586, 589, 590, 593, 599, 600, 606, 607, 613, 614, 618, 619, 623, 624, 630, 631, 636, 637, 641, 642, 651, 652, 656, 657, 661, 664, 667, 668, 672, 673, 674, 675, 676, 677, 686, 687, 692, 693, 702, 703, 712, 713, 714, 715, 722, 723, 731, 732, 735, 736, 739, 740, 743, 744, 747, 748, 751, 754, 755, 758, 759, 764, 765, 771, 772, 776, 777, 784, 785, 791, 792, 801, 802, 809, 812, 813, 819, 822, 823, 829, 830, 837, 838, 845, 846, 853, 854, 855, 862, 863, 869, 870, 876, 877, 882, 883, 888, 903, 911, 912, 916, 917, 922, 923, 930, 931, 935, 936, 940, 941, 945, 946, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1004, 1005, 1009, 1010, 1018, 1019, 1038, 1045, 1046, 1048, 1051, 1052, 1054, 1055, 1058, 1059, 1064, 1065, 1067, 1068, 1072, 1073, 1077, 1078, 1085, 1086, 1088, 1089, 1091, 1092, 1093, 1094, 1097, 1098, 1105, 1107, 1111, 1114, 1115, 1116, 1118, 1119, 1143, 1168, 1178, 1199, 1399, 1402, 1424, 1426, 1559, 1560, 1584, 1585, 1586, 1587, 1594, 1595, 1601, 1602, 1608, 1609, 1616, 1617, 1706, 1710, 1716, 1718, 1722, 1724, 1727, 1732], "consult": 829, "consumpt": [1626, 1706], "contain": [1, 17, 27, 111, 157, 178, 187, 188, 191, 222, 260, 314, 317, 318, 530, 1097, 1099, 1100, 1109, 1110, 1134, 1154, 1214, 1233, 1245, 1250, 1251, 1265, 1267, 1271, 1279, 1283, 1284, 1285, 1289, 1291, 1294, 1295, 1296, 1328, 1333, 1377, 1392, 1397, 1398, 1402, 1415, 1427, 1434, 1493, 1523, 1529, 1532, 1550, 1551, 1629, 1697, 1699, 1702, 1703, 1704, 1706, 1716, 1721, 1722, 1725, 1726, 1727, 1730, 1732, 1736], "contains_branch": [1143, 1153, 1178, 1199], "contains_branch_seper": [1143, 1154, 1178, 1199], "contains_point": [1134, 1280], "content": [375, 530, 536, 1097, 1104, 1732], "context": [375, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1134, 1279, 1318, 1334, 1420, 1474, 1724, 1729], "continu": [1294, 1295, 1526, 1530, 1532, 1720, 1734], "contour": [0, 1062, 1096, 1134, 1275, 1281, 1539, 1540], "contourf": [1039, 1040, 1041, 1042, 1043, 1044, 1096, 1134, 1282], "contourlabel": 1275, "contourset": [1275, 1539, 1540], "contract": [1023, 1024, 1034], "contrast": [252, 1493, 1574, 1699, 1716, 1720], "contribut": [253, 254, 255, 276, 278, 327, 358, 360, 364, 366, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 572, 575, 578, 809, 812, 815, 819, 822, 829, 832, 837, 840, 845, 848, 853, 854, 857, 862, 869, 876, 882, 911, 916, 922, 930, 934, 935, 939, 940, 944, 945, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 978, 980, 984, 986, 990, 992, 996, 998, 1002, 1398, 1718], "contribute_to_farm_wak": [253, 254, 550, 552, 553, 555], "contribute_to_point_wak": [253, 255, 550, 552, 553, 556], "control": [1, 3, 6, 17, 27, 530, 543, 1134, 1250, 1264, 1269, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1402, 1413, 1414, 1415, 1424, 1425, 1427, 1430, 1431, 1432, 1434, 1445, 1446, 1459, 1460, 1480, 1502, 1507, 1511, 1514, 1518, 1532, 1533, 1539, 1540, 1704, 1724], "conv_crit": [17, 18, 1718], "convcrit": [17, 18, 72, 73, 74, 75, 76, 77, 78, 81, 1695], "convcritlist": [76, 77, 78, 79, 80, 1695], "conveni": [1134, 1255, 1260, 1417, 1431, 1480, 1715, 1730], "convent": [414, 1037, 1402, 1424, 1426, 1524, 1574, 1716], "converg": [0, 1, 17, 18, 27, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 120, 157, 160, 166, 1693, 1695, 1698, 1718, 1720, 1731], "convers": [1240, 1443, 1444, 1555], "conversioninterfac": [1539, 1540], "convert": [1134, 1220, 1283, 1284, 1298, 1318, 1432, 1444, 1464, 1472, 1532, 1629, 1730], "convert_xunit": [1134, 1283], "convert_yunit": [1134, 1284], "convvardelta": [81, 82, 83, 84, 85, 1695], "coodin": 0, "coord": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 529, 584, 621, 646, 697, 707, 718, 727, 1134, 1286, 1403, 1528, 1535, 1550], "coordin": [39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 172, 195, 197, 202, 213, 225, 237, 241, 244, 252, 283, 286, 289, 296, 299, 306, 329, 332, 343, 345, 347, 348, 360, 385, 390, 395, 397, 403, 407, 413, 416, 417, 427, 428, 430, 431, 432, 447, 449, 451, 453, 454, 466, 467, 468, 477, 485, 486, 496, 512, 517, 529, 543, 544, 581, 586, 589, 593, 594, 599, 602, 606, 609, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 758, 762, 764, 767, 768, 771, 774, 775, 776, 780, 781, 784, 788, 790, 791, 796, 797, 801, 805, 806, 815, 832, 840, 848, 857, 1009, 1010, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1143, 1149, 1199, 1200, 1236, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1280, 1286, 1291, 1294, 1295, 1297, 1356, 1364, 1365, 1366, 1370, 1377, 1379, 1380, 1381, 1385, 1392, 1397, 1402, 1404, 1406, 1424, 1425, 1426, 1430, 1431, 1432, 1435, 1436, 1451, 1453, 1479, 1508, 1515, 1528, 1532, 1535, 1550, 1551, 1627, 1629, 1679, 1683, 1684, 1708, 1716, 1718, 1719, 1721, 1723, 1724, 1729, 1730, 1731], "copi": [1, 17, 27, 63, 67, 157, 159, 190, 300, 595, 1134, 1143, 1156, 1162, 1178, 1183, 1188, 1199, 1204, 1547, 1694], "copy_to_ambi": [300, 595], "copyright": 1576, "core": [0, 1, 3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 22, 27, 28, 38, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 79, 83, 87, 89, 90, 91, 92, 94, 95, 101, 102, 103, 106, 107, 109, 110, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 379, 385, 386, 387, 390, 394, 395, 396, 397, 400, 403, 407, 411, 412, 414, 415, 416, 418, 421, 422, 423, 425, 426, 429, 432, 436, 438, 440, 441, 443, 445, 446, 453, 454, 457, 459, 460, 461, 463, 464, 465, 468, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 487, 490, 491, 492, 494, 495, 496, 498, 499, 501, 503, 504, 505, 507, 510, 511, 514, 515, 516, 524, 525, 527, 530, 533, 534, 537, 540, 543, 544, 545, 547, 548, 549, 552, 553, 555, 556, 560, 561, 563, 566, 567, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 596, 599, 603, 606, 610, 613, 616, 617, 618, 620, 621, 622, 623, 624, 626, 627, 628, 629, 630, 632, 633, 634, 635, 636, 638, 639, 640, 641, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 676, 679, 680, 684, 685, 686, 688, 691, 692, 695, 696, 697, 701, 702, 705, 706, 707, 711, 714, 716, 717, 718, 721, 722, 725, 726, 727, 730, 731, 735, 739, 743, 747, 751, 754, 758, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 773, 774, 775, 779, 780, 781, 782, 783, 784, 787, 788, 789, 790, 791, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 818, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 851, 852, 854, 855, 857, 858, 859, 860, 861, 862, 863, 865, 866, 867, 868, 869, 872, 873, 874, 875, 876, 877, 879, 880, 881, 882, 883, 885, 886, 887, 888, 903, 904, 906, 907, 908, 910, 911, 912, 914, 915, 916, 917, 919, 920, 921, 922, 923, 925, 926, 927, 928, 929, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 979, 980, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1014, 1020, 1032, 1064, 1065, 1092, 1692, 1694, 1695, 1696, 1701, 1702, 1703, 1704, 1709, 1724], "corect": 1734, "corner": [1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1402, 1404, 1405, 1406, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1447, 1449, 1453, 1524, 1533, 1535, 1539, 1540, 1721], "corpor": 1576, "correct": [0, 676, 677, 692, 693, 702, 703, 722, 723, 764, 862, 863, 869, 986, 1220, 1222, 1252, 1285, 1356, 1399, 1402, 1404, 1405, 1434, 1497, 1704, 1716, 1725, 1726, 1730], "correl": [862, 1134, 1240, 1555, 1709], "correspond": [0, 191, 194, 623, 1143, 1159, 1162, 1178, 1186, 1188, 1199, 1202, 1204, 1250, 1269, 1277, 1285, 1289, 1291, 1292, 1397, 1415, 1424, 1426, 1427, 1430, 1432, 1434, 1464, 1523, 1531, 1538, 1550, 1551, 1636, 1639, 1689, 1691, 1708, 1715, 1716, 1722, 1723, 1724, 1728], "correspondingli": 1435, "correspons": 1728, "costruct": 1716, "could": [0, 1431, 1716, 1718, 1723, 1728, 1730], "count": [0, 1135, 1141, 1253, 1292, 1397, 1398, 1399, 1716], "counter": [27, 33, 44, 101, 104, 187, 194, 222, 260, 314, 321, 1096, 1435, 1497], "counterclock": 1430, "counterclockwis": [1352, 1430, 1495], "coupl": 1729, "cours": 1266, "cover": [557, 1269, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "cp": [0, 672, 673, 674, 675, 1704, 1716], "cpctfile": [0, 672, 673, 1704], "cpctfromtwo": [0, 674, 675, 1704], "cpp": 1574, "cpu_count": [0, 1724], "cpython": 1576, "cquantil": [1550, 1551], "creat": [0, 1, 17, 27, 39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 172, 178, 185, 187, 190, 195, 213, 222, 224, 225, 231, 237, 244, 252, 253, 258, 259, 260, 262, 269, 275, 276, 282, 283, 289, 296, 306, 308, 314, 316, 317, 318, 327, 329, 332, 339, 343, 351, 358, 363, 364, 416, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 454, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 519, 520, 521, 535, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 835, 837, 843, 845, 851, 853, 854, 862, 867, 869, 874, 876, 882, 888, 911, 916, 922, 928, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1007, 1009, 1011, 1038, 1058, 1062, 1067, 1072, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1093, 1096, 1111, 1114, 1118, 1119, 1122, 1123, 1134, 1241, 1250, 1253, 1269, 1270, 1271, 1277, 1285, 1294, 1295, 1398, 1402, 1406, 1415, 1424, 1425, 1426, 1427, 1432, 1434, 1462, 1480, 1484, 1498, 1511, 1518, 1523, 1529, 1533, 1535, 1539, 1540, 1541, 1542, 1543, 1544, 1550, 1551, 1553, 1556, 1560, 1627, 1705, 1706, 1710, 1713, 1714, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "create_dummy_axi": [1208, 1213, 1220, 1230], "create_random_abl_st": [519, 1703], "creation": [0, 349, 525, 532, 782, 1058, 1091, 1692, 1703, 1705, 1729], "credit": 1576, "crespo": [862, 1709, 1716], "crespohernandez": [0, 1734], "crespohernandez_": [1716, 1722], "crespohernandez_linear": 1722, "crespohernandez_linear_ambka0": 1722, "crespohernandez_linear_k0": 1722, "crespohernandez_linear_ka0": 1722, "crespohernandez_max": [1732, 1733], "crespohernandez_max_ka0213_kb003": 1716, "crespohernandez_max_ka04": 1732, "crespohernandeztiwak": [0, 862, 863, 864, 865, 866, 867, 868, 1709, 1722], "crit": [76, 77, 78], "criteria": [17, 18, 72, 73, 74, 76, 77, 79, 81, 82, 83, 85, 1695, 1718, 1724], "criterion": [76, 78, 1296], "cross": [1134, 1240, 1277, 1285, 1294, 1295, 1480, 1531, 1555, 1716, 1720, 1734], "crosshatch": 1540, "crucial": 1727, "csd": [1134, 1285, 1434], "csv": [0, 377, 378, 408, 409, 432, 712, 1009, 1014, 1054, 1056, 1127, 1128, 1130, 1131, 1631, 1703, 1706, 1710, 1714, 1716, 1720, 1723, 1728, 1729, 1730, 1731, 1732, 1733], "ct": [0, 1, 2, 17, 27, 185, 186, 335, 528, 532, 537, 538, 539, 540, 542, 623, 656, 657, 672, 674, 675, 676, 677, 681, 692, 693, 698, 702, 703, 708, 712, 714, 715, 722, 723, 824, 825, 846, 862, 863, 865, 866, 869, 872, 873, 883, 911, 914, 915, 1093, 1095, 1127, 1129, 1656, 1658, 1689, 1691, 1704, 1705, 1708, 1716, 1718, 1719, 1720, 1724, 1726, 1730, 1731, 1734], "ct2a": [185, 186, 537, 539, 540, 542, 846, 1704], "ct_max": [537, 538, 883], "ctrl": 1576, "cubic": 0, "cubic_loc": 1720, "cubic_root": [0, 1574, 1706], "cumul": [1134, 1289, 1398], "cur_farm_result": [27, 34], "cur_point_result": [27, 35], "current": [1, 17, 24, 27, 30, 33, 34, 35, 40, 41, 45, 46, 49, 53, 59, 63, 67, 74, 79, 83, 87, 92, 96, 99, 100, 101, 104, 157, 163, 166, 174, 185, 195, 213, 225, 237, 244, 252, 253, 262, 271, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1067, 1070, 1071, 1072, 1075, 1076, 1134, 1269, 1271, 1276, 1291, 1318, 1370, 1377, 1385, 1392, 1399, 1416, 1424, 1426, 1430, 1438, 1442, 1448, 1480, 1484, 1493, 1498, 1511, 1518, 1530, 1533, 1537, 1538, 1546, 1704, 1710, 1714, 1716, 1724, 1728], "cursiv": 1535, "cursor": [1134, 1318, 1334, 1420, 1474], "curtail": 1716, "curv": [0, 335, 532, 672, 673, 675, 681, 692, 698, 702, 703, 708, 713, 714, 715, 722, 723, 1093, 1095, 1134, 1174, 1196, 1293, 1294, 1295, 1526, 1704, 1705, 1713, 1714, 1718, 1726], "custom": [1134, 1135, 1140, 1266, 1277, 1285, 1334, 1406, 1420, 1432, 1434, 1474, 1510, 1517, 1523], "cut": 1718, "cutin": [18, 332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722, 1718], "cutoff": 1397, "cwi": 1576, "cxy": 1277, "cyan": 1431, "cycl": [1134, 1250, 1270, 1277, 1285, 1293, 1415, 1427, 1430, 1431, 1434, 1442, 1480, 1523, 1525, 1529, 1539, 1540], "cycler": [1447, 1480], "cylind": 1717, "d": [0, 1, 2, 17, 27, 39, 172, 187, 190, 202, 222, 224, 260, 314, 316, 323, 324, 332, 333, 377, 378, 712, 854, 862, 863, 1009, 1010, 1178, 1192, 1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1442, 1523, 1524, 1576, 1634, 1635, 1640, 1657, 1706, 1708, 1716, 1717, 1718, 1722, 1724, 1725], "d100d5": 1716, "d126": [1710, 1728, 1730], "d_": [417, 486], "dai": 1292, "dash": [1250, 1258, 1261, 1262, 1266, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1400, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524, 1529, 1539, 1552], "dash_capstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "dash_joinstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "dashboard": 1724, "dashdot": [1292, 1400, 1539, 1552], "dask": [0, 5, 195, 379, 380, 384, 388, 404, 1701, 1713, 1715, 1724], "dask_config": [379, 380, 384, 406], "dask_jobqueu": 1724, "dask_par": 1724, "daskbaseengin": [379, 380, 381, 382, 383, 384, 388, 389, 406, 1701], "daskengin": [0, 384, 385, 1701, 1724], "daskrunn": [0, 1721, 1732], "data": [0, 1, 4, 5, 17, 19, 27, 31, 32, 39, 44, 46, 47, 49, 51, 53, 55, 56, 59, 61, 63, 65, 67, 69, 70, 87, 89, 92, 94, 96, 98, 99, 100, 101, 103, 106, 111, 113, 114, 121, 124, 157, 158, 159, 161, 162, 164, 165, 169, 170, 171, 172, 178, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 202, 205, 211, 212, 213, 216, 222, 223, 224, 225, 227, 231, 237, 239, 240, 243, 244, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 269, 272, 274, 276, 278, 279, 280, 282, 283, 284, 285, 288, 289, 293, 296, 298, 300, 301, 306, 308, 314, 315, 316, 317, 318, 322, 323, 327, 329, 330, 332, 335, 339, 340, 343, 345, 346, 347, 348, 349, 351, 352, 358, 360, 361, 363, 364, 365, 366, 375, 376, 377, 378, 379, 381, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 416, 417, 418, 419, 421, 423, 425, 427, 428, 429, 430, 432, 434, 436, 437, 440, 443, 445, 447, 449, 451, 453, 454, 457, 461, 464, 466, 468, 470, 471, 473, 475, 477, 478, 479, 485, 486, 487, 488, 490, 492, 494, 496, 498, 499, 500, 504, 507, 510, 512, 513, 514, 515, 516, 517, 519, 520, 524, 526, 527, 528, 529, 537, 540, 543, 544, 547, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 578, 579, 580, 581, 582, 583, 584, 586, 587, 589, 591, 593, 595, 596, 599, 606, 613, 616, 618, 619, 620, 621, 623, 626, 630, 632, 636, 637, 638, 641, 643, 644, 645, 646, 649, 650, 651, 652, 653, 656, 659, 661, 662, 664, 665, 667, 668, 670, 672, 673, 674, 675, 676, 677, 679, 680, 681, 686, 688, 692, 693, 695, 697, 698, 702, 703, 705, 707, 708, 712, 714, 715, 716, 718, 722, 723, 725, 727, 731, 733, 735, 737, 739, 741, 743, 745, 747, 748, 749, 751, 752, 754, 756, 758, 759, 761, 762, 764, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 779, 780, 781, 782, 784, 787, 788, 789, 790, 791, 792, 794, 796, 797, 799, 800, 801, 804, 805, 806, 807, 809, 810, 811, 812, 814, 815, 816, 817, 819, 820, 821, 822, 824, 825, 826, 827, 829, 832, 833, 834, 835, 837, 840, 841, 842, 843, 845, 848, 849, 850, 851, 853, 854, 857, 858, 859, 860, 862, 863, 865, 866, 867, 869, 872, 873, 874, 876, 879, 880, 882, 885, 886, 888, 904, 905, 906, 907, 908, 911, 914, 915, 916, 919, 920, 922, 925, 927, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 956, 959, 960, 962, 965, 966, 968, 971, 972, 974, 977, 978, 980, 983, 984, 986, 989, 990, 992, 995, 996, 998, 1001, 1002, 1009, 1010, 1018, 1023, 1024, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1050, 1051, 1054, 1055, 1056, 1057, 1058, 1060, 1062, 1063, 1064, 1067, 1070, 1071, 1072, 1075, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1093, 1096, 1097, 1098, 1104, 1108, 1109, 1110, 1127, 1132, 1133, 1134, 1154, 1178, 1181, 1199, 1214, 1233, 1240, 1250, 1251, 1252, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1298, 1302, 1318, 1319, 1364, 1365, 1366, 1370, 1377, 1379, 1380, 1381, 1385, 1392, 1394, 1397, 1398, 1399, 1400, 1402, 1406, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1438, 1442, 1443, 1444, 1445, 1446, 1448, 1453, 1461, 1478, 1480, 1508, 1509, 1515, 1516, 1523, 1524, 1525, 1526, 1529, 1530, 1531, 1532, 1535, 1539, 1540, 1546, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1564, 1569, 1572, 1628, 1630, 1692, 1694, 1695, 1697, 1698, 1699, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1710, 1712, 1713, 1714, 1716, 1717, 1718, 1720, 1721, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1734], "data1": 1398, "data2": 1398, "data_book": [376, 1097, 1098], "data_file_format": [1127, 1128], "data_format": [1079, 1080, 1081, 1082, 1083, 1084], "data_lin": 1291, "data_ndarrai": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "data_prio": 266, "data_rang": 520, "data_sourc": [408, 409, 416, 417, 419, 427, 428, 430, 432, 434, 437, 447, 485, 486, 488, 496, 498, 500, 512, 513, 517, 581, 582, 618, 619, 636, 637, 651, 652, 672, 673, 676, 677, 692, 693, 747, 748, 1703, 1710, 1716, 1719, 1720, 1721, 1723, 1724, 1726, 1728, 1729, 1731, 1732, 1733, 1734], "data_source_cp": [674, 675], "data_source_ct": [674, 675, 702, 703, 714, 715, 722, 723], "data_source_p": [702, 703, 714, 715, 722, 723], "data_stash": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "data_v": 747, "data_var": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "data_z": 747, "dataarrai": [212, 1724], "databook": [158, 375, 376, 410, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1700, 1706], "datacalcmodel": [0, 195, 196, 197, 211, 237, 283, 385, 387, 390, 395, 397, 403, 407, 1699], "datafram": [0, 408, 409, 428, 432, 434, 496, 498, 519, 520, 521, 581, 582, 618, 619, 636, 637, 651, 652, 672, 673, 674, 675, 676, 677, 692, 693, 702, 703, 714, 715, 722, 723, 748, 1025, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1050, 1054, 1055, 1058, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1091, 1132, 1133, 1431, 1703, 1704, 1714, 1725, 1726, 1728, 1730, 1732, 1734], "datalim": [1134, 1241, 1260, 1302, 1395, 1447, 1448, 1453, 1461, 1546], "datapoint": 1398, "dataprofil": [0, 747, 748, 749, 750, 1704], "dataset": [0, 4, 5, 17, 19, 31, 32, 34, 35, 36, 37, 39, 42, 74, 79, 83, 100, 161, 162, 172, 178, 187, 190, 195, 198, 202, 205, 211, 212, 222, 224, 243, 260, 288, 314, 316, 379, 381, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 417, 427, 430, 485, 486, 513, 525, 1009, 1010, 1018, 1019, 1051, 1052, 1053, 1055, 1059, 1071, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1134, 1267, 1269, 1271, 1289, 1398, 1431, 1550, 1551, 1630, 1640, 1699, 1703, 1706, 1718, 1723, 1724, 1729, 1730], "datasetdimens": [1718, 1723, 1724], "datatset": 20, "date": [1134, 1215, 1267, 1292, 1432, 1553, 1556, 1719], "date2num": 1432, "dateformatt": 1432, "dateloc": 1432, "datetim": [416, 417, 428, 485, 486, 1267, 1432, 1553, 1556], "datetime64": [1032, 1432, 1724, 1729], "datetimeindex": 1724, "datum": 1269, "db": [1415, 1523], "dbase": 1097, "dbook": [1, 17, 27, 157, 158, 164, 410, 1719], "dct": 1108, "de": 1267, "deactiv": [1482, 1715], "debug": [0, 1072, 1705], "decad": [1414, 1445, 1446, 1512, 1519], "decai": 1261, "decibel": [1285, 1434], "decid": [1715, 1724], "decim": [1411, 1538], "decimal_plac": 1411, "decor": [1134, 1260, 1356, 1458, 1459, 1502], "decreas": [1289, 1508, 1515], "dedic": [1241, 1539, 1540], "deduc": 1624, "deem": [1404, 1405], "deepcopi": [1143, 1156, 1178, 1183, 1199], "def": [1242, 1251, 1296, 1397, 1725], "default": [0, 4, 5, 17, 18, 39, 59, 60, 85, 105, 111, 113, 114, 115, 121, 124, 127, 158, 172, 173, 217, 307, 345, 372, 386, 410, 420, 428, 432, 439, 458, 489, 496, 502, 525, 530, 532, 533, 566, 572, 573, 619, 668, 846, 883, 1014, 1015, 1016, 1017, 1020, 1032, 1058, 1061, 1066, 1091, 1109, 1110, 1127, 1134, 1150, 1171, 1214, 1224, 1230, 1233, 1236, 1237, 1240, 1250, 1251, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1298, 1318, 1320, 1356, 1357, 1377, 1392, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1442, 1445, 1446, 1448, 1451, 1453, 1459, 1460, 1462, 1468, 1478, 1479, 1492, 1497, 1502, 1507, 1508, 1510, 1511, 1512, 1514, 1515, 1517, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1546, 1548, 1550, 1551, 1552, 1553, 1555, 1556, 1629, 1640, 1658, 1690, 1695, 1698, 1699, 1701, 1708, 1710, 1713, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1726, 1727, 1728, 1730, 1732, 1733, 1734], "default_digit": [1658, 1708], "default_farm_output": [1, 2, 17, 27], "default_format_dict": [1127, 1129], "default_partial_wak": [530, 533], "default_reading_paramet": [1127, 1130], "default_writing_paramet": [1127, 1131], "defaultconv": [85, 86, 1695, 1718, 1720, 1731], "defaultengin": [0, 386, 387, 1701, 1721, 1723, 1724, 1726, 1728, 1730, 1732, 1734], "defaultrunn": 0, "defer": 1252, "deficit": [0, 877, 883, 912, 917, 923, 950, 951, 956, 962, 963, 968, 974, 975, 980, 986, 992, 993, 998, 1704, 1709, 1716, 1717, 1718, 1720, 1732, 1733, 1734], "defin": [0, 323, 764, 1134, 1218, 1251, 1252, 1261, 1266, 1267, 1270, 1277, 1285, 1291, 1292, 1293, 1294, 1295, 1331, 1394, 1397, 1398, 1399, 1402, 1424, 1425, 1426, 1431, 1434, 1435, 1441, 1442, 1451, 1453, 1461, 1478, 1480, 1493, 1523, 1526, 1529, 1530, 1533, 1539, 1540, 1541, 1542, 1555, 1704, 1708, 1716, 1717, 1720, 1726, 1728, 1731, 1734, 1736], "definit": [1269, 1294, 1295], "deflt": [111, 187, 222, 260, 314, 1105, 1109, 1110, 1111], "deg": [81, 82, 1719, 1720], "degre": [0, 414, 1060, 1062, 1087, 1134, 1171, 1220, 1230, 1342, 1354, 1355, 1430, 1435, 1436, 1444, 1447, 1484, 1485, 1497, 1498, 1499, 1500, 1501, 1574, 1637, 1638, 1650, 1652, 1653, 1680, 1685, 1686, 1706, 1708, 1717, 1718, 1725, 1734], "del_model_data": [1, 17, 27, 157, 165], "delai": [384, 1701], "delattr": 1576, "deleg": 1208, "delet": [1484, 1498, 1511, 1518], "delta": [0, 72, 75, 76, 80, 81, 84, 85, 253, 254, 255, 256, 257, 258, 259, 276, 278, 279, 282, 327, 358, 360, 361, 363, 364, 365, 366, 453, 454, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 589, 590, 623, 624, 661, 664, 758, 759, 776, 777, 791, 792, 809, 810, 811, 812, 814, 815, 816, 819, 821, 822, 824, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 865, 867, 869, 872, 874, 876, 882, 885, 911, 914, 916, 922, 928, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 953, 954, 956, 959, 960, 962, 965, 966, 968, 971, 972, 974, 977, 978, 980, 983, 984, 986, 989, 990, 992, 995, 996, 998, 1001, 1002, 1011, 1032, 1575, 1704, 1716, 1718, 1720, 1729, 1731], "delta_far": [888, 892], "delta_near": [888, 893], "delta_t": 1032, "delta_wd": [1575, 1706], "demand": 1724, "demi": 1535, "demibold": 1535, "demonstr": [0, 1717, 1719, 1726, 1730, 1733, 1734], "denot": [712, 1716], "denpend": [812, 1709], "densiti": [0, 306, 468, 469, 477, 478, 673, 675, 676, 677, 692, 693, 702, 703, 713, 714, 722, 723, 1095, 1134, 1269, 1277, 1285, 1397, 1398, 1399, 1415, 1434, 1523, 1532, 1550, 1551, 1647, 1675, 1704, 1708, 1721, 1723], "density_i": 1532, "density_x": 1532, "depend": [0, 195, 300, 386, 449, 451, 557, 581, 582, 595, 606, 677, 693, 703, 714, 715, 722, 723, 809, 812, 819, 820, 822, 825, 854, 862, 866, 869, 873, 876, 879, 911, 915, 916, 919, 922, 925, 1143, 1168, 1169, 1170, 1173, 1178, 1193, 1194, 1195, 1199, 1206, 1208, 1251, 1252, 1313, 1402, 1413, 1414, 1425, 1432, 1435, 1436, 1445, 1446, 1510, 1511, 1517, 1518, 1524, 1526, 1529, 1530, 1643, 1669, 1701, 1703, 1704, 1708, 1709, 1714, 1716, 1720, 1721, 1723, 1724, 1727, 1731, 1734, 1737], "dependeci": 0, "deprec": [1134, 1135, 1138, 1269, 1424, 1426, 1432], "deprecationwarn": 1576, "depth": [1143, 1155, 1178, 1199, 1449, 1515], "derat": [0, 623, 1093, 1664, 1705, 1708, 1726, 1728], "deriv": [0, 177, 209, 281, 303, 309, 331, 338, 342, 350, 362, 845, 853, 1048, 1134, 1573, 1706, 1716, 1717], "describ": [306, 1251, 1269, 1294, 1295, 1338, 1416, 1431, 1492, 1703, 1710, 1714, 1715, 1716, 1719, 1721, 1724, 1730], "descript": [1058, 1061, 1091, 1251, 1252, 1255, 1260, 1302, 1305, 1313, 1398, 1402, 1424, 1425, 1426, 1431, 1448, 1451, 1453, 1461, 1530, 1532, 1692, 1693, 1703, 1704, 1709, 1724], "design": [296, 299, 301, 593, 594, 596, 599, 602, 606, 609, 1062, 1199, 1277, 1285, 1425, 1434, 1512, 1519, 1523, 1714], "design_point": [296, 299, 593, 594, 599, 602, 606, 609], "desir": [1090, 1134, 1302, 1402, 1416, 1439, 1716, 1724, 1734], "detail": [0, 1250, 1251, 1252, 1277, 1279, 1285, 1291, 1350, 1399, 1402, 1414, 1415, 1424, 1426, 1427, 1432, 1434, 1445, 1446, 1453, 1479, 1523, 1524, 1525, 1530, 1532, 1715, 1724, 1736], "determin": [0, 802, 882, 883, 888, 903, 1032, 1135, 1138, 1240, 1251, 1269, 1294, 1295, 1394, 1395, 1397, 1402, 1431, 1435, 1442, 1478, 1479, 1502, 1524, 1535, 1539, 1540, 1555, 1716, 1720], "detrend": [1134, 1240, 1277, 1285, 1434, 1523, 1555], "detrend_linear": [1277, 1285, 1434, 1523], "detrend_mean": [1277, 1285, 1434, 1523], "detrend_non": [1134, 1240, 1277, 1285, 1434, 1523, 1555], "dev": 1715, "develop": [1576, 1710, 1713], "deviat": [1018, 1028, 1431, 1716], "df": [1717, 1718], "diagram": 1451, "diamet": [0, 323, 324, 332, 333, 408, 606, 607, 862, 1009, 1010, 1011, 1435, 1657, 1704, 1708, 1716, 1717], "diamond": [1431, 1435], "dict": [1, 3, 4, 5, 8, 11, 16, 18, 19, 25, 26, 27, 28, 39, 47, 51, 53, 54, 55, 61, 65, 69, 75, 80, 81, 82, 84, 89, 92, 93, 94, 103, 111, 158, 160, 161, 162, 163, 172, 173, 174, 177, 179, 180, 181, 182, 183, 187, 188, 190, 191, 196, 202, 209, 212, 216, 223, 224, 225, 226, 227, 231, 235, 239, 243, 248, 254, 255, 256, 257, 258, 259, 261, 269, 272, 274, 278, 279, 282, 284, 288, 293, 298, 303, 308, 309, 315, 316, 317, 318, 330, 331, 338, 340, 345, 350, 352, 360, 361, 362, 363, 372, 377, 378, 379, 380, 382, 385, 388, 389, 390, 395, 397, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 423, 425, 427, 428, 429, 431, 432, 434, 436, 440, 443, 445, 450, 452, 453, 454, 457, 461, 464, 467, 470, 471, 473, 475, 477, 478, 479, 485, 486, 487, 490, 492, 494, 496, 498, 499, 504, 507, 510, 513, 514, 515, 516, 519, 520, 521, 524, 525, 526, 527, 528, 529, 530, 535, 547, 555, 556, 561, 565, 569, 575, 579, 581, 582, 583, 584, 587, 591, 595, 600, 607, 614, 616, 618, 619, 620, 621, 626, 630, 631, 632, 637, 638, 644, 646, 649, 650, 652, 653, 659, 662, 665, 670, 673, 675, 676, 677, 679, 687, 688, 692, 693, 695, 697, 702, 703, 705, 707, 713, 714, 715, 716, 718, 722, 723, 725, 727, 732, 733, 736, 737, 740, 741, 744, 745, 747, 748, 749, 752, 756, 758, 759, 765, 772, 776, 777, 784, 785, 791, 792, 799, 800, 801, 802, 810, 811, 812, 813, 814, 815, 816, 821, 823, 824, 826, 832, 833, 835, 840, 841, 843, 848, 849, 851, 857, 858, 860, 863, 865, 867, 870, 872, 874, 877, 882, 883, 885, 909, 912, 914, 917, 922, 923, 928, 1007, 1010, 1011, 1013, 1016, 1023, 1024, 1025, 1034, 1035, 1036, 1039, 1040, 1041, 1042, 1043, 1044, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1059, 1062, 1063, 1065, 1066, 1067, 1068, 1072, 1073, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1114, 1115, 1116, 1118, 1119, 1121, 1123, 1127, 1132, 1133, 1134, 1250, 1251, 1253, 1258, 1261, 1262, 1266, 1267, 1269, 1271, 1277, 1279, 1285, 1289, 1291, 1394, 1415, 1427, 1430, 1431, 1432, 1434, 1436, 1502, 1511, 1518, 1524, 1535, 1545, 1550, 1551, 1560, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1628, 1629, 1631, 1632, 1640, 1697, 1699, 1706, 1720, 1721, 1728, 1729, 1731], "dictionari": [0, 162, 181, 183, 212, 272, 274, 423, 425, 443, 445, 461, 464, 473, 475, 492, 494, 507, 510, 515, 516, 524, 525, 526, 649, 650, 799, 800, 888, 909, 1050, 1105, 1107, 1111, 1112, 1133, 1134, 1266, 1267, 1269, 1271, 1279, 1433, 1436, 1478, 1502, 1511, 1518, 1535, 1550, 1551, 1703, 1706, 1716, 1724, 1725], "diego": 1634, "diff": 1398, "differ": [0, 564, 1152, 1208, 1251, 1264, 1266, 1267, 1268, 1277, 1281, 1282, 1285, 1292, 1364, 1365, 1366, 1379, 1380, 1381, 1398, 1402, 1414, 1424, 1425, 1426, 1431, 1434, 1499, 1510, 1517, 1523, 1532, 1704, 1709, 1710, 1716, 1717, 1719, 1720, 1721, 1724, 1725, 1728], "digit": [521, 1640, 1658, 1690, 1708, 1716], "dim": [187, 188, 189, 190, 197, 208, 222, 224, 241, 260, 286, 314, 316, 317, 318, 529, 1703], "dim_arrai": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "dim_map": [187, 191, 222, 260, 314], "dim_name_str": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "dim_tupl": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "dimens": [4, 5, 19, 27, 31, 32, 37, 59, 137, 138, 139, 161, 162, 178, 187, 188, 189, 191, 198, 208, 222, 266, 300, 317, 318, 349, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 529, 595, 782, 1018, 1034, 1035, 1036, 1053, 1134, 1143, 1154, 1160, 1165, 1166, 1178, 1187, 1191, 1199, 1203, 1205, 1260, 1266, 1267, 1302, 1399, 1402, 1424, 1425, 1426, 1435, 1448, 1461, 1537, 1638, 1694, 1698, 1704, 1718, 1719, 1723, 1724, 1729, 1730, 1734], "dimension": [0, 651, 1266, 1399, 1431, 1704, 1705, 1727], "dimensionless": [0, 986, 1720], "dir": 1576, "direct": [0, 81, 82, 306, 414, 468, 469, 477, 478, 599, 600, 606, 607, 771, 772, 1040, 1041, 1043, 1044, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1253, 1256, 1264, 1266, 1268, 1281, 1282, 1285, 1292, 1352, 1364, 1365, 1366, 1377, 1379, 1380, 1381, 1392, 1397, 1398, 1402, 1430, 1435, 1443, 1444, 1451, 1453, 1495, 1497, 1508, 1515, 1526, 1530, 1532, 1537, 1554, 1557, 1575, 1576, 1608, 1609, 1636, 1637, 1638, 1639, 1650, 1680, 1693, 1694, 1702, 1704, 1706, 1708, 1716, 1717, 1718, 1719, 1721, 1723, 1725, 1727, 1728, 1730, 1732, 1733, 1734], "directli": [0, 578, 1091, 1097, 1266, 1294, 1295, 1363, 1378, 1397, 1402, 1413, 1432, 1435, 1443, 1444, 1551, 1702, 1704, 1705, 1706, 1709, 1717, 1724, 1728], "directori": [0, 111, 115, 116, 117, 118, 127, 154, 375, 525, 526, 1045, 1046, 1697, 1698, 1700, 1710, 1715], "disabl": [1260, 1461, 1478], "disc": [0, 557, 572, 1716, 1727], "discontinu": [332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722], "discourag": [1134, 1480, 1539, 1540, 1541], "discov": 0, "discret": [0, 1292, 1397, 1716], "discuss": [1402, 1424, 1426, 1731], "disk": 0, "displai": [1134, 1251, 1265, 1286, 1318, 1362, 1397, 1398, 1399, 1402, 1403, 1417, 1419, 1453, 1472, 1484, 1498, 1511, 1518, 1528, 1710, 1724, 1732, 1733], "disregard": 1402, "dist": [414, 1578, 1582, 1588, 1592, 1596, 1599, 1603, 1606, 1610, 1614, 1618, 1622, 1703, 1716], "dist_insid": [1578, 1588, 1596, 1603, 1610, 1618], "dist_outsid": [1578, 1588, 1596, 1603, 1610, 1618], "distanc": [0, 413, 414, 862, 863, 1250, 1265, 1266, 1269, 1271, 1277, 1285, 1415, 1427, 1430, 1434, 1436, 1523, 1537, 1577, 1578, 1582, 1584, 1586, 1588, 1592, 1594, 1596, 1599, 1601, 1603, 1606, 1608, 1610, 1614, 1616, 1618, 1622, 1627, 1634, 1635, 1706, 1717, 1734], "distinct": 1269, "distinguish": [1266, 1269, 1271], "distribut": [0, 1134, 1269, 1289, 1398, 1550, 1551, 1713, 1719, 1720, 1724, 1732], "distslicedwakemodel": [809, 812, 813, 814, 815, 816, 817, 818, 882, 1709, 1716], "ditto": 1431, "divid": [589, 590, 1079, 1080, 1081, 1082, 1083, 1084, 1285, 1397, 1398, 1434, 1532, 1724], "divmod": 1576, "dk": 869, "dname": [1058, 1061, 1091], "do": [0, 27, 266, 1134, 1208, 1217, 1229, 1230, 1260, 1318, 1402, 1425, 1426, 1435, 1459, 1493, 1499, 1523, 1539, 1540, 1696, 1704, 1710, 1714, 1716, 1720, 1723, 1724, 1725, 1729, 1731], "doan": 1398, "doc": [0, 1715], "docu": 0, "document": [0, 869, 1134, 1236, 1269, 1275, 1399, 1402, 1507, 1514, 1724, 1735], "doe": [686, 1150, 1162, 1188, 1199, 1204, 1237, 1251, 1256, 1266, 1273, 1283, 1284, 1356, 1362, 1402, 1425, 1435, 1483, 1525, 1539, 1540, 1541, 1548, 1704, 1716, 1720, 1723, 1724, 1726, 1729], "doesn": 1402, "doi": [0, 540, 801, 845, 853, 854, 862, 876, 882, 888, 1713], "domain": [1532, 1721], "don": [0, 1267, 1442, 1541, 1727], "done": [1272, 1397, 1448, 1718, 1720, 1724, 1725, 1728, 1729, 1731], "dot": [1292, 1400, 1431, 1435, 1529, 1539, 1552, 1716], "doubl": [0, 111, 113, 121, 1698], "doubt": 1724, "down": [0, 1402, 1435, 1717, 1724, 1733], "download": 1723, "downsampl": [1250, 1277, 1285, 1402, 1415, 1427, 1434, 1523], "downstream": [1716, 1718, 1734], "downward": 1402, "downwind": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 227, 253, 254, 255, 256, 266, 276, 278, 279, 298, 300, 327, 328, 345, 347, 348, 349, 358, 359, 360, 365, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 595, 762, 767, 768, 774, 775, 780, 781, 782, 788, 790, 796, 797, 805, 806, 809, 810, 811, 812, 814, 815, 819, 820, 821, 822, 824, 825, 826, 829, 832, 837, 840, 845, 848, 853, 854, 857, 862, 865, 866, 869, 872, 873, 876, 879, 882, 885, 904, 911, 914, 915, 916, 919, 922, 925, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1693, 1695, 1696, 1710, 1716, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1732, 1733, 1734], "downwind_index": [53, 55, 225, 227, 254, 255, 256, 266, 276, 278, 279, 298, 300, 327, 343, 345, 347, 348, 349, 358, 360, 364, 365, 543, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 595, 758, 762, 764, 767, 768, 771, 774, 775, 776, 780, 781, 782, 784, 788, 790, 791, 796, 797, 801, 805, 806, 809, 810, 811, 812, 814, 815, 819, 820, 821, 822, 824, 825, 826, 829, 832, 837, 840, 845, 848, 853, 854, 857, 862, 865, 866, 869, 872, 873, 876, 879, 882, 885, 888, 904, 907, 911, 914, 915, 916, 919, 922, 925, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001], "dpi": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1449, 1524, 1533, 1535], "dpoint": [299, 594, 602, 609], "drag_pan": [1134, 1286], "drama": 1729, "drang": 1432, "draw": [1134, 1251, 1253, 1258, 1261, 1262, 1263, 1264, 1267, 1268, 1269, 1271, 1281, 1282, 1287, 1291, 1356, 1364, 1365, 1366, 1379, 1380, 1381, 1394, 1397, 1398, 1404, 1405, 1411, 1419, 1426, 1430, 1451, 1452, 1454, 1455, 1456, 1458, 1483, 1525, 1526, 1529, 1532, 1533, 1537, 1539, 1540, 1542, 1550, 1551], "draw_artist": [1134, 1288, 1452], "draw_idl": 1439, "draw_without_rend": 1252, "drawn": [1134, 1251, 1252, 1253, 1266, 1269, 1270, 1291, 1325, 1394, 1397, 1398, 1404, 1405, 1426, 1430, 1431, 1435, 1442, 1448, 1453, 1459, 1469, 1479, 1520, 1526, 1527, 1532, 1533, 1539, 1540, 1542], "drawstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524, 1530], "drop": [0, 1289, 1424, 1426], "dt": [1716, 1722], "dt_min": [453, 454, 758, 759, 776, 777, 791, 792, 1722, 1731], "dtp": [113, 114], "dtu": 869, "dtu10": 1719, "dtu10mw": [1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1729, 1731], "dtype": [121, 428, 1398, 1698, 1718, 1723, 1724], "dtype_doubl": [111, 113], "dtype_int": [111, 114], "due": [0, 44, 1285, 1294, 1295, 1424, 1426, 1434, 1453, 1704, 1716, 1718, 1728], "dummi": [44, 204], "duplic": [1267, 1289], "durat": 1032, "dure": [0, 1, 17, 20, 27, 92, 101, 157, 160, 187, 188, 231, 269, 308, 416, 417, 421, 429, 440, 471, 485, 486, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1067, 1134, 1214, 1233, 1286, 1695, 1696, 1705, 1716, 1720, 1722, 1724, 1732], "dwnd": [328, 359], "dx": [345, 922, 923, 1134, 1253, 1722], "dy": [1134, 1253], "dyn_wak": [0, 1716, 1722, 1724], "dyn_wakes_": [1716, 1722], "dyn_wakes_8km": 1720, "dynam": [0, 535, 758, 776, 791, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540, 1624, 1704, 1706, 1712, 1713, 1714, 1716], "dynamicwak": [0, 758, 759, 760, 761, 762, 763, 1704, 1713, 1720, 1722, 1729, 1731], "d\u00f6renk\u00e4mper": 1711, "e": [0, 195, 391, 519, 521, 581, 582, 623, 624, 661, 664, 916, 1050, 1062, 1118, 1119, 1133, 1134, 1136, 1152, 1154, 1178, 1192, 1199, 1236, 1241, 1250, 1251, 1256, 1259, 1260, 1261, 1263, 1265, 1267, 1269, 1270, 1271, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1313, 1329, 1356, 1394, 1397, 1398, 1399, 1402, 1404, 1406, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1431, 1435, 1436, 1439, 1442, 1443, 1444, 1447, 1451, 1453, 1458, 1460, 1461, 1471, 1478, 1480, 1497, 1511, 1512, 1518, 1519, 1523, 1525, 1529, 1530, 1532, 1535, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1550, 1551, 1560, 1576, 1629, 1632, 1702, 1704, 1710, 1713, 1715, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1727, 1729, 1731, 1734, 1737], "e1": [862, 863], "e2": [862, 863], "e3": [862, 863], "each": [0, 96, 195, 222, 225, 248, 293, 314, 323, 324, 519, 521, 525, 714, 722, 771, 810, 811, 814, 821, 826, 885, 907, 1020, 1039, 1042, 1043, 1044, 1095, 1118, 1119, 1134, 1143, 1154, 1171, 1178, 1199, 1251, 1252, 1264, 1267, 1268, 1269, 1270, 1271, 1277, 1281, 1282, 1285, 1291, 1292, 1293, 1294, 1295, 1308, 1394, 1397, 1398, 1399, 1400, 1405, 1416, 1424, 1426, 1428, 1430, 1431, 1434, 1435, 1448, 1454, 1460, 1484, 1498, 1509, 1511, 1512, 1516, 1518, 1519, 1523, 1525, 1529, 1532, 1533, 1541, 1550, 1551, 1552, 1630, 1696, 1704, 1714, 1716, 1717, 1718, 1719, 1724, 1726, 1727, 1730, 1731, 1732, 1733, 1734], "earli": 1140, "easiest": 1710, "easili": [1266, 1729, 1730], "east": 1728, "ec": [1253, 1259, 1263, 1266, 1267, 1270, 1294, 1295, 1397, 1404, 1424, 1426, 1435], "ecdf": [1134, 1289], "ech": [1040, 1041], "ecolor": [1134, 1267, 1291], "econom": 1713, "edg": [1134, 1178, 1251, 1264, 1265, 1267, 1268, 1269, 1291, 1294, 1295, 1357, 1397, 1398, 1399, 1411, 1424, 1425, 1426, 1435, 1436, 1442, 1453, 1502, 1526, 1530, 1531, 1533, 1539, 1540, 1542], "edgecolor": [1253, 1259, 1263, 1264, 1266, 1267, 1268, 1270, 1294, 1295, 1397, 1404, 1424, 1426, 1435, 1442, 1726], "educ": 1713, "eff": [1022, 1127, 1129, 1658, 1659, 1708, 1710, 1732], "effect": [0, 46, 53, 87, 276, 296, 298, 327, 328, 358, 359, 552, 566, 572, 593, 599, 606, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1134, 1143, 1149, 1199, 1200, 1266, 1287, 1289, 1394, 1398, 1399, 1435, 1439, 1442, 1458, 1459, 1477, 1483, 1644, 1645, 1646, 1672, 1673, 1674, 1694, 1695, 1704, 1708, 1716, 1717, 1718, 1720, 1725, 1726, 1727, 1728, 1733, 1734], "effici": [0, 1018, 1021, 1022, 1134, 1277, 1285, 1288, 1434, 1437, 1464, 1523, 1659, 1708, 1716, 1723, 1724, 1726, 1732, 1733], "egg": [1710, 1715], "einstein": [0, 1018, 1037], "einsum": 1037, "either": [0, 202, 205, 300, 427, 428, 432, 434, 496, 498, 525, 581, 582, 595, 651, 652, 870, 1067, 1068, 1096, 1097, 1252, 1255, 1261, 1266, 1267, 1270, 1271, 1289, 1307, 1320, 1398, 1402, 1424, 1436, 1442, 1448, 1451, 1512, 1519, 1526, 1539, 1540, 1541, 1542, 1546, 1706, 1708, 1714, 1715, 1716, 1720, 1724, 1728, 1731], "element": [540, 599, 600, 606, 607, 1250, 1270, 1277, 1285, 1349, 1362, 1364, 1365, 1366, 1379, 1380, 1381, 1398, 1415, 1426, 1427, 1431, 1434, 1435, 1525, 1533, 1539, 1540, 1727], "elimin": [1424, 1442], "elinewidth": 1291, "ellipsi": 1576, "els": [595, 1060, 1062, 1111, 1112, 1299, 1300, 1724, 1725], "emit": [1134, 1215, 1260, 1486, 1508, 1515], "emodel": [53, 54], "emodels_cpar": [53, 54], "empir": [862, 1134, 1289, 1709], "empti": [253, 259, 327, 358, 363, 550, 552, 553, 809, 812, 819, 822, 829, 835, 837, 843, 845, 851, 853, 862, 867, 869, 874, 876, 882, 911, 916, 922, 928, 1266, 1269, 1397, 1431, 1512, 1519, 1714], "emptybarb": 1266, "en": [1266, 1269, 1271], "enabl": [0, 1134, 1220, 1222, 1255, 1269, 1271, 1478, 1483, 1539, 1540], "enclos": 1298, "encodingwarn": 1576, "end": [205, 416, 417, 485, 486, 1037, 1099, 1118, 1125, 1127, 1132, 1133, 1152, 1251, 1252, 1253, 1265, 1266, 1269, 1271, 1289, 1298, 1318, 1400, 1416, 1509, 1511, 1516, 1518, 1552], "end_pan": [1134, 1290], "energi": [837, 845, 853, 854, 1710, 1713, 1716, 1723], "enforc": 1710, "eng": [1715, 1724], "eng0": 1715, "engin": [0, 158, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 372, 373, 374, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 525, 1692, 1699, 1710, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "engine_par": [157, 158, 525], "engine_typ": [198, 209, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "english": 1538, "enhanc": [1105, 1706], "enjoi": 0, "enough": 1260, "ensur": [266, 1208, 1318, 1402, 1524, 1543, 1544, 1548, 1717, 1718, 1724], "ensure_vari": [46, 49, 53, 59, 63, 67, 87, 92, 101, 213, 225, 237, 240, 244, 252, 283, 285, 289, 296, 306, 329, 332, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722], "enter": [198, 203, 266, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 408, 1397], "entir": [1230, 1289, 1550, 1551], "entri": [0, 1, 17, 25, 27, 39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 172, 173, 182, 185, 187, 189, 195, 213, 222, 225, 231, 237, 244, 252, 253, 260, 262, 266, 269, 276, 283, 289, 296, 306, 308, 314, 323, 327, 329, 332, 339, 343, 351, 358, 364, 416, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 906, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1050, 1133, 1267, 1269, 1271, 1289, 1411, 1439, 1703, 1719, 1728], "entry_point": [17, 25, 27], "enumer": [1576, 1717, 1718], "environ": [0, 27, 1696], "environmenterror": 1576, "eof": 1576, "eoferror": 1576, "epsilon": [1152, 1478], "eq": 0, "eqn": 862, "equal": [1152, 1153, 1250, 1260, 1269, 1277, 1285, 1398, 1402, 1415, 1417, 1424, 1426, 1427, 1430, 1432, 1434, 1447, 1453, 1461, 1468, 1523, 1524, 1532, 1641, 1655, 1659, 1708, 1714, 1716, 1727], "equat": [0, 986], "equidist": [1424, 1426], "equival": [0, 986, 1170, 1173, 1175, 1176, 1194, 1195, 1197, 1198, 1206, 1207, 1285, 1332, 1397, 1406, 1431, 1508, 1515, 1521, 1522, 1538, 1716, 1720, 1727, 1732, 1734], "error": [111, 169, 170, 187, 222, 260, 266, 276, 277, 314, 372, 375, 416, 485, 557, 560, 562, 564, 566, 572, 574, 578, 869, 1097, 1103, 1105, 1109, 1110, 1111, 1117, 1118, 1121, 1267, 1289, 1291, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1508, 1515, 1539, 1540, 1699, 1724, 1732], "error_kw": 1267, "errorbar": [1134, 1265, 1267, 1291], "errorbar_featur": [1267, 1291], "errorbarcontain": 1291, "erroreveri": 1291, "especi": 1724, "estim": [1269, 1550, 1551], "et": [837, 845, 853, 854, 1716, 1717], "etc": [0, 1011, 1134, 1250, 1261, 1264, 1268, 1277, 1281, 1282, 1285, 1356, 1397, 1399, 1402, 1415, 1424, 1425, 1426, 1427, 1434, 1435, 1437, 1442, 1451, 1453, 1523, 1532, 1539, 1540, 1716, 1722], "europ": 1713, "eval": 1576, "eval_conv_block": [1, 17, 27, 157, 166], "eval_rpoint_result": [296, 300, 593, 595, 599, 606], "evalu": [0, 1, 17, 27, 53, 54, 72, 75, 76, 80, 81, 84, 85, 157, 166, 296, 300, 340, 343, 346, 348, 349, 360, 557, 558, 593, 595, 599, 606, 733, 737, 741, 745, 749, 752, 756, 758, 761, 762, 764, 766, 768, 771, 773, 775, 776, 779, 781, 782, 784, 787, 790, 791, 794, 797, 801, 804, 806, 809, 815, 832, 840, 848, 857, 860, 1018, 1092, 1550, 1551, 1562, 1563, 1565, 1566, 1567, 1570, 1576, 1633, 1695, 1696, 1704, 1705, 1711, 1713, 1714, 1716, 1720, 1722, 1724, 1725, 1728, 1729, 1730, 1731, 1732, 1736], "even": [1143, 1152, 1167, 1178, 1199, 1292, 1398, 1439, 1524, 1548, 1724, 1734], "evenli": 1532, "event": [1134, 1250, 1258, 1261, 1262, 1277, 1279, 1285, 1289, 1291, 1292, 1318, 1324, 1394, 1403, 1415, 1427, 1428, 1431, 1432, 1434, 1468, 1478, 1524, 1543, 1544], "eventcollect": 1292, "eventplot": [1134, 1292], "ever": 1266, "everi": [27, 28, 606, 607, 1230, 1294, 1295, 1397, 1411, 1431, 1530, 1714, 1715, 1729], "everrul": 1710, "everyth": [0, 1724, 1735], "evolv": [453, 1703], "exact": [1251, 1539, 1540, 1716, 1725], "exactli": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1152, 1402, 1525, 1716], "exampl": [0, 432, 1095, 1118, 1119, 1123, 1253, 1267, 1291, 1293, 1402, 1416, 1430, 1431, 1484, 1493, 1498, 1499, 1509, 1516, 1548, 1576, 1704, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "example_var": 1119, "exce": 1726, "exceed": [416, 485, 519, 521, 1533], "except": [222, 1215, 1230, 1240, 1250, 1258, 1262, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1523, 1524, 1525, 1526, 1529, 1532, 1540, 1551, 1552, 1555, 1576], "exceptiongroup": 1576, "exclud": [0, 1135, 1138, 1294, 1295, 1320, 1398, 1438, 1452], "exclus": [1539, 1540, 1541, 1542], "exec": 1576, "exec_python": [1576, 1706], "execut": [5, 47, 51, 55, 61, 65, 69, 89, 94, 103, 196, 214, 216, 227, 239, 248, 284, 293, 330, 346, 418, 436, 457, 470, 479, 487, 499, 547, 583, 587, 591, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 761, 766, 773, 779, 787, 794, 804, 1416, 1468, 1576, 1704, 1706, 1715, 1724], "exercis": 1725, "exist": [56, 70, 106, 182, 267, 637, 645, 680, 769, 807, 817, 827, 834, 842, 850, 859, 880, 886, 888, 907, 908, 920, 927, 1103, 1134, 1242, 1252, 1406, 1426, 1432, 1480, 1539, 1540, 1716, 1722, 1724, 1730, 1734], "exit": [204, 382, 1576], "exit_arg": [379, 382, 384, 388, 404, 406], "exit_kwarg": [379, 382, 384, 388, 404, 406], "expand": [1214, 1233, 1256, 1266, 1349, 1424, 1426, 1435, 1492, 1509, 1512, 1516, 1519, 1535], "expans": [1256, 1512, 1519, 1531, 1716], "expect": [300, 377, 378, 595, 637, 651, 1269, 1397, 1398, 1402, 1531, 1714, 1716, 1721, 1723, 1724], "experiment": [801, 882, 888, 1404, 1405, 1425, 1443, 1444], "explain": [0, 1724], "explan": [1339, 1424, 1539, 1540, 1541], "explicit": [0, 1260, 1266, 1397, 1399, 1402, 1424, 1425, 1426, 1431, 1435, 1442, 1539, 1540, 1624, 1721], "explicitli": [0, 1134, 1313, 1399, 1402, 1409, 1435, 1452, 1480, 1511, 1512, 1518, 1519, 1524, 1537, 1539, 1540, 1576, 1716, 1724], "explod": [1134, 1430], "explor": [1723, 1724], "expon": [0, 528, 677, 693, 703, 715, 723, 751, 1397, 1565, 1676, 1704, 1708, 1734], "exponenti": 1261, "export": [0, 1127], "express": 1037, "extend": [213, 540, 1134, 1150, 1237, 1269, 1271, 1294, 1295, 1424, 1426, 1530, 1539, 1540, 1546, 1550, 1551, 1695, 1696, 1699, 1704, 1711, 1713], "extendedst": [0, 213, 214, 215, 216, 217, 218, 219, 220, 221, 1699], "extent": [1250, 1252, 1270, 1277, 1285, 1356, 1397, 1402, 1415, 1427, 1434, 1523, 1539, 1540], "extern": 1724, "extra": [53, 54, 1079, 1080, 1081, 1082, 1083, 1084, 1252, 1453, 1524, 1535, 1692], "extract": [198, 205, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 529, 1629], "extrapol": 1713, "extrem": [1269, 1271], "extrema": [1550, 1551], "f": [190, 224, 266, 316, 613, 614, 1045, 1046, 1134, 1178, 1192, 1250, 1277, 1285, 1415, 1427, 1434, 1484, 1498, 1523, 1574, 1717, 1718, 1720, 1723, 1725, 1726, 1729, 1731, 1732, 1733, 1734], "face": [1266, 1267, 1270, 1294, 1295, 1397, 1424, 1426, 1431, 1435, 1436, 1442, 1541], "facecolor": [1134, 1253, 1259, 1263, 1266, 1267, 1270, 1294, 1295, 1321, 1397, 1404, 1424, 1426, 1435, 1442, 1447, 1465, 1535, 1541], "fact": [1718, 1734], "factor": [0, 92, 93, 131, 540, 623, 624, 651, 652, 862, 863, 876, 877, 916, 917, 922, 923, 1349, 1402, 1443, 1444, 1492, 1532, 1551, 1563, 1567, 1627, 1663, 1698, 1704, 1707, 1708, 1716, 1734], "factor_p": [623, 624], "factori": [0, 1, 17, 27, 101, 157, 177, 198, 209, 213, 276, 281, 296, 303, 306, 309, 327, 329, 331, 332, 338, 339, 342, 343, 350, 358, 362, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 557, 562, 564, 566, 572, 578, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1009, 1018, 1038, 1045, 1048, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1111, 1115, 1116, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1559, 1560, 1706, 1716, 1722], "fail": [0, 1624, 1716, 1718, 1731], "fall": [1299, 1300, 1539, 1640, 1720, 1731], "fals": [0, 1, 4, 5, 17, 19, 27, 28, 46, 49, 53, 56, 59, 63, 67, 70, 87, 92, 101, 106, 157, 168, 170, 182, 185, 187, 194, 195, 213, 222, 237, 238, 244, 252, 253, 260, 262, 266, 267, 276, 283, 289, 296, 298, 300, 306, 314, 327, 329, 332, 339, 343, 351, 358, 364, 385, 390, 395, 397, 403, 407, 408, 416, 417, 427, 430, 432, 447, 468, 485, 486, 537, 540, 544, 550, 552, 553, 557, 562, 564, 566, 578, 581, 586, 589, 590, 593, 595, 613, 618, 641, 642, 645, 656, 661, 664, 667, 672, 674, 676, 680, 686, 687, 692, 702, 712, 714, 722, 731, 732, 735, 736, 739, 740, 743, 744, 747, 751, 754, 764, 769, 771, 784, 801, 807, 809, 812, 817, 819, 822, 827, 829, 834, 837, 838, 842, 845, 846, 850, 853, 854, 855, 859, 862, 863, 869, 876, 880, 882, 886, 888, 908, 911, 916, 920, 922, 927, 930, 935, 940, 945, 950, 951, 956, 962, 963, 968, 974, 975, 980, 986, 992, 993, 998, 1009, 1010, 1011, 1018, 1020, 1026, 1032, 1039, 1040, 1041, 1042, 1043, 1044, 1051, 1053, 1054, 1056, 1057, 1058, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1091, 1096, 1111, 1112, 1118, 1121, 1134, 1140, 1143, 1163, 1164, 1165, 1167, 1171, 1178, 1190, 1199, 1240, 1251, 1253, 1255, 1256, 1260, 1266, 1267, 1269, 1271, 1285, 1287, 1289, 1291, 1294, 1295, 1308, 1320, 1339, 1356, 1375, 1376, 1377, 1390, 1391, 1392, 1397, 1398, 1399, 1402, 1404, 1405, 1406, 1410, 1416, 1424, 1425, 1426, 1430, 1432, 1434, 1438, 1442, 1448, 1451, 1453, 1460, 1463, 1468, 1486, 1493, 1508, 1511, 1512, 1515, 1518, 1519, 1526, 1532, 1537, 1538, 1548, 1550, 1551, 1555, 1576, 1577, 1578, 1582, 1584, 1586, 1588, 1592, 1594, 1599, 1601, 1606, 1608, 1614, 1616, 1618, 1622, 1629, 1632, 1706, 1718, 1721, 1722, 1724, 1727], "famili": [1436, 1535], "fanci": 1251, "fancyarrow": 1253, "fancyarrowpatch": [1251, 1532], "fancybboxpatch": 1535, "fantasi": 1535, "far": [0, 802, 882, 883, 888, 903, 1258], "farm": [0, 1, 3, 4, 5, 6, 17, 19, 20, 27, 28, 31, 32, 34, 36, 37, 46, 47, 51, 55, 61, 63, 65, 69, 74, 79, 83, 87, 89, 94, 100, 103, 122, 157, 158, 161, 167, 184, 205, 211, 216, 222, 225, 227, 228, 237, 239, 240, 244, 248, 252, 254, 255, 256, 257, 258, 259, 266, 278, 279, 280, 282, 284, 285, 293, 296, 298, 300, 301, 323, 324, 330, 345, 346, 347, 348, 349, 360, 361, 363, 365, 366, 367, 368, 370, 385, 387, 390, 395, 397, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 436, 457, 470, 479, 487, 499, 524, 525, 527, 528, 530, 543, 544, 547, 555, 556, 561, 563, 569, 570, 575, 579, 580, 583, 587, 591, 595, 596, 613, 614, 616, 620, 626, 632, 638, 641, 644, 653, 659, 662, 665, 668, 670, 679, 688, 695, 705, 716, 725, 761, 762, 764, 766, 767, 768, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 801, 804, 805, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 857, 858, 860, 863, 865, 866, 867, 872, 873, 874, 879, 882, 885, 904, 914, 915, 919, 925, 928, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1009, 1010, 1011, 1012, 1013, 1018, 1019, 1020, 1021, 1022, 1025, 1026, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1051, 1052, 1054, 1055, 1058, 1059, 1060, 1062, 1071, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1693, 1694, 1695, 1698, 1699, 1702, 1703, 1704, 1705, 1711, 1712, 1713, 1715, 1716, 1717, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "farm_calc": [1018, 1724], "farm_control": [1, 3, 6, 17, 27, 530, 543, 1722], "farm_data": [198, 205, 211, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407], "farm_df": [1731, 1734], "farm_hubh_data": 1722, "farm_kti": 1722, "farm_kti_amb": 1722, "farm_layout": [408, 409, 410, 411, 412, 413, 414, 415, 1710, 1714, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1733], "farm_model": [530, 544, 545, 546, 547, 548, 549, 1722], "farm_pmask": 1722, "farm_result": [1, 4, 5, 17, 19, 27, 31, 32, 36, 161, 525, 1009, 1010, 1018, 1019, 1038, 1051, 1052, 1054, 1055, 1077, 1078, 1085, 1086, 1088, 1089, 1717, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "farm_results_downwind": [17, 20, 27, 37], "farm_thrust2ct": 1722, "farm_yaw2yawm": 1722, "farm_yawm2yaw": 1722, "farm_yield": 1025, "farmcontrol": [1, 6, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 530, 543, 1699, 1704], "farmdatamodel": [46, 49, 59, 63, 87, 92, 225, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 252, 296, 329, 1694, 1695, 1699], "farmdatamodellist": [225, 244, 245, 246, 247, 248, 249, 250, 251, 1699], "farmlayoutoutput": [0, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1705, 1718, 1719, 1720, 1723, 1724, 1728, 1729, 1731, 1732, 1733], "farmmodel": [252, 530, 544, 1699, 1704], "farmoptproblem": 0, "farmord": [764, 765, 766, 767, 768, 769, 770, 776, 1704, 1722], "farmresultsev": [0, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1705, 1710, 1720, 1723, 1726, 1731, 1732, 1733], "farmvarsproblem": 0, "farmwakescalcul": [46, 47, 48, 87, 88, 89, 90, 91, 1694, 1695, 1724], "farmwakescalculation_instance1": 1724, "farthest": 1269, "fast": [1425, 1574, 1713, 1716, 1724, 1725], "faster": [1424, 1425, 1426, 1442, 1724], "fastest": 1425, "favor": 1480, "fc": [266, 349, 782, 1134, 1250, 1253, 1259, 1263, 1266, 1267, 1270, 1277, 1285, 1294, 1295, 1397, 1404, 1415, 1424, 1426, 1427, 1434, 1435, 1447, 1523, 1720, 1726, 1734], "fd": 1398, "fdata": [0, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 202, 205, 213, 216, 222, 223, 224, 225, 227, 237, 239, 240, 244, 248, 252, 253, 254, 255, 256, 257, 258, 259, 266, 276, 278, 279, 280, 282, 283, 284, 285, 289, 293, 296, 298, 300, 301, 306, 327, 329, 330, 332, 343, 345, 346, 347, 348, 349, 358, 360, 361, 363, 364, 365, 366, 416, 418, 427, 430, 432, 436, 447, 449, 451, 453, 457, 466, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 543, 544, 547, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 578, 579, 580, 581, 583, 586, 587, 589, 591, 593, 595, 596, 599, 606, 613, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 758, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 776, 779, 780, 781, 782, 784, 787, 788, 789, 790, 791, 794, 796, 797, 801, 804, 805, 806, 809, 810, 811, 812, 814, 815, 816, 819, 820, 821, 822, 824, 825, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 882, 885, 888, 904, 911, 914, 915, 916, 919, 922, 925, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 956, 959, 960, 962, 965, 966, 968, 971, 972, 974, 977, 978, 980, 983, 984, 986, 989, 990, 992, 995, 996, 998, 1001, 1002, 1699], "fdict": [0, 530, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1706], "featur": [0, 1266, 1426, 1530, 1728], "feder": 1713, "feel": 1719, "fernando": [801, 876, 882, 888], "fft": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "field": [529, 986, 1018, 1037, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1266, 1435, 1703, 1713, 1714, 1716, 1718, 1720, 1721, 1725, 1730, 1733, 1734, 1736], "fielddatanc": [0, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 1703, 1714, 1721], "fig": [1004, 1005, 1006, 1008, 1011, 1018, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1064, 1066, 1096, 1134, 1252, 1301, 1329, 1356, 1406, 1467, 1471, 1717, 1718, 1719, 1720, 1721, 1723, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "figsiz": [1009, 1011, 1018, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1064, 1066, 1085, 1087, 1095, 1096, 1134, 1301, 1710, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733], "figur": [0, 1004, 1005, 1009, 1011, 1033, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1058, 1062, 1066, 1069, 1074, 1091, 1096, 1134, 1250, 1251, 1252, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1301, 1313, 1323, 1329, 1339, 1356, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1447, 1452, 1461, 1467, 1471, 1479, 1484, 1498, 1511, 1518, 1524, 1533, 1535, 1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618, 1710, 1717, 1718, 1730, 1732], "figurecanvasbas": 1439, "file": [0, 111, 187, 222, 260, 314, 375, 377, 378, 408, 409, 410, 411, 416, 417, 427, 428, 432, 434, 485, 486, 496, 498, 512, 513, 521, 522, 523, 532, 581, 582, 619, 636, 637, 651, 652, 672, 673, 674, 675, 676, 677, 692, 693, 702, 703, 712, 713, 714, 715, 722, 723, 869, 1009, 1014, 1015, 1016, 1017, 1018, 1038, 1045, 1046, 1047, 1050, 1051, 1053, 1054, 1056, 1057, 1058, 1063, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1093, 1097, 1099, 1100, 1101, 1102, 1103, 1105, 1108, 1111, 1127, 1132, 1133, 1426, 1625, 1628, 1629, 1630, 1631, 1640, 1700, 1702, 1703, 1704, 1705, 1706, 1710, 1713, 1714, 1715, 1716, 1720, 1721, 1723, 1728, 1730, 1731, 1732, 1733], "file_man": 1100, "file_nam": [375, 377, 1009, 1014, 1015, 1016, 1018, 1038, 1045, 1050, 1051, 1054, 1056, 1057, 1058, 1063, 1064, 1077, 1085, 1088, 1091, 1093, 1097, 1100, 1103, 1700, 1702], "file_name_a": [378, 1700, 1702], "file_name_b": [378, 1700, 1702], "file_path": [375, 410, 411, 521, 1009, 1017, 1097, 1101, 1102, 1127, 1132, 1133, 1703, 1710], "file_sfx": [375, 1097, 1099], "fileexistserror": 1576, "filenotfounderror": 1576, "fill": [253, 258, 259, 276, 282, 363, 375, 416, 485, 529, 550, 552, 553, 557, 562, 564, 566, 572, 578, 835, 843, 851, 867, 874, 928, 1062, 1134, 1253, 1259, 1260, 1263, 1266, 1267, 1282, 1293, 1294, 1295, 1397, 1398, 1402, 1404, 1424, 1426, 1431, 1435, 1442, 1453, 1525, 1526, 1529, 1539, 1540, 1550, 1551, 1578, 1588, 1596, 1603, 1610, 1618, 1700], "fill_between": [1134, 1293, 1294, 1295, 1525], "fill_betweenx": [1134, 1294, 1295], "fill_empti": 1266, "fill_mod": [1578, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1618], "fill_valu": [416, 485], "fillstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "filter": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1296, 1303, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1449, 1492, 1523, 1524, 1533, 1535, 1576], "filter_func": [1134, 1449], "filternorm": 1402, "filterrad": 1402, "final": [0, 1, 4, 5, 17, 19, 21, 27, 46, 49, 53, 59, 63, 67, 87, 92, 96, 98, 101, 157, 168, 185, 195, 198, 202, 204, 213, 225, 229, 235, 237, 244, 252, 253, 256, 257, 262, 265, 276, 279, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 361, 364, 366, 379, 382, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 438, 447, 449, 451, 453, 466, 468, 477, 485, 496, 501, 512, 517, 530, 534, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 569, 572, 578, 579, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 696, 702, 706, 712, 714, 717, 722, 726, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 795, 801, 809, 812, 816, 819, 822, 829, 833, 837, 841, 845, 849, 853, 854, 858, 862, 869, 876, 882, 888, 911, 916, 922, 926, 930, 934, 935, 939, 940, 944, 945, 949, 950, 951, 954, 956, 957, 960, 962, 963, 966, 968, 969, 972, 974, 975, 978, 980, 981, 984, 986, 987, 990, 992, 993, 996, 998, 999, 1002, 1067, 1072, 1694, 1717, 1718, 1719, 1720, 1724, 1725, 1728, 1731, 1733], "final_iter": [17, 21, 27], "final_par": [225, 235, 543], "final_wake_delta": [256, 279, 366, 569, 579, 934, 939, 944, 949, 954, 960, 966, 972, 978, 984, 990, 996, 1002], "finalis": 1717, "finalize_farm_wak": [253, 256, 550, 552, 553], "finalize_point_wak": [253, 257, 550, 552, 553], "finalize_wak": [276, 279, 557, 562, 564, 566, 569, 572, 578, 579], "finalize_wake_delta": [327, 358, 361, 809, 812, 816, 819, 822, 829, 833, 837, 841, 845, 849, 853, 854, 858, 862, 869, 876, 882, 911, 916, 922], "find": [0, 1, 17, 27, 157, 169, 1134, 1296, 1692, 1700], "find_chunk_in_stor": [1, 17, 27, 157, 169], "findobj": [1134, 1296], "finer": 1533, "finish": 1718, "finit": [1480, 1539, 1540], "fire": [1428, 1478], "first": [0, 25, 74, 79, 83, 187, 188, 194, 213, 222, 260, 266, 314, 321, 378, 520, 712, 714, 722, 771, 1060, 1062, 1134, 1135, 1142, 1255, 1264, 1265, 1267, 1268, 1269, 1271, 1289, 1291, 1294, 1295, 1398, 1399, 1402, 1406, 1410, 1417, 1425, 1426, 1508, 1515, 1520, 1523, 1529, 1532, 1539, 1540, 1541, 1542, 1704, 1714, 1715, 1716, 1717, 1718, 1720, 1723, 1724, 1725, 1732, 1733, 1734], "fit": [540, 1265, 1402, 1524, 1704], "fix": [0, 314, 432, 434, 468, 496, 498, 1118, 1119, 1199, 1256, 1261, 1402, 1441, 1451, 1461, 1479, 1511, 1518, 1524, 1538, 1703, 1718], "fix_minu": [1220, 1222], "fixed_var": [416, 417, 432, 434, 485, 486, 496, 498, 517, 1710, 1716, 1719, 1720, 1721, 1724, 1726, 1728, 1731, 1732, 1733, 1734], "fixedformatt": [1511, 1512, 1518, 1519], "fixedloc": [1511, 1512, 1518, 1519], "flag": [1, 4, 5, 17, 19, 21, 27, 28, 41, 44, 46, 49, 53, 59, 63, 67, 74, 79, 83, 87, 92, 101, 157, 159, 169, 170, 185, 190, 195, 198, 202, 203, 207, 213, 225, 227, 232, 233, 237, 238, 244, 252, 253, 262, 266, 268, 271, 276, 277, 283, 289, 296, 306, 327, 328, 329, 332, 335, 336, 337, 339, 343, 345, 351, 354, 355, 357, 358, 359, 364, 372, 373, 379, 380, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 411, 416, 417, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 486, 496, 512, 517, 529, 537, 540, 543, 544, 550, 552, 553, 557, 560, 562, 564, 566, 572, 574, 578, 581, 586, 589, 593, 599, 600, 606, 607, 613, 618, 623, 630, 636, 641, 642, 651, 656, 661, 664, 667, 672, 674, 676, 681, 682, 683, 686, 687, 689, 690, 692, 698, 699, 700, 702, 708, 709, 710, 712, 714, 719, 720, 722, 728, 729, 731, 732, 735, 736, 739, 740, 743, 744, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 863, 869, 876, 882, 888, 911, 916, 922, 923, 930, 935, 940, 945, 950, 951, 956, 962, 963, 968, 974, 975, 980, 986, 992, 993, 998, 1009, 1010, 1011, 1020, 1026, 1032, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1053, 1056, 1060, 1062, 1063, 1072, 1073, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1103, 1109, 1110, 1111, 1114, 1117, 1121, 1134, 1266, 1329, 1458, 1582, 1592, 1599, 1606, 1614, 1622, 1699, 1715], "flagcolor": 1266, "flake8": 0, "flapfoam": 1713, "flappi": [0, 1713], "flat": [1424, 1425, 1426, 1541], "flatten": 1442, "flier": [1269, 1271], "flierprop": [1269, 1271], "flip": [1266, 1269, 1508, 1515], "flip_barb": 1266, "float": [81, 82, 186, 323, 324, 332, 333, 343, 344, 345, 353, 413, 414, 428, 432, 434, 453, 454, 467, 468, 469, 477, 478, 537, 538, 539, 540, 541, 542, 553, 554, 623, 624, 668, 673, 675, 676, 677, 681, 692, 693, 698, 702, 703, 708, 713, 715, 722, 723, 747, 748, 754, 755, 758, 759, 776, 777, 784, 785, 791, 792, 801, 802, 846, 862, 863, 870, 876, 877, 882, 883, 888, 903, 916, 917, 922, 923, 940, 941, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1009, 1010, 1011, 1020, 1022, 1025, 1026, 1032, 1039, 1040, 1041, 1042, 1043, 1044, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1095, 1096, 1134, 1152, 1171, 1214, 1233, 1250, 1251, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1281, 1282, 1285, 1286, 1289, 1291, 1292, 1294, 1295, 1298, 1307, 1342, 1343, 1344, 1345, 1370, 1372, 1385, 1387, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1411, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1447, 1449, 1451, 1453, 1461, 1478, 1482, 1484, 1487, 1488, 1489, 1492, 1497, 1498, 1502, 1506, 1507, 1508, 1509, 1512, 1513, 1514, 1515, 1516, 1519, 1520, 1523, 1524, 1526, 1528, 1529, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1550, 1551, 1552, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1576, 1594, 1595, 1627, 1633, 1634, 1637, 1638, 1719], "float32": 1723, "float3250": 1723, "float64": [1718, 1724, 1729, 1730], "float640": [1718, 1724], "float641": [1718, 1724], "float6411": 1724, "float64119": [1718, 1724], "float64141": 1724, "float64178": [1718, 1724], "float64270": 1718, "float643": 1718, "float644": 1724, "float647": 1718, "float648": [1718, 1724], "float649": 1724, "floatingpointerror": 1576, "flow": [0, 829, 854, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1067, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1532, 1705, 1712, 1713, 1714, 1716, 1717, 1718, 1720, 1723, 1729, 1730, 1731, 1736], "flow_plots_2d": [0, 1096], "flowplots2d": [0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1705, 1717, 1718, 1720, 1721, 1723, 1724, 1730, 1731, 1733, 1734], "flush": [1357, 1502], "fly": [1, 17, 27, 157, 166, 256, 257, 279, 361, 529, 569, 579, 784, 789, 816, 833, 841, 849, 858, 860, 1539, 1540, 1541, 1542], "fmt": [1134, 1265, 1291, 1414, 1430, 1431, 1432, 1445, 1446, 1484, 1498, 1530], "fmt2": [1414, 1431, 1445, 1446, 1530], "fmt_xdata": 1299, "fmt_ydata": 1300, "fmu": [27, 1696], "fname": [1009, 1018, 1038, 1045, 1046, 1047, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1134, 1329, 1471, 1628, 1629, 1630, 1706], "fnc": 829, "folder": [0, 1712], "follow": [0, 414, 432, 784, 869, 1143, 1147, 1178, 1199, 1240, 1250, 1251, 1252, 1269, 1271, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1349, 1397, 1398, 1399, 1400, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1451, 1478, 1499, 1508, 1515, 1523, 1524, 1525, 1532, 1539, 1540, 1550, 1551, 1552, 1555, 1704, 1710, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1731, 1732, 1733, 1734, 1736], "followind": 712, "folow": 1716, "font": [1411, 1535, 1537], "font_manag": [1436, 1535], "font_properti": 1535, "fontdict": [1134, 1502, 1507, 1511, 1514, 1518, 1535], "fontfamili": 1535, "fontnam": 1535, "fontproperti": [1411, 1436, 1535], "fontsiz": [1009, 1011, 1016, 1251, 1502, 1511, 1518, 1533, 1535], "fontstretch": 1535, "fontstyl": 1535, "fontvari": 1535, "fontweight": [1502, 1511, 1518, 1535], "for_layout_onli": 1356, "forc": [1, 5, 17, 27, 46, 49, 53, 56, 59, 63, 67, 70, 87, 92, 101, 106, 157, 182, 185, 195, 213, 237, 244, 252, 253, 262, 267, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 468, 485, 525, 537, 540, 544, 550, 552, 553, 557, 562, 564, 566, 578, 581, 586, 589, 593, 613, 618, 641, 645, 656, 661, 664, 667, 672, 674, 676, 680, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 764, 769, 771, 784, 801, 807, 809, 812, 817, 819, 822, 827, 829, 834, 837, 842, 845, 850, 853, 854, 859, 862, 869, 876, 880, 882, 886, 888, 908, 911, 916, 920, 922, 927, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1134, 1250, 1260, 1269, 1277, 1285, 1415, 1416, 1427, 1434, 1483, 1523, 1532, 1541, 1548, 1704, 1715], "force_edgecolor": [1424, 1426], "forg": [0, 1715, 1735], "forget": 1724, "forgotten": 0, "fork": [0, 1710, 1713, 1715], "form": [1143, 1155, 1178, 1199, 1251, 1292, 1398, 1424, 1426, 1480, 1732], "format": [0, 377, 378, 416, 417, 428, 432, 485, 486, 1013, 1050, 1079, 1080, 1081, 1082, 1083, 1084, 1127, 1133, 1134, 1220, 1221, 1265, 1281, 1282, 1291, 1297, 1298, 1299, 1300, 1411, 1417, 1430, 1431, 1432, 1442, 1484, 1498, 1511, 1512, 1518, 1519, 1529, 1530, 1538, 1576, 1703, 1710, 1719, 1721], "format_col2var": [1009, 1018, 1038, 1045, 1050, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093], "format_coord": [1134, 1297], "format_cursor_data": [1134, 1298, 1318], "format_data": [1220, 1223], "format_data_short": [1220, 1224], "format_dict": [1009, 1018, 1038, 1045, 1050, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1127, 1133], "format_tick": [1220, 1225], "format_times_func": 428, "format_xdata": [1134, 1299], "format_ydata": [1134, 1300], "formatstrformatt": [1484, 1498], "formatt": [1134, 1220, 1229, 1267, 1298, 1299, 1300, 1432, 1512, 1519, 1538], "former": [0, 1252, 1431], "formul": [299, 594, 602, 609, 1728], "forst": [837, 845, 853, 1709, 1717], "forward": [408, 410, 411, 412, 413, 414, 415, 547, 1011, 1050, 1079, 1080, 1081, 1082, 1083, 1084, 1132, 1133, 1134, 1255, 1324, 1398, 1414, 1431, 1435, 1445, 1446, 1468, 1532, 1542, 1724], "forward_navigation_ev": 1447, "found": [0, 111, 169, 170, 187, 191, 222, 225, 260, 314, 372, 535, 802, 1103, 1105, 1109, 1110, 1111, 1117, 1425, 1525, 1640, 1703, 1711, 1714, 1715, 1716, 1722, 1730, 1732, 1735], "foundat": 1576, "four": [0, 1404, 1405, 1717, 1721], "fourier": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "fox": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1694, 1695, 1696, 1710, 1711, 1712, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1737], "foxes_opt": [0, 1735], "foxes_windio": [0, 522, 1703, 1713], "foxes_yaml": [0, 523, 1703, 1713], "fpath": [1047, 1640, 1723], "fr": [1721, 1723, 1726, 1730, 1732], "frac": [1178, 1277], "fraction": [1251, 1253, 1398, 1411, 1430], "frame": [0, 1, 3, 15, 17, 27, 276, 299, 343, 345, 347, 348, 350, 360, 432, 530, 581, 582, 594, 602, 609, 758, 762, 764, 765, 767, 768, 771, 774, 775, 776, 780, 781, 784, 788, 790, 791, 796, 797, 801, 802, 805, 806, 815, 832, 840, 848, 857, 888, 1404, 1430, 1628, 1699, 1704, 1709, 1713, 1720, 1721, 1724, 1729, 1731, 1734], "frame_on": 1447, "framework": [1710, 1713], "frandsen": [0, 869, 870, 916, 917, 1716], "fraunhof": [0, 1713], "fraunhoferiw": [0, 1713, 1715, 1737], "frazer": 829, "fre": [20, 96, 100, 1009, 1067, 1071, 1072, 1076, 1725], "frederik": 540, "free": [1511, 1518], "freq": [520, 1250, 1277, 1285, 1415, 1427, 1434, 1523, 1724], "frequenc": [520, 1250, 1277, 1285, 1415, 1427, 1434, 1443, 1523, 1630], "fresh": 0, "freshli": [1718, 1722], "friction": [1562, 1564, 1566, 1569, 1570, 1572, 1707], "from": [0, 1, 17, 20, 27, 39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 117, 118, 157, 171, 172, 183, 185, 186, 187, 190, 191, 195, 202, 213, 214, 222, 224, 225, 237, 244, 252, 253, 254, 255, 260, 262, 266, 274, 276, 278, 283, 289, 296, 298, 301, 306, 314, 316, 317, 318, 327, 329, 332, 339, 343, 345, 349, 351, 358, 360, 364, 375, 376, 377, 378, 382, 410, 411, 414, 416, 417, 425, 427, 430, 432, 434, 445, 447, 449, 451, 453, 454, 464, 466, 468, 475, 477, 485, 486, 494, 496, 498, 510, 512, 516, 517, 519, 521, 522, 523, 525, 527, 528, 537, 539, 540, 542, 543, 544, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 572, 573, 575, 578, 581, 582, 586, 589, 593, 596, 599, 606, 613, 618, 619, 623, 630, 636, 637, 641, 650, 651, 656, 661, 664, 667, 672, 674, 676, 677, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 759, 764, 765, 771, 776, 777, 782, 784, 791, 792, 800, 801, 802, 809, 812, 815, 819, 822, 829, 832, 837, 840, 845, 848, 853, 854, 857, 862, 863, 869, 876, 882, 888, 911, 916, 917, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1009, 1010, 1039, 1040, 1041, 1050, 1053, 1060, 1062, 1079, 1080, 1081, 1082, 1083, 1084, 1090, 1091, 1092, 1095, 1097, 1098, 1099, 1100, 1118, 1119, 1123, 1134, 1135, 1138, 1143, 1149, 1168, 1178, 1181, 1199, 1208, 1215, 1219, 1230, 1235, 1240, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1398, 1400, 1402, 1404, 1405, 1415, 1418, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1442, 1444, 1447, 1449, 1452, 1462, 1497, 1502, 1507, 1508, 1514, 1515, 1523, 1524, 1525, 1529, 1530, 1533, 1535, 1539, 1540, 1541, 1543, 1544, 1545, 1547, 1550, 1551, 1552, 1555, 1573, 1576, 1624, 1625, 1629, 1636, 1637, 1638, 1639, 1645, 1646, 1673, 1674, 1689, 1691, 1700, 1702, 1703, 1704, 1705, 1706, 1708, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1734], "from_ax": [1134, 1301], "from_bound": 1479, "from_dataset": [187, 190, 222, 224, 260, 314, 316], "from_ext": 1479, "from_point": [314, 317], "from_r": [1009, 1010], "from_result": [1009, 1010], "from_tpoint": [314, 318], "from_yaml": [111, 187, 222, 260, 314, 1105, 1108, 1111], "fromlookupt": [0, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 1704, 1713], "front": [1717, 1718], "frontal": 1734, "frozen": [1143, 1152, 1156, 1178, 1183, 1199], "frozenset": 1576, "fulfil": 1728, "full": [0, 845, 853, 1220, 1223, 1240, 1250, 1253, 1258, 1261, 1262, 1266, 1269, 1271, 1277, 1285, 1289, 1291, 1394, 1402, 1415, 1427, 1430, 1431, 1432, 1434, 1499, 1524, 1530, 1555, 1576, 1714, 1719, 1723, 1724, 1725], "fulli": [1023, 1024, 1034, 1199], "fun": 1731, "func": [613, 614, 1134, 1242, 1443, 1444], "funcscal": [1510, 1517], "function": [0, 1, 17, 27, 47, 51, 55, 61, 65, 69, 89, 94, 103, 157, 179, 181, 183, 190, 195, 196, 204, 211, 216, 224, 227, 239, 243, 244, 248, 272, 274, 284, 288, 289, 293, 300, 311, 316, 330, 346, 382, 385, 387, 390, 395, 397, 403, 407, 418, 423, 425, 428, 432, 434, 436, 442, 443, 445, 457, 461, 464, 470, 473, 475, 479, 487, 492, 494, 496, 498, 499, 506, 507, 510, 515, 516, 547, 583, 587, 591, 595, 613, 614, 616, 620, 626, 632, 638, 644, 649, 650, 653, 659, 662, 665, 667, 670, 679, 688, 695, 705, 716, 725, 761, 766, 773, 779, 787, 794, 799, 800, 804, 1045, 1046, 1050, 1062, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1118, 1119, 1134, 1177, 1208, 1217, 1230, 1240, 1242, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1272, 1273, 1277, 1285, 1289, 1291, 1294, 1295, 1296, 1299, 1300, 1303, 1363, 1378, 1394, 1397, 1402, 1404, 1415, 1417, 1423, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1447, 1449, 1476, 1478, 1480, 1486, 1523, 1524, 1526, 1529, 1533, 1535, 1555, 1560, 1566, 1568, 1570, 1571, 1574, 1576, 1633, 1634, 1692, 1699, 1700, 1702, 1703, 1704, 1705, 1706, 1707, 1710, 1714, 1716, 1717, 1719, 1722, 1723, 1724, 1725, 1729, 1735], "fund": 1713, "fundament": 1442, "further": [712, 1252, 1256, 1260, 1266, 1402, 1425, 1453, 1484, 1498, 1511, 1518, 1524, 1732], "furthermor": [1713, 1724, 1726], "futur": [0, 391, 1135, 1291, 1480, 1532, 1713, 1724], "futurewarn": 1576, "fv": [1050, 1095, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "g": [0, 391, 623, 624, 829, 916, 1050, 1062, 1118, 1119, 1133, 1134, 1136, 1154, 1178, 1199, 1241, 1251, 1256, 1259, 1261, 1263, 1265, 1267, 1269, 1270, 1271, 1291, 1293, 1296, 1329, 1394, 1397, 1398, 1402, 1414, 1416, 1431, 1435, 1436, 1439, 1453, 1460, 1471, 1478, 1480, 1511, 1512, 1518, 1519, 1529, 1530, 1535, 1537, 1538, 1560, 1629, 1632, 1702, 1704, 1710, 1713, 1715, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1730, 1734], "g_pt": [1079, 1080, 1081, 1082, 1083, 1084], "galleri": [1265, 1267, 1269, 1271, 1291, 1402, 1424, 1426, 1430, 1443, 1444, 1460, 1482, 1483, 1525, 1535], "gamma": [846, 888, 904, 1399, 1722, 1734], "gapcolor": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "gather": [225, 228, 543], "gaussian": [819, 916, 1269, 1402, 1551, 1709, 1716, 1725], "gaussiankd": 1551, "gaussianwakemodel": [819, 820, 821, 876, 916, 922, 1709, 1716], "gdata": [1039, 1040, 1041], "gen": [1004, 1006, 1008], "gen_imag": [1067, 1069, 1072, 1074, 1729], "gen_states_fig_xi": [1038, 1039, 1717, 1718, 1720, 1721, 1724, 1730, 1731, 1734], "gen_states_fig_xz": [0, 1038, 1040, 1718, 1723], "gen_states_fig_yz": [1038, 1041, 1734], "gen_stdata": [1018, 1033, 1720, 1731], "gener": [0, 764, 784, 789, 922, 1004, 1006, 1008, 1018, 1033, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1135, 1136, 1138, 1152, 1170, 1173, 1177, 1194, 1195, 1206, 1266, 1397, 1398, 1399, 1402, 1417, 1424, 1425, 1426, 1430, 1435, 1442, 1478, 1512, 1519, 1523, 1524, 1532, 1539, 1540, 1705, 1709, 1717, 1718, 1719, 1720, 1724], "generatorexit": 1576, "geodatafram": 1628, "geom": 1632, "geom2d": [367, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1632], "geom_col": 1629, "geom_reggrid": 0, "geometr": 0, "geometri": [1577, 1579, 1583, 1584, 1585, 1586, 1587, 1589, 1593, 1594, 1600, 1601, 1607, 1608, 1611, 1615, 1616, 1617, 1619, 1623, 1629, 1632, 1706], "geomlayout": 0, "geomlayoutgrid": 0, "geomreggrid": 0, "geopanda": [1628, 1629, 1631], "geopandas_help": 0, "georg": 540, "germani": 1719, "get": [0, 1, 7, 17, 20, 22, 27, 38, 46, 49, 53, 59, 63, 67, 72, 75, 76, 80, 81, 84, 85, 87, 92, 101, 111, 117, 118, 157, 170, 171, 187, 191, 194, 195, 197, 198, 208, 213, 222, 225, 237, 241, 244, 252, 260, 276, 280, 283, 286, 289, 296, 306, 314, 321, 329, 332, 343, 347, 351, 352, 372, 375, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 530, 533, 535, 543, 544, 557, 562, 563, 564, 566, 570, 572, 578, 580, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 758, 764, 767, 771, 774, 776, 780, 784, 788, 789, 791, 796, 801, 805, 1009, 1018, 1038, 1045, 1047, 1051, 1054, 1058, 1060, 1064, 1066, 1077, 1085, 1088, 1091, 1093, 1097, 1103, 1104, 1105, 1109, 1111, 1117, 1134, 1143, 1148, 1149, 1157, 1158, 1178, 1179, 1184, 1185, 1199, 1200, 1214, 1218, 1233, 1252, 1260, 1267, 1277, 1285, 1305, 1312, 1321, 1324, 1325, 1335, 1336, 1352, 1353, 1355, 1356, 1357, 1366, 1369, 1375, 1381, 1384, 1390, 1397, 1398, 1434, 1435, 1484, 1498, 1511, 1518, 1523, 1539, 1540, 1577, 1579, 1584, 1586, 1589, 1594, 1601, 1608, 1611, 1616, 1619, 1690, 1697, 1699, 1717, 1718, 1719], "get_adjust": [1134, 1252, 1302], "get_affin": [1143, 1157, 1178, 1184, 1199], "get_agg_filt": [1134, 1303], "get_alpha": [1134, 1304], "get_anchor": [1134, 1252, 1305], "get_anim": [1134, 1306], "get_arrai": 1397, "get_aspect": [1134, 1307], "get_autoscale_on": [1134, 1308], "get_autoscalex_on": [1134, 1309, 1506], "get_autoscaley_on": [1134, 1310, 1513], "get_axes_loc": [1134, 1311], "get_axisbelow": [1134, 1312, 1460], "get_box_aspect": [1134, 1313], "get_centreline_point": [343, 347, 758, 764, 767, 771, 774, 776, 780, 784, 788, 791, 796, 801, 805], "get_children": [1134, 1314], "get_chunk_input_data": [198, 205, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "get_clip_box": [1134, 1315], "get_clip_on": [1134, 1316], "get_clip_path": [1134, 1317], "get_cursor_data": [1134, 1298, 1318, 1474], "get_data": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 266, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 352, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 906, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1058, 1060, 1091], "get_data_info": [1058, 1061, 1091], "get_data_ratio": [1134, 1319], "get_dataset": [1088, 1090], "get_default_bbox_extra_artist": [1134, 1320], "get_default_digit": 1690, "get_delta": [72, 75, 76, 80, 81, 84, 85], "get_engin": [372, 1699, 1724], "get_exampl": [1118, 1123], "get_facecolor": [1134, 1321, 1322], "get_fc": [1134, 1322], "get_fig": 1096, "get_figur": [1009, 1011, 1016, 1058, 1062, 1063, 1091, 1134, 1323, 1718, 1719, 1720, 1723, 1724, 1728, 1729, 1731, 1732, 1733], "get_file_path": [375, 1097, 1103, 1719, 1720, 1723], "get_forward_navigation_ev": [1134, 1324], "get_fpath": [1009, 1018, 1038, 1045, 1047, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093], "get_frame_on": [1134, 1325], "get_from_chunk_stor": [1, 17, 27, 157, 170], "get_gid": [1134, 1326], "get_gridlin": [1484, 1498], "get_gridspec": [1134, 1327], "get_imag": [1134, 1328], "get_in_layout": [1134, 1329], "get_item": [111, 187, 222, 260, 314, 1105, 1109, 1111, 1117], "get_label": [1134, 1330], "get_layout_data": [1009, 1012], "get_layout_dict": [1009, 1013], "get_legend": [1134, 1331], "get_legend_handles_label": [1134, 1332], "get_lin": [1134, 1333], "get_matrix": [1143, 1158, 1178, 1185, 1199], "get_mean_data_xi": [1038, 1042, 1077, 1079], "get_mean_data_xz": [1038, 1043, 1077, 1080], "get_mean_data_yz": [1038, 1044, 1077, 1081], "get_mean_fig_xi": [1038, 1042, 1733], "get_mean_fig_xz": [1038, 1043], "get_mean_fig_yz": [1038, 1044], "get_model": [1, 7, 17, 22, 27, 38], "get_model_data": [1, 17, 27, 157, 171], "get_models_data": [1, 17, 27, 39, 157, 172], "get_models_idata": [1, 17, 27, 157, 173], "get_mouseov": [1134, 1334], "get_navig": [1134, 1335], "get_navigate_mod": [1134, 1336], "get_offset": [1220, 1226, 1397], "get_output_path": [117, 1697], "get_path": [118, 1697], "get_path_effect": [1134, 1337], "get_pick": [1134, 1338, 1428, 1429], "get_plot": 1725, "get_point_figur": [1064, 1066, 1727], "get_posit": [1134, 1252, 1339], "get_raster": [1134, 1341], "get_rasterization_zord": [1134, 1340], "get_render": 1356, "get_rlabel_posit": [1134, 1342], "get_rmax": [1134, 1343], "get_rmin": [1134, 1344], "get_rorigin": [1134, 1345], "get_rotor_point": [296, 301, 593, 596, 599, 606], "get_rsign": [1134, 1346], "get_scale_nam": [1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "get_shared_x_ax": [1134, 1347], "get_shared_y_ax": [1134, 1348], "get_sketch_param": [1134, 1349], "get_slic": [187, 191, 222, 260, 314], "get_snap": [1134, 1350], "get_states_data_xi": [1038, 1039, 1077, 1082], "get_states_data_xz": [1038, 1040, 1077, 1083], "get_states_data_yz": [1038, 1041, 1077, 1084], "get_streamline_data": [784, 789], "get_subplotspec": [1134, 1351], "get_theta_direct": [1134, 1352], "get_theta_offset": [1134, 1353], "get_thetamax": [1134, 1354], "get_thetamin": [1134, 1355], "get_tick_param": 1537, "get_ticklabel": [1484, 1498], "get_tightbbox": [1134, 1356, 1362], "get_titl": [1134, 1357], "get_transform": [1134, 1241, 1358], "get_transformed_clip_path_and_affin": [1134, 1359], "get_url": [1134, 1360], "get_vis": [1134, 1287, 1361], "get_wake_coo": [343, 348, 758, 762, 764, 768, 771, 775, 776, 781, 784, 790, 791, 797, 801, 806], "get_wake_modelling_data": [343, 349, 758, 764, 771, 776, 782, 784, 791, 801], "get_wake_point": [276, 280, 557, 562, 563, 564, 566, 570, 572, 578, 580], "get_window": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "get_window_ext": [1134, 1356, 1362], "get_xaxi": [1134, 1363], "get_xaxis_text1_transform": [1134, 1364], "get_xaxis_text2_transform": [1134, 1365], "get_xaxis_transform": [1134, 1366], "get_xbound": [1134, 1367, 1370, 1407, 1506, 1508], "get_xgridlin": [1134, 1368], "get_xlabel": [1134, 1369], "get_xlim": [1134, 1367, 1370, 1407, 1506, 1508], "get_xmajorticklabel": [1134, 1371], "get_xmargin": [1134, 1372], "get_xminorticklabel": [1134, 1373], "get_xscal": [1134, 1374], "get_xtick": [1134, 1377], "get_xticklabel": [1134, 1375], "get_xticklin": [1134, 1376], "get_yaxi": [1134, 1378], "get_yaxis_text1_transform": [1134, 1379], "get_yaxis_text2_transform": [1134, 1380], "get_yaxis_transform": [1134, 1381], "get_ybound": [1134, 1382, 1385, 1408, 1513, 1515], "get_ygridlin": [1134, 1383], "get_ylabel": [1134, 1384], "get_ylim": [1134, 1382, 1385, 1408, 1513, 1515], "get_ymajorticklabel": [1134, 1386], "get_ymargin": [1134, 1387], "get_yminorticklabel": [1134, 1388], "get_yscal": [1134, 1389], "get_ytick": [1134, 1392], "get_yticklabel": [1134, 1390], "get_yticklin": [1134, 1391], "get_zord": [1134, 1393], "getattr": 1576, "getter": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 266, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "gib": 1724, "gid": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1470, 1524, 1533, 1535], "gigawatt": [123, 1698], "git": [1576, 1710, 1713, 1715, 1721, 1723, 1729, 1731, 1733, 1737], "github": [0, 1574, 1710, 1712, 1713, 1715, 1737], "give": [0, 764, 1250, 1266, 1269, 1277, 1285, 1291, 1307, 1398, 1415, 1427, 1431, 1434, 1435, 1436, 1523, 1539, 1540, 1717], "given": [0, 1, 5, 17, 27, 32, 323, 324, 343, 347, 454, 468, 530, 533, 535, 613, 641, 668, 714, 722, 758, 759, 764, 767, 771, 774, 776, 780, 784, 788, 791, 796, 801, 805, 863, 882, 1018, 1020, 1025, 1032, 1037, 1039, 1040, 1041, 1051, 1097, 1103, 1118, 1123, 1134, 1143, 1153, 1154, 1169, 1170, 1172, 1177, 1178, 1193, 1194, 1199, 1208, 1218, 1230, 1240, 1250, 1251, 1261, 1265, 1266, 1267, 1269, 1270, 1275, 1277, 1285, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1318, 1397, 1398, 1399, 1400, 1402, 1403, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1464, 1480, 1482, 1512, 1519, 1523, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1539, 1540, 1541, 1542, 1546, 1550, 1551, 1552, 1555, 1562, 1565, 1566, 1570, 1624, 1703, 1704, 1705, 1706, 1707, 1716, 1720, 1725, 1728], "global": [343, 372, 374, 1576, 1699, 1716, 1719, 1724], "gmodel": 1718, "go": [1431, 1731], "goal": 1729, "goal_data": 202, "good": 1724, "gouraud": [1426, 1541], "gradient": 1435, "grai": 1402, "grain": 1533, "grant": 1713, "graph": 1402, "graphic": [1134, 1426, 1482, 1483], "grayscal": 1402, "greater": [1253, 1269, 1370, 1385, 1416, 1424, 1426, 1442, 1447, 1508, 1509, 1515, 1516, 1627], "green": [1263, 1291, 1431, 1480, 1530], "grei": 1493, "gribben": [829, 1717], "grid": [0, 412, 416, 485, 540, 564, 566, 599, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1260, 1261, 1266, 1366, 1368, 1381, 1383, 1394, 1424, 1425, 1426, 1435, 1458, 1493, 1532, 1539, 1540, 1541, 1542, 1703, 1704, 1714, 1716, 1718, 1721, 1722, 1723, 1725, 1727, 1733], "grid100": 1725, "grid16": [1721, 1725], "grid25": [1710, 1731], "grid36": 1718, "grid4": 1725, "grid400": 1725, "grid9": [1722, 1725], "grid9_raw": 1722, "grid_alpha": 1537, "grid_color": 1537, "grid_data": [1079, 1080, 1081, 1082, 1083, 1084], "grid_linestyl": 1537, "grid_linewidth": 1537, "gridlin": [1134, 1312, 1366, 1381, 1460, 1484, 1498, 1537], "gridrotor": [565, 566, 599, 600, 601, 602, 603, 604, 605, 1704, 1722], "gridsiz": [1134, 1397], "gridspec": [1134, 1327], "gridspec_kw": [1720, 1731], "grotor": 566, "ground": [0, 1, 3, 8, 17, 27, 253, 323, 324, 530, 550, 552, 553, 1660, 1704, 1708, 1713, 1718], "ground_mirror": [1716, 1718, 1722], "ground_model": [1, 3, 8, 17, 27, 530, 550, 551, 552, 553, 554, 555, 556, 1716, 1718, 1722], "groundmirror": [0, 550, 551, 1704, 1722], "groundmodel": [0, 1, 8, 253, 254, 255, 256, 257, 258, 259, 530, 552, 553, 1704], "group": [1134, 1289, 1292, 1293, 1326, 1431, 1470, 1537, 1541], "grouper": [1134, 1347, 1348], "growth": [0, 351, 862, 863, 869, 870, 876, 911, 916, 922, 1627, 1661, 1699, 1708, 1716, 1722, 1733], "gt": [1718, 1719, 1722, 1723, 1724, 1729, 1730], "guarante": [1152, 1484, 1498, 1511, 1518], "guid": [1251, 1406, 1713], "guidelin": [1435, 1715], "gw": [123, 131, 333, 1698, 1713], "gwh": [1032, 1654, 1687, 1708, 1723, 1732, 1733], "gz": [0, 1127, 1128, 1130, 1131, 1710, 1716, 1720, 1723, 1729, 1731, 1732, 1733], "h": [0, 1, 2, 17, 27, 323, 324, 332, 333, 377, 378, 417, 428, 486, 520, 712, 1012, 1332, 1399, 1431, 1660, 1708, 1710, 1714, 1716, 1717, 1718, 1719, 1721, 1722, 1723, 1724, 1730], "h120": 1716, "h2digit": 1713, "h5": [1127, 1128, 1130, 1131], "h90": [1710, 1728, 1730], "h_coord": [416, 417, 427, 428, 1721, 1723], "h_ref": [1564, 1569, 1572, 1707], "ha": [0, 39, 172, 173, 182, 198, 203, 207, 222, 231, 268, 269, 308, 373, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 421, 429, 440, 471, 490, 504, 514, 536, 584, 621, 646, 697, 707, 718, 727, 1111, 1112, 1134, 1143, 1159, 1178, 1186, 1199, 1202, 1241, 1256, 1261, 1265, 1266, 1267, 1269, 1271, 1287, 1289, 1294, 1295, 1298, 1397, 1398, 1399, 1402, 1404, 1409, 1416, 1424, 1425, 1426, 1428, 1435, 1443, 1444, 1483, 1525, 1528, 1530, 1535, 1550, 1551, 1637, 1638, 1693, 1695, 1699, 1710, 1713, 1716, 1717, 1720, 1721, 1723, 1724, 1726, 1728, 1729, 1731, 1732, 1735], "had": 0, "half": [0, 829, 1060, 1062, 1253, 1258, 1262, 1266, 1294, 1295, 1398, 1435, 1442, 1530, 1532, 1550, 1551, 1608, 1706, 1709, 1717, 1718], "halfplan": [1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1706], "halfwai": [1424, 1426], "halign": [1134, 1364, 1365, 1379, 1380], "ham": [1250, 1277, 1285, 1402, 1415, 1427, 1434, 1523], "hammer": 1406, "han": 1402, "hand": [0, 1037, 1152, 1716], "handi": 1045, "handl": [0, 225, 1134, 1199, 1252, 1302, 1305, 1313, 1332, 1426, 1448, 1451, 1461, 1559, 1699, 1706, 1725], "handlelenght": 1411, "handler": [351, 862, 869, 876, 911, 916, 922, 1699], "handletextsep": 1411, "happen": 1402, "hard": 0, "has_data": [888, 907, 1134, 1395], "has_engin": [373, 1699], "has_invers": [1143, 1159, 1178, 1186, 1199, 1202], "hasattr": 1576, "hash": 1576, "hat": [572, 822, 1704, 1709, 1716, 1725, 1734], "hatch": [1134, 1253, 1259, 1263, 1266, 1267, 1270, 1294, 1295, 1397, 1404, 1424, 1426, 1430, 1435, 1525, 1540], "hatch_style_refer": [1430, 1525], "have": [0, 4, 5, 19, 31, 32, 161, 162, 300, 595, 613, 614, 1053, 1134, 1143, 1155, 1178, 1199, 1240, 1242, 1266, 1269, 1270, 1271, 1283, 1284, 1289, 1292, 1356, 1395, 1397, 1400, 1402, 1424, 1425, 1426, 1431, 1435, 1441, 1442, 1443, 1444, 1452, 1479, 1480, 1499, 1512, 1519, 1523, 1525, 1532, 1533, 1539, 1540, 1552, 1555, 1635, 1704, 1710, 1715, 1716, 1718, 1720, 1723, 1724, 1726, 1728, 1729, 1730, 1733, 1735], "have_unit": [1134, 1396], "hawk": [829, 1717], "hbar": 1397, "head": [1251, 1253, 1435, 1436, 1529], "head_length": 1253, "head_starts_at_zero": 1253, "head_width": 1253, "headaxi": 1435, "headaxislength": 1435, "header": [712, 1533], "headlength": [1251, 1435], "headwidth": [1251, 1435], "heat": [0, 1085, 1087, 1705], "heavi": 1535, "height": [0, 155, 323, 324, 332, 333, 339, 340, 408, 416, 417, 427, 428, 430, 432, 434, 447, 449, 451, 453, 454, 467, 485, 553, 554, 606, 607, 731, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 752, 754, 756, 1134, 1252, 1259, 1263, 1266, 1267, 1292, 1313, 1404, 1406, 1435, 1447, 1453, 1461, 1479, 1526, 1533, 1539, 1540, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1660, 1679, 1703, 1704, 1707, 1708, 1712, 1713, 1714, 1716, 1718, 1719, 1721, 1722, 1727, 1729, 1730], "height0": [1565, 1707], "height_ratio": [1720, 1731], "heightpandasindexpandasindex": 1723, "helg": 540, "help": [1127, 1208, 1211, 1230, 1232, 1576, 1706], "helper": [0, 1045, 1096, 1127, 1132, 1133, 1220, 1222, 1432, 1692, 1706], "hemispher": 1266, "henc": [1377, 1392, 1539, 1540, 1717, 1720, 1726, 1728], "her": [1134, 1411], "here": [0, 181, 183, 231, 269, 272, 274, 308, 421, 423, 425, 429, 440, 443, 445, 461, 464, 471, 473, 475, 490, 492, 494, 504, 507, 510, 514, 515, 516, 584, 621, 646, 649, 650, 697, 707, 718, 727, 799, 800, 801, 863, 882, 1267, 1414, 1416, 1431, 1435, 1445, 1446, 1510, 1517, 1530, 1702, 1703, 1710, 1713, 1716, 1717, 1718, 1719, 1720, 1723, 1724, 1726, 1728, 1730, 1732, 1733, 1734, 1735], "hermit": 1402, "hernandez": [862, 1709, 1716], "heterogen": [416, 485, 1703, 1712, 1713, 1714, 1716, 1723], "hex": [1431, 1576], "hexagon": [1134, 1397, 1398, 1399, 1435], "hexagon1": 1431, "hexagon2": 1431, "hexbin": [1134, 1397, 1398, 1399], "hi": [449, 451, 453, 456, 466], "hide": [1134, 1260, 1269, 1458, 1459], "high": [540, 1507, 1514, 1550, 1551, 1704, 1716, 1728], "higher": [0, 623, 1406], "highest": [1269, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "hint": [1118, 1119, 1559, 1560, 1624, 1706], "hist": [1134, 1289, 1398, 1399], "hist2d": [1134, 1397, 1398, 1399], "histogram": [0, 1134, 1289, 1397, 1398, 1399, 1531], "histogram_bin_edg": 1398, "histor": [1251, 1252, 1432], "histori": 1713, "histtyp": 1398, "hit": [1478, 1734], "hline": [1134, 1258, 1400, 1431, 1552], "hold": [1162, 1188, 1204], "home": [1576, 1721, 1723, 1729, 1731, 1733], "homogen": [0, 449, 451, 453, 454, 466, 1703, 1712, 1714, 1716, 1729], "honor": [1506, 1513], "horizon": 1713, "horizont": [0, 416, 453, 454, 485, 553, 1038, 1039, 1042, 1043, 1044, 1077, 1079, 1082, 1134, 1171, 1240, 1258, 1259, 1261, 1263, 1267, 1269, 1270, 1271, 1289, 1291, 1292, 1294, 1364, 1365, 1379, 1380, 1397, 1398, 1400, 1402, 1431, 1435, 1436, 1526, 1529, 1533, 1535, 1550, 1551, 1552, 1555, 1703, 1704, 1705, 1712, 1714, 1716, 1719, 1721, 1723, 1729, 1730], "horizontal_barchart_distribut": 1267, "horizontalalign": [1265, 1502, 1507, 1511, 1514, 1518, 1535], "hotfix": 0, "hour": 1032, "hous": 0, "how": [0, 169, 170, 1134, 1252, 1266, 1269, 1302, 1324, 1435, 1448, 1453, 1468, 1713, 1714, 1718, 1723, 1724, 1725, 1726, 1732, 1733], "howev": [1261, 1266, 1292, 1318, 1398, 1402, 1425, 1426, 1432, 1530, 1531, 1539, 1540, 1541, 1710, 1714, 1717, 1724, 1734], "hpc": [0, 1724], "html": [0, 1720, 1729, 1731], "http": [0, 540, 801, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 916, 922, 986, 1266, 1269, 1271, 1525, 1574, 1634, 1710, 1711, 1713, 1715, 1724, 1737], "hub": [0, 323, 324, 332, 333, 408, 1704, 1716, 1723, 1729, 1730], "hubh_data": 1722, "huge": 1215, "hurrican": 1292, "hyphen": [1220, 1222], "hz": [1277, 1285, 1434, 1523], "i": [0, 1, 17, 27, 33, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 104, 157, 166, 185, 195, 196, 213, 216, 225, 227, 231, 232, 233, 237, 239, 243, 244, 248, 252, 253, 262, 266, 269, 276, 277, 283, 284, 288, 289, 293, 296, 299, 300, 306, 308, 323, 327, 329, 330, 332, 335, 336, 337, 339, 343, 346, 349, 351, 358, 364, 372, 408, 410, 416, 418, 421, 427, 429, 430, 432, 436, 440, 447, 449, 451, 453, 457, 466, 468, 470, 471, 477, 479, 485, 487, 490, 496, 499, 504, 512, 514, 517, 519, 521, 537, 540, 543, 544, 547, 550, 552, 553, 557, 560, 562, 564, 566, 572, 573, 574, 578, 581, 582, 583, 584, 586, 587, 589, 591, 593, 594, 595, 599, 600, 602, 606, 609, 613, 614, 616, 618, 620, 621, 623, 626, 630, 632, 636, 638, 641, 644, 646, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 677, 679, 681, 682, 683, 686, 688, 689, 690, 692, 693, 695, 697, 698, 699, 700, 702, 703, 705, 707, 708, 709, 710, 712, 714, 716, 718, 719, 720, 722, 723, 725, 727, 728, 729, 731, 735, 739, 743, 747, 751, 754, 758, 759, 761, 764, 766, 771, 773, 776, 779, 782, 784, 787, 791, 794, 801, 804, 809, 810, 811, 812, 814, 819, 820, 821, 822, 824, 826, 829, 837, 845, 853, 854, 862, 865, 869, 870, 872, 876, 879, 882, 885, 888, 911, 914, 916, 919, 922, 925, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1025, 1045, 1055, 1087, 1090, 1095, 1121, 1134, 1135, 1136, 1138, 1140, 1142, 1143, 1147, 1149, 1150, 1152, 1153, 1154, 1155, 1165, 1167, 1170, 1171, 1173, 1175, 1176, 1177, 1178, 1181, 1190, 1194, 1195, 1197, 1198, 1199, 1200, 1206, 1207, 1208, 1214, 1215, 1220, 1222, 1229, 1230, 1233, 1237, 1240, 1241, 1242, 1243, 1250, 1251, 1252, 1253, 1255, 1256, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1277, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1306, 1307, 1308, 1309, 1310, 1313, 1318, 1325, 1329, 1331, 1332, 1334, 1341, 1349, 1356, 1363, 1364, 1365, 1366, 1378, 1379, 1380, 1381, 1394, 1397, 1398, 1399, 1400, 1402, 1403, 1404, 1405, 1406, 1409, 1411, 1413, 1414, 1415, 1416, 1417, 1419, 1420, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1434, 1435, 1436, 1439, 1442, 1443, 1444, 1445, 1446, 1448, 1451, 1452, 1453, 1454, 1455, 1456, 1458, 1459, 1461, 1462, 1464, 1469, 1471, 1474, 1476, 1478, 1479, 1480, 1482, 1483, 1484, 1492, 1493, 1497, 1498, 1499, 1502, 1506, 1507, 1508, 1509, 1511, 1512, 1513, 1514, 1515, 1516, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1548, 1550, 1551, 1552, 1554, 1555, 1557, 1576, 1582, 1583, 1592, 1593, 1599, 1600, 1606, 1607, 1614, 1615, 1622, 1623, 1696, 1704, 1708, 1709, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "i0": [44, 169, 170], "id": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 270, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 408, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1134, 1153, 1242, 1326, 1440, 1470, 1576, 1713], "idata": [0, 1, 17, 27, 39, 157, 163, 168, 172, 173, 174, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "idata_mem": [1, 17, 27, 157, 174], "idea": [0, 557, 986, 1726], "ident": [1134, 1143, 1152, 1178, 1199, 1289, 1292, 1431, 1442, 1524, 1714, 1721, 1734], "identifi": [0, 119, 120, 121, 122, 124, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 154, 266, 349, 782, 1153, 1154, 1550, 1551, 1692, 1698, 1731], "idict": [524, 525, 526, 1703], "ie": 1704, "iea15": 1719, "iea15mw": [1719, 1722], "iec": [869, 1709], "iec_typ": [869, 870, 1722], "iecti2005": 0, "iecti2005_": 1722, "iecti2005_linear": 1722, "iecti2005k_": 1722, "iecti2005k_linear": 1722, "iecti2005k_linear_ambka0": 1722, "iecti2005k_linear_k0": 1722, "iecti2005k_linear_ka0": 1722, "iecti2019": 0, "iecti2019_": [1716, 1722], "iecti2019_linear": 1722, "iecti2019_max": 1734, "iecti2019_quart": 1718, "iecti2019k_": 1722, "iecti2019k_linear": 1722, "iecti2019k_linear_ambka0": 1722, "iecti2019k_linear_k0": 1722, "iecti2019k_linear_ka0": 1722, "iectiwak": [869, 870, 871, 872, 873, 874, 875, 1709, 1722], "ifil": [1631, 1706], "ignor": [712, 1242, 1397, 1398, 1399, 1402, 1424, 1425, 1426, 1430, 1442, 1458, 1482, 1483, 1529, 1530, 1539, 1540, 1546, 1716, 1724], "illustr": 1397, "im": [1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1523], "imag": [0, 1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1246, 1250, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1399, 1401, 1402, 1404, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1447, 1449, 1460, 1493, 1523, 1524, 1533, 1535, 1539, 1540, 1548, 1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618, 1724, 1729], "image_antialias": 1402, "images_contours_and_field": [1402, 1424, 1426], "imagin": 1718, "img": [1069, 1074], "immedi": 1215, "immin": [1484, 1498, 1511, 1518], "immut": [1109, 1110, 1117, 1134, 1135, 1347, 1348], "impact": 540, "implement": [0, 540, 854, 869, 1150, 1237, 1298, 1318, 1426, 1448, 1709, 1714, 1716, 1717], "impli": [1294, 1295, 1720], "implicit": [1721, 1734], "import": [1152, 1624, 1625, 1706, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "import_modul": [1624, 1706], "importerror": 1576, "importwarn": 1576, "impos": 1448, "improv": 0, "imput": 1713, "imshow": [1134, 1252, 1402, 1417, 1424, 1426, 1523, 1524, 1532, 1539, 1540], "imshow_ext": 1402, "in0": [613, 614], "in1": [613, 614], "in_ax": [1134, 1403], "in_kwarg": [1631, 1706], "in_layout": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1471, 1524, 1533, 1535], "in_var": [613, 614], "inaccuraci": 1152, "inam": [520, 1631], "inch": [1435, 1436], "includ": [0, 213, 1093, 1099, 1134, 1172, 1241, 1266, 1285, 1296, 1329, 1356, 1362, 1398, 1402, 1425, 1426, 1434, 1471, 1484, 1498, 1507, 1511, 1514, 1518, 1538, 1540, 1546, 1548, 1705, 1715, 1716, 1719, 1720, 1723, 1725, 1733, 1734], "include_self": [1134, 1296], "inclus": [0, 1450], "incom": 159, "incompat": [0, 1406], "incomplet": 0, "incorrect": [1277, 1285, 1434, 1523], "increas": [1134, 1250, 1277, 1285, 1289, 1352, 1367, 1382, 1415, 1427, 1434, 1435, 1442, 1495, 1523, 1530, 1532, 1539, 1540, 1554, 1557, 1709, 1716, 1724], "increment": 1266, "ind": [169, 170], "indentationerror": 1576, "independ": [485, 581, 582, 1224, 1267, 1292, 1398, 1448, 1461, 1543, 1544, 1703, 1714, 1716, 1731], "index": [0, 27, 33, 40, 44, 55, 101, 104, 105, 136, 162, 181, 183, 188, 194, 212, 213, 217, 227, 244, 249, 253, 254, 255, 256, 266, 272, 274, 276, 278, 279, 298, 300, 306, 307, 311, 321, 323, 324, 326, 345, 347, 348, 349, 360, 365, 385, 390, 395, 397, 403, 407, 408, 416, 420, 423, 425, 427, 430, 432, 434, 439, 442, 443, 445, 447, 449, 451, 453, 458, 461, 464, 466, 468, 473, 475, 477, 485, 489, 492, 494, 496, 498, 502, 506, 507, 510, 512, 515, 516, 517, 520, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 595, 637, 649, 650, 762, 767, 768, 774, 775, 780, 781, 782, 788, 790, 796, 797, 799, 800, 805, 806, 810, 811, 814, 815, 820, 821, 824, 825, 826, 832, 840, 848, 857, 865, 866, 872, 873, 879, 885, 904, 907, 914, 915, 919, 925, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1009, 1010, 1011, 1039, 1040, 1041, 1042, 1043, 1044, 1053, 1079, 1080, 1081, 1096, 1135, 1142, 1240, 1250, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1406, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1551, 1552, 1555, 1634, 1698, 1718, 1719, 1720, 1723, 1724, 1725, 1726, 1728, 1729, 1732, 1734], "index_col": [427, 430, 432, 433, 447, 448, 496, 497, 512, 517, 518, 1720], "indexerror": 1576, "indic": [0, 1, 5, 17, 27, 32, 105, 157, 169, 178, 217, 307, 412, 414, 415, 420, 439, 458, 489, 502, 1011, 1039, 1040, 1041, 1056, 1057, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1220, 1221, 1269, 1291, 1292, 1404, 1405, 1417, 1443, 1444, 1478, 1560, 1576, 1706, 1720, 1731, 1733], "indicate_inset": [1134, 1404, 1405], "indicate_inset_zoom": [1134, 1405], "indistinguish": 1442, "individu": [195, 323, 332, 714, 722, 829, 837, 845, 853, 1266, 1267, 1269, 1271, 1279, 1398, 1402, 1416, 1425, 1426, 1458, 1459, 1502, 1511, 1518, 1535, 1559, 1699, 1702, 1704, 1716, 1718, 1724, 1729], "induct": [0, 185, 186, 327, 530, 537, 539, 540, 542, 623, 624, 802, 822, 823, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 870, 876, 877, 882, 883, 888, 903, 911, 912, 916, 917, 922, 923, 1699, 1704, 1712, 1716, 1718, 1722, 1724], "induction_model": [530, 1717], "induction_rhb": 0, "indx": 40, "inf": [1214, 1233, 1289, 1442, 1539, 1540], "infer": [410, 411, 1541, 1730], "inferno": 1710, "infinit": [1134, 1261, 1289, 1717], "inflow": [0, 449, 451, 454, 466, 1703, 1713, 1716, 1720, 1723, 1731, 1732], "influenc": [1718, 1726], "info": [1077, 1078, 1724], "inform": [1134, 1215, 1266, 1318, 1334, 1420, 1442, 1460, 1474, 1576, 1714, 1720, 1730, 1736], "ing": [1277, 1285, 1434, 1523], "inherit": [1543, 1544], "inhomogen": [0, 449, 451, 466, 1703, 1714, 1716, 1719, 1720], "init": [547, 1099, 1100], "init_par": [225, 235, 543], "init_st": [1, 9, 17, 27], "initfarmdata": [49, 50, 51, 52, 1694, 1724], "initfarmdata_instance1": 1724, "initi": [0, 1, 9, 10, 17, 23, 27, 29, 46, 49, 53, 56, 59, 63, 67, 70, 87, 92, 96, 99, 101, 106, 157, 175, 185, 188, 195, 198, 202, 205, 206, 207, 211, 213, 225, 230, 235, 237, 240, 244, 252, 253, 258, 262, 267, 268, 276, 282, 283, 285, 289, 296, 306, 317, 318, 327, 329, 332, 339, 343, 351, 358, 364, 379, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 417, 427, 430, 432, 447, 449, 451, 453, 459, 466, 468, 477, 480, 485, 486, 496, 503, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 576, 578, 581, 586, 589, 593, 599, 603, 606, 610, 613, 618, 623, 627, 630, 633, 636, 639, 641, 645, 651, 654, 656, 661, 664, 667, 672, 674, 676, 680, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 763, 764, 769, 771, 776, 783, 784, 791, 798, 801, 807, 809, 812, 817, 819, 822, 827, 829, 834, 837, 842, 845, 850, 853, 854, 859, 860, 862, 869, 876, 880, 882, 886, 888, 908, 911, 916, 920, 922, 927, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1067, 1070, 1072, 1075, 1208, 1211, 1230, 1232, 1256, 1260, 1436, 1576, 1627, 1716, 1718, 1719, 1720, 1724, 1725, 1728, 1731, 1733], "ink": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1292, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "inlcud": 1731, "inlin": [1717, 1718, 1720, 1721, 1723, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "inner": [1134, 1344, 1410, 1488, 1533], "inout": 1537, "input": [0, 1, 17, 27, 39, 157, 172, 196, 212, 243, 288, 339, 341, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 613, 614, 618, 619, 677, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 756, 757, 955, 961, 967, 973, 979, 985, 991, 997, 1003, 1143, 1160, 1169, 1170, 1173, 1178, 1187, 1193, 1194, 1195, 1199, 1203, 1206, 1240, 1250, 1269, 1289, 1397, 1398, 1399, 1402, 1415, 1416, 1425, 1427, 1442, 1443, 1444, 1451, 1525, 1551, 1555, 1576, 1631, 1692, 1704, 1708, 1710, 1713, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "input_dim": [1143, 1160, 1169, 1170, 1173, 1177, 1178, 1187, 1193, 1194, 1195, 1199, 1203, 1206], "input_farm_var": [950, 955, 956, 961, 962, 967, 968, 973, 974, 979, 980, 985, 986, 991, 992, 997, 998, 1003], "input_var": [339, 341, 618, 619, 676, 677, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 753, 754, 757, 955, 961, 967, 973, 979, 985, 991, 997, 1003], "insensit": 1291, "insert": [244, 249, 323, 326, 1174, 1196, 1637, 1638], "insert_model": [323, 326], "inset": [1134, 1404, 1405, 1406], "inset_ax": [1134, 1243, 1404, 1405, 1406], "insid": [1134, 1280, 1411, 1430, 1537, 1577, 1583, 1584, 1586, 1593, 1594, 1600, 1601, 1607, 1608, 1609, 1615, 1616, 1623, 1721], "inside_": [1578, 1588, 1596, 1603, 1610, 1618], "inside_slategrai": [1578, 1588, 1618], "inspir": 1529, "instal": [0, 1624, 1710, 1713, 1724, 1735, 1737], "instanc": [0, 1122, 1134, 1135, 1138, 1143, 1155, 1178, 1190, 1199, 1218, 1256, 1257, 1264, 1265, 1268, 1269, 1271, 1275, 1281, 1282, 1291, 1296, 1323, 1331, 1358, 1363, 1378, 1397, 1399, 1402, 1406, 1424, 1425, 1426, 1430, 1432, 1438, 1442, 1462, 1467, 1484, 1498, 1502, 1511, 1518, 1524, 1525, 1535, 1539, 1540, 1543, 1544, 1550, 1551, 1716, 1721, 1731], "instanti": [1397, 1399, 1402, 1406, 1424, 1425, 1426, 1442, 1539, 1540], "instead": [0, 4, 5, 194, 408, 416, 417, 432, 434, 485, 486, 496, 498, 862, 863, 950, 951, 962, 963, 974, 975, 992, 993, 1056, 1057, 1060, 1062, 1134, 1215, 1253, 1266, 1269, 1271, 1277, 1285, 1363, 1378, 1398, 1424, 1431, 1432, 1434, 1435, 1442, 1484, 1498, 1509, 1511, 1516, 1518, 1523, 1529, 1530, 1539, 1540, 1541, 1550, 1706, 1710, 1714, 1715, 1716, 1724, 1731, 1734], "int": [1, 17, 18, 24, 33, 40, 43, 44, 55, 56, 70, 74, 79, 83, 104, 106, 108, 111, 114, 157, 158, 169, 170, 178, 179, 181, 183, 188, 192, 193, 194, 198, 199, 201, 202, 219, 227, 229, 230, 231, 249, 254, 255, 256, 265, 266, 267, 269, 270, 272, 274, 278, 279, 298, 300, 302, 308, 311, 312, 319, 320, 321, 323, 324, 326, 345, 347, 348, 349, 360, 365, 369, 370, 408, 410, 411, 412, 413, 414, 415, 417, 421, 423, 424, 425, 429, 432, 434, 438, 440, 442, 443, 444, 445, 459, 461, 462, 464, 471, 473, 474, 475, 480, 482, 486, 490, 492, 493, 494, 496, 498, 501, 503, 504, 506, 507, 508, 510, 514, 515, 516, 519, 520, 521, 524, 525, 526, 527, 528, 529, 534, 555, 556, 557, 558, 561, 569, 575, 576, 579, 584, 595, 597, 599, 600, 603, 604, 606, 607, 610, 611, 621, 627, 633, 639, 645, 646, 649, 650, 654, 680, 681, 696, 697, 698, 706, 707, 708, 717, 718, 726, 727, 748, 758, 759, 762, 763, 767, 768, 769, 774, 775, 780, 781, 782, 783, 788, 790, 795, 796, 797, 798, 799, 800, 805, 806, 807, 810, 811, 814, 815, 817, 820, 821, 824, 825, 826, 827, 832, 834, 840, 842, 848, 850, 857, 859, 865, 866, 872, 873, 879, 880, 885, 886, 904, 908, 914, 915, 919, 920, 925, 926, 927, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1007, 1009, 1010, 1011, 1016, 1020, 1021, 1032, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1053, 1056, 1057, 1060, 1062, 1063, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1108, 1136, 1190, 1240, 1242, 1250, 1258, 1261, 1262, 1269, 1277, 1285, 1289, 1291, 1298, 1394, 1397, 1398, 1399, 1402, 1411, 1415, 1425, 1426, 1427, 1431, 1432, 1434, 1523, 1524, 1538, 1539, 1540, 1551, 1555, 1576, 1626, 1627, 1629, 1631, 1636, 1637, 1638, 1639, 1640, 1690, 1719], "int64": [1718, 1724, 1729, 1730], "int640": [1718, 1724], "int640arrai": 1718, "int6444": 1724, "int6476": 1724, "integ": [105, 114, 124, 217, 307, 420, 439, 458, 489, 502, 1135, 1141, 1142, 1143, 1160, 1166, 1178, 1187, 1191, 1199, 1203, 1205, 1264, 1266, 1268, 1281, 1282, 1397, 1398, 1402, 1417, 1435, 1493, 1698], "integr": [0, 343, 345, 599, 600, 606, 607, 758, 764, 771, 776, 784, 791, 801, 922, 923, 1277, 1285, 1397, 1398, 1434, 1523, 1532, 1709, 1716, 1722], "integration_direct": 1532, "intend": [1018, 1033, 1134, 1215, 1286, 1290, 1298, 1318, 1452, 1528, 1713, 1716, 1724, 1727], "intens": [0, 306, 722, 1649, 1678, 1704, 1708, 1709, 1716, 1721, 1732, 1733, 1734], "intent": [1512, 1519], "inter": 1269, "interact": [1442, 1576], "interest": [5, 27, 28, 32, 53, 1095, 1356, 1694, 1704, 1717, 1720, 1730, 1731, 1736], "interfac": [0, 1143, 1148, 1178, 1179, 1199, 1480, 1703], "interior": 0, "interleav": 1270, "intermedi": 1425, "intern": [0, 619, 677, 1134, 1252, 1397, 1423, 1425, 1426, 1435, 1527, 1539, 1540, 1713], "interp1d": [434, 619, 677], "interp_nan": [416, 417, 485, 486], "interp_par": [747, 748], "interpn": [416, 417, 453, 485, 486, 652, 714, 715, 722, 723], "interpn_arg": [619, 677], "interpn_par": [416, 417, 485, 486], "interpn_pars_ct": [715, 723], "interpn_pars_p": [715, 723], "interpol": [0, 345, 416, 417, 434, 453, 485, 486, 618, 619, 652, 672, 674, 676, 692, 702, 714, 715, 722, 723, 747, 748, 758, 759, 776, 777, 784, 785, 791, 792, 1134, 1294, 1295, 1402, 1417, 1426, 1493, 1704, 1713], "interpolation_method": 1402, "interpolation_stag": 1402, "interpret": [0, 1240, 1250, 1251, 1265, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1478, 1523, 1525, 1526, 1529, 1532, 1539, 1540, 1551, 1552, 1555, 1710, 1714], "interruptederror": 1576, "intersect": [1294, 1295, 1435, 1584, 1634, 1635, 1706], "interv": [1214, 1233, 1269, 1271, 1294, 1295, 1416, 1509, 1516, 1530, 1540, 1551, 1729], "intial": [96, 99, 1067, 1070, 1072, 1075], "intp_par": 453, "introduc": [0, 623, 1709], "intuit": 0, "invalid": [1143, 1144, 1161, 1167, 1168, 1178, 1199, 1414, 1416, 1445, 1446, 1480], "invalid_affin": [1143, 1145, 1178, 1199], "invalid_non_affin": [1143, 1146, 1178, 1199], "invalid_typ": [1135, 1138], "invers": [1134, 1143, 1152, 1159, 1162, 1178, 1186, 1188, 1199, 1202, 1204, 1435, 1443, 1444, 1506, 1513, 1554, 1557, 1577, 1579, 1584, 1586, 1589, 1594, 1601, 1608, 1611, 1616, 1619, 1667, 1708, 1734], "invert": [1096, 1134, 1143, 1152, 1162, 1178, 1188, 1199, 1204, 1291, 1370, 1385, 1407, 1408, 1435, 1577, 1579, 1584, 1586, 1589, 1594, 1601, 1608, 1611, 1616, 1619, 1706], "invert_axi": 1096, "invert_xaxi": [1134, 1367, 1370, 1407, 1506, 1508], "invert_yaxi": [1134, 1382, 1385, 1408, 1513, 1515], "invertedareageometri": [1579, 1589, 1611, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1706], "invertedpolartransform": [1134, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177], "investig": [1718, 1720, 1725], "invis": [1438, 1468, 1543, 1544], "invit": 1719, "invok": [0, 623, 764, 829, 837, 845, 853, 1140, 1704, 1713, 1715, 1718, 1732, 1733, 1734], "involv": [0, 1413, 1724], "inx": [613, 614], "io": 0, "ioerror": 1576, "iop": [916, 922], "iopscienc": [916, 922], "ipar": [345, 434, 652, 922, 923], "ipars_ct": [714, 722], "ipars_p": [714, 722], "ipynb": 0, "iqr": 1269, "irrespect": [0, 1426], "is_affin": [1143, 1163, 1178, 1189, 1199], "is_bbox": [1143, 1164, 1178, 1199], "is_kti": [351, 355], "is_separ": [1143, 1165, 1178, 1190, 1199], "is_transform_set": [1134, 1409], "isadirectoryerror": 1576, "isax": 1411, "isel": [1, 17, 27, 39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 162, 172, 181, 183, 185, 195, 198, 212, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 379, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 417, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 486, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "isinst": [1296, 1576], "isol": [1294, 1295], "issu": [0, 1431, 1483, 1713], "issubclass": [1135, 1140, 1576], "ital": 1535, "item": [111, 187, 222, 260, 314, 1105, 1109, 1110, 1111, 1117, 1718, 1725], "iter": [0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41, 43, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 157, 160, 202, 266, 349, 385, 390, 395, 397, 403, 407, 525, 672, 674, 676, 681, 692, 698, 702, 708, 712, 764, 782, 1067, 1070, 1071, 1072, 1075, 1076, 1431, 1480, 1539, 1576, 1693, 1696, 1705, 1716, 1717, 1718, 1720, 1729, 1731], "itr": 41, "its": [0, 513, 540, 1039, 1040, 1041, 1134, 1143, 1156, 1161, 1162, 1178, 1181, 1183, 1188, 1199, 1204, 1253, 1255, 1269, 1287, 1293, 1296, 1302, 1359, 1397, 1398, 1399, 1402, 1404, 1406, 1424, 1425, 1426, 1440, 1442, 1443, 1444, 1453, 1478, 1532, 1539, 1540, 1546, 1548, 1551, 1626, 1706, 1713, 1724, 1730, 1736], "itself": [1134, 1283, 1284, 1285, 1319, 1434, 1436], "ityp": [124, 1698], "iw": [0, 1713, 1719], "iwt7": [1719, 1722], "j": [862, 876, 916, 1269, 1424, 1426], "jensen": [911, 1709, 1716, 1722], "jensen_": [0, 1716, 1722], "jensen_linear": 1722, "jensen_linear_ambka0": 1722, "jensen_linear_k0": 1722, "jensen_linear_k004": 1725, "jensen_linear_k007": [1721, 1730], "jensen_linear_k0075": 0, "jensen_linear_ka0": 1722, "jensen_quadratic_k0075": [1716, 1722], "jensenwak": [0, 911, 912, 913, 914, 915, 1709, 1722], "jfm": [801, 882, 888], "job": [0, 1045], "john": [1277, 1285, 1434], "joinstyl": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "jona": [1576, 1711, 1721, 1723, 1729, 1731, 1733], "joss": 1711, "journal": 1713, "jshtml": [1720, 1729, 1731], "json": [411, 1013, 1703, 1714], "jump": 0, "jupyt": 1712, "just": [0, 101, 1260, 1289, 1318, 1404, 1414, 1417, 1431, 1445, 1446, 1480, 1530, 1541, 1696, 1726, 1735], "juul": 540, "k": [0, 351, 352, 353, 354, 667, 668, 862, 863, 869, 870, 876, 888, 904, 911, 916, 922, 1264, 1268, 1281, 1282, 1291, 1431, 1555, 1661, 1662, 1663, 1699, 1704, 1708, 1716, 1722, 1724, 1732, 1733], "k1": [540, 541], "k2": [540, 541], "k3": [540, 541], "k_var": [351, 353, 667, 668, 863, 1722], "ka": [0, 351, 353, 354, 355, 1716, 1722], "kaiser": 1402, "kappa": [125, 1562, 1564, 1566, 1569, 1570, 1572, 1698, 1707], "karman": [125, 1562, 1564, 1566, 1569, 1570, 1572, 1698], "kb": [0, 351, 353, 354, 667, 668, 1662, 1663, 1708, 1716, 1722], "kde": 1551, "keep": [1269, 1715], "keep_model": 0, "kei": [1, 3, 4, 5, 8, 11, 16, 27, 28, 47, 51, 55, 61, 65, 69, 81, 82, 89, 94, 103, 111, 131, 163, 174, 181, 183, 187, 188, 196, 202, 216, 222, 227, 239, 248, 254, 255, 256, 257, 258, 259, 260, 266, 272, 274, 278, 279, 282, 284, 293, 298, 314, 317, 318, 330, 349, 360, 361, 363, 418, 423, 425, 436, 443, 445, 457, 461, 464, 470, 473, 475, 477, 478, 479, 487, 492, 494, 496, 498, 499, 507, 510, 515, 516, 519, 520, 521, 527, 528, 530, 531, 547, 555, 556, 561, 569, 575, 579, 583, 587, 591, 595, 616, 620, 626, 630, 631, 632, 638, 644, 649, 650, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 782, 799, 800, 810, 811, 812, 813, 814, 815, 816, 821, 823, 824, 826, 832, 833, 835, 840, 841, 843, 848, 849, 851, 857, 858, 860, 865, 867, 872, 874, 885, 888, 906, 914, 928, 1034, 1035, 1036, 1050, 1056, 1057, 1097, 1104, 1105, 1106, 1109, 1110, 1111, 1112, 1113, 1117, 1123, 1127, 1131, 1134, 1135, 1137, 1251, 1269, 1271, 1286, 1435, 1436, 1480, 1550, 1551, 1629, 1698, 1722], "kelvin": [1648, 1677, 1708], "kendal": 1269, "kept": [0, 1177, 1289, 1402, 1410, 1524], "kernel": [1550, 1551], "keyboardinterrupt": 1576, "keyerror": [169, 170, 1103, 1576], "keyword": [18, 161, 162, 179, 1250, 1258, 1261, 1262, 1265, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1399, 1404, 1405, 1406, 1413, 1415, 1416, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1502, 1508, 1510, 1511, 1515, 1517, 1518, 1523, 1524, 1525, 1529, 1530, 1535, 1537, 1539, 1540, 1541, 1632], "kg": [1647, 1675, 1708], "kick": [599, 1704], "kilojoul": [0, 1710], "kilowatt": [156, 1698], "kind": [0, 530, 758, 1364, 1365, 1366, 1379, 1380, 1381, 1702, 1704, 1713, 1721, 1734], "kinet": [1716, 1723], "km": [343, 344, 759, 785, 791, 792, 802, 1720], "know": [1143, 1168, 1178, 1199, 1229, 1252, 1530, 1541, 1724], "known": [352, 1143, 1156, 1178, 1183, 1199], "kti": [0, 667, 668, 669, 670, 671, 1662, 1663, 1704, 1708, 1716, 1722, 1732], "kti_": 1722, "kti_0": 1722, "kti_02": 1732, "kti_05": [1733, 1734], "kti_amb": 1722, "kti_amb_": 1722, "kti_amb_0": 1722, "kw": [131, 156, 332, 333, 623, 624, 712, 1032, 1698, 1716, 1722, 1724], "kwarg": [1, 3, 4, 5, 17, 18, 19, 27, 28, 32, 101, 157, 160, 161, 162, 177, 179, 190, 198, 209, 210, 213, 222, 223, 224, 260, 261, 276, 281, 296, 303, 306, 309, 314, 315, 316, 317, 318, 327, 329, 331, 332, 338, 339, 342, 343, 350, 352, 358, 362, 379, 380, 384, 386, 387, 388, 389, 391, 393, 394, 396, 398, 399, 400, 401, 404, 405, 406, 409, 410, 416, 427, 428, 430, 431, 432, 447, 449, 450, 451, 452, 453, 466, 467, 468, 477, 485, 496, 512, 513, 517, 521, 530, 535, 557, 562, 564, 565, 566, 572, 578, 593, 599, 600, 606, 607, 613, 614, 618, 619, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 687, 692, 702, 712, 714, 722, 731, 732, 735, 736, 739, 740, 743, 744, 747, 751, 754, 758, 759, 764, 765, 771, 772, 776, 777, 784, 785, 791, 792, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1004, 1007, 1009, 1010, 1011, 1016, 1018, 1025, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1048, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1062, 1063, 1064, 1065, 1066, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1105, 1107, 1111, 1114, 1115, 1116, 1118, 1119, 1127, 1132, 1133, 1134, 1143, 1148, 1178, 1179, 1199, 1208, 1213, 1217, 1220, 1230, 1236, 1237, 1240, 1250, 1251, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1270, 1275, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1301, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1406, 1411, 1413, 1414, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1480, 1481, 1484, 1486, 1490, 1491, 1498, 1499, 1502, 1507, 1510, 1511, 1512, 1514, 1517, 1518, 1519, 1523, 1524, 1525, 1526, 1530, 1533, 1535, 1537, 1539, 1540, 1541, 1542, 1552, 1555, 1559, 1560, 1628, 1629, 1632, 1640, 1706], "l": [916, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1332, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524, 1725], "label": [105, 217, 307, 323, 324, 420, 439, 458, 489, 502, 1039, 1040, 1041, 1042, 1043, 1044, 1087, 1095, 1096, 1134, 1220, 1225, 1229, 1236, 1250, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1275, 1277, 1285, 1289, 1291, 1293, 1294, 1295, 1330, 1332, 1342, 1362, 1364, 1365, 1366, 1371, 1373, 1375, 1379, 1380, 1381, 1386, 1388, 1390, 1394, 1397, 1398, 1400, 1404, 1410, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1437, 1447, 1458, 1472, 1480, 1481, 1484, 1485, 1498, 1502, 1507, 1511, 1512, 1514, 1518, 1519, 1524, 1525, 1529, 1530, 1533, 1535, 1537, 1552, 1553, 1556, 1717, 1718, 1719, 1720, 1725, 1728, 1732], "label1": [1511, 1518], "label2": [1480, 1511, 1518], "label_map": [1079, 1080, 1081, 1082, 1083, 1084], "label_out": [1134, 1410], "label_typ": 1265, "labelbottom": 1537, "labelcolor": [1436, 1537], "labeldist": 1430, "labelfontfamili": 1537, "labelleft": 1537, "labelloc": [1507, 1514], "labelpad": [1134, 1507, 1514], "labelpo": 1436, "labelright": 1537, "labelrot": 1537, "labels": 1537, "labelsep": 1436, "labelspac": 1411, "labeltop": 1537, "labl": 1095, "lack": 1425, "lag": [1240, 1555], "lambda": [1443, 1444, 1720, 1729, 1731], "lambert": 1406, "lanczo": 1402, "laptop": 1724, "larg": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1260, 1398, 1424, 1426, 1535, 1537, 1713, 1716, 1724], "larger": [1402, 1424, 1426, 1435, 1499], "largest": [1266, 1397], "larsen": [540, 1269], "last": [25, 1018, 1037, 1152, 1271, 1292, 1398, 1410, 1424, 1426, 1523, 1574, 1715], "later": [1152, 1242, 1726, 1729, 1732], "latest": [100, 1071, 1076, 1715], "latter": [0, 300, 557, 595, 759, 1426, 1629, 1726, 1728, 1732, 1734], "launch": 1724, "law": [1261, 1399], "layer": [1525, 1718, 1719, 1722], "layout": [0, 527, 1009, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1134, 1329, 1471, 1525, 1703, 1705, 1710, 1713, 1729, 1731, 1732], "layout_opt": 0, "layout_regular_grid": 0, "layout_single_st": 0, "layout_wind_ros": 0, "ldict": [527, 1703], "lead": [1397, 1402, 1442, 1463, 1725], "least": [1397, 1402, 1533, 1714], "leav": [1255, 1426, 1508, 1515, 1532, 1715], "leebyron": 1525, "left": [1134, 1178, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1357, 1364, 1365, 1370, 1379, 1380, 1394, 1397, 1398, 1402, 1404, 1405, 1406, 1411, 1415, 1417, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1443, 1444, 1447, 1449, 1451, 1453, 1479, 1502, 1507, 1508, 1514, 1515, 1523, 1524, 1530, 1533, 1535, 1537, 1538, 1539, 1540, 1554, 1557, 1731], "leftmost": 1399, "legal": [1293, 1525], "legend": [1033, 1061, 1062, 1134, 1269, 1271, 1330, 1331, 1332, 1398, 1406, 1411, 1430, 1431, 1439, 1447, 1472, 1529, 1717, 1718, 1720, 1725], "legend_handler_map": [1134, 1332], "legloc": [1033, 1720, 1731], "len": [1240, 1266, 1269, 1285, 1430, 1431, 1434, 1435, 1526, 1529, 1555, 1576, 1720, 1725], "length": [0, 343, 344, 412, 519, 521, 759, 785, 791, 792, 802, 1109, 1110, 1134, 1169, 1170, 1171, 1173, 1177, 1193, 1194, 1195, 1206, 1240, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1349, 1394, 1397, 1398, 1400, 1404, 1411, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1442, 1447, 1480, 1492, 1512, 1519, 1523, 1524, 1525, 1532, 1533, 1535, 1537, 1541, 1552, 1555, 1562, 1563, 1564, 1566, 1567, 1569, 1570, 1572, 1665, 1688, 1708, 1716, 1719, 1720, 1722, 1723, 1724], "length_includes_head": 1253, "less": [0, 1240, 1269, 1398, 1399, 1435, 1555, 1716, 1725, 1731], "let": [1143, 1168, 1178, 1199, 1710, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1731, 1732, 1733, 1734], "letter": [1431, 1629, 1632], "level": [0, 56, 70, 74, 79, 83, 106, 157, 158, 181, 183, 198, 199, 210, 229, 230, 231, 252, 265, 267, 269, 272, 274, 308, 311, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 417, 421, 423, 425, 429, 438, 440, 442, 443, 445, 459, 461, 464, 471, 473, 475, 480, 486, 490, 492, 494, 501, 503, 504, 506, 507, 510, 514, 515, 516, 521, 524, 525, 526, 527, 528, 529, 534, 576, 584, 603, 606, 607, 610, 621, 627, 633, 639, 645, 646, 649, 650, 654, 680, 696, 697, 706, 707, 717, 718, 726, 727, 763, 769, 783, 795, 798, 799, 800, 807, 817, 827, 834, 842, 850, 859, 880, 886, 908, 920, 926, 927, 1007, 1018, 1020, 1021, 1025, 1039, 1040, 1041, 1042, 1043, 1044, 1056, 1057, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1108, 1134, 1208, 1215, 1230, 1264, 1268, 1271, 1275, 1281, 1282, 1404, 1507, 1514, 1520, 1530, 1539, 1540, 1627, 1631, 1640, 1692, 1699, 1702, 1704, 1718, 1722, 1727, 1729], "level10": 1723, "level5": 1722, "level5_raw": 1722, "levelrotor": [0, 606, 607, 608, 609, 610, 611, 612, 1704, 1722], "li": [540, 1426], "lib": 1576, "libmamba": 1715, "librari": 1730, "licens": 1576, "lie": [413, 1703], "light": 1535, "lighter": 0, "like": [0, 27, 413, 1134, 1169, 1171, 1193, 1240, 1251, 1256, 1265, 1266, 1267, 1269, 1270, 1271, 1275, 1281, 1282, 1289, 1291, 1292, 1293, 1294, 1295, 1298, 1318, 1397, 1398, 1399, 1400, 1402, 1417, 1424, 1425, 1426, 1430, 1431, 1432, 1435, 1442, 1445, 1446, 1478, 1486, 1508, 1512, 1515, 1519, 1524, 1525, 1526, 1529, 1530, 1539, 1540, 1541, 1546, 1550, 1551, 1552, 1555, 1696, 1714, 1715, 1716, 1719, 1723, 1728], "likewis": [1152, 1260, 1399], "lim": [1291, 1718, 1720, 1731], "lim_high": [950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1722], "lim_low": [950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1722], "limit": [0, 81, 82, 179, 883, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1134, 1135, 1138, 1143, 1149, 1178, 1181, 1199, 1200, 1214, 1233, 1252, 1253, 1256, 1259, 1260, 1263, 1264, 1265, 1268, 1269, 1271, 1281, 1282, 1291, 1302, 1343, 1344, 1354, 1355, 1370, 1377, 1385, 1392, 1397, 1399, 1405, 1416, 1425, 1431, 1438, 1439, 1448, 1486, 1487, 1488, 1499, 1500, 1501, 1508, 1509, 1512, 1515, 1516, 1519, 1531, 1538, 1546, 1548, 1714, 1716], "line": [0, 522, 523, 712, 758, 759, 776, 777, 784, 785, 791, 792, 822, 824, 862, 865, 869, 872, 911, 914, 1039, 1040, 1041, 1072, 1073, 1096, 1134, 1174, 1196, 1240, 1247, 1250, 1258, 1260, 1261, 1262, 1266, 1267, 1269, 1271, 1275, 1281, 1282, 1285, 1291, 1292, 1312, 1333, 1349, 1368, 1376, 1383, 1391, 1394, 1398, 1400, 1404, 1405, 1411, 1412, 1415, 1424, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1447, 1458, 1460, 1478, 1484, 1492, 1493, 1498, 1523, 1526, 1529, 1530, 1532, 1533, 1537, 1539, 1540, 1542, 1550, 1551, 1552, 1555, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1703, 1713, 1715, 1717, 1718, 1723, 1727, 1730], "line2d": [1134, 1240, 1247, 1250, 1258, 1261, 1262, 1269, 1271, 1277, 1285, 1289, 1291, 1296, 1368, 1376, 1383, 1391, 1394, 1414, 1415, 1427, 1431, 1432, 1434, 1445, 1446, 1484, 1498, 1524, 1530, 1537, 1542, 1555], "linear": [0, 667, 930, 931, 935, 936, 940, 941, 945, 946, 950, 956, 1134, 1261, 1277, 1281, 1285, 1397, 1399, 1402, 1413, 1415, 1424, 1425, 1426, 1434, 1442, 1510, 1517, 1523, 1538, 1539, 1540, 1704, 1716, 1720, 1722, 1733], "linear_loc": 1720, "linearli": [416, 417, 485, 486, 829, 837, 845, 853, 1532, 1720], "linearloc": [1543, 1544], "linearscal": [1510, 1517], "linearsuperposit": 0, "linecollect": [1240, 1291, 1292, 1400, 1532, 1550, 1551, 1552, 1555], "linefmt": [1134, 1529], "linelength": 1292, "lineoffset": [1134, 1292], "lineplot": 1398, "lines_bars_and_mark": [1265, 1267], "linespac": 1535, "linestyl": [1134, 1240, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1400, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1480, 1524, 1529, 1530, 1539, 1552, 1555, 1717, 1718, 1725], "linewidth": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1480, 1524, 1532, 1539, 1725], "link": [1713, 1724], "linspac": [1281, 1282, 1576, 1717, 1718, 1725, 1730], "linux": 1724, "list": [0, 1, 3, 4, 5, 14, 17, 27, 28, 32, 46, 48, 49, 52, 53, 54, 57, 58, 59, 60, 62, 63, 66, 67, 71, 76, 77, 81, 82, 87, 90, 91, 92, 95, 101, 105, 107, 109, 157, 185, 187, 188, 191, 195, 202, 205, 208, 212, 213, 214, 215, 217, 218, 220, 225, 234, 236, 237, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 262, 273, 276, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 304, 306, 307, 310, 311, 323, 324, 325, 326, 327, 329, 332, 339, 341, 343, 345, 351, 358, 364, 367, 369, 371, 375, 385, 390, 395, 397, 403, 407, 408, 412, 414, 415, 416, 417, 420, 422, 427, 428, 430, 432, 434, 439, 441, 442, 447, 449, 451, 453, 454, 458, 460, 463, 466, 467, 468, 472, 477, 481, 483, 485, 486, 489, 491, 496, 498, 502, 505, 506, 509, 512, 517, 536, 537, 540, 543, 544, 548, 549, 550, 552, 553, 554, 557, 562, 564, 566, 571, 572, 577, 578, 581, 582, 585, 586, 588, 589, 590, 592, 593, 599, 606, 613, 614, 617, 618, 619, 622, 623, 628, 629, 630, 634, 635, 636, 637, 640, 641, 647, 651, 652, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 677, 684, 685, 686, 691, 692, 701, 702, 711, 712, 714, 721, 722, 730, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 753, 754, 757, 758, 764, 770, 771, 776, 784, 791, 801, 808, 809, 812, 818, 819, 822, 828, 829, 836, 837, 844, 845, 852, 853, 854, 861, 862, 868, 869, 875, 876, 881, 882, 887, 888, 910, 911, 916, 921, 922, 929, 930, 935, 940, 945, 950, 955, 956, 961, 962, 967, 968, 973, 974, 979, 980, 985, 986, 991, 992, 997, 998, 1003, 1004, 1006, 1008, 1020, 1023, 1024, 1027, 1029, 1030, 1031, 1033, 1053, 1056, 1057, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1090, 1095, 1097, 1099, 1102, 1104, 1111, 1118, 1119, 1123, 1126, 1127, 1134, 1135, 1136, 1138, 1177, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1275, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1314, 1320, 1328, 1333, 1356, 1368, 1371, 1373, 1375, 1376, 1383, 1386, 1388, 1390, 1391, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1414, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1445, 1446, 1447, 1477, 1480, 1484, 1498, 1502, 1511, 1512, 1518, 1519, 1524, 1525, 1530, 1531, 1533, 1535, 1539, 1540, 1546, 1550, 1551, 1552, 1559, 1573, 1576, 1585, 1586, 1587, 1629, 1692, 1695, 1696, 1699, 1702, 1703, 1705, 1710, 1714, 1716, 1717, 1718, 1719, 1722, 1724, 1725, 1726, 1727], "ll": [1511, 1518], "lname": [527, 1703], "lo": [1720, 1729, 1731], "load": [0, 1, 5, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 231, 237, 244, 252, 253, 262, 269, 276, 283, 289, 296, 306, 308, 327, 329, 332, 339, 343, 351, 358, 364, 416, 417, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 486, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1713, 1721, 1724], "load_data": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 231, 237, 244, 252, 253, 262, 269, 276, 283, 289, 296, 306, 308, 327, 329, 332, 339, 343, 351, 358, 364, 416, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "load_modul": [1625, 1706], "loader": 1576, "loc": [311, 432, 434, 442, 496, 498, 506, 1134, 1208, 1215, 1218, 1220, 1227, 1229, 1230, 1357, 1411, 1497, 1502, 1507, 1511, 1514, 1518, 1529, 1533, 1725, 1726, 1728], "local": [0, 388, 771, 862, 863, 956, 968, 980, 998, 1538, 1576, 1701, 1704, 1713, 1715, 1716, 1719, 1720, 1724, 1729], "local_clust": [0, 1724], "localclust": 1724, "localclusterengin": [0, 388, 389, 390, 404, 1701, 1724], "locat": [375, 593, 1033, 1097, 1099, 1100, 1134, 1143, 1171, 1178, 1199, 1208, 1210, 1215, 1217, 1218, 1219, 1220, 1221, 1229, 1230, 1231, 1235, 1256, 1266, 1267, 1269, 1271, 1291, 1305, 1353, 1364, 1365, 1366, 1377, 1379, 1380, 1381, 1392, 1398, 1402, 1411, 1413, 1414, 1432, 1435, 1436, 1443, 1444, 1445, 1446, 1451, 1457, 1496, 1497, 1502, 1511, 1512, 1518, 1519, 1529, 1535, 1539, 1540, 1637, 1638, 1710, 1715, 1719, 1720, 1725, 1727, 1728, 1734], "locator_param": [1134, 1413], "log": [731, 735, 739, 743, 1134, 1178, 1199, 1208, 1215, 1230, 1267, 1397, 1398, 1399, 1402, 1414, 1424, 1425, 1426, 1442, 1445, 1446, 1510, 1512, 1517, 1519, 1539, 1540, 1563, 1567, 1704, 1707, 1716], "log10": [1397, 1415, 1523], "log_": [1285, 1397, 1434], "logarithm": [1397, 1399, 1414, 1445, 1446], "logit": [1397, 1399, 1402, 1424, 1425, 1426, 1442, 1510, 1517, 1539, 1540], "logitscal": [1510, 1517], "loglog": [1134, 1261, 1414], "lognorm": [1397, 1399], "logscal": [1510, 1517], "logz": [1563, 1567, 1707], "lolim": 1291, "long": [0, 1061, 1134, 1199, 1224, 1261, 1435, 1443, 1444, 1458, 1716], "long_nam": 1719, "longer": [0, 1208, 1215, 1230, 1291, 1435], "look": [3, 812, 813, 823, 1032, 1430, 1435, 1710, 1714, 1718, 1719, 1720, 1723, 1725, 1728, 1733], "lookup": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 266, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 352, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 619, 623, 624, 630, 636, 641, 651, 656, 657, 661, 664, 667, 672, 674, 676, 677, 686, 692, 693, 702, 703, 712, 714, 715, 722, 723, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1032, 1704, 1713, 1716], "lookup_k": [351, 352], "lookup_par": 677, "lookup_ti": [351, 352], "lookuperror": 1576, "lookupt": [0, 618, 619, 620, 621, 622, 677, 1704, 1716], "loop": [0, 187, 188, 198, 208, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 1574, 1717, 1720, 1724, 1729, 1731], "loop_dim": [187, 188, 198, 208, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "loss": [1285, 1434], "lost": [1484, 1498, 1511, 1518], "lot": 1724, "low": [1266, 1271, 1550, 1551], "lower": [0, 606, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1033, 1134, 1251, 1259, 1263, 1267, 1269, 1271, 1291, 1367, 1382, 1397, 1398, 1402, 1404, 1405, 1406, 1411, 1436, 1447, 1453, 1468, 1506, 1513, 1520, 1524, 1526, 1532, 1535, 1539, 1540, 1704, 1720, 1731], "lower_left": 1404, "lower_right": 1404, "lowest": [1266, 1269, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "lowlevel": 1243, "lt": [1718, 1719, 1720, 1722, 1723, 1724, 1725, 1729, 1730, 1731, 1732, 1733], "luka": 1711, "lw": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1480, 1524, 1725], "ly": 1269, "lz": [1563, 1567], "m": [6, 8, 11, 12, 13, 15, 16, 266, 391, 417, 432, 486, 714, 722, 784, 785, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1402, 1404, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1449, 1509, 1515, 1516, 1524, 1525, 1533, 1535, 1538, 1644, 1645, 1646, 1651, 1657, 1660, 1665, 1672, 1673, 1674, 1682, 1683, 1684, 1688, 1708, 1715, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1730, 1732, 1733], "m3": [1647, 1675, 1708], "ma": 1535, "machin": [0, 1704], "macosx": 1493, "made": [1135, 1402], "madsen": [0, 540, 802, 829, 830, 837, 838, 845, 846, 853, 854, 855, 877, 883, 917, 923, 1722, 1724], "madsenaxialinduct": [0, 540, 541, 542, 1704, 1722], "magenta": 1431, "magnitud": [1134, 1250, 1266, 1415, 1427, 1434, 1523, 1538], "magnitude_spectrum": [1134, 1250, 1415, 1427, 1434, 1523], "mai": [0, 564, 623, 1135, 1150, 1152, 1174, 1196, 1208, 1220, 1222, 1237, 1242, 1252, 1253, 1260, 1265, 1266, 1269, 1291, 1292, 1294, 1295, 1364, 1365, 1366, 1370, 1377, 1379, 1380, 1381, 1385, 1392, 1395, 1398, 1402, 1404, 1405, 1419, 1424, 1425, 1426, 1431, 1432, 1435, 1441, 1442, 1443, 1444, 1448, 1451, 1478, 1497, 1508, 1510, 1511, 1515, 1517, 1518, 1529, 1532, 1539, 1540, 1704, 1721, 1729, 1734], "main": [46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 195, 196, 213, 216, 225, 227, 237, 239, 244, 248, 252, 283, 284, 289, 293, 306, 329, 330, 332, 416, 418, 427, 430, 432, 436, 447, 449, 451, 453, 457, 466, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 543, 544, 547, 581, 583, 586, 587, 589, 591, 613, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 1269, 1271, 1426, 1443, 1715, 1719, 1725, 1735], "mainli": [1289, 1716], "majid": [801, 876, 882, 888], "major": [0, 1134, 1256, 1299, 1300, 1371, 1375, 1377, 1386, 1390, 1392, 1394, 1413, 1511, 1512, 1518, 1519, 1537, 1538], "make": [0, 1134, 1171, 1260, 1267, 1271, 1291, 1397, 1399, 1406, 1414, 1424, 1426, 1430, 1435, 1443, 1444, 1445, 1446, 1523, 1530, 1532, 1537, 1541, 1551, 1634, 1704, 1715, 1716, 1723, 1724, 1727], "manag": [0, 1693, 1712, 1713, 1724], "manage_tick": [1269, 1271], "mandatori": [1512, 1519], "mani": [0, 169, 170, 416, 417, 485, 486, 1153, 1266, 1267, 1289, 1713, 1716, 1724], "manifest": 0, "manipul": [190, 224, 316], "manual": [1241, 1713, 1714, 1723], "map": [0, 1, 3, 191, 416, 417, 428, 432, 434, 485, 486, 496, 498, 519, 521, 527, 528, 581, 582, 618, 619, 637, 677, 1050, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1090, 1118, 1119, 1134, 1143, 1178, 1199, 1269, 1271, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540, 1550, 1551, 1576, 1689, 1691, 1705, 1708, 1716, 1723, 1728], "margin": [1134, 1255, 1256, 1372, 1387, 1397, 1416, 1509, 1516, 1531, 1548], "mark": [1260, 1404, 1416, 1543, 1544, 1550, 1551, 1720, 1723], "marker": [1134, 1240, 1250, 1258, 1261, 1262, 1271, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1442, 1458, 1460, 1480, 1524, 1529, 1530, 1542, 1555, 1720], "markeredgecolor": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "markeredgewidth": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "markerfacecolor": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "markerfacecoloralt": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "markerfmt": [1134, 1529], "markerlin": 1529, "markers": [1134, 1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1442, 1524], "markerstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1442, 1524], "markeveri": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "martin": 1711, "mask": [0, 1095, 1266, 1289, 1398, 1414, 1424, 1426, 1435, 1442, 1445, 1446, 1539, 1540, 1541, 1542, 1712, 1713, 1728], "master": [1574, 1710], "match": [1118, 1121, 1122, 1134, 1266, 1269, 1271, 1292, 1296, 1398, 1402, 1416, 1435, 1442, 1511, 1518, 1527, 1532, 1541], "math_fontfamili": 1535, "mathemat": [0, 1716], "mathematisch": 1576, "mathrm": 1434, "mathtext": 1538, "matlab": [1277, 1285, 1434, 1523, 1529], "matplotlib": [1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1062, 1066, 1067, 1069, 1072, 1074, 1096, 1134, 1135, 1138, 1143, 1149, 1172, 1178, 1181, 1199, 1200, 1208, 1215, 1220, 1230, 1240, 1250, 1251, 1252, 1253, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1279, 1281, 1282, 1285, 1287, 1289, 1291, 1293, 1294, 1295, 1298, 1302, 1305, 1313, 1318, 1356, 1362, 1364, 1365, 1366, 1372, 1375, 1379, 1380, 1381, 1387, 1390, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1411, 1415, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1447, 1448, 1451, 1452, 1453, 1461, 1462, 1464, 1467, 1468, 1475, 1479, 1480, 1484, 1498, 1502, 1503, 1507, 1510, 1514, 1517, 1523, 1524, 1526, 1532, 1533, 1535, 1539, 1540, 1542, 1543, 1544, 1551, 1552, 1555, 1576, 1578, 1588, 1596, 1601, 1603, 1610, 1618, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "matric": [1402, 1524], "matrix": [1134, 1143, 1148, 1158, 1178, 1179, 1185, 1192, 1199, 1402, 1417, 1424, 1426], "matshow": [1134, 1402, 1417], "matter": [364, 1724, 1726], "max": [0, 519, 520, 521, 637, 935, 962, 968, 1011, 1034, 1035, 1036, 1079, 1080, 1081, 1082, 1083, 1084, 1178, 1264, 1268, 1281, 1282, 1398, 1539, 1540, 1550, 1576, 1704, 1728], "max_ag": [758, 759, 1722], "max_age_mean_w": [758, 759], "max_csiz": [1626, 1706], "max_it": [17, 18], "max_length_km": [343, 344, 758, 759, 784, 785, 791, 792, 802, 1722], "max_p": [1664, 1708, 1726, 1728], "maxim": [0, 17, 18, 343, 344, 537, 538, 599, 600, 623, 758, 759, 785, 791, 792, 802, 883, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1095, 1096, 1577, 1580, 1584, 1586, 1590, 1594, 1597, 1601, 1604, 1608, 1612, 1616, 1620, 1626, 1627, 1664, 1704, 1708, 1716, 1720, 1722, 1724, 1726], "maximum": [0, 1134, 1155, 1178, 1269, 1354, 1413, 1499, 1500, 1532, 1539, 1540, 1550, 1551, 1717, 1733], "maxlag": [1240, 1555], "maxlength": 1532, "maxnloc": [1413, 1539, 1540], "maxp": [1664, 1708, 1726, 1728], "maxtick": [1208, 1209, 1215, 1230], "maxval": 1499, "mb": [164, 167, 176], "mbook": [1, 3, 17, 27, 157, 158, 176, 524, 525, 526, 528, 1091, 1092, 1093, 1094, 1703, 1716, 1717, 1718, 1719, 1722, 1725, 1726, 1727, 1728, 1730, 1734], "mcgill": 1269, "mclass": 535, "mdata": [0, 1, 17, 27, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 157, 159, 169, 170, 185, 195, 205, 213, 216, 222, 224, 225, 227, 231, 237, 239, 240, 244, 248, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 269, 276, 278, 279, 280, 282, 283, 284, 285, 289, 293, 296, 298, 300, 301, 306, 308, 314, 316, 327, 329, 330, 332, 339, 343, 345, 346, 347, 348, 351, 358, 360, 361, 363, 364, 365, 366, 416, 418, 421, 427, 429, 430, 432, 436, 440, 447, 449, 451, 453, 456, 457, 466, 468, 470, 471, 477, 479, 485, 487, 490, 496, 499, 504, 512, 514, 517, 537, 540, 543, 544, 547, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 578, 579, 580, 581, 583, 584, 586, 587, 589, 591, 593, 595, 596, 599, 606, 613, 616, 618, 620, 621, 623, 626, 630, 632, 636, 638, 641, 644, 646, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 697, 702, 705, 707, 712, 714, 716, 718, 722, 725, 727, 731, 735, 739, 743, 747, 751, 754, 758, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 776, 779, 780, 781, 784, 787, 788, 789, 790, 791, 794, 796, 797, 801, 804, 805, 806, 809, 810, 811, 812, 814, 815, 816, 819, 820, 821, 822, 824, 825, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 882, 885, 888, 904, 905, 906, 907, 911, 914, 915, 916, 919, 922, 925, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 956, 959, 960, 962, 965, 966, 968, 971, 972, 974, 977, 978, 980, 983, 984, 986, 989, 990, 992, 995, 996, 998, 1001, 1002, 1699], "mdata_kei": [888, 894], "mdl": 1624, "mean": [0, 157, 158, 229, 314, 322, 364, 413, 759, 1011, 1018, 1023, 1026, 1027, 1030, 1034, 1035, 1036, 1038, 1053, 1060, 1062, 1077, 1079, 1080, 1081, 1253, 1261, 1269, 1271, 1277, 1285, 1291, 1397, 1402, 1434, 1523, 1526, 1541, 1550, 1551, 1627, 1706, 1716, 1718, 1723, 1724, 1732, 1733], "mean_eff": [1732, 1733], "mean_rew": [1011, 1723, 1732, 1733], "meanlin": [1269, 1271], "meanprop": [1269, 1271], "meant": [157, 1364, 1365, 1366, 1379, 1380, 1381], "measur": [1171, 1277, 1285, 1434, 1435, 1716, 1720], "mec": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "med": 1271, "media": 829, "median": [1269, 1271, 1550, 1551], "medianprop": [1269, 1271], "medici": [0, 854], "medium": 1535, "meet": 1453, "megawatt": [126, 1698], "memori": [0, 1, 5, 17, 27, 157, 168, 171, 174, 231, 269, 308, 416, 417, 421, 429, 440, 471, 485, 486, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1215, 1289, 1626, 1706, 1724], "memoryerror": 1576, "memoryview": 1576, "ment": 1267, "mention": [1037, 1510, 1517, 1719], "mere": [323, 1714], "merg": 1718, "mesh": [1424, 1425, 1426], "meshgrid": [1266, 1435, 1532], "mesoscal": [1716, 1719], "mess": 0, "messag": [1109, 1110, 1117, 1713], "meta": [187, 1699], "meteorolog": [306, 1736], "meteorologi": 1266, "method": [410, 619, 930, 931, 935, 936, 940, 941, 945, 946, 1132, 1133, 1134, 1143, 1150, 1154, 1162, 1177, 1178, 1188, 1199, 1204, 1214, 1215, 1219, 1220, 1222, 1229, 1233, 1235, 1237, 1241, 1255, 1260, 1267, 1269, 1285, 1287, 1298, 1318, 1394, 1397, 1398, 1399, 1402, 1404, 1405, 1413, 1416, 1424, 1425, 1426, 1430, 1432, 1434, 1435, 1442, 1443, 1444, 1460, 1464, 1506, 1511, 1513, 1518, 1524, 1525, 1529, 1530, 1539, 1540, 1551, 1724], "mew": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "meyer": [837, 845, 853, 1709, 1717], "mfc": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "mfcalt": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "mid": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1398, 1415, 1427, 1431, 1432, 1434, 1435, 1524, 1530], "middl": [1258, 1259, 1262, 1263, 1266, 1435, 1436, 1453, 1720], "midpoint": 1523, "might": [1143, 1156, 1178, 1183, 1199, 1413, 1508, 1515, 1710, 1714, 1724], "min": [0, 519, 520, 521, 637, 1011, 1034, 1035, 1036, 1079, 1080, 1081, 1082, 1083, 1084, 1178, 1264, 1268, 1281, 1282, 1398, 1539, 1540, 1550, 1576, 1720, 1728, 1729, 1731], "min_csiz": [1626, 1706], "min_dist": [413, 1627, 1703, 1706, 1724], "mincnt": 1397, "minim": [0, 413, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1095, 1096, 1525, 1577, 1581, 1584, 1586, 1591, 1594, 1598, 1601, 1605, 1608, 1613, 1616, 1621, 1626, 1627], "minimum": [1134, 1143, 1149, 1178, 1199, 1200, 1250, 1269, 1277, 1285, 1355, 1415, 1427, 1434, 1435, 1499, 1501, 1523, 1532, 1539, 1540, 1550, 1551, 1717], "ministri": 1713, "minlength": [1435, 1532], "minor": [1134, 1373, 1375, 1376, 1377, 1388, 1390, 1391, 1392, 1394, 1414, 1418, 1419, 1445, 1446, 1511, 1512, 1518, 1519, 1537], "minorticks_off": [1134, 1418, 1419], "minorticks_on": [1134, 1419], "minshaft": 1435, "minu": [1060, 1062, 1220, 1222], "minut": [453, 454, 758, 759, 776, 777, 791, 792, 1719, 1723, 1731], "minval": 1499, "mirror": [0, 1717, 1718], "mirror_combo": 1718, "misalign": [801, 882, 1716, 1734], "misc": [1426, 1460, 1482, 1483], "miscellan": [1443, 1444, 1535], "mislead": 1272, "mismatch": 1121, "miss": [0, 1118, 1119, 1560], "mit": 1713, "mitchel": 1402, "miter": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "mix": [681, 698, 708, 1431, 1718], "mlab": [1240, 1277, 1285, 1434, 1523, 1551, 1555], "mod_cutin": [18, 1718], "mode": [1127, 1131, 1134, 1240, 1264, 1268, 1281, 1282, 1523, 1529, 1555, 1715, 1729], "model": [0, 1, 3, 4, 5, 7, 8, 11, 12, 14, 16, 17, 22, 27, 28, 38, 39, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 143, 144, 157, 158, 163, 165, 171, 172, 173, 174, 176, 181, 182, 183, 185, 195, 196, 198, 202, 203, 205, 207, 211, 213, 214, 215, 216, 218, 220, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 308, 310, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 339, 343, 345, 346, 347, 348, 349, 351, 358, 359, 360, 361, 362, 363, 364, 365, 366, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 416, 418, 421, 422, 423, 425, 427, 429, 430, 432, 436, 438, 440, 441, 443, 445, 447, 449, 451, 453, 457, 459, 460, 461, 463, 464, 466, 468, 470, 471, 472, 473, 475, 477, 479, 480, 481, 483, 485, 487, 490, 491, 492, 494, 496, 499, 501, 503, 504, 505, 507, 509, 510, 512, 514, 515, 516, 517, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1009, 1018, 1038, 1045, 1048, 1049, 1051, 1054, 1058, 1064, 1065, 1077, 1085, 1088, 1091, 1092, 1093, 1094, 1095, 1626, 1670, 1671, 1692, 1698, 1699, 1702, 1706, 1708, 1710, 1712, 1713, 1714, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734, 1736], "model_book": 1710, "model_data": [198, 202, 205, 211, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407], "model_id": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 270, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "model_nam": [225, 235, 543], "model_par": [801, 882], "model_typ": [530, 535], "modelbook": [0, 3, 158, 176, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 1092, 1093, 1094, 1702, 1714, 1716, 1717, 1719, 1722, 1725, 1726, 1727, 1728, 1730, 1734], "models_state_sel": 324, "modif": [18, 335, 681, 698, 708, 1214, 1233, 1716], "modifi": [46, 48, 49, 52, 53, 57, 59, 62, 63, 66, 67, 71, 87, 90, 92, 95, 101, 107, 213, 218, 225, 234, 237, 242, 244, 250, 252, 253, 254, 255, 256, 257, 276, 278, 279, 283, 287, 289, 294, 296, 300, 304, 306, 310, 327, 329, 332, 335, 358, 360, 361, 416, 422, 427, 430, 432, 441, 447, 449, 451, 453, 460, 466, 468, 472, 477, 481, 485, 491, 496, 505, 512, 517, 543, 544, 548, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 581, 585, 586, 588, 589, 592, 593, 595, 599, 606, 613, 617, 618, 622, 623, 628, 630, 634, 636, 640, 641, 647, 651, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 681, 684, 686, 691, 692, 698, 701, 702, 708, 711, 712, 714, 721, 722, 730, 809, 812, 815, 816, 819, 822, 829, 832, 833, 837, 840, 841, 845, 848, 849, 853, 854, 857, 858, 862, 869, 876, 882, 911, 916, 922, 1045, 1046, 1252, 1269, 1271, 1402, 1416, 1480, 1484, 1493, 1498, 1506, 1511, 1513, 1518, 1531, 1539, 1540, 1699, 1710, 1716, 1718, 1720, 1724], "modify_ct": [332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722, 1718], "modify_cutin": [332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722], "modify_p": [332, 335, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722, 1718], "modul": [0, 1277, 1285, 1434, 1523, 1574, 1576, 1624, 1625, 1706], "modular": 1713, "modulenotfounderror": 1576, "modulespec": 1576, "mol": [519, 521, 743, 1568, 1569, 1571, 1572, 1665, 1707, 1708, 1716, 1718, 1719], "mol_abs_rang": [519, 521], "mollweid": 1406, "moment": [1645, 1646, 1673, 1674, 1708], "momentum": [537, 540, 1704], "monin": [1568, 1569, 1571, 1572, 1665, 1708, 1716, 1719], "monochrom": 1539, "monospac": 1535, "monoton": 1425, "month": [1292, 1723], "more": [0, 1177, 1250, 1251, 1266, 1269, 1277, 1285, 1291, 1294, 1295, 1394, 1399, 1402, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1434, 1435, 1442, 1460, 1480, 1523, 1525, 1530, 1539, 1540, 1541, 1576, 1714, 1715, 1717, 1718, 1724, 1728, 1729, 1732], "moreov": 1531, "most": [72, 75, 76, 80, 81, 84, 85, 1134, 1266, 1269, 1277, 1285, 1298, 1312, 1318, 1398, 1424, 1425, 1426, 1431, 1434, 1453, 1460, 1511, 1518, 1523, 1530, 1532, 1539, 1540, 1543, 1544, 1576, 1716, 1718, 1734], "mostli": 0, "mous": [1134, 1279, 1286, 1290, 1318, 1334, 1420, 1474, 1478, 1528], "mousebutton": [1286, 1528], "mouseev": [1134, 1279, 1318, 1403, 1428, 1478], "mouseov": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1420, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1474, 1524, 1533, 1535], "move": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 427, 430, 432, 443, 447, 449, 451, 453, 461, 466, 468, 473, 477, 485, 492, 496, 507, 512, 515, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1134, 1286, 1289, 1318, 1334, 1420, 1474, 1493, 1511, 1518, 1729, 1735], "mpi": [0, 391, 1701, 1724], "mpi4pi": [0, 391, 1713, 1715, 1724], "mpiengin": [0, 391, 392, 1701, 1724], "mpiexec": [391, 1724], "mpltype": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1394, 1397, 1398, 1400, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1447, 1465, 1524, 1525, 1532, 1533, 1535, 1537, 1539, 1540, 1552], "mstates_sel": 323, "much": [0, 1424, 1426, 1723, 1725, 1727, 1729], "multi": [0, 27, 427, 430, 447, 812, 1696, 1703, 1712, 1713, 1714, 1724], "multi_height": 0, "multialign": 1535, "multiheightncst": [0, 427, 428, 429, 430, 1703], "multiheightnctimeseri": [0, 430, 431, 1703, 1714, 1723], "multiheightst": [0, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 1703], "multiheighttimeseri": [0, 447, 448, 1703, 1714, 1719], "multipl": [0, 432, 809, 1134, 1152, 1266, 1289, 1292, 1293, 1294, 1295, 1398, 1402, 1431, 1435, 1447, 1480, 1535, 1541, 1703, 1704, 1710, 1713, 1714, 1716, 1728], "multipli": [0, 651, 652, 846, 862, 863, 876, 877, 916, 917, 922, 923, 1704], "multiprocess": [0, 393, 1701, 1724], "multiprocessengin": [0, 393, 1701, 1724], "must": [1099, 1100, 1135, 1138, 1143, 1149, 1160, 1166, 1178, 1187, 1191, 1199, 1200, 1203, 1205, 1240, 1242, 1250, 1251, 1266, 1267, 1275, 1277, 1285, 1289, 1291, 1292, 1318, 1397, 1398, 1402, 1415, 1416, 1424, 1426, 1427, 1431, 1434, 1435, 1443, 1444, 1450, 1464, 1480, 1511, 1512, 1518, 1519, 1523, 1529, 1532, 1533, 1539, 1540, 1541, 1555, 1627, 1721], "mutat": 1152, "mutation_aspect": 1251, "mutation_scal": 1251, "muti": 1720, "mutual": [1539, 1540, 1541, 1542], "mw": [126, 131, 333, 377, 378, 712, 1698, 1716, 1719, 1723, 1726, 1732, 1733], "mx2": 1397, "my_jensen": 1722, "my_turbin": 1710, "n": [0, 391, 557, 558, 599, 600, 606, 607, 916, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1169, 1170, 1171, 1173, 1193, 1194, 1195, 1206, 1236, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1398, 1399, 1402, 1404, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1442, 1447, 1449, 1451, 1497, 1523, 1524, 1525, 1532, 1533, 1535, 1538, 1539, 1540, 1546, 1550, 1551, 1555, 1576, 1608, 1609, 1627, 1704, 1706, 1710, 1715, 1716, 1719, 1722, 1724, 1727, 1729, 1730, 1731, 1732, 1734], "n0": 1398, "n1": 1398, "n2": [1716, 1722, 1727], "n_a0": 1574, "n_chunks_stat": [201, 202], "n_chunks_target": [201, 202], "n_img_point": [0, 1038, 1077, 1079, 1080, 1081, 1082, 1083, 1084], "n_point": [5, 27, 28, 32, 69, 178, 216, 299, 317, 345, 347, 583, 587, 591, 594, 602, 609, 767, 774, 780, 788, 796, 805, 860, 907, 1053, 1582, 1583, 1592, 1593, 1599, 1600, 1602, 1606, 1607, 1614, 1615, 1622, 1623, 1629, 1718, 1724, 1730], "n_proc": [198, 199, 1721, 1723, 1724, 1726, 1730, 1732, 1734], "n_r_per_x": [810, 821, 826], "n_rotor_axi": [299, 594, 602, 609], "n_rotor_point": [256, 279, 296, 302, 569, 579, 593, 597, 599, 604, 606, 611], "n_rotor_sid": [299, 594, 602, 609], "n_rotor_up": [299, 594, 602, 609], "n_rpoint": [298, 300, 301, 302, 305, 595, 596, 597, 598, 604, 605, 611, 612, 835, 843, 851, 867, 874, 928], "n_st_sel": [365, 810, 811, 814, 820, 821, 824, 826, 865, 872, 879, 885, 914, 919, 925, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001], "n_state": [1, 5, 17, 27, 28, 32, 47, 51, 55, 61, 65, 69, 89, 94, 103, 110, 157, 169, 170, 178, 187, 192, 198, 201, 216, 221, 222, 227, 239, 248, 254, 255, 256, 257, 258, 259, 260, 278, 279, 280, 282, 284, 293, 298, 301, 313, 314, 317, 318, 322, 323, 324, 325, 326, 330, 345, 346, 347, 348, 349, 360, 361, 363, 365, 366, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 418, 426, 436, 446, 457, 465, 470, 476, 479, 484, 487, 495, 499, 511, 519, 521, 547, 555, 556, 561, 563, 569, 570, 575, 579, 580, 583, 587, 591, 595, 596, 613, 614, 616, 620, 626, 632, 638, 643, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 761, 762, 766, 767, 768, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 804, 805, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 832, 833, 835, 840, 841, 843, 848, 849, 851, 857, 858, 860, 865, 866, 867, 872, 873, 874, 879, 885, 904, 907, 914, 915, 919, 925, 928, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1053, 1096, 1703, 1724, 1730], "n_step": 789, "n_target": [55, 103, 169, 170, 198, 201, 254, 255, 257, 259, 278, 284, 293, 314, 318, 319, 322, 348, 349, 360, 361, 363, 365, 366, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 418, 436, 457, 470, 479, 487, 499, 555, 556, 561, 575, 762, 768, 775, 781, 782, 790, 797, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 832, 833, 840, 841, 848, 849, 857, 858, 865, 866, 872, 873, 879, 885, 904, 914, 915, 919, 925, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002], "n_time": [520, 1703, 1720, 1724], "n_tpoint": [55, 103, 254, 255, 256, 257, 258, 259, 278, 279, 280, 282, 284, 293, 314, 318, 320, 348, 360, 361, 363, 365, 366, 418, 436, 457, 470, 479, 487, 499, 555, 556, 561, 563, 569, 570, 575, 579, 580, 762, 768, 775, 781, 790, 797, 806, 815, 816, 832, 833, 840, 841, 848, 849, 857, 858, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002], "n_turbin": [45, 47, 51, 61, 65, 89, 94, 110, 187, 193, 221, 222, 227, 239, 248, 256, 258, 260, 279, 280, 282, 298, 301, 313, 314, 330, 346, 349, 367, 370, 413, 414, 415, 426, 446, 465, 476, 484, 495, 511, 547, 563, 569, 570, 579, 580, 595, 596, 613, 614, 616, 620, 626, 632, 638, 643, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 761, 766, 773, 779, 782, 787, 789, 794, 804, 835, 843, 851, 867, 874, 928, 1012, 1703, 1717, 1723, 1724, 1726, 1728, 1730], "n_var": 345, "n_x": [1042, 1043, 1044, 1096, 1397], "n_y": [1042, 1043, 1044, 1096, 1397], "n_yz_per_target": [810, 811, 814, 821, 826, 885], "n_z": 747, "naiv": 1152, "name": [0, 1, 3, 4, 5, 7, 8, 11, 16, 17, 22, 27, 28, 38, 46, 48, 49, 52, 53, 57, 58, 59, 62, 63, 66, 67, 71, 72, 73, 76, 77, 81, 82, 87, 90, 92, 95, 101, 107, 109, 145, 157, 159, 163, 169, 170, 174, 177, 181, 183, 185, 187, 188, 189, 191, 195, 202, 205, 209, 213, 218, 220, 222, 223, 225, 226, 234, 235, 236, 237, 242, 244, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 272, 274, 275, 276, 278, 279, 281, 282, 283, 287, 289, 294, 295, 296, 298, 303, 304, 306, 309, 310, 314, 315, 317, 318, 322, 323, 324, 327, 329, 331, 332, 333, 338, 339, 341, 342, 343, 350, 351, 353, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 377, 378, 385, 390, 395, 397, 403, 407, 408, 411, 412, 414, 415, 416, 417, 422, 423, 425, 427, 428, 430, 431, 432, 434, 441, 443, 445, 447, 449, 451, 453, 460, 461, 464, 466, 468, 472, 473, 475, 477, 478, 481, 483, 485, 486, 491, 492, 494, 496, 498, 505, 507, 509, 510, 512, 513, 515, 516, 517, 519, 520, 521, 527, 528, 529, 530, 533, 535, 536, 537, 540, 543, 544, 548, 549, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 571, 572, 575, 577, 578, 579, 581, 582, 585, 586, 588, 589, 592, 593, 599, 600, 606, 607, 613, 617, 618, 619, 622, 623, 628, 630, 631, 634, 635, 636, 637, 640, 641, 643, 647, 649, 650, 651, 655, 656, 657, 660, 661, 663, 664, 666, 667, 668, 671, 672, 673, 674, 675, 676, 677, 684, 686, 691, 692, 693, 701, 702, 703, 711, 712, 714, 715, 721, 722, 723, 730, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 753, 754, 757, 758, 764, 771, 776, 784, 791, 799, 800, 801, 808, 809, 810, 811, 812, 813, 814, 815, 816, 818, 819, 821, 822, 823, 824, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 863, 865, 867, 869, 872, 874, 876, 882, 885, 887, 888, 911, 914, 916, 922, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 979, 980, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1009, 1011, 1014, 1015, 1016, 1018, 1033, 1034, 1035, 1036, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1100, 1103, 1105, 1107, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1134, 1135, 1138, 1215, 1271, 1291, 1293, 1397, 1399, 1402, 1406, 1421, 1424, 1425, 1426, 1431, 1442, 1530, 1539, 1540, 1560, 1576, 1624, 1625, 1629, 1690, 1698, 1700, 1702, 1703, 1706, 1710, 1714, 1715, 1716, 1718, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1732], "name_": [1118, 1119, 1560], "name_col": 1629, "name_map": [1088, 1090], "name_prefix": [1118, 1124], "name_str": [39, 172, 173, 182, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727], "name_suffix": [1118, 1125], "name_templ": [1118, 1119, 1559, 1560], "nameerror": 1576, "namespac": 1576, "nan": [0, 46, 49, 53, 59, 63, 67, 87, 92, 101, 213, 225, 237, 240, 244, 252, 266, 283, 285, 289, 296, 306, 329, 332, 416, 417, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 486, 496, 512, 517, 519, 521, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1037, 1289, 1399, 1442, 1539, 1540, 1574, 1716, 1725, 1726], "nanmax": 1726, "napplic": 1576, "nash": 829, "nation": 1576, "nativ": [1134, 1220, 1251, 1402, 1724], "natur": 1716, "navig": [1134, 1335, 1336, 1447, 1475, 1476], "navigate_mod": 1447, "navigationtoolbar2": 1474, "nbase": [1124, 1125], "nbin": [1398, 1413], "nc": [0, 416, 417, 485, 486, 1057, 1127, 1128, 1130, 1131, 1640, 1721, 1723], "ncol": 1533, "ncolumn": [1424, 1426], "ncurrent": 1724, "ncurv": 1719, "ndarrai": [5, 27, 28, 32, 45, 47, 51, 55, 61, 65, 69, 89, 94, 103, 110, 159, 170, 178, 186, 189, 196, 201, 202, 216, 221, 227, 239, 248, 254, 255, 256, 257, 266, 278, 279, 280, 284, 293, 298, 299, 300, 301, 305, 313, 317, 318, 322, 323, 324, 325, 326, 330, 340, 345, 346, 347, 348, 349, 352, 360, 361, 365, 366, 412, 414, 415, 418, 426, 436, 446, 457, 465, 470, 476, 479, 484, 487, 495, 499, 511, 539, 542, 547, 555, 556, 561, 563, 569, 570, 575, 579, 580, 583, 587, 591, 594, 595, 596, 598, 602, 605, 609, 612, 613, 614, 616, 620, 626, 632, 638, 643, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 733, 737, 741, 745, 747, 748, 749, 752, 756, 761, 762, 766, 767, 768, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 804, 805, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 832, 833, 840, 841, 848, 849, 857, 858, 860, 865, 866, 872, 873, 879, 885, 904, 906, 907, 914, 915, 919, 925, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1012, 1037, 1042, 1043, 1044, 1053, 1079, 1080, 1081, 1082, 1083, 1084, 1092, 1096, 1240, 1250, 1266, 1270, 1277, 1285, 1294, 1295, 1397, 1398, 1415, 1424, 1427, 1434, 1435, 1523, 1555, 1574, 1575, 1580, 1581, 1582, 1583, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1627, 1629, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1717, 1718, 1734], "ne": [1447, 1451, 1497], "near_wake_d": [862, 863], "nearest": [1266, 1402, 1417, 1424, 1426, 1493, 1582, 1592, 1599, 1606, 1614, 1622], "neccessari": 0, "neccessarili": [714, 722, 1704], "necessari": [1241, 1356, 1431, 1432, 1512, 1519, 1539, 1715], "need": [0, 1, 9, 17, 27, 266, 339, 341, 349, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 753, 754, 757, 782, 950, 955, 956, 961, 962, 967, 968, 973, 974, 979, 980, 985, 986, 991, 992, 997, 998, 1003, 1014, 1134, 1208, 1214, 1229, 1230, 1233, 1252, 1265, 1266, 1271, 1364, 1365, 1366, 1379, 1380, 1381, 1395, 1424, 1425, 1426, 1432, 1512, 1519, 1525, 1527, 1530, 1531, 1538, 1539, 1540, 1576, 1713, 1714, 1716, 1718, 1723, 1724, 1726, 1727, 1728, 1733], "needs_rews2": [225, 232, 332, 336, 543, 672, 674, 676, 682, 686, 687, 689, 692, 699, 702, 709, 712, 714, 719, 722, 728], "needs_rews3": [225, 233, 332, 337, 543, 672, 674, 676, 683, 686, 687, 690, 692, 700, 702, 710, 712, 714, 720, 722, 729], "neg": [1253, 1267, 1509, 1516, 1539, 1633, 1706, 1716], "negative_linestyl": 1539, "neglect": 1723, "neither": [1539, 1540, 1541, 1542, 1555, 1726], "net": 1704, "netcdf": [0, 416, 449, 485, 1053, 1054, 1057, 1640, 1703, 1710, 1721], "netcdf4": 0, "netcfd": 1721, "neural": 1292, "neurosci": 1292, "neutral": [519, 521, 731, 743, 1562, 1563, 1564, 1704, 1706], "never": [1135, 1138, 1727], "new": [0, 1, 17, 27, 101, 157, 177, 180, 191, 198, 209, 213, 253, 258, 259, 276, 281, 282, 296, 303, 306, 309, 327, 329, 331, 332, 338, 339, 342, 343, 350, 358, 362, 363, 365, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 454, 466, 468, 477, 485, 496, 512, 517, 550, 552, 553, 557, 562, 564, 566, 572, 578, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 835, 837, 843, 845, 851, 853, 854, 862, 867, 869, 874, 876, 882, 911, 916, 922, 928, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1009, 1018, 1038, 1045, 1048, 1051, 1054, 1058, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1091, 1093, 1143, 1174, 1175, 1176, 1178, 1196, 1197, 1198, 1199, 1207, 1286, 1290, 1364, 1365, 1366, 1379, 1380, 1381, 1443, 1444, 1479, 1508, 1515, 1528, 1543, 1544, 1576, 1710, 1713, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1728, 1731, 1733], "new_branch": 1713, "new_chunk_stor": [1, 17, 27, 157, 180], "new_farm_wake_delta": [253, 258, 550, 552, 553], "new_point_data": [1, 17, 27, 157, 178], "new_point_wake_delta": [253, 259, 550, 552, 553], "new_wake_delta": [276, 282, 327, 358, 363, 557, 562, 564, 566, 572, 578, 809, 812, 819, 822, 829, 835, 837, 843, 845, 851, 853, 854, 860, 862, 867, 869, 874, 876, 882, 911, 916, 922, 928], "newa": 1723, "newli": [1062, 1543, 1544], "newlin": [1576, 1706], "next": [27, 30, 1134, 1266, 1442, 1454, 1576, 1717, 1718, 1723, 1724, 1725, 1726, 1729, 1730, 1732, 1733], "nfarm": [1723, 1726, 1729, 1730, 1731, 1732, 1733, 1734], "nfft": [1134, 1250, 1277, 1285, 1415, 1427, 1434, 1523], "nice": [1539, 1540], "nidentifi": 1576, "niel": [845, 853, 1717], "nint": [599, 600, 606, 607], "no_ground": [1716, 1722], "nobject": 1576, "node": [0, 1143, 1156, 1178, 1183, 1199, 1293, 1294, 1295, 1431, 1435, 1542, 1713, 1724], "noground": [0, 552, 1704, 1722], "nomin": [332, 333, 1020, 1266, 1726], "non": [0, 810, 811, 814, 820, 821, 824, 826, 865, 872, 879, 885, 914, 919, 925, 1096, 1134, 1143, 1170, 1173, 1176, 1178, 1194, 1195, 1198, 1199, 1206, 1207, 1261, 1264, 1268, 1269, 1271, 1359, 1402, 1414, 1424, 1425, 1426, 1442, 1445, 1446, 1512, 1519, 1524, 1633, 1706, 1713, 1715, 1720, 1724, 1727], "none": [0, 1, 3, 4, 5, 17, 18, 27, 28, 39, 44, 46, 49, 53, 54, 55, 59, 60, 63, 67, 72, 73, 74, 76, 77, 79, 81, 82, 83, 87, 88, 92, 96, 100, 101, 105, 157, 158, 159, 162, 169, 170, 172, 178, 180, 181, 183, 185, 187, 188, 190, 191, 195, 198, 199, 204, 211, 212, 213, 217, 222, 224, 225, 227, 237, 244, 252, 253, 260, 262, 266, 272, 274, 276, 283, 289, 293, 296, 297, 298, 300, 306, 307, 311, 314, 316, 323, 324, 325, 326, 327, 329, 332, 333, 339, 343, 345, 349, 351, 352, 353, 354, 358, 364, 367, 368, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 417, 420, 423, 425, 427, 428, 430, 432, 434, 439, 442, 443, 445, 447, 449, 451, 453, 454, 458, 461, 464, 466, 467, 468, 469, 473, 475, 477, 478, 485, 486, 489, 492, 494, 496, 498, 502, 506, 507, 510, 512, 515, 516, 517, 520, 525, 530, 532, 535, 536, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 573, 578, 581, 586, 589, 593, 595, 599, 606, 613, 618, 623, 630, 636, 637, 641, 649, 650, 651, 656, 661, 664, 667, 668, 672, 674, 676, 677, 686, 692, 693, 702, 703, 712, 714, 715, 722, 723, 731, 735, 739, 743, 747, 748, 751, 754, 758, 759, 764, 765, 771, 776, 777, 782, 784, 791, 792, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 863, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1004, 1005, 1009, 1010, 1011, 1014, 1015, 1016, 1017, 1018, 1020, 1025, 1032, 1033, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1053, 1054, 1055, 1056, 1057, 1058, 1060, 1062, 1064, 1065, 1066, 1067, 1071, 1072, 1076, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1097, 1098, 1103, 1105, 1107, 1111, 1115, 1119, 1134, 1135, 1138, 1143, 1149, 1199, 1200, 1208, 1211, 1212, 1220, 1221, 1230, 1240, 1241, 1250, 1251, 1252, 1253, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1285, 1286, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1299, 1300, 1301, 1313, 1318, 1327, 1331, 1332, 1336, 1349, 1351, 1356, 1362, 1375, 1390, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1411, 1413, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1445, 1446, 1447, 1450, 1453, 1455, 1456, 1461, 1462, 1464, 1478, 1480, 1482, 1484, 1486, 1492, 1493, 1498, 1502, 1506, 1507, 1508, 1511, 1512, 1513, 1514, 1515, 1518, 1519, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1538, 1539, 1540, 1541, 1550, 1551, 1552, 1553, 1555, 1556, 1574, 1576, 1594, 1596, 1601, 1603, 1608, 1610, 1624, 1626, 1627, 1629, 1703, 1706, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1726, 1729, 1730, 1731, 1732, 1733, 1734], "nonfinit": 1442, "nonposit": [1414, 1445, 1446], "nonsingular": [1208, 1214, 1230, 1233], "nor": [1555, 1726], "norm": [1134, 1240, 1266, 1270, 1294, 1295, 1397, 1399, 1402, 1424, 1425, 1426, 1435, 1442, 1532, 1539, 1540, 1541, 1555], "normal": [512, 513, 519, 521, 589, 590, 771, 1011, 1140, 1143, 1156, 1178, 1183, 1199, 1266, 1269, 1270, 1277, 1289, 1294, 1295, 1397, 1398, 1399, 1402, 1424, 1425, 1426, 1430, 1435, 1436, 1442, 1532, 1535, 1539, 1540, 1554, 1557, 1576, 1630, 1704, 1706, 1719, 1726, 1733], "normalis": [1240, 1555], "normalize_d": 1011, "normalize_i": [1079, 1080, 1081, 1082, 1083, 1084], "normalize_v": [1079, 1080, 1081, 1082, 1083, 1084], "normalize_x": [1079, 1080, 1081, 1082, 1083, 1084], "normalize_z": [1079, 1080, 1081, 1082, 1083, 1084], "north": [414, 1040, 1041, 1043, 1044, 1080, 1081, 1083, 1084, 1264, 1268, 1281, 1282, 1728], "northern": 1266, "notadirectoryerror": 1576, "notat": [1431, 1538], "notch": [1134, 1269, 1271], "note": [364, 1050, 1152, 1251, 1291, 1294, 1295, 1425, 1439, 1497, 1498, 1521, 1522, 1533, 1704, 1715, 1716, 1719, 1720, 1721, 1723, 1724, 1727, 1728, 1730, 1734], "notebook": [0, 1712, 1718, 1724, 1731, 1736], "noth": [1150, 1208, 1217, 1230, 1237, 1424, 1716], "notic": [0, 1716, 1718, 1720, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1734], "notifi": [1260, 1508, 1515, 1539, 1540], "notimpl": [1140, 1576], "notimplementederror": 1576, "noverlap": [1277, 1285, 1434, 1523], "now": [0, 1713, 1716, 1718, 1720, 1721, 1722, 1723, 1725, 1726, 1728, 1729, 1730, 1731, 1733, 1734], "np": [189, 256, 266, 279, 317, 318, 569, 579, 1032, 1037, 1240, 1252, 1266, 1398, 1431, 1435, 1499, 1532, 1555, 1574, 1576, 1629, 1717, 1718, 1720, 1721, 1725, 1726, 1729, 1730, 1731, 1734], "npoint": [1717, 1718, 1730], "nrel": [1710, 1728, 1730], "nrel5": [1719, 1726, 1730], "nrel5mw": [1714, 1719, 1721, 1722, 1723, 1726, 1730, 1732, 1733, 1734], "nresult": 1732, "nrow": [1424, 1426], "nsector": [1264, 1268, 1281, 1282], "nstate": 1719, "nthe": 1576, "nthi": 1576, "null_typ": 1722, "nulltyp": [0, 686, 687, 688, 689, 690, 691, 1704, 1722], "num": 1432, "num2dat": 1432, "number": [0, 1, 17, 18, 24, 27, 43, 101, 108, 157, 178, 184, 187, 192, 193, 198, 199, 201, 202, 213, 219, 222, 260, 296, 302, 306, 312, 314, 319, 320, 367, 370, 413, 414, 415, 416, 424, 427, 430, 432, 444, 447, 449, 451, 453, 462, 466, 468, 474, 477, 482, 485, 493, 496, 508, 512, 517, 519, 520, 521, 557, 558, 593, 597, 599, 600, 604, 606, 607, 611, 651, 681, 698, 708, 758, 759, 883, 1011, 1016, 1039, 1040, 1041, 1042, 1043, 1044, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1096, 1135, 1141, 1143, 1155, 1160, 1166, 1178, 1187, 1191, 1199, 1203, 1205, 1215, 1240, 1250, 1264, 1266, 1268, 1269, 1277, 1281, 1282, 1285, 1397, 1398, 1399, 1402, 1406, 1413, 1414, 1415, 1417, 1424, 1426, 1427, 1434, 1435, 1442, 1445, 1446, 1447, 1478, 1485, 1508, 1511, 1518, 1523, 1525, 1532, 1533, 1538, 1539, 1540, 1541, 1551, 1555, 1627, 1690, 1711, 1716, 1720, 1722, 1724], "numcol": 1402, "numer": [747, 845, 853, 1134, 1266, 1267, 1269, 1430, 1432, 1435, 1442, 1506, 1513, 1535, 1538, 1539, 1540, 1704, 1716], "numpi": [0, 5, 27, 28, 32, 45, 47, 51, 55, 61, 65, 69, 89, 94, 103, 110, 159, 170, 178, 186, 187, 196, 201, 202, 216, 221, 227, 239, 248, 254, 255, 256, 257, 266, 278, 279, 280, 284, 293, 298, 299, 300, 301, 305, 313, 322, 323, 324, 325, 326, 330, 340, 345, 346, 347, 348, 349, 352, 360, 361, 365, 366, 394, 412, 414, 415, 418, 426, 436, 446, 457, 465, 470, 476, 479, 484, 487, 495, 499, 511, 539, 542, 547, 555, 556, 561, 563, 569, 570, 575, 579, 580, 583, 587, 591, 594, 595, 596, 598, 602, 605, 609, 612, 613, 614, 616, 620, 626, 632, 638, 643, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 733, 737, 741, 745, 747, 748, 749, 752, 756, 761, 762, 766, 767, 768, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 804, 805, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 832, 833, 840, 841, 848, 849, 857, 858, 860, 865, 866, 872, 873, 879, 885, 904, 906, 907, 914, 915, 919, 925, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1012, 1042, 1043, 1044, 1053, 1079, 1080, 1081, 1082, 1083, 1084, 1092, 1096, 1240, 1250, 1266, 1270, 1277, 1285, 1294, 1295, 1397, 1398, 1415, 1424, 1427, 1431, 1432, 1434, 1435, 1443, 1444, 1523, 1555, 1574, 1575, 1576, 1580, 1581, 1582, 1583, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1627, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1699, 1701, 1717, 1718, 1720, 1721, 1724, 1725, 1726, 1729, 1730, 1731, 1734], "numpyengin": [0, 394, 395, 1701, 1724], "numrow": 1402, "nw": [1451, 1497], "nwhich": 1576, "nx": [1397, 1399], "ny": [1397, 1399, 1725], "nygaard": 916, "o": [0, 1134, 1240, 1253, 1259, 1263, 1266, 1267, 1269, 1270, 1271, 1294, 1295, 1397, 1404, 1424, 1426, 1431, 1432, 1435, 1480, 1529, 1555, 1710, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1730, 1731, 1732, 1733, 1734], "o0": 1726, "o1": 1726, "o5eosxa": 829, "obei": [1134, 1548], "obj": [1122, 1431, 1626, 1706], "object": [0, 1, 17, 27, 39, 44, 46, 49, 53, 59, 63, 67, 87, 92, 101, 117, 118, 157, 159, 169, 170, 172, 173, 178, 185, 187, 190, 191, 195, 202, 204, 205, 211, 212, 213, 222, 224, 225, 231, 237, 244, 252, 253, 257, 260, 262, 266, 269, 270, 276, 283, 289, 296, 306, 308, 314, 316, 317, 318, 327, 329, 332, 339, 343, 351, 358, 361, 364, 385, 387, 390, 395, 397, 403, 407, 416, 419, 421, 427, 429, 430, 432, 437, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 488, 490, 496, 500, 504, 512, 514, 517, 524, 525, 529, 530, 535, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 816, 819, 822, 829, 833, 837, 841, 845, 849, 853, 854, 858, 862, 869, 876, 882, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1005, 1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1058, 1062, 1066, 1088, 1090, 1091, 1096, 1109, 1110, 1111, 1114, 1115, 1117, 1118, 1119, 1122, 1134, 1153, 1240, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1301, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1414, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1445, 1446, 1447, 1472, 1480, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1539, 1540, 1541, 1542, 1551, 1552, 1555, 1560, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1625, 1626, 1632, 1697, 1702, 1706, 1714, 1716, 1719, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1732, 1733, 1734], "obligatori": 1037, "obliqu": 1535, "observ": [1134, 1242, 1260, 1266, 1440, 1508, 1515, 1718], "obtain": [1719, 1723, 1733], "obukhof": 1716, "obukhov": [1568, 1569, 1571, 1572, 1665, 1708, 1719], "obvious": 1729, "occur": [1294, 1295, 1402, 1530], "occurr": [1135, 1141, 1264, 1268, 1281, 1282], "ocean": 1515, "oct": 1576, "octagon": 1431, "od": 1726, "oder": 1724, "odir": 526, "off": [1250, 1253, 1255, 1258, 1259, 1260, 1261, 1262, 1263, 1267, 1277, 1285, 1289, 1291, 1292, 1394, 1404, 1415, 1419, 1427, 1431, 1432, 1434, 1478, 1508, 1515, 1524, 1718, 1724, 1727, 1728], "offer": [1723, 1724, 1731], "offsect": 1268, "offset": [0, 414, 1134, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1353, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1447, 1449, 1496, 1497, 1502, 1523, 1524, 1533, 1535, 1538], "offset_deg": 414, "offset_transform": [1266, 1270, 1294, 1295, 1397, 1424, 1426, 1435], "ofil": [1631, 1706], "often": [1294, 1295, 1716, 1719, 1724], "oid": [1134, 1440], "ok": [1718, 1720, 1731], "older": [0, 1735], "onam": 1631, "onc": [0, 1, 557, 641, 642, 1134, 1220, 1225, 1447, 1715, 1720, 1721, 1729, 1730, 1731, 1734], "one": [0, 244, 248, 289, 293, 300, 305, 449, 451, 466, 564, 566, 572, 573, 595, 598, 599, 600, 605, 612, 907, 1085, 1095, 1134, 1152, 1242, 1250, 1251, 1253, 1261, 1264, 1266, 1267, 1268, 1277, 1281, 1282, 1285, 1289, 1292, 1294, 1295, 1324, 1357, 1397, 1398, 1399, 1402, 1413, 1415, 1424, 1425, 1426, 1427, 1431, 1434, 1442, 1468, 1478, 1480, 1497, 1502, 1523, 1525, 1531, 1532, 1533, 1539, 1540, 1541, 1543, 1544, 1574, 1576, 1635, 1703, 1704, 1705, 1706, 1714, 1716, 1718, 1719, 1723, 1724, 1725, 1733, 1734], "onepointflowmultiheightnctimeseri": [0, 449, 450, 1703], "onepointflowmultiheighttimeseri": [0, 451, 452, 1703], "onepointflowst": [0, 449, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 1703, 1713], "onepointflowtimeseri": [0, 466, 467, 1703, 1714, 1720], "ones": [1435, 1574, 1724], "onesid": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "onli": [0, 1, 17, 27, 157, 178, 298, 345, 408, 557, 562, 641, 642, 764, 819, 820, 822, 825, 837, 838, 845, 846, 854, 855, 862, 866, 869, 873, 876, 879, 911, 915, 916, 919, 922, 923, 925, 1060, 1062, 1118, 1119, 1134, 1143, 1170, 1173, 1177, 1178, 1181, 1190, 1194, 1195, 1199, 1206, 1240, 1241, 1252, 1256, 1261, 1266, 1269, 1271, 1285, 1291, 1292, 1294, 1295, 1296, 1318, 1356, 1397, 1398, 1402, 1410, 1416, 1425, 1426, 1430, 1431, 1434, 1435, 1442, 1464, 1468, 1484, 1493, 1498, 1511, 1512, 1518, 1519, 1523, 1524, 1530, 1532, 1538, 1539, 1540, 1541, 1543, 1544, 1550, 1551, 1555, 1560, 1574, 1704, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1722, 1724, 1725, 1727, 1730, 1731, 1734], "onlinelibrari": [845, 853], "onoffseq": 1292, "onset": [802, 882, 883, 888, 903], "onto": [651, 652], "op": [1170, 1173, 1194, 1195, 1206], "opac": 1402, "opaqu": [1292, 1397, 1402, 1424, 1425, 1426, 1442, 1537, 1539, 1540], "open": [0, 870, 1264, 1398, 1533, 1576, 1711], "open_dataset": [427, 428, 1723], "opencv": 1574, "opening_angl": [869, 870, 1722], "openmpi": 1724, "oper": [252, 366, 934, 939, 944, 949, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1018, 1034, 1035, 1036, 1134, 1255, 1286, 1290, 1413, 1484, 1498, 1511, 1518, 1528, 1699, 1716, 1726], "oppos": 1266, "opposit": [1266, 1543, 1544, 1717], "opt": [0, 1692, 1713, 1715, 1735], "optim": [0, 916, 1692, 1711, 1713, 1715, 1716, 1724], "optin": [535, 1629], "option": [0, 3, 4, 5, 18, 19, 28, 32, 39, 44, 54, 59, 60, 72, 73, 77, 82, 88, 100, 101, 117, 118, 158, 159, 160, 161, 162, 169, 170, 172, 173, 177, 178, 179, 180, 181, 183, 188, 190, 191, 196, 198, 199, 204, 209, 211, 212, 213, 214, 223, 224, 227, 243, 248, 261, 266, 272, 274, 276, 288, 293, 297, 298, 300, 303, 306, 309, 311, 315, 316, 317, 318, 323, 324, 325, 326, 331, 333, 338, 345, 349, 350, 352, 353, 362, 367, 376, 380, 382, 385, 387, 389, 390, 395, 397, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 425, 427, 428, 430, 431, 432, 434, 442, 443, 445, 447, 449, 450, 451, 452, 453, 454, 461, 464, 466, 467, 468, 469, 473, 475, 477, 478, 485, 486, 492, 494, 496, 498, 506, 507, 510, 512, 513, 515, 516, 517, 519, 520, 521, 525, 532, 535, 536, 547, 565, 573, 595, 600, 607, 614, 619, 637, 649, 650, 652, 668, 673, 675, 676, 677, 687, 692, 693, 702, 703, 713, 714, 715, 722, 723, 732, 736, 740, 744, 748, 759, 765, 772, 776, 777, 782, 785, 792, 799, 800, 802, 863, 870, 877, 882, 883, 912, 917, 923, 1005, 1007, 1010, 1011, 1014, 1016, 1020, 1025, 1032, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1048, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1062, 1063, 1064, 1065, 1066, 1068, 1071, 1073, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1107, 1109, 1110, 1114, 1115, 1116, 1118, 1119, 1121, 1132, 1133, 1134, 1135, 1138, 1142, 1143, 1149, 1199, 1200, 1240, 1250, 1251, 1260, 1261, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1413, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1453, 1464, 1484, 1492, 1498, 1508, 1511, 1512, 1515, 1518, 1519, 1523, 1525, 1526, 1529, 1530, 1532, 1533, 1539, 1540, 1541, 1542, 1550, 1551, 1552, 1555, 1560, 1578, 1582, 1588, 1592, 1596, 1599, 1603, 1606, 1610, 1614, 1618, 1622, 1624, 1626, 1627, 1628, 1629, 1632, 1640, 1705, 1710, 1716, 1723, 1724, 1728, 1731, 1732, 1736], "orbit": 869, "ord": 1576, "order": [0, 1, 2, 17, 19, 20, 27, 37, 49, 55, 136, 227, 254, 255, 256, 266, 278, 279, 298, 300, 343, 345, 346, 347, 348, 349, 352, 360, 365, 543, 555, 556, 561, 569, 575, 579, 595, 714, 722, 758, 761, 762, 764, 766, 767, 768, 771, 773, 774, 775, 776, 779, 780, 781, 782, 784, 787, 788, 790, 791, 794, 796, 797, 801, 804, 805, 806, 810, 811, 814, 815, 820, 821, 824, 825, 826, 832, 840, 848, 857, 865, 866, 872, 873, 879, 885, 904, 914, 915, 919, 925, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1134, 1264, 1268, 1281, 1282, 1367, 1382, 1398, 1404, 1405, 1506, 1508, 1511, 1513, 1515, 1518, 1538, 1539, 1540, 1666, 1667, 1668, 1693, 1694, 1698, 1704, 1708, 1714, 1716, 1718, 1720, 1724, 1726, 1728, 1729, 1730], "order_inv": [1667, 1708, 1718, 1724, 1729, 1730], "order_ssel": [1668, 1708, 1718, 1724, 1729, 1730], "orderi": [136, 1698], "org": [0, 540, 801, 854, 862, 876, 882, 888, 916, 922, 986, 1266, 1269, 1271, 1576, 1711], "organ": [1716, 1722], "orient": [1039, 1040, 1041, 1067, 1068, 1134, 1289, 1292, 1398, 1424, 1426, 1435, 1443, 1444, 1526, 1529, 1539, 1540, 1554, 1557, 1728, 1729], "origin": [27, 101, 102, 191, 365, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1178, 1269, 1292, 1339, 1402, 1417, 1441, 1451, 1479, 1480, 1489, 1523, 1524, 1539, 1540, 1543, 1544, 1576, 1617, 1713, 1716, 1720, 1724], "orst": 0, "orthogon": [1292, 1608, 1716], "oscil": 1720, "oserror": 1576, "other": [0, 327, 328, 358, 359, 364, 468, 553, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1085, 1134, 1143, 1147, 1152, 1153, 1168, 1178, 1180, 1199, 1208, 1236, 1275, 1292, 1362, 1404, 1405, 1406, 1430, 1468, 1512, 1519, 1521, 1522, 1525, 1529, 1541, 1542, 1547, 1576, 1703, 1704, 1705, 1715, 1716, 1720, 1721, 1722, 1724, 1726, 1728, 1734], "other_paramet": [1541, 1542], "other_transform": [1143, 1154, 1178, 1199], "otherwis": [266, 1103, 1134, 1135, 1138, 1140, 1190, 1214, 1233, 1240, 1269, 1271, 1308, 1339, 1397, 1416, 1424, 1442, 1448, 1468, 1511, 1518, 1523, 1524, 1546, 1548, 1550, 1551, 1555, 1724], "our": [1720, 1721, 1722, 1723, 1725, 1726, 1728, 1729, 1733, 1734], "out": [117, 118, 599, 1152, 1215, 1402, 1426, 1435, 1537, 1539, 1540, 1576, 1630, 1633, 1704, 1716, 1718, 1720, 1722, 1723, 1724, 1725, 1728, 1729, 1731, 1734], "out0": [613, 614], "out1": [613, 614], "out_coord": 202, "out_dir": [0, 111, 115, 127, 525, 1045, 1046, 1698], "out_fname_fun": [1045, 1046], "out_kwarg": [1631, 1706], "out_var": [46, 49, 53, 59, 63, 67, 87, 92, 101, 198, 202, 205, 213, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 379, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 614, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722], "outcom": 1140, "outer": [0, 1134, 1343, 1410, 1425, 1487, 1533, 1539, 1540, 1729], "outi": [613, 614], "outlier": [1269, 1271, 1398, 1399], "outlin": [1397, 1425], "output": [0, 1, 4, 5, 27, 28, 46, 47, 48, 49, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 87, 89, 90, 92, 94, 95, 101, 103, 107, 111, 115, 117, 127, 195, 196, 197, 202, 205, 213, 216, 218, 225, 227, 234, 237, 239, 241, 242, 243, 244, 248, 250, 252, 266, 283, 284, 286, 287, 288, 289, 293, 294, 296, 304, 306, 310, 329, 330, 332, 349, 369, 385, 390, 395, 397, 403, 407, 416, 417, 418, 422, 427, 428, 430, 432, 434, 436, 441, 447, 449, 451, 453, 457, 460, 466, 468, 470, 472, 477, 478, 479, 481, 485, 486, 487, 491, 496, 498, 499, 505, 512, 517, 525, 526, 543, 544, 547, 548, 581, 583, 585, 586, 587, 588, 589, 591, 592, 593, 599, 606, 613, 614, 616, 617, 618, 619, 620, 622, 623, 626, 628, 630, 632, 634, 636, 638, 640, 641, 644, 647, 651, 653, 655, 656, 659, 660, 661, 662, 663, 664, 665, 666, 667, 670, 671, 672, 674, 676, 679, 684, 686, 688, 691, 692, 695, 701, 702, 705, 711, 712, 714, 716, 721, 722, 725, 730, 782, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1134, 1143, 1166, 1169, 1170, 1173, 1178, 1191, 1193, 1194, 1195, 1199, 1205, 1206, 1377, 1392, 1402, 1425, 1482, 1483, 1527, 1631, 1640, 1658, 1690, 1692, 1697, 1698, 1708, 1710, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "output_coord": [46, 49, 53, 59, 63, 67, 87, 92, 101, 195, 197, 213, 225, 237, 241, 244, 252, 283, 286, 289, 296, 306, 329, 332, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722], "output_dim": [1143, 1166, 1169, 1170, 1173, 1177, 1178, 1191, 1193, 1194, 1195, 1199, 1205, 1206], "output_farm_var": [46, 48, 49, 52, 59, 62, 63, 66, 87, 90, 92, 95, 225, 234, 237, 242, 244, 250, 252, 296, 304, 329, 332, 543, 544, 548, 593, 599, 606, 613, 617, 618, 622, 623, 628, 630, 634, 636, 640, 641, 647, 651, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 684, 686, 691, 692, 701, 702, 711, 712, 714, 721, 722, 730], "output_i": 525, "output_point_var": [53, 57, 67, 71, 101, 107, 213, 218, 283, 287, 289, 294, 306, 310, 416, 422, 427, 430, 432, 441, 447, 449, 451, 453, 460, 466, 468, 472, 477, 481, 485, 491, 496, 505, 512, 517, 581, 585, 586, 588, 589, 592], "output_typ": [1009, 1018, 1038, 1045, 1048, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093], "output_var": [48, 52, 57, 62, 66, 71, 90, 95, 107, 218, 234, 242, 250, 287, 294, 304, 310, 416, 417, 422, 428, 432, 434, 441, 447, 460, 472, 481, 485, 486, 491, 496, 498, 505, 517, 548, 581, 582, 585, 588, 592, 617, 618, 619, 622, 628, 634, 640, 647, 651, 652, 655, 660, 663, 666, 671, 684, 691, 701, 711, 721, 730, 1710, 1716, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1733, 1734], "outsid": [599, 1251, 1399, 1430, 1463, 1537, 1538, 1539, 1540, 1704, 1716, 1721], "outside_": [1578, 1588, 1596, 1603, 1610, 1618], "ovar": [416, 432, 485, 496, 581, 651], "over": [0, 314, 322, 922, 1018, 1023, 1024, 1053, 1060, 1062, 1134, 1265, 1267, 1270, 1277, 1285, 1291, 1334, 1398, 1420, 1428, 1434, 1448, 1474, 1478, 1480, 1523, 1533, 1539, 1540, 1541, 1574, 1660, 1708, 1709, 1716, 1723, 1724, 1727, 1729, 1733], "overal": [0, 27, 36, 37, 42, 1729], "overflowerror": 1576, "overhang": 1253, "overlap": [557, 572, 599, 600, 1277, 1285, 1291, 1404, 1405, 1434, 1523, 1716, 1727], "overload": [0, 1695, 1696], "overrid": [1135, 1140, 1219, 1235, 1266, 1318, 1375, 1390, 1436, 1533, 1535, 1539, 1540], "overridden": [1143, 1150, 1160, 1166, 1178, 1187, 1191, 1199, 1203, 1205, 1237, 1269, 1286, 1287, 1290, 1298, 1318, 1364, 1365, 1366, 1379, 1380, 1381, 1528], "overrul": [525, 1710], "overview": [0, 1402, 1713, 1716, 1730], "overwrit": [56, 70, 106, 182, 267, 323, 324, 645, 680, 769, 807, 817, 827, 834, 842, 850, 859, 880, 886, 908, 920, 927], "overwritten": 332, "ow": 1713, "own": [0, 922, 923, 1399, 1730], "p": [0, 1, 2, 17, 27, 623, 677, 692, 693, 703, 712, 715, 723, 1050, 1095, 1127, 1129, 1134, 1248, 1402, 1425, 1431, 1576, 1655, 1658, 1659, 1669, 1689, 1691, 1708, 1713, 1716, 1718, 1719, 1721, 1723, 1724, 1726, 1728, 1730, 1731, 1732, 1733, 1734], "p0": [1723, 1726, 1732, 1733], "p75": [0, 1018, 1025], "p90": [0, 1018, 1025], "p_": [1277, 1285, 1434, 1734], "p_ct": [677, 693, 703, 714, 715, 723], "p_lim": [623, 624, 1722], "p_max": [1093, 1095, 1577, 1580, 1584, 1586, 1590, 1594, 1597, 1601, 1604, 1608, 1612, 1616, 1620, 1726], "p_min": [1577, 1580, 1581, 1584, 1586, 1590, 1591, 1594, 1597, 1598, 1601, 1604, 1605, 1608, 1612, 1613, 1616, 1620, 1621], "p_nearest": [1582, 1592, 1599, 1606, 1614, 1622], "p_nom": [1018, 1020], "p_nomin": [0, 332, 333, 1032, 1641, 1655, 1708, 1716, 1722, 1724], "p_p": [677, 693, 703, 715, 723, 1734], "p_rate": 0, "p_unit": [0, 131, 332, 333, 1698, 1716, 1722, 1724], "p_unit_w": 1032, "pa_alpha": [1670, 1708], "pa_beta": [1671, 1708], "packag": [0, 375, 1097, 1099, 1100, 1269, 1576, 1624, 1692, 1702, 1703, 1704, 1706, 1709, 1710, 1713, 1714, 1715, 1716, 1719, 1722, 1724, 1730, 1734, 1735, 1736], "pad": [1134, 1250, 1265, 1277, 1285, 1364, 1365, 1379, 1380, 1415, 1416, 1427, 1434, 1502, 1509, 1516, 1523, 1537], "pad_point": [1134, 1364, 1365, 1379, 1380], "pad_to": [1134, 1250, 1277, 1285, 1415, 1427, 1434, 1523], "page": [0, 1711], "pair": [1134, 1269, 1280, 1411, 1451, 1538], "pan": [1134, 1272, 1286, 1290, 1324, 1336, 1468, 1484, 1498, 1511, 1518, 1528], "panda": [0, 311, 408, 409, 428, 432, 434, 442, 496, 498, 506, 519, 520, 521, 581, 582, 618, 619, 636, 637, 651, 652, 672, 673, 674, 675, 676, 677, 692, 693, 702, 703, 714, 715, 722, 723, 748, 1009, 1018, 1025, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1038, 1045, 1050, 1051, 1054, 1055, 1058, 1060, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1091, 1093, 1127, 1132, 1133, 1431, 1576, 1703, 1704, 1706, 1714, 1720, 1725, 1726, 1728, 1730, 1732, 1734], "pandasfilehelp": [1127, 1128, 1129, 1130, 1131, 1132, 1133, 1706], "panel": [1720, 1731], "paper": [829, 1713], "par": [225, 226, 543, 888, 896, 909, 1067, 1068, 1096, 1121], "parallel": [0, 46, 49, 53, 59, 63, 67, 87, 92, 101, 195, 213, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 396, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1134, 1292, 1692, 1701, 1710, 1713, 1716, 1720], "paramer": [673, 713], "paramet": [0, 17, 26, 27, 53, 195, 225, 244, 289, 351, 388, 416, 427, 432, 453, 485, 496, 543, 544, 667, 676, 692, 702, 712, 714, 722, 747, 758, 776, 784, 791, 801, 862, 869, 876, 882, 888, 909, 911, 916, 922, 1118, 1127, 1134, 1349, 1559, 1661, 1670, 1671, 1699, 1703, 1704, 1706, 1708, 1710, 1714, 1716, 1718, 1722, 1723, 1724, 1730, 1732, 1733, 1736], "parcel": 1729, "parent": [1251, 1406, 1443, 1444, 1710, 1719], "park": 916, "pars": [0, 377, 378, 416, 417, 485, 486, 1431, 1700, 1702, 1722], "pars_boundari": [1578, 1588, 1596, 1603, 1610, 1618], "pars_dist": [1578, 1588, 1596, 1603, 1610, 1618], "parse_d": [447, 448, 517, 518, 1720], "parse_math": 1535, "parse_pct_file_nam": [377, 1700, 1702], "parse_pct_two_fil": [378, 1700, 1702], "parsed_data": [377, 378], "part": [231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 526, 536, 557, 584, 621, 646, 697, 707, 718, 727, 1134, 1143, 1157, 1158, 1170, 1173, 1175, 1176, 1178, 1181, 1184, 1185, 1194, 1195, 1197, 1198, 1199, 1206, 1207, 1266, 1359, 1431, 1435, 1560, 1703, 1716, 1719, 1720, 1723, 1728], "partial": [0, 1, 3, 11, 17, 27, 254, 258, 276, 281, 530, 533, 555, 557, 562, 564, 566, 572, 578, 809, 812, 1430, 1699, 1704, 1709, 1712, 1713, 1723, 1724, 1727, 1733], "partial_wak": [0, 1, 3, 11, 17, 27, 530, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 1717, 1718, 1722, 1723, 1725, 1731, 1733], "partialaxiwak": [0, 557, 558, 559, 560, 561, 809, 1704, 1716, 1722, 1724], "partialcentr": [0, 557, 562, 563, 572, 1704, 1716, 1722], "partialdistslicedwak": 812, "partialgrid": [0, 564, 565, 1704, 1716, 1722], "partialsegreg": [0, 564, 566, 567, 568, 569, 570, 571, 1704, 1716], "partialtophat": [572, 573, 574, 575, 576, 577, 1704, 1716, 1722], "partialwakemodel": 530, "partialwakesmodel": [1, 11, 254, 258, 276, 277, 278, 279, 280, 281, 282, 555, 566, 578, 1699, 1704], "particular": [1269, 1417, 1435, 1442, 1448, 1713, 1724, 1732], "particularli": [1402, 1524], "partli": 1448, "pass": [1107, 1240, 1250, 1251, 1260, 1261, 1265, 1266, 1267, 1277, 1285, 1291, 1292, 1294, 1295, 1397, 1398, 1399, 1402, 1404, 1405, 1406, 1413, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1435, 1443, 1444, 1480, 1502, 1507, 1508, 1511, 1512, 1514, 1515, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1526, 1535, 1539, 1540, 1541, 1542, 1555, 1716, 1720, 1724], "pass_through": [1143, 1167, 1178, 1199], "passiv": 1720, "past": [1269, 1271], "patch": [1134, 1248, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1271, 1277, 1280, 1285, 1289, 1291, 1293, 1294, 1295, 1325, 1394, 1397, 1398, 1404, 1405, 1415, 1422, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1447, 1460, 1464, 1468, 1469, 1478, 1524, 1526, 1532, 1533, 1535], "patch_artist": [1269, 1271], "patcha": 1251, "patchartist": 1269, "patchb": 1251, "patchcollect": 1532, "patches0": 1398, "patches1": 1398, "path": [115, 116, 117, 118, 375, 377, 378, 410, 411, 427, 428, 432, 434, 496, 498, 521, 525, 526, 532, 636, 637, 651, 652, 673, 675, 676, 677, 692, 693, 702, 703, 713, 714, 715, 722, 723, 1009, 1018, 1038, 1045, 1047, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1097, 1101, 1102, 1103, 1108, 1132, 1133, 1134, 1143, 1174, 1175, 1176, 1178, 1196, 1197, 1198, 1199, 1207, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1317, 1359, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1464, 1477, 1493, 1524, 1526, 1533, 1535, 1601, 1625, 1628, 1629, 1630, 1631, 1640, 1697, 1706, 1710, 1713, 1716, 1729, 1732], "path_effect": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1477, 1524, 1533, 1535], "pathcollect": [1011, 1033, 1442], "pathlib": [115, 116, 117, 118, 377, 378, 525, 526, 1045, 1047, 1097, 1103, 1535, 1719], "pattern": [0, 416, 417, 485, 486, 1134, 1430, 1524, 1540, 1716, 1726], "pchang": [1134, 1423], "pcolor": [1134, 1416, 1424, 1425, 1426, 1541], "pcolorfast": [1134, 1425], "pcolorimag": 1425, "pcolormesh": [1087, 1134, 1399, 1424, 1425, 1426], "pcolormesh_grid": [1424, 1426], "pct": 1430, "pct_file": [530, 532], "pctcurv": 1719, "pctdistanc": 1430, "pctfile": [672, 673, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 712, 713, 1704, 1710, 1716, 1719, 1722, 1724, 1728, 1730], "pctfromtwo": [674, 675, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 1704], "pctsinglefil": 0, "pcttwofil": 0, "pd": [1060, 1062, 1063, 1576, 1720, 1725, 1726, 1728, 1734], "pd_file_read_par": [619, 637, 652, 673, 677, 693], "pd_file_read_pars_cp": 675, "pd_file_read_pars_ct": [675, 703, 715, 723], "pd_file_read_pars_p": [703, 715, 723], "pd_read_par": [432, 434, 498, 582, 748], "pdata": [67, 69, 317, 318, 581, 583, 586, 587, 589, 591, 860], "pdf": [829, 869, 916, 922, 986, 1402, 1425], "peak": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "pedersen": [916, 1716], "pendingdeprecationwarn": 1576, "pentagon": 1431, "peopl": 1292, "pep": [1135, 1136], "per": [0, 147, 300, 314, 320, 432, 595, 599, 600, 606, 607, 809, 1018, 1027, 1029, 1030, 1031, 1032, 1035, 1036, 1250, 1267, 1277, 1285, 1289, 1398, 1415, 1427, 1434, 1435, 1523, 1533, 1698, 1703, 1724, 1728], "percentil": 1269, "perform": [1220, 1222, 1240, 1250, 1252, 1255, 1269, 1272, 1277, 1285, 1415, 1419, 1427, 1434, 1441, 1523, 1531, 1555, 1713, 1724, 1725], "period": [520, 637, 1443], "periodogram": [1285, 1434, 1523], "permissionerror": 1576, "perpendicular": [1349, 1492, 1529], "persist": [407, 1484, 1498, 1511, 1518], "persist_fdata": 5, "persist_mdata": 5, "persist_pdata": 5, "person": 0, "persu": 1728, "pgf": 1492, "phase": [1134, 1250, 1415, 1427, 1523], "phase_spectrum": [1134, 1250, 1415, 1427, 1523], "physic": [1134, 1302, 1448, 1461, 1714, 1724], "pi": [1264, 1268, 1281, 1282, 1499, 1720], "pick": [743, 1039, 1040, 1041, 1134, 1279, 1338, 1428, 1429, 1478, 1543, 1544, 1716, 1718], "pickabl": [1134, 1338, 1428, 1429], "picker": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1428, 1431, 1432, 1434, 1435, 1447, 1478, 1524, 1533, 1535], "pickev": 1478, "pickradiu": [1250, 1258, 1261, 1262, 1266, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1524], "pie": [1134, 1430], "piersol": [1277, 1285, 1434], "pii": [837, 845, 853], "pil": 1402, "pip": [0, 1710, 1713, 1724, 1735, 1737], "pirrung": 540, "pivot": [1266, 1435], "pixel": [1134, 1251, 1280, 1356, 1397, 1402, 1424, 1425, 1426, 1431, 1435, 1482, 1483, 1492, 1493, 1524, 1539, 1540], "place": [1039, 1040, 1041, 1042, 1043, 1044, 1251, 1265, 1269, 1294, 1295, 1364, 1365, 1366, 1379, 1380, 1381, 1402, 1411, 1417, 1430, 1443, 1444, 1524, 1529, 1530, 1531, 1533, 1535, 1539, 1540, 1721, 1726], "placehold": [101, 1696], "plain": [0, 1432, 1538], "plan": [0, 1710, 1715], "plane": [0, 299, 553, 594, 602, 609, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1435, 1608, 1704, 1706, 1716, 1717, 1729], "playground": 1725, "pleas": [1261, 1512, 1519, 1711, 1713, 1715, 1724, 1737], "plot": [0, 1009, 1011, 1014, 1015, 1016, 1017, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1058, 1062, 1063, 1064, 1066, 1067, 1068, 1069, 1072, 1074, 1085, 1087, 1091, 1093, 1095, 1096, 1134, 1240, 1250, 1251, 1258, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1318, 1319, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1413, 1414, 1415, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1480, 1484, 1498, 1508, 1511, 1515, 1518, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1539, 1541, 1542, 1548, 1550, 1551, 1552, 1555, 1578, 1588, 1596, 1603, 1610, 1618, 1705, 1717, 1718, 1720, 1721, 1723, 1725, 1726, 1728, 1730, 1732, 1733, 1734], "plot_curv": [1093, 1095, 1719, 1726], "plot_dat": [1134, 1432], "plot_map": [1085, 1087, 1710, 1726], "plotli": 0, "plotly_help": 0, "plotnonfinit": 1442, "plt": [1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1087, 1095, 1096, 1252, 1398, 1406, 1431, 1576, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "plt_show": 1710, "plu": [366, 934, 939, 944, 949, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1398, 1431, 1480, 1629, 1632, 1729], "plug": [1714, 1720], "plugin": [0, 27, 28, 96, 1067, 1072, 1696, 1705, 1729], "pluss": 1431, "pmask": [1722, 1726, 1728], "pmax_": 1726, "pmax_0": 1726, "pmax_1": 1726, "pmax_2": 1726, "pmax_3": 1726, "pmax_4": 1726, "pmax_arg": 1095, "pmodel": 213, "po": [1134, 1220, 1221, 1479], "point": [0, 1, 5, 17, 25, 27, 28, 32, 35, 42, 53, 55, 67, 69, 100, 103, 119, 128, 129, 132, 133, 146, 147, 150, 157, 162, 169, 170, 178, 198, 199, 201, 205, 211, 213, 214, 216, 253, 254, 255, 256, 258, 259, 266, 276, 278, 279, 280, 282, 283, 284, 285, 289, 293, 296, 298, 299, 300, 301, 302, 305, 314, 317, 318, 320, 322, 327, 340, 343, 347, 348, 349, 358, 360, 363, 364, 365, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 412, 414, 415, 418, 436, 449, 451, 453, 456, 457, 466, 470, 479, 487, 499, 525, 530, 550, 552, 553, 555, 556, 557, 558, 561, 562, 563, 564, 566, 569, 570, 572, 575, 578, 579, 580, 583, 587, 589, 591, 593, 594, 595, 596, 597, 598, 599, 600, 602, 604, 605, 606, 607, 609, 611, 612, 758, 759, 762, 764, 767, 768, 771, 774, 775, 776, 777, 780, 781, 782, 784, 785, 788, 790, 791, 792, 796, 797, 801, 805, 806, 809, 810, 811, 812, 814, 815, 819, 820, 821, 822, 824, 825, 826, 829, 832, 835, 837, 840, 843, 845, 848, 851, 853, 854, 857, 860, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 882, 885, 904, 911, 914, 915, 916, 919, 922, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1039, 1040, 1041, 1042, 1043, 1044, 1051, 1052, 1053, 1058, 1059, 1060, 1062, 1064, 1066, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1091, 1092, 1134, 1143, 1152, 1171, 1177, 1178, 1199, 1214, 1233, 1240, 1250, 1251, 1258, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1277, 1279, 1280, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1364, 1365, 1379, 1380, 1394, 1397, 1398, 1402, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1478, 1502, 1507, 1514, 1523, 1524, 1532, 1537, 1539, 1540, 1541, 1542, 1546, 1551, 1555, 1577, 1580, 1581, 1582, 1583, 1584, 1586, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1616, 1620, 1621, 1622, 1623, 1629, 1634, 1635, 1693, 1694, 1698, 1699, 1703, 1704, 1705, 1706, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1727, 1728, 1730, 1731, 1732, 1733, 1734, 1736], "point_data": [198, 205, 211, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407], "point_dict_exterior": 1629, "point_dict_interior": 1629, "point_model": [1, 5, 17, 213, 214, 530, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 1722], "point_result": [5, 27, 32, 42, 162, 525, 1053, 1717, 1718, 1730], "pointcalcul": [0, 1051, 1052, 1053, 1705], "pointdatamodel": [5, 53, 67, 214, 215, 283, 284, 285, 286, 287, 288, 289, 290, 292, 306, 530, 581, 586, 589, 1694, 1699, 1704], "pointdatamodellist": [53, 54, 213, 289, 290, 291, 292, 293, 294, 295, 1699], "points_dist": [1577, 1582, 1584, 1586, 1592, 1594, 1599, 1601, 1606, 1608, 1614, 1616, 1622], "points_insid": [1577, 1583, 1584, 1586, 1593, 1594, 1600, 1601, 1607, 1608, 1615, 1616, 1623], "pointwakescalcul": [53, 54, 55, 56, 57, 58, 1694], "polar": [540, 1134, 1143, 1178, 1199, 1251, 1272, 1273, 1291, 1319, 1406, 1484, 1498], "polaraffin": [1134, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198], "polarax": [1484, 1498], "polartransform": [1134, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207], "poli": 1601, "pollut": [1264, 1268, 1281, 1282], "polycollect": [1266, 1270, 1294, 1295, 1397, 1435, 1525, 1550, 1551], "polygon": [1134, 1266, 1293, 1294, 1295, 1398, 1426, 1435, 1601, 1602, 1629, 1706], "polynom_solv": 1574, "polynomi": [0, 540, 1574, 1704, 1706], "polyquadmesh": [1424, 1426], "pool": [0, 396, 1701, 1718, 1720, 1724], "poolengin": [393, 396, 397, 399, 405, 1701], "pop": [111, 130, 187, 222, 260, 314, 1105, 1110, 1111, 1698], "pop_item": [111, 187, 222, 260, 314, 1105, 1110, 1111], "popul": [130, 1698, 1719], "port": 1734, "porteagel": [0, 1670, 1671, 1708], "porteagel_linear": 1734, "porteagelwak": 0, "port\u00e9": [801, 876, 882, 888, 1716], "posit": [0, 323, 324, 326, 1096, 1134, 1199, 1208, 1220, 1221, 1223, 1224, 1251, 1252, 1258, 1262, 1265, 1266, 1267, 1269, 1270, 1271, 1291, 1292, 1293, 1294, 1295, 1339, 1342, 1357, 1397, 1404, 1414, 1416, 1435, 1436, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1451, 1453, 1464, 1479, 1484, 1485, 1493, 1502, 1507, 1508, 1511, 1512, 1514, 1515, 1518, 1519, 1526, 1529, 1530, 1533, 1535, 1539, 1540, 1541, 1543, 1544, 1550, 1551, 1627, 1706, 1714, 1716, 1720, 1725, 1726, 1731], "position": [1425, 1539, 1540, 1541], "posixpath": 1719, "possibl": [1134, 1260, 1265, 1269, 1271, 1338, 1397, 1398, 1424, 1426, 1439, 1442, 1453, 1460, 1468, 1484, 1493, 1498, 1499, 1511, 1518, 1521, 1522, 1539, 1540, 1541, 1710, 1714, 1720, 1728], "possibli": [198, 208, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 599, 1214, 1233, 1704], "post": [227, 1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1415, 1427, 1431, 1432, 1434, 1524, 1530, 1713, 1724, 1736], "post_rotor": 25, "post_rotor_model": 225, "potenti": [829, 1398, 1716, 1717], "poulsen": 916, "pow": [940, 941, 974, 975, 980, 981, 1576, 1722], "power": [0, 131, 332, 333, 335, 528, 532, 623, 624, 672, 674, 676, 677, 681, 692, 693, 698, 702, 703, 708, 712, 714, 715, 722, 723, 940, 941, 974, 975, 980, 981, 1018, 1020, 1025, 1026, 1032, 1093, 1095, 1134, 1261, 1277, 1285, 1397, 1399, 1415, 1434, 1523, 1643, 1664, 1669, 1698, 1704, 1705, 1708, 1712, 1713, 1714, 1716, 1723, 1728, 1732, 1733, 1734], "power_mask": 0, "power_uncert": [1018, 1025], "powermask": [0, 623, 624, 625, 626, 627, 628, 629, 1704, 1716, 1722, 1726], "powernorm": 1399, "ppar": [1072, 1073], "practic": 1292, "pre": [96, 100, 225, 227, 837, 838, 845, 846, 854, 855, 1039, 1040, 1041, 1067, 1071, 1072, 1076, 1134, 1250, 1258, 1261, 1262, 1269, 1271, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1398, 1415, 1427, 1431, 1432, 1434, 1524, 1530, 1550, 1551, 1715, 1716, 1726, 1731, 1736], "pre_load": [416, 417, 485, 486, 1721], "pre_rotor": [25, 46, 225, 227, 237, 238, 252, 329, 543, 641, 642, 661, 664, 1716, 1725], "pre_rotor_model": 225, "pre_rotor_onli": [837, 838, 845, 846, 854, 855], "pre_str": 1626, "pre_wak": [25, 1718], "precalc": [1039, 1040, 1041], "preced": [1265, 1267, 1430, 1431, 1442, 1541], "precis": [1134, 1294, 1295, 1524], "predecessor": [0, 1713], "predict": [837, 845, 853, 1725], "preexist": 1256, "prefer": [0, 1424, 1426, 1442, 1715, 1724, 1727], "preferr": 1724, "premultipli": 1402, "present": [1135, 1142, 1266, 1438, 1508, 1524, 1714, 1726], "preserv": [1256, 1416], "press": [1286, 1528], "pressur": 1266, "prev_": [1, 17, 27, 157, 169, 170], "prev_farm_result": 17, "prev_result": [72, 74, 76, 79, 81, 83, 85], "prev_t": [1, 17, 27, 157, 169, 170], "prevent": [0, 1512, 1519], "previou": [0, 17, 20, 74, 79, 83, 266, 349, 364, 365, 782, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1256, 1416, 1507, 1514, 1718, 1720, 1729, 1731], "previous": [0, 1143, 1156, 1178, 1183, 1199, 1230, 1399, 1416, 1464], "prevous": 1731, "primarili": [1364, 1365, 1366, 1379, 1380, 1381], "principl": [1716, 1731], "print": [0, 1, 17, 27, 111, 157, 179, 187, 198, 210, 222, 260, 314, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 530, 536, 1009, 1011, 1018, 1038, 1045, 1049, 1051, 1054, 1058, 1064, 1077, 1078, 1085, 1088, 1091, 1093, 1105, 1109, 1110, 1111, 1117, 1218, 1417, 1576, 1626, 1706, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1733, 1734], "print_mem": [1626, 1706], "print_model": [1009, 1018, 1038, 1045, 1049, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093], "print_toc": [530, 536, 1118, 1119, 1560, 1722], "printout": [1719, 1730], "prior": [1134, 1256, 1459, 1509, 1516], "prnt": [111, 187, 222, 260, 314, 1105, 1109, 1110, 1111, 1117], "probabl": [1269, 1398, 1430, 1532], "probe": [1582, 1583, 1592, 1593, 1599, 1600, 1606, 1607, 1614, 1615, 1622, 1623, 1725], "problem": [0, 1419, 1724], "procedur": [1277, 1285, 1434], "process": [0, 198, 199, 398, 1134, 1428, 1701, 1710, 1717, 1718, 1720, 1724, 1725, 1731, 1732, 1733, 1736], "process_cpu_count": [0, 1724], "processengin": [0, 391, 398, 1701, 1710, 1720, 1724, 1725, 1731, 1732, 1733], "processlookuperror": 1576, "processor": [391, 1710, 1724], "produc": [0, 1253, 1269, 1271, 1402, 1425, 1426, 1633, 1706, 1717, 1726, 1732], "product": [986, 1285, 1704, 1716, 1720], "productsuperposit": 0, "profdata": [477, 478], "profdict": [477, 496], "profil": [0, 339, 340, 341, 342, 477, 478, 498, 731, 733, 734, 735, 737, 738, 739, 741, 742, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 756, 757, 916, 1563, 1567, 1699, 1704, 1707, 1713, 1717, 1718, 1719, 1723], "profile_pt": [1717, 1718], "profile_typ": [339, 342, 731, 735, 739, 743, 747, 751, 754], "progress": [379, 380, 1724, 1732], "progress_bar": [0, 379, 380, 384, 406], "project": [1134, 1178, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1286, 1289, 1290, 1291, 1294, 1295, 1364, 1365, 1366, 1379, 1380, 1381, 1394, 1397, 1404, 1406, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1498, 1524, 1528, 1713], "promot": [544, 1704], "prop": [1134, 1411, 1478, 1545], "prop_cycl": [1431, 1442, 1447], "prop_nam": [1135, 1138], "propag": [0, 1704, 1712, 1716], "proper": [1220, 1222, 1402, 1724], "properti": [1, 6, 8, 11, 12, 13, 15, 16, 17, 20, 21, 24, 26, 27, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 49, 53, 59, 63, 67, 87, 92, 101, 104, 111, 113, 114, 115, 116, 157, 163, 164, 167, 174, 176, 185, 187, 192, 193, 195, 198, 203, 207, 208, 213, 222, 225, 237, 244, 252, 253, 260, 262, 268, 270, 271, 276, 283, 289, 296, 306, 314, 319, 320, 327, 328, 329, 332, 339, 343, 351, 354, 355, 357, 358, 359, 364, 367, 370, 371, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 419, 427, 430, 432, 437, 447, 449, 451, 453, 466, 468, 477, 485, 488, 496, 500, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 909, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1008, 1118, 1124, 1125, 1126, 1134, 1135, 1138, 1143, 1155, 1178, 1190, 1199, 1240, 1242, 1250, 1251, 1253, 1254, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1270, 1271, 1277, 1278, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1394, 1397, 1398, 1400, 1401, 1402, 1404, 1411, 1412, 1414, 1415, 1420, 1422, 1423, 1424, 1426, 1427, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1447, 1461, 1478, 1480, 1484, 1498, 1502, 1507, 1511, 1512, 1514, 1518, 1519, 1524, 1525, 1526, 1527, 1529, 1531, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1545, 1547, 1548, 1549, 1552, 1555, 1576, 1714], "proport": [1134, 1268], "proportion": 1435, "protrud": 1435, "provid": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 231, 237, 244, 252, 253, 262, 266, 269, 276, 283, 289, 296, 306, 308, 327, 329, 332, 339, 343, 351, 356, 358, 364, 416, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1045, 1087, 1095, 1251, 1267, 1269, 1293, 1318, 1398, 1400, 1402, 1416, 1425, 1430, 1431, 1443, 1444, 1464, 1478, 1492, 1512, 1519, 1525, 1529, 1530, 1541, 1552, 1576, 1692, 1702, 1704, 1710, 1714, 1716, 1719, 1720, 1721, 1722, 1723, 1725, 1729, 1730], "psd": [1134, 1285, 1415, 1434, 1523], "pseudocolor": [1134, 1402, 1424, 1425, 1426, 1541], "psi": [1566, 1568, 1570, 1571, 1707], "pt": [1143, 1171, 1178, 1199], "pth": [115, 116, 117, 118, 1697], "public": [1713, 1734], "publicli": 1713, "publish": [0, 1711], "pull": [1135, 1138, 1713], "pure": [0, 1039, 1040, 1041, 1042, 1043, 1044], "purpos": [764, 1426, 1710, 1716, 1719, 1730], "push": 1713, "pushoff": [1143, 1171, 1178, 1199], "put": [1266, 1443, 1444, 1535, 1537], "pvar": [53, 67], "pwake": [253, 254, 256, 258, 533, 550, 552, 553, 555, 1725], "pwake_typ": [276, 281, 557, 562, 564, 566, 572, 578], "pxx": 1434, "pxy": 1285, "py": [0, 391, 1100, 1576, 1724, 1733], "pyc": 1576, "pylab": [1134, 1281, 1282], "pypi": 0, "pyplot": [1004, 1005, 1007, 1011, 1062, 1066, 1087, 1095, 1281, 1282, 1402, 1411, 1425, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "pyplot_argu": [1134, 1473], "pytest": [0, 1737], "python": [0, 1576, 1625, 1706, 1710, 1713, 1724, 1729, 1736], "python3": [0, 1576, 1715], "q": [1134, 1436], "q1": [1269, 1271], "q3": [1269, 1271], "quad": [1424, 1426], "quadcontourset": [1039, 1040, 1041, 1042, 1043, 1044, 1096], "quadmesh": [1039, 1040, 1041, 1042, 1043, 1044, 1096, 1399, 1425, 1426], "quadrat": [930, 931, 935, 936, 940, 941, 945, 946, 992, 998, 1704, 1716, 1722], "quadratic_loc": 1720, "quadric": 1402, "quadrilater": [1424, 1425, 1426], "quantil": [1550, 1551], "quantit": 1266, "quantiti": [276, 296, 1266, 1435, 1716, 1727], "quartic_loc": 1720, "quartil": [1269, 1271], "queri": [1134, 1334, 1420, 1474], "queue": 0, "quick": 1713, "quicker": 1715, "quickli": 1431, "quit": 1576, "quiv": 1096, "quiver": [1039, 1040, 1041, 1042, 1043, 1044, 1096, 1134, 1266, 1435, 1436], "quiver_n": [1039, 1040, 1041, 1042, 1043, 1044, 1718, 1720, 1721, 1729, 1731], "quiver_par": [1039, 1040, 1041, 1042, 1043, 1044, 1718, 1720, 1721, 1729, 1731], "quiverkei": [1134, 1435, 1436], "r": [809, 810, 819, 820, 821, 822, 825, 826, 837, 845, 853, 862, 866, 869, 873, 876, 879, 911, 915, 916, 919, 922, 925, 1134, 1143, 1199, 1208, 1251, 1258, 1261, 1262, 1269, 1293, 1297, 1394, 1402, 1431, 1537, 1709, 1710, 1716, 1717, 1729], "r1": [1634, 1635, 1706], "r2": [1634, 1635, 1706], "r_": 1178, "r_pc": [888, 897], "r_pc_": [888, 898], "radial": [0, 557, 558, 810, 821, 826, 854, 1134, 1143, 1149, 1178, 1181, 1199, 1200, 1272, 1343, 1344, 1484, 1486, 1487, 1488, 1489, 1709, 1716, 1717], "radialloc": [1134, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219], "radian": [1134, 1143, 1171, 1178, 1199, 1220, 1250, 1353, 1427, 1444, 1496, 1497, 1498, 1499], "radiant": [904, 1734], "radii": [557, 824, 825, 865, 866, 872, 873, 914, 915, 1134, 1481, 1484, 1634, 1706], "radii_angl": 1447, "radiu": [299, 594, 602, 609, 822, 825, 862, 866, 869, 873, 911, 915, 1134, 1178, 1181, 1199, 1208, 1266, 1279, 1342, 1402, 1430, 1484, 1485, 1594, 1595, 1627, 1634, 1635], "rai": [0, 399, 1701, 1724], "raimund": 540, "rais": [169, 170, 277, 372, 416, 485, 560, 574, 1103, 1121, 1135, 1142, 1208, 1215, 1217, 1230, 1240, 1250, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1435, 1442, 1480, 1499, 1523, 1525, 1526, 1529, 1532, 1551, 1552, 1555], "raise_if_exce": [1208, 1215, 1230], "rand": 1291, "random": [0, 413, 519, 520, 521, 1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1349, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1492, 1524, 1533, 1535, 1627, 1703, 1706, 1714, 1719, 1724], "random_timeseri": 0, "random_timseries_data": [0, 520, 1703, 1724], "random_xy_squar": [0, 1627, 1706], "randomli": [413, 1703, 1719], "rang": [0, 311, 432, 434, 442, 496, 498, 506, 520, 636, 637, 1134, 1208, 1214, 1219, 1230, 1233, 1235, 1250, 1269, 1277, 1285, 1291, 1397, 1398, 1399, 1402, 1406, 1415, 1424, 1425, 1426, 1427, 1431, 1434, 1442, 1450, 1499, 1509, 1516, 1523, 1535, 1538, 1539, 1540, 1550, 1551, 1576, 1704, 1716, 1717, 1725, 1726, 1728, 1729, 1734], "range_var": [636, 637, 1728], "rankin": [0, 829, 1709, 1717, 1718], "rankinehalfbodi": [0, 829, 830, 831, 832, 833, 834, 835, 836, 1709, 1722], "rare": 1530, "raster": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1340, 1341, 1394, 1397, 1402, 1404, 1415, 1417, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1482, 1483, 1524, 1533, 1535], "rasterization_demo": [1426, 1482, 1483], "rasterization_zord": 1447, "rate": [623, 712, 1402], "rather": [986, 1152, 1292, 1398, 1435, 1443, 1444], "rathmann": [0, 837, 838, 839, 840, 841, 842, 843, 844, 1709, 1717, 1722], "rathmann_": 1722, "rathmann_linear": 1722, "ratio": [1134, 1252, 1253, 1266, 1302, 1307, 1313, 1319, 1402, 1430, 1448, 1453, 1461, 1524], "raul": [845, 853, 1717], "ravel": [1717, 1718], "raw": [1398, 1402], "rayengin": [0, 399, 1701, 1724], "rc": [1220, 1222, 1256, 1267, 1269, 1291, 1292, 1397, 1398, 1399, 1400, 1402, 1424, 1425, 1426, 1431, 1432, 1436, 1442, 1502, 1507, 1514, 1523, 1524, 1535, 1538, 1539, 1540, 1552, 1553, 1556], "rcparam": [1442, 1502, 1511, 1518, 1535, 1720, 1729, 1731], "rcsetup": 1480, "rdict": [427, 430, 432, 433, 447, 448, 496, 497, 512, 517, 518], "re": [1134, 1527, 1716, 1724, 1726, 1731], "reach": [0, 1693, 1695, 1702, 1718, 1720, 1731], "read": [0, 111, 187, 222, 260, 314, 416, 417, 432, 434, 485, 486, 496, 498, 526, 527, 528, 529, 582, 619, 637, 652, 673, 675, 676, 677, 692, 693, 702, 703, 712, 714, 715, 722, 723, 1105, 1108, 1111, 1127, 1132, 1628, 1629, 1630, 1631, 1632, 1692, 1700, 1703, 1704, 1706, 1710, 1714, 1721, 1723, 1729, 1731, 1733], "read_attribut": [526, 1703], "read_csv": [748, 1720], "read_fil": [1127, 1132, 1628, 1631], "read_layout": [527, 1703], "read_shp": [0, 1628, 1629, 1706], "read_shp_polygon": [0, 1629, 1632, 1706], "read_tab_fil": [1630, 1706], "read_turbine_typ": [528, 1703], "read_wind_resource_field": [529, 1703], "read_windio": [524, 1703], "readabl": [111, 187, 222, 260, 314, 496, 1105, 1109, 1110, 1111, 1117, 1703, 1724, 1728, 1732], "readi": [0, 1722, 1730, 1731, 1734], "real": [1250, 1277, 1285, 1415, 1427, 1434, 1523, 1574, 1706], "realist": [1717, 1718, 1729], "realiz": [0, 1721, 1734], "realli": 1493, "reason": [0, 231, 269, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1152, 1251, 1252, 1414, 1426, 1432, 1435, 1445, 1446, 1464, 1716, 1720], "recalcul": [599, 600], "recent": [72, 75, 76, 80, 81, 84, 85], "reciproc": [1443, 1444], "recommend": [1142, 1269, 1271, 1530, 1713, 1715, 1721], "recomput": [1134, 1438], "recov": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 425, 427, 430, 432, 445, 447, 449, 451, 453, 464, 466, 468, 475, 477, 485, 494, 496, 510, 512, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "rect": [1062, 1134, 1301, 1404, 1406, 1728], "rectangl": [1062, 1134, 1258, 1259, 1262, 1263, 1267, 1270, 1325, 1397, 1404, 1405, 1453, 1460, 1464, 1469, 1535, 1721], "rectangle_patch": [1404, 1405], "rectangular": [1134, 1269, 1397, 1398, 1424, 1425, 1426, 1535], "rectilinear": [1406, 1493], "recurs": 1296, "recursionerror": 1576, "red": [1258, 1261, 1262, 1264, 1268, 1281, 1282, 1291, 1293, 1431, 1480, 1535, 1537, 1539, 1540, 1720], "redraw": [1134, 1288, 1437], "redraw_in_fram": [1134, 1437], "redrawn": 1439, "reduc": [0, 5, 32, 322, 599, 600, 606, 607, 1018, 1034, 1035, 1036, 1079, 1080, 1081, 1082, 1083, 1084, 1397, 1413, 1419, 1435, 1716, 1722, 1723, 1724, 1727], "reduce_al": [1018, 1034], "reduce_c_funct": 1397, "reduce_st": [1018, 1035, 1732], "reduce_turbin": [1018, 1036], "reduct": [599, 600, 1397, 1717], "ref_xi": [449, 451, 453, 454, 456, 466, 467, 1720], "refactor": 0, "refer": [0, 540, 801, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 916, 1255, 1259, 1263, 1269, 1271, 1291, 1413, 1530, 1564, 1565, 1569, 1572, 1707, 1716, 1717, 1719, 1734], "referenceerror": 1576, "reffer": 1714, "reflect": [0, 550, 553, 554, 1250, 1252, 1277, 1285, 1415, 1427, 1434, 1523, 1704, 1716, 1718, 1720, 1722, 1729, 1731, 1734, 1736], "reformul": 0, "regard": 1152, "regardless": [1255, 1259, 1261, 1263, 1424, 1497, 1506, 1513], "region": [0, 802, 837, 838, 845, 846, 854, 855, 882, 883, 888, 903, 1134, 1293, 1294, 1295, 1539, 1540, 1716, 1717, 1718], "regist": [1134, 1397, 1399, 1402, 1423, 1424, 1425, 1426, 1442, 1510, 1517, 1539, 1540], "register_scal": [1510, 1517], "regular": [0, 412, 416, 485, 599, 606, 1134, 1397, 1402, 1417, 1424, 1425, 1426, 1452, 1535, 1633, 1703, 1704, 1706, 1714, 1716, 1718, 1720, 1727, 1729, 1731, 1733], "regularlayoutoptproblem": 0, "rel": [117, 118, 131, 1171, 1251, 1267, 1356, 1398, 1404, 1406, 1430, 1435, 1443, 1444, 1451, 1653, 1686, 1698, 1708, 1710], "relat": [0, 1733], "relative_to": 1719, "relax": [0, 17, 25, 26, 27, 87, 88, 92, 93, 1695, 1718], "releas": [0, 1291, 1715], "relev": [1060, 1062, 1289, 1294, 1295, 1402, 1524, 1539, 1540, 1704, 1709, 1718], "reli": [1724, 1736], "relim": [1134, 1256, 1438, 1439], "relpo": 1251, "remain": [1134, 1265, 1289, 1294, 1295, 1359, 1398, 1413, 1416, 1524, 1537], "remark": 1713, "remot": 1713, "remov": [0, 1, 17, 27, 157, 165, 166, 641, 648, 1134, 1178, 1181, 1242, 1264, 1268, 1269, 1277, 1281, 1282, 1285, 1289, 1410, 1418, 1432, 1434, 1435, 1439, 1440, 1464, 1512, 1519, 1523, 1539, 1540, 1715, 1726, 1727], "remove_callback": [1134, 1242, 1423, 1440], "remove_inner_tick": [1134, 1410], "renam": [0, 1269], "render": [1134, 1251, 1252, 1269, 1271, 1287, 1289, 1356, 1362, 1399, 1402, 1425, 1426, 1447, 1453, 1457, 1538, 1551], "rendererbas": [1251, 1287, 1356], "renen": 876, "renew": [837, 845, 853], "reorder": [59, 1694], "reorderfarmoutput": [59, 60, 61, 62, 1694, 1724], "reorderfarmoutput_instance1": 1724, "repeat": [1267, 1525, 1539, 1540, 1725], "repeatedli": 1718, "repetit": [888, 1709], "replac": [0, 1135, 1220, 1222, 1289, 1512, 1519, 1713, 1715, 1716, 1735], "report": [1289, 1713], "repositori": [1712, 1713, 1737], "repr": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 198, 200, 213, 225, 237, 244, 246, 252, 253, 262, 264, 276, 283, 289, 291, 296, 306, 327, 329, 332, 334, 339, 343, 351, 356, 358, 364, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 402, 404, 405, 406, 416, 427, 430, 432, 435, 447, 449, 451, 453, 455, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 546, 550, 552, 553, 557, 559, 562, 564, 566, 568, 572, 578, 581, 586, 589, 593, 599, 601, 606, 608, 613, 615, 618, 623, 625, 630, 636, 641, 651, 656, 658, 661, 664, 667, 669, 672, 674, 676, 678, 686, 692, 694, 702, 704, 712, 714, 722, 724, 731, 735, 739, 743, 747, 751, 754, 758, 760, 764, 771, 776, 778, 784, 786, 791, 793, 801, 803, 809, 812, 819, 822, 829, 831, 837, 839, 845, 847, 853, 854, 856, 862, 864, 869, 871, 876, 878, 882, 884, 888, 911, 913, 916, 918, 922, 924, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 956, 958, 962, 964, 968, 970, 974, 976, 980, 982, 986, 988, 992, 994, 998, 1000, 1134, 1135, 1139, 1238, 1576], "repres": [0, 351, 356, 454, 599, 600, 651, 714, 722, 1012, 1135, 1136, 1153, 1264, 1268, 1269, 1271, 1281, 1282, 1292, 1402, 1414, 1431, 1432, 1435, 1445, 1446, 1502, 1508, 1515, 1530, 1532, 1550, 1551, 1594, 1601, 1608, 1704, 1706, 1714, 1716, 1719, 1723, 1724, 1727, 1733, 1734], "represent": [1118, 1120, 1134, 1220, 1223, 1298, 1318, 1402, 1559, 1561], "request": [0, 352, 1713], "requir": [0, 81, 157, 225, 232, 233, 332, 336, 337, 343, 349, 543, 672, 674, 676, 682, 683, 686, 687, 689, 690, 692, 699, 700, 702, 709, 710, 712, 714, 719, 720, 722, 728, 729, 758, 764, 771, 776, 782, 784, 791, 801, 1134, 1172, 1252, 1271, 1302, 1398, 1402, 1448, 1451, 1453, 1550, 1695, 1713, 1714, 1716, 1719, 1720, 1721, 1722, 1724, 1729, 1732, 1734, 1736, 1737], "resampl": 1402, "rescal": [986, 1720], "research": [1576, 1713], "reserv": 1576, "reset": [1, 17, 27, 101, 157, 180, 184, 213, 306, 311, 374, 416, 427, 430, 432, 442, 447, 449, 451, 453, 466, 468, 477, 485, 496, 506, 512, 517, 641, 648, 1134, 1441, 1480, 1537, 1699, 1723, 1724, 1726, 1729], "reset_chunk_stor": [1, 17, 27, 157, 180], "reset_engin": [374, 1699, 1724], "reset_posit": [1134, 1441], "resid": [1134, 1257], "resiz": 1402, "resolut": [0, 1038, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1250, 1277, 1285, 1415, 1427, 1434, 1523, 1717, 1718, 1720, 1721, 1723, 1724, 1729, 1730, 1731, 1733, 1734], "resolv": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "resort": 1432, "resourc": [529, 1703], "resourcewarn": 1576, "respecitv": 225, "respect": [0, 117, 118, 226, 412, 606, 607, 1260, 1400, 1416, 1426, 1432, 1436, 1459, 1506, 1508, 1510, 1513, 1515, 1517, 1532, 1533, 1537, 1552, 1697, 1710, 1716, 1719, 1727, 1732, 1733, 1734], "respond": [1134, 1335, 1475], "respons": [343, 1701, 1704, 1716, 1727, 1728], "rest": 1178, "restart": 0, "restrict": [0, 1448], "restructur": 0, "result": [0, 4, 5, 17, 19, 20, 27, 31, 32, 34, 35, 36, 37, 42, 47, 51, 55, 59, 61, 63, 65, 67, 69, 72, 74, 76, 79, 81, 83, 85, 89, 94, 100, 103, 119, 161, 162, 196, 198, 202, 211, 216, 227, 239, 243, 248, 256, 257, 266, 279, 284, 288, 293, 296, 298, 300, 330, 340, 345, 361, 364, 366, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 418, 436, 457, 470, 479, 487, 499, 525, 547, 557, 566, 569, 579, 583, 587, 589, 590, 591, 593, 595, 599, 606, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 733, 737, 741, 745, 749, 752, 756, 764, 816, 822, 824, 833, 841, 849, 858, 862, 865, 869, 872, 911, 914, 934, 939, 940, 941, 944, 949, 950, 954, 956, 960, 962, 966, 968, 972, 974, 975, 978, 980, 981, 984, 986, 990, 992, 996, 998, 1002, 1009, 1010, 1011, 1018, 1019, 1020, 1021, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1051, 1052, 1053, 1054, 1055, 1058, 1059, 1060, 1062, 1071, 1076, 1077, 1078, 1085, 1086, 1088, 1089, 1152, 1251, 1253, 1264, 1267, 1268, 1269, 1271, 1277, 1281, 1282, 1285, 1294, 1295, 1296, 1402, 1406, 1431, 1434, 1435, 1448, 1463, 1493, 1509, 1516, 1523, 1524, 1533, 1633, 1693, 1694, 1698, 1704, 1705, 1708, 1710, 1716, 1717, 1718, 1720, 1723, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "results_st": [1009, 1010], "resultswrit": [0, 1054, 1055, 1056, 1057, 1705], "ret_data": [1042, 1043, 1044, 1058, 1062, 1063, 1091], "ret_dwnd_ord": [17, 19], "ret_grid": [1079, 1080, 1081, 1082, 1083, 1084], "ret_im": [1011, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1720, 1731], "ret_ind": 170, "ret_par": [1118, 1121], "ret_stat": [1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1096], "ret_utm_zon": [1629, 1632, 1706], "retriev": [1134, 1372, 1387, 1416], "return": [0, 1, 17, 27, 46, 49, 53, 55, 59, 63, 67, 87, 92, 101, 111, 157, 181, 185, 187, 195, 198, 200, 213, 222, 225, 237, 244, 246, 252, 253, 260, 262, 264, 272, 276, 283, 289, 291, 296, 306, 314, 327, 329, 332, 334, 339, 343, 351, 358, 364, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 402, 404, 405, 406, 416, 423, 427, 430, 432, 435, 443, 447, 449, 451, 453, 455, 461, 466, 468, 473, 477, 485, 492, 496, 507, 512, 515, 517, 537, 540, 543, 544, 546, 550, 552, 553, 557, 559, 562, 564, 566, 568, 572, 578, 581, 586, 589, 593, 599, 601, 606, 608, 613, 615, 618, 623, 625, 630, 636, 641, 649, 651, 656, 658, 661, 664, 667, 669, 672, 674, 676, 678, 686, 692, 694, 702, 704, 712, 714, 722, 724, 731, 735, 739, 743, 747, 751, 754, 758, 760, 764, 771, 776, 778, 784, 786, 791, 793, 799, 801, 803, 809, 812, 819, 822, 829, 831, 837, 839, 845, 847, 853, 854, 856, 862, 864, 869, 871, 876, 878, 882, 884, 888, 911, 913, 916, 918, 922, 924, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 956, 958, 962, 964, 968, 970, 974, 976, 980, 982, 986, 988, 992, 994, 998, 1000, 1009, 1028, 1033, 1039, 1040, 1041, 1058, 1091, 1096, 1105, 1106, 1111, 1113, 1135, 1138, 1139, 1140, 1141, 1142, 1143, 1147, 1151, 1152, 1153, 1154, 1155, 1156, 1162, 1174, 1175, 1176, 1177, 1178, 1180, 1182, 1183, 1188, 1190, 1192, 1196, 1197, 1198, 1199, 1201, 1204, 1207, 1208, 1210, 1214, 1215, 1218, 1220, 1221, 1223, 1224, 1225, 1230, 1231, 1233, 1238, 1239, 1241, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1272, 1273, 1280, 1283, 1284, 1287, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1306, 1307, 1308, 1309, 1310, 1311, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1323, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1338, 1340, 1341, 1347, 1348, 1350, 1351, 1354, 1358, 1359, 1360, 1361, 1362, 1363, 1367, 1368, 1371, 1373, 1374, 1376, 1378, 1382, 1383, 1386, 1388, 1389, 1391, 1393, 1394, 1395, 1396, 1403, 1409, 1420, 1429, 1433, 1436, 1447, 1449, 1478, 1554, 1557, 1577, 1584, 1586, 1594, 1601, 1608, 1616, 1706, 1725, 1730], "return_lin": [1285, 1434], "return_nearest": [1577, 1582, 1584, 1586, 1592, 1594, 1599, 1601, 1606, 1608, 1614, 1616, 1622], "reult": 298, "reus": 1256, "revers": [1256, 1398, 1508, 1515, 1576], "revert": 1459, "rew": [0, 1, 2, 17, 27, 528, 606, 1127, 1129, 1672, 1689, 1691, 1704, 1708, 1718, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1730, 1731, 1732, 1733, 1734], "rework": 0, "rews2": [225, 232, 332, 336, 543, 656, 657, 672, 674, 676, 677, 682, 686, 687, 689, 692, 693, 699, 702, 703, 709, 712, 714, 715, 719, 722, 723, 728, 1127, 1129, 1673, 1689, 1691, 1708, 1718, 1722, 1724], "rews3": [225, 233, 332, 337, 543, 623, 624, 672, 674, 676, 677, 683, 686, 687, 690, 692, 693, 700, 702, 703, 710, 712, 714, 715, 720, 722, 723, 729, 1127, 1129, 1674, 1689, 1691, 1708, 1718, 1722, 1724], "rews_max": 1728, "rews_min": 1728, "rgb": [1264, 1268, 1281, 1282, 1402, 1425, 1426, 1442], "rgba": [1266, 1270, 1294, 1295, 1397, 1402, 1424, 1425, 1426, 1435, 1442], "rgrid": 1447, "rh": [1018, 1037], "rhb": [0, 1717, 1718, 1722], "rho": [468, 469, 477, 478, 672, 673, 675, 676, 677, 692, 693, 702, 703, 712, 713, 722, 723, 1095, 1127, 1129, 1658, 1675, 1689, 1691, 1708, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "rice": 1398, "ride": 1291, "right": [1033, 1037, 1134, 1178, 1250, 1251, 1253, 1258, 1261, 1262, 1266, 1277, 1285, 1289, 1291, 1294, 1295, 1357, 1364, 1365, 1370, 1379, 1380, 1394, 1398, 1402, 1405, 1410, 1411, 1415, 1427, 1431, 1432, 1434, 1435, 1436, 1443, 1444, 1447, 1451, 1453, 1502, 1507, 1508, 1523, 1524, 1530, 1533, 1535, 1537, 1543, 1554, 1557, 1576, 1716, 1717, 1720], "right_lim": 1508, "righthand": 1398, "rightmost": 1399, "ring": [0, 414, 1703], "risk": [1484, 1498, 1511, 1518], "rlabel_posit": 1447, "rlim": 1447, "rmax": [1134, 1447, 1486, 1487], "rmin": [1134, 1447, 1486, 1488], "rmodel_typ": [296, 303, 593, 599, 606], "rng": 1492, "ro": 1431, "roject": 1713, "roman": 1535, "root": [1574, 1706, 1715], "rorigin": [1134, 1447, 1489], "rose": [0, 1058, 1060, 1062, 1063, 1091, 1092, 1134, 1264, 1268, 1281, 1282, 1705, 1706, 1712, 1713, 1714, 1719, 1728, 1732], "roseplotoutput": [0, 1058, 1059, 1060, 1061, 1062, 1063, 1091, 1705, 1728], "rotat": [1087, 1264, 1266, 1268, 1281, 1282, 1430, 1435, 1535, 1537, 1717, 1719], "rotate_xlabel": 1087, "rotatelabel": 1430, "rotation_mod": 1535, "rotor": [0, 1, 3, 12, 17, 27, 119, 132, 133, 225, 227, 237, 238, 256, 276, 279, 296, 298, 299, 300, 301, 302, 303, 305, 323, 324, 332, 333, 343, 348, 364, 365, 408, 530, 557, 562, 564, 566, 567, 569, 572, 573, 578, 579, 593, 594, 595, 596, 597, 598, 599, 602, 604, 605, 606, 607, 609, 611, 612, 630, 631, 642, 758, 762, 764, 768, 771, 775, 776, 781, 784, 790, 791, 797, 801, 806, 837, 838, 845, 846, 854, 855, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1009, 1010, 1011, 1039, 1040, 1041, 1064, 1065, 1066, 1096, 1644, 1645, 1646, 1657, 1672, 1673, 1674, 1679, 1698, 1699, 1704, 1705, 1708, 1712, 1713, 1717, 1718, 1720, 1723, 1724, 1725, 1731, 1732], "rotor_color": [1039, 1040, 1041], "rotor_model": [0, 1, 3, 12, 17, 27, 530, 566, 567, 572, 573, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 1064, 1065, 1710, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1731, 1732, 1733, 1734], "rotor_point": [132, 1698, 1716, 1718, 1722, 1723, 1725, 1727, 1731], "rotor_point_weight": [296, 305, 593, 598, 599, 605, 606, 612], "rotor_wd": [3, 1716, 1717, 1718, 1722], "rotor_wd_farmo": 1722, "rotor_weight": [133, 1698], "rotorcentrecalc": [0, 630, 631, 632, 633, 634, 635, 1704, 1722], "rotormodel": [1, 12, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 530, 566, 567, 572, 573, 593, 599, 606, 1064, 1065, 1699, 1704], "rotorpoint": [0, 562, 578, 579, 580, 1704, 1716, 1722], "rotorpointplot": [0, 1064, 1065, 1066, 1705, 1727], "rotorwd": [771, 772, 773, 774, 775, 801, 802, 1704, 1722, 1724], "rough": [1562, 1563, 1564, 1566, 1567, 1569, 1570, 1572, 1688, 1708, 1716], "round": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1493, 1524, 1576, 1640], "round_numb": 1256, "routin": [1153, 1724], "row": [415, 651, 652, 712, 1056, 1266, 1267, 1291, 1292, 1402, 1410, 1417, 1424, 1425, 1426, 1435, 1442, 1523, 1532, 1533, 1703, 1712, 1713, 1714, 1717, 1718, 1720, 1723, 1724, 1725, 1726, 1731, 1732], "row_var": [651, 652], "rowcolour": 1533, "rowlabel": 1533, "rowloc": 1533, "rpar": [496, 676, 692], "rpars_ct": [702, 714, 722], "rpars_p": [702, 714, 722], "rpoint": [280, 296, 298, 563, 570, 580, 593, 599, 606], "rpoint_result": [300, 593, 595], "rpoint_weight": [256, 279, 569, 579], "rscale": 1447, "rtick": 1447, "rule": [0, 1402, 1716, 1728, 1734], "run": [0, 1, 17, 27, 30, 41, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 160, 177, 181, 183, 185, 195, 198, 209, 211, 213, 225, 227, 237, 238, 244, 252, 253, 262, 271, 272, 274, 276, 281, 283, 289, 296, 303, 306, 309, 327, 329, 331, 332, 338, 339, 340, 342, 343, 350, 351, 358, 362, 364, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 522, 523, 525, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 642, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 687, 692, 702, 712, 714, 722, 731, 733, 735, 737, 739, 741, 743, 745, 747, 749, 751, 752, 754, 756, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 955, 956, 961, 962, 967, 968, 973, 974, 979, 980, 985, 986, 991, 992, 997, 998, 1003, 1009, 1018, 1038, 1039, 1040, 1041, 1045, 1048, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1134, 1215, 1240, 1555, 1699, 1701, 1703, 1704, 1706, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1728, 1729, 1730, 1731, 1732, 1734, 1735, 1736, 1737], "run_calc": 1725, "run_calcul": [4, 5, 46, 49, 53, 59, 63, 67, 87, 92, 101, 198, 211, 213, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 379, 384, 385, 386, 387, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722], "run_dict": [525, 1703], "runner": [0, 1713], "runtimeerror": 1576, "runtimewarn": 1576, "rweight": [280, 563, 570, 580], "rwidth": 1398, "s0960148123007620": [837, 845, 853], "s_": 1726, "s_state": 190, "s_target": [314, 316], "sake": 1729, "same": [0, 187, 188, 191, 317, 318, 340, 733, 737, 741, 745, 749, 752, 756, 1025, 1039, 1040, 1041, 1178, 1230, 1251, 1260, 1266, 1267, 1269, 1270, 1271, 1272, 1289, 1291, 1292, 1397, 1398, 1400, 1402, 1406, 1424, 1425, 1426, 1431, 1435, 1442, 1453, 1479, 1480, 1492, 1512, 1519, 1525, 1530, 1532, 1533, 1539, 1540, 1541, 1552, 1575, 1576, 1635, 1717, 1729, 1732, 1734], "sampl": [1250, 1277, 1285, 1399, 1415, 1427, 1434, 1523], "san": 1535, "satisfi": 1441, "savefig": [1134, 1329, 1471], "sbeta": [0, 862, 863, 876, 877, 916, 917, 922, 923], "sbeta_factor": [0, 862, 863, 876, 877, 916, 917, 922, 923, 1722], "scalar": [581, 582, 1250, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1271, 1277, 1285, 1289, 1291, 1294, 1295, 1298, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1447, 1450, 1524, 1533, 1535, 1539, 1540, 1550, 1552], "scalarformatt": [1134, 1484, 1538], "scale": [0, 950, 951, 962, 963, 974, 975, 992, 993, 1134, 1178, 1181, 1199, 1208, 1219, 1230, 1235, 1250, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1307, 1349, 1374, 1389, 1394, 1397, 1398, 1399, 1402, 1404, 1414, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1445, 1446, 1447, 1453, 1492, 1510, 1517, 1523, 1524, 1532, 1533, 1535, 1539, 1540, 1717, 1718, 1720, 1721, 1729, 1731], "scale_amb": [950, 951, 962, 963, 974, 975, 992, 993, 1722], "scale_by_freq": [1277, 1285, 1434, 1523], "scale_transform": [1178, 1181, 1200], "scale_unit": [1435, 1721], "scalebas": [1510, 1517], "scalei": [1134, 1256, 1431], "scalex": [1134, 1256, 1431], "scanw": [468, 469, 470, 471, 472, 473, 474, 475, 476, 1703], "scatter": [0, 1011, 1033, 1064, 1066, 1072, 1073, 1134, 1431, 1442, 1720], "scatterplot": 1442, "scenario": 1718, "schedul": [0, 1724], "schema": 1710, "schemat": 1266, "schmidt": 1711, "schmidt2023": 1711, "sci": 1538, "scienc": [837, 845, 853], "sciencedirect": [837, 845, 853], "scientif": 1538, "scilimit": [1134, 1538], "scipi": [416, 417, 434, 453, 485, 486, 619, 652, 677, 714, 715, 722, 723, 1250, 1277, 1285, 1415, 1427, 1434, 1523, 1524], "scope": 1252, "scott": [1398, 1551], "screen": [1199, 1251, 1261, 1435], "script": [0, 391, 1710, 1713, 1724, 1735, 1736], "sdata": [520, 1720, 1724, 1725, 1726, 1734], "se": [1447, 1451, 1453, 1497], "search": [0, 266, 416, 417, 428, 432, 434, 485, 486, 530, 536, 668, 801, 863, 882, 1573, 1706, 1716, 1722, 1730, 1732], "second": [378, 712, 1134, 1267, 1291, 1294, 1295, 1398, 1399, 1406, 1431, 1443, 1444, 1645, 1673, 1708, 1716], "secondari": [1134, 1365, 1443, 1444], "secondart": [1134, 1380], "secondary_axi": [1443, 1444], "secondary_xaxi": [1134, 1443], "secondary_yaxi": [1134, 1444], "secondaryaxi": [1443, 1444], "section": [1294, 1295, 1424, 1426, 1431, 1523, 1710, 1714, 1716, 1722, 1724, 1730, 1732, 1734, 1736], "sector": [0, 1058, 1060, 1062, 1063, 1091, 1134, 1264, 1268, 1281, 1282, 1630, 1712, 1713, 1732], "sector_man": 0, "sector_manag": 0, "sector_rul": 1728, "sectormanag": [0, 636, 637, 638, 639, 640, 1704, 1716, 1728], "sectoroffset": [1264, 1268], "see": [0, 1134, 1152, 1172, 1208, 1211, 1230, 1232, 1236, 1243, 1255, 1256, 1266, 1277, 1279, 1291, 1292, 1293, 1339, 1350, 1406, 1411, 1413, 1414, 1425, 1430, 1439, 1443, 1444, 1445, 1446, 1452, 1482, 1483, 1502, 1510, 1517, 1524, 1525, 1530, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1542, 1543, 1544, 1576, 1710, 1714, 1715, 1716, 1718, 1723, 1724, 1725, 1733], "seed": [413, 520, 1492, 1627, 1724], "seem": 1718, "seen": 1732, "segment": [1134, 1171, 1174, 1196, 1199, 1250, 1265, 1277, 1281, 1282, 1285, 1415, 1427, 1434, 1493, 1523, 1526], "segreg": [0, 1716], "sel": [1, 17, 27, 39, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 162, 172, 181, 183, 185, 195, 198, 212, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 379, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 416, 417, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 486, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "select": [0, 5, 32, 39, 81, 92, 101, 135, 144, 162, 172, 177, 181, 183, 209, 212, 213, 225, 253, 256, 257, 266, 272, 274, 276, 279, 281, 303, 306, 309, 311, 323, 324, 325, 326, 329, 330, 331, 338, 342, 350, 361, 362, 365, 379, 381, 384, 385, 388, 390, 395, 397, 403, 404, 406, 407, 416, 417, 423, 425, 427, 430, 432, 434, 442, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 486, 492, 494, 496, 498, 506, 507, 510, 512, 515, 516, 517, 536, 544, 550, 552, 553, 557, 562, 564, 566, 569, 572, 578, 579, 613, 614, 616, 620, 626, 632, 638, 644, 649, 650, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 799, 800, 810, 811, 814, 816, 820, 821, 824, 826, 833, 841, 849, 858, 865, 872, 879, 885, 914, 919, 925, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1048, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1208, 1219, 1230, 1235, 1375, 1390, 1668, 1692, 1695, 1698, 1699, 1702, 1704, 1708, 1713, 1714, 1716, 1717, 1720, 1721, 1722, 1723, 1726, 1728, 1730, 1732, 1734, 1736], "select_subset": [198, 212, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406], "self": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 111, 157, 184, 185, 187, 195, 198, 200, 213, 222, 225, 231, 237, 244, 246, 252, 253, 260, 262, 264, 266, 269, 276, 283, 289, 291, 296, 306, 308, 314, 327, 329, 332, 334, 339, 343, 351, 358, 364, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 402, 404, 405, 406, 416, 421, 427, 429, 430, 432, 435, 440, 447, 449, 451, 453, 455, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 546, 550, 552, 553, 557, 559, 562, 564, 566, 568, 572, 578, 581, 584, 586, 589, 593, 599, 600, 601, 606, 608, 613, 615, 618, 621, 623, 625, 630, 636, 641, 646, 651, 656, 658, 661, 664, 667, 669, 672, 674, 676, 678, 686, 692, 694, 697, 702, 704, 707, 712, 714, 718, 722, 724, 727, 731, 735, 739, 743, 747, 751, 754, 758, 760, 764, 771, 776, 778, 784, 786, 791, 793, 801, 803, 809, 812, 819, 822, 829, 831, 837, 839, 845, 847, 853, 854, 856, 862, 864, 869, 871, 876, 878, 882, 884, 888, 911, 913, 916, 918, 922, 924, 930, 932, 935, 937, 940, 942, 945, 947, 950, 952, 956, 958, 962, 964, 968, 970, 974, 976, 980, 982, 986, 988, 992, 994, 998, 1000, 1105, 1106, 1111, 1113, 1134, 1135, 1139, 1143, 1147, 1151, 1152, 1162, 1167, 1178, 1180, 1182, 1188, 1199, 1201, 1204, 1208, 1211, 1230, 1232, 1238, 1239, 1296, 1547, 1709], "self_wak": [345, 922, 923], "selfsimilar": [0, 845, 846, 847, 848, 849, 850, 851, 852, 853, 1709, 1717, 1722], "selfsimilar2020": [0, 853, 1709, 1717, 1718, 1722], "selfsimilar2020_": 1722, "selfsimilar2020_linear": 1722, "selfsimilar_": 1722, "selfsimilar_linear": 1722, "semant": [1294, 1295, 1398], "semi": [1535, 1717], "semibold": 1535, "semilog": 1261, "semilogi": [1134, 1446], "semilogx": [1134, 1445], "send": [0, 1724], "sens": [0, 1541, 1723, 1727], "sensibl": 1291, "sensit": [1723, 1734], "sent": 1724, "separ": [0, 566, 712, 809, 812, 1060, 1062, 1063, 1143, 1154, 1165, 1178, 1199, 1251, 1267, 1291, 1298, 1431, 1538, 1704, 1709, 1716, 1735], "separatli": 0, "seq": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1267, 1277, 1285, 1289, 1291, 1394, 1404, 1415, 1427, 1431, 1432, 1434, 1524], "seq_dyn_wak": [1716, 1722, 1729], "seq_dyn_wakes_": [1716, 1722], "seq_dyn_wakes_10": 1722, "seq_dyn_wakes_1min": 1729, "seq_plugin": 0, "seqdynamicwak": [776, 777, 778, 779, 780, 781, 782, 783, 1722, 1729], "seqflowanimationplugin": [1067, 1068, 1069, 1070, 1071, 1705, 1729], "seqstat": [101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 1696], "sequenc": [1134, 1135, 1177, 1250, 1258, 1261, 1262, 1264, 1266, 1267, 1268, 1269, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1293, 1394, 1397, 1398, 1414, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1442, 1511, 1518, 1523, 1524, 1525, 1530, 1539, 1540, 1551], "sequenti": [0, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 776, 1067, 1070, 1071, 1072, 1075, 1076, 1448, 1693, 1705, 1712, 1716, 1724], "sequentialiterplugin": [27, 28], "sequentialplugin": [96, 97, 98, 99, 100, 1067, 1072, 1696, 1705], "seqwakedebugplugin": [0, 1072, 1073, 1074, 1075, 1076, 1705], "seri": [0, 520, 1032, 1134, 1291, 1525, 1706, 1724, 1729, 1732], "serif": 1535, "serv": [101, 266, 349, 453, 454, 467, 782, 1696, 1719], "set": [0, 1, 5, 17, 25, 27, 32, 46, 49, 53, 59, 63, 67, 87, 92, 101, 102, 157, 181, 183, 185, 195, 213, 225, 235, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 323, 324, 327, 329, 332, 339, 343, 351, 358, 364, 372, 373, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 519, 521, 525, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1011, 1134, 1143, 1168, 1171, 1178, 1199, 1214, 1220, 1229, 1233, 1241, 1250, 1252, 1255, 1256, 1259, 1260, 1263, 1264, 1266, 1267, 1268, 1269, 1271, 1277, 1281, 1282, 1285, 1291, 1292, 1294, 1295, 1302, 1349, 1350, 1394, 1396, 1397, 1398, 1399, 1402, 1404, 1405, 1409, 1411, 1413, 1415, 1416, 1417, 1424, 1426, 1427, 1428, 1430, 1431, 1432, 1434, 1435, 1442, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1476, 1477, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1523, 1535, 1537, 1538, 1539, 1540, 1543, 1544, 1546, 1548, 1551, 1553, 1556, 1576, 1694, 1699, 1704, 1710, 1715, 1716, 1717, 1718, 1719, 1723, 1724, 1726, 1727, 1728, 1734], "set_": [1511, 1518], "set_adjust": [1134, 1252, 1302, 1448, 1453, 1461], "set_agg_filt": [1134, 1449], "set_alpha": [1134, 1450], "set_anchor": [1134, 1252, 1305, 1451, 1453], "set_anim": [1134, 1452], "set_aspect": [1134, 1252, 1260, 1302, 1305, 1313, 1402, 1430, 1448, 1451, 1453, 1461, 1479, 1524], "set_autoscale_on": [1134, 1454], "set_autoscalex_on": [1134, 1455], "set_autoscaley_on": [1134, 1456], "set_axes_loc": [1134, 1457], "set_axi": [1208, 1216, 1220, 1228, 1230, 1234], "set_axis_off": [1134, 1260, 1458, 1459], "set_axis_on": [1134, 1260, 1459], "set_axisbelow": [1134, 1312, 1394, 1460], "set_bad": 1442, "set_box_aspect": [1134, 1313, 1461], "set_children": [1143, 1168, 1178, 1199], "set_clip_box": [1134, 1462], "set_clip_on": [1134, 1463], "set_clip_path": [1134, 1464], "set_facecolor": [1134, 1465, 1466], "set_farm_nam": 411, "set_fc": [1134, 1466], "set_figur": [1134, 1467], "set_forward_navigation_ev": [1134, 1468, 1475], "set_frame_on": [1134, 1469], "set_gid": [1134, 1470], "set_in_layout": [1134, 1320, 1356, 1471], "set_label": [1134, 1472], "set_legend": [1134, 1473], "set_loc": [1220, 1229], "set_major_formatt": [1512, 1519], "set_mask": [1539, 1540], "set_mouseov": [1134, 1474], "set_navig": [1134, 1468, 1475], "set_navigate_mod": [1134, 1476], "set_ov": [1539, 1540], "set_par": [225, 235, 543], "set_param": [1208, 1217, 1230, 1413], "set_path_effect": [1134, 1477], "set_pick": [1134, 1338, 1428, 1429, 1478], "set_pmax": 1726, "set_posit": [1134, 1339, 1441, 1479], "set_prop_cycl": [1134, 1480], "set_radii_angl": [1134, 1481], "set_raster": [1134, 1483], "set_rasterization_zord": [1134, 1482], "set_rgrid": [1134, 1484, 1498], "set_rlabel_posit": [1134, 1485], "set_rlim": [1134, 1486], "set_rmax": [1134, 1487], "set_rmin": [1134, 1488], "set_rorigin": [1134, 1489], "set_rscal": [1134, 1490], "set_rtick": [1134, 1491], "set_run": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 427, 430, 432, 443, 447, 449, 451, 453, 461, 466, 468, 473, 477, 485, 492, 496, 507, 512, 515, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "set_sketch_param": [1134, 1492], "set_snap": [1134, 1350, 1493], "set_subplotspec": [1134, 1494], "set_theta_direct": [1134, 1495], "set_theta_offset": [1134, 1496, 1497], "set_theta_zero_loc": [1134, 1497], "set_thetagrid": [1134, 1484, 1498], "set_thetalim": [1134, 1499], "set_thetamax": [1134, 1500], "set_thetamin": [1134, 1501], "set_tick_param": [1484, 1498, 1511, 1518], "set_ticklabel": [1511, 1518], "set_titl": [1134, 1502, 1717, 1718, 1725], "set_transform": [1134, 1409, 1503], "set_und": [1539, 1540], "set_urelax": [17, 25, 27, 1718], "set_url": [1134, 1402, 1504], "set_vis": [1134, 1505], "set_xbound": [1134, 1367, 1370, 1407, 1506, 1508], "set_xlabel": [1134, 1507, 1717, 1718, 1720, 1725, 1730], "set_xlim": [1134, 1256, 1259, 1260, 1291, 1367, 1370, 1407, 1506, 1508, 1725], "set_xmargin": [1134, 1372, 1509], "set_xscal": [1134, 1414, 1445, 1510], "set_xtick": [1134, 1511, 1512], "set_xticklabel": [1134, 1511], "set_yawm": 1734, "set_ybound": [1134, 1382, 1385, 1408, 1513, 1515], "set_ylabel": [1134, 1514, 1717, 1718, 1720, 1730], "set_ylim": [1134, 1260, 1263, 1291, 1382, 1385, 1408, 1486, 1513, 1515, 1725], "set_ymargin": [1134, 1387, 1516], "set_yscal": [1134, 1414, 1446, 1517], "set_ytick": [1134, 1518, 1519], "set_yticklabel": [1134, 1518], "set_zord": [1134, 1394, 1460, 1520], "setambfarmresult": [63, 64, 65, 66, 1694, 1724], "setambfarmresults_instance1": 1724, "setambpointresult": [67, 68, 69, 70, 71, 1694], "setattr": 1576, "setfarmvar": [0, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 1704, 1716, 1725, 1726, 1734], "seti": 1725, "setuniformdata": [0, 581, 582, 583, 584, 585, 1704], "setup": [0, 1713, 1717, 1718, 1723, 1724, 1725, 1726, 1728, 1730, 1733, 1734], "sever": [0, 1714, 1716], "shade": [1134, 1424, 1425, 1426, 1541], "shadow": [1411, 1430], "shaft": [1266, 1435], "shape": [0, 5, 27, 28, 32, 45, 47, 51, 55, 61, 65, 69, 89, 94, 103, 110, 178, 201, 216, 221, 222, 227, 239, 248, 254, 255, 256, 257, 258, 259, 278, 279, 280, 282, 284, 293, 298, 299, 300, 301, 305, 313, 317, 318, 322, 323, 324, 325, 326, 330, 340, 345, 346, 347, 348, 349, 352, 360, 361, 363, 365, 366, 412, 414, 415, 418, 426, 436, 446, 457, 465, 470, 476, 479, 484, 487, 495, 499, 511, 547, 555, 556, 561, 563, 569, 570, 575, 579, 580, 583, 587, 591, 594, 595, 596, 598, 602, 605, 609, 612, 613, 614, 616, 620, 626, 632, 638, 643, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 733, 737, 741, 745, 747, 749, 752, 756, 761, 762, 766, 767, 768, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 804, 805, 806, 810, 811, 814, 815, 816, 820, 821, 824, 825, 826, 832, 833, 835, 840, 841, 843, 848, 849, 851, 857, 858, 860, 865, 866, 867, 872, 873, 874, 879, 885, 904, 907, 914, 915, 919, 925, 928, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002, 1012, 1042, 1043, 1044, 1053, 1092, 1096, 1169, 1170, 1173, 1193, 1194, 1195, 1206, 1253, 1267, 1269, 1289, 1291, 1398, 1399, 1402, 1424, 1425, 1426, 1431, 1435, 1442, 1492, 1525, 1529, 1532, 1574, 1575, 1580, 1581, 1582, 1583, 1590, 1591, 1592, 1593, 1594, 1595, 1597, 1598, 1599, 1600, 1602, 1604, 1605, 1606, 1607, 1608, 1609, 1612, 1613, 1614, 1615, 1620, 1621, 1622, 1623, 1627, 1629, 1635, 1636, 1637, 1638, 1639, 1716, 1717, 1718, 1725, 1730, 1734], "shapefil": [1628, 1631, 1632, 1706], "shapes_and_collect": [1430, 1525], "share": [1134, 1291, 1347, 1348, 1448, 1451, 1453, 1521, 1522, 1543, 1544], "sharei": [1134, 1522, 1717, 1718], "sharex": [1134, 1521, 1717, 1718, 1720], "shear": [0, 751, 1565, 1676, 1704, 1706, 1708], "shearedprofil": [0, 751, 752, 753, 1704], "sheet": [854, 1709], "shift": [1266, 1398], "ship": 1720, "short": [0, 1220, 1224, 1480, 1719, 1724], "shortcut": [1402, 1431, 1480, 1524, 1539, 1540, 1692], "shorter": [1539, 1540], "shorthand": [1442, 1451], "shortli": 1710, "should": [0, 47, 51, 55, 61, 65, 69, 89, 94, 103, 196, 211, 216, 227, 231, 239, 248, 269, 284, 293, 308, 330, 346, 385, 387, 390, 395, 397, 403, 407, 416, 417, 418, 421, 429, 436, 440, 457, 470, 471, 479, 485, 486, 487, 490, 499, 504, 514, 547, 583, 584, 587, 591, 616, 620, 621, 626, 632, 638, 644, 646, 653, 659, 662, 665, 670, 679, 688, 695, 697, 705, 707, 716, 718, 725, 727, 761, 766, 773, 779, 787, 794, 804, 986, 1134, 1140, 1143, 1161, 1162, 1168, 1178, 1188, 1199, 1204, 1219, 1235, 1240, 1252, 1258, 1261, 1262, 1265, 1266, 1267, 1269, 1271, 1275, 1277, 1285, 1289, 1292, 1294, 1295, 1319, 1363, 1378, 1395, 1424, 1426, 1432, 1434, 1442, 1502, 1511, 1512, 1518, 1519, 1523, 1526, 1529, 1530, 1532, 1535, 1551, 1555, 1635, 1640, 1715, 1718, 1721, 1726, 1727, 1728, 1732, 1734, 1735], "show": [0, 379, 380, 1072, 1073, 1134, 1240, 1260, 1264, 1266, 1268, 1269, 1271, 1281, 1282, 1292, 1394, 1410, 1417, 1443, 1550, 1551, 1555, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1732, 1733, 1734], "show_boundari": [1577, 1578, 1584, 1586, 1588, 1594, 1596, 1601, 1603, 1608, 1610, 1616, 1618], "show_p": [1072, 1073], "show_plotly_fig": 0, "show_rotor_dict": 1096, "show_v": [1072, 1073], "showbox": [1269, 1271], "showcap": [1269, 1271], "showextrema": [1550, 1551], "showflier": [1269, 1271], "showmean": [1269, 1271, 1550, 1551], "showmedian": [1550, 1551], "shown": [0, 1266, 1269, 1271, 1417, 1435, 1451, 1626, 1717, 1719, 1723], "shownotch": [1269, 1271], "shp": [1628, 1629, 1631, 1706], "shp2csv": [0, 1631, 1706], "shp2geom2d": [1632, 1706], "shrink": 1251, "shrinka": 1251, "shrinkb": 1251, "shrunken": [1349, 1492], "shut": 1724, "shutdown": [1718, 1724, 1725, 1728, 1731, 1733], "si": [1039, 1040, 1041, 1042, 1043, 1044, 1096, 1720, 1729, 1731], "side": [0, 1037, 1250, 1267, 1277, 1285, 1294, 1295, 1398, 1410, 1415, 1427, 1434, 1523, 1540, 1550, 1551, 1717, 1729], "sigma": [0, 819, 820, 876, 879, 916, 919, 922, 925, 1716], "sigma_y_far": [888, 899], "sigma_z_far": [888, 900], "sign": 1717, "signal": [0, 120, 1250, 1277, 1285, 1293, 1415, 1427, 1434, 1523, 1698, 1720, 1731], "signatur": [1208, 1211, 1230, 1232, 1240, 1242, 1251, 1260, 1266, 1296, 1397, 1414, 1424, 1425, 1426, 1431, 1435, 1445, 1446, 1480, 1499, 1529, 1530, 1539, 1540, 1541, 1542, 1555], "signific": 0, "significantli": 1398, "silent": [56, 70, 74, 79, 83, 106, 157, 158, 181, 183, 198, 199, 229, 230, 231, 265, 267, 269, 272, 274, 308, 311, 369, 408, 410, 411, 412, 413, 414, 415, 421, 423, 425, 429, 440, 442, 443, 445, 459, 461, 464, 471, 473, 475, 480, 490, 492, 494, 503, 504, 506, 507, 510, 514, 515, 516, 521, 524, 525, 526, 527, 528, 529, 534, 576, 584, 603, 610, 621, 627, 633, 639, 645, 646, 649, 650, 654, 680, 697, 707, 718, 727, 763, 769, 783, 795, 798, 799, 800, 807, 817, 827, 834, 842, 850, 859, 880, 886, 908, 920, 926, 927, 1007, 1020, 1021, 1056, 1057, 1079, 1080, 1081, 1082, 1083, 1084, 1108, 1529, 1627, 1631, 1640], "silverman": 1551, "similar": [0, 845, 853, 1260, 1294, 1295, 1399, 1424, 1425, 1426, 1432, 1523, 1709, 1710, 1717, 1721], "similarli": [1714, 1720, 1722, 1726, 1731, 1734], "simpl": [0, 366, 845, 853, 934, 939, 944, 949, 954, 960, 966, 972, 978, 984, 990, 996, 1002, 1251, 1255, 1435, 1525, 1531, 1710, 1720, 1721, 1726, 1730, 1734], "simpler": 0, "simplest": [1251, 1727], "simpli": [544, 589, 1218, 1266, 1294, 1295, 1416, 1497, 1704, 1713, 1714, 1715, 1716, 1718, 1719, 1722, 1724, 1727, 1728], "simplifi": [0, 1713, 1731], "simul": [0, 27, 845, 853, 1696, 1713, 1716, 1719, 1729, 1736], "simultan": [1480, 1724], "sin": [1199, 1720], "sinc": [0, 1269, 1402, 1432, 1524, 1720, 1723, 1724, 1726, 1727], "singl": [0, 47, 51, 55, 61, 65, 69, 89, 94, 101, 103, 196, 198, 205, 216, 227, 239, 248, 284, 293, 330, 346, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 415, 418, 436, 457, 470, 477, 479, 487, 499, 512, 547, 583, 587, 591, 593, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 761, 766, 773, 779, 787, 794, 804, 1056, 1060, 1062, 1134, 1177, 1251, 1252, 1266, 1267, 1269, 1270, 1271, 1288, 1292, 1397, 1398, 1416, 1431, 1442, 1464, 1480, 1523, 1539, 1540, 1693, 1694, 1696, 1701, 1703, 1712, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1726, 1727, 1728, 1731, 1732, 1734], "singlechunkengin": [0, 400, 401, 402, 403, 1701, 1721, 1723, 1724, 1726, 1728, 1730, 1732, 1734], "singlestatest": [0, 477, 478, 479, 480, 481, 482, 483, 484, 1703, 1717, 1718, 1730], "singular": [1208, 1214, 1230, 1233, 1398, 1424, 1426], "site": [1576, 1719], "situat": [1153, 1292, 1725], "size": [0, 27, 43, 101, 108, 187, 198, 199, 201, 213, 219, 300, 306, 312, 345, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 424, 427, 430, 432, 444, 447, 449, 451, 453, 462, 466, 468, 474, 477, 482, 485, 493, 496, 508, 512, 517, 595, 784, 785, 922, 923, 1011, 1016, 1066, 1095, 1134, 1251, 1252, 1266, 1267, 1270, 1291, 1294, 1295, 1356, 1397, 1402, 1411, 1424, 1425, 1430, 1431, 1435, 1436, 1442, 1453, 1525, 1532, 1535, 1537, 1626, 1701, 1718, 1721, 1722, 1723, 1724, 1729, 1730], "sketch": [1134, 1349, 1492], "sketch_param": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1524, 1533, 1535], "skip": [1716, 1730, 1736], "slant": 1266, "slice": [0, 187, 190, 191, 222, 260, 311, 314, 316, 330, 432, 434, 442, 496, 498, 506, 613, 614, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 1038, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1430, 1431, 1432, 1434, 1524, 1576, 1705, 1716, 1727, 1730], "slicedata": [0, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1705], "slicedatanc": [0, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 1703, 1714], "slight": [1426, 1431], "slightli": [1105, 1272, 1426, 1435, 1706, 1728], "slimmer": 0, "slop": [1214, 1233], "slope": [1134, 1258, 1261, 1262, 1525], "slow": [0, 1424, 1716, 1717], "slower": [0, 1729], "slowest": 1425, "slurm": [0, 404, 1701, 1724], "slurm_clust": [0, 1724], "slurmclusterengin": [0, 404, 1701, 1724], "small": [0, 1152, 1266, 1413, 1414, 1435, 1445, 1446, 1535, 1718, 1719, 1724], "smaller": [1269, 1398, 1402, 1411, 1426, 1435, 1442, 1451, 1523], "smallest": [1266, 1582, 1592, 1599, 1606, 1614, 1622], "smallish": [1633, 1706, 1724], "smart": [0, 1713], "smarter": 1172, "smdl": [14, 58, 91, 109, 220, 236, 251, 273, 295, 463, 483, 509, 549, 571, 577, 629, 635, 685, 770, 808, 818, 828, 836, 844, 852, 861, 868, 875, 881, 887, 910, 921, 929], "smfp": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 266, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "smooth": [1426, 1633, 1718], "snap": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1350, 1394, 1397, 1404, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1493, 1524, 1533, 1535], "so": [0, 623, 1143, 1147, 1178, 1199, 1229, 1240, 1251, 1266, 1267, 1291, 1292, 1318, 1394, 1398, 1402, 1404, 1405, 1430, 1435, 1443, 1444, 1461, 1493, 1499, 1508, 1512, 1515, 1519, 1524, 1539, 1540, 1555, 1574, 1710, 1714, 1716, 1718, 1720, 1724, 1726, 1729, 1730, 1731, 1736], "softwar": [1576, 1710, 1711, 1713, 1719], "solid": [1134, 1292, 1400, 1424, 1426, 1431, 1529, 1539, 1552], "solid_capstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "solid_joinstyl": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "solut": 1717, "solv": 0, "solver": 1715, "some": [0, 1018, 1034, 1035, 1036, 1134, 1152, 1174, 1196, 1214, 1220, 1222, 1229, 1233, 1260, 1289, 1294, 1295, 1397, 1402, 1425, 1435, 1478, 1512, 1519, 1530, 1573, 1706, 1716, 1718, 1726, 1729, 1734], "sometim": [1397, 1431, 1525], "somewher": [1436, 1726], "son": [1277, 1285, 1434], "sort": [1289, 1523, 1576], "sourc": [0, 1, 3, 4, 5, 7, 9, 10, 14, 17, 18, 19, 22, 23, 25, 27, 28, 29, 30, 31, 32, 38, 39, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 117, 118, 136, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 903, 904, 905, 906, 907, 908, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1127, 1132, 1133, 1134, 1301, 1349, 1402, 1411, 1492, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1690, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1709, 1711, 1713, 1715, 1717, 1734], "source_ct": [702, 714, 722], "source_p": [702, 714, 722], "sourcefileload": 1576, "south": [1718, 1728], "southwest": 1451, "space": [0, 712, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1143, 1199, 1252, 1264, 1266, 1313, 1362, 1398, 1411, 1432, 1435, 1451, 1453, 1461, 1507, 1514, 1532, 1550, 1551], "span": [1134, 1230, 1258, 1259, 1262, 1263, 1269, 1271], "spare": 1574, "spars": [0, 1524], "sparsiti": [1134, 1524], "spatial": [0, 791, 1704, 1714, 1716, 1719, 1727], "spec": [1415, 1431, 1523, 1537], "specgram": [1134, 1250, 1415, 1427, 1434, 1523], "special": [0, 1155, 1426, 1448, 1724], "specif": [0, 1, 7, 17, 22, 27, 38, 46, 49, 53, 54, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 275, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1135, 1143, 1171, 1178, 1199, 1279, 1399, 1416, 1448, 1532, 1694, 1695, 1696, 1706, 1710, 1713, 1724], "specifi": [0, 253, 254, 255, 276, 278, 327, 358, 360, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 572, 575, 578, 637, 809, 812, 815, 819, 822, 829, 832, 837, 840, 845, 848, 853, 854, 857, 862, 869, 876, 882, 911, 916, 922, 1111, 1112, 1134, 1135, 1138, 1143, 1149, 1199, 1200, 1241, 1251, 1252, 1255, 1261, 1264, 1266, 1268, 1269, 1277, 1281, 1282, 1285, 1293, 1313, 1397, 1398, 1399, 1416, 1424, 1425, 1426, 1430, 1431, 1434, 1435, 1442, 1443, 1444, 1453, 1497, 1523, 1525, 1529, 1530, 1533, 1535, 1539, 1540, 1541, 1542, 1548, 1551, 1704, 1710, 1714, 1716, 1720, 1724, 1732], "spectral": [1134, 1277, 1285, 1415, 1434, 1523], "spectrogram": [1134, 1523], "spectrum": [1134, 1250, 1277, 1285, 1415, 1427, 1434, 1523], "speed": [0, 306, 332, 335, 432, 468, 469, 477, 478, 623, 624, 656, 657, 672, 673, 674, 675, 676, 677, 681, 686, 692, 693, 698, 702, 703, 708, 712, 714, 715, 722, 723, 731, 735, 739, 743, 759, 838, 846, 855, 877, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1092, 1095, 1264, 1266, 1268, 1281, 1282, 1419, 1425, 1426, 1452, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1572, 1637, 1638, 1644, 1645, 1646, 1651, 1672, 1673, 1674, 1682, 1703, 1704, 1707, 1708, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1728, 1730, 1732, 1733, 1734], "speedup": [0, 1713], "spike": 1292, "spine": [1260, 1356, 1362, 1458], "spline16": 1402, "spline36": 1402, "split": [1523, 1724], "spmatrix": 1524, "spy": [1134, 1524], "sqrt": [0, 586, 1397, 1398, 1435, 1633, 1704, 1706, 1724], "sqrt_reg": [1633, 1706], "squar": [413, 1253, 1260, 1291, 1298, 1402, 1430, 1431, 1453, 1524, 1525, 1627, 1703, 1706, 1716, 1722], "src": 1574, "st_sel": [329, 330, 332, 365, 613, 614, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 810, 811, 814, 820, 821, 824, 826, 865, 872, 879, 885, 888, 901, 914, 919, 925, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001], "stabl": [735, 743, 1566, 1567, 1568, 1569, 1704, 1706, 1715, 1718], "stack": [1134, 1265, 1267, 1398, 1525], "stackplot": [1134, 1525], "stair": [1134, 1398, 1526, 1530], "stale": [1134, 1252, 1527], "stamp": [520, 1723, 1729], "stand": [712, 1551], "standard": [0, 1018, 1028, 1134, 1266, 1281, 1282, 1293, 1398, 1424, 1426, 1530, 1550, 1551, 1716, 1730], "star": 1431, "start": [0, 46, 49, 53, 59, 63, 67, 87, 92, 101, 205, 213, 214, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 329, 332, 376, 408, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 764, 765, 801, 802, 1060, 1062, 1097, 1098, 1134, 1142, 1152, 1171, 1251, 1253, 1266, 1291, 1430, 1435, 1528, 1532, 1576, 1633, 1706, 1716, 1717, 1718, 1719, 1720, 1724, 1725, 1726, 1730, 1731, 1734, 1735], "start0": [1060, 1062], "start_pan": [1134, 1528], "start_point": 1532, "start_tim": 520, "startangl": 1430, "stash": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "stat": [1271, 1550], "state": [0, 1, 3, 4, 5, 9, 13, 17, 19, 27, 28, 31, 32, 59, 101, 102, 105, 108, 110, 134, 135, 136, 137, 138, 139, 161, 162, 169, 170, 178, 187, 188, 190, 192, 194, 198, 199, 201, 202, 205, 213, 214, 217, 219, 221, 222, 260, 266, 296, 298, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 323, 324, 325, 326, 330, 349, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 524, 525, 581, 582, 593, 595, 613, 614, 616, 620, 626, 632, 638, 644, 653, 659, 662, 665, 670, 679, 688, 695, 705, 716, 725, 758, 782, 791, 810, 811, 814, 820, 821, 824, 826, 865, 872, 879, 885, 907, 914, 919, 925, 1009, 1010, 1011, 1018, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1053, 1056, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1092, 1096, 1134, 1143, 1156, 1178, 1183, 1199, 1255, 1527, 1668, 1681, 1693, 1694, 1696, 1698, 1699, 1704, 1705, 1708, 1710, 1713, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "state_coord": [427, 428], "state_source_orderi": [136, 1698], "state_target": [137, 266, 349, 782, 1698], "state_target_tpoint": [138, 266, 349, 782, 1698], "state_turbin": [139, 266, 349, 1698], "state_turbine_t": 1056, "statepandasindexpandasindex": [1718, 1724], "states0": [27, 349, 782], "states_coord": [416, 417, 485, 486, 1721], "states_i0": [27, 44, 187, 188, 194, 222, 260, 314], "states_i0_i1": 205, "states_indic": [1, 17, 27, 157, 178], "states_isel": [5, 32, 1079, 1080, 1081, 1082, 1083, 1084, 1724], "states_loc": [101, 213, 306, 311, 416, 427, 430, 432, 434, 442, 447, 449, 451, 453, 466, 468, 477, 485, 496, 498, 506, 512, 517, 1723], "states_mean": [1051, 1053], "states_op": [1018, 1034], "states_sel": [5, 32, 101, 135, 213, 306, 311, 323, 325, 326, 416, 427, 430, 432, 434, 442, 447, 449, 451, 453, 466, 468, 477, 485, 496, 498, 506, 512, 517, 1079, 1080, 1081, 1082, 1083, 1084, 1698, 1723, 1729], "states_source_turbin": 345, "states_turbin": [300, 595], "states_typ": [101, 213, 306, 309, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 1710], "statesroseplotoutput": [0, 1091, 1092, 1705, 1719, 1723, 1728, 1732, 1733], "statest": [496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 517, 1703, 1714, 1716, 1719, 1725, 1726, 1728, 1733, 1734], "stateturbinemap": [0, 1085, 1086, 1087, 1705, 1710, 1726], "stateturbinet": [0, 1088, 1089, 1090, 1705], "static": [0, 375, 673, 675, 676, 677, 692, 693, 702, 703, 714, 715, 722, 723, 1097, 1099, 1100, 1134, 1220, 1222, 1301, 1511, 1518, 1584, 1585, 1692, 1700, 1706, 1713, 1716, 1720, 1721, 1723, 1728, 1729, 1730, 1732, 1733], "staticdata": [164, 375, 376, 1700, 1719, 1720, 1723], "staticmethod": 1576, "statist": [101, 110, 213, 221, 306, 313, 416, 426, 427, 430, 432, 446, 447, 449, 451, 453, 465, 466, 468, 476, 477, 484, 485, 495, 496, 511, 512, 517, 1134, 1267, 1269, 1271, 1291, 1550, 1551, 1681, 1708, 1714, 1719, 1733], "statu": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1134, 1318, 1336, 1476, 1724], "steadi": 1716, "steer": 1713, "stem": [1134, 1253, 1529, 1716], "stemcontain": 1529, "stemlin": 1529, "step": [0, 27, 30, 43, 345, 412, 415, 520, 599, 600, 606, 607, 672, 674, 676, 681, 692, 698, 702, 708, 712, 758, 759, 784, 785, 922, 923, 1032, 1095, 1134, 1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1398, 1415, 1427, 1431, 1432, 1434, 1524, 1526, 1530, 1714, 1715, 1716, 1718, 1719, 1720, 1721, 1722, 1723, 1729, 1731, 1733, 1736], "step_vector": [412, 1703, 1718, 1720, 1721, 1729, 1731, 1733], "stepfil": 1398, "steppatch": 1526, "stepwis": [1134, 1526], "sticht": 1576, "stick": 1531, "sticki": [1134, 1416, 1531], "sticky_edg": [1134, 1531, 1548], "still": [712, 1430, 1460, 1710, 1724], "stochast": [1134, 1706], "stoevesandt": 1711, "stone": 1398, "stop": 1142, "stopasynciter": 1576, "stopiter": 1576, "storag": [854, 860, 1717], "store": [1, 17, 27, 157, 159, 163, 165, 169, 170, 180, 182, 188, 225, 226, 231, 269, 298, 308, 317, 318, 385, 390, 395, 397, 403, 407, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 888, 904, 1111, 1114, 1143, 1156, 1178, 1183, 1199, 1430, 1716, 1717, 1718, 1722], "store_amb_r": 298, "store_cr": [1111, 1114], "store_model_data": [1, 17, 27, 157, 182], "store_rpoint": 298, "store_rweight": 298, "str": [0, 3, 4, 5, 7, 22, 25, 27, 28, 38, 47, 48, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 73, 77, 81, 82, 89, 90, 94, 95, 103, 107, 117, 118, 131, 159, 169, 170, 177, 187, 188, 189, 191, 196, 197, 202, 205, 208, 209, 216, 218, 223, 225, 227, 234, 235, 239, 241, 242, 243, 248, 250, 257, 261, 262, 266, 275, 281, 284, 286, 287, 288, 293, 294, 296, 297, 298, 303, 304, 309, 310, 315, 317, 318, 322, 323, 324, 330, 331, 332, 333, 335, 338, 341, 342, 345, 349, 350, 351, 352, 353, 356, 361, 362, 365, 366, 367, 368, 371, 377, 378, 385, 390, 395, 397, 403, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 422, 427, 428, 431, 432, 434, 436, 441, 457, 460, 470, 472, 477, 478, 479, 481, 485, 486, 487, 491, 496, 498, 499, 505, 509, 513, 519, 520, 521, 525, 527, 529, 530, 532, 533, 535, 536, 547, 548, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 595, 600, 607, 613, 614, 616, 617, 618, 619, 620, 622, 623, 624, 626, 628, 632, 634, 636, 637, 638, 640, 641, 643, 644, 647, 651, 652, 653, 655, 656, 657, 659, 660, 662, 663, 665, 666, 667, 668, 670, 671, 673, 675, 676, 677, 679, 681, 684, 688, 691, 692, 693, 695, 698, 701, 702, 703, 705, 708, 711, 713, 714, 715, 716, 721, 722, 723, 725, 730, 734, 738, 742, 746, 748, 750, 753, 757, 771, 772, 782, 802, 810, 811, 812, 813, 814, 816, 821, 822, 823, 824, 826, 829, 830, 833, 837, 838, 841, 845, 846, 849, 854, 855, 858, 860, 863, 865, 870, 872, 876, 877, 882, 883, 885, 888, 903, 906, 912, 914, 916, 917, 922, 923, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 953, 954, 955, 959, 960, 961, 965, 966, 967, 971, 972, 973, 977, 978, 979, 983, 984, 985, 989, 990, 991, 995, 996, 997, 1001, 1002, 1003, 1011, 1014, 1015, 1016, 1017, 1023, 1024, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1050, 1053, 1056, 1057, 1060, 1061, 1062, 1063, 1066, 1067, 1068, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1090, 1092, 1095, 1096, 1097, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1107, 1108, 1118, 1119, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1132, 1133, 1134, 1135, 1138, 1143, 1151, 1178, 1182, 1199, 1201, 1239, 1240, 1250, 1251, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1286, 1289, 1291, 1292, 1294, 1295, 1357, 1374, 1389, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1406, 1411, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1447, 1451, 1453, 1470, 1472, 1480, 1484, 1497, 1498, 1502, 1504, 1507, 1511, 1512, 1514, 1518, 1519, 1524, 1525, 1529, 1530, 1532, 1533, 1535, 1537, 1539, 1540, 1552, 1553, 1555, 1556, 1560, 1576, 1578, 1588, 1596, 1603, 1610, 1618, 1624, 1625, 1626, 1628, 1629, 1630, 1631, 1632, 1640, 1690, 1698, 1722], "straight": [1134, 1261, 1402, 1431, 1716, 1718, 1724], "strang": 1215, "strategi": 1398, "stratif": [519, 521], "streaklin": 1716, "stream": 1716, "streamgraph": [1134, 1525], "streamlin": [0, 784, 785, 789, 922, 1134, 1532, 1704, 1709, 1716, 1721], "streamlines2d": [0, 784, 785, 786, 787, 788, 789, 790, 1704, 1722], "streamlines_": [1716, 1722], "streamlines_100": [1721, 1722], "streamplot": [1134, 1532], "streamplotset": 1532, "stress": 1720, "stretch": [1292, 1402, 1535], "strictli": [1208, 1532], "string": [0, 351, 356, 416, 417, 485, 486, 536, 1048, 1062, 1118, 1120, 1134, 1220, 1223, 1224, 1240, 1250, 1251, 1258, 1260, 1261, 1262, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1297, 1298, 1318, 1357, 1369, 1384, 1394, 1397, 1398, 1399, 1400, 1402, 1411, 1415, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1472, 1484, 1498, 1511, 1518, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1537, 1539, 1540, 1551, 1552, 1555, 1559, 1561, 1576, 1626, 1706, 1714, 1716, 1722], "stroke": [1424, 1442], "strongest": 1717, "structur": [0, 101, 714, 722, 1431, 1576, 1696, 1710, 1716, 1723, 1732], "stsel": [613, 614], "stuart": 1269, "studi": [801, 882, 888, 1713], "sturg": 1398, "style": [0, 1134, 1240, 1250, 1251, 1256, 1258, 1261, 1262, 1265, 1267, 1269, 1271, 1277, 1285, 1289, 1291, 1292, 1394, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1442, 1480, 1524, 1525, 1529, 1530, 1532, 1535, 1537, 1538, 1555], "sub": [0, 1, 14, 17, 27, 46, 49, 53, 58, 59, 63, 67, 87, 91, 92, 101, 109, 157, 185, 195, 213, 220, 225, 236, 237, 244, 251, 252, 253, 262, 273, 276, 283, 289, 295, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 463, 466, 468, 477, 483, 485, 496, 509, 512, 517, 537, 540, 543, 544, 549, 550, 552, 553, 557, 562, 564, 566, 571, 572, 577, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 629, 630, 635, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 685, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 770, 771, 776, 784, 791, 801, 808, 809, 812, 818, 819, 822, 828, 829, 836, 837, 844, 845, 852, 853, 854, 861, 862, 868, 869, 875, 876, 881, 882, 887, 888, 910, 911, 916, 921, 922, 929, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1143, 1153, 1154, 1178, 1199, 1414, 1445, 1446, 1714, 1716, 1724], "sub_model": [0, 1, 14, 17, 27, 46, 49, 53, 58, 59, 63, 67, 87, 91, 92, 101, 109, 157, 185, 195, 213, 220, 225, 236, 237, 244, 251, 252, 253, 262, 273, 276, 283, 289, 295, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 463, 466, 468, 477, 483, 485, 496, 509, 512, 517, 537, 540, 543, 544, 549, 550, 552, 553, 557, 562, 564, 566, 571, 572, 577, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 629, 630, 635, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 685, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 770, 771, 776, 784, 791, 801, 808, 809, 812, 818, 819, 822, 828, 829, 836, 837, 844, 845, 852, 853, 854, 861, 862, 868, 869, 875, 876, 881, 882, 887, 888, 910, 911, 916, 921, 922, 929, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "subclass": [1134, 1143, 1150, 1160, 1166, 1178, 1187, 1190, 1191, 1199, 1203, 1205, 1219, 1235, 1237, 1251, 1279, 1287, 1296, 1298, 1318, 1356, 1397, 1399, 1402, 1406, 1424, 1425, 1426, 1442, 1443, 1444, 1539, 1540], "subfigur": 1251, "subject": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 231, 237, 244, 252, 253, 262, 269, 276, 283, 289, 296, 306, 308, 327, 329, 332, 339, 343, 351, 358, 364, 416, 421, 427, 429, 430, 432, 440, 447, 449, 451, 453, 466, 468, 471, 477, 485, 490, 496, 504, 512, 514, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 584, 586, 589, 593, 599, 606, 613, 618, 621, 623, 630, 636, 641, 646, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 697, 702, 707, 712, 714, 718, 722, 727, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "sublist": [1134, 1135, 1138], "submit": [0, 1724], "subplot": [1087, 1095, 1134, 1252, 1327, 1351, 1406, 1410, 1413, 1494, 1717, 1718, 1719, 1720, 1725, 1726, 1729, 1730, 1731, 1732, 1733], "subplots_adjust": 1717, "subplots_axes_and_figur": [1443, 1444], "subplotspec": [1134, 1351, 1447, 1494], "subsequ": [714, 722, 1718, 1729], "subset": [0, 162, 181, 183, 187, 188, 198, 212, 252, 272, 274, 311, 317, 318, 379, 384, 385, 386, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 417, 423, 425, 432, 434, 442, 443, 445, 461, 464, 473, 475, 486, 492, 494, 496, 498, 506, 507, 510, 515, 516, 530, 536, 649, 650, 799, 800, 1275, 1291, 1699, 1704, 1722], "substr": 1533, "subtitl": 1719, "subtract": [589, 1199, 1200, 1704, 1716], "success": [529, 1121, 1523], "suffici": [1511, 1518, 1710], "suffix": [410, 416, 417, 485, 486], "suitabl": [1261, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540], "sum": [0, 1011, 1018, 1024, 1029, 1031, 1034, 1035, 1036, 1037, 1289, 1397, 1398, 1402, 1430, 1525, 1576, 1732], "sum_n": 1555, "summar": [0, 1435], "summari": 1730, "super": 1576, "superp": 812, "superp_to_amb": [930, 931, 935, 936, 940, 941, 945, 946, 1722], "superpos": [829, 837, 845, 853], "superposit": [0, 364, 530, 809, 812, 813, 819, 822, 823, 829, 837, 838, 845, 846, 853, 854, 855, 862, 863, 869, 870, 876, 877, 882, 883, 911, 912, 916, 917, 922, 923, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1699, 1704, 1716, 1720, 1722, 1733], "superpositon": 1722, "suppli": [1394, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1443, 1444, 1478, 1539, 1540], "support": [0, 27, 1111, 1127, 1134, 1142, 1208, 1217, 1230, 1251, 1265, 1266, 1270, 1272, 1273, 1281, 1282, 1293, 1304, 1398, 1402, 1411, 1413, 1414, 1425, 1426, 1431, 1435, 1438, 1439, 1445, 1446, 1447, 1450, 1464, 1482, 1483, 1486, 1493, 1507, 1510, 1514, 1517, 1523, 1524, 1525, 1576, 1696, 1706, 1713, 1715, 1724], "suppos": [1508, 1515], "suppress": [1431, 1458], "sure": [1634, 1715, 1724], "surfac": 1515, "surpris": [1512, 1519], "surround": 1424, "svensson": 916, "svg": [1402, 1425], "sw": [351, 352, 1447, 1451, 1453, 1497], "sweep": [1693, 1694], "swept": [1253, 1435], "switch": [0, 1, 5, 17, 27, 157, 160, 298, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1718, 1720, 1724, 1727, 1728], "sym": [1134, 1269, 1525], "symbol": [1134, 1220, 1222, 1269, 1291, 1435], "symlog": [1397, 1399, 1402, 1424, 1425, 1426, 1442, 1510, 1517, 1539, 1540], "symmetr": [1267, 1291, 1499, 1525, 1716], "symmetri": 1716, "symmetricallogscal": [1510, 1517], "synonym": 1435, "syntax": [1431, 1724], "syntaxerror": 1576, "syntaxwarn": 1576, "system": [0, 1143, 1168, 1178, 1199, 1251, 1436, 1535, 1715, 1716, 1719, 1724, 1730, 1732], "systemerror": 1576, "systemexit": 1576, "t": [0, 266, 408, 453, 454, 656, 657, 758, 759, 776, 777, 791, 792, 1037, 1127, 1129, 1134, 1136, 1152, 1267, 1402, 1442, 1503, 1523, 1541, 1658, 1677, 1689, 1691, 1708, 1720, 1722, 1727, 1729, 1731], "t0": [169, 170, 1718, 1719, 1724, 1726, 1728, 1729, 1730, 1732, 1734], "t1": [1718, 1719, 1724, 1726, 1728, 1729, 1730, 1732, 1734], "t10": [1718, 1724], "t11": [1718, 1724], "t12": [1718, 1724], "t13": [1718, 1724], "t14": [1718, 1724], "t15": [1718, 1724], "t16": [1718, 1724], "t17": [1718, 1724], "t18": [1718, 1724], "t19": [1718, 1724], "t2": [1718, 1719, 1724, 1726, 1729, 1730, 1732], "t20": [1718, 1724], "t21": [1718, 1724], "t22": [1718, 1724], "t23": [1718, 1724], "t24": [1718, 1724], "t25": [1718, 1724], "t26": [1718, 1724], "t27": [1718, 1724], "t28": [1718, 1724], "t29": [1718, 1724], "t3": [1718, 1719, 1724, 1726, 1729, 1730, 1732], "t30": [1718, 1724], "t31": [1718, 1724], "t32": [1718, 1724], "t33": [1718, 1724], "t34": [1718, 1724], "t35": [1718, 1724], "t36": [1718, 1724], "t37": [1718, 1724], "t38": [1718, 1724], "t39": [1718, 1724], "t4": [1718, 1719, 1724, 1726, 1729, 1730], "t40": [1718, 1724], "t41": [1718, 1724], "t42": [1718, 1724], "t43": [1718, 1724], "t44": [1718, 1724], "t45": [1718, 1724], "t46": [1718, 1724], "t47": [1718, 1724], "t48": 1724, "t49": 1724, "t5": [1718, 1719, 1724, 1729], "t50": 1724, "t51": 1724, "t52": 1724, "t53": 1724, "t54": 1724, "t55": 1724, "t56": 1724, "t57": 1724, "t58": 1724, "t59": 1724, "t6": [1718, 1719, 1724, 1729], "t60": 1724, "t61": 1724, "t62": 1724, "t63": 1724, "t64": 1724, "t65": 1724, "t66": 1724, "t67": 1724, "t68": 1724, "t69": 1724, "t7": [1718, 1724, 1729], "t70": 1724, "t71": 1724, "t72": 1724, "t73": 1724, "t74": 1724, "t75": 1724, "t76": 1724, "t77": 1724, "t78": 1724, "t79": 1724, "t8": [1718, 1724, 1729], "t80": 1724, "t81": 1724, "t82": 1724, "t83": 1724, "t84": 1724, "t85": 1724, "t86": 1724, "t87": 1724, "t88": 1724, "t89": 1724, "t9": [1718, 1724], "t90": 1724, "t91": 1724, "t92": 1724, "t93": 1724, "t94": 1724, "t95": 1724, "t96": 1724, "t97": 1724, "t98": 1724, "t99": 1724, "tab": [0, 512, 513, 1134, 1249, 1630, 1703, 1706, 1719], "tab_fil": 0, "taberror": 1576, "tabl": [0, 618, 619, 651, 676, 1088, 1090, 1134, 1249, 1264, 1268, 1281, 1282, 1435, 1533, 1534, 1704, 1705, 1713, 1716, 1724, 1726, 1728], "tablefactor": [0, 651, 652, 653, 654, 655, 1704], "tabstat": [0, 512, 513, 514, 515, 516, 1703], "tabwindroseax": [0, 1062, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1706], "tail": [1253, 1435, 1436], "take": [0, 39, 172, 173, 198, 212, 314, 322, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 940, 941, 974, 975, 980, 981, 1053, 1079, 1080, 1081, 1143, 1149, 1199, 1200, 1250, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1398, 1404, 1415, 1424, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1447, 1449, 1499, 1523, 1524, 1526, 1533, 1535, 1539, 1541, 1551, 1716, 1724], "taken": [432, 1289, 1397, 1424, 1436, 1539, 1540, 1716, 1730], "talli": 1399, "target": [0, 1, 17, 27, 46, 49, 53, 55, 59, 63, 67, 87, 92, 101, 103, 137, 138, 140, 141, 146, 147, 150, 157, 185, 195, 201, 202, 205, 213, 216, 225, 237, 244, 252, 253, 254, 255, 256, 257, 258, 259, 262, 266, 276, 278, 279, 280, 282, 283, 284, 285, 289, 293, 296, 300, 306, 314, 316, 318, 319, 320, 321, 322, 327, 329, 332, 335, 339, 340, 343, 348, 349, 351, 352, 358, 360, 361, 363, 364, 365, 366, 416, 418, 427, 430, 432, 436, 447, 449, 451, 453, 457, 466, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 537, 540, 543, 544, 550, 552, 553, 555, 556, 557, 561, 562, 563, 564, 566, 569, 570, 572, 575, 578, 579, 580, 581, 583, 586, 587, 589, 591, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 681, 686, 692, 698, 702, 708, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 762, 764, 768, 771, 775, 776, 781, 782, 784, 790, 791, 797, 801, 806, 809, 810, 811, 812, 814, 815, 816, 819, 820, 821, 822, 824, 825, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 882, 885, 904, 911, 914, 915, 916, 919, 922, 925, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 956, 959, 960, 962, 965, 966, 968, 971, 972, 974, 977, 978, 980, 983, 984, 986, 989, 990, 992, 995, 996, 998, 1001, 1002, 1698, 1699, 1716, 1728], "target_point": [146, 147, 1698], "target_var": [636, 637, 1728], "targets_i0": [314, 321], "targets_i0_i1": 205, "task": [1208, 1725], "tbl": [0, 712, 713, 1704], "tbl_file": [712, 713], "tblfile": [0, 712, 713, 1704], "tcp": 1724, "tdata": [0, 1, 17, 27, 53, 55, 67, 101, 103, 157, 159, 169, 170, 202, 205, 213, 216, 253, 254, 255, 256, 258, 259, 266, 276, 278, 279, 282, 283, 284, 285, 289, 293, 296, 300, 306, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 339, 340, 343, 348, 349, 358, 360, 363, 364, 365, 416, 418, 427, 430, 432, 436, 447, 449, 451, 453, 457, 466, 468, 470, 477, 479, 485, 487, 496, 499, 512, 517, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 581, 583, 586, 587, 589, 591, 599, 606, 758, 762, 764, 768, 771, 775, 776, 781, 782, 784, 790, 791, 797, 801, 806, 809, 810, 811, 812, 814, 815, 819, 820, 821, 822, 824, 825, 826, 829, 832, 835, 837, 840, 843, 845, 848, 851, 853, 854, 857, 860, 862, 865, 866, 867, 869, 872, 873, 874, 876, 879, 882, 885, 888, 904, 911, 914, 915, 916, 919, 922, 925, 928, 930, 933, 935, 938, 940, 943, 945, 948, 950, 953, 956, 959, 962, 965, 968, 971, 974, 977, 980, 983, 986, 989, 992, 995, 998, 1001, 1699], "techinc": 829, "technic": [1266, 1269, 1271, 1431, 1464], "temperatur": [1648, 1677, 1708], "templat": [0, 1118, 1119, 1121, 1122, 1124, 1125, 1560, 1716, 1722, 1727], "temporari": [1162, 1188, 1204], "terawatt": [149, 1698], "term": [0, 1143, 1152, 1178, 1199, 1716, 1717], "termin": [1532, 1710, 1724], "terminologi": [1714, 1719, 1730, 1736], "terribl": 1435, "test": [0, 277, 560, 574, 764, 1118, 1121, 1134, 1279, 1478, 1577, 1583, 1584, 1586, 1593, 1594, 1600, 1601, 1607, 1608, 1615, 1616, 1623, 1713, 1715, 1719, 1724], "test_farm_67": [1710, 1732], "text": [1061, 1134, 1251, 1265, 1357, 1364, 1365, 1369, 1371, 1373, 1375, 1379, 1380, 1384, 1386, 1388, 1390, 1411, 1430, 1436, 1442, 1484, 1498, 1502, 1507, 1511, 1512, 1514, 1518, 1519, 1533, 1535, 1536, 1576], "text_align": 1535, "text_labels_and_annot": 1535, "textcoord": 1251, "textprop": 1430, "th": [0, 1039, 1040, 1041, 1042, 1043, 1044], "than": [0, 986, 1152, 1208, 1215, 1230, 1253, 1269, 1292, 1370, 1385, 1398, 1399, 1402, 1416, 1424, 1426, 1435, 1442, 1443, 1444, 1447, 1451, 1499, 1508, 1509, 1515, 1516, 1523, 1539, 1540, 1716, 1717, 1724, 1729, 1731], "thank": [0, 1576, 1724], "thei": [0, 195, 298, 323, 324, 343, 860, 1240, 1256, 1266, 1269, 1285, 1289, 1291, 1294, 1295, 1318, 1414, 1416, 1424, 1426, 1431, 1435, 1442, 1445, 1446, 1482, 1508, 1515, 1532, 1539, 1540, 1555, 1630, 1704, 1709, 1714, 1716, 1719, 1721, 1722, 1725, 1732], "them": [1260, 1269, 1271, 1289, 1419, 1431, 1531, 1537, 1574, 1721, 1724, 1733], "themeriv": 1525, "theoret": [801, 882, 888], "theori": [537, 1704], "therefor": [1153, 1394, 1539, 1540], "thereof": [1266, 1270, 1294, 1295, 1397, 1424, 1426, 1435], "theta": [1134, 1143, 1199, 1220, 1230, 1236, 1251, 1297, 1342, 1352, 1354, 1355, 1485, 1495, 1497, 1498, 1499, 1500, 1501], "theta_direct": 1447, "theta_label": 1236, "theta_offset": 1447, "theta_zero_loc": 1447, "thetaformatt": [1134, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1498], "thetagrid": 1447, "thetalim": 1447, "thetaloc": [1134, 1230, 1231, 1232, 1233, 1234, 1235], "thetamax": [1134, 1447, 1499, 1500], "thetamin": [1134, 1447, 1499, 1501], "thi": [0, 1, 17, 27, 46, 47, 49, 51, 53, 55, 59, 61, 63, 65, 67, 69, 87, 89, 92, 94, 101, 103, 157, 181, 183, 185, 195, 196, 198, 203, 213, 216, 225, 227, 237, 238, 239, 243, 244, 248, 252, 253, 262, 266, 272, 274, 276, 283, 284, 288, 289, 293, 296, 298, 300, 306, 327, 328, 329, 330, 332, 339, 343, 346, 351, 358, 359, 364, 375, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 418, 423, 425, 427, 430, 432, 436, 443, 445, 447, 449, 451, 453, 457, 461, 464, 466, 468, 470, 473, 475, 477, 479, 485, 487, 492, 494, 496, 499, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 547, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 583, 586, 587, 589, 591, 593, 595, 599, 606, 613, 616, 618, 620, 623, 626, 630, 632, 636, 638, 641, 642, 644, 649, 650, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 731, 735, 739, 743, 747, 751, 754, 758, 761, 764, 766, 771, 773, 776, 779, 784, 787, 791, 794, 799, 800, 801, 804, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 883, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1018, 1045, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1127, 1134, 1135, 1138, 1140, 1143, 1148, 1149, 1150, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1168, 1169, 1170, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1214, 1215, 1217, 1219, 1220, 1222, 1229, 1230, 1233, 1235, 1237, 1240, 1242, 1243, 1250, 1251, 1252, 1253, 1255, 1256, 1260, 1261, 1264, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1277, 1281, 1282, 1285, 1286, 1287, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1298, 1299, 1300, 1307, 1314, 1318, 1319, 1324, 1330, 1334, 1358, 1362, 1363, 1364, 1365, 1366, 1378, 1379, 1380, 1381, 1394, 1395, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1406, 1409, 1411, 1414, 1415, 1417, 1420, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1443, 1444, 1445, 1446, 1452, 1453, 1458, 1459, 1460, 1461, 1464, 1468, 1474, 1476, 1478, 1480, 1482, 1483, 1484, 1486, 1492, 1497, 1498, 1506, 1507, 1509, 1511, 1513, 1514, 1516, 1518, 1521, 1522, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1548, 1550, 1551, 1552, 1555, 1574, 1594, 1601, 1608, 1694, 1695, 1696, 1700, 1703, 1704, 1706, 1710, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736], "thick": [1258, 1261, 1262, 1291], "thin": [1414, 1445, 1446, 1530], "thin_diamond": 1431, "think": 1724, "third": [0, 1269, 1271, 1431, 1646, 1674, 1708], "those": [1266, 1269, 1424, 1426, 1431, 1442, 1523, 1530, 1543, 1544, 1714, 1716, 1724], "though": [1285, 1434, 1460, 1717, 1724, 1734], "thought": [1289, 1726], "thousand": 1576, "thread": [0, 405, 1701, 1724], "threadsengin": [0, 398, 405, 1701, 1724], "three": [0, 1255, 1271, 1357, 1402, 1413, 1502, 1541, 1716, 1719, 1734], "threshold": [623, 624, 1077, 1078, 1134, 1482], "through": [0, 540, 1240, 1261, 1265, 1430, 1525, 1529, 1555, 1704, 1713, 1727], "throughout": 1731, "throw": 266, "thrust": [0, 656, 657, 1642, 1656, 1704, 1708, 1713, 1714, 1716, 1718, 1726, 1734], "thrust2ct": [0, 656, 657, 658, 659, 660, 1704, 1722], "thrust_var": [656, 657, 1722], "thu": [1261, 1402, 1426], "ti": [0, 1, 2, 17, 27, 351, 352, 353, 357, 468, 469, 477, 478, 586, 667, 668, 722, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 922, 923, 930, 935, 940, 945, 1095, 1127, 1129, 1658, 1662, 1663, 1678, 1689, 1691, 1704, 1708, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "ti_cub": 1722, "ti_linear": [1716, 1722], "ti_max": 1722, "ti_quadrat": [0, 1716, 1722], "ti_quart": 1722, "ti_val": [667, 668], "ti_var": [351, 353, 667, 668, 1722], "tick": [1134, 1208, 1210, 1215, 1218, 1220, 1221, 1224, 1225, 1229, 1230, 1231, 1260, 1267, 1269, 1271, 1312, 1362, 1366, 1371, 1373, 1375, 1376, 1377, 1381, 1386, 1388, 1390, 1391, 1392, 1410, 1413, 1414, 1416, 1417, 1418, 1419, 1432, 1437, 1458, 1460, 1484, 1498, 1507, 1511, 1512, 1514, 1518, 1519, 1537, 1538, 1543, 1544, 1553, 1556], "tick1": [1366, 1381], "tick2": [1366, 1381], "tick_label": [1267, 1269], "tick_param": [1134, 1512, 1519, 1537], "tick_valu": [1208, 1218, 1230], "ticker": [1134, 1208, 1220, 1230, 1413, 1432, 1484, 1498, 1511, 1512, 1518, 1519, 1539, 1540, 1543, 1544], "ticklabel": [1362, 1375, 1390, 1511, 1518], "ticklabel_format": [1134, 1538], "tight": [1134, 1255, 1256, 1260, 1329, 1356, 1413, 1416, 1471], "tight_layout": [1134, 1329, 1471, 1718], "tightbbox": 1356, "tilinear": [930, 931, 932, 933, 934, 1704, 1722], "timax": [935, 936, 937, 938, 939, 1704, 1722], "time": [0, 1, 17, 27, 101, 142, 157, 177, 198, 209, 213, 276, 281, 296, 303, 306, 309, 327, 329, 331, 332, 338, 339, 342, 343, 350, 358, 362, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 417, 427, 430, 431, 432, 447, 449, 451, 453, 466, 468, 477, 485, 486, 496, 512, 517, 520, 557, 562, 564, 566, 572, 578, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922, 1009, 1018, 1032, 1038, 1045, 1048, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1134, 1143, 1161, 1178, 1199, 1250, 1269, 1277, 1285, 1289, 1292, 1293, 1402, 1415, 1416, 1427, 1431, 1432, 1434, 1435, 1453, 1509, 1516, 1523, 1698, 1703, 1706, 1714, 1715, 1716, 1719, 1720, 1721, 1722, 1723, 1724, 1726, 1729, 1731, 1732], "time_coord": [430, 431, 1723], "time_format": [416, 417, 485, 486, 1721], "timedelta": 1267, "timelin": [0, 453, 454, 467, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 1704, 1716, 1722, 1731], "timelines_": [1716, 1722], "timelines_10": [1722, 1731], "timeouterror": 1576, "timepandasindexpandasindex": 1723, "timeseri": [0, 430, 447, 449, 451, 453, 454, 466, 517, 518, 520, 758, 759, 776, 777, 791, 792, 1032, 1703, 1704, 1710, 1712, 1713, 1714, 1720, 1723, 1724, 1729, 1731], "timeseries_100": [0, 1720, 1731], "timeseries_3000": 1729, "timeseries_8000": [1710, 1732], "timeseries_data": 1724, "timeseries_slurm": 0, "timeseries_var": 1724, "timestep": 0, "timezon": [1432, 1553, 1556], "tip": [606, 1266, 1267, 1435, 1704], "tipow": [940, 941, 942, 943, 944, 1704, 1722], "tiquadrat": [0, 945, 946, 947, 948, 949, 1704, 1722], "titl": [0, 1011, 1039, 1040, 1041, 1042, 1043, 1044, 1061, 1062, 1064, 1066, 1085, 1087, 1093, 1095, 1096, 1134, 1356, 1357, 1447, 1502, 1711, 1717, 1718, 1719, 1720, 1723, 1725, 1726, 1728, 1729, 1731, 1732, 1733], "titlecolor": 1502, "titlei": 1502, "titleloc": 1502, "titlepad": 1502, "titles": [1502, 1511, 1518], "titleweight": [1502, 1511, 1518], "tke": [0, 586, 1704, 1719, 1723], "tke2ti": [0, 586, 587, 588, 1704, 1716, 1722], "tl_height": [453, 454, 466, 467], "tldr": 1713, "tmodel": [143, 1698, 1724], "tmodel_sel": [144, 1698, 1724], "tmodel_typ": [329, 331, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667], "tname": [145, 1698, 1718, 1724, 1728, 1729, 1730], "to_csv": [521, 1631], "to_datafram": [1721, 1723, 1726, 1730, 1731, 1732, 1734], "to_fil": [1053, 1079, 1080, 1081, 1082, 1083, 1084, 1088, 1090], "to_netcdf": 1640, "to_numpi": [1717, 1718, 1725], "to_utm": 1629, "to_valu": [1178, 1192], "toc": [375, 1097, 1104, 1719], "togeth": [244, 289, 1143, 1147, 1155, 1178, 1199, 1289, 1397, 1399, 1402, 1424, 1425, 1426, 1442, 1539, 1540, 1710, 1723, 1734], "toggl": [1134, 1255, 1394], "toler": 1478, "too": [1532, 1724], "tool": [522, 523, 1632, 1703, 1710, 1715, 1729], "toolbar": [1134, 1336, 1475, 1476], "toolcursorposit": 1474, "top": [157, 572, 822, 1134, 1250, 1251, 1258, 1261, 1262, 1266, 1267, 1277, 1285, 1289, 1291, 1364, 1365, 1379, 1380, 1385, 1394, 1398, 1402, 1410, 1415, 1417, 1427, 1431, 1432, 1434, 1443, 1444, 1447, 1451, 1486, 1502, 1514, 1515, 1524, 1525, 1535, 1537, 1540, 1543, 1544, 1550, 1551, 1554, 1557, 1692, 1702, 1704, 1709, 1716, 1718, 1725, 1734], "top_hat": [1716, 1722, 1725], "top_lim": 1515, "tophatwakemodel": [822, 823, 824, 825, 826, 827, 828, 862, 869, 911, 1709, 1716], "torben": 540, "total": [0, 27, 43, 101, 108, 213, 219, 306, 312, 364, 370, 416, 424, 427, 430, 432, 444, 447, 449, 451, 453, 462, 466, 468, 474, 477, 482, 485, 493, 496, 508, 512, 517, 1009, 1018, 1026, 1038, 1045, 1047, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1251, 1253, 1292, 1398], "touch": 0, "toward": [1266, 1398], "tpoint": [138, 146, 147, 266, 314, 318, 1698], "tpoint_mean": [314, 322], "tpoint_weight": [150, 1698], "trace": 1731, "traceback": [198, 204, 386, 391, 393, 394, 396, 398, 399, 400, 405], "tracker": 1713, "tradit": 1398, "tradition": 1266, "trajectori": 1731, "tran": 1154, "transax": [1261, 1404, 1406, 1462, 1535], "transdata": [1154, 1241, 1406], "transfer": [0, 1734], "transform": [1134, 1143, 1147, 1148, 1149, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 1166, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1181, 1183, 1184, 1185, 1186, 1187, 1188, 1191, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1202, 1203, 1204, 1205, 1206, 1207, 1241, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1358, 1359, 1364, 1365, 1366, 1379, 1380, 1381, 1394, 1397, 1402, 1404, 1406, 1409, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1443, 1444, 1447, 1462, 1464, 1479, 1503, 1524, 1532, 1533, 1535, 1716], "transform_affin": [1143, 1170, 1173, 1178, 1194, 1195, 1199, 1206], "transform_angl": [1143, 1171, 1178, 1199], "transform_bbox": [1143, 1172, 1178, 1199], "transform_non_affin": [1143, 1170, 1173, 1178, 1194, 1195, 1199, 1206], "transform_path": [1143, 1174, 1175, 1176, 1178, 1196, 1197, 1198, 1199, 1207], "transform_path_affin": [1143, 1175, 1176, 1178, 1197, 1198, 1199, 1207], "transform_path_non_affin": [1143, 1175, 1176, 1178, 1197, 1198, 1199, 1207], "transform_point": [1143, 1177, 1178, 1199], "transform_rotates_text": 1535, "transformedbbox": [1172, 1462], "transformedpath": 1464, "transformnod": [1143, 1161, 1178, 1199], "translat": [0, 343, 524, 1703, 1714, 1734], "transluc": [1263, 1537], "transoffset": [1266, 1270, 1294, 1295, 1397, 1424, 1426, 1435], "transpar": [1266, 1292, 1397, 1402, 1404, 1424, 1425, 1426, 1442, 1537, 1539, 1540], "transport": 1720, "transpos": 1398, "travel": 1720, "travers": 1532, "treat": [67, 1037, 1134, 1162, 1188, 1204, 1398, 1432, 1529, 1553, 1556, 1729], "treatment": 0, "tree": [1143, 1153, 1154, 1178, 1199], "trend": [1277, 1285, 1434, 1523], "tri": [1539, 1540], "tri_down": 1431, "tri_left": 1431, "tri_right": 1431, "tri_up": 1431, "triangl": [1266, 1435, 1539, 1540, 1541, 1542], "triangle_down": 1431, "triangle_left": 1431, "triangle_right": 1431, "triangle_up": 1431, "triangul": [1539, 1540, 1541, 1542], "triangular": [1134, 1253, 1539, 1540, 1541, 1542], "tricki": 1291, "tricontour": [1134, 1539], "tricontourf": [1134, 1540], "tricontourset": [1539, 1540], "trigger": [1025, 1143, 1161, 1178, 1199, 1423, 1576, 1710], "tripcolor": [1134, 1541], "triplot": [1134, 1542], "trivial": 1724, "troldborg": [845, 853, 1709, 1717], "true": [1, 4, 5, 17, 19, 27, 41, 74, 79, 83, 111, 157, 159, 166, 169, 170, 187, 190, 203, 207, 222, 232, 233, 260, 266, 268, 271, 276, 277, 300, 314, 336, 337, 345, 372, 373, 375, 379, 380, 384, 406, 407, 411, 417, 486, 512, 513, 519, 521, 557, 560, 562, 564, 566, 572, 574, 578, 595, 599, 600, 606, 607, 682, 683, 689, 690, 699, 700, 709, 710, 719, 720, 728, 729, 907, 923, 1033, 1039, 1040, 1041, 1042, 1043, 1044, 1072, 1073, 1097, 1103, 1105, 1109, 1110, 1111, 1112, 1114, 1117, 1121, 1134, 1140, 1143, 1149, 1153, 1159, 1165, 1167, 1178, 1186, 1189, 1190, 1199, 1200, 1202, 1240, 1244, 1251, 1253, 1255, 1256, 1260, 1264, 1266, 1267, 1268, 1269, 1271, 1277, 1281, 1282, 1285, 1291, 1294, 1295, 1296, 1308, 1329, 1339, 1356, 1377, 1392, 1394, 1397, 1398, 1402, 1404, 1405, 1406, 1409, 1410, 1411, 1413, 1416, 1424, 1426, 1430, 1431, 1432, 1434, 1439, 1442, 1448, 1451, 1452, 1453, 1460, 1468, 1478, 1486, 1493, 1508, 1511, 1512, 1515, 1518, 1519, 1523, 1526, 1532, 1537, 1538, 1539, 1540, 1546, 1548, 1550, 1551, 1555, 1576, 1582, 1583, 1592, 1593, 1594, 1596, 1599, 1600, 1601, 1603, 1606, 1607, 1608, 1610, 1614, 1615, 1622, 1623, 1629, 1630, 1699, 1706, 1710, 1716, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1731, 1732, 1733], "truli": 0, "truncat": 1266, "truth": 1725, "try": [0, 1269, 1271, 1483, 1724, 1725], "ttype": [527, 528, 1703, 1717, 1725, 1728], "ttype_typ": [332, 338, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1710], "tukei": 1269, "tupl": [18, 28, 161, 162, 169, 170, 177, 179, 187, 188, 189, 190, 196, 197, 205, 209, 212, 223, 224, 241, 243, 261, 286, 288, 303, 309, 315, 316, 317, 318, 331, 338, 350, 352, 362, 380, 382, 389, 401, 409, 410, 428, 431, 450, 452, 454, 467, 513, 519, 520, 521, 535, 565, 687, 732, 736, 740, 744, 820, 879, 919, 925, 1011, 1033, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1048, 1053, 1062, 1066, 1069, 1074, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1095, 1096, 1107, 1109, 1110, 1114, 1115, 1116, 1118, 1119, 1135, 1138, 1178, 1192, 1250, 1251, 1258, 1261, 1262, 1264, 1266, 1268, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1349, 1394, 1397, 1398, 1404, 1405, 1415, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1443, 1444, 1447, 1464, 1484, 1498, 1508, 1515, 1524, 1529, 1532, 1546, 1560, 1576, 1632], "turbim": [411, 1703], "turbin": [0, 1, 3, 4, 5, 17, 19, 27, 31, 32, 37, 49, 55, 59, 136, 139, 143, 144, 145, 148, 157, 161, 184, 187, 193, 222, 225, 226, 228, 235, 252, 253, 254, 255, 256, 257, 260, 266, 276, 278, 279, 300, 314, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 338, 343, 346, 348, 349, 358, 359, 360, 361, 365, 367, 369, 370, 371, 377, 378, 408, 409, 410, 411, 412, 413, 414, 415, 527, 528, 530, 532, 543, 544, 545, 547, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 595, 613, 614, 616, 618, 620, 623, 626, 630, 632, 636, 637, 638, 641, 644, 651, 653, 656, 659, 661, 662, 664, 665, 667, 670, 672, 674, 676, 679, 686, 688, 692, 695, 702, 705, 712, 714, 716, 722, 725, 758, 761, 762, 764, 766, 768, 771, 773, 775, 776, 779, 781, 782, 784, 787, 790, 791, 794, 797, 801, 804, 806, 809, 812, 815, 816, 819, 822, 824, 825, 829, 832, 833, 837, 840, 841, 845, 848, 849, 853, 854, 857, 858, 862, 865, 866, 869, 872, 873, 876, 882, 888, 907, 911, 914, 915, 916, 922, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1011, 1014, 1016, 1018, 1020, 1023, 1024, 1025, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1053, 1056, 1057, 1058, 1060, 1062, 1079, 1080, 1081, 1085, 1088, 1090, 1091, 1093, 1095, 1652, 1653, 1666, 1667, 1679, 1685, 1686, 1693, 1694, 1695, 1698, 1699, 1700, 1702, 1703, 1704, 1705, 1708, 1712, 1713, 1714, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1731, 1732, 1733, 1734, 1736], "turbine1": 1716, "turbine2farmmodel": [544, 545, 546, 547, 548, 549, 1704, 1722], "turbine_base_nam": 408, "turbine_base_name_count_shift": 408, "turbine_id": 408, "turbine_model": [323, 324, 408, 530, 544, 545, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 1710, 1714, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "turbine_model_nam": 225, "turbine_nam": [367, 371, 1054, 1056, 1057], "turbine_paramet": [408, 411, 412, 413, 414, 415], "turbine_result": 1732, "turbine_typ": [225, 530, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 1093, 1095, 1710, 1716, 1717, 1718, 1719, 1722, 1725, 1728, 1730], "turbine_yield": [1018, 1025], "turbineinductionmodel": [327, 328, 829, 837, 845, 854, 1699, 1709], "turbinemodel": [252, 325, 326, 329, 330, 331, 332, 530, 544, 545, 613, 614, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 1699, 1704], "turbineord": 1, "turbines_op": [1018, 1034], "turbinetyp": [225, 332, 333, 334, 335, 336, 337, 338, 530, 676, 677, 686, 687, 692, 693, 702, 703, 714, 715, 722, 723, 1699, 1704], "turbinetypecurv": [0, 1093, 1094, 1095, 1705, 1719, 1726], "turbopark": [0, 916, 922, 1709], "turbopark_": [1716, 1722], "turbopark_linear": 1722, "turbopark_linear_ambka0": 1722, "turbopark_linear_k0": 1722, "turbopark_linear_ka0": 1722, "turbopark_quadratic_loc_k004": 1716, "turboparkb_": 1722, "turboparkb_linear": 1722, "turboparkb_linear_ambka0": 1722, "turboparkb_linear_k0": 1722, "turboparkb_linear_ka0": 1722, "turboparkix": 0, "turboparkix_": 1722, "turboparkix_linear_ambka0": 1722, "turboparkix_linear_dx100": 1722, "turboparkix_linear_k0": 1722, "turboparkix_linear_ka0": 1722, "turboparkwak": [0, 916, 917, 918, 919, 920, 921, 1709, 1722], "turboparkwakeix": [922, 923, 924, 925, 926, 927, 928, 929, 1709, 1722], "turbul": [0, 306, 722, 862, 916, 917, 1649, 1678, 1704, 1708, 1709, 1716, 1721, 1723, 1732, 1733, 1734], "turn": [1255, 1260, 1419, 1508, 1515], "tutori": 1402, "tw": [131, 149, 1698], "tweight": [150, 314, 318, 1698], "twice": [1266, 1453], "twin": [1134, 1448, 1543, 1544], "twini": [1134, 1544], "twinx": [1134, 1543], "two": [0, 39, 172, 173, 182, 231, 269, 308, 412, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 651, 674, 697, 707, 712, 714, 718, 722, 727, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1143, 1147, 1152, 1155, 1178, 1190, 1199, 1250, 1251, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1293, 1294, 1295, 1394, 1397, 1399, 1402, 1404, 1405, 1406, 1415, 1416, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1436, 1447, 1449, 1479, 1493, 1523, 1524, 1533, 1535, 1574, 1627, 1634, 1635, 1704, 1705, 1706, 1710, 1714, 1716, 1720, 1721, 1724, 1726, 1727, 1728, 1729, 1732, 1734], "two_circl": [1634, 1635], "twosid": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "txt": 0, "txyh": [1679, 1708], "type": [0, 1, 17, 27, 46, 49, 53, 59, 63, 67, 81, 82, 87, 92, 101, 111, 113, 114, 121, 124, 157, 185, 195, 198, 204, 213, 225, 237, 244, 252, 253, 262, 270, 276, 277, 283, 289, 296, 306, 323, 324, 327, 329, 332, 338, 339, 343, 351, 358, 364, 386, 391, 393, 394, 396, 398, 399, 400, 405, 408, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 527, 528, 530, 532, 535, 536, 537, 540, 543, 544, 550, 552, 553, 557, 560, 562, 564, 566, 572, 574, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1014, 1088, 1093, 1095, 1134, 1135, 1136, 1138, 1208, 1211, 1218, 1230, 1232, 1251, 1265, 1283, 1284, 1286, 1290, 1292, 1398, 1406, 1413, 1425, 1510, 1517, 1524, 1528, 1576, 1698, 1699, 1701, 1703, 1704, 1705, 1713, 1714, 1717, 1719, 1720, 1721, 1722, 1725, 1726, 1730, 1732, 1734], "type_col": [1009, 1014], "typeerror": [0, 277, 560, 574, 1416, 1576, 1716], "typic": [243, 288, 306, 1252, 1264, 1268, 1281, 1282, 1402, 1435, 1462, 1524, 1531, 1714, 1716], "typograph": [1220, 1222, 1442], "tz": [1134, 1432, 1553, 1556], "tzinfo": [1432, 1553, 1556], "u": [1134, 1220, 1222, 1266, 1435, 1436, 1532, 1636, 1637], "u19": 1723, "u2": [1724, 1729, 1730], "u3": [1718, 1724], "u7": 1724, "ubuntu": 1724, "uk": 829, "ultra": 1535, "ultralight": 1535, "unassoci": 1402, "unboundlocalerror": 1576, "uncertainti": 1025, "unchang": [1255, 1416, 1508, 1515, 1537, 1538], "undefin": 1261, "under": [0, 17, 25, 26, 27, 87, 88, 92, 93, 225, 226, 231, 244, 269, 289, 308, 421, 429, 440, 471, 490, 504, 514, 584, 621, 646, 697, 707, 718, 727, 1398, 1435, 1526, 1539, 1540, 1695, 1709, 1710, 1713, 1716, 1718, 1719, 1721, 1722, 1726, 1727, 1734], "underli": [1050, 1716, 1720], "understood": [0, 1714], "undo": 1441, "unequ": [0, 1398], "unexpect": [1463, 1511, 1518], "unfil": [1294, 1295, 1398], "unfinish": 0, "unicod": [1220, 1222], "unicode_minu": [1220, 1222], "unicodedecodeerror": 1576, "unicodeencodeerror": 1576, "unicodeerror": 1576, "unicodetranslateerror": 1576, "unicodewarn": 1576, "unifi": 1710, "uniform": [0, 416, 417, 432, 434, 477, 485, 486, 496, 498, 520, 581, 582, 668, 754, 791, 1266, 1425, 1435, 1703, 1704, 1716, 1717, 1718, 1719, 1725, 1727, 1730, 1732, 1734], "uniformli": 1530, "uniformprofil": [754, 755, 756, 757, 1704], "union": [1546, 1586, 1706], "uniqu": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 270, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "unit": [81, 82, 123, 126, 131, 149, 153, 156, 332, 333, 623, 624, 862, 863, 1025, 1032, 1134, 1220, 1240, 1250, 1259, 1263, 1267, 1277, 1283, 1284, 1285, 1394, 1396, 1402, 1404, 1406, 1411, 1415, 1427, 1434, 1435, 1436, 1453, 1461, 1512, 1519, 1523, 1533, 1539, 1540, 1550, 1551, 1555, 1643, 1669, 1698, 1708, 1716, 1719], "unittest": 0, "unknown": [1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1394, 1397, 1404, 1415, 1424, 1427, 1431, 1432, 1434, 1435, 1447, 1524, 1535], "unless": [1135, 1138, 1240, 1250, 1266, 1267, 1269, 1270, 1277, 1285, 1289, 1291, 1292, 1294, 1295, 1298, 1313, 1397, 1398, 1399, 1400, 1402, 1415, 1424, 1425, 1426, 1427, 1430, 1432, 1434, 1435, 1442, 1479, 1523, 1525, 1526, 1529, 1532, 1537, 1539, 1551, 1552, 1555], "unlik": [1256, 1277, 1285, 1434, 1523], "unmask": 1442, "unnam": 1265, "unpack": [1502, 1511, 1518, 1535], "unpaint": 1397, "uns": 1693, "unset": [1134, 1289, 1447], "unset_run": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 181, 183, 185, 195, 213, 225, 237, 244, 252, 253, 262, 272, 274, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 423, 425, 427, 430, 432, 443, 445, 447, 449, 451, 453, 461, 464, 466, 468, 473, 475, 477, 485, 492, 494, 496, 507, 510, 512, 515, 516, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 649, 650, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 799, 800, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998], "unshar": [1521, 1522], "unsightli": 1397, "unspecifi": [1135, 1138, 1220, 1221, 1223, 1525], "unstabl": [739, 743, 1570, 1571, 1572, 1704, 1706], "unstack": 1525, "unstructur": [1134, 1539, 1540, 1541, 1542], "until": [0, 1252, 1439, 1532, 1548, 1693, 1695, 1720], "unvalid": 1480, "unwrap": [1250, 1415, 1427, 1523], "up": [0, 3, 812, 813, 823, 1032, 1039, 1040, 1041, 1134, 1214, 1233, 1271, 1290, 1294, 1295, 1402, 1426, 1452, 1511, 1518, 1553, 1556, 1716, 1717, 1718, 1724], "upcast": 266, "updat": [0, 27, 28, 96, 100, 253, 256, 276, 279, 365, 550, 552, 553, 557, 562, 564, 566, 569, 572, 578, 579, 623, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001, 1067, 1071, 1072, 1076, 1134, 1143, 1152, 1156, 1162, 1178, 1183, 1188, 1199, 1204, 1241, 1252, 1256, 1395, 1439, 1485, 1489, 1537, 1545, 1546, 1696, 1710, 1729, 1734], "update_datalim": [1134, 1241, 1546], "update_from": [1134, 1547], "update_n_turbin": [1, 17, 27, 157, 184], "updatei": [1134, 1546], "updatex": [1134, 1546], "uplim": 1291, "upon": [1399, 1716], "upper": [345, 606, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1134, 1251, 1259, 1263, 1267, 1269, 1271, 1291, 1367, 1382, 1398, 1402, 1405, 1411, 1417, 1436, 1447, 1506, 1513, 1524, 1531, 1535, 1539, 1540, 1704, 1720, 1725, 1731], "upper_left": 1404, "upper_right": 1404, "upsampl": 1402, "upstream": [854, 1716, 1717, 1718], "upward": [1291, 1402, 1716], "upwind": [327, 328, 358, 359, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922], "urel": [17, 25, 27, 92, 93], "urelax": [17, 26, 27, 87, 88, 92, 93, 94, 95, 1695], "url": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1289, 1291, 1294, 1295, 1360, 1394, 1397, 1402, 1404, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1504, 1524, 1533, 1535, 1711], "urlx": 26, "us": [0, 27, 53, 54, 198, 199, 202, 244, 289, 351, 357, 364, 385, 390, 395, 397, 403, 407, 408, 586, 623, 676, 731, 732, 735, 736, 739, 740, 743, 744, 764, 802, 809, 812, 862, 863, 882, 883, 888, 903, 1011, 1018, 1033, 1056, 1057, 1134, 1135, 1138, 1140, 1143, 1149, 1153, 1154, 1156, 1178, 1181, 1183, 1199, 1200, 1208, 1220, 1230, 1240, 1241, 1242, 1250, 1251, 1252, 1253, 1256, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1271, 1277, 1281, 1282, 1283, 1284, 1285, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1298, 1299, 1300, 1303, 1304, 1316, 1318, 1320, 1330, 1356, 1358, 1362, 1363, 1364, 1365, 1366, 1378, 1379, 1380, 1381, 1394, 1395, 1397, 1398, 1399, 1402, 1413, 1414, 1415, 1416, 1417, 1419, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1448, 1450, 1452, 1463, 1464, 1480, 1484, 1492, 1498, 1502, 1509, 1510, 1511, 1512, 1516, 1517, 1518, 1519, 1521, 1522, 1523, 1524, 1525, 1529, 1530, 1531, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1543, 1544, 1550, 1551, 1553, 1555, 1556, 1576, 1696, 1703, 1704, 1710, 1713, 1714, 1715, 1716, 1717, 1718, 1720, 1722, 1723, 1724, 1725, 1726, 1727, 1729, 1730, 1731, 1732, 1733, 1734, 1736], "usabl": 1251, "usag": [0, 1039, 1040, 1041, 1042, 1043, 1044, 1096, 1252, 1267, 1291, 1714, 1715, 1720], "use_amb_ti": [351, 357], "use_ambti": [862, 863, 1722], "use_local": 1538, "use_mathtext": 1538, "use_rmin": [1143, 1149, 1199, 1200], "use_sticky_edg": [1134, 1416, 1548], "useful": 1715, "uselocal": 1538, "usemathtext": 1538, "useoffset": 1538, "user": [0, 1215, 1251, 1252, 1298, 1318, 1402, 1404, 1405, 1443, 1444, 1476, 1478, 1551, 1643, 1669, 1692, 1703, 1708, 1713, 1714, 1716, 1724], "usermedian": 1269, "userwarn": 1576, "usetex": 1535, "usevlin": [1240, 1555], "ustar": [0, 731, 732, 735, 736, 739, 740, 743, 744, 1562, 1564, 1566, 1569, 1570, 1572, 1707], "ustar_input": [731, 732, 735, 736, 739, 740, 743, 744], "usual": [1292, 1402, 1416, 1479, 1531, 1714, 1716, 1736], "utem": [1629, 1632], "util": [0, 26, 111, 180, 187, 367, 375, 385, 390, 395, 397, 403, 407, 524, 525, 526, 530, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1692, 1697, 1699, 1700], "utm": [1629, 1632], "utm_zone_str": [1629, 1632], "utmi": [417, 486, 1721], "utmx": [417, 486, 1721], "uv": [1435, 1636, 1637, 1706], "uv2wd": [1636, 1706], "v": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 275, 276, 283, 289, 296, 306, 327, 329, 332, 339, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1134, 1266, 1431, 1432, 1435, 1442, 1532, 1636, 1637], "v0": [1214, 1230, 1233], "v1": [1214, 1230, 1233], "v2": 869, "va": [1265, 1535], "val": [1526, 1550], "valid": [151, 540, 676, 677, 692, 693, 702, 703, 722, 723, 1135, 1138, 1251, 1258, 1261, 1262, 1291, 1292, 1394, 1430, 1431, 1480, 1502, 1537, 1698, 1704, 1713, 1716], "valid_typ": [1135, 1138], "valign": [1134, 1364, 1365, 1379, 1380], "valu": [0, 1, 3, 4, 5, 8, 11, 16, 25, 27, 28, 47, 51, 55, 61, 65, 69, 81, 82, 89, 94, 103, 131, 163, 174, 181, 183, 186, 196, 198, 202, 204, 205, 216, 227, 239, 248, 254, 255, 256, 257, 258, 259, 272, 274, 278, 279, 282, 284, 293, 298, 330, 343, 347, 351, 352, 353, 360, 361, 363, 385, 386, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 403, 405, 407, 416, 417, 418, 423, 425, 428, 432, 434, 436, 443, 445, 453, 454, 457, 461, 464, 468, 469, 470, 473, 475, 477, 478, 479, 485, 486, 487, 492, 494, 496, 498, 499, 507, 510, 515, 516, 519, 520, 521, 530, 537, 538, 539, 540, 542, 547, 555, 556, 561, 569, 575, 579, 583, 587, 589, 590, 591, 595, 616, 619, 620, 623, 626, 630, 631, 632, 638, 644, 649, 650, 653, 659, 662, 665, 668, 670, 679, 688, 695, 705, 714, 716, 722, 725, 743, 747, 748, 754, 755, 758, 759, 764, 767, 771, 774, 776, 777, 780, 784, 788, 791, 792, 796, 799, 800, 801, 805, 809, 810, 811, 812, 813, 814, 815, 816, 820, 821, 823, 824, 825, 826, 832, 833, 835, 840, 841, 843, 848, 849, 851, 857, 858, 860, 865, 866, 867, 872, 873, 874, 879, 883, 885, 904, 907, 914, 915, 919, 925, 928, 1020, 1025, 1032, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1056, 1057, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1095, 1096, 1097, 1118, 1119, 1121, 1123, 1134, 1135, 1141, 1142, 1143, 1162, 1169, 1170, 1173, 1175, 1176, 1178, 1180, 1188, 1192, 1193, 1194, 1195, 1197, 1198, 1199, 1204, 1206, 1207, 1208, 1214, 1218, 1220, 1221, 1223, 1224, 1225, 1230, 1233, 1240, 1242, 1250, 1251, 1252, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1279, 1281, 1282, 1285, 1289, 1291, 1292, 1294, 1295, 1298, 1299, 1300, 1304, 1318, 1338, 1340, 1370, 1385, 1394, 1397, 1398, 1399, 1402, 1404, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1445, 1446, 1447, 1449, 1450, 1453, 1455, 1456, 1460, 1468, 1480, 1482, 1485, 1493, 1497, 1499, 1507, 1508, 1510, 1514, 1515, 1517, 1520, 1523, 1524, 1526, 1529, 1530, 1531, 1532, 1533, 1535, 1538, 1539, 1540, 1541, 1550, 1551, 1555, 1566, 1568, 1570, 1571, 1576, 1629, 1633, 1662, 1698, 1704, 1706, 1708, 1716, 1717, 1718, 1721, 1722, 1723, 1724, 1726, 1728, 1734], "valueerror": [372, 1135, 1142, 1424, 1426, 1430, 1480, 1499, 1576], "values2": 1480, "var": [1, 17, 27, 46, 49, 53, 59, 63, 67, 87, 92, 101, 152, 157, 185, 195, 213, 225, 237, 244, 252, 253, 262, 275, 276, 283, 289, 296, 306, 327, 329, 332, 339, 341, 343, 351, 358, 364, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 590, 593, 599, 606, 613, 618, 623, 630, 631, 636, 641, 643, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 734, 735, 738, 739, 742, 743, 746, 747, 750, 751, 753, 754, 757, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1018, 1023, 1024, 1027, 1028, 1029, 1030, 1031, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1058, 1060, 1062, 1063, 1091, 1096, 1134, 1264, 1268, 1281, 1282, 1576, 1698, 1717, 1718, 1729], "var2amb": [1691, 1708], "var2arg": [1118, 1119], "var2col": [432, 434, 496, 498, 517, 519, 521, 581, 582, 1710, 1716, 1719, 1720, 1723, 1725, 1728, 1729, 1731, 1732, 1733], "var2ncvar": [416, 417, 485, 486, 1721], "var_bin": [1058, 1060, 1062, 1063, 1091], "var_period": 637, "var_valu": [1118, 1123], "var_wd": [771, 772], "var_ws_ct": [656, 657, 677, 693, 703, 715, 723, 1722, 1724], "var_ws_p": [623, 624, 677, 693, 703, 715, 723, 1722, 1724], "vari": [0, 1134, 1431, 1442, 1532, 1714, 1717, 1719, 1723, 1724, 1727], "variabl": [0, 1, 4, 5, 17, 19, 25, 27, 28, 31, 32, 46, 47, 48, 49, 51, 52, 53, 55, 57, 59, 60, 61, 62, 63, 65, 66, 67, 69, 71, 81, 82, 87, 89, 90, 92, 93, 94, 95, 101, 103, 107, 152, 157, 161, 162, 185, 187, 191, 195, 196, 202, 205, 213, 216, 218, 222, 225, 227, 232, 233, 234, 237, 239, 240, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 266, 275, 276, 278, 279, 282, 283, 284, 285, 287, 288, 289, 293, 294, 296, 297, 298, 300, 304, 306, 310, 314, 322, 327, 329, 330, 332, 335, 336, 337, 339, 341, 343, 345, 349, 351, 353, 358, 360, 361, 363, 364, 365, 366, 385, 390, 395, 397, 403, 407, 416, 417, 418, 422, 427, 428, 430, 432, 434, 436, 441, 447, 449, 451, 453, 457, 460, 466, 468, 470, 472, 477, 478, 479, 481, 485, 486, 487, 491, 496, 498, 499, 505, 512, 517, 519, 520, 521, 529, 537, 540, 543, 544, 547, 548, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 581, 582, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 599, 606, 613, 614, 616, 617, 618, 619, 620, 622, 623, 624, 626, 628, 630, 631, 632, 634, 636, 637, 638, 640, 641, 643, 644, 647, 648, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 674, 676, 677, 679, 681, 682, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 695, 698, 699, 700, 701, 702, 703, 705, 708, 709, 710, 711, 712, 714, 715, 716, 719, 720, 721, 722, 723, 725, 728, 729, 730, 731, 734, 735, 738, 739, 742, 743, 746, 747, 748, 750, 751, 753, 754, 755, 757, 758, 764, 771, 772, 776, 782, 784, 791, 801, 809, 810, 811, 812, 813, 814, 815, 816, 819, 821, 822, 823, 824, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 863, 865, 867, 869, 872, 874, 876, 882, 885, 888, 911, 914, 916, 922, 928, 930, 933, 934, 935, 938, 939, 940, 943, 944, 945, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 977, 978, 979, 980, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1011, 1018, 1023, 1024, 1027, 1029, 1030, 1031, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1050, 1053, 1054, 1056, 1057, 1058, 1060, 1061, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1087, 1088, 1090, 1091, 1092, 1093, 1095, 1096, 1118, 1119, 1123, 1126, 1264, 1268, 1281, 1282, 1479, 1560, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1695, 1698, 1703, 1704, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "variant": [1436, 1535], "variat": [1716, 1720, 1723], "variou": [0, 1266, 1431, 1484, 1498, 1511, 1518, 1716, 1725], "varlu": [824, 865, 872, 914], "varmap": [618, 619, 676, 677], "vars_op": [1018, 1035, 1036], "vbar": 1397, "vector": [0, 155, 412, 415, 1039, 1040, 1041, 1042, 1043, 1044, 1072, 1073, 1134, 1240, 1250, 1266, 1269, 1271, 1277, 1285, 1415, 1424, 1426, 1427, 1434, 1435, 1436, 1482, 1483, 1523, 1532, 1551, 1555, 1608, 1609, 1636, 1637, 1638, 1639, 1679, 1692, 1701, 1706, 1708, 1713, 1720, 1724, 1732], "veer": 0, "veloc": [0, 1532, 1562, 1564, 1566, 1569, 1570, 1572, 1707], "venv": [1576, 1715], "verbos": [1, 17, 27, 46, 49, 53, 56, 59, 63, 67, 70, 72, 74, 76, 79, 81, 83, 85, 87, 92, 101, 106, 111, 157, 158, 179, 181, 183, 185, 187, 195, 198, 199, 210, 213, 222, 225, 229, 230, 231, 237, 244, 252, 253, 260, 262, 265, 267, 269, 272, 274, 276, 283, 289, 296, 306, 308, 311, 314, 327, 329, 332, 339, 343, 351, 358, 364, 367, 369, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 408, 410, 411, 412, 413, 414, 415, 416, 417, 421, 423, 425, 427, 429, 430, 432, 438, 440, 442, 443, 445, 447, 449, 451, 453, 459, 461, 464, 466, 468, 471, 473, 475, 477, 480, 485, 486, 490, 492, 494, 496, 501, 503, 504, 506, 507, 510, 512, 514, 515, 516, 517, 521, 524, 525, 526, 527, 528, 529, 530, 534, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 576, 578, 581, 584, 586, 589, 593, 599, 603, 606, 610, 613, 618, 621, 623, 627, 630, 633, 636, 639, 641, 645, 646, 649, 650, 651, 654, 656, 661, 664, 667, 672, 674, 676, 680, 686, 692, 696, 697, 702, 706, 707, 712, 714, 717, 718, 722, 726, 727, 731, 735, 739, 743, 747, 751, 754, 758, 763, 764, 769, 771, 776, 783, 784, 791, 795, 798, 799, 800, 801, 807, 809, 812, 817, 819, 822, 827, 829, 834, 837, 842, 845, 850, 853, 854, 859, 862, 869, 876, 880, 882, 886, 888, 908, 911, 916, 920, 922, 926, 927, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1007, 1018, 1020, 1021, 1056, 1057, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1105, 1108, 1111, 1627, 1631, 1640, 1703, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "verbosity_delta": [1038, 1077, 1078], "verbostii": 1007, "veri": [1414, 1424, 1445, 1446, 1710, 1719, 1721, 1724], "verif": [1712, 1713, 1716], "verifi": 0, "versa": 1716, "version": [0, 1220, 1224, 1243, 1250, 1265, 1269, 1271, 1277, 1285, 1289, 1291, 1372, 1387, 1410, 1415, 1425, 1427, 1430, 1432, 1434, 1443, 1444, 1523, 1525, 1713, 1715, 1724, 1735], "versu": [1134, 1291, 1431], "vert": [1134, 1266, 1269, 1270, 1271, 1294, 1295, 1397, 1424, 1435, 1550, 1551], "vertex": 1493, "vertic": [0, 339, 606, 607, 1038, 1040, 1041, 1077, 1134, 1240, 1259, 1261, 1262, 1263, 1267, 1269, 1270, 1271, 1289, 1291, 1292, 1295, 1364, 1365, 1379, 1380, 1397, 1398, 1400, 1402, 1411, 1424, 1431, 1493, 1502, 1526, 1529, 1533, 1535, 1550, 1551, 1552, 1555, 1699, 1704, 1705, 1713, 1722, 1723, 1727, 1734], "vertical_profil": [731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757], "verticalalign": [1265, 1502, 1511, 1518, 1535], "verticalprofil": [339, 340, 341, 342, 477, 478, 496, 498, 731, 732, 735, 736, 739, 740, 743, 744, 747, 751, 754, 1699, 1704], "verts_and_cod": [1266, 1270, 1294, 1295, 1397, 1424, 1435], "via": [0, 46, 49, 53, 59, 63, 67, 87, 92, 101, 195, 213, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 311, 329, 332, 406, 408, 409, 416, 417, 427, 430, 432, 434, 442, 447, 449, 451, 453, 466, 468, 477, 485, 486, 496, 498, 506, 512, 517, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1009, 1018, 1038, 1045, 1050, 1051, 1054, 1058, 1064, 1077, 1085, 1088, 1091, 1093, 1127, 1220, 1222, 1256, 1266, 1402, 1435, 1511, 1512, 1518, 1519, 1539, 1540, 1541, 1701, 1702, 1703, 1706, 1710, 1713, 1720, 1724, 1726, 1732, 1734, 1736], "vice": 1716, "vicin": [1718, 1731], "view": [1134, 1178, 1181, 1214, 1230, 1233, 1252, 1255, 1256, 1347, 1348, 1370, 1385, 1431, 1486, 1508, 1512, 1515, 1519, 1531, 1548], "view_limit": [1208, 1219, 1230, 1235], "viewer": 1402, "viewlim": [1134, 1549], "violin": [1134, 1550, 1551], "violinplot": [1134, 1269, 1550, 1551], "virtual": [0, 1716, 1724], "visibl": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1270, 1277, 1285, 1287, 1289, 1291, 1294, 1295, 1320, 1361, 1377, 1392, 1394, 1397, 1404, 1405, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1439, 1447, 1458, 1459, 1463, 1505, 1511, 1512, 1518, 1519, 1524, 1533, 1535, 1718], "visible_edg": 1533, "visible_onli": [1134, 1438], "visual": [0, 1064, 1134, 1269, 1402, 1442, 1458, 1459, 1524, 1705, 1716, 1718, 1723, 1726, 1728, 1730, 1731, 1732], "vlabel": [1039, 1040, 1041, 1042, 1043, 1044, 1096], "vlim": [1, 17, 27, 157, 179], "vline": [1134, 1240, 1262, 1400, 1431, 1552, 1555], "vmax": [1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1208, 1214, 1218, 1219, 1230, 1235, 1266, 1270, 1294, 1295, 1397, 1399, 1402, 1424, 1425, 1426, 1435, 1442, 1523, 1539, 1540, 1541, 1717, 1718, 1726, 1729, 1731], "vmin": [1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1096, 1134, 1208, 1214, 1218, 1219, 1230, 1235, 1266, 1270, 1294, 1295, 1397, 1399, 1402, 1424, 1425, 1426, 1435, 1442, 1523, 1539, 1540, 1541, 1717, 1718, 1720, 1726, 1729, 1731], "vollmer": 1711, "volluk": 869, "volum": 1711, "von": [125, 1562, 1564, 1566, 1569, 1570, 1572, 1698], "vortex": [854, 1709, 1717], "vortexsheet": [0, 854, 855, 856, 857, 858, 859, 860, 861, 1709, 1722], "vortexsheet_": 1722, "vortexsheet_linear": 1722, "vpar": [1072, 1073], "vpstat": [1134, 1550], "vr": 1126, "w": [0, 45, 131, 153, 266, 333, 351, 352, 432, 477, 478, 586, 672, 673, 675, 692, 693, 702, 703, 712, 714, 722, 1096, 1127, 1129, 1131, 1236, 1269, 1431, 1436, 1451, 1497, 1562, 1565, 1566, 1570, 1637, 1638, 1658, 1682, 1689, 1691, 1698, 1704, 1706, 1708, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "w_i": 1399, "wa": [1439, 1493, 1720, 1724, 1728, 1731], "wai": [1251, 1266, 1294, 1295, 1417, 1425, 1431, 1453, 1530, 1532, 1539, 1540, 1710, 1716, 1721, 1724, 1731], "wake": [0, 1, 3, 4, 5, 11, 15, 16, 17, 27, 46, 53, 54, 55, 87, 136, 253, 254, 255, 256, 257, 258, 259, 266, 276, 277, 278, 279, 280, 281, 282, 327, 343, 344, 345, 347, 348, 349, 350, 351, 358, 360, 361, 362, 363, 364, 365, 366, 530, 533, 550, 552, 553, 555, 556, 557, 560, 561, 562, 563, 564, 566, 567, 569, 570, 572, 574, 575, 578, 579, 580, 589, 667, 758, 759, 762, 764, 765, 767, 768, 771, 774, 775, 776, 780, 781, 782, 784, 788, 790, 791, 792, 796, 797, 801, 802, 805, 806, 809, 810, 811, 812, 813, 814, 815, 816, 819, 820, 821, 822, 823, 824, 825, 826, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 863, 865, 866, 867, 869, 870, 872, 873, 874, 876, 879, 882, 883, 885, 888, 903, 907, 911, 914, 915, 916, 919, 922, 923, 925, 928, 930, 931, 933, 934, 935, 936, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 951, 953, 954, 956, 957, 959, 960, 962, 963, 965, 966, 968, 969, 971, 972, 974, 975, 977, 978, 980, 981, 983, 984, 986, 987, 989, 990, 992, 993, 995, 996, 998, 999, 1001, 1002, 1072, 1073, 1576, 1661, 1670, 1671, 1689, 1694, 1695, 1698, 1699, 1704, 1705, 1708, 1709, 1712, 1713, 1714, 1717, 1718, 1721, 1722, 1723, 1724, 1726, 1727, 1730, 1732, 1733], "wake_coo": [348, 360, 762, 768, 775, 781, 790, 797, 806, 815, 832, 840, 848, 857], "wake_delta": [253, 254, 255, 256, 257, 258, 259, 276, 278, 279, 282, 327, 358, 360, 361, 363, 365, 366, 550, 552, 553, 555, 556, 557, 561, 562, 564, 566, 569, 572, 575, 578, 579, 809, 812, 815, 816, 819, 822, 829, 832, 833, 835, 837, 840, 841, 843, 845, 848, 849, 851, 853, 854, 857, 858, 860, 862, 867, 869, 874, 876, 882, 911, 916, 922, 928, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 959, 960, 965, 966, 971, 972, 977, 978, 983, 984, 989, 990, 995, 996, 1001, 1002], "wake_fram": [1, 3, 15, 17, 27, 276, 530, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 1717, 1718, 1720, 1721, 1722, 1729, 1731, 1734], "wake_k": [802, 862, 863, 869, 870, 876, 877, 882, 883, 911, 912, 916, 917, 922, 923, 1559, 1560, 1706, 1716], "wake_model": [0, 1, 3, 16, 17, 27, 53, 54, 276, 345, 530, 533, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 1710, 1717, 1718, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "wake_model_result": [365, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001], "wake_r": [824, 825, 865, 866, 872, 873, 914, 915], "wake_superposit": [530, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1722], "wakedelta": [589, 590, 591, 592, 1704, 1716], "wakefram": [1, 15, 276, 343, 344, 345, 346, 347, 348, 349, 350, 530, 758, 764, 765, 771, 784, 791, 801, 802, 1699, 1704], "wakek": [0, 351, 352, 353, 354, 355, 356, 357, 802, 862, 863, 869, 870, 876, 877, 882, 883, 911, 912, 916, 917, 922, 923, 1699], "wakekfactori": [0, 1111, 1116, 1559, 1560, 1561, 1706], "wakemirror": [0, 550, 553, 554, 555, 556, 1704, 1722], "wakemodel": [1, 16, 53, 54, 254, 255, 256, 258, 259, 276, 277, 278, 279, 282, 327, 345, 358, 359, 360, 361, 362, 363, 530, 533, 555, 556, 560, 561, 569, 574, 575, 579, 812, 1699, 1709], "wakes0": 1718, "wakesuperposit": [364, 365, 366, 530, 812, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1699, 1704], "want": [1220, 1222, 1251, 1252, 1266, 1269, 1271, 1394, 1413, 1431, 1435, 1442, 1443, 1444, 1478, 1511, 1518, 1539, 1540, 1734], "warn": [764, 1135, 1138, 1208, 1215, 1217, 1230, 1397, 1424, 1426, 1431, 1435, 1483, 1576], "watt": [131, 153, 1032, 1698], "wd": [0, 1, 2, 17, 27, 468, 469, 477, 478, 637, 771, 772, 789, 1096, 1127, 1129, 1636, 1637, 1638, 1639, 1658, 1680, 1689, 1691, 1706, 1708, 1710, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "wd2uv": [1637, 1706], "wd2wdvec": [1638, 1706], "wd_a": [1575, 1706], "wd_b": [1575, 1706], "wd_max": 1728, "wd_min": 1728, "wd_var": [81, 82, 1058, 1060, 1062, 1091], "wdelta": [365, 810, 811, 814, 821, 826, 885, 933, 938, 943, 948, 953, 959, 965, 971, 977, 983, 989, 995, 1001], "wdvec": [1638, 1639, 1706], "wdvec2wd": [1639, 1706], "we": [0, 540, 845, 853, 854, 862, 1152, 1443, 1444, 1448, 1713, 1715, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "weakest": 1717, "websit": 1723, "wedg": 1430, "wedgeprop": 1430, "weigh": 1399, "weight": [0, 1, 2, 17, 27, 45, 101, 110, 133, 150, 213, 221, 256, 276, 279, 280, 296, 298, 300, 305, 306, 313, 318, 416, 417, 426, 427, 430, 432, 446, 447, 449, 451, 453, 465, 466, 468, 476, 477, 484, 485, 486, 495, 496, 511, 512, 517, 519, 521, 557, 562, 563, 564, 566, 569, 570, 572, 578, 579, 580, 593, 595, 598, 599, 605, 606, 607, 612, 1018, 1037, 1053, 1064, 1079, 1080, 1081, 1134, 1289, 1398, 1399, 1402, 1436, 1525, 1535, 1681, 1698, 1704, 1705, 1706, 1708, 1714, 1718, 1719, 1724, 1727, 1728, 1729, 1730, 1733], "weight_ncvar": [416, 417, 485, 486], "weight_turbin": [1051, 1053, 1079, 1080, 1081], "weighted_wiggl": 1525, "weinsum": [1018, 1037], "welch": [1285, 1434], "well": [1251, 1277, 1285, 1291, 1410, 1414, 1434, 1442, 1445, 1446, 1464, 1523, 1530, 1713, 1716, 1719, 1725, 1734], "were": [0, 1135, 1292, 1349, 1550, 1734], "west": [1728, 1734], "westerli": [1718, 1728], "wframe_typ": [343, 350, 758, 764, 771, 776, 784, 791, 801], "what": [1523, 1710, 1723], "when": [0, 764, 1134, 1143, 1150, 1152, 1156, 1178, 1183, 1190, 1199, 1215, 1220, 1222, 1237, 1241, 1250, 1251, 1252, 1256, 1265, 1266, 1267, 1269, 1271, 1277, 1285, 1286, 1290, 1291, 1318, 1334, 1397, 1398, 1399, 1402, 1413, 1415, 1416, 1420, 1423, 1424, 1425, 1426, 1427, 1430, 1431, 1434, 1442, 1451, 1455, 1456, 1463, 1474, 1521, 1522, 1523, 1526, 1528, 1531, 1532, 1539, 1540, 1548, 1550, 1551, 1716, 1718, 1719, 1720, 1721, 1724, 1726, 1729, 1732], "whenev": [1134, 1242, 1710, 1715, 1716, 1724, 1729], "where": [0, 613, 614, 1012, 1134, 1143, 1153, 1156, 1171, 1178, 1183, 1199, 1242, 1251, 1264, 1266, 1268, 1269, 1277, 1281, 1282, 1285, 1291, 1292, 1294, 1295, 1398, 1400, 1431, 1434, 1442, 1451, 1453, 1499, 1523, 1525, 1530, 1531, 1538, 1552, 1555, 1633, 1637, 1638, 1716, 1720, 1724, 1727, 1728, 1734], "wherea": 1152, "whether": [1134, 1143, 1153, 1154, 1171, 1178, 1199, 1251, 1256, 1260, 1266, 1269, 1271, 1272, 1273, 1277, 1279, 1280, 1285, 1289, 1302, 1306, 1309, 1310, 1312, 1316, 1325, 1334, 1335, 1341, 1375, 1390, 1394, 1395, 1396, 1402, 1403, 1406, 1409, 1411, 1420, 1424, 1425, 1426, 1429, 1430, 1434, 1438, 1442, 1452, 1454, 1455, 1456, 1459, 1460, 1463, 1469, 1474, 1475, 1478, 1508, 1515, 1523, 1524, 1526, 1527, 1537, 1538, 1546, 1548, 1550, 1551, 1554, 1557], "whi": [1134, 1269], "which": [0, 46, 48, 49, 52, 53, 57, 59, 62, 63, 66, 67, 71, 87, 90, 92, 95, 101, 107, 157, 213, 218, 225, 234, 237, 242, 244, 250, 252, 283, 287, 289, 294, 296, 304, 306, 310, 329, 332, 343, 365, 366, 416, 422, 427, 428, 430, 432, 434, 441, 447, 449, 451, 453, 454, 460, 466, 467, 468, 472, 477, 481, 485, 491, 496, 505, 512, 517, 543, 544, 548, 581, 585, 586, 588, 589, 592, 593, 599, 606, 613, 617, 618, 622, 623, 628, 630, 634, 636, 637, 640, 641, 647, 651, 652, 655, 656, 660, 661, 663, 664, 666, 667, 671, 672, 674, 676, 677, 684, 686, 691, 692, 693, 701, 702, 703, 711, 712, 714, 721, 722, 723, 730, 764, 765, 801, 802, 810, 811, 812, 814, 820, 821, 824, 826, 860, 865, 872, 879, 885, 914, 919, 925, 933, 934, 938, 939, 940, 941, 943, 944, 948, 949, 950, 953, 954, 955, 956, 959, 960, 961, 962, 965, 966, 967, 968, 971, 972, 973, 974, 975, 977, 978, 979, 980, 981, 983, 984, 985, 986, 989, 990, 991, 992, 995, 996, 997, 998, 1001, 1002, 1003, 1011, 1014, 1015, 1016, 1017, 1033, 1053, 1062, 1079, 1080, 1081, 1092, 1096, 1118, 1119, 1134, 1135, 1138, 1143, 1153, 1155, 1168, 1178, 1199, 1208, 1240, 1241, 1250, 1252, 1253, 1255, 1256, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1271, 1277, 1279, 1285, 1289, 1291, 1292, 1294, 1295, 1296, 1298, 1340, 1349, 1352, 1356, 1357, 1364, 1365, 1366, 1370, 1375, 1379, 1380, 1381, 1385, 1390, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1413, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1441, 1442, 1445, 1446, 1447, 1448, 1449, 1453, 1463, 1464, 1478, 1479, 1480, 1482, 1492, 1493, 1495, 1502, 1508, 1511, 1515, 1518, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1537, 1539, 1540, 1541, 1548, 1550, 1551, 1552, 1555, 1560, 1636, 1639, 1699, 1704, 1709, 1710, 1713, 1714, 1716, 1718, 1720, 1721, 1724, 1725, 1729, 1730, 1731, 1734, 1736], "while": [1250, 1272, 1277, 1285, 1318, 1415, 1426, 1427, 1434, 1523, 1530, 1543, 1544, 1715, 1716, 1718], "whishi": 1271, "whisker": [1134, 1269, 1271, 1551], "whiskerprop": [1269, 1271], "whislo": 1271, "whislow": 1271, "white": [1431, 1726], "whitespac": 1411, "who": [1251, 1543, 1544], "whole": [0, 1153, 1259, 1263, 1267, 1269, 1723], "whose": [211, 385, 387, 390, 395, 397, 403, 407, 1253, 1719], "wide": 1493, "width": [0, 1060, 1062, 1134, 1251, 1252, 1253, 1259, 1263, 1266, 1267, 1269, 1271, 1281, 1282, 1292, 1313, 1398, 1404, 1406, 1430, 1435, 1447, 1453, 1461, 1479, 1493, 1523, 1532, 1533, 1537, 1539, 1550, 1551], "wiggl": [1349, 1492, 1525], "wiki": [1266, 1269, 1271], "wikipedia": [1266, 1269, 1271], "wilei": [845, 853, 1277, 1285, 1434], "wind": [0, 1, 3, 17, 27, 28, 81, 82, 122, 145, 148, 157, 158, 167, 225, 228, 306, 323, 324, 332, 335, 367, 368, 369, 370, 408, 409, 410, 411, 412, 413, 414, 415, 432, 468, 469, 477, 478, 524, 525, 527, 529, 543, 623, 624, 656, 657, 672, 673, 674, 675, 676, 677, 681, 686, 692, 693, 698, 702, 703, 708, 712, 714, 715, 722, 723, 731, 735, 739, 743, 751, 759, 764, 771, 772, 801, 829, 837, 838, 845, 846, 853, 854, 855, 862, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 950, 951, 956, 957, 962, 963, 968, 969, 974, 975, 980, 981, 986, 987, 992, 993, 998, 999, 1009, 1010, 1012, 1013, 1026, 1058, 1060, 1062, 1063, 1079, 1080, 1081, 1082, 1083, 1084, 1091, 1092, 1095, 1134, 1264, 1266, 1268, 1281, 1282, 1562, 1563, 1564, 1565, 1566, 1567, 1569, 1570, 1572, 1575, 1636, 1637, 1638, 1639, 1644, 1645, 1646, 1650, 1651, 1672, 1673, 1674, 1680, 1682, 1698, 1699, 1702, 1703, 1704, 1706, 1707, 1708, 1710, 1712, 1713, 1715, 1716, 1717, 1720, 1721, 1722, 1724, 1725, 1726, 1729, 1730, 1731, 1732, 1734, 1736], "wind_barb": 1266, "wind_farm": [367, 368, 1710], "wind_ros": 0, "wind_rose_bremen": [1728, 1733], "wind_rot": [0, 1721], "windfarm": [3, 28, 158, 167, 367, 368, 369, 370, 371, 408, 409, 410, 411, 412, 413, 414, 415, 524, 525, 527, 1009, 1010, 1699, 1702, 1714, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1726, 1728, 1729, 1730, 1731, 1732, 1733, 1734], "windio": [0, 522, 524, 526, 527, 528, 529, 1710], "windio_input": 1710, "window": [0, 1134, 1250, 1277, 1285, 1318, 1415, 1427, 1434, 1523, 1724], "window_han": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "window_non": [1250, 1277, 1285, 1415, 1427, 1434, 1523], "windros": [0, 1134, 1264, 1268, 1281, 1282, 1421, 1706], "windroseax": [0, 1134, 1301, 1706], "windroseoutput": 0, "winds100": [0, 1719], "windspe": [1717, 1718], "wio": [526, 1703], "wio_data": 529, "wio_dict": [524, 1703], "wio_farm": [528, 1703], "wise": [0, 623, 651, 652, 1729], "wish": [1266, 1292, 1442, 1710, 1734], "within": [0, 202, 385, 390, 395, 397, 403, 407, 413, 637, 1097, 1134, 1250, 1252, 1269, 1279, 1339, 1397, 1415, 1427, 1442, 1450, 1451, 1478, 1533, 1627, 1634, 1703, 1706, 1715, 1716, 1717, 1724, 1729], "without": [0, 27, 225, 543, 829, 837, 845, 853, 1037, 1214, 1233, 1289, 1291, 1293, 1431, 1432, 1511, 1518, 1523, 1696, 1704, 1715, 1718, 1724, 1726, 1729, 1730], "wmodel": [253, 254, 255, 256, 257, 258, 259, 276, 277, 278, 279, 282, 550, 552, 553, 555, 556, 557, 560, 561, 562, 564, 566, 569, 572, 574, 575, 578, 579], "wmodel_typ": [327, 358, 362, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 911, 916, 922], "won": 1152, "word": [1398, 1402], "work": [0, 111, 116, 118, 154, 525, 1230, 1398, 1424, 1426, 1432, 1442, 1484, 1498, 1511, 1518, 1524, 1539, 1540, 1574, 1697, 1698, 1710, 1715, 1718, 1720, 1721, 1724, 1725, 1728, 1731, 1733], "work_dir": [111, 116, 154, 525, 1698], "worker": [1718, 1724], "workflow": 0, "workstat": 1724, "would": [0, 1215, 1251, 1252, 1266, 1270, 1293, 1417, 1443, 1444, 1493, 1548, 1718, 1723, 1724, 1729], "wrap": [1250, 1417, 1427, 1499, 1535], "wrapper": [0, 544, 1414, 1425, 1445, 1446, 1530, 1704], "wrf": [0, 1723], "write": [0, 521, 1009, 1014, 1015, 1016, 1017, 1018, 1038, 1045, 1050, 1051, 1054, 1056, 1057, 1058, 1063, 1064, 1077, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1088, 1090, 1091, 1093, 1127, 1133, 1631, 1640, 1705, 1706, 1710, 1716], "write_csv": [1009, 1014, 1054, 1056], "write_figur": [1058, 1063, 1091], "write_fil": [1127, 1133], "write_json": [1009, 1015], "write_nc": [1053, 1054, 1057, 1090, 1640], "write_par": [1053, 1079, 1080, 1081, 1082, 1083, 1084], "write_plot": [1009, 1016], "write_random_abl_st": 521, "write_var": 1053, "write_xyh": [1009, 1017], "written": [521, 581, 582, 1053, 1056, 1057, 1713, 1716], "wrong": [0, 1716], "wrt": [1011, 1018, 1027, 1028, 1029, 1030, 1031, 1577, 1582, 1584, 1586, 1592, 1594, 1599, 1601, 1606, 1608, 1614, 1616, 1622], "ws0": [1565, 1707, 1725], "ws_cubic": 1722, "ws_cubic_amb": 1722, "ws_cubic_loc": 1722, "ws_cubic_loc_lim": 1722, "ws_exp_ct": 528, "ws_exp_p": 528, "ws_linear": [0, 837, 838, 845, 846, 853, 854, 855, 1716, 1722, 1724], "ws_linear_amb": 1722, "ws_linear_amb_lim": 1722, "ws_linear_lim": 1722, "ws_linear_loc": 1722, "ws_linear_loc_lim": 1722, "ws_list": [468, 469], "ws_max": [1095, 1722, 1728], "ws_max_amb": 1722, "ws_max_loc": 1722, "ws_max_loc_lim": 1722, "ws_min": [1095, 1728], "ws_product": 1722, "ws_product_lim": 1722, "ws_quadrat": 1722, "ws_quadratic_amb": 1722, "ws_quadratic_amb_lim": 1722, "ws_quadratic_lim": 1722, "ws_quadratic_loc": 1722, "ws_quadratic_loc_lim": 1722, "ws_quartic": 1722, "ws_quartic_amb": 1722, "ws_quartic_loc": 1722, "ws_quartic_loc_lim": 1722, "ws_ref": [1564, 1569, 1572, 1707], "ws_step": 1095, "ws_var": 1092, "wsct": [656, 676, 692, 702, 714, 722], "wsg84": 1628, "wsl": 1724, "wslinear": [0, 950, 951, 952, 953, 954, 955, 1704, 1722], "wslinearloc": [0, 956, 957, 958, 959, 960, 961, 1704, 1722], "wsmax": [962, 963, 964, 965, 966, 967, 1704, 1722], "wsmaxloc": [0, 968, 969, 970, 971, 972, 973, 1704, 1722], "wsp": [676, 692, 702, 714, 722], "wspow": [974, 975, 976, 977, 978, 979, 1704, 1722], "wspowloc": [0, 980, 981, 982, 983, 984, 985, 1704, 1722], "wsproduct": [0, 986, 987, 988, 989, 990, 991, 1704, 1722], "wsquadrat": [992, 993, 994, 995, 996, 997, 1704, 1722], "wsquadraticloc": [0, 998, 999, 1000, 1001, 1002, 1003, 1704, 1722], "wsrho2pctfromtwo": [714, 715, 716, 717, 718, 719, 720, 721, 1704], "wsrho2pcttwofil": 0, "wsti2pctfromtwo": [0, 722, 723, 724, 725, 726, 727, 728, 729, 730, 1704], "www": [829, 837, 845, 853, 1576], "x": [0, 1, 2, 17, 27, 155, 299, 343, 345, 347, 408, 412, 413, 416, 417, 453, 454, 467, 485, 486, 557, 594, 599, 602, 609, 758, 764, 767, 771, 774, 776, 780, 784, 788, 789, 791, 796, 801, 805, 809, 810, 811, 812, 814, 819, 820, 821, 822, 824, 825, 826, 862, 865, 866, 869, 872, 873, 876, 879, 882, 885, 888, 904, 907, 911, 914, 915, 916, 919, 922, 925, 1011, 1012, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1095, 1096, 1134, 1143, 1147, 1162, 1165, 1178, 1188, 1190, 1199, 1204, 1220, 1221, 1240, 1250, 1251, 1253, 1255, 1256, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1277, 1283, 1285, 1286, 1289, 1291, 1293, 1294, 1295, 1297, 1299, 1307, 1347, 1356, 1364, 1365, 1366, 1367, 1370, 1372, 1379, 1380, 1381, 1394, 1397, 1398, 1399, 1402, 1404, 1407, 1410, 1413, 1414, 1415, 1416, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1448, 1451, 1453, 1458, 1459, 1480, 1506, 1507, 1508, 1509, 1511, 1518, 1521, 1523, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1550, 1551, 1552, 1554, 1555, 1557, 1574, 1577, 1578, 1580, 1581, 1584, 1586, 1588, 1590, 1591, 1594, 1596, 1597, 1598, 1601, 1603, 1604, 1605, 1608, 1610, 1612, 1613, 1616, 1618, 1620, 1621, 1633, 1638, 1639, 1679, 1683, 1704, 1706, 1708, 1709, 1713, 1714, 1716, 1717, 1718, 1719, 1720, 1721, 1723, 1724, 1725, 1727, 1729, 1730, 1731, 1732, 1733, 1734], "x0": [888, 902, 1398, 1404, 1406, 1539, 1540, 1633, 1706], "x1": [1134, 1295, 1398, 1431, 1539, 1540], "x2": [1134, 1293, 1295, 1414, 1431, 1445, 1446, 1530], "x27": [1718, 1723, 1724], "x_": 1178, "x_1d": 1532, "x_coord": [416, 417, 485, 486, 1721], "x_direct": [0, 1038, 1040, 1041, 1043, 1044, 1080, 1081, 1083, 1084, 1723], "x_edg": 1399, "x_i": 1399, "x_isdata": 1154, "x_label": 1095, "x_po": [1079, 1080, 1081, 1082, 1083, 1084, 1096], "x_y": 1096, "xarrai": [0, 1, 4, 5, 17, 19, 20, 27, 31, 32, 34, 35, 36, 37, 39, 42, 46, 49, 53, 59, 63, 67, 74, 79, 83, 87, 92, 100, 101, 157, 161, 162, 172, 178, 187, 188, 190, 195, 202, 205, 211, 212, 213, 224, 225, 237, 243, 244, 252, 283, 288, 289, 296, 306, 316, 329, 332, 381, 385, 387, 390, 395, 397, 403, 406, 407, 416, 417, 427, 428, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 486, 496, 512, 513, 517, 525, 543, 544, 581, 586, 589, 593, 599, 606, 613, 618, 619, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 1009, 1010, 1018, 1019, 1051, 1052, 1053, 1055, 1059, 1071, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1576, 1630, 1640, 1699, 1701, 1703, 1718, 1723, 1724, 1729, 1730], "xarrayengin": [0, 406, 407, 1701, 1724], "xaxi": [1134, 1283, 1299, 1309, 1363, 1368, 1371, 1373, 1374, 1375, 1376, 1377, 1432, 1443, 1455, 1507, 1510, 1511, 1512, 1543, 1553, 1554], "xaxis_d": [1134, 1553], "xaxis_invert": [1134, 1367, 1370, 1407, 1506, 1508, 1554], "xbound": 1447, "xcoord": 1251, "xcorr": [1134, 1555], "xdata": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524], "xdate": [1134, 1432], "xedg": 1399, "xerr": [1134, 1267, 1291], "xextent": 1523, "xlabel": [1038, 1039, 1040, 1042, 1043, 1096, 1134, 1356, 1369, 1431, 1447, 1507], "xlim": [1260, 1447, 1508], "xlist": 1718, "xlolim": 1291, "xmargin": [1372, 1416, 1447], "xmax": [1079, 1080, 1082, 1083, 1134, 1258, 1259, 1260, 1263, 1397, 1399, 1400, 1425, 1508, 1523, 1531, 1718, 1720, 1721, 1723, 1729, 1731, 1734], "xmax_ini": [1627, 1706], "xmin": [1079, 1080, 1082, 1083, 1134, 1258, 1259, 1260, 1263, 1270, 1397, 1399, 1400, 1425, 1508, 1523, 1531, 1533, 1718, 1721, 1723, 1729, 1734], "xr": [417, 486, 1576], "xr_interp_arg": 619, "xr_read_par": [427, 428], "xrang": [1134, 1258, 1270], "xscale": [1134, 1397, 1447], "xspace": [1079, 1080, 1082, 1083, 1718], "xtick": [1445, 1447], "xticklabel": 1447, "xunit": [1539, 1540], "xuplim": 1291, "xwidth": 1270, "xx": [1277, 1434, 1535], "xy": [0, 323, 324, 1038, 1039, 1042, 1077, 1079, 1082, 1134, 1251, 1253, 1259, 1263, 1267, 1277, 1285, 1404, 1431, 1435, 1546, 1627, 1706, 1718, 1721, 1725, 1726, 1728, 1729, 1734], "xy1": [1134, 1261], "xy2": [1134, 1261], "xy_bas": [412, 414, 415, 1703, 1717, 1718, 1720, 1721, 1723, 1726, 1728, 1729, 1730, 1731, 1733], "xy_step": [415, 1703, 1717, 1723, 1726, 1728, 1730], "xycoord": [1134, 1251], "xydata": 1546, "xyh": [155, 1009, 1015, 1017, 1708], "xytext": [1134, 1251, 1253], "xz": [0, 1038, 1040, 1043, 1067, 1068, 1077, 1080, 1083], "y": [1, 2, 17, 27, 155, 299, 408, 412, 413, 416, 417, 453, 454, 467, 485, 486, 594, 602, 609, 789, 1011, 1012, 1038, 1039, 1041, 1042, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1095, 1096, 1134, 1143, 1165, 1178, 1181, 1199, 1240, 1251, 1253, 1255, 1256, 1258, 1259, 1261, 1263, 1266, 1267, 1270, 1277, 1284, 1285, 1286, 1289, 1291, 1293, 1294, 1295, 1297, 1300, 1307, 1348, 1356, 1364, 1365, 1366, 1379, 1380, 1381, 1382, 1385, 1387, 1394, 1397, 1399, 1400, 1402, 1404, 1408, 1410, 1413, 1414, 1416, 1424, 1425, 1426, 1431, 1432, 1435, 1436, 1442, 1443, 1444, 1445, 1446, 1448, 1451, 1453, 1458, 1459, 1502, 1511, 1513, 1514, 1515, 1516, 1518, 1522, 1525, 1526, 1528, 1529, 1530, 1531, 1532, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1546, 1550, 1551, 1554, 1555, 1557, 1577, 1578, 1580, 1581, 1584, 1586, 1588, 1590, 1591, 1594, 1596, 1597, 1598, 1601, 1603, 1604, 1605, 1608, 1610, 1612, 1613, 1616, 1618, 1620, 1621, 1638, 1639, 1679, 1684, 1708, 1714, 1716, 1717, 1718, 1719, 1721, 1724, 1725, 1731, 1732], "y0": [1404, 1406, 1539, 1540], "y1": [1134, 1294, 1431, 1525, 1539, 1540], "y2": [1134, 1293, 1294, 1414, 1431, 1445, 1446, 1525, 1530], "y3": 1525, "y4": 1525, "y_1d": 1532, "y_coord": [416, 417, 485, 486, 1721], "y_edg": 1399, "y_i": 1399, "y_isdata": 1154, "y_label": 1095, "y_po": [1079, 1080, 1081, 1082, 1083, 1084, 1096], "yaml": [0, 111, 187, 222, 260, 314, 522, 523, 524, 525, 526, 527, 528, 529, 1105, 1108, 1111, 1710, 1713], "yaml_input": 0, "yaw": [0, 1, 2, 17, 27, 661, 664, 677, 693, 703, 715, 723, 801, 882, 888, 1127, 1129, 1652, 1653, 1685, 1686, 1689, 1691, 1704, 1708, 1712, 1713, 1716, 1718, 1722, 1724, 1729, 1730], "yaw2yawm": [0, 661, 662, 663, 1704, 1716, 1722, 1734], "yawed_": 1716, "yawed_ambka": 1722, "yawed_ambka0": 1722, "yawed_k": 1722, "yawed_k0": 1722, "yawed_ka": 1722, "yawed_ka0": 1722, "yawed_wak": 0, "yawedwak": [0, 801, 802, 803, 804, 805, 806, 807, 808, 1704, 1716, 1722], "yawm": [661, 664, 801, 882, 904, 1686, 1689, 1691, 1704, 1708, 1716, 1734], "yawm2yaw": [0, 664, 665, 666, 1704, 1716, 1722, 1734], "yaxi": [1134, 1284, 1300, 1310, 1378, 1383, 1386, 1388, 1389, 1390, 1391, 1392, 1432, 1444, 1456, 1514, 1517, 1518, 1519, 1544, 1556, 1557], "yaxis_d": [1134, 1556], "yaxis_invert": [1134, 1382, 1385, 1408, 1513, 1515, 1557], "ybound": 1447, "ycoord": 1251, "ydata": [1250, 1258, 1261, 1262, 1277, 1285, 1289, 1291, 1394, 1415, 1427, 1431, 1432, 1434, 1524, 1725], "ydate": [1134, 1432], "year": [1292, 1508, 1711], "yedg": 1399, "yellow": 1431, "yerr": [1134, 1267, 1291], "yet": [0, 372], "yheight": 1270, "yield": [0, 1004, 1006, 1008, 1018, 1025, 1032, 1398, 1431, 1492, 1654, 1687, 1705, 1708, 1711, 1713, 1716, 1723, 1727, 1732, 1733], "ylabel": [1038, 1039, 1041, 1042, 1044, 1096, 1134, 1356, 1384, 1431, 1447, 1514], "yld": [1127, 1129, 1658, 1687, 1689, 1691, 1708, 1732], "ylgn": 1726, "ylim": [1260, 1447, 1515], "ylorrd": 1726, "ymargin": [1387, 1416, 1447], "ymax": [1079, 1081, 1082, 1084, 1134, 1259, 1260, 1262, 1263, 1397, 1399, 1425, 1515, 1531, 1552, 1718, 1720, 1721, 1729, 1731, 1734], "ymin": [1079, 1081, 1082, 1084, 1134, 1259, 1260, 1262, 1263, 1270, 1397, 1399, 1425, 1515, 1531, 1533, 1552, 1718, 1721, 1729, 1734], "yml_file": [111, 187, 222, 260, 314, 1105, 1108, 1111], "you": [0, 1252, 1265, 1266, 1269, 1271, 1277, 1285, 1292, 1293, 1294, 1295, 1298, 1318, 1363, 1378, 1394, 1419, 1424, 1425, 1426, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1452, 1478, 1483, 1484, 1498, 1511, 1512, 1518, 1519, 1523, 1524, 1530, 1535, 1539, 1540, 1541, 1574, 1710, 1715, 1716, 1722, 1724, 1727, 1730, 1734, 1736], "your": [0, 1443, 1444, 1509, 1516, 1713, 1715, 1724, 1730, 1735], "yourself": [1252, 1298, 1318, 1512, 1519, 1574, 1719], "yrang": [1134, 1262, 1263, 1270], "yscale": [1397, 1447], "yspace": [1079, 1081, 1082, 1084, 1718], "ytick": [1446, 1447], "yticklabel": 1447, "yunit": [1539, 1540], "yx": [1067, 1068], "yy": 1277, "yz": [0, 809, 811, 812, 814, 819, 822, 862, 869, 876, 882, 885, 911, 916, 922, 1038, 1041, 1044, 1067, 1068, 1077, 1081, 1084, 1709], "z": [299, 453, 454, 467, 594, 602, 609, 747, 748, 789, 1040, 1041, 1043, 1044, 1079, 1080, 1081, 1082, 1083, 1084, 1134, 1255, 1318, 1413, 1417, 1482, 1511, 1518, 1524, 1539, 1540, 1714, 1716, 1718, 1723, 1731], "z0": [1562, 1563, 1564, 1566, 1567, 1569, 1570, 1572, 1688, 1707, 1708, 1716, 1718, 1719], "z1": 1540, "z2": 1540, "z_po": [1079, 1080, 1081, 1082, 1083, 1084], "zag": 1397, "zahl": 540, "zenodo": 1711, "zero": [0, 253, 258, 259, 276, 282, 363, 550, 552, 553, 557, 562, 564, 566, 572, 578, 668, 810, 811, 814, 820, 821, 824, 826, 835, 843, 851, 865, 867, 872, 874, 879, 885, 914, 919, 925, 928, 1060, 1062, 1134, 1252, 1255, 1256, 1264, 1268, 1277, 1285, 1417, 1434, 1497, 1523, 1524, 1525, 1576, 1633, 1662, 1706, 1708, 1716, 1717, 1718, 1727, 1730], "zerodivisionerror": 1576, "zig": 1397, "zip": [1127, 1128, 1130, 1131, 1576], "zlabel": [1040, 1041, 1043, 1044], "zmax": [1080, 1081, 1083, 1084, 1260, 1718, 1723, 1734], "zmin": [1080, 1081, 1083, 1084, 1260, 1718, 1723, 1734], "zone": [845, 853, 1432, 1629, 1632, 1718], "zoom": [1134, 1272, 1273, 1324, 1336, 1435, 1468, 1484, 1498, 1511, 1518], "zope": 1576, "zorder": [1134, 1250, 1253, 1258, 1259, 1261, 1262, 1263, 1266, 1267, 1269, 1270, 1271, 1277, 1285, 1289, 1291, 1294, 1295, 1340, 1393, 1394, 1397, 1404, 1406, 1415, 1424, 1426, 1427, 1431, 1432, 1434, 1435, 1447, 1460, 1468, 1482, 1520, 1524, 1532, 1533, 1535, 1537, 1558], "zorder_demo": 1460, "zspace": [1080, 1081, 1083, 1084]}, "titles": ["History", "foxes.algorithms.Downwind", "foxes.algorithms.Downwind.DEFAULT_FARM_OUTPUTS", "foxes.algorithms.Downwind.__init__", "foxes.algorithms.Downwind.calc_farm", "foxes.algorithms.Downwind.calc_points", "foxes.algorithms.Downwind.farm_controller", "foxes.algorithms.Downwind.get_model", "foxes.algorithms.Downwind.ground_models", "foxes.algorithms.Downwind.init_states", "foxes.algorithms.Downwind.initialize", "foxes.algorithms.Downwind.partial_wakes", "foxes.algorithms.Downwind.rotor_model", "foxes.algorithms.Downwind.states", "foxes.algorithms.Downwind.sub_models", "foxes.algorithms.Downwind.wake_frame", "foxes.algorithms.Downwind.wake_models", "foxes.algorithms.Iterative", "foxes.algorithms.Iterative.__init__", "foxes.algorithms.Iterative.calc_farm", "foxes.algorithms.Iterative.farm_results_downwind", "foxes.algorithms.Iterative.final_iteration", "foxes.algorithms.Iterative.get_model", "foxes.algorithms.Iterative.initialize", "foxes.algorithms.Iterative.iterations", "foxes.algorithms.Iterative.set_urelax", "foxes.algorithms.Iterative.urelax", "foxes.algorithms.Sequential", "foxes.algorithms.Sequential.__init__", "foxes.algorithms.Sequential.__iter__", "foxes.algorithms.Sequential.__next__", "foxes.algorithms.Sequential.calc_farm", "foxes.algorithms.Sequential.calc_points", "foxes.algorithms.Sequential.counter", "foxes.algorithms.Sequential.cur_farm_results", "foxes.algorithms.Sequential.cur_point_results", "foxes.algorithms.Sequential.farm_results", "foxes.algorithms.Sequential.farm_results_downwind", "foxes.algorithms.Sequential.get_model", "foxes.algorithms.Sequential.get_models_data", "foxes.algorithms.Sequential.index", "foxes.algorithms.Sequential.iterating", "foxes.algorithms.Sequential.point_results", "foxes.algorithms.Sequential.size", "foxes.algorithms.Sequential.states_i0", "foxes.algorithms.Sequential.weight", "foxes.algorithms.downwind.models.FarmWakesCalculation", "foxes.algorithms.downwind.models.FarmWakesCalculation.calculate", "foxes.algorithms.downwind.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.downwind.models.InitFarmData", "foxes.algorithms.downwind.models.InitFarmData.__init__", "foxes.algorithms.downwind.models.InitFarmData.calculate", "foxes.algorithms.downwind.models.InitFarmData.output_farm_vars", "foxes.algorithms.downwind.models.PointWakesCalculation", "foxes.algorithms.downwind.models.PointWakesCalculation.__init__", "foxes.algorithms.downwind.models.PointWakesCalculation.calculate", "foxes.algorithms.downwind.models.PointWakesCalculation.initialize", "foxes.algorithms.downwind.models.PointWakesCalculation.output_point_vars", "foxes.algorithms.downwind.models.PointWakesCalculation.sub_models", "foxes.algorithms.downwind.models.ReorderFarmOutput", "foxes.algorithms.downwind.models.ReorderFarmOutput.__init__", "foxes.algorithms.downwind.models.ReorderFarmOutput.calculate", "foxes.algorithms.downwind.models.ReorderFarmOutput.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbFarmResults", "foxes.algorithms.downwind.models.SetAmbFarmResults.__init__", "foxes.algorithms.downwind.models.SetAmbFarmResults.calculate", "foxes.algorithms.downwind.models.SetAmbFarmResults.output_farm_vars", "foxes.algorithms.downwind.models.SetAmbPointResults", "foxes.algorithms.downwind.models.SetAmbPointResults.__init__", "foxes.algorithms.downwind.models.SetAmbPointResults.calculate", "foxes.algorithms.downwind.models.SetAmbPointResults.initialize", "foxes.algorithms.downwind.models.SetAmbPointResults.output_point_vars", "foxes.algorithms.iterative.ConvCrit", "foxes.algorithms.iterative.ConvCrit.__init__", "foxes.algorithms.iterative.ConvCrit.check_converged", "foxes.algorithms.iterative.ConvCrit.get_deltas", "foxes.algorithms.iterative.ConvCritList", "foxes.algorithms.iterative.ConvCritList.__init__", "foxes.algorithms.iterative.ConvCritList.add_crit", "foxes.algorithms.iterative.ConvCritList.check_converged", "foxes.algorithms.iterative.ConvCritList.get_deltas", "foxes.algorithms.iterative.ConvVarDelta", "foxes.algorithms.iterative.ConvVarDelta.__init__", "foxes.algorithms.iterative.ConvVarDelta.check_converged", "foxes.algorithms.iterative.ConvVarDelta.get_deltas", "foxes.algorithms.iterative.DefaultConv", "foxes.algorithms.iterative.DefaultConv.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation", "foxes.algorithms.iterative.models.FarmWakesCalculation.__init__", "foxes.algorithms.iterative.models.FarmWakesCalculation.calculate", "foxes.algorithms.iterative.models.FarmWakesCalculation.output_farm_vars", "foxes.algorithms.iterative.models.FarmWakesCalculation.sub_models", "foxes.algorithms.iterative.models.URelax", "foxes.algorithms.iterative.models.URelax.__init__", "foxes.algorithms.iterative.models.URelax.calculate", "foxes.algorithms.iterative.models.URelax.output_farm_vars", "foxes.algorithms.sequential.SequentialPlugin", "foxes.algorithms.sequential.SequentialPlugin.__init__", "foxes.algorithms.sequential.SequentialPlugin.finalize", "foxes.algorithms.sequential.SequentialPlugin.initialize", "foxes.algorithms.sequential.SequentialPlugin.update", "foxes.algorithms.sequential.models.SeqState", "foxes.algorithms.sequential.models.SeqState.__init__", "foxes.algorithms.sequential.models.SeqState.calculate", "foxes.algorithms.sequential.models.SeqState.counter", "foxes.algorithms.sequential.models.SeqState.index", "foxes.algorithms.sequential.models.SeqState.initialize", "foxes.algorithms.sequential.models.SeqState.output_point_vars", "foxes.algorithms.sequential.models.SeqState.size", "foxes.algorithms.sequential.models.SeqState.sub_models", "foxes.algorithms.sequential.models.SeqState.weights", "foxes.config.Config", "foxes.config.Config.__init__", "foxes.config.Config.dtype_double", "foxes.config.Config.dtype_int", "foxes.config.Config.out_dir", "foxes.config.Config.work_dir", "foxes.config.get_output_path", "foxes.config.get_path", "foxes.constants.AMB_ROTOR_RES", "foxes.constants.BLOCK_CONVERGENCE", "foxes.constants.DTYPE", "foxes.constants.FARM", "foxes.constants.GW", "foxes.constants.ITYPE", "foxes.constants.KAPPA", "foxes.constants.MW", "foxes.constants.OUT_DIR", "foxes.constants.POINT", "foxes.constants.POINTS", "foxes.constants.POP", "foxes.constants.P_UNITS", "foxes.constants.ROTOR_POINTS", "foxes.constants.ROTOR_WEIGHTS", "foxes.constants.STATE", "foxes.constants.STATES_SEL", "foxes.constants.STATE_SOURCE_ORDERI", "foxes.constants.STATE_TARGET", "foxes.constants.STATE_TARGET_TPOINT", "foxes.constants.STATE_TURBINE", "foxes.constants.TARGET", "foxes.constants.TARGETS", "foxes.constants.TIME", "foxes.constants.TMODELS", "foxes.constants.TMODEL_SELS", "foxes.constants.TNAME", "foxes.constants.TPOINT", "foxes.constants.TPOINTS", "foxes.constants.TURBINE", "foxes.constants.TW", "foxes.constants.TWEIGHTS", "foxes.constants.VALID", "foxes.constants.VARS", "foxes.constants.W", "foxes.constants.WORK_DIR", "foxes.constants.XYH", "foxes.constants.kW", "foxes.core.Algorithm", "foxes.core.Algorithm.__init__", "foxes.core.Algorithm.add_to_chunk_store", "foxes.core.Algorithm.block_convergence", "foxes.core.Algorithm.calc_farm", "foxes.core.Algorithm.calc_points", "foxes.core.Algorithm.chunk_store", "foxes.core.Algorithm.dbook", "foxes.core.Algorithm.del_model_data", "foxes.core.Algorithm.eval_conv_block", "foxes.core.Algorithm.farm", "foxes.core.Algorithm.finalize", "foxes.core.Algorithm.find_chunk_in_store", "foxes.core.Algorithm.get_from_chunk_store", "foxes.core.Algorithm.get_model_data", "foxes.core.Algorithm.get_models_data", "foxes.core.Algorithm.get_models_idata", "foxes.core.Algorithm.idata_mem", "foxes.core.Algorithm.initialize", "foxes.core.Algorithm.mbook", "foxes.core.Algorithm.new", "foxes.core.Algorithm.new_point_data", "foxes.core.Algorithm.print", "foxes.core.Algorithm.reset_chunk_store", "foxes.core.Algorithm.set_running", "foxes.core.Algorithm.store_model_data", "foxes.core.Algorithm.unset_running", "foxes.core.Algorithm.update_n_turbines", "foxes.core.AxialInductionModel", "foxes.core.AxialInductionModel.ct2a", "foxes.core.Data", "foxes.core.Data.__init__", "foxes.core.Data.add", "foxes.core.Data.from_dataset", "foxes.core.Data.get_slice", "foxes.core.Data.n_states", "foxes.core.Data.n_turbines", "foxes.core.Data.states_i0", "foxes.core.DataCalcModel", "foxes.core.DataCalcModel.calculate", "foxes.core.DataCalcModel.output_coords", "foxes.core.Engine", "foxes.core.Engine.__init__", "foxes.core.Engine.__repr__", "foxes.core.Engine.calc_chunk_sizes", "foxes.core.Engine.combine_results", "foxes.core.Engine.entered", "foxes.core.Engine.finalize", "foxes.core.Engine.get_chunk_input_data", "foxes.core.Engine.initialize", "foxes.core.Engine.initialized", "foxes.core.Engine.loop_dims", "foxes.core.Engine.new", "foxes.core.Engine.print", "foxes.core.Engine.run_calculation", "foxes.core.Engine.select_subsets", "foxes.core.ExtendedStates", "foxes.core.ExtendedStates.__init__", "foxes.core.ExtendedStates.append", "foxes.core.ExtendedStates.calculate", "foxes.core.ExtendedStates.index", "foxes.core.ExtendedStates.output_point_vars", "foxes.core.ExtendedStates.size", "foxes.core.ExtendedStates.sub_models", "foxes.core.ExtendedStates.weights", "foxes.core.FData", "foxes.core.FData.__init__", "foxes.core.FData.from_dataset", "foxes.core.FarmController", "foxes.core.FarmController.__init__", "foxes.core.FarmController.calculate", "foxes.core.FarmController.collect_models", "foxes.core.FarmController.finalize", "foxes.core.FarmController.initialize", "foxes.core.FarmController.load_data", "foxes.core.FarmController.needs_rews2", "foxes.core.FarmController.needs_rews3", "foxes.core.FarmController.output_farm_vars", "foxes.core.FarmController.set_pars", "foxes.core.FarmController.sub_models", "foxes.core.FarmDataModel", "foxes.core.FarmDataModel.__init__", "foxes.core.FarmDataModel.calculate", "foxes.core.FarmDataModel.ensure_variables", "foxes.core.FarmDataModel.output_coords", "foxes.core.FarmDataModel.output_farm_vars", "foxes.core.FarmDataModel.run_calculation", "foxes.core.FarmDataModelList", "foxes.core.FarmDataModelList.__init__", "foxes.core.FarmDataModelList.__repr__", "foxes.core.FarmDataModelList.append", "foxes.core.FarmDataModelList.calculate", "foxes.core.FarmDataModelList.insert", "foxes.core.FarmDataModelList.output_farm_vars", "foxes.core.FarmDataModelList.sub_models", "foxes.core.FarmModel", "foxes.core.GroundModel", "foxes.core.GroundModel.contribute_to_farm_wakes", "foxes.core.GroundModel.contribute_to_point_wakes", "foxes.core.GroundModel.finalize_farm_wakes", "foxes.core.GroundModel.finalize_point_wakes", "foxes.core.GroundModel.new_farm_wake_deltas", "foxes.core.GroundModel.new_point_wake_deltas", "foxes.core.MData", "foxes.core.MData.__init__", "foxes.core.Model", "foxes.core.Model.__init__", "foxes.core.Model.__repr__", "foxes.core.Model.finalize", "foxes.core.Model.get_data", "foxes.core.Model.initialize", "foxes.core.Model.initialized", "foxes.core.Model.load_data", "foxes.core.Model.model_id", "foxes.core.Model.running", "foxes.core.Model.set_running", "foxes.core.Model.sub_models", "foxes.core.Model.unset_running", "foxes.core.Model.var", "foxes.core.PartialWakesModel", "foxes.core.PartialWakesModel.check_wmodel", "foxes.core.PartialWakesModel.contribute", "foxes.core.PartialWakesModel.finalize_wakes", "foxes.core.PartialWakesModel.get_wake_points", "foxes.core.PartialWakesModel.new", "foxes.core.PartialWakesModel.new_wake_deltas", "foxes.core.PointDataModel", "foxes.core.PointDataModel.calculate", "foxes.core.PointDataModel.ensure_variables", "foxes.core.PointDataModel.output_coords", "foxes.core.PointDataModel.output_point_vars", "foxes.core.PointDataModel.run_calculation", "foxes.core.PointDataModelList", "foxes.core.PointDataModelList.__init__", "foxes.core.PointDataModelList.__repr__", "foxes.core.PointDataModelList.append", "foxes.core.PointDataModelList.calculate", "foxes.core.PointDataModelList.output_point_vars", "foxes.core.PointDataModelList.sub_models", "foxes.core.RotorModel", "foxes.core.RotorModel.__init__", "foxes.core.RotorModel.calculate", "foxes.core.RotorModel.design_points", "foxes.core.RotorModel.eval_rpoint_results", "foxes.core.RotorModel.get_rotor_points", "foxes.core.RotorModel.n_rotor_points", "foxes.core.RotorModel.new", "foxes.core.RotorModel.output_farm_vars", "foxes.core.RotorModel.rotor_point_weights", "foxes.core.States", "foxes.core.States.index", "foxes.core.States.load_data", "foxes.core.States.new", "foxes.core.States.output_point_vars", "foxes.core.States.reset", "foxes.core.States.size", "foxes.core.States.weights", "foxes.core.TData", "foxes.core.TData.__init__", "foxes.core.TData.from_dataset", "foxes.core.TData.from_points", "foxes.core.TData.from_tpoints", "foxes.core.TData.n_targets", "foxes.core.TData.n_tpoints", "foxes.core.TData.targets_i0", "foxes.core.TData.tpoint_mean", "foxes.core.Turbine", "foxes.core.Turbine.__init__", "foxes.core.Turbine.add_model", "foxes.core.Turbine.insert_model", "foxes.core.TurbineInductionModel", "foxes.core.TurbineInductionModel.affects_downwind", "foxes.core.TurbineModel", "foxes.core.TurbineModel.calculate", "foxes.core.TurbineModel.new", "foxes.core.TurbineType", "foxes.core.TurbineType.__init__", "foxes.core.TurbineType.__repr__", "foxes.core.TurbineType.modify_cutin", "foxes.core.TurbineType.needs_rews2", "foxes.core.TurbineType.needs_rews3", "foxes.core.TurbineType.new", "foxes.core.VerticalProfile", "foxes.core.VerticalProfile.calculate", "foxes.core.VerticalProfile.input_vars", "foxes.core.VerticalProfile.new", "foxes.core.WakeFrame", "foxes.core.WakeFrame.__init__", "foxes.core.WakeFrame.calc_centreline_integral", "foxes.core.WakeFrame.calc_order", "foxes.core.WakeFrame.get_centreline_points", "foxes.core.WakeFrame.get_wake_coos", "foxes.core.WakeFrame.get_wake_modelling_data", "foxes.core.WakeFrame.new", "foxes.core.WakeK", "foxes.core.WakeK.__call__", "foxes.core.WakeK.__init__", "foxes.core.WakeK.all_none", "foxes.core.WakeK.is_kTI", "foxes.core.WakeK.repr", "foxes.core.WakeK.use_amb_ti", "foxes.core.WakeModel", "foxes.core.WakeModel.affects_downwind", "foxes.core.WakeModel.contribute", "foxes.core.WakeModel.finalize_wake_deltas", "foxes.core.WakeModel.new", "foxes.core.WakeModel.new_wake_deltas", "foxes.core.WakeSuperposition", "foxes.core.WakeSuperposition.add_wake", "foxes.core.WakeSuperposition.calc_final_wake_delta", "foxes.core.WindFarm", "foxes.core.WindFarm.__init__", "foxes.core.WindFarm.add_turbine", "foxes.core.WindFarm.n_turbines", "foxes.core.WindFarm.turbine_names", "foxes.core.get_engine", "foxes.core.has_engine", "foxes.core.reset_engine", "foxes.data.StaticData", "foxes.data.StaticData.__init__", "foxes.data.parse_Pct_file_name", "foxes.data.parse_Pct_two_files", "foxes.engines.DaskBaseEngine", "foxes.engines.DaskBaseEngine.__init__", "foxes.engines.DaskBaseEngine.chunk_data", "foxes.engines.DaskBaseEngine.finalize", "foxes.engines.DaskBaseEngine.initialize", "foxes.engines.DaskEngine", "foxes.engines.DaskEngine.run_calculation", "foxes.engines.DefaultEngine", "foxes.engines.DefaultEngine.run_calculation", "foxes.engines.LocalClusterEngine", "foxes.engines.LocalClusterEngine.__init__", "foxes.engines.LocalClusterEngine.run_calculation", "foxes.engines.MPIEngine", "foxes.engines.MPIEngine.initialize", "foxes.engines.MultiprocessEngine", "foxes.engines.NumpyEngine", "foxes.engines.NumpyEngine.run_calculation", "foxes.engines.PoolEngine", "foxes.engines.PoolEngine.run_calculation", "foxes.engines.ProcessEngine", "foxes.engines.RayEngine", "foxes.engines.SingleChunkEngine", "foxes.engines.SingleChunkEngine.__init__", "foxes.engines.SingleChunkEngine.__repr__", "foxes.engines.SingleChunkEngine.run_calculation", "foxes.engines.SlurmClusterEngine", "foxes.engines.ThreadsEngine", "foxes.engines.XArrayEngine", "foxes.engines.XArrayEngine.run_calculation", "foxes.input.farm_layout.add_from_csv", "foxes.input.farm_layout.add_from_df", "foxes.input.farm_layout.add_from_file", "foxes.input.farm_layout.add_from_json", "foxes.input.farm_layout.add_grid", "foxes.input.farm_layout.add_random", "foxes.input.farm_layout.add_ring", "foxes.input.farm_layout.add_row", "foxes.input.states.FieldDataNC", "foxes.input.states.FieldDataNC.__init__", "foxes.input.states.FieldDataNC.calculate", "foxes.input.states.FieldDataNC.data_source", "foxes.input.states.FieldDataNC.index", "foxes.input.states.FieldDataNC.load_data", "foxes.input.states.FieldDataNC.output_point_vars", "foxes.input.states.FieldDataNC.set_running", "foxes.input.states.FieldDataNC.size", "foxes.input.states.FieldDataNC.unset_running", "foxes.input.states.FieldDataNC.weights", "foxes.input.states.MultiHeightNCStates", "foxes.input.states.MultiHeightNCStates.__init__", "foxes.input.states.MultiHeightNCStates.load_data", "foxes.input.states.MultiHeightNCTimeseries", "foxes.input.states.MultiHeightNCTimeseries.__init__", "foxes.input.states.MultiHeightStates", "foxes.input.states.MultiHeightStates.RDICT", "foxes.input.states.MultiHeightStates.__init__", "foxes.input.states.MultiHeightStates.__repr__", "foxes.input.states.MultiHeightStates.calculate", "foxes.input.states.MultiHeightStates.data_source", "foxes.input.states.MultiHeightStates.finalize", "foxes.input.states.MultiHeightStates.index", "foxes.input.states.MultiHeightStates.load_data", "foxes.input.states.MultiHeightStates.output_point_vars", "foxes.input.states.MultiHeightStates.reset", "foxes.input.states.MultiHeightStates.set_running", "foxes.input.states.MultiHeightStates.size", "foxes.input.states.MultiHeightStates.unset_running", "foxes.input.states.MultiHeightStates.weights", "foxes.input.states.MultiHeightTimeseries", "foxes.input.states.MultiHeightTimeseries.RDICT", "foxes.input.states.OnePointFlowMultiHeightNCTimeseries", "foxes.input.states.OnePointFlowMultiHeightNCTimeseries.__init__", "foxes.input.states.OnePointFlowMultiHeightTimeseries", "foxes.input.states.OnePointFlowMultiHeightTimeseries.__init__", "foxes.input.states.OnePointFlowStates", "foxes.input.states.OnePointFlowStates.__init__", "foxes.input.states.OnePointFlowStates.__repr__", "foxes.input.states.OnePointFlowStates.calc_states_indices", "foxes.input.states.OnePointFlowStates.calculate", "foxes.input.states.OnePointFlowStates.index", "foxes.input.states.OnePointFlowStates.initialize", "foxes.input.states.OnePointFlowStates.output_point_vars", "foxes.input.states.OnePointFlowStates.set_running", "foxes.input.states.OnePointFlowStates.size", "foxes.input.states.OnePointFlowStates.sub_models", "foxes.input.states.OnePointFlowStates.unset_running", "foxes.input.states.OnePointFlowStates.weights", "foxes.input.states.OnePointFlowTimeseries", "foxes.input.states.OnePointFlowTimeseries.__init__", "foxes.input.states.ScanWS", "foxes.input.states.ScanWS.__init__", "foxes.input.states.ScanWS.calculate", "foxes.input.states.ScanWS.load_data", "foxes.input.states.ScanWS.output_point_vars", "foxes.input.states.ScanWS.set_running", "foxes.input.states.ScanWS.size", "foxes.input.states.ScanWS.unset_running", "foxes.input.states.ScanWS.weights", "foxes.input.states.SingleStateStates", "foxes.input.states.SingleStateStates.__init__", "foxes.input.states.SingleStateStates.calculate", "foxes.input.states.SingleStateStates.initialize", "foxes.input.states.SingleStateStates.output_point_vars", "foxes.input.states.SingleStateStates.size", "foxes.input.states.SingleStateStates.sub_models", "foxes.input.states.SingleStateStates.weights", "foxes.input.states.SliceDataNC", "foxes.input.states.SliceDataNC.__init__", "foxes.input.states.SliceDataNC.calculate", "foxes.input.states.SliceDataNC.data_source", "foxes.input.states.SliceDataNC.index", "foxes.input.states.SliceDataNC.load_data", "foxes.input.states.SliceDataNC.output_point_vars", "foxes.input.states.SliceDataNC.set_running", "foxes.input.states.SliceDataNC.size", "foxes.input.states.SliceDataNC.unset_running", "foxes.input.states.SliceDataNC.weights", "foxes.input.states.StatesTable", "foxes.input.states.StatesTable.RDICT", "foxes.input.states.StatesTable.__init__", "foxes.input.states.StatesTable.calculate", "foxes.input.states.StatesTable.data_source", "foxes.input.states.StatesTable.finalize", "foxes.input.states.StatesTable.index", "foxes.input.states.StatesTable.initialize", "foxes.input.states.StatesTable.load_data", "foxes.input.states.StatesTable.output_point_vars", "foxes.input.states.StatesTable.reset", "foxes.input.states.StatesTable.set_running", "foxes.input.states.StatesTable.size", "foxes.input.states.StatesTable.sub_models", "foxes.input.states.StatesTable.unset_running", "foxes.input.states.StatesTable.weights", "foxes.input.states.TabStates", "foxes.input.states.TabStates.__init__", "foxes.input.states.TabStates.load_data", "foxes.input.states.TabStates.set_running", "foxes.input.states.TabStates.unset_running", "foxes.input.states.Timeseries", "foxes.input.states.Timeseries.RDICT", "foxes.input.states.create.create_random_abl_states", "foxes.input.states.create.random_timseries_data", "foxes.input.states.create.write_random_abl_states", "foxes.input.yaml.foxes_windio", "foxes.input.yaml.foxes_yaml", "foxes.input.yaml.read_windio", "foxes.input.yaml.run_dict", "foxes.input.yaml.windio.read_attributes", "foxes.input.yaml.windio.read_layout", "foxes.input.yaml.windio.read_turbine_types", "foxes.input.yaml.windio.read_wind_resource_field", "foxes.models.ModelBook", "foxes.models.ModelBook.__getitem__", "foxes.models.ModelBook.__init__", "foxes.models.ModelBook.default_partial_wakes", "foxes.models.ModelBook.finalize", "foxes.models.ModelBook.get", "foxes.models.ModelBook.print_toc", "foxes.models.axial_induction.BetzAxialInduction", "foxes.models.axial_induction.BetzAxialInduction.__init__", "foxes.models.axial_induction.BetzAxialInduction.ct2a", "foxes.models.axial_induction.MadsenAxialInduction", "foxes.models.axial_induction.MadsenAxialInduction.__init__", "foxes.models.axial_induction.MadsenAxialInduction.ct2a", "foxes.models.farm_controllers.BasicFarmController", "foxes.models.farm_models.Turbine2FarmModel", "foxes.models.farm_models.Turbine2FarmModel.__init__", "foxes.models.farm_models.Turbine2FarmModel.__repr__", "foxes.models.farm_models.Turbine2FarmModel.calculate", "foxes.models.farm_models.Turbine2FarmModel.output_farm_vars", "foxes.models.farm_models.Turbine2FarmModel.sub_models", "foxes.models.ground_models.GroundMirror", "foxes.models.ground_models.GroundMirror.__init__", "foxes.models.ground_models.NoGround", "foxes.models.ground_models.WakeMirror", "foxes.models.ground_models.WakeMirror.__init__", "foxes.models.ground_models.WakeMirror.contribute_to_farm_wakes", "foxes.models.ground_models.WakeMirror.contribute_to_point_wakes", "foxes.models.partial_wakes.PartialAxiwake", "foxes.models.partial_wakes.PartialAxiwake.__init__", "foxes.models.partial_wakes.PartialAxiwake.__repr__", "foxes.models.partial_wakes.PartialAxiwake.check_wmodel", "foxes.models.partial_wakes.PartialAxiwake.contribute", "foxes.models.partial_wakes.PartialCentre", "foxes.models.partial_wakes.PartialCentre.get_wake_points", "foxes.models.partial_wakes.PartialGrid", "foxes.models.partial_wakes.PartialGrid.__init__", "foxes.models.partial_wakes.PartialSegregated", "foxes.models.partial_wakes.PartialSegregated.__init__", "foxes.models.partial_wakes.PartialSegregated.__repr__", "foxes.models.partial_wakes.PartialSegregated.finalize_wakes", "foxes.models.partial_wakes.PartialSegregated.get_wake_points", "foxes.models.partial_wakes.PartialSegregated.sub_models", "foxes.models.partial_wakes.PartialTopHat", "foxes.models.partial_wakes.PartialTopHat.__init__", "foxes.models.partial_wakes.PartialTopHat.check_wmodel", "foxes.models.partial_wakes.PartialTopHat.contribute", "foxes.models.partial_wakes.PartialTopHat.initialize", "foxes.models.partial_wakes.PartialTopHat.sub_models", "foxes.models.partial_wakes.RotorPoints", "foxes.models.partial_wakes.RotorPoints.finalize_wakes", "foxes.models.partial_wakes.RotorPoints.get_wake_points", "foxes.models.point_models.SetUniformData", "foxes.models.point_models.SetUniformData.__init__", "foxes.models.point_models.SetUniformData.calculate", "foxes.models.point_models.SetUniformData.load_data", "foxes.models.point_models.SetUniformData.output_point_vars", "foxes.models.point_models.TKE2TI", "foxes.models.point_models.TKE2TI.calculate", "foxes.models.point_models.TKE2TI.output_point_vars", "foxes.models.point_models.WakeDeltas", "foxes.models.point_models.WakeDeltas.__init__", "foxes.models.point_models.WakeDeltas.calculate", "foxes.models.point_models.WakeDeltas.output_point_vars", "foxes.models.rotor_models.CentreRotor", "foxes.models.rotor_models.CentreRotor.design_points", "foxes.models.rotor_models.CentreRotor.eval_rpoint_results", "foxes.models.rotor_models.CentreRotor.get_rotor_points", "foxes.models.rotor_models.CentreRotor.n_rotor_points", "foxes.models.rotor_models.CentreRotor.rotor_point_weights", "foxes.models.rotor_models.GridRotor", "foxes.models.rotor_models.GridRotor.__init__", "foxes.models.rotor_models.GridRotor.__repr__", "foxes.models.rotor_models.GridRotor.design_points", "foxes.models.rotor_models.GridRotor.initialize", "foxes.models.rotor_models.GridRotor.n_rotor_points", "foxes.models.rotor_models.GridRotor.rotor_point_weights", "foxes.models.rotor_models.LevelRotor", "foxes.models.rotor_models.LevelRotor.__init__", "foxes.models.rotor_models.LevelRotor.__repr__", "foxes.models.rotor_models.LevelRotor.design_points", "foxes.models.rotor_models.LevelRotor.initialize", "foxes.models.rotor_models.LevelRotor.n_rotor_points", "foxes.models.rotor_models.LevelRotor.rotor_point_weights", "foxes.models.turbine_models.Calculator", "foxes.models.turbine_models.Calculator.__init__", "foxes.models.turbine_models.Calculator.__repr__", "foxes.models.turbine_models.Calculator.calculate", "foxes.models.turbine_models.Calculator.output_farm_vars", "foxes.models.turbine_models.LookupTable", "foxes.models.turbine_models.LookupTable.__init__", "foxes.models.turbine_models.LookupTable.calculate", "foxes.models.turbine_models.LookupTable.load_data", "foxes.models.turbine_models.LookupTable.output_farm_vars", "foxes.models.turbine_models.PowerMask", "foxes.models.turbine_models.PowerMask.__init__", "foxes.models.turbine_models.PowerMask.__repr__", "foxes.models.turbine_models.PowerMask.calculate", "foxes.models.turbine_models.PowerMask.initialize", "foxes.models.turbine_models.PowerMask.output_farm_vars", "foxes.models.turbine_models.PowerMask.sub_models", "foxes.models.turbine_models.RotorCentreCalc", "foxes.models.turbine_models.RotorCentreCalc.__init__", "foxes.models.turbine_models.RotorCentreCalc.calculate", "foxes.models.turbine_models.RotorCentreCalc.initialize", "foxes.models.turbine_models.RotorCentreCalc.output_farm_vars", "foxes.models.turbine_models.RotorCentreCalc.sub_models", "foxes.models.turbine_models.SectorManagement", "foxes.models.turbine_models.SectorManagement.__init__", "foxes.models.turbine_models.SectorManagement.calculate", "foxes.models.turbine_models.SectorManagement.initialize", "foxes.models.turbine_models.SectorManagement.output_farm_vars", "foxes.models.turbine_models.SetFarmVars", "foxes.models.turbine_models.SetFarmVars.__init__", "foxes.models.turbine_models.SetFarmVars.add_var", "foxes.models.turbine_models.SetFarmVars.calculate", "foxes.models.turbine_models.SetFarmVars.initialize", "foxes.models.turbine_models.SetFarmVars.load_data", "foxes.models.turbine_models.SetFarmVars.output_farm_vars", "foxes.models.turbine_models.SetFarmVars.reset", "foxes.models.turbine_models.SetFarmVars.set_running", "foxes.models.turbine_models.SetFarmVars.unset_running", "foxes.models.turbine_models.TableFactors", "foxes.models.turbine_models.TableFactors.__init__", "foxes.models.turbine_models.TableFactors.calculate", "foxes.models.turbine_models.TableFactors.initialize", "foxes.models.turbine_models.TableFactors.output_farm_vars", "foxes.models.turbine_models.Thrust2Ct", "foxes.models.turbine_models.Thrust2Ct.__init__", "foxes.models.turbine_models.Thrust2Ct.__repr__", "foxes.models.turbine_models.Thrust2Ct.calculate", "foxes.models.turbine_models.Thrust2Ct.output_farm_vars", "foxes.models.turbine_models.YAW2YAWM", "foxes.models.turbine_models.YAW2YAWM.calculate", "foxes.models.turbine_models.YAW2YAWM.output_farm_vars", "foxes.models.turbine_models.YAWM2YAW", "foxes.models.turbine_models.YAWM2YAW.calculate", "foxes.models.turbine_models.YAWM2YAW.output_farm_vars", "foxes.models.turbine_models.kTI", "foxes.models.turbine_models.kTI.__init__", "foxes.models.turbine_models.kTI.__repr__", "foxes.models.turbine_models.kTI.calculate", "foxes.models.turbine_models.kTI.output_farm_vars", "foxes.models.turbine_types.CpCtFile", "foxes.models.turbine_types.CpCtFile.__init__", "foxes.models.turbine_types.CpCtFromTwo", "foxes.models.turbine_types.CpCtFromTwo.__init__", "foxes.models.turbine_types.FromLookupTable", "foxes.models.turbine_types.FromLookupTable.__init__", "foxes.models.turbine_types.FromLookupTable.__repr__", "foxes.models.turbine_types.FromLookupTable.calculate", "foxes.models.turbine_types.FromLookupTable.initialize", "foxes.models.turbine_types.FromLookupTable.modify_cutin", "foxes.models.turbine_types.FromLookupTable.needs_rews2", "foxes.models.turbine_types.FromLookupTable.needs_rews3", "foxes.models.turbine_types.FromLookupTable.output_farm_vars", "foxes.models.turbine_types.FromLookupTable.sub_models", "foxes.models.turbine_types.NullType", "foxes.models.turbine_types.NullType.__init__", "foxes.models.turbine_types.NullType.calculate", "foxes.models.turbine_types.NullType.needs_rews2", "foxes.models.turbine_types.NullType.needs_rews3", "foxes.models.turbine_types.NullType.output_farm_vars", "foxes.models.turbine_types.PCtFile", "foxes.models.turbine_types.PCtFile.__init__", "foxes.models.turbine_types.PCtFile.__repr__", "foxes.models.turbine_types.PCtFile.calculate", "foxes.models.turbine_types.PCtFile.finalize", "foxes.models.turbine_types.PCtFile.load_data", "foxes.models.turbine_types.PCtFile.modify_cutin", "foxes.models.turbine_types.PCtFile.needs_rews2", "foxes.models.turbine_types.PCtFile.needs_rews3", "foxes.models.turbine_types.PCtFile.output_farm_vars", "foxes.models.turbine_types.PCtFromTwo", "foxes.models.turbine_types.PCtFromTwo.__init__", "foxes.models.turbine_types.PCtFromTwo.__repr__", "foxes.models.turbine_types.PCtFromTwo.calculate", "foxes.models.turbine_types.PCtFromTwo.finalize", "foxes.models.turbine_types.PCtFromTwo.load_data", "foxes.models.turbine_types.PCtFromTwo.modify_cutin", "foxes.models.turbine_types.PCtFromTwo.needs_rews2", "foxes.models.turbine_types.PCtFromTwo.needs_rews3", "foxes.models.turbine_types.PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.TBLFile", "foxes.models.turbine_types.TBLFile.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo", "foxes.models.turbine_types.WsRho2PCtFromTwo.__init__", "foxes.models.turbine_types.WsRho2PCtFromTwo.calculate", "foxes.models.turbine_types.WsRho2PCtFromTwo.finalize", "foxes.models.turbine_types.WsRho2PCtFromTwo.load_data", "foxes.models.turbine_types.WsRho2PCtFromTwo.needs_rews2", "foxes.models.turbine_types.WsRho2PCtFromTwo.needs_rews3", "foxes.models.turbine_types.WsRho2PCtFromTwo.output_farm_vars", "foxes.models.turbine_types.WsTI2PCtFromTwo", "foxes.models.turbine_types.WsTI2PCtFromTwo.__init__", "foxes.models.turbine_types.WsTI2PCtFromTwo.__repr__", "foxes.models.turbine_types.WsTI2PCtFromTwo.calculate", "foxes.models.turbine_types.WsTI2PCtFromTwo.finalize", "foxes.models.turbine_types.WsTI2PCtFromTwo.load_data", "foxes.models.turbine_types.WsTI2PCtFromTwo.needs_rews2", "foxes.models.turbine_types.WsTI2PCtFromTwo.needs_rews3", "foxes.models.turbine_types.WsTI2PCtFromTwo.output_farm_vars", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogNeutralWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogStableWsProfile", "foxes.models.vertical_profiles.ABLLogStableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogStableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogStableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogUnstableWsProfile.input_vars", "foxes.models.vertical_profiles.ABLLogWsProfile", "foxes.models.vertical_profiles.ABLLogWsProfile.__init__", "foxes.models.vertical_profiles.ABLLogWsProfile.calculate", "foxes.models.vertical_profiles.ABLLogWsProfile.input_vars", "foxes.models.vertical_profiles.DataProfile", "foxes.models.vertical_profiles.DataProfile.__init__", "foxes.models.vertical_profiles.DataProfile.calculate", "foxes.models.vertical_profiles.DataProfile.input_vars", "foxes.models.vertical_profiles.ShearedProfile", "foxes.models.vertical_profiles.ShearedProfile.calculate", "foxes.models.vertical_profiles.ShearedProfile.input_vars", "foxes.models.vertical_profiles.UniformProfile", "foxes.models.vertical_profiles.UniformProfile.__init__", "foxes.models.vertical_profiles.UniformProfile.calculate", "foxes.models.vertical_profiles.UniformProfile.input_vars", "foxes.models.wake_frames.DynamicWakes", "foxes.models.wake_frames.DynamicWakes.__init__", "foxes.models.wake_frames.DynamicWakes.__repr__", "foxes.models.wake_frames.DynamicWakes.calc_order", "foxes.models.wake_frames.DynamicWakes.get_wake_coos", "foxes.models.wake_frames.DynamicWakes.initialize", "foxes.models.wake_frames.FarmOrder", "foxes.models.wake_frames.FarmOrder.__init__", "foxes.models.wake_frames.FarmOrder.calc_order", "foxes.models.wake_frames.FarmOrder.get_centreline_points", "foxes.models.wake_frames.FarmOrder.get_wake_coos", "foxes.models.wake_frames.FarmOrder.initialize", "foxes.models.wake_frames.FarmOrder.sub_models", "foxes.models.wake_frames.RotorWD", "foxes.models.wake_frames.RotorWD.__init__", "foxes.models.wake_frames.RotorWD.calc_order", "foxes.models.wake_frames.RotorWD.get_centreline_points", "foxes.models.wake_frames.RotorWD.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes", "foxes.models.wake_frames.SeqDynamicWakes.__init__", "foxes.models.wake_frames.SeqDynamicWakes.__repr__", "foxes.models.wake_frames.SeqDynamicWakes.calc_order", "foxes.models.wake_frames.SeqDynamicWakes.get_centreline_points", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_coos", "foxes.models.wake_frames.SeqDynamicWakes.get_wake_modelling_data", "foxes.models.wake_frames.SeqDynamicWakes.initialize", "foxes.models.wake_frames.Streamlines2D", "foxes.models.wake_frames.Streamlines2D.__init__", "foxes.models.wake_frames.Streamlines2D.__repr__", "foxes.models.wake_frames.Streamlines2D.calc_order", "foxes.models.wake_frames.Streamlines2D.get_centreline_points", "foxes.models.wake_frames.Streamlines2D.get_streamline_data", "foxes.models.wake_frames.Streamlines2D.get_wake_coos", "foxes.models.wake_frames.Timelines", "foxes.models.wake_frames.Timelines.__init__", "foxes.models.wake_frames.Timelines.__repr__", "foxes.models.wake_frames.Timelines.calc_order", "foxes.models.wake_frames.Timelines.finalize", "foxes.models.wake_frames.Timelines.get_centreline_points", "foxes.models.wake_frames.Timelines.get_wake_coos", "foxes.models.wake_frames.Timelines.initialize", "foxes.models.wake_frames.Timelines.set_running", "foxes.models.wake_frames.Timelines.unset_running", "foxes.models.wake_frames.YawedWakes", "foxes.models.wake_frames.YawedWakes.__init__", "foxes.models.wake_frames.YawedWakes.__repr__", "foxes.models.wake_frames.YawedWakes.calc_order", "foxes.models.wake_frames.YawedWakes.get_centreline_points", "foxes.models.wake_frames.YawedWakes.get_wake_coos", "foxes.models.wake_frames.YawedWakes.initialize", "foxes.models.wake_frames.YawedWakes.sub_models", "foxes.models.wake_models.AxisymmetricWakeModel", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_r", "foxes.models.wake_models.AxisymmetricWakeModel.calc_wakes_x_yz", "foxes.models.wake_models.DistSlicedWakeModel", "foxes.models.wake_models.DistSlicedWakeModel.__init__", "foxes.models.wake_models.DistSlicedWakeModel.calc_wakes_x_yz", "foxes.models.wake_models.DistSlicedWakeModel.contribute", "foxes.models.wake_models.DistSlicedWakeModel.finalize_wake_deltas", "foxes.models.wake_models.DistSlicedWakeModel.initialize", "foxes.models.wake_models.DistSlicedWakeModel.sub_models", "foxes.models.wake_models.GaussianWakeModel", "foxes.models.wake_models.GaussianWakeModel.calc_amplitude_sigma", "foxes.models.wake_models.GaussianWakeModel.calc_wakes_x_r", "foxes.models.wake_models.TopHatWakeModel", "foxes.models.wake_models.TopHatWakeModel.__init__", "foxes.models.wake_models.TopHatWakeModel.calc_centreline", "foxes.models.wake_models.TopHatWakeModel.calc_wake_radius", "foxes.models.wake_models.TopHatWakeModel.calc_wakes_x_r", "foxes.models.wake_models.TopHatWakeModel.initialize", "foxes.models.wake_models.TopHatWakeModel.sub_models", "foxes.models.wake_models.induction.RankineHalfBody", "foxes.models.wake_models.induction.RankineHalfBody.__init__", "foxes.models.wake_models.induction.RankineHalfBody.__repr__", "foxes.models.wake_models.induction.RankineHalfBody.contribute", "foxes.models.wake_models.induction.RankineHalfBody.finalize_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.initialize", "foxes.models.wake_models.induction.RankineHalfBody.new_wake_deltas", "foxes.models.wake_models.induction.RankineHalfBody.sub_models", "foxes.models.wake_models.induction.Rathmann", "foxes.models.wake_models.induction.Rathmann.__init__", "foxes.models.wake_models.induction.Rathmann.__repr__", "foxes.models.wake_models.induction.Rathmann.contribute", "foxes.models.wake_models.induction.Rathmann.finalize_wake_deltas", "foxes.models.wake_models.induction.Rathmann.initialize", "foxes.models.wake_models.induction.Rathmann.new_wake_deltas", "foxes.models.wake_models.induction.Rathmann.sub_models", "foxes.models.wake_models.induction.SelfSimilar", "foxes.models.wake_models.induction.SelfSimilar.__init__", "foxes.models.wake_models.induction.SelfSimilar.__repr__", "foxes.models.wake_models.induction.SelfSimilar.contribute", "foxes.models.wake_models.induction.SelfSimilar.finalize_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.initialize", "foxes.models.wake_models.induction.SelfSimilar.new_wake_deltas", "foxes.models.wake_models.induction.SelfSimilar.sub_models", "foxes.models.wake_models.induction.SelfSimilar2020", "foxes.models.wake_models.induction.VortexSheet", "foxes.models.wake_models.induction.VortexSheet.__init__", "foxes.models.wake_models.induction.VortexSheet.__repr__", "foxes.models.wake_models.induction.VortexSheet.contribute", "foxes.models.wake_models.induction.VortexSheet.finalize_wake_deltas", "foxes.models.wake_models.induction.VortexSheet.initialize", "foxes.models.wake_models.induction.VortexSheet.new_wake_deltas", "foxes.models.wake_models.induction.VortexSheet.sub_models", "foxes.models.wake_models.ti.CrespoHernandezTIWake", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__init__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.__repr__", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_centreline", "foxes.models.wake_models.ti.CrespoHernandezTIWake.calc_wake_radius", "foxes.models.wake_models.ti.CrespoHernandezTIWake.new_wake_deltas", "foxes.models.wake_models.ti.CrespoHernandezTIWake.sub_models", "foxes.models.wake_models.ti.IECTIWake", "foxes.models.wake_models.ti.IECTIWake.__init__", "foxes.models.wake_models.ti.IECTIWake.__repr__", "foxes.models.wake_models.ti.IECTIWake.calc_centreline", "foxes.models.wake_models.ti.IECTIWake.calc_wake_radius", "foxes.models.wake_models.ti.IECTIWake.new_wake_deltas", "foxes.models.wake_models.ti.IECTIWake.sub_models", "foxes.models.wake_models.wind.Bastankhah2014", "foxes.models.wake_models.wind.Bastankhah2014.__init__", "foxes.models.wake_models.wind.Bastankhah2014.__repr__", "foxes.models.wake_models.wind.Bastankhah2014.calc_amplitude_sigma", "foxes.models.wake_models.wind.Bastankhah2014.initialize", "foxes.models.wake_models.wind.Bastankhah2014.sub_models", "foxes.models.wake_models.wind.Bastankhah2016", "foxes.models.wake_models.wind.Bastankhah2016.__init__", "foxes.models.wake_models.wind.Bastankhah2016.__repr__", "foxes.models.wake_models.wind.Bastankhah2016.calc_wakes_x_yz", "foxes.models.wake_models.wind.Bastankhah2016.initialize", "foxes.models.wake_models.wind.Bastankhah2016.sub_models", "foxes.models.wake_models.wind.Bastankhah2016Model", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.AMPL_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.CHECK", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.DELTA_NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.MDATA_KEY", "foxes.models.wake_models.wind.Bastankhah2016Model.NEAR", "foxes.models.wake_models.wind.Bastankhah2016Model.PARS", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC", "foxes.models.wake_models.wind.Bastankhah2016Model.R_PC_S", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Y_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.SIGMA_Z_FAR", "foxes.models.wake_models.wind.Bastankhah2016Model.ST_SEL", "foxes.models.wake_models.wind.Bastankhah2016Model.X0", "foxes.models.wake_models.wind.Bastankhah2016Model.__init__", "foxes.models.wake_models.wind.Bastankhah2016Model.calc_data", "foxes.models.wake_models.wind.Bastankhah2016Model.clean", "foxes.models.wake_models.wind.Bastankhah2016Model.get_data", "foxes.models.wake_models.wind.Bastankhah2016Model.has_data", "foxes.models.wake_models.wind.Bastankhah2016Model.initialize", "foxes.models.wake_models.wind.Bastankhah2016Model.pars", "foxes.models.wake_models.wind.Bastankhah2016Model.sub_models", "foxes.models.wake_models.wind.JensenWake", "foxes.models.wake_models.wind.JensenWake.__init__", "foxes.models.wake_models.wind.JensenWake.__repr__", "foxes.models.wake_models.wind.JensenWake.calc_centreline", "foxes.models.wake_models.wind.JensenWake.calc_wake_radius", "foxes.models.wake_models.wind.TurbOParkWake", "foxes.models.wake_models.wind.TurbOParkWake.__init__", "foxes.models.wake_models.wind.TurbOParkWake.__repr__", "foxes.models.wake_models.wind.TurbOParkWake.calc_amplitude_sigma", "foxes.models.wake_models.wind.TurbOParkWake.initialize", "foxes.models.wake_models.wind.TurbOParkWake.sub_models", "foxes.models.wake_models.wind.TurbOParkWakeIX", "foxes.models.wake_models.wind.TurbOParkWakeIX.__init__", "foxes.models.wake_models.wind.TurbOParkWakeIX.__repr__", "foxes.models.wake_models.wind.TurbOParkWakeIX.calc_amplitude_sigma", "foxes.models.wake_models.wind.TurbOParkWakeIX.finalize", "foxes.models.wake_models.wind.TurbOParkWakeIX.initialize", "foxes.models.wake_models.wind.TurbOParkWakeIX.new_wake_deltas", "foxes.models.wake_models.wind.TurbOParkWakeIX.sub_models", "foxes.models.wake_superpositions.TILinear", "foxes.models.wake_superpositions.TILinear.__init__", "foxes.models.wake_superpositions.TILinear.__repr__", "foxes.models.wake_superpositions.TILinear.add_wake", "foxes.models.wake_superpositions.TILinear.calc_final_wake_delta", "foxes.models.wake_superpositions.TIMax", "foxes.models.wake_superpositions.TIMax.__init__", "foxes.models.wake_superpositions.TIMax.__repr__", "foxes.models.wake_superpositions.TIMax.add_wake", "foxes.models.wake_superpositions.TIMax.calc_final_wake_delta", "foxes.models.wake_superpositions.TIPow", "foxes.models.wake_superpositions.TIPow.__init__", "foxes.models.wake_superpositions.TIPow.__repr__", "foxes.models.wake_superpositions.TIPow.add_wake", "foxes.models.wake_superpositions.TIPow.calc_final_wake_delta", "foxes.models.wake_superpositions.TIQuadratic", "foxes.models.wake_superpositions.TIQuadratic.__init__", "foxes.models.wake_superpositions.TIQuadratic.__repr__", "foxes.models.wake_superpositions.TIQuadratic.add_wake", "foxes.models.wake_superpositions.TIQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear", "foxes.models.wake_superpositions.WSLinear.__init__", "foxes.models.wake_superpositions.WSLinear.__repr__", "foxes.models.wake_superpositions.WSLinear.add_wake", "foxes.models.wake_superpositions.WSLinear.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinear.input_farm_vars", "foxes.models.wake_superpositions.WSLinearLocal", "foxes.models.wake_superpositions.WSLinearLocal.__init__", "foxes.models.wake_superpositions.WSLinearLocal.__repr__", "foxes.models.wake_superpositions.WSLinearLocal.add_wake", "foxes.models.wake_superpositions.WSLinearLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSLinearLocal.input_farm_vars", "foxes.models.wake_superpositions.WSMax", "foxes.models.wake_superpositions.WSMax.__init__", "foxes.models.wake_superpositions.WSMax.__repr__", "foxes.models.wake_superpositions.WSMax.add_wake", "foxes.models.wake_superpositions.WSMax.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMax.input_farm_vars", "foxes.models.wake_superpositions.WSMaxLocal", "foxes.models.wake_superpositions.WSMaxLocal.__init__", "foxes.models.wake_superpositions.WSMaxLocal.__repr__", "foxes.models.wake_superpositions.WSMaxLocal.add_wake", "foxes.models.wake_superpositions.WSMaxLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSMaxLocal.input_farm_vars", "foxes.models.wake_superpositions.WSPow", "foxes.models.wake_superpositions.WSPow.__init__", "foxes.models.wake_superpositions.WSPow.__repr__", "foxes.models.wake_superpositions.WSPow.add_wake", "foxes.models.wake_superpositions.WSPow.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPow.input_farm_vars", "foxes.models.wake_superpositions.WSPowLocal", "foxes.models.wake_superpositions.WSPowLocal.__init__", "foxes.models.wake_superpositions.WSPowLocal.__repr__", "foxes.models.wake_superpositions.WSPowLocal.add_wake", "foxes.models.wake_superpositions.WSPowLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSPowLocal.input_farm_vars", "foxes.models.wake_superpositions.WSProduct", "foxes.models.wake_superpositions.WSProduct.__init__", "foxes.models.wake_superpositions.WSProduct.__repr__", "foxes.models.wake_superpositions.WSProduct.add_wake", "foxes.models.wake_superpositions.WSProduct.calc_final_wake_delta", "foxes.models.wake_superpositions.WSProduct.input_farm_vars", "foxes.models.wake_superpositions.WSQuadratic", "foxes.models.wake_superpositions.WSQuadratic.__init__", "foxes.models.wake_superpositions.WSQuadratic.__repr__", "foxes.models.wake_superpositions.WSQuadratic.add_wake", "foxes.models.wake_superpositions.WSQuadratic.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadratic.input_farm_vars", "foxes.models.wake_superpositions.WSQuadraticLocal", "foxes.models.wake_superpositions.WSQuadraticLocal.__init__", "foxes.models.wake_superpositions.WSQuadraticLocal.__repr__", "foxes.models.wake_superpositions.WSQuadraticLocal.add_wake", "foxes.models.wake_superpositions.WSQuadraticLocal.calc_final_wake_delta", "foxes.models.wake_superpositions.WSQuadraticLocal.input_farm_vars", "foxes.output.Animator", "foxes.output.Animator.__init__", "foxes.output.Animator.add_generator", "foxes.output.Animator.animate", "foxes.output.Animator.generators", "foxes.output.FarmLayoutOutput", "foxes.output.FarmLayoutOutput.__init__", "foxes.output.FarmLayoutOutput.get_figure", "foxes.output.FarmLayoutOutput.get_layout_data", "foxes.output.FarmLayoutOutput.get_layout_dict", "foxes.output.FarmLayoutOutput.write_csv", "foxes.output.FarmLayoutOutput.write_json", "foxes.output.FarmLayoutOutput.write_plot", "foxes.output.FarmLayoutOutput.write_xyh", "foxes.output.FarmResultsEval", "foxes.output.FarmResultsEval.__init__", "foxes.output.FarmResultsEval.add_capacity", "foxes.output.FarmResultsEval.add_efficiency", "foxes.output.FarmResultsEval.calc_farm_efficiency", "foxes.output.FarmResultsEval.calc_farm_mean", "foxes.output.FarmResultsEval.calc_farm_sum", "foxes.output.FarmResultsEval.calc_farm_yield", "foxes.output.FarmResultsEval.calc_mean_farm_power", "foxes.output.FarmResultsEval.calc_states_mean", "foxes.output.FarmResultsEval.calc_states_std", "foxes.output.FarmResultsEval.calc_states_sum", "foxes.output.FarmResultsEval.calc_turbine_mean", "foxes.output.FarmResultsEval.calc_turbine_sum", "foxes.output.FarmResultsEval.calc_turbine_yield", "foxes.output.FarmResultsEval.gen_stdata", "foxes.output.FarmResultsEval.reduce_all", "foxes.output.FarmResultsEval.reduce_states", "foxes.output.FarmResultsEval.reduce_turbines", "foxes.output.FarmResultsEval.weinsum", "foxes.output.FlowPlots2D", "foxes.output.FlowPlots2D.gen_states_fig_xy", "foxes.output.FlowPlots2D.gen_states_fig_xz", "foxes.output.FlowPlots2D.gen_states_fig_yz", "foxes.output.FlowPlots2D.get_mean_fig_xy", "foxes.output.FlowPlots2D.get_mean_fig_xz", "foxes.output.FlowPlots2D.get_mean_fig_yz", "foxes.output.Output", "foxes.output.Output.__init__", "foxes.output.Output.get_fpath", "foxes.output.Output.new", "foxes.output.Output.print_models", "foxes.output.Output.write", "foxes.output.PointCalculator", "foxes.output.PointCalculator.__init__", "foxes.output.PointCalculator.calculate", "foxes.output.ResultsWriter", "foxes.output.ResultsWriter.__init__", "foxes.output.ResultsWriter.write_csv", "foxes.output.ResultsWriter.write_nc", "foxes.output.RosePlotOutput", "foxes.output.RosePlotOutput.__init__", "foxes.output.RosePlotOutput.get_data", "foxes.output.RosePlotOutput.get_data_info", "foxes.output.RosePlotOutput.get_figure", "foxes.output.RosePlotOutput.write_figure", "foxes.output.RotorPointPlot", "foxes.output.RotorPointPlot.__init__", "foxes.output.RotorPointPlot.get_point_figure", "foxes.output.SeqFlowAnimationPlugin", "foxes.output.SeqFlowAnimationPlugin.__init__", "foxes.output.SeqFlowAnimationPlugin.gen_images", "foxes.output.SeqFlowAnimationPlugin.initialize", "foxes.output.SeqFlowAnimationPlugin.update", "foxes.output.SeqWakeDebugPlugin", "foxes.output.SeqWakeDebugPlugin.__init__", "foxes.output.SeqWakeDebugPlugin.gen_images", "foxes.output.SeqWakeDebugPlugin.initialize", "foxes.output.SeqWakeDebugPlugin.update", "foxes.output.SliceData", "foxes.output.SliceData.__init__", "foxes.output.SliceData.get_mean_data_xy", "foxes.output.SliceData.get_mean_data_xz", "foxes.output.SliceData.get_mean_data_yz", "foxes.output.SliceData.get_states_data_xy", "foxes.output.SliceData.get_states_data_xz", "foxes.output.SliceData.get_states_data_yz", "foxes.output.StateTurbineMap", "foxes.output.StateTurbineMap.__init__", "foxes.output.StateTurbineMap.plot_map", "foxes.output.StateTurbineTable", "foxes.output.StateTurbineTable.__init__", "foxes.output.StateTurbineTable.get_dataset", "foxes.output.StatesRosePlotOutput", "foxes.output.StatesRosePlotOutput.__init__", "foxes.output.TurbineTypeCurves", "foxes.output.TurbineTypeCurves.__init__", "foxes.output.TurbineTypeCurves.plot_curves", "foxes.output.flow_plots_2d.get_fig", "foxes.utils.DataBook", "foxes.utils.DataBook.__init__", "foxes.utils.DataBook.add_data_package", "foxes.utils.DataBook.add_data_package_file", "foxes.utils.DataBook.add_file", "foxes.utils.DataBook.add_files", "foxes.utils.DataBook.get_file_path", "foxes.utils.DataBook.toc", "foxes.utils.Dict", "foxes.utils.Dict.__getitem__", "foxes.utils.Dict.__init__", "foxes.utils.Dict.from_yaml", "foxes.utils.Dict.get_item", "foxes.utils.Dict.pop_item", "foxes.utils.FDict", "foxes.utils.FDict.__contains__", "foxes.utils.FDict.__getitem__", "foxes.utils.FDict.__init__", "foxes.utils.FDict.add_factory", "foxes.utils.FDict.add_k_factory", "foxes.utils.FDict.get_item", "foxes.utils.Factory", "foxes.utils.Factory.__init__", "foxes.utils.Factory.__str__", "foxes.utils.Factory.check_match", "foxes.utils.Factory.construct", "foxes.utils.Factory.get_examples", "foxes.utils.Factory.name_prefix", "foxes.utils.Factory.name_suffix", "foxes.utils.Factory.variables", "foxes.utils.PandasFileHelper", "foxes.utils.PandasFileHelper.DATA_FILE_FORMATS", "foxes.utils.PandasFileHelper.DEFAULT_FORMAT_DICT", "foxes.utils.PandasFileHelper.DEFAULT_READING_PARAMETERS", "foxes.utils.PandasFileHelper.DEFAULT_WRITING_PARAMETERS", "foxes.utils.PandasFileHelper.read_file", "foxes.utils.PandasFileHelper.write_file", "foxes.utils.TabWindroseAxes", "foxes.utils.TabWindroseAxes.ArtistList", "foxes.utils.TabWindroseAxes.ArtistList.__class_getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__getitem__", "foxes.utils.TabWindroseAxes.ArtistList.__init__", "foxes.utils.TabWindroseAxes.ArtistList.__repr__", "foxes.utils.TabWindroseAxes.ArtistList.__subclasshook__", "foxes.utils.TabWindroseAxes.ArtistList.count", "foxes.utils.TabWindroseAxes.ArtistList.index", "foxes.utils.TabWindroseAxes.InvertedPolarTransform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.INVALID_NON_AFFINE", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__add__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__array__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__init_subclass__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__str__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.__sub__", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.contains_branch_seperately", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.depth", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.frozen", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.get_matrix", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.input_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.invalidate", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.inverted", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.is_separable", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.output_dims", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.pass_through", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.set_children", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_angles", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_bbox", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.InvertedPolarTransform.transform_point", "foxes.utils.TabWindroseAxes.PolarAffine", "foxes.utils.TabWindroseAxes.PolarAffine.__array__", "foxes.utils.TabWindroseAxes.PolarAffine.__eq__", "foxes.utils.TabWindroseAxes.PolarAffine.__init__", "foxes.utils.TabWindroseAxes.PolarAffine.__str__", "foxes.utils.TabWindroseAxes.PolarAffine.frozen", "foxes.utils.TabWindroseAxes.PolarAffine.get_affine", "foxes.utils.TabWindroseAxes.PolarAffine.get_matrix", "foxes.utils.TabWindroseAxes.PolarAffine.has_inverse", "foxes.utils.TabWindroseAxes.PolarAffine.input_dims", "foxes.utils.TabWindroseAxes.PolarAffine.inverted", "foxes.utils.TabWindroseAxes.PolarAffine.is_affine", "foxes.utils.TabWindroseAxes.PolarAffine.is_separable", "foxes.utils.TabWindroseAxes.PolarAffine.output_dims", "foxes.utils.TabWindroseAxes.PolarAffine.to_values", "foxes.utils.TabWindroseAxes.PolarAffine.transform", "foxes.utils.TabWindroseAxes.PolarAffine.transform_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_affine", "foxes.utils.TabWindroseAxes.PolarAffine.transform_path_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform", "foxes.utils.TabWindroseAxes.PolarTransform.__init__", "foxes.utils.TabWindroseAxes.PolarTransform.__str__", "foxes.utils.TabWindroseAxes.PolarTransform.has_inverse", "foxes.utils.TabWindroseAxes.PolarTransform.input_dims", "foxes.utils.TabWindroseAxes.PolarTransform.inverted", "foxes.utils.TabWindroseAxes.PolarTransform.output_dims", "foxes.utils.TabWindroseAxes.PolarTransform.transform_non_affine", "foxes.utils.TabWindroseAxes.PolarTransform.transform_path_non_affine", "foxes.utils.TabWindroseAxes.RadialLocator", "foxes.utils.TabWindroseAxes.RadialLocator.MAXTICKS", "foxes.utils.TabWindroseAxes.RadialLocator.__call__", "foxes.utils.TabWindroseAxes.RadialLocator.__init__", "foxes.utils.TabWindroseAxes.RadialLocator.axis", "foxes.utils.TabWindroseAxes.RadialLocator.create_dummy_axis", "foxes.utils.TabWindroseAxes.RadialLocator.nonsingular", "foxes.utils.TabWindroseAxes.RadialLocator.raise_if_exceeds", "foxes.utils.TabWindroseAxes.RadialLocator.set_axis", "foxes.utils.TabWindroseAxes.RadialLocator.set_params", "foxes.utils.TabWindroseAxes.RadialLocator.tick_values", "foxes.utils.TabWindroseAxes.RadialLocator.view_limits", "foxes.utils.TabWindroseAxes.ThetaFormatter", "foxes.utils.TabWindroseAxes.ThetaFormatter.__call__", "foxes.utils.TabWindroseAxes.ThetaFormatter.fix_minus", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_data_short", "foxes.utils.TabWindroseAxes.ThetaFormatter.format_ticks", "foxes.utils.TabWindroseAxes.ThetaFormatter.get_offset", "foxes.utils.TabWindroseAxes.ThetaFormatter.locs", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_axis", "foxes.utils.TabWindroseAxes.ThetaFormatter.set_locs", "foxes.utils.TabWindroseAxes.ThetaLocator", "foxes.utils.TabWindroseAxes.ThetaLocator.__call__", "foxes.utils.TabWindroseAxes.ThetaLocator.__init__", "foxes.utils.TabWindroseAxes.ThetaLocator.nonsingular", "foxes.utils.TabWindroseAxes.ThetaLocator.set_axis", "foxes.utils.TabWindroseAxes.ThetaLocator.view_limits", "foxes.utils.TabWindroseAxes.__init__", "foxes.utils.TabWindroseAxes.__init_subclass__", "foxes.utils.TabWindroseAxes.__repr__", "foxes.utils.TabWindroseAxes.__str__", "foxes.utils.TabWindroseAxes.acorr", "foxes.utils.TabWindroseAxes.add_artist", "foxes.utils.TabWindroseAxes.add_callback", "foxes.utils.TabWindroseAxes.add_child_axes", "foxes.utils.TabWindroseAxes.add_collection", "foxes.utils.TabWindroseAxes.add_container", "foxes.utils.TabWindroseAxes.add_image", "foxes.utils.TabWindroseAxes.add_line", "foxes.utils.TabWindroseAxes.add_patch", "foxes.utils.TabWindroseAxes.add_table", "foxes.utils.TabWindroseAxes.angle_spectrum", "foxes.utils.TabWindroseAxes.annotate", "foxes.utils.TabWindroseAxes.apply_aspect", "foxes.utils.TabWindroseAxes.arrow", "foxes.utils.TabWindroseAxes.artists", "foxes.utils.TabWindroseAxes.autoscale", "foxes.utils.TabWindroseAxes.autoscale_view", "foxes.utils.TabWindroseAxes.axes", "foxes.utils.TabWindroseAxes.axhline", "foxes.utils.TabWindroseAxes.axhspan", "foxes.utils.TabWindroseAxes.axis", "foxes.utils.TabWindroseAxes.axline", "foxes.utils.TabWindroseAxes.axvline", "foxes.utils.TabWindroseAxes.axvspan", "foxes.utils.TabWindroseAxes.bar", "foxes.utils.TabWindroseAxes.bar_label", "foxes.utils.TabWindroseAxes.barbs", "foxes.utils.TabWindroseAxes.barh", "foxes.utils.TabWindroseAxes.box", "foxes.utils.TabWindroseAxes.boxplot", "foxes.utils.TabWindroseAxes.broken_barh", "foxes.utils.TabWindroseAxes.bxp", "foxes.utils.TabWindroseAxes.can_pan", "foxes.utils.TabWindroseAxes.can_zoom", "foxes.utils.TabWindroseAxes.cla", "foxes.utils.TabWindroseAxes.clabel", "foxes.utils.TabWindroseAxes.clear", "foxes.utils.TabWindroseAxes.cohere", "foxes.utils.TabWindroseAxes.collections", "foxes.utils.TabWindroseAxes.contains", "foxes.utils.TabWindroseAxes.contains_point", "foxes.utils.TabWindroseAxes.contour", "foxes.utils.TabWindroseAxes.contourf", "foxes.utils.TabWindroseAxes.convert_xunits", "foxes.utils.TabWindroseAxes.convert_yunits", "foxes.utils.TabWindroseAxes.csd", "foxes.utils.TabWindroseAxes.drag_pan", "foxes.utils.TabWindroseAxes.draw", "foxes.utils.TabWindroseAxes.draw_artist", "foxes.utils.TabWindroseAxes.ecdf", "foxes.utils.TabWindroseAxes.end_pan", "foxes.utils.TabWindroseAxes.errorbar", "foxes.utils.TabWindroseAxes.eventplot", "foxes.utils.TabWindroseAxes.fill", "foxes.utils.TabWindroseAxes.fill_between", "foxes.utils.TabWindroseAxes.fill_betweenx", "foxes.utils.TabWindroseAxes.findobj", "foxes.utils.TabWindroseAxes.format_coord", "foxes.utils.TabWindroseAxes.format_cursor_data", "foxes.utils.TabWindroseAxes.format_xdata", "foxes.utils.TabWindroseAxes.format_ydata", "foxes.utils.TabWindroseAxes.from_ax", "foxes.utils.TabWindroseAxes.get_adjustable", "foxes.utils.TabWindroseAxes.get_agg_filter", "foxes.utils.TabWindroseAxes.get_alpha", "foxes.utils.TabWindroseAxes.get_anchor", "foxes.utils.TabWindroseAxes.get_animated", "foxes.utils.TabWindroseAxes.get_aspect", "foxes.utils.TabWindroseAxes.get_autoscale_on", "foxes.utils.TabWindroseAxes.get_autoscalex_on", "foxes.utils.TabWindroseAxes.get_autoscaley_on", "foxes.utils.TabWindroseAxes.get_axes_locator", "foxes.utils.TabWindroseAxes.get_axisbelow", "foxes.utils.TabWindroseAxes.get_box_aspect", "foxes.utils.TabWindroseAxes.get_children", "foxes.utils.TabWindroseAxes.get_clip_box", "foxes.utils.TabWindroseAxes.get_clip_on", "foxes.utils.TabWindroseAxes.get_clip_path", "foxes.utils.TabWindroseAxes.get_cursor_data", "foxes.utils.TabWindroseAxes.get_data_ratio", "foxes.utils.TabWindroseAxes.get_default_bbox_extra_artists", "foxes.utils.TabWindroseAxes.get_facecolor", "foxes.utils.TabWindroseAxes.get_fc", "foxes.utils.TabWindroseAxes.get_figure", "foxes.utils.TabWindroseAxes.get_forward_navigation_events", "foxes.utils.TabWindroseAxes.get_frame_on", "foxes.utils.TabWindroseAxes.get_gid", "foxes.utils.TabWindroseAxes.get_gridspec", "foxes.utils.TabWindroseAxes.get_images", "foxes.utils.TabWindroseAxes.get_in_layout", "foxes.utils.TabWindroseAxes.get_label", "foxes.utils.TabWindroseAxes.get_legend", "foxes.utils.TabWindroseAxes.get_legend_handles_labels", "foxes.utils.TabWindroseAxes.get_lines", "foxes.utils.TabWindroseAxes.get_mouseover", "foxes.utils.TabWindroseAxes.get_navigate", "foxes.utils.TabWindroseAxes.get_navigate_mode", "foxes.utils.TabWindroseAxes.get_path_effects", "foxes.utils.TabWindroseAxes.get_picker", "foxes.utils.TabWindroseAxes.get_position", "foxes.utils.TabWindroseAxes.get_rasterization_zorder", "foxes.utils.TabWindroseAxes.get_rasterized", "foxes.utils.TabWindroseAxes.get_rlabel_position", "foxes.utils.TabWindroseAxes.get_rmax", "foxes.utils.TabWindroseAxes.get_rmin", "foxes.utils.TabWindroseAxes.get_rorigin", "foxes.utils.TabWindroseAxes.get_rsign", "foxes.utils.TabWindroseAxes.get_shared_x_axes", "foxes.utils.TabWindroseAxes.get_shared_y_axes", "foxes.utils.TabWindroseAxes.get_sketch_params", "foxes.utils.TabWindroseAxes.get_snap", "foxes.utils.TabWindroseAxes.get_subplotspec", "foxes.utils.TabWindroseAxes.get_theta_direction", "foxes.utils.TabWindroseAxes.get_theta_offset", "foxes.utils.TabWindroseAxes.get_thetamax", "foxes.utils.TabWindroseAxes.get_thetamin", "foxes.utils.TabWindroseAxes.get_tightbbox", "foxes.utils.TabWindroseAxes.get_title", "foxes.utils.TabWindroseAxes.get_transform", "foxes.utils.TabWindroseAxes.get_transformed_clip_path_and_affine", "foxes.utils.TabWindroseAxes.get_url", "foxes.utils.TabWindroseAxes.get_visible", "foxes.utils.TabWindroseAxes.get_window_extent", "foxes.utils.TabWindroseAxes.get_xaxis", "foxes.utils.TabWindroseAxes.get_xaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_xaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_xaxis_transform", "foxes.utils.TabWindroseAxes.get_xbound", "foxes.utils.TabWindroseAxes.get_xgridlines", "foxes.utils.TabWindroseAxes.get_xlabel", "foxes.utils.TabWindroseAxes.get_xlim", "foxes.utils.TabWindroseAxes.get_xmajorticklabels", "foxes.utils.TabWindroseAxes.get_xmargin", "foxes.utils.TabWindroseAxes.get_xminorticklabels", "foxes.utils.TabWindroseAxes.get_xscale", "foxes.utils.TabWindroseAxes.get_xticklabels", "foxes.utils.TabWindroseAxes.get_xticklines", "foxes.utils.TabWindroseAxes.get_xticks", "foxes.utils.TabWindroseAxes.get_yaxis", "foxes.utils.TabWindroseAxes.get_yaxis_text1_transform", "foxes.utils.TabWindroseAxes.get_yaxis_text2_transform", "foxes.utils.TabWindroseAxes.get_yaxis_transform", "foxes.utils.TabWindroseAxes.get_ybound", "foxes.utils.TabWindroseAxes.get_ygridlines", "foxes.utils.TabWindroseAxes.get_ylabel", "foxes.utils.TabWindroseAxes.get_ylim", "foxes.utils.TabWindroseAxes.get_ymajorticklabels", "foxes.utils.TabWindroseAxes.get_ymargin", "foxes.utils.TabWindroseAxes.get_yminorticklabels", "foxes.utils.TabWindroseAxes.get_yscale", "foxes.utils.TabWindroseAxes.get_yticklabels", "foxes.utils.TabWindroseAxes.get_yticklines", "foxes.utils.TabWindroseAxes.get_yticks", "foxes.utils.TabWindroseAxes.get_zorder", "foxes.utils.TabWindroseAxes.grid", "foxes.utils.TabWindroseAxes.has_data", "foxes.utils.TabWindroseAxes.have_units", "foxes.utils.TabWindroseAxes.hexbin", "foxes.utils.TabWindroseAxes.hist", "foxes.utils.TabWindroseAxes.hist2d", "foxes.utils.TabWindroseAxes.hlines", "foxes.utils.TabWindroseAxes.images", "foxes.utils.TabWindroseAxes.imshow", "foxes.utils.TabWindroseAxes.in_axes", "foxes.utils.TabWindroseAxes.indicate_inset", "foxes.utils.TabWindroseAxes.indicate_inset_zoom", "foxes.utils.TabWindroseAxes.inset_axes", "foxes.utils.TabWindroseAxes.invert_xaxis", "foxes.utils.TabWindroseAxes.invert_yaxis", "foxes.utils.TabWindroseAxes.is_transform_set", "foxes.utils.TabWindroseAxes.label_outer", "foxes.utils.TabWindroseAxes.legend", "foxes.utils.TabWindroseAxes.lines", "foxes.utils.TabWindroseAxes.locator_params", "foxes.utils.TabWindroseAxes.loglog", "foxes.utils.TabWindroseAxes.magnitude_spectrum", "foxes.utils.TabWindroseAxes.margins", "foxes.utils.TabWindroseAxes.matshow", "foxes.utils.TabWindroseAxes.minorticks_off", "foxes.utils.TabWindroseAxes.minorticks_on", "foxes.utils.TabWindroseAxes.mouseover", "foxes.utils.TabWindroseAxes.name", "foxes.utils.TabWindroseAxes.patches", "foxes.utils.TabWindroseAxes.pchanged", "foxes.utils.TabWindroseAxes.pcolor", "foxes.utils.TabWindroseAxes.pcolorfast", "foxes.utils.TabWindroseAxes.pcolormesh", "foxes.utils.TabWindroseAxes.phase_spectrum", "foxes.utils.TabWindroseAxes.pick", "foxes.utils.TabWindroseAxes.pickable", "foxes.utils.TabWindroseAxes.pie", "foxes.utils.TabWindroseAxes.plot", "foxes.utils.TabWindroseAxes.plot_date", "foxes.utils.TabWindroseAxes.properties", "foxes.utils.TabWindroseAxes.psd", "foxes.utils.TabWindroseAxes.quiver", "foxes.utils.TabWindroseAxes.quiverkey", "foxes.utils.TabWindroseAxes.redraw_in_frame", "foxes.utils.TabWindroseAxes.relim", "foxes.utils.TabWindroseAxes.remove", "foxes.utils.TabWindroseAxes.remove_callback", "foxes.utils.TabWindroseAxes.reset_position", "foxes.utils.TabWindroseAxes.scatter", "foxes.utils.TabWindroseAxes.secondary_xaxis", "foxes.utils.TabWindroseAxes.secondary_yaxis", "foxes.utils.TabWindroseAxes.semilogx", "foxes.utils.TabWindroseAxes.semilogy", "foxes.utils.TabWindroseAxes.set", "foxes.utils.TabWindroseAxes.set_adjustable", "foxes.utils.TabWindroseAxes.set_agg_filter", "foxes.utils.TabWindroseAxes.set_alpha", "foxes.utils.TabWindroseAxes.set_anchor", "foxes.utils.TabWindroseAxes.set_animated", "foxes.utils.TabWindroseAxes.set_aspect", "foxes.utils.TabWindroseAxes.set_autoscale_on", "foxes.utils.TabWindroseAxes.set_autoscalex_on", "foxes.utils.TabWindroseAxes.set_autoscaley_on", "foxes.utils.TabWindroseAxes.set_axes_locator", "foxes.utils.TabWindroseAxes.set_axis_off", "foxes.utils.TabWindroseAxes.set_axis_on", "foxes.utils.TabWindroseAxes.set_axisbelow", "foxes.utils.TabWindroseAxes.set_box_aspect", "foxes.utils.TabWindroseAxes.set_clip_box", "foxes.utils.TabWindroseAxes.set_clip_on", "foxes.utils.TabWindroseAxes.set_clip_path", "foxes.utils.TabWindroseAxes.set_facecolor", "foxes.utils.TabWindroseAxes.set_fc", "foxes.utils.TabWindroseAxes.set_figure", "foxes.utils.TabWindroseAxes.set_forward_navigation_events", "foxes.utils.TabWindroseAxes.set_frame_on", "foxes.utils.TabWindroseAxes.set_gid", "foxes.utils.TabWindroseAxes.set_in_layout", "foxes.utils.TabWindroseAxes.set_label", "foxes.utils.TabWindroseAxes.set_legend", "foxes.utils.TabWindroseAxes.set_mouseover", "foxes.utils.TabWindroseAxes.set_navigate", "foxes.utils.TabWindroseAxes.set_navigate_mode", "foxes.utils.TabWindroseAxes.set_path_effects", "foxes.utils.TabWindroseAxes.set_picker", "foxes.utils.TabWindroseAxes.set_position", "foxes.utils.TabWindroseAxes.set_prop_cycle", "foxes.utils.TabWindroseAxes.set_radii_angle", "foxes.utils.TabWindroseAxes.set_rasterization_zorder", "foxes.utils.TabWindroseAxes.set_rasterized", "foxes.utils.TabWindroseAxes.set_rgrids", "foxes.utils.TabWindroseAxes.set_rlabel_position", "foxes.utils.TabWindroseAxes.set_rlim", "foxes.utils.TabWindroseAxes.set_rmax", "foxes.utils.TabWindroseAxes.set_rmin", "foxes.utils.TabWindroseAxes.set_rorigin", "foxes.utils.TabWindroseAxes.set_rscale", "foxes.utils.TabWindroseAxes.set_rticks", "foxes.utils.TabWindroseAxes.set_sketch_params", "foxes.utils.TabWindroseAxes.set_snap", "foxes.utils.TabWindroseAxes.set_subplotspec", "foxes.utils.TabWindroseAxes.set_theta_direction", "foxes.utils.TabWindroseAxes.set_theta_offset", "foxes.utils.TabWindroseAxes.set_theta_zero_location", "foxes.utils.TabWindroseAxes.set_thetagrids", "foxes.utils.TabWindroseAxes.set_thetalim", "foxes.utils.TabWindroseAxes.set_thetamax", "foxes.utils.TabWindroseAxes.set_thetamin", "foxes.utils.TabWindroseAxes.set_title", "foxes.utils.TabWindroseAxes.set_transform", "foxes.utils.TabWindroseAxes.set_url", "foxes.utils.TabWindroseAxes.set_visible", "foxes.utils.TabWindroseAxes.set_xbound", "foxes.utils.TabWindroseAxes.set_xlabel", "foxes.utils.TabWindroseAxes.set_xlim", "foxes.utils.TabWindroseAxes.set_xmargin", "foxes.utils.TabWindroseAxes.set_xscale", "foxes.utils.TabWindroseAxes.set_xticklabels", "foxes.utils.TabWindroseAxes.set_xticks", "foxes.utils.TabWindroseAxes.set_ybound", "foxes.utils.TabWindroseAxes.set_ylabel", "foxes.utils.TabWindroseAxes.set_ylim", "foxes.utils.TabWindroseAxes.set_ymargin", "foxes.utils.TabWindroseAxes.set_yscale", "foxes.utils.TabWindroseAxes.set_yticklabels", "foxes.utils.TabWindroseAxes.set_yticks", "foxes.utils.TabWindroseAxes.set_zorder", "foxes.utils.TabWindroseAxes.sharex", "foxes.utils.TabWindroseAxes.sharey", "foxes.utils.TabWindroseAxes.specgram", "foxes.utils.TabWindroseAxes.spy", "foxes.utils.TabWindroseAxes.stackplot", "foxes.utils.TabWindroseAxes.stairs", "foxes.utils.TabWindroseAxes.stale", "foxes.utils.TabWindroseAxes.start_pan", "foxes.utils.TabWindroseAxes.stem", "foxes.utils.TabWindroseAxes.step", "foxes.utils.TabWindroseAxes.sticky_edges", "foxes.utils.TabWindroseAxes.streamplot", "foxes.utils.TabWindroseAxes.table", "foxes.utils.TabWindroseAxes.tables", "foxes.utils.TabWindroseAxes.text", "foxes.utils.TabWindroseAxes.texts", "foxes.utils.TabWindroseAxes.tick_params", "foxes.utils.TabWindroseAxes.ticklabel_format", "foxes.utils.TabWindroseAxes.tricontour", "foxes.utils.TabWindroseAxes.tricontourf", "foxes.utils.TabWindroseAxes.tripcolor", "foxes.utils.TabWindroseAxes.triplot", "foxes.utils.TabWindroseAxes.twinx", "foxes.utils.TabWindroseAxes.twiny", "foxes.utils.TabWindroseAxes.update", "foxes.utils.TabWindroseAxes.update_datalim", "foxes.utils.TabWindroseAxes.update_from", "foxes.utils.TabWindroseAxes.use_sticky_edges", "foxes.utils.TabWindroseAxes.viewLim", "foxes.utils.TabWindroseAxes.violin", "foxes.utils.TabWindroseAxes.violinplot", "foxes.utils.TabWindroseAxes.vlines", "foxes.utils.TabWindroseAxes.xaxis_date", "foxes.utils.TabWindroseAxes.xaxis_inverted", "foxes.utils.TabWindroseAxes.xcorr", "foxes.utils.TabWindroseAxes.yaxis_date", "foxes.utils.TabWindroseAxes.yaxis_inverted", "foxes.utils.TabWindroseAxes.zorder", "foxes.utils.WakeKFactory", "foxes.utils.WakeKFactory.__init__", "foxes.utils.WakeKFactory.__str__", "foxes.utils.abl.neutral.calc_ws", "foxes.utils.abl.neutral.logz", "foxes.utils.abl.neutral.ustar", "foxes.utils.abl.sheared.calc_ws", "foxes.utils.abl.stable.calc_ws", "foxes.utils.abl.stable.logz", "foxes.utils.abl.stable.psi", "foxes.utils.abl.stable.ustar", "foxes.utils.abl.unstable.calc_ws", "foxes.utils.abl.unstable.psi", "foxes.utils.abl.unstable.ustar", "foxes.utils.all_subclasses", "foxes.utils.cubic_roots", "foxes.utils.delta_wd", "foxes.utils.exec_python", "foxes.utils.geom2d.AreaGeometry", "foxes.utils.geom2d.AreaGeometry.add_to_figure", "foxes.utils.geom2d.AreaGeometry.inverse", "foxes.utils.geom2d.AreaGeometry.p_max", "foxes.utils.geom2d.AreaGeometry.p_min", "foxes.utils.geom2d.AreaGeometry.points_distance", "foxes.utils.geom2d.AreaGeometry.points_inside", "foxes.utils.geom2d.AreaIntersection", "foxes.utils.geom2d.AreaIntersection.__new__", "foxes.utils.geom2d.AreaUnion", "foxes.utils.geom2d.AreaUnion.__init__", "foxes.utils.geom2d.AreaUnion.add_to_figure", "foxes.utils.geom2d.AreaUnion.inverse", "foxes.utils.geom2d.AreaUnion.p_max", "foxes.utils.geom2d.AreaUnion.p_min", "foxes.utils.geom2d.AreaUnion.points_distance", "foxes.utils.geom2d.AreaUnion.points_inside", "foxes.utils.geom2d.Circle", "foxes.utils.geom2d.Circle.__init__", "foxes.utils.geom2d.Circle.add_to_figure", "foxes.utils.geom2d.Circle.p_max", "foxes.utils.geom2d.Circle.p_min", "foxes.utils.geom2d.Circle.points_distance", "foxes.utils.geom2d.Circle.points_inside", "foxes.utils.geom2d.ClosedPolygon", "foxes.utils.geom2d.ClosedPolygon.__init__", "foxes.utils.geom2d.ClosedPolygon.add_to_figure", "foxes.utils.geom2d.ClosedPolygon.p_max", "foxes.utils.geom2d.ClosedPolygon.p_min", "foxes.utils.geom2d.ClosedPolygon.points_distance", "foxes.utils.geom2d.ClosedPolygon.points_inside", "foxes.utils.geom2d.HalfPlane", "foxes.utils.geom2d.HalfPlane.__init__", "foxes.utils.geom2d.HalfPlane.add_to_figure", "foxes.utils.geom2d.HalfPlane.inverse", "foxes.utils.geom2d.HalfPlane.p_max", "foxes.utils.geom2d.HalfPlane.p_min", "foxes.utils.geom2d.HalfPlane.points_distance", "foxes.utils.geom2d.HalfPlane.points_inside", "foxes.utils.geom2d.InvertedAreaGeometry", "foxes.utils.geom2d.InvertedAreaGeometry.__init__", "foxes.utils.geom2d.InvertedAreaGeometry.add_to_figure", "foxes.utils.geom2d.InvertedAreaGeometry.inverse", "foxes.utils.geom2d.InvertedAreaGeometry.p_max", "foxes.utils.geom2d.InvertedAreaGeometry.p_min", "foxes.utils.geom2d.InvertedAreaGeometry.points_distance", "foxes.utils.geom2d.InvertedAreaGeometry.points_inside", "foxes.utils.import_module", "foxes.utils.load_module", "foxes.utils.print_mem", "foxes.utils.random_xy_square", "foxes.utils.read_shp", "foxes.utils.read_shp_polygons", "foxes.utils.read_tab_file", "foxes.utils.shp2csv", "foxes.utils.shp2geom2d", "foxes.utils.sqrt_reg", "foxes.utils.two_circles.area", "foxes.utils.two_circles.calc_area", "foxes.utils.uv2wd", "foxes.utils.wd2uv", "foxes.utils.wd2wdvec", "foxes.utils.wdvec2wd", "foxes.utils.write_nc", "foxes.variables.AMB_CAP", "foxes.variables.AMB_CT", "foxes.variables.AMB_P", "foxes.variables.AMB_REWS", "foxes.variables.AMB_REWS2", "foxes.variables.AMB_REWS3", "foxes.variables.AMB_RHO", "foxes.variables.AMB_T", "foxes.variables.AMB_TI", "foxes.variables.AMB_WD", "foxes.variables.AMB_WS", "foxes.variables.AMB_YAW", "foxes.variables.AMB_YAWM", "foxes.variables.AMB_YLD", "foxes.variables.CAP", "foxes.variables.CT", "foxes.variables.D", "foxes.variables.DEFAULT_DIGITS", "foxes.variables.EFF", "foxes.variables.H", "foxes.variables.K", "foxes.variables.KB", "foxes.variables.KTI", "foxes.variables.MAX_P", "foxes.variables.MOL", "foxes.variables.ORDER", "foxes.variables.ORDER_INV", "foxes.variables.ORDER_SSEL", "foxes.variables.P", "foxes.variables.PA_ALPHA", "foxes.variables.PA_BETA", "foxes.variables.REWS", "foxes.variables.REWS2", "foxes.variables.REWS3", "foxes.variables.RHO", "foxes.variables.SHEAR", "foxes.variables.T", "foxes.variables.TI", "foxes.variables.TXYH", "foxes.variables.WD", "foxes.variables.WEIGHT", "foxes.variables.WS", "foxes.variables.X", "foxes.variables.Y", "foxes.variables.YAW", "foxes.variables.YAWM", "foxes.variables.YLD", "foxes.variables.Z0", "foxes.variables.amb2var", "foxes.variables.get_default_digits", "foxes.variables.var2amb", "API", "foxes.algorithms", "Downwind algorithm", "Iterative algorithm", "Sequential algorithm", "foxes.config", "foxes.constants", "foxes.core", "foxes.data", "foxes.engines", "foxes", "foxes.input", "foxes.models", "foxes.output", "foxes.utils", "foxes.utils.abl.neutral", "foxes.variables", "foxes.models.wake_models", "Command line applications", "Citation", "Examples", "Welcome to FOXES", "Inputs", "Installation", "Models", "Blockage modelling 2", "Blockage modelling 1", "Static data", "Dynamic Wakes 1", "Heterogeneous flow", "The model book", "Multi-height wind data", "Parallelization", "Partial wakes verification", "Power mask", "Rotor model visualizations", "Wind sector management", "Dynamic Wakes 3", "Single row of turbines", "Dynamic Wakes 2", "Timeseries data", "Wind rose data", "Yawed rotor wakes", "Optimization", "Overview - how to setup foxes", "Testing"], "titleterms": {"0": 0, "1": [0, 1718, 1720], "10mw": 1719, "15mw": 1719, "2": [0, 1717, 1731], "3": [0, 1729], "4": 0, "4464": 1719, "5": 0, "5mw": 1719, "6": 0, "7": 0, "7d5mw": 1719, "8": 0, "The": 1722, "abl": [1706, 1707], "abl_states_6000": 1719, "acknowledg": 1713, "algorithm": [1693, 1694, 1695, 1696, 1724], "alpha": 0, "also": [1242, 1250, 1251, 1252, 1258, 1259, 1260, 1261, 1262, 1263, 1267, 1269, 1271, 1285, 1294, 1295, 1298, 1302, 1305, 1312, 1313, 1318, 1338, 1356, 1362, 1367, 1370, 1372, 1382, 1385, 1387, 1397, 1398, 1399, 1400, 1402, 1407, 1408, 1415, 1417, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1440, 1442, 1448, 1451, 1453, 1460, 1461, 1468, 1474, 1475, 1479, 1480, 1484, 1486, 1498, 1506, 1507, 1508, 1513, 1514, 1515, 1523, 1529, 1550, 1551, 1552], "ambient": [1714, 1719], "api": 1692, "applic": 1710, "attribut": [1, 17, 27, 53, 59, 63, 67, 72, 76, 81, 87, 92, 102, 157, 187, 198, 213, 225, 237, 244, 262, 276, 289, 296, 323, 332, 343, 351, 367, 388, 416, 427, 432, 453, 477, 485, 496, 530, 537, 540, 544, 553, 557, 566, 572, 581, 589, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 667, 676, 692, 702, 714, 722, 731, 735, 739, 743, 747, 754, 758, 764, 771, 776, 784, 791, 801, 812, 829, 837, 845, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1009, 1018, 1045, 1051, 1054, 1064, 1067, 1072, 1077, 1085, 1088, 1093, 1097, 1105, 1111, 1118, 1127, 1559, 1586, 1594, 1601, 1608], "avail": 1724, "axial_induct": 1704, "background": 1720, "block": 1724, "blockag": [1717, 1718], "book": 1722, "centrerotor": 1727, "citat": 1711, "class": 1134, "command": 1710, "comparison": 1717, "conda": 1715, "config": 1697, "constant": 1698, "content": 1713, "contribut": 1713, "core": 1699, "creat": 1703, "csv": 1719, "curv": 1719, "d126": 1719, "d164": 1719, "d178d3": 1719, "d240": 1719, "data": [1700, 1719, 1723, 1732, 1733], "default": 1724, "depend": 1715, "develop": 1715, "discourag": [1363, 1378, 1502, 1511, 1518, 1535], "doi": 1711, "downwind": 1694, "dtu": 1719, "dynam": [1720, 1729, 1731], "engin": [1701, 1724], "environ": 1715, "exampl": [391, 522, 523, 712, 1252, 1258, 1261, 1262, 1263, 1292, 1406, 1413, 1443, 1444, 1480, 1508, 1515, 1531, 1535, 1537, 1712], "farm": [1714, 1718, 1719], "farm_control": 1704, "farm_layout": 1703, "farm_model": 1704, "file": 1719, "flow": 1721, "flow_plots_2d": 1705, "fox": [1693, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1713, 1736], "foxes_windio": 1710, "foxes_yaml": 1710, "frame": 1716, "geom2d": 1706, "grid100": 1727, "grid16": 1727, "grid25": 1727, "grid25_raw": 1727, "grid36": 1727, "grid4": 1727, "grid400": 1727, "grid9": 1727, "gridrotor": 1727, "ground": 1716, "ground_model": 1704, "guid": 1715, "gz": 1719, "h100": 1719, "h119": 1719, "h150": 1719, "h90": 1719, "height": 1723, "heterogen": [1720, 1721], "hint": [1424, 1426], "histori": 0, "homogen": 1731, "horizont": 1731, "how": 1736, "iea": 1719, "induct": [1709, 1717], "inflow": 1714, "input": [1703, 1714], "instal": 1715, "iter": 1695, "iwt": 1719, "journal": 1711, "layout": [1714, 1719], "level10": 1727, "level2": 1727, "level20": 1727, "level3": 1727, "level5": 1727, "level5_raw": 1727, "levelrotor": 1727, "licens": 1713, "line": 1710, "manag": 1728, "manual": 1724, "mask": 1726, "member": [1, 17, 27, 46, 49, 53, 59, 63, 67, 72, 76, 81, 85, 87, 92, 96, 101, 111, 157, 185, 187, 195, 198, 213, 222, 225, 237, 244, 252, 253, 260, 262, 276, 283, 289, 296, 306, 314, 323, 327, 329, 332, 339, 343, 351, 358, 364, 367, 375, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 530, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1009, 1018, 1038, 1045, 1051, 1054, 1058, 1064, 1067, 1072, 1077, 1085, 1088, 1091, 1093, 1097, 1105, 1111, 1118, 1127, 1134, 1135, 1143, 1178, 1199, 1208, 1220, 1230, 1559, 1577, 1584, 1586, 1594, 1601, 1608, 1616], "model": [1694, 1695, 1696, 1704, 1709, 1716, 1717, 1718, 1722, 1727], "multi": 1723, "nc": 1719, "neutral": 1707, "note": [540, 801, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 916, 1155, 1218, 1240, 1252, 1253, 1256, 1260, 1267, 1269, 1271, 1285, 1286, 1287, 1289, 1290, 1292, 1293, 1298, 1318, 1364, 1365, 1366, 1370, 1379, 1380, 1381, 1385, 1394, 1398, 1399, 1402, 1416, 1417, 1424, 1426, 1430, 1431, 1432, 1434, 1435, 1442, 1448, 1460, 1464, 1508, 1510, 1512, 1515, 1517, 1519, 1523, 1528, 1529, 1530, 1539, 1540, 1543, 1544, 1555], "nrel": 1719, "optim": 1735, "option": 1715, "other": [1240, 1250, 1258, 1259, 1261, 1262, 1263, 1264, 1266, 1267, 1268, 1269, 1270, 1277, 1281, 1282, 1285, 1289, 1291, 1293, 1294, 1295, 1397, 1398, 1399, 1400, 1402, 1411, 1413, 1415, 1417, 1424, 1425, 1426, 1427, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1484, 1498, 1502, 1507, 1514, 1524, 1526, 1533, 1535, 1537, 1539, 1540, 1552, 1555], "output": 1705, "overview": 1736, "paper": 1711, "parallel": 1724, "paramet": [3, 4, 5, 7, 18, 19, 22, 25, 28, 32, 38, 39, 44, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 62, 65, 66, 69, 70, 71, 73, 74, 77, 78, 79, 82, 83, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 106, 107, 110, 117, 118, 158, 159, 160, 161, 162, 165, 168, 169, 170, 171, 172, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 190, 191, 194, 196, 199, 201, 202, 204, 205, 209, 211, 212, 214, 215, 216, 218, 221, 223, 224, 226, 227, 228, 229, 230, 231, 234, 235, 238, 239, 240, 242, 243, 245, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 261, 265, 266, 267, 269, 272, 274, 275, 277, 278, 279, 280, 281, 282, 284, 285, 288, 290, 292, 293, 294, 297, 298, 300, 301, 303, 304, 308, 309, 310, 311, 313, 315, 316, 317, 318, 322, 324, 325, 326, 330, 331, 333, 335, 338, 340, 342, 344, 345, 346, 347, 348, 349, 350, 352, 353, 360, 361, 362, 363, 365, 366, 368, 369, 372, 376, 377, 378, 379, 380, 381, 382, 385, 387, 389, 390, 395, 397, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 421, 422, 423, 425, 426, 428, 429, 431, 434, 436, 438, 440, 441, 442, 443, 445, 446, 450, 452, 454, 457, 459, 460, 461, 464, 465, 467, 468, 469, 470, 471, 472, 473, 475, 476, 478, 479, 480, 481, 484, 486, 487, 490, 491, 492, 494, 495, 498, 499, 501, 503, 504, 505, 506, 507, 510, 511, 513, 514, 515, 516, 519, 520, 521, 524, 525, 526, 527, 528, 529, 532, 533, 534, 535, 536, 538, 539, 541, 542, 545, 547, 548, 554, 555, 556, 558, 560, 561, 563, 565, 567, 569, 570, 573, 574, 575, 576, 579, 580, 582, 583, 584, 585, 587, 588, 590, 591, 592, 595, 596, 600, 603, 607, 610, 614, 616, 617, 619, 620, 621, 622, 624, 626, 627, 628, 631, 632, 633, 634, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 652, 653, 654, 655, 657, 659, 660, 662, 663, 665, 666, 668, 670, 671, 673, 675, 677, 679, 680, 681, 684, 687, 688, 691, 693, 695, 696, 697, 698, 701, 703, 705, 706, 707, 708, 711, 713, 715, 716, 717, 718, 721, 723, 725, 726, 727, 730, 732, 733, 736, 737, 740, 741, 744, 745, 748, 749, 752, 755, 756, 759, 761, 762, 763, 765, 766, 767, 768, 769, 772, 773, 774, 775, 777, 779, 780, 781, 782, 783, 785, 787, 788, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 802, 804, 805, 806, 807, 810, 811, 813, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 826, 827, 830, 832, 833, 834, 835, 838, 840, 841, 842, 843, 846, 848, 849, 850, 851, 855, 857, 858, 859, 860, 863, 865, 866, 867, 870, 872, 873, 874, 877, 879, 880, 883, 885, 886, 903, 904, 906, 907, 908, 912, 914, 915, 917, 919, 920, 923, 925, 926, 927, 928, 931, 933, 934, 936, 938, 939, 941, 943, 944, 946, 948, 949, 951, 953, 954, 955, 957, 959, 960, 961, 963, 965, 966, 967, 969, 971, 972, 973, 975, 977, 978, 979, 981, 983, 984, 985, 987, 989, 990, 991, 993, 995, 996, 997, 999, 1001, 1002, 1003, 1005, 1006, 1007, 1010, 1011, 1014, 1015, 1016, 1017, 1019, 1020, 1021, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1039, 1040, 1041, 1042, 1043, 1044, 1046, 1047, 1048, 1050, 1052, 1053, 1055, 1056, 1057, 1059, 1060, 1061, 1062, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1086, 1087, 1089, 1090, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1107, 1108, 1109, 1110, 1114, 1115, 1116, 1117, 1119, 1121, 1122, 1123, 1132, 1133, 1135, 1138, 1143, 1149, 1169, 1170, 1171, 1173, 1178, 1181, 1193, 1194, 1195, 1199, 1200, 1206, 1240, 1242, 1250, 1251, 1252, 1253, 1255, 1256, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1275, 1277, 1279, 1281, 1282, 1285, 1286, 1287, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1318, 1339, 1356, 1357, 1366, 1375, 1377, 1381, 1390, 1392, 1394, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1406, 1410, 1411, 1413, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1436, 1438, 1442, 1443, 1444, 1445, 1446, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1460, 1461, 1462, 1463, 1464, 1465, 1467, 1468, 1469, 1470, 1471, 1472, 1474, 1475, 1477, 1478, 1479, 1480, 1482, 1483, 1484, 1485, 1487, 1488, 1489, 1492, 1493, 1497, 1498, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1523, 1524, 1525, 1526, 1528, 1529, 1530, 1532, 1533, 1535, 1537, 1538, 1539, 1540, 1541, 1542, 1545, 1546, 1550, 1551, 1552, 1553, 1555, 1556, 1560, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1578, 1582, 1583, 1585, 1587, 1588, 1592, 1593, 1595, 1596, 1599, 1600, 1602, 1603, 1606, 1607, 1609, 1610, 1614, 1615, 1617, 1618, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1690], "parmet": 1626, "partial": [1716, 1725], "partial_wak": 1704, "path": 1719, "pip": 1715, "point": 1716, "point_model": 1704, "power": [1719, 1726], "prepar": 1715, "profil": 1716, "propag": [1720, 1729, 1731], "public": [1, 17, 27, 46, 49, 53, 59, 63, 67, 72, 76, 81, 85, 87, 92, 96, 101, 111, 157, 185, 187, 195, 198, 213, 222, 225, 237, 244, 252, 253, 260, 262, 276, 283, 289, 296, 306, 314, 323, 327, 329, 332, 339, 343, 351, 358, 364, 367, 375, 379, 384, 386, 388, 391, 393, 394, 396, 398, 399, 400, 404, 405, 406, 416, 427, 430, 432, 447, 449, 451, 453, 466, 468, 477, 485, 496, 512, 517, 530, 537, 540, 543, 544, 550, 552, 553, 557, 562, 564, 566, 572, 578, 581, 586, 589, 593, 599, 606, 613, 618, 623, 630, 636, 641, 651, 656, 661, 664, 667, 672, 674, 676, 686, 692, 702, 712, 714, 722, 731, 735, 739, 743, 747, 751, 754, 758, 764, 771, 776, 784, 791, 801, 809, 812, 819, 822, 829, 837, 845, 853, 854, 862, 869, 876, 882, 888, 911, 916, 922, 930, 935, 940, 945, 950, 956, 962, 968, 974, 980, 986, 992, 998, 1004, 1009, 1018, 1038, 1045, 1051, 1054, 1058, 1064, 1067, 1072, 1077, 1085, 1088, 1091, 1093, 1097, 1105, 1111, 1118, 1127, 1134, 1135, 1143, 1178, 1199, 1208, 1220, 1230, 1559, 1577, 1584, 1586, 1594, 1601, 1608, 1616], "python": 1715, "quick": 1715, "rais": 1538, "recommend": 1724, "refer": [1277, 1285, 1434], "remark": 1724, "requir": 1715, "return": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 24, 26, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 51, 52, 57, 58, 61, 62, 65, 66, 69, 71, 74, 75, 79, 80, 83, 84, 89, 90, 91, 94, 95, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 161, 162, 163, 164, 166, 167, 169, 170, 172, 173, 174, 176, 178, 180, 186, 190, 191, 192, 193, 194, 196, 197, 201, 202, 203, 205, 207, 208, 211, 212, 216, 217, 218, 219, 220, 221, 224, 227, 231, 232, 233, 234, 236, 239, 241, 242, 243, 248, 250, 251, 256, 258, 259, 268, 269, 270, 271, 273, 275, 277, 279, 280, 282, 284, 286, 287, 288, 293, 294, 295, 298, 299, 301, 302, 304, 305, 307, 308, 310, 312, 313, 316, 317, 318, 319, 320, 321, 322, 328, 330, 336, 337, 340, 341, 345, 346, 347, 348, 349, 352, 356, 359, 363, 365, 366, 370, 371, 372, 373, 377, 378, 381, 385, 387, 390, 395, 397, 403, 407, 418, 419, 420, 421, 422, 424, 426, 429, 436, 437, 439, 440, 441, 444, 446, 457, 458, 460, 462, 463, 465, 470, 471, 472, 474, 476, 479, 481, 482, 483, 484, 487, 488, 489, 490, 491, 493, 495, 499, 500, 502, 504, 505, 508, 509, 511, 514, 519, 520, 524, 525, 526, 528, 529, 533, 535, 539, 542, 547, 548, 549, 560, 563, 569, 570, 571, 574, 577, 579, 580, 583, 584, 585, 587, 588, 591, 592, 594, 596, 597, 598, 602, 604, 605, 609, 611, 612, 616, 617, 620, 621, 622, 626, 628, 629, 632, 634, 635, 638, 640, 644, 646, 647, 653, 655, 659, 660, 662, 663, 665, 666, 670, 671, 679, 682, 683, 684, 685, 688, 689, 690, 691, 695, 697, 699, 700, 701, 705, 707, 709, 710, 711, 716, 718, 719, 720, 721, 725, 727, 728, 729, 730, 733, 734, 737, 738, 741, 742, 745, 746, 749, 750, 752, 753, 756, 757, 761, 762, 766, 767, 768, 770, 773, 774, 775, 779, 780, 781, 782, 787, 788, 789, 790, 794, 796, 797, 804, 805, 806, 808, 810, 811, 814, 818, 820, 821, 824, 825, 826, 828, 835, 836, 843, 844, 851, 852, 861, 865, 866, 867, 868, 872, 873, 874, 875, 879, 881, 885, 887, 906, 907, 909, 910, 914, 915, 919, 921, 925, 928, 929, 933, 934, 938, 939, 943, 944, 948, 949, 953, 954, 955, 959, 960, 961, 965, 966, 967, 971, 972, 973, 977, 978, 979, 983, 984, 985, 989, 990, 991, 995, 996, 997, 1001, 1002, 1003, 1007, 1008, 1011, 1012, 1013, 1022, 1023, 1024, 1025, 1026, 1027, 1029, 1030, 1031, 1032, 1034, 1035, 1036, 1037, 1042, 1043, 1044, 1047, 1053, 1060, 1061, 1062, 1063, 1066, 1079, 1080, 1081, 1082, 1083, 1084, 1087, 1090, 1095, 1103, 1104, 1108, 1109, 1110, 1121, 1122, 1123, 1124, 1125, 1126, 1132, 1134, 1169, 1170, 1171, 1173, 1193, 1194, 1195, 1206, 1240, 1242, 1250, 1251, 1253, 1258, 1259, 1260, 1261, 1262, 1263, 1265, 1266, 1267, 1269, 1270, 1271, 1277, 1279, 1285, 1289, 1291, 1292, 1293, 1294, 1295, 1296, 1312, 1339, 1342, 1343, 1344, 1345, 1349, 1356, 1357, 1364, 1365, 1370, 1372, 1375, 1377, 1379, 1380, 1385, 1387, 1390, 1392, 1397, 1398, 1399, 1400, 1402, 1404, 1405, 1406, 1414, 1415, 1416, 1417, 1424, 1425, 1426, 1427, 1430, 1431, 1432, 1434, 1435, 1442, 1443, 1444, 1445, 1446, 1484, 1498, 1502, 1508, 1511, 1515, 1518, 1523, 1524, 1525, 1526, 1529, 1530, 1532, 1533, 1535, 1539, 1540, 1542, 1543, 1544, 1550, 1551, 1552, 1555, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1579, 1580, 1581, 1582, 1583, 1589, 1590, 1591, 1592, 1593, 1597, 1598, 1599, 1600, 1604, 1605, 1606, 1607, 1611, 1612, 1613, 1614, 1615, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1627, 1628, 1629, 1630, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1690], "rose": 1733, "rotor": [1716, 1727, 1734], "rotor_model": 1704, "row": 1730, "runner": 1706, "sector": 1728, "see": [1242, 1250, 1251, 1252, 1258, 1259, 1260, 1261, 1262, 1263, 1267, 1269, 1271, 1285, 1294, 1295, 1298, 1302, 1305, 1312, 1313, 1318, 1338, 1356, 1362, 1367, 1370, 1372, 1382, 1385, 1387, 1397, 1398, 1399, 1400, 1402, 1407, 1408, 1415, 1417, 1423, 1424, 1426, 1427, 1428, 1429, 1431, 1432, 1434, 1435, 1440, 1442, 1448, 1451, 1453, 1460, 1461, 1468, 1474, 1475, 1479, 1480, 1484, 1486, 1498, 1506, 1507, 1508, 1513, 1514, 1515, 1523, 1529, 1550, 1551, 1552], "select": 1724, "seq_plugin": 1705, "sequenti": [1696, 1729], "setup": 1736, "shear": 1707, "singl": 1730, "specif": 1711, "stabl": 1707, "standard": 1715, "state": [1703, 1714, 1719], "static": 1719, "test": 1737, "test_farm_67": 1719, "through": 1724, "thrust": 1719, "ti": 1709, "timeseri": [1719, 1732], "timeseries_100": 1719, "timeseries_3000": 1719, "timeseries_8000": 1719, "tldr": 1715, "turbin": [1716, 1730], "turbine_model": 1704, "turbine_typ": 1704, "two_circl": 1706, "type": 1716, "unstabl": 1707, "user": 1715, "util": [1706, 1707], "v0": 0, "v1": 0, "variabl": 1708, "verif": 1725, "version": 1711, "vertic": 1716, "vertical_profil": 1704, "via": 1715, "virtual": 1715, "visual": 1727, "wake": [1716, 1720, 1725, 1729, 1731, 1734], "wake_fram": 1704, "wake_model": [1704, 1709], "wake_superposit": 1704, "warn": [1404, 1405, 1425, 1443, 1444, 1476, 1484, 1498, 1511, 1518], "welcom": 1713, "wind": [1709, 1714, 1718, 1719, 1723, 1728, 1733], "wind_rose_bremen": 1719, "wind_rot": 1719, "windio": 1703, "wrf": 1719, "yaml": 1703, "yaw": 1734, "yield": [1033, 1039, 1040, 1041, 1069, 1074, 1096]}})